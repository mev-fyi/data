okay so I'm super excited about this panel um PBS is a is a topic that's close to my heart having uh having sort of spent uh about a year in my and a half of my life looking at it and trying to make it become a reality um it's sort of blown into something that uh was much bigger than uh than I could have expected um and now I'm lucky enough that we have some of the people that are working on uh sort of carrying it forward and uh and bringing it to uh to this next stage um I will do a similar thing than we did in the previous panel I do want to have a lot of participation I think this is going to be sort of a forward-looking uh uh chat I've made sure that on this panel we have sort of representation not just from the ethereum ecosystem but also alternative approaches to how to handle um I mean if you get the protocol layer as well as in other ecosystems where the trade-offs that uh that people are making in the designing of these systems is is slightly different and so I think a lot of the conversation will be focused on on trade-offs and focused on like what are the properties that we're trying to to guarantee in um in in the systems that we design and how do we make sure that those properties are good for the users that we're designing them for um so unlike the the previous panel I think it would be quite interesting to hear a tldr on sort of your current role in the ecosystem the part of protocol level Mev development that you're focused on um and then uh you know how how it contrasts maybe in terms of the priorities that you have when you think about designing uh designing these systems um Mike do you want to get us started sure hello um yeah I'm Mike if I haven't met you guys um working on thinking about epbs in terms of how we can bring it into the ethereum consensus layer so I guess some of the main properties we're paying attention to are giving guarantees to proposers that the block they commit to if they haven't seen it in time is is valid and they'll get paid for the the right to produce that block even if they aren't in control of the block contents necessarily um we're thinking a lot about how we can give guarantees to the Builder I think the the low carb Crusader kind of whole Saga showed us how important um Builder privacy is in some contexts and making sure that um that they're not incentivized to go outside of the outside of the protocol to do something that gives them better guarantees um yeah I think that's what I'll say and also caring a lot about censorship resistance thinking a lot about how we can get get strong guarantees about transactions getting included even if the validators themselves aren't the ones building the blocks so hey everyone I'm Alex Stokes uh with the F and basically I'm just trying to make sure that all of you don't destroy ethereum uh they're like short-term incentives are to just extract as much as you can from the system but if we all do that at the same time then you know it looks like we just have like the one super node that we're all battling and now it's just like a tradify stock exchange and we lose all the nice properties that Mike was just talking about that make ethereum really special um and obviously by extension like these other ecosystems that we have represented today so yeah I mean it's very tricky like you know probably what you'll take away from this is just like seeing all these different perspectives and the fact that like there's no like perfect or like you know uh you know ideal solution here especially you know throwing back to stuff's talk a minute ago there's like just such a vast Network and again a lot of people in this room are working towards you know adding to that picture and so you have this like very rich diversity which is really exciting ton of innovation stuff like that uh but then yeah we just have to make sure that uh you know we can keep playing the game rather than uh just play a few more rounds of it hi I'm Sam Hart I work at skip um although prior to working at skip I um worked at the interchan foundation which is a kind of Cosmos focused and I did kind of product development for the whole Cosmos stack so tenorman Cosmos SDK IBC et cetera et cetera et cetera at skip we develop Mev Solutions and kind of more and more we're developing um kind of ux solutions for for users and I still am working on quite a quite a bit of infrastructure throughout the stock so I think I'm on this panel to kind of represent the The non-pbs View and I'll I mean it's going to be very interesting uh talking with everybody else here but Cosmos just comes from a very different place and and has different assumptions and is trying to optimize for different things so you end up describe those things so maybe in contrast the the you know how things are done in ethereum what are sort of the trade-offs that you guys lean more towards on on the solutions that you build um well I guess to your uh to your point in your previous talk um the place that Cosmo starts from is that these systems are going to be inherently political um and they're they're going to be uh kind of divided into very different application functions user preferences like that kind of natural sharding is gonna is gonna occur um and and that's a good thing we should kind of embrace that so that means that the application is going to be able to express preferences over uh you know the application design uh you know all the way through the the Mev supply chain um and really the thing that we should be unlike the ethereum foundation like we are less concerned with a single chain going down that's actually you know they're kind of replaceable Parts in the system and we're designing for kind of like uh aggregate robustness rather than um than any single chain um so yeah that act communication standard super important and uh and actually just kind of listening to user preferences application preferences to to understand what their their needs are cool hello I'm Terence I am from option Labs so um I mostly work on layer one so I am a core Dev so I'm a core implementer so like Mike and Alex said so I turn um their wonderful research idea into code so around like so which typically means that if something goes wrong like people will knock on our door first and then we are the one that gets yelled at right so um so in terms of Epps I'm mostly looking at what Mike and Alex are looking at basically and we deal with a lot of users a lot of stickers about like um I think 35 of the stake is running through prism right now that's the client that we write and so about 35 of the blog is proposed to prison so from our end we look at um for example a rework right we want to make sure there's not enough reward we want to make sure that every block is successful that's why epbs is very important to me because I think that's basically the next step to um better chin um security uh Curious do you have a lens on the the arbitrum um block space uh preference or or are you more yeah so I'm kind of in this like weird position that I work on layer one but I also know a little bit later too because like um of optionally labs pay for my salary as well so so I don't know I mean that depends let me know what have I I should be worrying about from my end I'm mostly commenting on layer one but I'm happy to answer Layer Two questions my name is Alex and I am with Fastlane Labs we are a Mev protocol that focuses on polygon we do things very differently though our focus is primarily on building smart contracts that are aware of the infrastructure and infrastructure that is aware of the smart contracts and by combining those two and having them interact in like an interesting way we've been able to pull off a few things that we're very proud of um on polygon we've built a Mev system that is uh users just don't get sandwiched we've been able to like really build a system that's robust that helps users and that like at this point right now if you're looking at the like the the layer ones like polygon of the evm ones is going to give you the best execution because it's going to be the one where you're least likely to get sandwiched and we're we're very proud of that we also have the unique distinction if I may brag a little bit um I believe and I could be wrong and I think Skip you guys are like this too um we could turn off our relay and our protocol would continue to still work and I think we're also very proud of that like we've we've designed a system where through the smart contracts we've been able to make it so that there's not a Reliance like we get benefit out of some centralized infrastructure like a lot of the other systems because it does help things speed up a little bit but we could still function even if we turn it off and so we're very proud about that but there are some trade-offs to your point like yeah it's it's decentralized into sandwiches you know no Reliance on infrastructure but there's a massive trade-off that we make and that's based on something that's unique to polygon which is the amazing social there what we've found is that validators on polygon will not run sandwich Bots there's not a single one of them running a Sandwich Spot and because of that we're able to build a system that assumes and that trusts that validators won't run sandwich Bots now if one of them ever turns one on that might change things for us because then we would have to start worrying about the fact that that validator might be accumulating stake faster than the others and that might over time Trend towards centralization which is a serious problem how long that would take I'm not sure um I think the EF guys would probably be uh more suited to answer that question than I but what we've found is that polygon is a proof-of-stake network and it's been proof of stake for a long time the validators have been going out raising stake predominantly from institutional investors for a long time and because of that there is a strong sense of like social responsibility like if a validator starts running their own sandwich bot like you can look up like all of the major validator operations on LinkedIn you can find like their CEO's email address you can like email your Senator you know about like hey there's this guy who's like you know stealing money from us it's this validator right here like there's there's a sense of accountability that is a really a result of the way that the polygon validator Set uh was set up that is not necessarily the case for ethereum that's actually the definitely not the case for ethereum where there is a permissionless evaluative set but that being said we're very proud happy of like what we've been able to accomplish in the environment where our trade-off prioritization is different so so maybe like one question here is like on the one hand you say okay you can just message all the valid areas on LinkedIn you're like wow this is like the most centralized thing in the world right like I can just get everyone into a room and make decisions about protocol changes whenever I want um there's sort of this assumption that ethereum works differently that ethereum doesn't have sort of this set of like uh you know operators that control a vast majority of the network but my understanding is like there are still very few staking operators and node operators on on ethereum today and the the proportion of solo stakers is well below 10 if not below five percent is that you know the correct understanding of how the distribution Works what I would say is that on polygon the stake is uh to use like another term It's relatively sticky like once you stake with a validator you tend to to stay with them um so if one validator starts having slightly higher yield than another the the sense that an Institutional Investor would like do like an entire set of due diligence bring in their legal team and like go through that process again it's it's a it's an extremely high friction that's the case on every chain right validators are retailers of trust and that trust is negotiated through sort of contracts and long-term agreements um and so whether you're on on on polygon or ethereum that looks very similar I I want to agree with you but I feel like I might aggrove a lot of the ethereum people but yeah I I'm not entirely convinced that uh ethereum validators would necessarily sandwich I mean we've we've found that on polygon they don't and it would be amazing if ethereum is the same way I think that would be great because right now if I'm being honest ethereum is the worst chain for users it is the most predatory chain it's the only chain where validators are like strongly incentivized and perhaps even will be forced to be maximally extractive for users a lot of the other chains uh have focused on avoiding that and I think one of the the one downsides of PBS is that well yes it does really help decentralization it also enshrines this like terrible user experience and the only way around that terrible user experience at present is to rely on like centralized third-party off-chain infrastructure to have privacy through your transactions and if if if you're correct about what you're saying about ethereum validators I think that would be amazing because I think that would solve a lot of issues so I don't necessarily know that the answer is just to ask all about it is not the sandwich but um but I think there are some like intermediary solutions that are going to help provide sort of better guarantees um I'm sort of curious from from the guys working at the EF what do you sort of see coming around the the curve in the next six months to a year in terms of protocol changes the the at the Mev Booth sort of PBS level what are the main areas that uh that need to be improved upon a big thing people talk about is censorship resistance uh so that was like uh became quite a Hot Topic around the merge uh with uh various sanctions and whatnot and you know I think everyone agrees is a sort of soft spot the protocol today so to the extent that we can improve that you know over the next six or 12 months like you said uh that would be great um it's kind of this thing where it's like uh we even talked about this last night like boost like works just barely like it's it's good and it like Works enough for now and then if anything it kind of buys us time to like focus on uh epbs solutions that might uh you know resolve a lot of the downsides that we see with my Boost today um yeah foreign works just enough that's like really the bar that I try to hit whenever I design anything like just good enough to be possible and a lot of people to focus on other things well it's a trade-off right because like you could imagine we put a bunch of like you know resources into making that boosts and like the auction PBS like really good and we could but we could almost get to a point where it's so good we don't even need Epps and like so this is a funny story like before before the merge I spent like a couple months trying to convince the EF that they should like delay the merge and go straight to like and try and PBS and that like doing math boost was just a terrible idea um no one wanted to do it and so everyone was like no like we want the merge like it's gonna be the next upgrade we're not we're not delaying this and so the Boost was designed exactly for that it's like an intermediate solution that is sort of good enough to keep us going I think the insane thing about it is without that one decision having been made like you wouldn't have all the block Builders are in the room today you know I think we'll have in the next panel uh block Builders well they would be here they just wouldn't be you know we wouldn't have as much transparency into the system right so that's the thing where it's like good to have that boost like it gives us like again like insight into what's happening some and you know to the extent that exists it doesn't form a lot of experiments around or like the ways we think about epbs um just having all this data from like relays and things so like it's good and uh yeah it's good enough right now oh yeah so I was saying like I I'm personally as as much as like I don't like Emily boost I thought it was a very like um it was a very required like step in the middle because without it like we wouldn't understand all this like different type of like attacks that has happened in the few months if we just go straight into Insurance PBS I think like that would have been like a bigger problem that would probably have to do some like crazy hard Fork like in the middle so yeah personally I'm very grateful of like mad booze and because like it basically allow us to learn so much yeah I also wanted to add you asked about like what's coming down the pipeline in the next few months um one thing that I've been working a lot on and thinking a lot about is kind of as we as we do this this blue sky research around and trying PBS and kind of think about the top-down approach of of really fixing this at the protocol layer we also have the advantage of having the relays already running and we have kind of this whole ecosystem in place so we've been working on this thing called optimistic relaying where we can kind of mold the behavior of the relays to look um to kind of both de-risk some of the um de-risk some of the epbs design you know aspects but also to make the relays perhaps more sustainable and um just better at doing better at servicing the builders and the validators so um I guess the the overall theme of the of the optimistic relay roadmap is to remove some of the roles from the relay and replace replace those roles with a like a collateral that that kind of enforces the Builder Behavior at at the at the relay level so I think in the short term that's like the easiest path to both making relays more sustainable and de-risking some of the the epbs stuff but um longer term I still hope that that we go the epbs route but I'm biased so there's a few other like approaches to designing systems aside from PBS right like there's uh there's a Pepsi that's sort of discussed quite a bit and then there's also slot auctions um that are sort of another sort of design category um I'd love to hear a bit of a discussion or debate around like these different approaches and which ones are the ones that you know are worth exploring more than others yeah I feel like we almost need Barnaby up here um okay well one thing I would say about the slot versus block auctions um most of the epbs designs we've been kind of toying around with would probably work with both right so um this payload timeliness committee thing which we published recently like it's not necessarily binding the we don't necessarily need to bind the Builder to a specific block we could like bind them to a specific slot and and kind of have that design space open up so I guess I don't see it so much as like an either or I see it as they have some synergies but um I'll have Barnaby talk about Pepsi a little bit well in the meantime maybe I can say something yeah try again okay yeah it's working go ahead um yeah so I've been probably doing the most work budding PBS at the EF because I've had some concerns notably around what the questions that I'll discussed now like this idea of enshrining the market structure of having proposals and builders that to me was pretty scary I thought the whole block auction was too close and we have results from Queen tools from the special mechanisms groups guys who tell us that it might be the case and so while I was thinking about it actually funny story I read this atom 2.0 Paper that Sam was the lead offer on it kind of blew opened my mind that there was a lot of things a lot of like a much bigger design space than I thought to design this mechanism and yeah coming from this discussion there was this idea of Pepsi which is enshrining besides that validators can enter into commitments but not in training the specific shape of this commitment so not enshrining that it has to be the whole block it has to be the way that the ethereum protocol dictates it like you can enter into any kind of contract that you want I don't know that it's workable there's a lot of trade-offs with it like it's it's a much more opinionated version of of a market let's say but I feel Cosmos is heading towards and with this idea of yeah it's more adaptable like you can really have these Active Solutions of Designing yourself what your chain looks like I don't know that it's fitting for ethereum but it really came from his place of saying yeah maybe the shape of Pepsi is just too cores and we need something that's a little more flexible there there are like some there is a latent structure to ethereum block space that's like starting to form so um I mean the kind of CR effort is in some ways a kind of modification or um like retraction of part of PBS and then the um the whole kind of roll-up repricing is is another kind of acknowledgment that okay we're we have this class of transactions and and we want them to behave in in a certain way so um you know if you were to go down a Pepsi route you know you might just kind of say the block space is is going to be reserved or or kind of delineated in a specific way instead of doing everything by market pricing and I'm not an ethereum person so I have no opinion about whether that's good or bad but just kind of hypothetically that's what might happen if I'm being honest um when I hear Pepsi I just think of the drink um are you just for for the people uh who might not be like on ethereum all the time what does Pepsi stand for uh protocol enforced proposal commitments got it thank you it's a way to yeah I mean it is what it says it is but it's basically a way to kind of um uh resegment block space um and that's done on the on the validator level I guess like from my end I'm mostly looking at implementation so for me I want something that's implement implementable shippable we think like the next like few months just like I'm personally looking at the main net and I see a very slow blog I get really worried and it's gonna get worse with more validators in the queue so I'm I'm so I'm mostly looking at Short Term and for short term it's definitely yes I have a question the maybe we don't know the design mechanism but do you guys have sort of a an outlook on whether Stefan's more complex picture becomes simpler with epbs or becomes even more uh interconnected with more actors like abstractly like a good epbs will probably like not touch most of those things like it will just actually have the one abstraction and I would kind of consider it to like be uh worse PBS I suppose if it like touches more stuff if that makes sense um yeah but that I mean in sort of the same breath it's like epbs whatever that looks like should like take this reality into account like the picture we saw is happening and it will only get more elaborate and so like that's a reality and like anything that we put in the protocol and this is part of why we are so careful with like shipping something that's actually a shrine it could be the case that you know we just like copy paste my Boost and then you know six months from now everyone's trying to sell gas Futures and like no one wants what we have right so it's like something you have to do very carefully um yeah in general when you've been trying something people can depend on it and and build businesses on it build additional layers so uh I would presume it it could catalyze some increase in complexity there I would also say if if anything I feel like Steph's picture kind of implies Pepsi solution might be better because proposers could commit to much more flexible things than necessarily just a full block or or even a full slot like they could I kind of like to think of Pepsi as as an enshrined eigen layer so they could commit to only including a price if if an oracle has has some value less than than 100 or something like that um and that that sounds kind of like more like the intent structure than the actual like full transaction structure so I think if you know if we need that level of flexibility at the protocol level then then Pepsi might be the right way that being said I also like thinking of epbs as kind of trying to firewall off most of the complexity from the protocol like we mostly care about um stability like liveness safety of the of the L1 and you know to the extent that we can kind of firewall off the complexity of of solvers Builders Searchers and all their interactions and just have have kind of the simplest way to get all of that on chain like a dumb pipe essentially um I also see the value in that too so I think that's part of the trade-off it is it's still the plan to have validators be able to to add like a couple transactions at the end of the block that that was my understanding of the kind of like censorship resistance solution which kind of is a form of Pepsi in a way yeah so I guess the the design space isn't either epbs or Pepsi right like the um the kind of inclusion list idea is a a specific case of the constraining of the Builder's actions in some way so you can specify something about your block or about the next proposer's block that the the Builder who builds that block has to has to conform to um in the inclusionless world that's enforced at the testing committee versus Pepsi it would be kind of enforced at the validation like the block validation level um but that feels more like an implementation detail so yeah I I agree with you there I want to I want to put turrets on the spot and I know you tried to duck your representation of arbitrum uh in your introduction um but yeah I mean one of the things that have been discussed is okay what are layer twos we want to do a sequencing is PBS model some way that they are twos can achieve some level of sequence or decentralization what do you think the future holds there both you know maybe from the arbitrary perspective or more from Roll-Ups generally sure I think I will start maybe this is a spicy take right like I think like decent price sequencer is I know this has been a lot of talks that's a lot of people talked about but like as a layer two sorry it's not there to handle but I'm getting there but like decentralized for approval is a lot more important in a decentralized sequencer so like we have to understand what can the sequence to do what can the secrets and not do right like sequencer can order your transaction it cannot censor your transaction just you can still submit it through like layer one inbox so the only thing you can do is really just to reorder transaction to do some Mev stuff right versus like validator can actually like uh submit like an invalid transaction and steal something and then and then like basically we draw to the one right and unfortunately in the current state of Layer Two like um we either have um permission validator or like the centralized keys or and then a lot of the contracts their upgradability sucks right so with that being said I I think like decentralized for operating is a lot more important for Larry to landscape so let's jump into decentralized sequencing right I think like um a lot there too these states all have doubts right so at the end of the day it's basically the doll proposal like what does the doll wants to do do you um do you want option or do you not one option if you want option what type of option you want so I look at the centralized sequencing us like basically just like a bunch of nodes that come into agreements of the order policy right I think from the arbitrum standpoint I don't want to speak for arbitrum of course or offering labs and we have seen that we don't want to see Mev so this has been kind of the day one standpoint that we don't want to see Mev we don't want front running right but then now since I think early February we release a proposal on time boost meaning that we are waiting to auction of background essentially having spam you essentially bid so therefore you have some sort of background in ability right and so yeah so there's definitely a lot of excitement coming out there I think there's two versions of time boost I think that should be likely um in the work in the next few months and then in terms of decentralization it just comes on to okay how do they come to consensus on what the ordering bid is right you can have a bft style you can have a threshold Community style you can even have like you can just have like a dow like a bunch of sequencers and then they take turns and stuff like that so yeah that's the case of it okay maybe one more question from the audience if there's any uh hi uh those questions uh more directed to Alex and Mark but anyone's welcome to chime in uh so I was wondering about uh what your thoughts are on multiple concurrent block proposers and if that will be practical in ethereum going forward or if it's like a consensus overload yeah I kind of lean more towards the ladder like I need to see a concrete proposal or a design but like one thing if you just imagine like you know rather than one person's sort of uh racing to make a block now like five people are then that just like has this additional like load on the network that we don't really want um you could try to get around that you could have like maybe just gossip headers or something um but yeah I mean like why do we really want this it's I guess for like censorship resistance okay so like I feel like there's other ways to do this and still retain this like sort of sequential proposer ordering and it's like kind of an equivalent design uh assuming like you know inclusionless star shipped TBD there's also have some questions there so like you know it's not like a silver bullet um but yeah it's um I mean it's definitely an interesting like research Avenue for sure and yeah I mean definitely if anyone in this room is interested uh to like look at it from a research perspective like please join the conversation yeah I think my intuition here is like epbs feels like it's um kind of adding complexity to an already quite complex thing and I think people have have voiced that concern just as far as like the way the protocol works now is you know there's kind of the the fork Choice Rule and then there's this Casper thing that finalizes behind um adding adding epbs and Med burn inclusions lists like all of these things kind of start piling up um and so kind of from an aesthetic argument perspective I also think it's worth considering and Francesco he he's not here but um he talks a lot about kind of maybe prioritizing single slot finality and kind of almost not not starting from scratch but but rethinking the consensus layer at a more um like a bigger a bigger change to the consensus rather than doing these iterative things um I guess the trade-off always is is development effort and and how feasible these changes are so I think multiple concurrent proposers would be a huge paradigm shift that would take a long time and as the protocol like starts to ossify would only become more hard as As Time evolves so just leave it the eigen layer to implement all the soft Forks you can just have all of them running in parallel like that sounds fine to me I don't see any issue there what could go wrong yeah let the market solve it um do you have any kind of sense on if Epps would change the model of ethereum um so instead of it being burnt on on user fees would you kind of take some of the the money which currently goes in the proposes pocket and and kind of distribute that more fairly across the network um would it would it change anything in the model could you repeat that so would epbs change um I guess the burn model of ethereum so instead of um all that money coming from a builder and going to the current proposer um would you kind of all right it was like meth burn or something like yeah yeah hot takes on that burn um I can give a quick quick hot take um I think Mev Byrne I've gone back and forth on it um I would say Justin and dominthe are the two like real experts in medburn so if you want the real juicy details I've talked to them but um my initial problem with Mev Byrne is that it it sort of takes away some of the agency of the validator the reason for that is in order to like I guess quick overview of Matt burn is instead of the block that pays the validator the most winning the auction it's the block that burns the most Mev that wins the auction and the idea here is as as Joe mentioned it redistributes the the kind of economic reward the economic Mev over the entire protocol rather than just giving it to the single slot proposer my initial issue with it was yeah it takes away the validator agency because now there's a minimum price for each block that actually becomes part of the consensus layer and so anyone who builds a block at home they would if if their local block doesn't meet that minimum value then they have to either pay to to subsidize that block or they have to miss their slot or or you know actually Outsource the block to someone who can build a more valuable block so that was my initial problem but Justin's response and I think pretty valid response is that if we can have inclusion lists in other kind of ways to constrain what the Builder does then maybe the full like validator agency isn't actually something we need so I've gone back and forth I think Matt burn is cool now I'm team of burn so you want to say I have a I have a hot take on Matt burn which is like if you actually reduce the amount of contention rather than like try to burn it you might actually end up at the same result but uh without as much work um and so very simple way to do this is like okay well what like over maybe like 30 percent of like Mev revenues the validators just come some like uniswap LPS and so you know uniswap is now shipping you know new Protocols are promising to expose less of that Mev and so is that the right light lit is that the right uh layer I wish to solve it or you know there's this promise of a lot of the activity moving to uh layer twos and the more that as an ecosystem we leverage external computation to be able to do this Market making this the solving the more the idea of liquidity sitting on a single chain becomes sort of irrelevant and the liquidity is sort of amorphous or ambient as some people would like to to say it um in those scenarios there's a lot less contention on the like layer one settlements because you're not competing for specific uh State access and in that case do you really need to be working on on that burn or is that sort of Superfluous as a complexity for the protocol yeah I think at the end of the day it kind of comes down to what is ethereum's block space for and it's supposed to be for everything but you know some things seem to be more important than others and met Byrne seems like a good solution to me only because it uh it's kind of a non-solution you know you just like give it to everybody um and uh if you're actually like differentiating block space further through layer twos or whatever then uh you can do all kinds of crazy things with Mev we have a ton of experiments in Cosmos where Mev goes back to LPS or Mev goes to a treasury you know a dow treasury that that votes on where it goes or or whatever goes to subsidize uh validators in the in you know the tail end of the validator set all right I'll call it there for this panel big round of applause 