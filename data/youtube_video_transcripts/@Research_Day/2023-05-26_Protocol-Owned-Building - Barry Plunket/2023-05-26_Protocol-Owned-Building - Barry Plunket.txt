foreign my name is Barry I'm one of the co-founders of skip we build Mev infrastructure and protocols for the cosmos ecosystem and for app chains and roll apps more broadly I apologize for changing my talk last night I was going to talk about cross-train Mev and then I saw that everybody else was talking about crosstrain Mev and I realized nobody was talking about app chains and that's mostly what we do so I figured better talk about that in this idea that we've come up with we call protocol own building which is about sort of the vertical integration of a protocol into its block building process for many many reasons some of them being ux some of them being Mev and we're going to talk a little bit about a product that we're building around this idea but the purpose of the talk is really to get you guys thinking about the kinds of things you can do with the app chain stack so many of you are much smarter than I am in this room so we're going to talk about what skip is doing but I really want to encourage people to think about when your application can be very opinionated about how its blocks are built what that allows you to do in terms of building truly better applications I think it's generally underexplored right now but but something that we believe very fundamentally at skip is that one of the best reasons to build your own blockchain for an application in the way dydx is doing or osmosis has done or or many other roll apps are doing now is that it allows you to to control Meb in new ways that are just not possible when you're on a more generalized platform so we're gonna talk about why we've come up with these ideas around protocol and building uh and the setting that we operate in and then what our tool chain is which I think is really interesting and then just walk through the road map and talk about where it is today and the kinds of tools that we're making available to app trains and roll-ups so the motivation is what we call Sovereign Med that means a bunch of different things but basically app chains have given us this list of kind of extreme demands for how they want Mev markets to operate on their chain so first they want to be able to control who profits off of Mev so in many existing Mev systems on Solana or ethereum the ultimate beneficiary is the validator Set uh on the proposer of a particular block uh in particular but the chains we work with they want Mev to go elsewhere uh they wanted to go to LPS if they're at exchange they wanted to go to the community pool they want to be able to burn it they want to be able to give it to Smart contract devs even if that's not the most well-advised thing in the world but they have these really strong stories these reasons that they are unique that they have built every inch of their stack around and they want Mev to also reflect those reasons the second thing that they want is no centralized off-chain block Builders they don't want any one party to be able to build an entire block by itself and that includes us for those of you who are familiar with our journey our first product was basically a centralized block Builder that we shipped as a service to five ten different Cosmos chains so it required them to trust us and it also required us to run a bunch of infrastructure but another way of thinking about this is that app chains and Roll-Ups they want something that allows them to start recapturing muv right away like batteries included they don't want somebody to have to spin up these complex off-chain block Building Systems if there are a few Searchers on their chain who are sophisticated enough and more familiar with their protocol that they can extract them maybe they just wanted to to just just work start um and then the second thing they want is they wanted to make a lot of money obviously and but they don't want to make money in bad ways so they're there there's these broad Notions of what constitutes toxic Mev around front running or sandwiching generally just requiring users to pay their worst price possible um and what we've seen is app chains really they don't want this probably not surprisingly they want to provide a good user experience to retail users who draw other kinds of users to their platforms and then we also want these things to be censorship resistant so they don't want the proposer to be able to enter into off-chain agreements with other parties that may pay them directly and undermine whatever kind of Revenue split that they have come up with or desire as a part of their protocol they they want that to kind of be off the table so they don't want folks to be able to for example censor bids in an auction that we might run and then lastly they want this to be uh uh resistant to Mev ceiling so they don't in addition to it maximize Revenue they don't want validators to be able to just copy Searcher strategies so pretty simple list of requirements uh obviously hard to to get all of these uh but we work on systems that that work up the stack and try to give them more and more of these things and can work as soon as possible so the setting is the cosmos ecosystem which some of you are very familiar with some of you less so uh it's this ecosystem of many different blockchains all of which have the same underlying Technologies they use tendermint for consensus uh the implementation is now called Comet bft for legal reasons uh they use the cosmos SDK to actually build these applications and and for function is the VM a lot of times with various customizations uh and then each of these chains is is built as I've implied to do one thing and do it well um they're really optimized top to bottom to be purpose-built uh and so that means sometimes they're they're Dex chains like osmosis there are these chains are trying to be everything to defy so injective say dydx is now launching a cosmos chain and they're nft Marketplace basically any application you can think of people are trying to build blockchains to emulate them uh and but we we want to work on Technologies and ideas that we think can generalize nicely to any kind of of chain that has a permission round robin proposer set and fast finality Tireman is the best contents algorithm for this today so I'm gonna talk about the interface between tenement and uh the cause of SDK or the application because I think this is this is really critical to understanding why app chains can give developers better tools for integrating consensus into the block building process so uh this is ABCI 1.0 ABCI is the application blockchain interface and basically what happens here is tenorman is responsible for consensus the application manages state and tenement is really dumb it doesn't know what the application is doesn't know what the application cares about or wants just come to consensus on a set of transactions and then once we've come to consensus we temperament gives the application those transactions one at a time so there is not much opportunity for tendermint to or for the application to actually express any kind of block building preference there's not an opportunity to do what we're trying to do which is vertically integrate the protocol into the block building process it's just very dumb but thanks to the work of informal and a lot of leadership from the osmosis team there is a new version of this interface coming out that allows a lot more sophistication that allows the application to actually be very opinionated about what blocks are valid and what blocks aren't based on the transactions that they contain based on the ordering of those transactions based on any rule that you can come up with in this framework each of these steps is kind of important so I'm going to spend a little bit of time on this the first one tenurement pool prepare proposal has a bunch of transactions and it gives them to the application and it says is this okay can I put these into a block or a candidate block and send it around to the rest of the network application has the opportunity then to return different transactions new transactions reorder them apply any kind of arbitrary rules it wants to and give them back and then in process proposal once the proposal has been gossiped around to different validators each validator has the opportunity to ask the application is this okay did this validator create this block according to the rules that you wanted them to so does this meet whatever your criteria are so if you're a DEX for example you could say does this block actually have sort of global clearing prices for all assets and if not we can reject it as a part of consensus we can tie liveness to the quality of our block building process if we want to and then during the voting phase of consensus the validator set also has an opportunity to attach additional votes or additional data that's this extended vote verify vote stuff to their votes on a block so what that means then is that when there's a quorum and the proposing validator for the next block is making a block we can guarantee the availability of that data we can guarantee that when the proposer is making that next block they have access to two-thirds plus one's takeaway of data which is going to be useful so what we try to do here then is build um a general system that can just be plugged into any Cosmos SDK chain off the bat and hopefully in the future other kinds of blockchain uh sdks that allows them to capture Mev right off the bat so the very first version of this just uses this prepare proposal phase where we just make the mempool function like an auction so in this case we add a native bundle type transaction so Searchers can specify a bid that they want to pay for top of block and then a bundle of transactions that they want to include and then during the block building process the validator finds the highest one in their mempool pulls it out puts it at the top of the block and in the process proposal phase we make sure okay is there only one top of block transaction there so what does this give us it just works which is nice um we don't need to run any of structure nobody's running in structure you have immediate Mev recapture on every chain that runs this but it's also bad um it's not censorship resistant so the proposer can freely just censor bids if they want to we have no guarantees about them not doing that we don't know what was in there mempool and we can't credibly direct Revenue away from the proposer as a result because they could just enter into some agreement with someone and then decide oh I actually didn't see all of those High bids and it's also not a movie stealing group so but we actually cut this version today I think um so pob 1.0 is out it's live it's going to be integrated with bear chain and osmosis in the next couple of months and then probably on many other Cosmos chains going forward so this is going to be a replacement for a lot of the skip centralized block building in these blockchain ecosystems and the nice thing about this is you may be thinking okay well like in ethereum all these validators then are going to immediately go back to ceiling Mev Cosmos validators uh have a nice social contract with the chains that they operate on and we have done a lot of data analysis including over the period of time where Tara was very active looking for any evidence that that even during those extremely uh lucrative times is there any misbehavior and we've really found very very little um um so we're not super worried about this being an intermediate solution and it's something that that gets These Chains started but we want to make it better so we are moving this auction that we run into consensus to give it censorship resistant properties using this vote extension stuff so when I'm voting on a block now as a validator I'm going to look in my mempool and I'm going to see these auction transactions and I'm going to pick the one that has the max bid and I'm going to include this in my vote extension and then what that means is when the proposing validator is building their block now in The Proposal we can include each of those transactions and bundles and bids that came from the Quorum of validators that we know had to give this validator these votes because we have gotten finalization on the previous block and then in process proposal we can guarantee hey the validator actually ran the auction correctly so we can't guarantee with respect to 100 of input bids but with respect to two-thirds plus one we know that this auction is now Revenue maximizing we know that we've done a pretty good job and we we can't guarantee censorship positions of a higher portion of these without affecting liveness of the genes but that's something that chains can configure so it still just works but now you can actually direct Revenue wherever you want um and now it's also censorship resistant so validator tries to enter some kind of off-chain agreement say they'll take a lower bid from someone under the table that pays them more directly well now we can actually catch that in consensus and prevent that block from ending up on the chain or punish the validator after the fact if we wanted to but right now it ties directly into lightness so if the value tries to do this we just skip them as proposal we move on to the next proposal it's an invalid proposal so some problems with this still are that it's not Mev stealing proof so uh the validator could alternatively look at whatever transaction whatever bundle paid them the most and just copy those transactions right um and then they have to bid higher so the chain still gets higher Revenue but now the Searchers are having a shitty experience and potentially this is a centralizing force it's also higher latency so because the bids need to be in the available during the voting phase of the previous block as a search or you're committing to your bid for a longer period of time which if you're trying to do sexdex ARB is not an enjoyable thing so what do we do well for now we ignore that latency problem uh and we just encrypt the bids and we have the chain run a dkg as a part of consensus as well so when we're doing vote extensions we have we have visible bids so each validator can still pick the highest one out of their local mempool but now they they actually don't know what the transaction is uh they don't know what the Searchers bundle is so the proposing validator can't do anything except for pick the highest one and just leave it there foreign during the voting phase on the Block each validator also contributes their decryption keyshard for the key at that height and then once we have two thirds plus one we can decrypt the top transaction in The Proposal and run the proposal as normal so now we are Mev stealing proof or censorship resistant we can direct Revenue anywhere we want and it still just works which is really nice there are some other drawbacks for these chains which is that running a dkg and consensus is kind of a pain in the ass requires a lot of bandwidth and it's higher latency and potentially this is not Revenue maximizing either because we couldn't encrypt the actual bids so we have a first price auction uh and people aren't bidding honestly for us so to give some sense of where we're at the mempool auction is done the consensus auction will be done in about a month and a half and then the encrypted auction we're going to be working with the osmosis team uh Implement fervio which I think the anoma folks are here today developed uh and that'll probably be available for Cosmo chains and four to six months so this is going to be the reality for app chain Mev which feels pretty good um it's not a full block building solution yet so that's another problem with that um but it is a really really strong starting point I hope it demonstrates that there's a lot of interesting things you can do with Mev when you when you have better control of your application from the consensus perspective and then beyond this mostly in a design phase but the thing we're increasingly looking at is trying to attach a very very fast very dumb side chain to each of these chains that the validator set runs that can just run a very simple commit reveal scheme for this auction we can finalize it more than twice the speed of any of these chains because again it has to do very very little and it doesn't even have to run the dkg we can move the reveal step out of consensus and just move it on to the Searchers being responsible for revealing their own bids this is nice because we can be very flexible with how we integrate it so it can be a commitment that a proposer enters into themselves it can be a commitment that the entire validator set of a chain enters into and that we require as a part of consensus so there can be aliveness dependency or not a liveness dependency and it's something that the chain can then add additional kinds of commitments to that they might want their validator set to agree to it's like every chain having its own little very fast Beacon chain and what's tonight about nice about tenurement and the cause of SDK is we can we can run this very easily as a sidecar process um this is probably where we're going isn't nice because now we can actually run a second price auction we can get honest bidding as well so we have a lot of really nice properties for Mev the drawbacks though are that this requires pretty deep integration consensus you only have a single chains perspective now if each chain is running their own commitment chain for Mev and that's you know I think a good place to stop for future work and then where we'd like to go is to see uh this kind of commitment surface area be available for chain Center into as a part of consensus or for Val individual validators trying to into on a per validator basis and to potentially link together these different side chains so you can have a single chain where folks are able to make credible commitments to one another using commit reveal schemes um I think the other thing that we'd like to do though it's really not necessary for app chains and Roll-Ups today is to grow from this being a system that is mostly facilitating top of block bids and single bundles per block to something that is can support whole blocks when it's required right now the vast majority of Mev on app chains is just captured with um a single bundle there's very very little that that slips through but you can imagine in the future when these systems get more complex and we have more Revenue moving through them that will change but like I said I I hope that this gives some alternative perspective to the flexibility that you have around Mev when you can actually take more control of your stack I think there's a researcher today who was giving a talk about um Matthias about how you can order transactions for a DEX that guarantees that you have minimized Mev within some bound and can also verify it so that's exactly the kind of thing that you can do when you have control of consensus you can actually say okay we're going to order transactions for our decks firstly so we minimize Mev and then for everything else and so I think there's a big design space here that you can access around just building Mev aware blockchains as opposed to trying to um attach any of the awareness to protocols after the fact which I think is pretty interesting I will stop there foreign [Applause] 