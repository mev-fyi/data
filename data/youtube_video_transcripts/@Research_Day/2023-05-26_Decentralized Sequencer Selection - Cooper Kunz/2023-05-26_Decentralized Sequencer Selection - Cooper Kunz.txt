foreign from two shared sequencers I'm going to talk about decentralized sequencing from kind of the other side of the table uh those familiar with Aztec uh you know we're not going to talk too much about Aztec as a whole you can figure that out on your own but we're going to talk about how we're thinking about sequencers um and yeah I'm a product manager focusing on decentralization I am not the right person to ask your zero knowledge proof questions too unfortunately um but we've we're kind of late in the day uh who knows which of these is not a real thing uh feel free to shout it out if you Mega Planck is right um if I had some swag I would give you some but this is kind of just my Ode to how good we are at naming things I guess in the ZK space um and we've been hearing a lot of serious talks for a while so I figured uh it's good to make fun of ourselves a little bit uh but yeah Mega blank doesn't exist yet uh so maybe someone will go invent it after this but we'll we'll see um and yeah so we're originally calling this Aztec 3 uh We've since rebranded it to just Aztec uh so when we talk about Aztec we're talking about the roll-up as a whole uh and if you look in our docs or our code base it might still say Aztec 3 laying around somewhere uh just to give you guys some context before talking into our sequencer specifically um it's a new ethereum based EK roll-up uh we have both public and private state which is unique to us and very interesting so you can consider that a new kind of Mev Challenge and a block you could have some transactions that are public and some that are fully private as well um so yeah that's super interesting uh we're building a rust-based DSL called Noir it makes it really easy to build ZK apps with it's proving system agnostic so it's not just relevant for Aztec if you're interested in ZK I highly recommend looking at Noir um we are working right now on our execution environment so we have a local developer sandbox that's coming soon I would say in the next don't quote me on this month or two so sometime this summer we will have a local experience where you can write your own Noir contracts and deploy them to your own machine just to try to get you know developer feedback as early as possible in building our execution environment uh but yeah I'm here today to talk about sequencer selection so we currently have an RFP a request for proposals live on discourse.aztec.network it's live right now so if you hear this talk and you're like these guys are stupid this is a terrible idea uh please go tell us on discourse we would we would love that that's kind of the point of us being here today um and yeah so I'm not going to talk too much in depth about ZK I highly recommend getting on our discourse if you do have questions about that or Noir uh we also host office hours every Thursday for people interested in Noir and building ZKA applications but aren't really sure about where to get started or what the tech stack looks like or what to use so yeah we'll talk about Aztec um oh yeah this is just kind of a high level overview of how we're thinking about public and private State and why we think it's valuable to build a layer 2 roll-up that has both um so these are just some of the use cases helpful for context if you're looking at this and be like why would they go so far out of their way to do some of these things uh we think that there's a kind of huge unexplored design Space by it by having both of them in the same roll up with composability um so this is you know high level goal of what Aztec hopes to enable with the with the new roll up uh and kind of helps frame you know how we're thinking about these things and so key questions and considerations for us as we were building our L2 we were thinking about you know for those familiar with Aztec connect we used to previously have one sequencer uh Aztec connectors since since deprecated we're no longer putting any resources to it which is why you can't deposit any more funds uh We've committed 100 of our engineering resources to what was called Aztec 3 but it is now just you know Aztec um and so there's questions that you hear in the kind of base for solvent and roll up debates right like you use L1 versus L2 to coordinate your sequencers um do you build the marketplace kind of into this design or assume that someone will emerge and do that um yeah specifically an Aztec's case uh how do we optimize for censorship resistance and then what kind of unique challenges or requirements does something like Aztec have versus other uh layer choose um you know specifically we're we're choosing to optimize for uh censorship resistance and you know potentially privacy uh with the trade-off in in our case being speed uh we're not going to be the fastest Network out there uh by any any metrics probably um but yeah so just to talk in depth we have three proposals that are out there so far uh mostly from our core team but we're also working with a variety of people you know many in this room some of which you probably just heard from uh to get their proposals as well uh but I'm going to talk about the three that are kind of out there and being debated right now um I'm going to talk about the high level trade-offs kind of design decisions uh for more in-depth explanations these are all on our discourse right now and for the next two to three weeks we would love for you guys to come in and roast them or give us feedback um but the first one is uh proposed Rebuilder separation with a Federated proving network uh the idea here is that you have a proposer suggest blocks on the diagram on the left hopefully you can see it each box can block a proposal contains a transaction order a quantity of tokens to be burned as well as a fee split and so Aztec has kind of a two-part architecture where you have a sequencer that's responsible for basically getting a roll-up produced and you have provers who are responsible for doing very small zero knowledge proof computations those proofs end up in a kind of giant tree structure of zero knowledge proofs and that giant Merkle tree of of proofs ends up in the role of itself and so this separation of concerns here has a proposer saying hey if this is the block that ends up getting put into the roll-up this is how many tokens will burn and any fees generated or any revenue generated will split this percentage with you and so you have all of the computers out there doing zero knowledge proofs we're expecting this to be you know hopefully a very large number we're trying not to centralize around largest hardware for proving systems and so hopefully you get the provers those actually doing computation and working on zero knowledge groups voting on which block they think is most valuable to the network are valuable to them and eventually it kind of consolidates on one obvious one that has the most votes from the most provers and that's the one that the proving network will end up working on and you know end up in a roll-up and so by having all the provers kind of commit to which block they think is the best and in the best case you know this is what's going to make them the most money probably you try to reduce as much redundant work in the The Proving Network as possible um and so in this one you can see block a had you know X order the fee split was 44 percent uh and the burn was 4.4 so like that's pretty good but it looks like Block B has a burn of 2.4 and an 80 fee split and so like if the proving Network votes win which you know Block B is obviously going to win and be included earlier in the chain um and so this is almost like purely an economic mechanism for determining what the next roll-up or block is going to be right and so it has really strong economic guarantees around liveness you lose a lot of money basically if nothing gets produced and you can guarantee that at least like one proposal will be put out there that burns some type of tokens right so you at least have a minimum incentive to keep the chain going um and it has you know Mev and auctions and all these marketplaces all these good things kind of built into the model so it's it's very transparent of what kind of systems are like secondary tertiary effects will emerge from this type of proposal um cons it could result in you know a kind of more centralized block production uh scheme Whoever has the most money who has the most sophisticated searching algorithms Etc uh could end up winning in a proposal like this uh but this is you know out of The Proposal I'll talk about today this is on one end of the spectrum that's like let's use a purely economic uh system um and coming from a company like Aztec who does a lot of work on zero knowledge the idea of building less cryptography systems is somewhat interesting to us uh having like an economic solution to this problem is is kind of fun for us to work on um but the next two proposals I'll talk about are kind of on the other end is like how do we design cryptographic mechanisms that give us different types of guarantees different trade-offs um but yeah again this is on discourse please read the full link let us know what you think um obviously very inspired by a lot of the work people here have done um so this is a pro proposal that I actually worked on called whiskey it's a variation of the Whisk ethereum Beacon chain proposal um basically why don't we just use what wish does um and so the way that this works is you use a one to coordinate people stake some tokens in a randomized Tracker once you get enough trackers you basically have some type of you know kickoff ceremony um to determine kind of an ordered um and then every 24 hours you actually have the current sequencer shuffling the list of all the trackers so you get some type of inherent Randomness in the shovels and then they post proofs of Shuffle to the L1 itself which get verified and you can actually make sure that like the original list is not the list we're using and then they Shuffle that list for 24 hours and then you kind of take the ordered list for the next 24 hours of block production um so one of the nice things about this is that it's pretty well studied there's reference implementations out there in Rust and python so as someone who has to go build these things you know that's super appealing um it is generally capitalally inefficient it kind of begs a Marketplace to establish um and this all you know obviously doesn't have any type of bidding or proposals it's almost entirely using a minimum stake in Randomness to determine who gets block production rights um so I would say on like the very other end of the spectrum from you know the previous proposal it's like do you want a pure cryptographic kind of random solution or do you want something that's Market based and uh you know digestible in that kind of way um yeah and uh the idea of shuffling might be unnecessary in Aztec's context I'll mention it a little bit in the next slide uh but that is maybe a good solution for ethereum but might not be a good solution for Aztec um but yeah this is another proposal again on discourse if you want to read more and proposal 3 is affectionately named cookie jar actually from from Zach who is one of the co-inventors of Planck um and he actually proposes using L2 to coordinate our sequencer selection rather than L1 and it uses Noir our programming language to actually have uh both public and private kind of inputs to our own sequencer selection process and so this one's kind of overlapping where uh you put down a Tracker and you put down a bid on uh the L2 your bid will be shielded by using a private Noir contract so no one actually knows what your bid is and we'll use some Randomness to give an approximation so your your bid's not exact it's within a range and then we'll sort those kind of randomized bids and you'll end up actually paying what your original bid was but we use the randomness that gives some kind of thing to guarantee that the highest bid's not always going to win um you know maybe the second or third highest bid ends up winning in this type of proposal but that's still more Capital efficient and then the last proposal that doesn't address like bidding or auctions or marketplaces at all and so this is kind of a middle ground between both you get randomization you don't get like economic guarantees that always results in the highest bidder winning uh but it does have a trade-off where you do use L2 and there's kind of like a self-wrench preferential problem of like okay do we really want to use L2 to coordinate L2 sequencer like what if something breaks where do we go uh what is restarting that kind of look like um and so I'd say that this one fits pretty nicely in the middle of the proposals where it does have Randomness it has some types of guarantees around the same person not winning and block production rates every time um but you know trade-offs of using L2 versus L1 themselves and so hopefully this kind of Paints the spectrum of solutions of how we're thinking about the problem um I would say Aztec is hopefully uh we are planning to be decentralized from day one we do not really believe in Progressive decentralization uh particularly with the use cases that we believe and so you'll see us discussing debating these and building them and we will not launch until these are ready unfortunately um so not just like a research program or a problem uh we're planning on Building Solutions to these in the next three to six months um so yeah super super interesting other things we're actively working on and talking about uh every single discussion we have as a company's uh in discourse which is really nice uh we don't have anything going in on our slack or making decisions that you guys don't know about um current conversations even you know these are all just conversations taking a screenshot from the last day uh we're talking about fee management account abstraction uh recursive proving systems how do we actually deal with the public private virtual machines um specific like specs around utxo sets um and then you know historic State Etc uh our current thoughts like latest as of yesterday updated information is all in discourse so if you're curious about what we're doing um check it out and then right now we have our sequencer RFP out we would love your ideas for the next two to three weeks after that we'll worry about upgrading mechanisms and how we Fork the L2 potentially and then after that how we kind of deal with that Federated proving Network and proof tree generation um but yeah so these are what we're working on and thank you so much for your time [Applause] 