foreign so originally I was going to give a talk on Suave but John told me that he had said everything that there is to say about suave in the public domain already so we're going to be talking today about trillion dollar Meb questions um I'm Robert a lead product I'm a steward at flashpots we think that these are trillion dollar Med questions because they inform the structure of the market of Mev and we think Med is going to be at the core of cryptocurrency um so I won't tell you what the trillion dollar questions are we'll go through them as we get to them to keep a little bit of suspense but uh number one so what is the privacy and efficiency Frontier these are slightly outdated slides thus the double and unfortunately um so what do we mean by privacy and efficiency Frontier so first place to start here is that privacy is needed to decentralize the Mev supply chain if you think about improve of stake ethereum today validators want to Outsource their block construction to specialized entities that are really good at creating the most profitable block possible but these parties called Builders aren't willing to share their blocks in clear text with just any validator because any validator might front run them they might steal their Mev they might unbundle them or do other malicious things so what this means is that Builders if they're required to send their blocks in clear text to validators would only send them to trusted validators large ones ones that have reputation your Lido Finance coinbases of the world and in order for small validators I have access to the same mevs large ones you need some notion of privacy between Builders and validators that's you know one example and this comes up all throughout the Mev supply chain so users and Searchers can't collaborate without privacy searches and Searchers decentralized building privacy is at the core of the Meb supply chain right but it comes at the expense of efficiency so if you have privacy how do you optimize your Mev extraction how do you make an ARB with only a limited set of information how do you merge a block without knowing the entire contents of what you're merging on top of right what information can you share to make this more efficient while still enabling these parties to work together that is the the privacy and efficiency Frontier what information do you share and when and how does that affect the efficiency of the system so as a few didactic examples to get this idea in your head we'll look at this we'll look at this curve that Maps efficiency in the bottom left to sorry no efficiency on the the y-axis to efficiency no privacy to full privacy on the x-axis and we ask the question of what's the shape of this curve you know the very naive curve would be as we learn on more privacy the system becomes linearly less efficient so we start with no privacy full efficiency of extraction or merging or any of Mev broadly we move to full privacy kind of every incremental unit makes the system less efficient but if we look at an individual example we find that it's much more nuanced so for unisoft E2 trades you may not want to share your trade details uh because if you you started this place with no privacy your trade's going to get front run by Searchers so telling everyone what your slippage is what you're trading on et cetera you get worse execution that's why we start this purple line relatively low but kind of interestingly if you hide trade details you still reveal what you're trading on so not the direction not the amount or slippage but just what the pair is you can do these really interesting blind but Atomic arbitrages so you can calculate the atomic Arbitrage all on chain in a smart contract only knowing what pair someone is trading on off chain and this is kind of working Live code that if you want you can go to our GitHub page here run the spot see how it works for yourself so this is this interesting space where actually if you layer on privacy you get a more efficient system A system that rebates more value back to users uh rather than one with no privacy but there's a point here where this clearly becomes sub-optimal because if you hide even one pair someone is trading on with a fully private system Searchers are executing in a totally blind situation you have to spam the system with every possible trade and you lose some sense of efficiency so the curve here is non-intuitive the shape we may not be able to just take a naive idea of let's look at how it might work in Block building 2 with another didactic example so what I'm putting up on the screen here is the process of building a block we start with one bundle here and in this example after every bundle we share a little bit of information with the rest of the world about the state of the block that is being built so if you take this example with a single bundle that has been merged into a block and we ask what happens if we share the value of this block and the pools that have been touched and is this safe to share at this point in the block building process with a single bundle it's not safe because if you know that's a very valuable block and you know the state of the pools that are touched you can probably back out what what trade or Arbitrage the semivbot has done in bundle one front run that yourself so it's probably not safe to share information at this point but what happens if you layer on more bundles to this process so if you introduce another bundle that you know might make a trade on the same pools in a different direction so there's a little bit of noise in the pools and you do this incrementally over and over at different steps of the process at what point could it perhaps be safe to share a little bit of information with the external world to help Searchers optimize their Mudd to have this feedback process of what the partial block being built is to you know ongoing extraction by Searchers and this is one question of when it is safe to share information at what point and um you know this is relevant because we're trying to create the most efficient system possible and this is an example of how privacy and efficiency in the frontier looks within block building and to link this back to kind of what we're doing at flashbots today with Mev share we've created this early playground for us to run these privacy experiments in production today so if you go to med-share.flashbox.net you can see all all transactions that are going through Med share with information that's being leaked from them you can search on them if you are an MVP Searcher and we're interested in other types of experiments with how you share information across the block building process in Mev share if anyone here has any ideas for the kind of privacy experiments that we should run so this is the the first large area of the large trillion dollar Mev question is what this Frontier of privacy and efficiency looks like when you share information and how and under what conditions is it safe the the second area is how we escape sgx in the Meg ecosystem so there's an embedded assumption here and we'll walk through the Assumption as well but so to move forward within the Mev ecosystem we in crypto but also flashbots need to remove trust from all centralized operators in the nav supply chain so the the current state of parties like flashbots other builders other operators running centralized infrastructure probably not long-term tenable we want to make this infrastructure permissionless lower the various entry make it more censorship resistant but how do you do that it's an extremely difficult problem many of us are working on it some potential starting points for this one maybe crypto economics two can you distribute it across a multi-sig or a federation three pure cryptography four trusted Hardware I'm kind of getting ahead of myself in this but but the the question is you know how do we escape sgx so just to frame it we think out of all these potential starting points sgx is the best path forward in the short term so the question is is how to break out of that in the long term and that's what this question is about what we'll talk about for the next five or ten minutes um so why sgx why trusted Hardware how does that work trusted Hardware gives us privacy and verifiable tamper-proof execution so if you are running code inside of trusted Hardware that means even the party who physically has a piece of trusted Hardware cannot see what's going on inside of it and they can't tamper with the code that is running inside of it so you know a certain set of rules a certain you know binary executable is running inside of that trusted hardware and this is useful because it allows you to have permissionless Med infrastructure so instead of an ecosystem where Searchers and users need to all decide which Builder do you trust you blocks route flashbots uh rsync Etc you could send to anyone who's running this permissionless sgx infrastructure inside which is the kind of infrastructure that we want to get to but it comes at the expense of needing to trust the manufacturer of the hardware in this case with sgx the most viable short-term option that is Intel and oftentimes this is where people like to get pokey on Twitter about it in flashpot's desire to run infrastructure in sgx asking the question of why are you comfortable you know putting your infrastructure in this why are you comfortable trusting Intel and for us at flashbots we think this is a reasonable trade-off to make because it buys you permissionless Mev infrastructure you know anyone in the ideal case running this infrastructure and Intel is a relatively disinterested party within the med supply chain right now you know they want to sell hardware and if this is successful we'll put billions of dollars of value going through their Hardware annually and be the first you know real use case for sgx out there they are incentive aligned for this to be secure they're not a block Builder they like don't have an interest in messing around with what is going on in an sgx so we think it's like relatively incentive aligned getting theoretically aligned in the short turn and it is a trade-off we're willing to make to get to permissionless Mev infrastructure um but you know you might ask like Robert I see all of these tweets of sgx attacks what are you doing are you all crazy um and the answer is is like maybe a little bit but it's more nuanced than that um so there are many known sgx attacks where you can leak information out of nsgx through side channels or covert channels um the the thing is is that if you design your applications in a very thoughtful way you can mitigate most of these or at least a good uh class of them so the challenge is is how do you build any of the infrastructure in a way that is aware of sgx as an example making your bundle Merchant code run in constant time so there's no inferences that you can make of how long you know a bundle took to merge as an example and we think that the economics of these systems are relatively underlooked so it's important to ask the question of what is the marginal cost of an attack on sgx and how does that compare in the equilibrium to the marginal benefit that can be gained and if the you know say the marginal cost of an sgx zero day is a hundred thousand dollars what is the next zero day cost is it two hundred thousand dollars is it still 100 000 is it a million something something like that and if you take an individual block that uh someone could break an sgx for how much value can they extract from the system and we think the answer to these questions come out very favorable for sgx because the cost of an attack is actually quite high and in the median case the marginal gain is relatively low and it just falls back to the status quo so we think sgx is reasonable for that reason um briefly a couple future directions for trusted Hardware so diversifying to other providers like AMD in the long run you might even get in the case where if we think this is really important for the the community you're not running Intel sdx but even like efsgx or flashbot sqx will develop our own Hardware on a 10-year timeline something like that Dan Bonnet gave this really interesting presentation where he made the the contention that in the same way zero knowledge cryptography was catalyzed by crypto secure Enclave research was going to be catalyzed by Mev in the coming years so we'll see Med specific enclaves too outside of even like the flashpot test checks I do um so that's enough on sgx that's like broadly my argument to you for why sdx is reasonable in the short term for uh for a choice let's talk about crypto economics and how that relates to Med so these are a couple images of crypto economic proposals the top left and top right are from vitalik's two slot uh proposer Builder split the text doesn't really matter for you it's it's actually just like a crypto economic proposal are you proposals that use crypto economics generally what we mean is some kind of economic incentive to behave honestly through losing revenue or maybe slashing conditions top left is that being used in the relay market today um and one of the reasons why crypto economics is challenging in the Mev ecosystem is because of graphs like this so top left shows you the daily Mev that was paid to Miners and proof of work and it's an extremely spiky graph so you have two large spikes there that get up to 6400 East when the average daily eat paid out to minors is something like 200 right so in the extreme cases you have 32 times worth of me going through the system on a day that you do you know on the average day and that means that it's very hard to reason about what happens your crypto economic systems and your guarantees at the limit and oftentimes you may have incentives to deviate in these exceptional cases that we think are kind of inherent to how Mev works you see this repeatedly happening this happened this year the kind of average value of a block going through Mev boost is somewhere between 0.1 and 0.2 each and there have been 800 East value blocks you know so um thousands of times the value of the average block and this makes it very difficult again to reason about what happens at these limits we think this is kind of inherent and crypto economics can break down at these limits too an example of this is from the MVD burn you know proposal that Justin Drake just put out highlighting how sometimes the PBS Market structure can break down in the absence of some tweaks that he proposes within Mev burn when there's exceptionally large mud spikes which isn't to say that it's and that crypto economics is useless but rather that it's nuanced and there are some cases where we can augment it with other things another case that I want to share with you is nav share and so a very pragmatic sort of uh short-term product roadmap for flashbots and how we're thinking about crypto economics this is the the feed for Mev share transactions you can look at it yourself on your laptop if you want um and we're thinking about how do you take the transactions and the bundles that are output by the system and allow any Builder to permissionlessly use those within a block can you use crypto economics within this system and as we worked through these questions we found that it is very difficult to falsifiably prove when parties are behaving dishonestly and as a result it's difficult to use crypto economics within the system so crypto economics in at least the the short term kind of product roadmap that we have within Mev share fell short here because of non-falsifiability and because we need some level of privacy that just crypto economics itself would not uh would not meet but I think if you look at sgx and economics the the system becomes a lot more robust and a lot more interesting um and this is how we think about uh defense and security at flashbots so you have sgx giving you some security properties that are very useful and crypto economics that are giving other properties that are very useful and to run you through this table which is from Phil from flashbots um the the kind of capital that's required to break your design goals within crypto economic systems is inherently very high it's like the purpose of using crypto economics right with sgx it's not so clear it's not clear what the marginal cost of a new attack on sgx is but in a crypto economic system you're narrowly kind of reasoning out a set of assumptions and design goals and you don't have security outside of those design goals uh kind of inherent to the design of crypto economic system in sgx You by default get some amount of security Beyond Your Design goals because you're restricted to what you can do to the actual code paths that are running inside of an sgx so it buys you some kind of security outside of your set of assumptions and the the code paths that you think people will naturally reach um in sgx you require like a great deal of expertise to break a system and attack it uh sort of inherent to what it takes to find one of these new attacks on sgx which will take a good deal of people together maybe 10 maybe a month all together but in in crypto economics oftentimes you know exactly kind of the capital limits and how to pull off an attack is just a question of capital within the system um this is like a bit a high level a bit of a caricature even but this is just to demonstrate how these things are actually complementary instead of uh and you should use them together in defense and in depth and how each system has its own limits as well uh to briefly talk about multi-cigs and then pure crypto and move move to our next trillion dollar question um so with a multi-sig the question is is can you take trust in a centralized party today distribute it across multiple parties and you know if you assume that market structure then you needed to ask a question of who's a part of the multi-sig and uh how do you attribute kind of dishonest Behavior within that multi-sig in the saline question for me if you share and thoughtspot today it's how do we share order flow with other parties and uh how do you attribute some sort of front running or unbundling you know within that system and the the answer is generally you can't attribute faults within that system and that gives a privilege to these multi-sig members that allows them to extract a little bit more rent so we're very uh not bullish on these multi-sig or Federation kind of designs at flashbots for for this non-attributable reason and the rent that the members can get and briefly on your crypto there's not that much to say on the subject you could use things like multi-party computations ekps fully homorific encryption uh for the same purposes that we do in sgx but the challenge is that um the the you know we are not at a place where these Technologies are production grade at least for Mev use cases and kind of the unique settings of Ned and the natural questions are how soon can you get there and how performant can it be you know relative to centralized Alternatives there is a good deal of interesting progress on this so top right you see a screenshot from back running private transactions using multi-party computation it's a researcher at flashbots who is able to use multi-party computation to actually background private transactions on uniswell without any information preserving the privacy of the Searcher and the user so we are getting there it will just take some time to do so on the order of yours and we're not ready just yet so to to review here um crypto economics it's good it has its limits you probably want to layer in sgx multi-sig in my humble opinion probably strictly worse than scx if you're a crypto we're not ready for production we want to get there a couple years trusted Hardware sgx it's nuanced it doesn't feel great but in the short term it might be the best option that we have diversifying like AMD other providers is helpful Mev specific Hardware also probably helpful and that's where we're at but really what I want you to take away from this is you know sgx alone not a silver bullet crypto economics alone not a silver bullet defense in depth of all these things together is probably the right approach and pure crypto is not ready yet but I hope you can accelerate it okay so our final trillion dollar Med question for the day um uh how do we minimize and address latency advantages within the me ecosystem so why are we talking about latency why does that matter for Mev if you look at the top left this is a graph of the ultrasound relay as they enabled optimistic relaying at their relay what this means is that normally in the Mev boost workflow Builders are sending blocks that are being simulated by relays in order to tell how much profit they they make whether they're valid keeping Builders honest but with an optimistic relaying Builders post collateral and they then do not have their blocks simulated they're just instantly passed on to validators the result being that there is collateral to take from the Builder and pay to the proposer if they've asked acted dishonestly and the net benefit being you miss the simulation period and that gives Builders more time to optimize for Mev so they can do more computation they can you know update their blocks based off of what's happening in the external world and it's something like 100 to 250 milliseconds there's not that much time but here it led to a 10 increase in the inclusion rate just straight up uh from the optimistic relay so it's a pretty significant Advantage this 150 milliseconds already on the bottom right is a a screenshot of the top Builders yesterday in 24 hours Beaver build and rsync with 25 and 22 respectively are two statistical Arbitrage Bots they used to be Searchers that they vertically integrated into Builders now and the you know the hypothesis is for the reason why they are winning so many blocks is that they're able to gain an edge from updating their their blocks at the last second based off of sextech's arms basically so you want to wait until the absolute last moment uh you know seeing what the binance API tells you the prices and that gives you the ability to take more risk and make more uh higher bids within this system so latency is already playing a significant role within the Meb Marketplace and why why do we care about that well because if latency is the the dominant strategy within the um within the Amy marketplace where it really matters you're able to make more be make more profit from being low latency then there's a natural incentive for parties to co-locate together into one place so if you're trying to optimize for every single millisecond you're going to want to be in the same place as the rest of the players within the system that you're playing this game in the net result being that in ecosystems where latency really matters you might see Geographic centralization into a single geography and if you have you know all of the Mev supply chain within a single geography then the Mev supply chain is subject to the rules of that single geography and you might get censorship or other kind of ways that the the state might come and undermine the properties of blockchains like like we want so we want our protocols to be not latency sensitive and we want geographic distribution within our systems and and that's why latency matters here um the other thing that I I want to call out uh briefly before a decentralized building is it matters not just for centralized exchanges but for other domains as well right so if you're late if you're uh roll up as an example as first come first serve and if it incentivizes people to have super low latency connections to capture Mev that may then put a centralizing pressure on other domains because if the dominant strategy is to co-locate with a sequencer for a roll up on one domain cross domain Mev might mean that Builders are going to co-locate on that domain as well to extract that cost Main mme and put a centralizing pressure on the nvv supply chain within ethereum or another domain as well so it it uh this is a problem not just for kind of centralized exchanges and finance but for all Roll-Ups and in all domains as well and the choices that other domains make affect ethereum is one of the findings from Cross domain Med and I want to call out that this matters a lot latency matters a lot within decentralized building because you know inherently if we're trying to distribute this building role you're going to be passing messages around you sort of inherent to a distributed system you're going to introduce some new type of latency and so it's important that we learn how to make these Systems address kind of the latency needs of its participants like statistical Arbitrage Bots and we minimize the impact of latency on the overall system at flashbots we're really interested in kind of how you can allow someone to define a smart transaction or a strategy that is evaluated at Mev time instead of using you know individual transactions right so instead of a statistical Arbitrage bot sending a single transaction maybe they send you an array of transactions and we choose the optimal one something like that at the time of building a block as a way to kind of address latency so this isn't to say that this is a lost cause or something like that but to say that we need to be very mindful of latency when designing a decentralized builder Network and this is like a primary consideration to to address and if we don't the the future of block production might end up in something like this so this is an actual thing so the finance API for whatever reason historically is in Japan so it's in like the AWS Japan service somewhere and uh if we're not mindful of latency in the mvv supply chain you get into a place where Beaver build jump are saying you know Citadel Goldman et cetera are all kind of co-located Japan and it's all subject to the the whims of Japan as a state um that's why it matters that's why we're talking about latency and our third kind of large Meb trillion dollar question so to review we talked about the Privacy efficiency Frontier uh what this looks like how to share information at what point when it is safe how we escape sgx ysgx we think is a viable short-term option and how it fits within crypto economics as well and finally how we minimize and address latency advantages so these are things that are Salient on our minds both in in the short term and flashbots in long term and would love it if every single one of you came and worked with us today so thank you so much for listening really appreciate it foreign 