foreign okay so if you thought the last talk was too theoretical uh sorry um although this one has less Haskell I promise so like it's a little bit more hopefully a little bit more intuitively easy to grasp um often often I get questions like well in a Centric architectures you still have Mev right and my answer to those questions is unequivocally yes so intensive architectures do not like magically solve any mov problems in fact what I'm going to be talking about in this talk is an Mev problem that I think we haven't even really considered yet that basically everyone has and I think we probably should talk a little bit more about which is why I'm bringing it up today um but yeah I also just want to clarify that you know Guillermo and tarun and all of these brilliant mathematicians keep proving many things impossible and I'm promising to do none of the impossible things including the impossible things that were proved in the last two months of papers which I haven't read yet because I'm a little behind but right okay so I'm going to talk about the edge of Mev which is a sort of metaphor both in the kind of sense that it's like the edge of the current Meb research discourse I think and that there's an interesting graphical representation of the whole question which I'll get to at the end uh particularly something uh which I I think we should be thinking about related switching costs and something I've taken to calling the slow game so let me first kind of just situate this talk because I think it will be helpful um thanks to particularly niketa and Gene from flashbots for these com for the conversations in the past few weeks this is very it's a it's a speculative talk it's like there are not mathematical proofs yet would be very interested in collaborating if it's all wrong then that would be an interesting impossibility result so at least there's like something that you'll get out of it um yeah I have a confession to make which that I still don't know what Mev is it seems to lack a certain like conceptual Unity um and we keep discovering new things which which you know seem related to Mev I mean Mev is like maybe first and foremost to community and research discourse and uh I guess in that spirit I think the things that we've talked about under the name Mev can be you know to me can be kind of classed in four groups perhaps not exclusively and the one I'm going to talk about today is supply side price fixing and I'll explain why I call it that what it means but first let me just talk talk about the things which I'm not going to talk about okay one no one really oh no these slides are out of order I wanted it to be reordered this one's first okay no one really talked about too much about like cross domain a little bit from skip um uh but you know I want to see the auction math but uh no one talked too much about cross domain and maybe today yet uh cross-domain stuff is hard because of heterogeneous security and heterogeneous clocks those both produce gray hairs and in their intersection they produce like you know the square number of gray hairs and I'm not talking about this since talk okay next thing information flow asymmetry most of what like originally went out of the term Mev I think is in this class basically this is all stems from users somehow having less information at the time of intent creation or whatever they're signing um then operators and here I group you know validators and Builders and Searchers you know everyone into this like other class of operators users have less information and maybe don't want to spend as much time doing compute when they send their intent uh when compared to when operators make ordering decisions or make block inclusion decisions or stuff like this and so order flow auctions encrypted mempools batch matching uh commit reveal schemes like blah blah blah basically I'll try to address this class of problems by changing the information flow or like adding an auction mechanism so that it's less bad and most of the current sort of bad Mev that we seem like we don't want falls into this class right um then maybe the class of good Mev um is uh oh yeah and I'm not talking about this and maybe the class of good Mev is is where cases where you know like alluded to and it was talked earlier users really kind of want and docus users want to delegate the hard work of like doing the computation particularly you know the stuff that's in NP or even just like polytime and requires data or you know whatever to a third party um So Meta transactions account abstraction specified Builder algorithms to some degree I would say uh or like fairness criteria fall into this class and most of this we would consider you know good or sort of desirable move and I'm also not talking about this okay I am talking about supply side price fixing and supply side price fixing um is really it's quite simple uh and I think maybe it's like it's so simple and and has been kind of neglected so far because it doesn't seem like you know an interesting research question but I think in some ways that it is um so supply side price fixing is merely that uh just you know a fact interdependent transactions if we want them to touch you know parts of the shared State parts of state which are shared and compose must be ordered in one logically central location so not all transactions are interdependent of course you can you know intense transactions here are pretty fundable as words uh but where they are interdependent you have to order them in the same place that location typically has an operator set and the fundamental reason why it has an operator set is that we don't want to make a liveness Assumption of users so you can avoid if you want there to be only one class of participant in the system so like users equals operators then the users need to be online and typically you know the whole reason why we do this like blockchains and cloud computing and blah blah is that like people don't like being online all the time right so that's that's like basic reason so we want to delegate liveness which requires delegating custody delegating the ability to sign to like do something with our assets on our behalf perhaps subject to some other you know requirements there's some operator set and that operator said fundamentally just by the very fact of delegating liveness that operator set chooses what to include and as they choose what to include they can always set a price so you can like try and create Norms around what prices they set but they're always going to have the ability to choose whether or not to include a particular intent or transaction or whatever and they will always be able to like accept side payment or like in some other way set prices right okay cool um so in particular I've chosen to use this term price fixing and price fixing you know maybe this is not the end-all be-all term just like a candidate term we could also choose other terms but price fixing has a long-standing background in at least like colloquial economic discourse and that background applies a cartel and this choice of wording is intentional because I think we should expect operators in general to form a cartel and by Cartel I don't you know it's not like I'm not casting judgment just saying that you know operators it's very easy for operators to coordinate we've like built all these fancy BFD consensus mechanisms that literally make it easy for them to coordinate they know the public keys they know the voting powers like operators are going to corner and coordinate right and also here I want to you know I've been a little bit like hand wavy with the definitions but mostly here when I say operator and throughout the remainder of the talk I mean validators and people who have custody of assets so Builders and Searchers and all these other parties have like interesting relations to the information asymmetry kind of mud but the supply side price fixing only has to do with whoever ultimately controls inclusion in a block right or inclusion in the like logically centralized ordering location that users want to coordinate on um and one you know as far as I can see this kind of you know I'll explain in a sec how it might you know why it's sort of an mev-like problem but just this very uh character of the system uh where operators for a particular ordering location can set a price um is independent of all of the other kinds of Mev this is just like they're ordering things in a place and they accept some kind of payment for ordering them and they can choose what that payment is um so something like EIP 1559 is of course an algorithmic price setting tool like it's a way that operators coordinate two set of price but operators could always choose to like accept some other kind of payment right or you know together add transactions or something to make the EIP 1559 P controller do you know whatever they want it to right okay so why should you care maybe this sounds like dull but um I think it is not um so I mentioned a little bit already but we should expect operators to coordinate operators can set prices for inclusion operators we can expect to be rational like they want to maximize their profit depending on what they expect to happen you know sometimes maybe it's repeated game sometimes it's a One-Shot game but we should expect operators to be rational and critically operators have custody as in if you want to delegate liveness you have to you know in effect like if you issue a token right if you are Circle or something I think it makes this example very clear you know you are the person who controls the like Redemption path of this token like you're bringing the value into the system but you are delegating custody typically to the ethereum blockchain or somewhere else so that you don't have to be live or like involved in the in the block construction process or whatever um and I think this is important because there are a lot of reasons to expect that users kind of need or want to agree on where they order things or where they order particular kinds of transactions this agreement on one logical ordering location for interdependent transactions is what makes Atomic opposition possible even if you have you know we also do like heterogeneous paxos and stuff and that helps a little bit you know fuzzing on the boundaries of heterogeneous security Atomic opposition but you still need a lot of overlap and you still need to choose like even if you're doing some heterogeneous security composition you need to like choose there's still a logical single location right choose where that happens and users must need to give up custody to avoid needing to be live so suppose that users don't coordinate suppose that users uh you know uh just like send their transaction somewhere and don't you know talk to each other very much right and assume that there is some Surplus from coordination as in the users benefit from using the system in the first place and they didn't benefit they wouldn't be using it um then I argue in a world where users don't coordinate The Operators can charge like almost as much as the Surplus from coordination before it becomes individually rational for users to leave this is basically like a coordination problem like I as a user if I benefit from using the system and the operator charges me like five dollars to send every transaction not because it costs five dollars to run the computers but because uh you know they know that they can charge me five dollars and I'll still send the transactions then that's like the individually rational equilibrium right if the users don't coordinate um I think also this comes into play so maybe like the nice easy setting is where there's a repeated game between the operators and the users and The Operators want future revenue from future user transactions so they don't want to stiff the users too much because they might leave but if operators expect users to leave it changes the game theory then it's a One-Shot game so if like if I am the validator set of of let's just say the ethereum blockchain it I see everyone is like taking their assets over to some Roll-Ups or some like other logical ordering locations maybe they have decentralized sequencers they have like basically Sovereign custody um and if if I think that well maybe people will stop sending me transactions now maybe it's not a repeated game anymore maybe the users are going to go somewhere else but the users right now have their assets under my custody then the rational action for me is to charge basically as much as the assets themselves are worth to allow the users to exit right so the rational action for an operator is to see oh this transaction is like sending this asset over this bridge it's probably never going to come back you know maybe it's uscc and circle already does the like smart cross chain thing where they'll accept your asset on the other chain natively so it never needs to be sent back to you know say ethereum anyways it's unfair to pick on ethereum it's just like the easy example it doesn't apply uniquely to only ethereum but um so if I as an operator if an eye is a like coordinated set of operators expect users to leave I should like charge them as much possible because there this is the final play final round of the game right and as soon as they've left I'm never going to get any more Revenue so I should charge them like as much as possible as soon as I see a bridge withdrawal transaction um and you know I think basically we don't see this yet but um uh it seems to me that we should we should expect to um yeah I think that this also this like category of Mev is another strike in the coffin against the conceptual Unity of Mev as a concept um because it is unrelated as in you can do all the cryptography you want you can do like nice privacy preserving intense Centric architectures you can do Suave you can do tees you can do order flow auctions and it does not help one wit with this problem uh maybe the only like asterisk is that if you do like if users have sort of heterogeneous security preferences such they're willing to accept multiple ordering locations then maybe you can do some like coordination between the users you know in the counterparty discovery layer in the intent layer but that only helps with like a better balancing transactions across a set of different logically ordering different logical ordering locations it doesn't help with a bridge withdrawal tax or just with the like basic price fixing um also you know one thing you might think is that oh these these systems um might make it harder for operators to figure out what users are doing and I think to some extent that's true but operators can easily like just test different fee levels and see what users are willing to pay right and still if users don't coordinate they will individually be willing to pay just under whatever the system usage of the system is worth to them in the first place so I think one one kind of danger in in the uh you know just the applied Mev research discourse is that we want to be careful that we don't build systems that only solve the problems that we see right now because some of the problems won't happen until things are widely adopted like um you know for example uh ethereum validators are like they're nice they post pictures on Twitter of their validator setups they go to conferences they like know you they're your friend they don't want to like screw you too much there are these sort of side social channels of interdependency and I'm not not saying these are wrong they're great but if we look at sort of the real world outside the blockchain ecosystem I mean who extracts you know uh the typical Silicon Valley business model is not only has not only ended up kind of exploiting switching costs it's often explicitly designed to maximize switching costs right and they are kind of analogous to the operators in this scenario so I would expect that in the long run uh you know if operators see that that people are leaving or something like that they're going to have some pretty simple algorithms to recognize those kinds of transfers and charge hierarchies um so then I propose that we need something and in fact in some sense we already have just not codified something called the slow gate and by the slow game I mean the coordination process amongst users to select you know perhaps plural but uh logical ordering locations as in however it is and you could do this in different ways but however it is that users agree on where they want to send interdependent intents and transactions which need to be ordered together you know I think this includes splitting up non-interdependent flows between operators so that you avoid just like high prices due to uh you know high high demand exceeding supply for one particular location you didn't need interdependency and I think it also includes uh I think users need the ability to make a credible commitment that they will switch away from it that they will basically Fork out extractive operators in a way that is sufficient to change the game theory so uh this is maybe just a new word and I think the slow game is already happening it's just happening socially as opposed to you know in a more algorithmic way you know by using particular applications on particular chains that's a kind of affinity of certain kinds of intents or perhaps assets to certain um certain logical ordering locations by moving to Roll-Ups with lower fees you know luckily I think ethereum validators are not doing you know this kind of like exit tax price discrimination yet so it's still pretty easy to move off the system um if you're complaining on Twitter that fees are too high and that you will leave you are playing the slow game because you're making a little you know a little bit but not a coordinated threat but like a little bit of a threat to the operator set that if they charge it's a high tax or like don't optimize you know kind of like a pro you know the operator set charging a high tax versus like not optimizing their software so they can process more transactions you know some squint level these are kind of the same thing um uh you're already playing this little game but um the way it is currently played the slow game is sort of messy it's like social it's subject to propaganda it's not very efficient especially with all of these heterogeneous protocols heterogeneous systems websites uh they're pretty high switching costs um so I have a modest proposal just what seems like to me an interesting Avenue of research bonus points to anyone who knows where this this screen cap is from but when faced with the coordination problem which you want to kind of ritualize often a good solution is to craft you know perhaps both Tech and culture for a protocol um so if we kind of reduce this problem to its Essence here all we are talking about in terms of operators as I mentioned is custody so operators custody assets their signature is required they can deny providing that signature that's why they can extract in this way and we make a likeness Assumption of them clearest example ethereum balance or something so what do we want in playing the slow game it seems to me like as users and I'm presuming that we are the users here you know designing for the users you can also design to The Operators but usually the question is framed in this way we as users want to delegate to operators that's like why we're doing this in the first place we don't want to be online all the time but we don't want the operators to charge too much in some like hand wavy way that is hard to exactly quantify but we want to set prices and I think that if users coordinate users have the ability to set prices because they bring value to the system by choosing to use it if we assume that mostly you know these distributed systems are used as accounting techniques to track things going on in the external World users choose to like create that correspondence between the external world and the accounting system by using it so ultimately they have the negotiating leverage operators want their tokens in other words and users want to negotiate and I think users could do this by periodically demonstrating the credible ability to coordinate and potentially like agreeing on or negotiating prices to pay operators and in particular I think in order to avoid this like Bridge exit tax problem users need to be able to make credible commitments so they will Fork out any operators trying to extract value at exit um great news is that we perhaps don't need to invent anything super complicated solve this because we're already working on this research field that includes consensus protocols so what if we just run consensus but slowly um slow gain consensus is the opposite thing that you typically think of when you think of like Fast blockchains mostly we work on making the blockchains faster we work on like optimizing transaction processing you know we have like I don't know Salon of validators probably optimize their data center co-locations like I'm just guessing here um slow game consensus does not care about this all we need to do is periodically demonstrate the ability to coordinate um signal to other users to make it easier to coordinate on which operators will be used and credibly threatened you know when necessary to Fork out operators to try to extract too much um perhaps like setting price guidelines and stuff will just make things more efficient um yeah so the slow game is slow uh you know that there are consensus protocols typically have at least N squared message latency running consensus the most we're talking about millions of users billions of users that's not going to happen in 10 seconds like we're talking days and we'll need a bunch of cryptographic techniques like maybe a less signature aggregation we probably don't want a proposer we just want to like aggregate individual data um but that's fine the slow name can be slow could be daily monthly even less frequently users and operators typically typically apart from the kind of like exit case users and operators are in a repeated game operators want future Revenue so all users need to do is like condition that future revenue on them not setting prices too high and then you know any operators who want to show up and claim that Revenue can do so if the user set it too low no operators will come they can kind of iterate on negotiation until they get to a mutually agreeable level I mean I think I don't you know discuss the kind of particular economics but I think the concept of like a solver Dao or a build or Dow sort of very relevant to this like if you expect operators to coordinate as a class and perhaps there's you know some composition sub you know subgroup coordination within there but that class end users as a class are going to end up negotiating um in particular I also think it's helpful to have the ability to run this slow game consensus on demand so suppose that an operator suppose that like next week the ethereum validator set decides that oh they're screwed everyone's going to move to the bridges and they're not you know they're going to move the Roll-Ups and they're never going to come back and they decide to like set all of your Bridge withdrawal prices at 95 of the tokens so if you want to withdraw to arbitrum or um optimism or ZK sync or some of the other Roll-Ups uh they will say oh like erc20.transfer you must give 0.95 if you're transfer to me the validator and maybe it's like socially distributed amongst the validators right and in order to deal with this we need the ability to like run this slow game on demand uh or at least we need to like demonstrate that we could do so such that if validators tried to do that you can run the slow game and basically agree to like basically what you would do is you would agree to copy the state of this particular location and change the operators so you would copy like the entire state of the ethereum blockchain that's the accounting history that you want to preserve who owns what tokens stuff like this that's like you know the the valuable history embedded into the system um you would copy that to a location and set different operators and you want because this is a coordination problem you need to do it atomically so you need to run consensus amongst the users because you want to like switch all of your you know you don't want to Forked ethereums competing with each other you wanted to switch all the state atomically to a new location um yeah so I mean in some sense this is nothing new we're already doing consensus people are already like talking amongst themselves uh about where to send transactions um but we don't have a protocol and I think a protocol would make the threat more credible and uh provide kind of a like periodic test that we actually have like Sovereign networking infrastructure and the ability to Fork out operators if they are too extractive um and luckily it's like maybe not even that hard because we're just running consensus with a lot of people so uh I promised I would get back to this part at the end of the talks the edge of Mev uh I haven't you know fully you know well okay I haven't fully figured out the best graphical representation this one obviously is a little bit ad hoc but I think one way of thinking about things is that like users are the large you know if they're not coordinating they're disconnected dots but if they're coordinating they're a circle users are the large circle at the edge of the system and they interface between the system and the outside world and they ultimately control if they coordinate they control you know the constraints over what can happen inside the system right now if users don't coordinate the Mev gets kind of sucked into the center right the center or the red operators like small group coordinated um but if users coordinate the center is paid some amount that is you know negotiated but effectively fixed by the users um and everything just keeps going um one sort of one question which needs more mathematical formalization that I've not provided um is what does the end State equilibrium of this look like um and I think they're like there are a lot of complexity dimensions of complexity and sort of multi-variable preference optimization that I've completely and criminally glossed over and they're not trivial um such as locality you know physical locality low latency trust um you know users might just trust completely different groups of operators for other reasons or privacy reasons but in general I think we want to and kind of should should aim to move towards a system where users coordinate and in our coordination they set or you know perhaps with several rounds of negotiation a fixed margin for operators and users here you know we're assuming have multiple variables that they care about so they they might not want um they might not want like race to the bottom margin competition for certain reasons in particular users might want resilience of operator sets and if you put everyone in race to the body margin competition uh to some extent you're going to select against resilience so users may want to like include more variables in how they select operators basically um but still I think you would probably expect the prices will go down slowly over time as compute gets cheaper as the protocols become more standardized as the system just becomes like more streamlined and it seems to me like if you can reach this equilibrium everyone is like roughly happy like some operators are paid some like constant cost it's like a multiple of their Hardware costs networking costs bandwidth costs users still have control over the system um and no you know no more than like some finite amount of me quote unquote in this sense is extracted by the operator class but I think if we don't have this credible coordination game even if we solve all the other Mev problems it's going to be a big deal especially once operators realize that like you know to some extent people are paying them because their assets are custody not because they like explicitly trust the ethereum validator side and the sort of this product called standardized the market for operators just you know by default becomes more competitive so one you know area of collaboration that we're interested in is like reasoning about this in some more formal ways than I did in this talk um three takeaways if you only remember three things remember these three things one Mev is more than information asymmetry order for flow compute delegation or even cross-domain concerns um part of Mev is just fundamentally about delegation of custody and it will happen if users or there is the potential for extraction if users don't coordinate we haven't seen this part of Mev yet in the world uh but I think that we probably will and it's like very it's a very dangerous kind because you usually don't see it before a system becomes extremely embedded but once a system is extremely embedded it's like where the extraction happens and if the switching costs are too high and users don't coordinate you know we see this with like the real world where you know Google has like physical fiber lines I don't know like if your adversary ends up controlling the physical Network infrastructure your Sol like that's the end so you want to design against this before it happens by accident um users take away two users decide what is valuable and ultimately they have like the winning position in this game but in order to prevent The Operators to whom they delegate custody agency from extracting that value users must coordinate and coordination requires consensus social or otherwise slow game consensus doesn't need to be fast it just needs to be credible and a credible commitment I think is enough to change the equilibrium thanks that's it [Applause] 