foreign my name is Connor I'm part of the or I'm a contributor to the roll kit project at Celestial labs and this talk is about um a sort of kind of Mev which we call profitable censorship Mev which uh is a way for the validators of a data availability layer to um extract Mev from Sovereign Roll-Ups by censoring delaying or otherwise messing with uh the the sequencers of The Sovereign roll-ups and uh for those of you who aren't too familiar with Sovereign Roll-Ups they're a little bit different from the settled Roll-Ups you see as l2s in the ethereum world because rather than having a settlement contract Sovereign robots have their own nodes which connect to some data availability layer such as Celestia and the scrape roll-up blocks out of the data availability layer blocks um and uh reach consensus by applying a four Choice rule to the blocks in the data availability layer uh so um uh we can start by talking about the simplest kind of sovereign roll up which is a base roll-up or a uh or a pure pure Fork Choice roll up as we called it before that term came out um and uh these are the simplest kind because they don't utilize any sort of sequencers or sequencer scheme uh and uh instead um what happens is the blocks just get um posted to the built by anyone permissionlessly out of uh transactions from the roll-ups mempool uh sent to the DA layer and then the nodes just reach consensus by applying some kind of four Choice Rule and uh the four Choice rules for base Roll-Ups can be expressive there's many possibilities for how you might want to do that uh some of the ideas that we've heard thrown around or come up with are first ordered which is just the simplest way which is just defer to the ordering within the data availability layer you could do gas burned so you could select the roll-up block at a certain height that burns the most gas so you could have like a kind of like ultrasound money roll up or you could do one uh where you like select the block that Returns the most uh Mev to amm LPS or something uh so here's um like a diagram of um like the gas-based uh four Choice rule roll-up where um you can see like a bunch of different blocks uh go into the data availability layer blocks and uh the nodes of the roll up uh look at them and then can construct a chain out of the valid block at the at the specified height that wins the fork Choice rule um and uh it seems really cool and it seems awesome and that you can do all these great cool things with it until you remember that uh there are these guys uh the da layer validators who ultimately get the final say over uh the ordering and what goes into the dealer blocks so um what they can do is uh they can say um uh maybe maybe they don't like the uh the block that wins the fork Choice rule maybe there's a different block that they like better because it gives them more profit or or something or they have more control of the ordering uh and so um uh you know you may have come up with some cool for Choice rule that makes you roll up interesting but uh unfortunately it's worthless the real four Choice rule at the end of the day is just highest bribe uh and this is of course assuming that uh the da layer is sort of like Celestia in its current form which is just a minimally modified tender mint chain without any fancy censorship resistance features such as threshold encryption like furvio or um penumbra's way or shutter Network or anything like that or like a shared block Builder system like uh the multiplicity scheme proposed by duality um uh but we were we were sort of challenged to think of ways to not leak mvv to the uh base layer um and uh come up with alternative sequencer schemes besides just bass rollups and one reason is uh so that the roll ups can keep their own Mev and the other way or the other reason is uh so that you could provide a faster than L1 user experience with pre-confirmations or soft confirmations uh and in this talk um we're going to focus on uh the first the former uh which is just keeping Mev off the base layer keeping the Mev Sovereign redirecting it to the to the Roll-Ups themselves and uh even though uh pre-confirmation soft confirmations and going faster than layer one is an interesting topic um we'll save that for another day uh so the the simplest way to keep Mev Sovereign and off of The Da layer uh is to just use a centralized sequencer for the Roll-Up um and uh it's pretty it's pretty easy and simple to understand how a centralized sequencer works you just um choose some privileged signer and you just reject all the blocks from the roll up that aren't signed by that signer and you accept that privilege sequencers um like blocks as the canonical blocks of the roll up um and uh in the simplest possible scheme as I've described so far uh you trust that sequencer for censorship resistance and liveness so you get safety from the da layer but uh censorship resistance and liveness you're completely trusting this uh centralized sequencer and uh there are ways that have been proposed a lot of them come from the l2s in the ethereum world uh for how a roll-up even with a centralized sequencer can inherit censorship resistance and liveness from its L1 and uh we can go into uh one intuitive way that we talk about a lot and uh get to the get to the point here so this is one uh really intuitive way uh that the roll kit team has talked about a lot uh we call them hostage blocks um and it's it's like a just a basic scheme uh where a user can send a transaction directly to the DA layer and sort of send it past the sequencer um and then uh every couple sequencer blocks you have what we call hostage block and the hostage block has to include all the transactions that got sent past the sequencer just to the DA layer um and uh there's a couple different ways you can implement this um so one way is to synchronize the hostage blocks with sequencer blocks so you would say every n sequencer blocks uh you have to have a hostage block come after that um and uh if you do it this way um it is like a a forced transaction inclusion scheme basically and the other way you can do it is to synchronize the hostage blocks not with the roll-up blocks but with the da layer blocks and so this way uh we've taken to calling it uh base layer fallback um and uh they have slightly different properties so if you do the force transaction inclusions scheme uh you do get censorship resistance from the base layer but you don't get liveness from the base layer because uh if the sequencer stops making blocks uh the roll up halts um and uh the other way with the base layer fallback scheme even if the sequencer shuts down the roll up continues because um there can there will always be hostage blocks um synchronized by the da layer um and uh when you do this there are there there become ways that the da layer can once again uh mess with the roll up and get some potentially profit by censoring reordering and uh things like that um the uh with the force transaction inclusion scheme um if you simply accept the ordering of the user's transactions and the data availability layer as The Ordering of X as the execution order it's trivial to understand how the da layer validators can get Mev from that um because they control the ordering but you could also use a verifiable sequencing rules and get rid of that and reduce it to a problem of inclusion also when you add a second way to for users to get their transactions sequenced you may actually end up with like a competitive Dynamic where uh one of the ways which is controlled by the da validators costs less than the going through the sequencers or vice versa or one of them is subsidized some way or something like that also sometimes one way is more expensive than the other uh Celestia has a ton of capacity so it should be pretty cheap to send transactions directly to the DA layer on there but sometimes you sometimes like depending on what blob commitment scheme you're using uh two small blobs cost more than one Big Blob and so you may still have cost saving benefits to the user uh by batching it through the sequencer uh and if you do the base layer fallback scheme uh there's even all those all those previous strategies of getting Mev from the force transaction inclusion way uh carry over but also now they can censor delay and front run the sequencer entirely so quite a bit more Mev strategies become viable when uh when you choose to inherit liveness as well as censorship resistance uh so uh it's it's sure seems like um if your roll up wants to inherit censorship resistance and or aliveness from the base layer uh there's just no way to avoid having some Mev leak down um and uh if you replace the centralized sequencer with some kind of decentralized sequencer scheme uh there are definitely ways that you can uh have better censorship resistance and liveness than just trusting essentialized entity for that uh but fundamentally uh you can't you cannot inherit those those traits from the da layer uh nevertheless um it is interesting to think about different decentralized sequencer schemes and uh all the different ways that the data availability layer validators can mess with these different schemes and profit by doing so uh so uh some of the some of the various schemes that we talk about and and look into about are having EFT voting on Layer Two having so-called stake based Fork Choice rules uh and then two different kinds of round robin schemes one where you have halts and one where you have skips and I'll get into more about what that means in in a minute uh bft voting is an interesting one and this is uh where you basically have uh like full full-on consensus on Layer Two so you have sequencers for the Roll-Ups that are a lot like validators of a of a blockchain and you might want to use something like tendermint for this uh and it's alternative to a centralized sequencer the cost to create a liveness failure in this scheme is equal to the cost of getting one third of the stake [Music] um and uh if that liveness is compromised uh the roll-up pulse unless of course you are are using hostage blocks and you inherit those things from the da layer and leak some ipv uh but uh you may you may have heard that like one of the major selling points of sovereign Roll-Ups is to not need to pay for a valid intercept or to not go through the hassle of setting up a valid intercept and so uh that is one one major concession you make if you want to set up your roll up this way is that um it does require provisioning infrastructure and getting stakers and setting up validators and all of that uh and what do you even get um versus just being an app Chain versus being an app roll-up well uh you have to pay for infrastructure and then you also have to pay for da um and what you get is trust minimized interoperability with other things on that da layer as well as uh good like client support um and uh some some uh people may want to may decide to do this for their uh roll-ups uh and then another uh scheme that we can we can talk about is stake based four Choice rules um and these are talked about a little bit less but it's sort of like if you were to if you were to use uh Celestia as a finality gadget for some liveness favoring for Choice rule sort of like how uh how Gaspar Works in ethereum uh and so uh what's what's cool about this is you could have there always be some uh block proposer who is able to propose blocks so you don't have liveness failures uh and one way you could implement it is you could do like a stake weighted dice roll uh where you use a vrf or a randau or some other kind of random Beacon uh based on uh the proposer stake to uh decide who wins a certain uh roll-up block production slot um but you know it's another four Choice rule so just like the base layer base roll up uh we talked about at the beginning uh the Celestia validators ultimately get the final say and they can shoot down forks where they don't make profit and uh pick winners in this game and ultimately gain quite a bit of control over the Mev uh if you don't want to have to do the uh the full validator bft consensus scheme uh you can just simply uh take something like the round robin out of tendermint and not have voting but you can still have a rotation and like a leader schedule um and uh the all the leader selection schemes that you see in DFT chains like tendermen and Solana have ways to recover from a validator missing their slot um and uh if you get rid of those recovery mechanisms and you just wait for them to show up to their slot so you have the roll up just stop until uh the schedules uh proposal shows up to their slot um you do not leak any Mev uh the roll up keeps all of its Mev uh but at a horrible cost because now you have this terrible system where one proposer can halt The Chain by not showing up and the only way to recover is to hard Fork so pretty bad but uh it um preserves all the Mev and keeps it entirely sovereign so what if you do add a way to a way to skip people who miss their slot um uh basically you know you would then have like um uh different different Forks being built where if somebody misses their slot the next person uh builds at that height for them um but then like later they could show up to their slot and then build at that height anyway and then you would have two forks um and uh ultimately um you would have to go with like uh you know suppose multiple of those like chain different chain segments land on the da layer uh the nodes would have to apply a fork Choice rule to the different chain segments uh and it once again becomes a stake based work Choice rule that the celestial validators can mess with so if you have a uh recovery mechanism for missed slots in a leader schedule that is something that the da layer validators can exploit uh potentially gain control over ordering and profit from and one possible mitigation we've talked about is adding a what we call a halting period where if a proposer misses their slop you wait one Da Block so that way uh if they if they miss the slot because they got censored at least a different da proposer uh gets to um be there for the recovery so like the guy who censored them uh might not be the one who gets a profit from that uh so yeah they're uh they're if you if you want like liveness um you're gonna you're gonna leak some MVP like or if you want to inherit liveness from the da layer you will accept energy uh so what are the mitigations and solutions to profitable censorship Mev with software and rollups uh uh the mitigations are to sort of just accept it as inevitable and uh just uh use use decentralized sequencer schemes with high Economic Security and like uh such as like your own DFT consensus or you could use a shared decentralized sequencer uh with its own uh token and uh high cost to create aliveness failure um you could use some sort of round robin scheme which is what we are currently working on as part of roll kit is a uh a round robin leader schedule based protocol uh with like a different ways you can configure it so like you could do halts right now the implementation does halt um or halting period or just let it leak Mev um and if you're okay with that which uh you know it's it's really not so bad like um then we would just need to deal with uh the Mev and have PBS or skip protocol or something on the da layer uh so that um it doesn't lead to gas Wars and all kinds of problems like that um and then ultimately if you you can solve the problem entirely if you uh make the base layer much more censorship resistant so if it turns out that like these threshold encryption schemes uh work really well we could add those to the DA layer and you could have your pay for blob transactions be private or like at least you get guaranteed inclusion before um before they're they're ordered uh and also maybe these uh shared Builder schemes like Multiplicity uh can allow like all the validators in the da layer to participate and uh in Block building instead of just having one proposer uh monopolize the whole thing uh so yeah just uh interesting problem space I thought I'd share and uh that that's about it thank you [Applause] 