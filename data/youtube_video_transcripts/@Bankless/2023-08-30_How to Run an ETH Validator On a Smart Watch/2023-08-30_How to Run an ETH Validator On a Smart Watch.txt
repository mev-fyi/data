hey bankless Nation I'm very excited about the episode today David is out and this episode gets technical at times so I have eth researcher Justin Drake whom I'm sure many of you know he's co-hosting with me today some context as we get into this episode so we did a previous episode a few weeks ago called the Sci-Fi road map to ethereum and in that episode Justin Drake described the end game for ethereum and he said this we snarkify everything in today's episode we explore exactly what that means and how we do it how do we snarkify everything Our Guest today is Brian Redford he is the co-founder of what might be the world's first type 1 ZK evm and if you don't know what that means that's fine neither did I as we're getting into this episode and it turns out that building a type 1 ZK evm is an important part of delivering what Justin Drake called an enshrined roll-up inside of ethereum more on that in just a minute but before we get in just want to mention something quick from our friends and sponsors over at safe safe is the multi-sig wallet we recommend for crypto and you've heard us talk about smart contract wallets many times how they're going to 10x the crypto wallet experience we definitely believe that's true and safe recently proposed their modular open source safe core protocol as a standard for the industries that we can all move forward and transition to the smart contract wallet future and they want you to check it out so there's a link for the devs in the show notes saferly believes this is an opportunity to create a unified standard to catapults smart contract accounts onto the evm the standard itself is unopinionated and vendor agnostic and maintains interoperability and smart contract diversity so go check it out and also to check out safe is organizing the first ever conference dedicated to Smart contract wallets and account abstraction that happens the second week of December there'll be a link in the show notes to go register for that as well so thanks to safe for building into the frontier alright speak of the frontier back to ethereum enshrined roll ups so why are we having this conversation and why now the compute era is scaled with Moore's law but the blockchain era scales with something differently it scales with cryptography specifically cryptographic breakthroughs like ZK snarks and all of the CK snark stuff the snarkifying of the evm it's all happening a lot faster than any of us previously thought it's happening so fast that a project called risk zero just came on our radar last week and they've already produced a working version of the world's first ZK snarkified type 1 evm foreign what kinds of things could this unlock in the future why is this important well what if we could convert an optimistic roll up to a ZK roll-up what if we could upgrade ethereum Slayer 1 from a single threaded evm model to a multi-threaded EVMS so that compute was virtually Limitless and free what if eth validators themselves had the ability to run from something as small as a smartwatch all of these are possible unlocks with this technology this is crazy cool deep stuff down the crypto rabbit hole we go and it gets technical at times but it's absolutely worth holding on for the ride this is crazy cool stuff and we're going deep down the rabbit hole today and this gets technical at times but I think it's absolutely worth it to hold on for the ride because this is key to understanding how blockchains actually work and how they scale and it's so understanding I think this type of thing can help you avoid bad Investments and dead ends and there are a lot of those out in the space as well we're going to get right to the episode with Brian and Justin but before we do I want to thank the sponsors that made this possible including our number one recommended crypto exchange for 2023. Kraken go check them out Kraken Pro has easily become the best crypto trading platform in the industry the place I use to check the charts and the crypto prices even when I'm not looking to place a trade on Kraken Pro you'll have access to Advanced charting tools real-time Market data and lightning fast trade execution all inside there's spiffy new modular interface kraken's new customizable modular layout lets you tailor your trading experience to suit your needs pick and choose your favorite modules and place them anywhere you want in your screen with Kraken Pro you have that power whether you are a seasoned Pro or just starting out join thousands of traders who trust Kraken Pro for their crypto trading needs visit pro.cracken.com to get started today mantle formerly known as bit Dao is the first dowled web3 ecosystem all built on top of Mantle's first core product the mantle Network a brand new high performance ethereum layer 2 built using the op stack but uses eigenlayer's data availability solution instead of the expensive ethereum layer 1. not only does this reduce mantle networks gas fees by 80 but it also reduces gas fee volatility providing a more stable foundation for Mantle's applications the mantle treasury is one of the biggest dow-owned treasuries which is seating an ecosystem of projects from all around the web free space for mantle mantle already has sub communities from around web3 onboarded like game 7 for web free gaming and buy bit for TPL and liquidity and on-ramps so if you want to build on the mantle Network mantle is offering a grants program that provides milestone-based funding to promising projects that help expand secure and decentralize mantle if you want to get started working with the first dowled layer 2 ecosystem check out mantle at mantle.xyz and follow them on Twitter at Xerox mantle arbitrum is accelerating the web 3 landscape with a suite of secure ethereum scaling Solutions hundreds of projects have already deployed on arbitrum 1 with flourishing defy and nft ecosystems arbits from Nova is quickly becoming a web 3 gaming Hub and social adapts like Reddit are also calling arbitrim home and now arbitrim orbit allows you to use Arbor from secure scaling technology to build your own layer 3 giving you access to interoperable customizable permissions with dedicated throughput whether you are a developer Enterprise or user arbitrum orbit lets you take your project to new heights all of these Technologies leverage the security and decentralization of ethereum and provide a builder experience that's intuitive familiar and fully evening faster transaction speeds and significantly lower gas speeds so visit arbitrum.io where you can join the community dive into the developer docs Bridge your assets and start building your first app with arbitrary experience web3 development the way it was always meant to be secure fast cheap and friction free thankless Nation I am super excited to introduce you to Brian Redford he's the co-founder of a ZK evm project that we're going to find out a bit more about on today's episode called risk zero Brian welcome to bankless thanks glad to be here also excited to be joined yet again on Bank list by Justin Drake he's an ethereum researcher and repeat bankless guest Justin how you doing I'm doing great thanks for having me again but I guess this time maybe as a host asking some technical questions yeah how's it feel the tables have turned so Justin I'm going to tap you in as my co-host today so David is out and we're going to talk about this uh the Next Generation ZK EVMS so I think we're talking to Brian about the world's first maybe ZK evm that's a type 1 ZK evm and I'm not even sure the words that I'm saying or what they mean so we'll absolutely need to Define that but um you know David's out right now so Justin you're gonna you're gonna tap in and help me with this I feel like this is a continuation though of a conversation that you had with him on each CC and I think bankless listeners may have listened to an episode entitled uh ethereum's sci-fi roadmap or the Sci-Fi roadmap to ethereum in which there was this really interesting part and I love that episode by the way where you were describing this uh the ability of us in the future of the theorem to snarkify AI the evm on on kind of mainnet on the base layer and that sounded really interesting to me and I think that ties into the conversation that that we're about to have so tee this up for us if you will Justin is a continuation on that conversation I know this we're talking about sci-fi ethereum future stuff but uh what does it mean to snarkify the evm and how does that tie into the conversation we're about to have with Brian today right so big picture we're actually going to snocify all of ethereum and there's two big components that need to be snogified one is the evm which is this virtual machine which processes the film transactions and then the other part is the beacon chain now once we've snogified these two things we'll be in a position where compute won't ever be a bottleneck for ethereum so it means that for example as a validator you won't have to really have beefy CPUs so you'll be able to be a validator on your smartwatch much If You're Building Bridges between l1s you'll be able to have another L1 verify the state of ethereum without having to redo all the computations themselves it also has implications for like clients for what we call enshrine Roll-Ups which are super high security roll ups and when did the words type 1 evm come to mind type 1 zkvm it really kind of gets me excited as a researcher because it was a kind of a piece of sci-fi engineering that was thought to be you know five to ten years into the future but it looks like well there's several teams working on them uh there's for example uh Tycho um and and there's this risk zero now and uh it looks like the engineering will just be ready so much sooner so we're starting to see the light at the end of the tunnel and that has some big implications in terms of of applications for ethereum both at layer 2 but also what I'm excited about which is the layer one so what you just described here Justin is uh is kind of the Holy Grail and I still want to spend some more time with you right here just fleshing this out making sure that that we understand this going to the episode because it sets the context for the rest of the conversation with with Brian and risk zero here so the light at the end of the tunnel or what I just referred to as as the Holy Grail snark of defying all of ethereum what this means is we just get to use the spooky math you know the the crypto magic ZK math that you've described so eloquently many times on the bankless episode and um what we get the prize that's held out to us is the ability first of all you said to validate be a validator on something as small as like a smartphone or an Apple Watch so okay is is that really what we're talking about so of course one of the the end goals and the end goal the entire purpose of ethereum is uh for it to maintain for it to remain decentralized and that means ideally anybody with a basic consumer level uh computer can validate transactions on the ethereum um maina and right now the the requirements for doing that are are somewhat higher than just a smartphone or a smart watch but this will decrease the requirements the hardware profile in order to validate transactions on the ethereum maina and also to stake is that what you're saying that's correct so anytime you have a human that ends up wanting to interact with with ethereum they need to interface through a full node and there's some complications here because running a full node is not something that you can necessarily easily do on your phone and it's not something that the average individual individual would want to do and it's something that every single validator has to do if they want to become a validator so there's this barrier to entry and more often than not today for the vast majority of users we end up patching this technical barrier to entry with some level of centralization so for example if you're using metamask you're going to be connecting to inferior nodes that are kind of running the full nodes on your behalf and so there's some amount of trust that you as a user are placing into metamask so once we have a type 1 ZK VM once we snogify the VM and all of ethereum we're going to be in a position where the user will be able to interact with ethereum with much much less Hardware like a phone or a smartwatch will be able to get Best in Class access with best-in-class security Best in Class latency all with very very little Hardware that's uh does this imply anything for a bandwidth as well will this decrease the bandwidth requirements or will bandwidth kind of become the the constraint here now right great question so consensus kind of solves two problems one of them is execution and the other one is data availability snox is kind of this magic technology that removes computation as a bottleneck within the context of consensus and it turns out we have another magic technology for data availability called Data availability sampling now neither of these are really in production right now but once we have both in production you won't have to pay the cost of computation and you will have to pay a very very minimal cost for the from the bandwidth perspective so you won't even need to download the ethereum blocks all you have to do is make these small queries for chunks of blocks and that's going to be enough to guarantee that you're on the canonical ethereum chain so data availability uh sampling as well that's that's a core upgrade of what I think people are calling dank sharding as well not proto-dank sharding as I recall but but dank sharding which could occur later in the future exactly right so we're looking at Technologies you know two three maybe four or five years into the future which in a way will transform accessibility of ethereum for users um and in the end game accessing ethereum will be just as easy as accessing any other website and you'll have guarantees just like on the website today you have this cap lock sorry this this lock and https you'll have a similar log saying you're really connected to the real ethereum and you'll have to have done almost no work and you'll have have to download it download almost no data in ZK trust nobody also unlike the current kind of law Walker you actually have to trust the sort of signature verifiers ZK technology is the thing that that makes this this all possible it's what's very interesting is I I know there are people who talk about um kind of like compute scaling in blockchains Via Moore's Law and that's true but where we really get the like kind of the massive uh scalability it's more with like cryptography breakthroughs that is something I've I've learned as part of like exploring the road maps and being in this industry um for uh for for many years now is is these cryptographic breakthrough screws are the key sort of Step function breakthroughs that allow us to actually scale this technology one one other quick question for you um Justin before we get to Brian to kind of describe what what he's actually working on what we're doing here the what does this imply for maybe uh scalability on ethereum mainnet so we talked about lowering the compute requirements to be a validator which is fantastic that is a you know further decentralization unlock how about transactions per second on the ethereum layer 1 mainnet does this have any impact on that as well fantastic question so once we've snalkified the evm will be in the position where we can greatly increase the gas limit and potentially even remove the gas limit for computation specifically and the reason is that the gas limit is an anti-denial of service vector whereby when you receive a block you want to be able to fully verify that the block is valid on the order of one second and so if there's too many transactions in that block then it's going to take more than you know one second to validate but the magical thing about snarks is that the verification time of a stock is on the order of one millisecond and so you can take a block that's kind of arbitrarily large with arbitrarily many transactions and arbitrary much transaction execution and know that the execution is correct within a constant amount of time which is only one millisecond so what does that imply then so if ethereum right now supports like 16 transactions per second and we're scaling that out via Roll-Ups and last time I checked on l2b where about if you count all of the kind of Roll-Ups combined in that we're about 5x 16 transactions per second something like that and that's the the entirety of ethereum right now we're not we're not handling a Visa level throughput at this point in time it's it's safe to say but what you just said about kind of uh your finality or confirmation times of the millisecond level uh you know validation verification here what does that imply for mainnet throughput Justin right so what it means is that there's going to be a partial comeback of the layer one so I think the spotlight is going to shift to l2s for the next few years and there's going to be a lot of experimentation a lot of innovation and the layer one is really going to be lagging because we're extremely conservative and you know we're frankly kind of slow um for good reasons um but once we are able to catch up from a technological standpoint with the l2s well the l1s will also have some of the similar powers that the l2s provide and so the L1 will to an extent be able to to scale out one of the superpowers will mean that we can increase the gas limit and there's something that's kind of explicitly put in vitalik's uh roadmap diagram but another thing that we can do and I think this is something that vitalik will add in maybe the next iteration of the diagram is that we can have an opcode within the evm which allows you to verify validity proofs snarks of evm blocks itself so kind of the evm is aware of itself and knows when another evm block is valid and what this allows us to do is have multiple instances of the evm because ultimately you can think of the evm as being this single threaded CPU or virtual machine so it can only run on one call just to simplify and so there's this inherently sequential computation that's going on which is a bottleneck for scalability DVM will never be able most likely to do a million transactions per second just because we have this inherent bottleneck and so the way that we scale out once we've reached all the gains by increasing the gas limit is by having multiple instances of the evm so this is going to be evm 0 and an evm1 evm2 and the cool thing is that once we have this opcode anyone can programmatically kind of create a new instance of the evm wow so this would become kind of ethereum mainnet the lit the layer uh the layer one kind of our multi-core moment then what's what's kind of the analog are we like is it from 46 to Pentium I don't I don't know what we're doing here yeah I think that's a good analogy we're going multi-course so for a very very long time we've had these CPUs which were just one core and then what we did is we ramped up the frequency of the CPUs so it was like hundreds of megahertz and then one gigahertz and then 1.52 and then we you know nowadays we have I know three gigahertz CPUs and you can't do like 30 gigahertz and the reason is that the the transistors just don't turn on and off fast enough so there's this sequential bottleneck and so the way that you scale is by scaling out vertically uh sorry horizontally by having multiple uh cores uh working in parallel and this is exactly what we can do once we have this opcode and the term that I like to use is enshrined roll up so once we've snogified the the the canonical instance of the evm that we have today we're going to have one and try and roll up and then once we add this opcode we'll allow anyone to create as many and trying World app as they want so okay well Brian you've been sitting here waiting very patiently as as Justin eloquently described uh the light at the end of the tunnel this kind of Holy Grail and I think that you are working on that now you're not working on that within the bounds of uh sort of the the ethereum foundation and applying that to ethereum mainnet but you've got this this project called risk zero that is actually pursuing the technology that is required to get us to the promised land in everything that that Justin just described so Brian I'm I'm wondering if you could uh tell us maybe first I would love to get your kind of your reaction to What Justin just said and anything that that maybe triggers in your mind and then we'll talk about what you're building out at uh risk zero and this um this platform that that you're calling zeth right now but but first of all any reaction to What Justin just said yeah I mean it's it's pretty clear that uh with all of the advances that we're making in cryptography as you said that you know the capabilities of ethereum are just going to continue to compound and compound and uh probably much faster than we would have seen or thought of even possible so I think the future is very bright um given all of the you know advances that are being made across the entire space and this is just a you know one key in a very large puzzle so it's very exciting okay well so tell us what you're building then on out on the frontier which again is looks a little sci-fi uh from our perspective but seems to be at the same time also happening faster than many would have imagined at least many years ago so uh your company is called risk zero and you've got I believe this this platform called zeth and we describe this as a type 1 ZK evm and this goes kind of beyond what I even know I'm describing so like what is what is death and what is a type 1 ZK evm yeah so that is uh is an evm implementation that's actually based on reth which is like get an implementation of the evm however it's one that's built um using rust uh and a type one the AVM is simply one that can actually process the full nature of ethereum in an entire block and prove uh effectively snarkify uh an actual ethereum block as opposed to some of the you know other l2s that you have out there that have made various compromises in order to um in order to create a more approvable evm type one medium makes no compromises and sticks to the original ethereum specification but still produces this snark that that's succinctly verifies that the evm computation was run correctly so the other ZK EVMS that that we've talked about many times before the ones that polygon are are building the ones that matter lab is building the one that scroll is is building uh you differentiate that and you'd say that's not a type 1 evm because it's a little bit different in some way can you is that correct and how is it different exactly they're all different in different ways um and uh that you know they often change exactly how things get localized how States stored and they generally tend to implement all the Optics I don't know just you know expound upon that yeah so generally speaking what will happen is that they will want a solidity developer and solidity code to be reused that's kind of one of the the main goals and so they're going to re-implement every single up code but in you know be under the hood under the Bonnet they're going to be making some some taking some shortcuts to to optimize things and like one of the Prime kind of shortcuts is to change the way that the the storage is is mercolized so today we have what's called a Patricia Merkel tree which which is using this ketchak hash function there's all sorts of technical terms just to say that we the way that we handle storage is very much non-snock friendly and so what these teams have done is they're just taken a completely different approach to authenticate and markalize the the state another possible difference is changing the gas schedule right because DVM gas was designed from the perspective of CPUs if a certain operation takes you know 100 nanoseconds and another one takes 10 nanoseconds then you know the first one should be kind of roughly 10 times more expensive from a guest perspective but the gas schedules don't translate very well to snorkeland so you could have a very very cheap instruction on the CPU for example you know doing a a hash like ketchak that's extremely fast on the CPU but if you were to do it in Stockland is extremely expensive and so in order to protect themselves from these denial of service attacks where someone can craft a block with lots and lots of catch act and basically mount a denial of service attack on a specific roll-up they've adjusted the gas schedule so it's not exactly compatible with the evm that we have today on mainnet at layer one so because of those changes because of those um you know I guess optimizations or or differences these type 2 ZK EVMS are not candidates to become an enshrined roll-up at least in their existing form is that correct and and this a type 1 ZK evm is closer to a candidate to becoming an enshrined roll-up am I making that connection correctly yeah that's exactly right um but what I'll say is that oftentimes like these are journeys right they start somewhere and then they incrementally become more and more compliant with the evm I mean this even happened with optimistic rollups right at first they had these small modifications relative to the evm up codes and then they said no we want to be exactly equivalent with the evm up codes um and this journey is going to happen for the ZK evm roll-up implementations I believe and you know part of the reason is that you get to benefit from a lot of tooling from a lot of Standards from a lot of network effects um but the the trade-off here is that it's much much harder from a technical standpoint but what's what's happening and this kind of magical to see in front of our eyes is that the technology is improving at an extremely fast pace we kind of have an equivalent of Moore's law for snark improvements and I don't know what it is but it's something like I don't know improving by 4X every single year so give it a few more years can we make a drink so I hear please I want a lot like well we have to Moore's law with another Moore's law on top of it all right um yeah okay okay um so this is uh about the limit of my technical proficiency here and I'm I'm wondering uh Justin if you could sort of like what questions do you have for for Brian here actually about how this works so we're talking about you know this type one ZK evm we've we've fleshed out the rough Contours of what this actually is but I think this has an impact on a lot of things on on Bridges uh we talked about enshrined Roll-Ups multi-provers you know there's the performance conversation security licensing type of conversation uh why don't you take some of the technical details here and and maybe uh you know I'll come back and ask the dumb questions as they arise in my mind perfect sounds great um but I guess I do have one non-technical question which is a little bit about context setting which is that it seems like you guys were in stealth mode for a relatively long amount of time maybe you know a year or two and you know a few days ago when you made the announcement metallic was messaging me and it's like who are these risk zero people you know are they you know are they are they doing good work can they be trusted etc etc and um you know if vitalik is not aware of you guys maybe the listener is not also not aware of you guys and so I guess my question is what prompted you in the first place to build a ZKA VM normally when you build the KVM is this because you're aiming towards a roll-up but my understanding is that you're not aiming towards a roll up so what is the background here yeah I mean so risk zero got started with this idea of building out general purpose ZK uh capabilities so the ability to actually prove any computation so not just the evm like an existing game you could prove Doom you could prove Linux people are actually using this to prove uh execution of Linux so uh ECC not this past one but two years ago um or two weeks CC's ago I was talking about the fact that you know in my mind the best way to build a ckevm was to actually just take the code that people have already read and then run it in the sort of general purpose context because you don't actually need to then engineer all these hundreds or of circuits so basically reduces the amount of capital required to actually run an EPM and produces a world where the the proofs that you're creating are very much in line with the clients that created them so um yeah I would say we've been thinking about doing this for a long time it's just getting the sort of technical requirement getting the technical capabilities over the line to the point where we could do this we really just got there like two months ago so then as soon as that happened we're like okay now we have to actually try to make the evm real the type 1 ebm and it turns out like it was you know fairly straightforward once we got the you know have an extra year of engineering done to get the sort of continuations and long-running proof feature to work and Brian this is maybe the the flash of lightning that uh Justin is referring to because it um rasira just came across my radar last week as well and David was like Hey I'm gonna be out he's at Burning Man actually so he I'm gonna be out uh next week Ryan you should go talk to um talk to these people and and see what's going on and this is the Tweet introducing zeth a fully open source type zero ZK evm built on the risk zero ZK evm and Bonsai Seth is a performance upgradable and scalable way for developers to ZK approve any ethereum Block ushering in the next generation of ZK and evm so um pretty pretty big uh you know tweet thread to Splash in the world and uh yeah that's part of the context for this conversation all plus one Justin is like we want to find out what you guys are doing what's going on here yeah so the type zero thing is definitely a joke so I might have brought some people the wrong way but the idea like it's a type 1 evm but you didn't have to do you did zero work to make it work because we just utilized all the hard work of of everyone else in the space to create this that platform it's not entirely true we had to change some of the ways like the miracle Patricia Works to make sure it's like more snark friendly or Stark friendly um and uh and then we also had to modify a bit of the database back end so it definitely required some brilliant work by some amazing Engineers but like a month and three people to get this over the line now you know there's tons of room to increase the performance of the system and all kinds of things like that but we really have gotten to this kind of uh base level of now we can actually ZK prove uh ethereum exactly as is so if I were to summarize um it sounds like you guys started off very much as a technology company focused squarely on on stocks and snockifying the world and you have this really interesting approach which I guess you know we should we should dig into very interesting technical approach but in our in our prequel yesterday um one of the things you mentioned was that there was some sort of partnership maybe with another rollout projects maybe the the optimism project and that little piece of nugget was kind of interesting to me because it kind of what created the bridge between the technology company and more so like the the crypto or the ethereum company yeah I mean we've been talking to op like on and off for a while because um this idea that you can take ZK and sort of create fraud proofs as soon as you can ZK prove something you can also DK prove that something is different than what other people said it is so you have this kind of ability to automatically create a fraud proof If you if you have a ZK approvable system so we've been chatting with optimism for a while they eventually decided they were gonna um send out this like our peer mission for uh people to actually z-kify the op stack um and us and Mina and a couple other teams all applied and our our solution was very much based on the preliminary work we've done on that we realized rather than you know taking this very complex fraud-proofing system which is an amazing work of engineering but kind of sidestepped it and said let's just take the op rep um like in development libraries and just create a way to CK prove those which effectively provides a broad proof because now you can prove well once it's done which will be in you know nearest Future you'll be able to prove that an optimism is not a different different from what the chain actually agreed on so we're gonna actually see I think in the near future through this partnership with optimism the ability to get um you know liquidity much faster than seven days and remove your assets around and access your money so um yeah and this is it gets to sort of what you were saying about the magic of starks and being able to you know in the distant future have ethereum itself be fractally hyperscale however you want to say that right so I I think what is partially going on is that optimism as a project which is you know an optimistic Roll Up is thinking down the line of upgrading to a ZK roll up and they submitted this request for proposal where they're saying okay anyone in the world if you can help us snogify optimism we're gonna give you money now I had a look at the the grant um kind of the request for proposal and it was 250 000 op tokens which at current price is about 375 000 now the reason I mentioned this is because if you had asked us you know two years ago to come up with a prototype proof of concept for type 1 zkavm with open source code running in you know on on the cluster of gpus that would have cost Millions if not tens of millions of dollars and for now for half of a million dollars you know we have this new team coming forward and and providing you know technology and I think one of the key tools used here is is abstraction right there's this kind of this massive shortcut that was taken um and so there's this this kind of various pieces of the puzzle and the way that I think about it is that there's there's three steps and if you you start with an existing FM client in this case uh ref and then there's this new intermediate step uh which is risk five which I guess it would be good for you to describe what exactly is risk five and then there's kind of this final step towards getting a stock and it it seems like actually that there isn't much work going from the client to risk five almost no work and then same thing for going from risk five to the stocks okay can you describe these three steps and the work involved in getting one and really quick risk five what is risk five we know is it's a company right so with zero's name comes from risk five and risk five is uh it's an open source instruction set architecture for actual microprocessors so people are familiar with like the Apple M2 or arm or x86 um or mips uh you know these are actually instruction sets so similar to the evm they have op codes um that tend to be you know there are op codes that can actually be reified in a hardware in a reasonable manner so x86 has you know hundreds thousands of them so it's a complex instruction set of architecture but then you've seen the shift towards arm and MIP is very old but risk five is kind of this spiritual successler to mips in a way so it's a very small Set uh well has a couple different like dialects but you can boil it down to about I think only 40 something op codes uh at its core so um so what we've done is created a ZK VM so it's not an evm it's the same idea except what it does is process these much lower level instructions um so it's not really pre-compiled or anything like that there are Escape patches that you can use but um so there's this core uh very minimal set of computing instructions that that risk five sort of publishes and people can actually take um sci-fi the campaign that invented it you can just get a spec from them and you can put risk five cores into whatever project you're doing so almost every computer that's shipping now does have some number of risk five cores somewhere in the sort of bigger chip so most chips any anything people think of as a CPU or a anything like that is really a system ownership that probably has you know 20 different cores in it so Anyway by doing all this we've taken the ability to Z hey prove something and said we're gonna be able to ZK prove anything you could run on a normal processor um so the reason that sort of going so going from uh risk five to the uh ZK proving of risk five was something we um you know surprised the ZK world with at least about a year and a half ago when we when we released this I think you know the time Ellie had said that he uh eleventh song from starkware thought that you know general purpose ZK VMS at least five years out so this is another example of ZK kind of just um happening much faster than people would otherwise expect so by focusing on this minimal set of instructions we were able to create a very performant ZK VM and most of the work to translate from anything else into risk 5 has already been done by the risk 5 development community and by the llvm compiler community so we're really just leveraging the network effects of Open Source software to take it as Justin said a master shortcut to to get to ZK proof of ethereum so so basically there's there's two translation steps or kind of compilation steps that need to happen and it turns out that the the rust programming language by default today already allows you to compile to a specific to various CPUs so when you have a rust program you can compile it to x86 which is you know a lot of Intel machines run on this you could compile it to arm which is a lot of the new Macs and a lot of phones run on arm but you can also compile it to this kind of this more Arcane but still kind of popular enough to be supported instruction set which is called risk five and so there's there's basically all the work has been done to go from rust which is uh you know for example ref which is written in Rust to risk five and then there's this one time step that needs to be done to go from risk five to a stock and this is the heavy lifting that Brian and his team have done but it's a one-time thing and so now we can kind of take any Rush program that we want and kind of reap the benefits of of abstraction so now what the the the the the the normal the current I guess the the traditional Paradigm for snarkifying things is to work very very close to the metal very very low level right you you have a program that you want to snogify and you're going to kind of jump through lots of Hoops and kind of work with these polynomials and you know very low level programming languages partly because there isn't much tooling but also partly because you need the performance of these really low level optimizations but one of the things that's happening is that we're getting more and more powerful abstractions which means that as a developer you can work with higher and higher Pro level programming languages and Russ is an extremely kind of high level and friendly programming language and within the blockchain space specifically it's extremely popular um and in combination we're finding all sorts of optimizations both kind of at the software at the hardware level to make this palatable like it you know maybe we should move to Performance which is that back then you know we could have said yes you can go ahead and do it but it will take I know days to produce a proof for an ethereum block what kind of performance do you guys have and and how did you get there yeah so the performance varies based on which kind of Hardware actual Hardware Target you're running the ZK VM on so we support um CPUs we support um the M2 GPU and we support uh Nvidia uh gpus as well um so getting to this level of performance has been a multi-stage journey and honestly there's a lot of room for us to to get even more performance out of it but one of the early choices the reason we use this particular subset of is five the 32-bit instruction set is because it lets us operate in the sort of smaller Prime field which is much more amenable to being accelerated on gpus and specifically I think interesting to the sort of ethereum space and blockchain in general um you know this smaller field means you don't need these massive crazy ZK proving rigs anymore you can actually do ZK proofs using like a 16 gigabyte desktop GPU um so that's actually so so we built a proof system that could run in these really small kind of consumer grade cards however then that had some other kind of downsides like you couldn't run giant programs so we built this system called continuations which uses which is like folding you've mentioned a bunch so it's a way to take uh proof and split it up into a bunch of small proofs and then let a bunch of different parties effectively prove bits of them and roll them back up into into one single proof so getting to this level of performance we had to optimize the recursion circuits because you know taking that 1024 proofs and rolling it down into one proof you know takes 10 vertical steps of recursion um and uh then beyond that we have this ability to actually run the proving computation itself yeah as I mentioned on the GPU rather than a CPU and we see pretty significant gains for that but there's we're just really kind of scratching the surface because we haven't we focused on enabling everything which is kind of our core thesis let's do the general purpose thing let people actually prove something and then we can focus on the performance where it matters so um yeah so it's been a combination on that on that performance so I'm Justin kind of like the interests are exploring this um throughout the possibility that someday we could run an ethereum a snarkified uh ethereum validator from our smart watch it sounds like there are a lot of performance steps necessary to get there and I'm I'm curious like how close are we so um is what you're saying Brian that right now we could we could run what you've you've developed which is this ZK type 1 evm on a home consumer laptop this is a pretty beefy laptop and then how many steps away are we from getting that to like a smart watch well so proving I don't think you're gonna when you end up in this sort of in trying to roll up world or you're not going to have the proving be done on the Smart Watch The Proving will buy these machines off in the cloud right or in this decentralized network and then the verification like because your snark or Stark like they're really smallest the snarts especially and you know it takes literally fractions of a millisecond so the computing power to verify the snark is there and then once you have data availability sampling you know you really just don't need that much information to actually participate fully in the network so you can have a very light light line so then why does performance matter so much oh performance of um of the proving system yeah uh I mean effectively it gets down to how quickly you can make these sort of evm blocks right like right now it takes us um if we use 64 of these off-the-shelf machines it takes about 50 minutes and I think there's probably an easy 10x there but um if you use even more machines we can get down to 12 minutes but realistically if you want this sort of enshrined roll up you need to but what did you say just in two seconds if you want to if the use case specifically is being a validator then you want to when a new block comes in you want to know that it's valid you know a second later there's basically the latency the proof latency the time it takes to generate the proof should be on the order of one second and today we're not there yet we're you know maybe a hundred to a thousand X so let's say 2.5 orders of magnitude away from from getting there and so performance matters for two key reasons one is this proof latency that we you know for some use cases we don't really need the low latency but for other use cases we do need the low latency and the other reason is just diminishing the size of the prover so nowadays if you want to be a approver more likely than not you're going to you know rent out a rig of gpus on AWS you know Brian was talking about 64 gpus uh I believe on AW us and that's not super friendly to a a decentralized proving network of people at home and so what we partially want to do as well is kind of shrink all these 64 gpus into like a small box and the way to get there in my opinion and be curious what your opinion is Brian is to have snock acceleration so we went from CPUs to gpus and then the end game is to go from gpus to to A6 yeah I mean I think I still think even when you get to the Asic level you're still going to end up like when you have a huge decentralized network of approvers maybe these Asics reunion people's phones you're still going to end up splitting um you know proving an entire each block probably up over you know hundreds or thousands of nodes um so I think parallelism is critically important no matter what but the ability now that we've sort of Shrunk the requirements of the prover down to where it is the I think the ability of Hardware acceleration to really make a difference is actually there I was pretty bearish on hardware for the first year of the company's existence because I didn't think uh I didn't think that people were going to be able to do better than Nvidia it's really hard to do better than Nvidia with their sort of GPU performance but um the stuff I've seen coming out of several Hardware teams recently is really um I think there's going to be uh yeah the ability to get to you know gigahertz level GPU uh sorry gigahertz level ZK proving um through Asics in the you know five year time frame let's say three to five years yeah okay so if I were to try and summarize you know where does this performance come from uh which is just to recap it's it's like a 10 minute roughly speaking 10 minutes to one hour proof latency comes from three different types of Tricks one is on the proof system itself where you you move to this different type of so-called finite field which is 32 bits as opposed to something larger you've leveraged the gpus which you know as you said Nvidia does a great job with their gpus which I use for AI but can also be used for for snogs which are also extremely compute intensive and then there's this final really beautiful trick which is basically recursion where you take a big chunk of computation you cut it up into much smaller chunks and then you do the proving for each small Chunk in parallel and then you kind of reassemble all the pieces of the puzzle and all of that can be parallelized and distributed very well said are you a metamask user well you're listening to bank lists so of course you are the wallet you know and love just got a whole lot better metamask portfolio is the ultimate One-Stop shop for all of your crypto needs it gives you a holistic view of your crypto portfolio across multiple chains and multiple addresses all at once you can easily View and manage all your coins tokens and nfts in one convenient place just by connecting your wallet and a mask portfolio goes beyond just viewing your portfolio though inside the portfolio you can do all the incredible money verbs that make D5 so powerful you can buy swap bridge and stake your crypto assets with ease it's like having a powerful battle station for all your D5 moves right at your fingertips so if you're looking to do more in web your way metamask portfolio is the answer I already know that you have metamask wallet so go check out your metamask portfolio learn more at metamask.io portfolio introducing ethx from stator ethx is a liquid staking token designed to maximize rewards all while securing ethereum with stator you can run an ethereum node with just four eth which is 85 lower capital and 35 higher Returns versus just solo staking stator has a multi-pool architecture with both permissionless and permission node operators to enable decentralization and scalability stator has extensive experience in building liquid staking Solutions on six proof-of-stake blockchains and is trusted by over 70 000 stakers stator has partnered with over 40 leading protocols on these chains to bring D5 utility to their liquid staking tokens stator is actively building Integrations and Partnerships across ethereum to bring the same great defy utility to the ethx Token while smart contract bugs are always a risk in defy the ethx smart contract has received three independent Audits and has a million dollar bug Bounty with immuneify go to statorlabs.com staking protocol today you know uniswap it's the world's largest decentralized exchange with over 1.4 trillion dollars in trading volume you know this because we talk about it endlessly on bankless it's you to swap but uniswap is becoming so much more uniswap Labs just released the uniswap mobile wallet for iOS the newest easiest way to trade tokens on the go with a uniswap wallet you can easily create or import a new wallet buy crypto on any available exchange with your debit card with extremely low Fiat on-ramp fees and you can seamlessly swap on mainnet polygon Arbitron and optimism on the uniswap mobile wallet you can store and display your beautiful nfts and you can also explore web3 with the in-app search features Market leaderboards and price charts or use wallet connect to connect to any web3 application so you can now go directly to D5 with uniswap Mobile Wallet safe simple custody from the most trusted team in D5 download the uniswap wallet today on iOS there is a link in the show notes now I guess the the next big Topic in my mind as the film researcher and thinking of type 1 zkavms is security right we have traditionally a lot of complexity going on here and you know the likelihood for bugs is very very high and I have this saying you know which is maybe I guess a little arrogant but I believe that every single ZK VM has multiple critical vulnerabilities today and so we need to be prepared as a community to either have like mitigations to these bugs and there's a lot of very good ideas and we also unfortunately need to be prepared to roll ups getting hacked so just like we've had a bunch of Fairly large roll-up hacks oh sorry Bridge hacks on the order of hundreds of millions of dollars you know maybe close to a billion dollars uh we could have multi-billion dollar hacks uh in the in the ZK roll-up space and so I'm curious how do you think of security and how do you think of removing every single bug from the system yeah so obviously a huge topic um so me and my co-founders actually know each other we met 23 years ago in the Seattle like infosec scene so we were all like hackers back in the day so we have a pretty deep set of sort of experience and knowledge in this space and um that's part of the reason we chose risk five also it is actually has like there's a full formal specification for it you actually can prove that certain systems formally prove that certain systems Implement uh risk five we haven't gotten to that level of sort of formal verification with what we're doing yet you can imagine getting to the place where you have very strong guarantees that the ZK system itself is proving risk five and only risk five and that um and that the sort of conjectured amount of security the number of bits of security is actually um you know is actually what we think it is so there's a lot of work on the mathematical side to sort of prove that the crypto system itself is like the proving system is actually doing what it's supposed to separately you then need to audit as you mentioned the actual ZK circuits and I think that's an area where this approach really shines is that because the risk 5 instruction set itself is small it means there's much less surface area to audit although we do have these sort of acceleration circuits um that one can add on to the system it still doesn't increase the sort of audit surface of the ZK part to to the same degree that um you know doing uh ZK VM from scratch wood now you're also in case you pointed out the prequel by doing this your you are potentially onboarding a few more like security considerations for instance you're trusting the rust compiler and you're trusting llvm now these things and they're often you know bugs in all of them I think we just around one the other day so you know compilers especially for new architectures aren't uh perfect but um this is one of the reasons again why we chose an existing architecture I don't think arm or something older more mature would have really fit in a ZK circuit but by choosing an existing architecture we get to leverage all of the billions of dollars of investment that's gone into the security of this existing ecosystem gotcha so if I were to summarize this kind of this final step where we go from risk five to a stock which is actually fairly digestible because risk 5 is relatively simple actually this reminds me of Cairo from stockware they have a an even more kind of reduced instruction set which is super simple and what they've been able to do is apply some formal verification tools to prove that you know things are working properly there and the hope is that this one-time investment we can really drill down with powerful tools like formal verification and proof that it's correct and then we kind of have the rest of the can of worms which is kind of this this fairly complex compiler to go from rust to risk 5. and it's possible that you know there's uh bugs generally speaking in the rust compiler but it's also possible that there's bugs specific to compiling to risk five because risk 5 is one of the more Niche instruction sets that you can compile to um but what might happen is that we're going to start building these roll apps you know which are securing billions and billions of dollars and then Lindy starts to kick in and you know we might have bug Bounty programs and it's kind of interesting where in a way the blockchain space might make a huge contribution to compiler security that's going to be way more eyes we recently had this bug right in the Viper compiler and that caused a bunch of of bugs um and it would be great if we could apply kind of similar tools like formal verification to compilers like rest compilers which today sounds you know very grandiose but maybe the blockchain use case is so no security critical that we're going to try and move forward partially in that direction yeah I mean people have done this for C and if you're going to make if you're going to do formal verification proceed then you know rust is probably also within the bounds of of what's possible but these efforts take decades or a really long time but blockchain accelerates everything to obscene decree you know ZK would still be like a niche academic Pursuit I think if it weren't for blockchain needing it so badly yeah okay great so I guess the the final kind of semi-technical topic that I have is around uh licensing um so if we are going to be using a piece of code you know at layer one really for it to be kind of palatable socially palatable I guess uh the licensing needs to be good and I guess the kind of favorite types of licenses that we that we have might be Apache 2.0 and and the MIT license can you discuss what have you open sourced and under which licenses yeah so the sort of core risk zero ZK VM so that the risk five proving engine that's uh licensed into the Apache 2 license right now always has been um and then that itself will probably be Apache 2 MIT licensed we might also end up am I do licensing everything because it's kind of the standard um in the rust Community um and and op like is a fan of MIT so um so that's for the system that produces and it takes uh the evm program and chunks it up into a bunch of little proofs and then proves all of those the parts we haven't yet open sourced or released is the part that actually takes all those proofs and recurses them down into a single proof and then also this thing that converts the start that we use into a stark so there are two kind of aspects of this that we haven't launched and effectively we're waiting for these things to get through security audits because the it's with the current system as is you can't really the proof's much too large to put on chains so it's kind of hard to get wrecked because you can't actually use stuff on chain as readily so right now if people want to use the system you have to get an API to you from us but that's definitely um you know not the direction we're headed we're very much committed to fully open sourcing the entire system but we want to we want to make sure we have uh you know high confidence that people are not gonna um and get wrecked soon because of the ZK system okay understood so you've open sourced like several key components under a very attractive license Apache 2.0 and you're thinking of dual licensing it maybe with MIT so you can choose which license you want when you start using the code and like part of the prover is already open source but maybe some of the final things involving the recursion and kind of the wrapping it into a tiny tiny proof so that it can be consumed on chain that's not yet open source correct yeah exactly so Brian um risk risk zero seems to have come out of nowhere and uh you know it's super incredible how fast all this is coming to bit to um to Bear here and um like open source um working it sounds like first to to kind of snarkify our favorite l2s out there like working with optimism and others so I imagine that's going to be a bulk of the work at first um what do you guys planning to do here like what's the business model for for risk zero um it almost sounds like what you're producing is is a public good and here you're Justin and I and the rest of the bank list Community are kind of you know cheering you on but I'm sure you have investors I'm sure you have VCS here that have you know but you put some money in and uh they're going to expect some kind of return yet you're not building a layer to yourself as of as of yet it sounds like so or maybe you will uh so yeah tell us what risk zeros is put on Earth to to do what do you what are you planning to do in this space yeah um in this space I'm really focused on this Bonsai CK application development platform so something we've been working on for a while um because you can use ZK for all kinds of things I don't know how if you've talked uh to like many of the ZK co-processing teams but you can use Bonsai effectively the ZK co-processor which lets you run a bunch of complex logic off chain and then just a test to it on chain so we like in Denver I talked about a like a L1 Club effectively running an order book on ethereum directly at uniswap you can achieve roughly unit swap level pricing by doing all the order book matching off chain so you have your orders the orders get placed on chain and then Bonsai sort of just reads those orders does all the matching uh in ZK just on one machine some and ran any random corner of the internet or AWS or wherever you want it to be and then says okay here's proof that these are the orders that got matched at this price and so so this is Bonsai is kind of a platform for Z ZK snarkifying apps maybe let's call it apps and uh Roll-Ups uh anything really so we expect um right now it's a centralized SAS offering and we think there's long-term value in sort of providing an Enterprise sort of open core uh model there but we will definitely be building a decentralized network around that as well exactly what that looks like um who knows it's going to be very focused on um on the sort of core accounting for proving uh tasks so kind of like a proof Marketplace but we expect that it will add uh interesting features for application developers over time because this is ability with continuations to do sort of the ZK Docker you can prove something up to a certain point you can suspend the thing and then you can just keep going on later so you can kind of imagine having a ready to go evm image whereas people can just resume it and they have like full access to the ethereum state is is this like a sort of an AWS for ZK proofs kind of thing only it's just like a Marketplace here and and yeah you're looking to try to make it as decentralized as possible that that could be a future here definitely and this is like when we got into I mean Jeremy or do you sign this is just always into Ai and ZK and all of these things but when we started really thinking about what we're going to do with it I think that really got me excited was um was the potential of this technology to kind of let people who are building infrastructure and applications not need to rely on you know Facebook Amazon Microsoft Google for everything so this idea that we could actually fully decentralize um the sort of infrastructure that goes into many of the applications we use has always been really appealing um part of like what this technology is capable of so I think Bonsai is going to be a platform that helps people do that so Brian what do you think happens next in kind of the road map so all of this it seems to be happening faster than than we all thought it would which is uh so incredibly exciting the level of investment the space and the level of talent in you know brains now being focused on cryptos just uh absolutely astounding we we almost ended the episode with kind of the one one of the last you know Parts which I think is um of course the the public good that is ethereum mainnet kind of that will upgrade to a fully starkified enshrined ZK evm probably last right we're going to want this fully proved out in all sorts of ways across crypto before we get to that stage so I'm wondering what do you think will happen in the in the interim over the next six months over the next you know one to two years how do you think the tech that you're building will start to in impact the crypto landscape we just see you know um ZK snarkified Layer Two should we expect to see this technology applied mainly in Roll-Ups are there there are apps that you you see this being applied or or um a few years yeah all of the above um we're definitely working with um you know l2s l3s rollout Frameworks however you want to think about all of that space um and also you know we're working with people on D5 projects and eventually gaming is going to be a big part of this the way I see this playing out is you know just like friend.tech kind of surprised everybody with how much better the crypto onboarding experience has become and you sure there's still a lot of room to go I think the uh head like that the Headway that people have been making and making crypto applications easier for people to use is gonna then also increase demand for the capabilities of these systems to be um you know to be able to do more and more interesting things so I think we'll see the K planning a critical part in in all of this by enabling people to do whatever computations they want off chain and readily attest to them on chains the sort of ZK co-processing architecture is going to be a huge unlock for applications built and yeah for webview applications well this has been great uh Justin do you have any other questions for for Brian or should we start to close this out here I think I have one uh final question which is around you know your alignment with ethereum like I think we had a uh you know during the prequel it sounded like as an individual as a as a person you were in this space for quite a long time and you know you have a sudden set of beliefs and I'm curious what those are but also how this translates into the culture of the company yeah uh I mean our sort of core Three core values or like Integrity transparency and agency and I think uh you know if those aren't like ethereum online they're not really sure what that sort of even means so coming out of the sort of hacker culture that um you know the founders came from uh it just seems like a very natural sort of fit to the to the sort of ethos of ethereum so I think value-wise yeah we're really the the vision of the sort of hyper structure world of the future is very much something we all resonate like very deeply resonates with all of us Brian what first brought you down the crypto rabbit hole uh you know uh buying supplies for Burning Man that's funny as my co-host is literally at Burning Man right now fantastic um no but it's it's been a crazy journey and so it's really fun to get more and more into this space yeah well very good and uh and maybe my last question is is kind of the high level um to to Justin uh so this idea of hyperscaling ethereum using kind of like fractal um you know crypto proof CK proofs on top of ZK proofs I mean has this always been part of the plan or is this just happenstance and yeah I guess when you think of the term hyperscaling how do you envision looking um how do you envision ethereum looking you know five years from now is all of this stuff just kind of working and what's What's the total transactions per second I don't know what's what's the Sci-Fi ethereum with this Tech applied how does that look Justin right so I mean if you want to think in terms of end games and and fundamentals you know you go back to these fundamental resources computation that's just not going to be a problem of consensus and the way that I think about it is that consensus is this very flexible tool that can solve all sorts of problems and then cryptography what it does it kind of it gives you a few superpowers that allows you to reduce the scope of consensus and basically you have more and more crypto and less less economics if you will and historically actually one of the big breakthroughs for consensus was simple message authentication and signatures right that kind of changed the model where where you had you know these messages that could be intercepted and modified but that didn't really matter because they were kind of signed and authenticated and so the model was what can you do with consensus given signatures and now we kind of have this this new tool which is much more powerful from a cryptographic standpoint which is what can you do with consensus with stocks and it turns out that like the things that needs to solve are our data availability and and finality it turns out that data availability is something that we can solve with with database sampling as I mentioned and then there's this other thing finality which I only discovered recently you can also solve with cryptography with this really really sophisticated uh pieces of cryptography called One-Shot signatures which actually marry quantum mechanics and cryptography and so then you can ask ourselves okay what is consensus used for if you know cryptography solves all these things well it turns out that the last thing that's still not solved is this concept of liveness like how do you make sure that the change just keeps on going even if like validators just you know don't show up for example if there's World War III and 90 of the population has has gone and this is kind of cool because we're reducing and reducing and reducing the scope of consensus and we're kind of hardening the rest with pure cryptography and and physics and Mathematics um it's a very long journey to get the One-Shot signatures because we need these quantum computers but in the meantime we're gonna enjoy The Spoils of of snox which are extremely significant well it seems like we have entered the the snark era for sure and there's going to be a lot of that applied to crypto in the future so Brian Justin thank you so much for for guiding us on the tour today it's been much appreciated thank you thank you thankless Nation risks and disclaimers gotta let you know of course none of this has been Financial advice I don't even think we talked Bryce in this whole episode so obviously not crypto is risky so our compilers so our new layer twos you could lose what you put in but we are headed west this is the frontier it's not for everyone but we're glad you're with us on the bankless journey thanks a lot [Music] foreign [Music] 