all right david are you ready man oh my god i'm so ready i know you're ready for this okay so the headline here is a tale of two outages there have been two outages this week in crypto chain outages uh one the solana chain which we'll talk about and the second is arbitram which is a layer two uh that we'll talk about as well so why don't you take us through a tale of two outages let's talk what happened with solana this week yeah so solana had a peak load of over 400 000 transactions per second which is a lot uh and then the uh at solatus status twitter account says um solana main beta encountered a large increase in transaction load which peaked at 400 000 transactions these transactions flooded the transaction processing queue and the lack of prioritization of network critical messaging caused the network to start forking this forking led to excessive memory consumption causing some nodes to go offline engineers across the ecosystem attempted to stabilize the network but were unsuccessful and so as a result of this a bunch of validators had to coordinate inside of a discord channel i believe to coordinate a restart of the network and then uh as a result of that uh the solano was down for over 18 hours i think it was something like 18 to 20 hours and then one some sort of con like coordinated consensus mechanism to restart the network checkpoint and restart the network i'm again i'm not a distributed systems developer but they were able to get that solana network started up and running again uh 20 hours later so it was down for over 20 hours which is kind of crazy 20 hours down and when you say down we're not talking about degraded we're talking about like dead down there's didn't exist your transactions aren't going anywhere no one's listening to them like your money's frozen like there's no withdrawals right no yeah right nothing nothing frozen this date is frozen and what had to happen is they basically had to uh eventually reboot the thing and i think it required like the support of 80 of all of the the validating stake validating nodes and that was kind of the coordination that you're talking about right um we'll get to some takes there but like i will say never in my history in crypto have i seen a chain worth like 40 50 billion dollars tens of billions of dollars be down for 20 hours like that's pretty unprecedented has never happened at that level of value people have tried to compare this to the uh ethereum shanghai tax in 2016. we we gotta talk about that one i don't think the comparison is apt but before we do let's talk about we said a tale of two outages right here's the other a second outage happened at just about the same time and i put outage in kind of quotes because it's kind of an outage but also kind of not but tell us what happened to arbors from david yeah so arbitrary the layer tudor ethereum had their sequencer go down so another interesting thing like i said at the beginning it's interesting that both of these happened really really closely to each other i think within the same like hour or maybe two hours and it had both had to do with the sequencers for both um uh arbitrary and uh solana uh one of solana's big claims to fames is it has this like natural sequencing built into the l1 ethereum doesn't have that a sequences things it allows whoever proposes the block to sequence the transactions as they see fit um but arbitrarily has a centralized sequencer a centralized sequencer almost kind of is what a rollup is and that part broke down uh and so um the report from arbitrarium says all transactions that had been had been accepted by the sequencer were included and not reordered uh transactions uh accepted by the sequencer between 10 13 and 10 14 am were reassigned a timestamp when the sequencer returned online at 10 59 a.m and so arbitrary was down for about 45 minutes and they say that the root cause of the downtime was a bug causing the sequencer to get stuck when it received a very large burst of transactions in a short period of time almost very similar to what happened with to solana and then the issue had been identified with a fix and had been deployed uh and so there are some takeaways that that we should we should talk about with uh the whole arbitrary being out um yeah i'm actually glad i'm kind of glad david this happened at the exact same time this is great this is such a great test it's it's a great learning lesson i think for the ecosystem so we can say exhibit a what happens when a layer one sort of has a complete outage and requires a restart from a coordinated set of validators and then exhibit b what happens when a layer two uh goes down as well so maybe let's talk about the the you know the contrast here one interesting contrast is when our the arbitrary outage was a little bit different so you know sending layer two transactions was not possible so you couldn't transact on layer two but ethereum wasn't down right so you could actually still get some transactions through on arbitrom in sort of a a roundabout way as i understand why why don't you take us through when arbitration fail how did it fail right so when arbitration failed the arbitra our arbitrary sequencer stopped listening to incoming transactions and so all the benefits of the l2 all the scale all the throughput all the low gas fees we lost that we that's what we lost um the sequencer stops hearing transactions and start stopped writing them to the arbitrary blockchain the arbitrary l2 but the whole point about rollups is that there is a natural fallback to a rollup that doesn't require you using the sequencer and so because of the rollup design users could just make an l1 transaction and update the state of the elt of the arbitrary l2 themselves using the main chain it's like a user only back door to arbitrarium if for whatever reason the the sequencer is not listening to transactions maybe they're censoring you specifically but not no one else it doesn't matter because you can just go through the door that is on the ethereum l1 so your funds are never at risk this is why people like l2s and so the the moral of the story is that when the arbitrary layer 2 breaks the worst case scenario is that it just returns to being an ethereum l1 smart contract that you engage with on the ethereum l1 so all you got to do is have some ether on the l1 to make a transaction to the arbitrary smart contract to say hey your shit's broke excuse my language give me my money back and then because ethereum operates by that code because of the nature of rollups you get your money back and so you are never ever your money's never frozen i i kind of get this visual david where like i you know thinking in terms of like imagine ethereum is just this bubbled city in the cloud right and then arbitrary is another bubble city in the cloud right and but it has this bridge this bridge that just essentially cannot be destroyed unless ethereum the city of ethereum is totally destroyed too so if arbitrary goes down if arbitrary is on fire if there's chaos in the city then that bridge cannot be destroyed so you always have the ability to like withdraw funds um you know do some some kind of transactions across that bridge as well and exit in the case of solana like there's no bridges right there that are enforced by solana so like solana's down the entire solana network is down this is not the case with layer twos layer two just fails gracefully back to ethereum so it's kind of a question of like was arbitrary totally down right uh and i think um daniel from the arbitrary team actually makes that case like practically speaking kind of was for the average user but he says if i want to get nitpicky and pedantic i could also argue that it's not and he gets very nitpicky and pedantic in the whole thread and we're not going to go through it but what's the tl dr here yeah the tldr is that there are three ways to get a transaction uh in out of arbitram uh one of them is like the normal case where like as a normal operating l2 you send your transaction to uh an uh the sequencer uh and then the sequencer updates the arbitrary state it gives you a little receipt and then yay we can go beyond our merry way um we are actually going to have to scroll down because i'm going to have to read the the second way to get in uh but this is going to be just a little learning uh learning lesson uh and so uh here he says meet the sequencer that's that's the thing that orders the transactions accepts the transactions right to the arbor trims chain but the case number two is that when a message from the ethereum l1 can also be included into the sequencer uh and so you can actually write to the arbor trump sequencer even if the secret sequencer is still live by writing a transaction to the ethereum l1 uh there usually you wouldn't do this sometimes there are some specific scenarios but the transaction gets added to the delayed inbox and the inbox is like the thing that is where all the transactions go before it gets added to the arbitrary chain um and like the most common case here is like when you just straight up add money to your arbitrage account that's when you make an ethereum l1 transaction put it into the arbitrary inbox within 10 minutes it's it shows up on the arbitrary l2 and that that's when one of those cases that you would do that and then the third case is what we were exactly talking about uh is that if a message has been sitting in a sequencer's inbox longer than what is the code for max delay which i believe is 10 minutes any user can call a function called force inclusion which pops out the message out of the delayed inbox and puts it into the user's account on the l on ethereum l1 and so this is a fantastic thread if you want to go into the in more nitpicky details about how a layer two roll up is constructed but because there's three different ways and the worst case scenario is always the fallback of like there is always user sovereignty if the sequencer isn't doing what they say they were that is why rollups are so magical 