welcome back to this nation back to the ecc experience we are almost halfway through this one is with me hollow from polygon polygon was super hyping up their their announcement which they announced at the ecc number six conference which was their zk evm uh and as it turns out uh fate would have a decide that they were actually just one of three teams that decided to release their zk evm during ecc week ecc is big like that in the sense that people wait to release their announcements for ecc or they like rush to get their thing announced at ecc uh ecc is actually you know it's actually quite a big deal as far as conferences go uh and polygon waited for ecc to release their zk evm but the zke evm wars are on so we talked to mahalo about everything they're doing with the zk evm and polygon uh and of course all the other peripheral topics around polygon uh and there's a fun little backstory because i was talking to hanging out with me hollow at the last ecc and which is really where this zk evm announcement really got incepted behind the scenes way back when with a phone call which i was just like sitting with uh my good friend mariano conti uh having a beer with uh usri and mahalo when he received a phone call fast forward one year later they released a zk evm test net uh as a fallout of that phone call it's just a fun little story so we tell this story and more in this fantastic episode of the ecc experience but usually we do our full pre-recorded ads but instead i'm going to do them all right here right now super fast so here we go one of the big themes of each cc week was the launch of the zk evm three different teams all launched their test net and while everyone is trying to claim who was first we can confidently say that zk sync has been focused on the zk evm for the longest the golden end game of the zk evm has been the vision of zk sync since the beginning and during each cc week they launched their 100 days to mainnet plan which is now already down to 93 days so if you're gonna join the zk evm wars make sure you post about it on lens the first decentralized social networking graph in crypto we say not your keys not your crypto but on lens we say not your keys not your content own your own social media handle choose your own algorithm and mint your profile using the secret code word in the show notes and something that's likely going to be talked about on lens is of course the ethereum merge and the merge is why you should be staking your eth with rocket pool it's a decentralized ethereum validator network where you deposit each and get your reth in return and then you can take that r eth into d5 and if you run a node you can let other people deposit their ether into your node and you earn 15 of their staking commission as payment for your node operating services and then maybe you want to take your reeth over to arbor trump for all of your defry things arbitrary is where you have to be with over 35 000 contracts deployed and 1 million unique addresses arbitram is leading the way into the age of rollups you know how i know those numbers because i watched arbitrary's talk at ecc which you should definitely also watch but not before you're done watching this video first but in order to get your money over to arbitrum so you can buy your res natively then you should use juno because juno is the fastest bridge from your checking account to an ethereum layer 2. a checking account to an ethereum layer 2 is absolutely crazy and it just takes minutes juno is your crypto checking account for the crypto era but when you're doing all of these things make sure that it's on a privacy first browser which is why you should be using brave it blocks all the browser ads it's got a native web3 wallet and it puts the user first the web3 way and now i bring you my conversation in person with holo from polygon what's up mahalo how's it going hello david uh just all over the place with the all the great announcements coming from the polygon side and yeah thanks for taking the time to chat oh of course of course every time i see you at a conference you're always moving a mile a minute and it's always because you have like something to announce yes fortunately it's like that yeah yeah it's a good place to be in so what is it this time mahalo what did you guys announce this time we are very very excited today is a very big day for polygon i i would say it's probably the the single most important event ever since we announced polygon today we as you as you probably know and there's some people already saw the news we announced zkvm so polygon is the first project that actually shipped zkvm which is basically considered the holy grail of scaling so zkvm for those who don't know is basically a zk friendly evm implementation and evm is as most of us know i guess the ethereum virtual machine the core execution component of the ethereum itself and for quite some time we have been kind of as a community pursuing this holy grail of scaling that is going to have these three major very important features in in one with one is of course ethereum compatibility or ideally vm equivalence which is even a step further uh we ideally want we all know ethereum is absolutely dominant in terms of developer mindshare in terms of tooling the maturity of the ecosystem and everything and we of course want to leverage that we want to stand on the shoulders of the giants of the giant and don't we don't want to waste all that great amount of work that the community has put so far in ethereum building all these tools and wallets and everything that that we currently use so with evm equivalence we get to leverage all that and keep the same exact same developer experience that developers are used to same programming languages same developer environments etc so that's what ideally we want that's the first major feature the second major feature is of course security so we know ethereum is the most secure programmable blockchain in the world and ideally of course we want to leverage that security because in layer twos we still have millions or hundreds of millions of dollars and we really want we really need highest level of security and that is what ethereum gives us so ideally we want to leverage that and the third major feature is scaling of course we need to scale significantly we need to scale orders of magnitude if you really want mass adoption and if you want to onboard billion plus people to ethereum so this was that holy grail that zk avm has been representing until today basically and we we are very fortunate and incredibly humble that we were able to actually ship it it's full featured it's fully open source which is very very important anyone can take a look at the code examine make sure first of all that it's really a full-blown evm implementation with all the important top codes and everything and then of course we want this to be a community effort and like everything that polygon has done so far everything is as i said fully open source we invite community to take a look at what we have built in the background throughout this past year to give us feedbacks we expect contributions from other community members so yes all in all very very exciting very exciting moment yeah okay so uh a zk mv evm like you said is considered like there there are no further like scaling like degrees beyond a zk evm and and since this is a developer conversation this this can take me a few questions to like really fully unpack this uh so you know everyone there's general consensus that a zk roll up is like the end state kind of as we said it's that evm part that's the difficult part um we have like application specific uh zk roll up so far the dydx train used to be this uh we had like diversify used to be as like a stark x like app specific chain um a few others like immutable x used to be apps uh a stark x app specific evm chain it's that generalizability the the which is the zk evm so the ethereum virtual machine inside of a zero knowledge roll-up and so like that's that's what we're talking about so where that that's been like the end goal wait so what was actually shipped today like a main net or or what was actually shaped there is a road to to mainnet that we have today announced of course it's a very any sort of maintenance is very high responsibility especially given that we are really seeing huge level of interest for for zkb and everyone would like to try it everyone would like to deploy people will transfer capital so we want we today we announced this road uh to maina today we announced the code okay we shared it with the world okay the testnet internal test that is basically days away probably a week or something like that fully permissionless public test that is weeks away probably one month roughly one month month and a half it depends on several factors but it's really uh it will be live in a matter of weeks and after that the mainnet between public testnet and the mainnet we really want published scrutiny we really want multiple audits we really want battle tested you know uh test net that has been proven quite a while so it will definitely take several months two to three months i think so we're basically targeting end of the year for the the final maintenance release but what is what has been released today is the code itself and everyone can actually see that that we have basically re-implemented the whole evm which was as you uh said exactly the the hard not the tough nut to to crack basically proving some of these expensive op codes of ethereum like cacao ecdsa and some others was really really hard to the point that some people who were questioning is it even practically possible we were very fortunate that these great teams that we have under the polling on umbrella polygon hermes polygon zero and polygon maiden there has been several cryptographic and engineering breakthroughs very major ones for example on the zero side polygon zero side introduced the splunky two which was the fastest recursive approver in in the industry basically goldilocks fields which is this very specific arithmetic field that has some very interesting properties and allows us to to get some very significant efficiency improvements so combining these breakthroughs and really great collaboration between these teams for the past 12 months we have been able to to crack this this hard to implement top codes and yes we're like incredibly fortunate and yeah excited that this happened okay so we are what happened today was the starting pistol for the road to main net yes so you guys published your code for like public peer review people get to look under the hood it's like it's finished code and so like and then soon there will be like including the prover which is the hardest part the whole ev implementation and approver everything is open source everything and its full feature right okay so you've also published this and like other people can take this code and run with it if they so choose in in the sense that anyone can obviously use the code examine the code on the license itself we are still deciding it's definitely going to be an open source license as i said we open source the code today um we really and we definitely make it available to it for up to everyone to reuse moving forward we're just deciding on the exact uh open source license format that we will have but it's definitely the it's definitely going to be the contribution to the community that people will eventually have will be able to use okay so code is out there people get to look under the hood people get to judge it make sure it's all there there's going to be a devnet sometime soon which sounds like a permissioned test net so like let some early people in there start to try and break things then an actual test net comes later after that and so public test permissionless test net everyone gets to come and try and break this thing or start to build their app or just do something and then after that kind of like the ethereum test nets after that gets like tried out in the wild for a little bit uh we get more data we get more feedback we start to like polish off some edges then we'll go to mainnet and now we have a fully public permission list zk evm on mainnet exactly exactly and just i guess relatively important thing to to to note there is that what is ahead of us now is i would say a standard software the free software release process there are no engineering challenges no cryptographic challenges this was the challenging part proving these complicated opcodes uh cracking that that holding up the whole evm basically the whole implementation that was the tough part now is basically just a more or less routine process uh of of reaching the mainnet itself oh well that's certainly exciting yeah um what we we've been talking about on bank list i've already brought this up in a number of interviews but uh we're in this like bear market uh but we're not going to get out of it until we build our way out of the the bear market so we must we must build and like a zk evm can start to like produce some of the ux challenge to solve some of the ux issues at the top level uh for like you know instant transaction speeds uh basically like zero transaction fees with that is that fair like what it's going to be when you when you start discussing transaction fees you always have you can technically allow zero fee transactions but then you have this spam problem which was why the fees were introduced in ethereum in the first place but then we are definitely discussing negligible transaction fees you can easily i guess compensate the the transaction fees uh for users right but then again you have this spend span that maybe can be also addressed it's a thing to discuss and consider but certainly so like uh for if so i if if there isn't compensated fees like i'm i'm the user and i'm going to pay the transaction fee and i need to send you some ether can we guesstimate how much does that that can cost currently for us to to actually produce when you take everything into account the computing power that you need to actually generate the proofs when you take all the running i guess operating operational costs of of this solution that we have it's currently uh i can give you the exact figure but it's zero point zero zero eight seven dollars zero zero zero so zero point less than one cent basically is less than a pennies the the actual operational cost that we have to to you know process the transaction to generate proofs and everything and again like this was uh it's also worth noting that this is the first iteration of the kvm we have clear idea and clear path how we're going to improve the efficiency of the kvm it was really just it was about proving that this is possible basically because no one was certain even us you know in certain uh at certain times we were questioning you know is this really too hard of a not to crack but it was really important to prove that it is actually possible now when we have proven it there are at least four major ways how we can improve and how we are improving zkvm include improve the cryptography itself we have very very strong cryptographic team now improve the code itself optimize it use optimal programming languages etc pipeline the provers when you have approver that is that takes one minute to generate proof you can pipeline 20 of them and then instead of one minute you have three seconds uh and the the the fourth thing is actually harder acceleration we're also working on that very actively that's not publicly known i guess but we have both gpu focused and fpga focused efforts to accelerate on the hardware level itself so there's four major ways how we can further improve the kvm but current cost to to to actually process one transaction and prove it is as i said a little bit less than one one cent well yeah so so the the base resource cost is less than a penny so like maybe there's like a because the fee market gets to like a penny or so yes it's up to market then right it might reach two pennies frequently it's two or three pennies oh no it depends on the market i mean yeah yeah the other really exciting thing you said is the evm equivalence aspect of this which is something that i went down that rabbit hole and and came out very very appreciative of what evm equivalence is and just to speed run the listener through that you have evm equivalents versus evm compatibility uh and evm equivalence is like the true copy and pasting of code without having to change anything like the evm stack is one to one comparable where evm compatibility is like well the byte code works i might be fudging this but like yes the byte code works but like producing that by code is like a little different and like you need to different developer tooling so with this evm equivalent uh status of this evm chain you get to just port over the developer ecosystem like like uh whatever whatever that means like um compiling tools and like solidity tools i'm a little bit like out of my water out of my element here talking about this but like i kind of get the gist and so like this is this is coming out like when you launch this zk evm main net this is like you have everything else that all the other developers are familiar with on other evm chains as well like out of the box yes you're leveraging the whole ecosystem which is very very important as we all know so what you uh what you are doing we're discussing evm equivalence you're basically re-implementing the evm the way it should be implemented it's like almost like you're implementing a new ethereum node like like yet like you literally take the official evm specification and you go opcode biocode you're actually re-implementing dvm but this cvm is zk friendly so to say in the background it is able to generate uh zk approves for batteries of transactions otherwise it's a normal evm it's implemented like get tvm like arigon evm it literally follows the same specification that's one thing you you just implement all the ethereum rpc methods that are currently we're actually running uh ethereum official ethereum tests there are thousands of tests that every client for example the joints that wants to join the network should actually pass currently zkvm is passing the clients passing around 30 of the tests but we just started like we're very confident that we that the percentage is gonna go up very very quickly so basically if you implement rp rpc methods you follow the official even specification you pass all the ethereum tests you're very much ethereum equivalent that's it that's what you want to ideally have right and and just to really illustrate why this is so powerful is that if something is evm equivalent on one layer two or on the ethereum layer one you can instantly just take that whole thing that you've built and put it on any other evm chain instantly so like all the apps that are built on any other evm equivalent chain work on all the other evm equivalent chains so like we get there's tailwinds in the development labor when you work on an evm equivalent chain exactly yeah exactly um so what's the name of this thing i know like there's always like a name for every single polygon chain what's the name of this one uh it's still being discussed you know like also one that gives me a good good that's a good segue um polygon hermes officially ships the kvm okay but very important to understand and this was really collaborative process of almost one year of very exciting collaboration between polygon hermes polygon zero and polygon might and there was literally zero competition between these teams and 100 collaboration and it was really amazing we have regular we still have regular weekly calls between the teams daily asynchronous communication every month or two we have in-person workshops basically somewhere around the world so it's for me personally it was really an amazing experience watching these these smart people collaborate and uh the reason i'm saying this is that's also polygon hermes people feel very grateful to these other two teams for all the help and contributions so that's why we're discussing currently the name that would maybe unified or symbolize that really this was a team effort yeah i remember uh ecc last year mahalo it was you me and mariana and we were getting drinks after the conference was over and then you went and disappeared for like five or ten minutes to take a phone call and then you came back and sat down the table was super excited and you wouldn't and you couldn't tell what me and mariano what it was but then like a couple days later i told you or i couldn't you you said it was something about we acquired a ck evr a zk team uh but you couldn't give us all the details and then like three days later it announced that polygon had acquired uh hermes i was like oh that's what that's what that call was yes i mean yeah in retrospect it's yeah it's crazy crazy how much has happened in a year yes yes very very crazy timeline and so uh so with all layer twos there's always like a staking a token staking component maybe not always but like that's kind of where we assume this is going and i'm assuming matic is the token that gets staked to validate this chain yes and and currently also another like there's so many things happening in polygon at every single moment we are currently redesigning the token that is something that is also actively happening as we speak uh basically the the matic ticker is probably the last legacy of the the previous project doesn't make any sense anymore yes and we intentionally kept it that way because when we announced polygon it wasn't just a mere rebranding it was really a symbol for us of this pivoting division and and this new vision grand vision that we that we had and and we wanted to do the same with the token we intentionally kept it the same thicker and the same design until we were actually confident that polygon as a project and the vision has product market fit and now we are ready to actually migrate and upgrade the token actually to do something that will reflect uh where polygon is and then we are we have made certain adjustments that will make it i guess a powerful utility and and very important component of the polygon polygon spider vision amazing well mahalo what are you going to announce next year at next dc yeah every every single year there seems to be something that's too too long in two weeks it's genuinely like hard for me to to to perceive like what what to do in 12 months awesome well mahalo thank you for coming on and sharing the story thank you so much david for uh following our work always of course thank you so much [Music] you 