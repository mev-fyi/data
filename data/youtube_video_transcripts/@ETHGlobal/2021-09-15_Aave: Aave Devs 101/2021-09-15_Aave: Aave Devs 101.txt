great uh hi and welcome everyone and this is the ave dave 101 workshop and joining us today is emilia uh yeah with that i will hand it over to him to introduce himself and kick the session off okay perfect thanks thank you emily uh thanks it's global to have us today so i am emilio of angela i am the lead smart contract developer of ave and essentially i am one of the guys that actually designed and built uh the other protocol which it has been quite an adventure until now in the last couple of years the other protocol managed to to become one of the most relevant defy protocols with um [Music] tbl and assets and under management that revolve with other actually full networks like l1 so we are pretty happy of how everything has been working so far and the protocol has been progressively being uh owned by the community so right now the community is also participating also building the protocol and we have an a of a grants program that actually is allocating uh funds to projects that contribute to the other protocol so everything is going really well and hopefully this will be a nice introduction for you guys to start using the other protocol start interacting with it and understand how it works and what you can actually build with it so let's start uh i guess everyone knows what the other protocol is but i will just give a brief introduction so the other protocol is what we call a liquidity protocol so it's a set of smart contracts that is actually able to interact with users users are usually classified in depositors and borrower borrowers the depositors actually provide liquidity in exchange for earning passive interest and the borrowers are usually also depositors that they leverage their deposits as collateral to borrow a different usually different class of assets so um [Music] a borrower is first of all also depositor this means that whenever you replace collateral deposit collateral on the system to uh borrow a different asset then your collateral is also earning interest in in the meantime because it's being borrowed by someone else and so you are first of all a depositor and then like you can uh all your deposits acquire a certain depending on the category of assets they acquire a certain borrowing power and then with this borrowing power you are allowed to borrow a different category of assets for example stable coins and of course like you will be required your deposit will remain locked in the other protocol until you repay your debt and repaying your debt means repaying the principal of your loan plus the interest that has been accumulated uh over time repayments don't have any particular time schedule repayments don't have a fixed interest so the interest is algorithm algorithmically calculated on chain so it depends on how much liquidity there is available on the protocol and varies all the time depending on who is deposit what and uh who is withdrawing what and so as i mentioned there is no repayment schedule therefore the loan can last uh one second or the loan can last uh 100 years there is no as long as your collateral covers the debt plus the interest uh okay so main actual main actors will more or less already described described like the usual behavior uh then other actors interacting with the protocol and the price feeds that is sharing actually the other protocol uses sailing to interact with this critical part of the ecosystem which is price discovery because of course to calculate borrowing power and to allow repayment and liquidations it's a a fresh and a frequently updated price feed is needed which is currently provided by chain link but the other protocol can potentially support other classes of price feeds and then of course liquidators liquidators are another actor that usually take care of uh buying repaying the debt on behalf of borrowers and and getting part of the collateral in exchange when the price of the collateral drops too much usually the liquidators get uh the amount an equivalent amount of the debt in collateral plus a bonus that will essentially guarantee that liquidators are actually able to sell the collateral and they actually have an incentive to do it liquidators are of course critical to keep the health of the of the protocol in check and then of course we have a variety of integrated applications that use the protocol in uh different ways uh they provide like aggregated yield to the users they provide a different user interface to access the other protocol then we have smart wallets um we have uh leveraged uh leveraged uh systems like for example dpi building dpis the d5 pulse index building leverage tokenizing positions on top of ave and a lot we will see at the end like that there are over 100 different protocols and application build applications built on top of the other protocol so the other as i mentioned before the uh the protocol grew with pretty quickly uh it's the slide is actually reporting 15 billion but slightly slightly outdated because the current tdl is actually 25 billion so it's like growing really fast uh the the other protocol is also the ability to hosts a variety of markets on different networks or with different assets capabilities uh right now there are four markets available uh the v1 which is the actually the version one the center smart contracts that were part of the iab protocol version one which is now a obsolete and people is uh [Music] slowly migrating to the new protocol iteration then we have a v2 which is the current protocol iteration and is like the one the market that hosts the majority of the tbl around 12 billions then there is an amm market which it was an experimental market where users are actually able to use uh automated automated market makers lp shares as a collateral to borrow stable coins and then we have the another market on polygon which essentially guarantees the same features of v2 on ethereum but with a with the advantage of very very low uh transaction fees on polygons so of course like right now the the uh the market with the highest tb lsb2 but uh the ave market or polygon is actually the i the market which has the highest number of daily users around 4 000 users a day uh so again are a couple of the main protocol features like the deposits the borrow then the credit delegation the flash loans and then there is also a short introduction to the governance if you guys want to build something to integrate with the other governance um so the deposit deposit is the first user usually the first interaction that a new user performs with the other protocol which means that the user calls a specific function that is called deposit and executes essential this function the user of course like like in this example is explained here uh if you want for example to deposit 100 die uh you will of course need to have 100 die in your wallet and have approved the other protocol to uh take 100 dive out of your wallet when you do the deposit you kind of receive a receipt that is called in tokens that is called adai a dye is essentially a representation of the diet that you deposit in the other protocol and it's as the peculiarity compared to other liquidity protocols this is one to one with underlying so you deposit one of the die uh you receive 100 a die and the amount of a die that is essentially the interest accumulating over time increases over time in your wallet directly so like by looking at your wallet you can already see that the interest is actually growing and the accumulation happens every second in a complete algorithm algorithmic way so here there is an example of uh solidity isolated example of interacting with the die and the other protocol and you can see uh the address of the die token the amount that you want to deposit 100 dollars multiplied one to the power multiplied by 10 to the power 18 that is the number of decimals that i has and and on the on behalf of the federal code are two of the other parameters referral code like the the protocol has the potential to have a referral program so for people building on top like the the governance can decide to allocate for example part of their funds to to promote the usage by associating referral code with applications that provide usage and then on behalf of is used because you can eventually call the deposit on behalf of another address so for example imagine that you have 100 die on address x but you want to receive your a die on address epsilon then you can actually deposit with the call the deposit function with address x but put on behalf of address epsilon and then you will be able you will automatically receive your eight tokens on address epsilon instead of address x uh uh the withdrawal is essentially a opposite opposite interaction compared to the deposit and it allows you to redeem a tokens for the underlying so whether or not you deposited um you deposited or you received a tokens that are of course transferable like a die in your wallet because someone else transferred to you then you can always redeem them for the underline by calling the withdrawal function there are some [Music] how can i say there are some things to keep into account when doing the withdrawal especially like sometimes the withdrawal can fail if there isn't not enough liquidity available this is used usually on edge case that means that there is high demand of the market for borrowing and but i think i will uh we can like further discuss about this later and then we have the borrower interaction as i was mentioning before if you have deposited assets uh you can essentially borrow any other assets that you might need and you can also borrow in two different interest rates mode which is variable or stable both are algorithmically decided but the variable changes per second while the stable or block to be more precise and while the stable rate is usually stable in the sense that doesn't change so often can only change depending on the particular states of the protocol i think we can also discuss about this a bit later uh of course like euro the total collateral and the total borrowing power is the sum of the borrowing power of each independent asset that you deposit in the protocol so imagine that you deposit eth rapid btc and uni uh then like the protocol will automatically and on chain aggregate the total equivalent amount of the assets deposited beneath and from that total equivalent amount calculate what is your average borrowing power by doing the average of proportion the weighted average of all the assets that you deposit as i mentioned before you can repay whenever you want using the same assets you you you borrow it or you can even like there are some functionalities that weren't built on top by paraphi for example you can essentially uh use your deposits to actually cover cover the the position by using parafy to sell the your collateral in one transaction uh yeah when you create you open a borrowed position so you deposited some collateral you decided to borrow stable coins and then like of course as we all know the price of the collateral fluctuates over time depending on market conditions right so how do we determine if the collateral is enough to actually cover the debt at all times there is this indicator that's called l factor when that factor is less than one and essentially you you will be the position will be liquidated which means the uh liquidator will actually invoke a specific function on the other protocol to repay the debt in your behalf and receive pardon of your collateral plus bonus of course if you get liquidated you lose the bonus so people that is borrowing is usually very careful about keeping the health factor as uh high as possible so it's a matter of evaluating the risk reward of keeping your health factor aloft enough to maximize your borrowing potential but also high enough to avoid liquidation risk if the market drops uh something happened here okay uh okay so by if we keep using the example that we mentioned before like imagine that we i we have deposited some a tokens like using the same exactly the same function and exactly the same strategy that we mentioned before we locked for example a [Music] uni and a is so we have is in the uni deposit in the protocol we want to borrow one another die what happens here is that we call essentially we all still reference the die address we have an amount we have an interest rate mode which will be one for stable debt and two for variable debt uh referral code is exactly the same as before and the same meaning on behalf of is the same meaning as before because as i mentioned before we have credit delegation on uh on the other protocols so uh you can either borrow for yourself or you can allow someone else to borrow on your behalf which is called the trade delegation but it's something that we'll discuss later there are some slides specifically for that so yeah you can borrow by just calling the borrow function specifying the amount of the academic borrower interest rates more the referral code on bf4 if the protocol does a certain preflight checks and if everything works as expected if you are within your borrowing power if your assets are eligible to to be considered as collateral because not all the assets can be can be used as collateral then you are allowed essentially to to borrow the amount that is that you are specifying and you will receive the amount automatically in your wallet and you will start accumulating uh that interest from immediately after um sorry okay so uh yeah uh of course there is also a swap function so you can swap between the rate uh loans variable rate loans and separate loans and then [Music] you can decide whether at any point in time whether for example if you believe your interest rate mode is too um is to your depth is too high then you can decide for example to to swap to variable or vice versa if the stable rate drops to a point where you consider it competitive then you can essentially you can essentially as well as what automatically with only one transaction and this executing this function to the other rate mode the repay of course is the uh action of executing uh a payback of your loan so again it's pretty straightforward you just as before of course you need if you want to repay 100 you have to have one at a time in your wallet and you have to have approved 100 die uh to the protocol to take 100 out of your wallet and then uh you can call the repay function specifying again the asset the amount and the interest rate on behalf of again because because you can also repay on behalf of other addresses imagine for example that you borrow it uh with address x but you have your die on address epsilon uh then you can decide to use address epsilon to repair your that on address x okay then create delegation uh essentially as i mentioned before when you deposit some collaterals you also have uh a certain borrowing power right with credit delegation you can uh decide whether or not to delegate your borrowing power to third parties with what that means is that uh you can decide it's in a similar way a mechanism of the approval function for year c20 you can decide to approve another wallet that potentially has no collateral deposit on on ave to borrow on your behalf what that means is that when you borrow on behalf you will receive the principal that has been borrowed and the address on which you are borrowing uh on which behalf you are borrowing uh will essentially be accounted for the debt so this is what the creative delegation is essentially allow allowing third parties uh to to draw liquidity from the protocol while taking a ownership of the debt why i would do that multiple things for example i want to i want to keep my imaging for example i want to keep the wallet where i keep the collateral and i keep my position of chain but i would still be i mean air gap for example so uh in a cold wallet but i want to [Music] i want to i don't know keep using the protocol while using a different wallet it is a hot wallet i want the freedom to borrow and repay at any time i want so i can just for example keep i can just prepare my position on the wallet uh delegate to the wallet the hot water that i actually want to use and then like air gap the other wallet so it's never connected the internet is effectively uh a cold wallet and use the hot wallet to which as a received delegation to draw credit from the code wallet and repay at any time so this is just one of the things that this create delegation allows but you can also create a delegation system for example where you can decide to delegate credit to your friends or to another third party where you got a legal agreement with of chain so there are multiple things that can actually be built on top of that how the great delegation uh works so okay here there are some schemes one is not needed i decide uh like which particular asset i want to uh to give delegation uh to a certain wallet and other i didn't mention before but maybe i should have mentioned that we the adapt is also tokenized so when a person uh it's like the depth of a an address is not kept as a internal accounting smart contract but it's tokenized so if you have a collateral and you draw 100 die of debt you're receiving your wallet the 100 die but you also receive 100 debt to die this token that you received that died you cannot move it out of your of your wallet you cannot do anything with it the only thing that you can do is burn it through repayment so that particular token actually keeps track of the of the of your debt uh position on the other protocol so what happens under the hood when i delegate to someone is actually that the person the delegate that is drawing uh credit from the from the protocol receives the underlying so if i'm the delegate is borrowing direct since the die and the delegator actually receives the debt talk and it attracts their that position so to be able to uh delegate uh credit to another address i need first to receive the stable debt token address and the variable token address from the addresses [Music] from the addresses provider which essentially gives the the token addresses then i can of course i can store the address of the borrower which is the address of the delegate that will receive the credit the amount that i want to delegate and then i call either on variable or stable the token dysfunction approved delegation that essentially tells okay this guy here the borrower can borrow using my borrowing power up to x which is amount in way uh so when approval is given uh once approval is given then the delegate can actually go on the protocol call the border front borrow function on behalf of which is the delegator address that called approved delegation before and the delegate will actually able which is message center of course will actually able to draw credit from the protocol even if the delegate does not have any collateral then like you can anyone can of course as i mentioned before can repay the delegator uh that including of course the delegates so if the delegate wants to repeat that on chain then he can just call the repay function by delegating to delegate or address okay then flash loans let me check quickly how much time i have okay so the flash loans are as a like they are now very well known and very much ingrained in the defy mechanic mechanics but like it's something that actually took traction only recently and it's essentially leverages the capability or smart contract of of the atomicity of uh transactions right so it's well known that you when you execute the transaction the transaction is atomic so it's um [Music] essentially um [Music] will everything that happens during the transaction will be completely reverted like the transaction never happened if the transaction is not successful using this atomicity property of the transaction essentially we came up with this idea of flash loans where anyone can draw liquidity out of the other protocol without having any collateral with the condition that the debt is repaid at the end of the same transaction uh can like the of course the the duration of this particular loan is one transaction which means that as long as the transaction is in progress you can do whatever you want but once the transaction is completed the funds needs to be returned otherwise the the transaction will fail and everything that happened will be reverted so uh it cannot be used by eoa it cannot be used of chain it can only be used by smart contracts so of course like it's a quite a wide topic there is a lot to talk about so like we have some guides like afterwards i will give you reference to all the uh [Music] developers uh guidelines and all the documentation that we have this one is specifically for flash loans and it essentially showcases how to use the flash loans what are the use case and what you can build on top of it yeah here is a bit of like a short recap of potential use case you can use a flashlight to migrate liquidity between protocols you can use uh flash runes for arbitrage you can use flashlights for liquidations you can use uh your flashlights to swap one a token to another a token without even leaving the protocol also imagine for example you have a die and you decide that you want a you want to buy east and you want the east automatically deposited in the other protocol then you can use flash loan [Music] to do a flashlight of dye um sell the die for it on the uh on decks for example uniswap then deposit the aeth and then use the original die that were deposited withdrawing them every buying the flash one and you end up with a a is automatically in the other protocol and there are a a lot of different stuff like um another is like yeah repaying with the debt the debt using your collateral uh is another thing for example if you are leveraging and you have uh you are used you have used your collateral to actually um leverage more of your collateral then you can use a flashlight to sell your collateral on taxes and then use the amount sold to repay your that on ave and then to [Music] repay the flash loan and there are multiple many more or a use case that i think we can discuss uh at the end when we also list our the other integrators so here i don't know how much time i have probably um maybe i should stop here emily what do you think yeah um i'm sure a couple minutes wouldn't hurt and we might need to just channel some of these questions into the discord chat okay okay so i will uh try to compress the all of these in a couple of minutes and then like if we can answer the questions in uh afterwards okay so here uh it's a small breakdown of the examples that you will actually guys find in the in the documentation so everything is in documentation uh essentially flash loans here is in the the code here that you see it describes uh how to call the flashlight function on the landing pool contract so preparing all the data that it needs to be passed to the flashlight function and then like the proper flashlight execution requires the usage of a smart contract that he inherits a certain interface this interface exposes this function execute operation and this actual action is called is called by the landing pool function once the funds are transferred so for example if you need to do an arbitrage then you can do the arbitrage within this execute operation function and at the end of this function um the fun the funds will be automatically drawn from the a contract that implements this execute operation and then the governance uh also here there is a lot uh to cover but like i can point you guys here i can point you out to the documentation where uh everything is explained essentially avia is a pretty um organic pretty complex governance system uh it's also very powerful so the governance is completely open source and is meant to uh help or even other decentralized protocols that they want to use a very flexible very powerful governance so anybody can fork of course the if the code is completely free to use anybody can fork it uh there are uh the here is the architecture of the governance uh which is also described in the documentation that i will uh refer afterwards and then here is the process that is used on the uh within the other community to submit uh to submit [Music] to submit [Music] arc and ips and then propose voting on chain and create an institution uh i think like it's gonna be a bit long to discuss all of this so like just a few use cases of the other protocol curve defy saver full combo iron finance uh avagochi and way a lot more integrations wallet agnosis monolith uh jelly swaps uh synthetics uh one inch in aggregators idle finance there is a lot to unravel the development environment everything is only in the public github and uh yeah my time is expired and yeah um other protocol.js for data formatting and there is also a library on the same repo which essentially exposes all the function that you might want to access of the protocol of chain so using for example eaters or web3 resources and that's it thank you everyone emily yeah yes great thank you so much um you squeezed quite a lot of uh information into that about a 35 minute session um [Music] yeah there's a couple questions in the chat um i mean we could take a minute to take maybe like two questions um and then the rest i'm gonna save and uh pull over to the sponsor discord channel and we'll ping you there where you can answer them and everyone on this call please have a look in that channel for responses from emilia okay sounds great yeah i'm not going through the quickly so the answers i think i can handle in the in the perfect afterwards okay great okay nice thanks so much melia and thank you everyone for joining this session we will see you in discord great 