[Music] good morning good afternoon good evening everybody my name is kartik one of the co-founders of eat global and i'm super excited to welcome all of you to hackmoney2022 so all of you are watching this on eatglobal.tv and for those of you who haven't used this before this is what we're going to be using for the rest of this event this is where all the summits are going to happen and also not only just this kickoff but the closing ceremonies we're going to showcase everything that comes out of this event um and for those of you who are joining us for the first time we really encourage all of you to log in and say hi and everybody who's going to participate for the rest of the hackathon echo tv will be receiving these uh amazing pro apps so let's get started hack money is an event by each global and for those of you who don't know what each global is we're an organization with a very simple mission our goal is to onboard thousands of developers into the web3 ecosystem and we do this primarily by running hackathons and summits and this event is no different so for the summit we're going to be running two summits uh for this event today is our kickoff summit we're going to be talking about some of the latest and amazing things happening in d5 and then on friday the 20th which is two fridays from now we'll be running a supe uh summit with superfluid call superfly reactor summit talking about all the things with streaming money so tune in to global.tv again for the 20th and uh can't wait to get started now let's get into the hackathon so the goal for this is to cover some of the logistics around how the hackathon is structured and everything that you need to know to really get started with your participation this has been an incredibly an amazing massive event we have over 1100 hackers from 75 different countries participating and building cool projects for the next couple of weeks and they span 18 different time zones we put everybody on a map to see where they were coming in from and it's just again incredible to see so much representation diversity and participation from all continents around the world so we can't wait to meet all of you and we also encourage all of you to say hi and tell us where you're coming from and what you're going to be building and not only just the hackers we have an amazing set of ecosystem partners and over 250 to 250 ecosystem mentors who are going to be here helping you out on our discord and making sure that you have all the help you need whether it's technical or design or product or anything in between and to top it all off we're also giving 300 000 in prizes so you get to win a lot of amazing prizes for all the things you're going to be building and we'll share all the details of all the prizes uh very soon so before we jump in i want to quickly thank some of our amazing partners starting with super fluid world coin unit swap grants program wallet connect ipfs and falcoin abby grand style dydx babylon finance polygon bolts olympus zk singh swing unstoppable domains coinbase wallet tempest gearbox the graph ap wine badger uma compound epns transact covalent nervous gnosis safe oasis foundation arbitrary teller spiron connects fuel photos maker chain stack chain link you're in finance waku redstone gamma that list secure finance blockchain space upstart and constant there are so many amazing companies here and they're giving so many incredible prizes so we're going to go into all the prizes that you can win from each of these partners all right let's go back into the rest of the events so the most common question we've gone is what can you build so there's a lot of things that we can do here this whole event is structured around d5 so all the things we're going to do is uh make sure that you have all the right tools and and protocols and sdks and help you need for building these amazing things so the common categories that everybody is already excited to build are things around lending trading options and nfts there's so many protocols that you can use especially now that we've seen [Music] a lot of maturity around all the the tools you can use compared to especially last year's hack money we really want to see a lot of things on l2 so whether you're using lyra on on optimism or trying out something with uh zk sync or just making really interesting dev tools to make it easier to deploy some d5 protocols on other l2s we want to see all that in addition to some of these protocols we you don't actually necessarily always have to code something on smart contracts you can totally do something that leverages the information you have on chain um and build analytics and tooling around that so it's not required for you to code something in in solidity uh and on top of that there's a lot of cool things around understanding what's happening with deals and hacking and optimizing all the things that are happening with the disney protocols that are out there so with that let's talk about what the next three weeks are going to look like so want to cover how team formation works how you can get help if you are stuck all the prizes you can win uh all the talks and workshops that are happening we're also going to talk about all the judging and submission criteria and also the summits which i just indicated but we're going to just jump right into the first summit that starts right after i finish talking about all the prizes so uh let's let's get going so the most important thing here is communication everything that we're going to be doing for this event is going to be on discord and the way everything is structured is that if you are a confirmed hacker which means that it shows on your dashboard that you are confirmed you will be able to see all these channels on the left screenshot on discord which means if you don't see these channels under the hackmoney 2022 category something is wrong with your discord permission sync so either contact us or go back to your hacker dashboard and see that you have actually connected discord because this will not be visible for anybody who's not participating at the event this is also the place where all the the mentors are hanging out so you can ask for help in the mentorship help channel along with any questions you have about any of our partners and learning about what the prices are if you if you need specific help on how to use a different protocol all that is on discord on top of that we've also given out calendar invites for all talks and workshops that are happening there's a lot that happened yesterday there's a lot happening today there's a lot more coming into the next week so you can directly see all these things on your calendar but also everything is on the website so anything you want to know on what's happening and where and when uh everything is reflected live on the website so whatever the website says is the the real-time information and the up-to-date information and uh we really want this thing to be asynchronous so we understand there are people from 75 different countries here if you're not able to make something that you really wanted to don't worry everything is recorded so the second it ends you can watch it on our youtube immediately after and catch up uh whenever you have time [Music] and the website for for everybody to quickly get a reminder is defy.edcobol.com so let's get into how the hackathon is structured and how everything works hackathon officially begins now which means that you can now start coding and working on your projects you are allowed to work on your projects individually or with a team and a team can be of up to five members you have the next two weeks to hack which makes the submission deadline 3 pm eastern on sunday may 22nd this is also reflected on your dashboard and on the website and uh we'll be reminding everybody with these deadlines over email and discord so don't worry if you're catching up on this video late or if you're not here your team members are not here we'll be doing a lot of relaying the same information uh as we get closer to this deadline so the rules and criteria are very simple for this event everything that you're going to be working on should be done from scratch which means that you cannot extend an existing project that you have been working on for fun or side project or even a project from the previous hackathon you must begin um everything from beginning it doesn't bar you from using a boilerplate template or open source libraries and tools it's just that if you have been working on something personally you cannot add a feature here and use that to qualify for any prizes or participate uh i'm going to keep this short but if you go to your info center you will have a lot more detailed description on what qualifies and what doesn't and if you have anything that you are still worried about or you think there's a nuance or an edge case that you want to handle please message us and get that clarification because we really want to make sure that you're able to participate properly and you don't get disqualified at the end in addition to that everything that you're going to be submitting must be related to d5 this is a d5 focus themed event so anything that is under defense submission will also be disqualified for this event and lastly only rsvp hackers are eligible to win prizes which means that each of your team members must be listed on your team as you are submitting the project and on your dashboard so if any of them were not confirmed as a hacker which means they haven't responded or confirmed or are not able to join this thing and you end up winning a prize if we don't see their name on it at the time of the submission or right now that means we will not honor any prizes that are given to them so please make sure that all of your team members are there they have connected discord and they all can access the same project on their own dashboards and of course we really want this to be an event where we can accommodate everybody who's jumping into this space and trying to understand what is possible so there's a lot of stuff going on for for you as well we have a lot of content and talks and workshops for beginners and experts a lot of them already started yesterday all of them are a lot of them are happening today and there's a lot more happening next week too so there's a lot of talks workshops and panels uh we're also going to be doing a summary right after this thing where you can actually understand what people are working towards and what we think will be possible in the next few months to years there's a lot more information around getting started and resources in your info center and of course all content is recorded so you can take your time and understand and ask questions most of the speakers are also on our discord so you can ask them questions directly and to kind of look at all of this up it's not just about this event we have hundreds of videos on workshops and talks on how to use different protocols on the youtube for each global so you can always go to youtube.comglobal and of course as we're doing this thing for a thousand of you here uh if you have any questions just put them on the global tv chat and we'll be able to answer those questions in real time here for you too and then the talks around beginners especially are around some beginner ideas whether it's like scaffolding workshop that happened yesterday and there's a lot of opportunities for you to still find team members and understand quick uh ways to kind of brainstorm and get started with ideas that um that you can use to build a hackathon if you don't already have an idea or you're not sure what you want to work on so all these things are also listed on d5.educable.com as a reminder so let's uh you can always find everything there all right so the big most important piece is the submission deadline we're going to talk about how judging works and as a quick reminder again judging and submissions are due on this 22nd of may at 3 pm eastern so you get two weeks from now to submit let's also quickly talk about check-ins so you may have seen this on your dashboard it'll start appearing next week but we're going to be doing quick mini check-ins which work as a way for us to know if you are stuck on something or if you need to help somebody get unblocked uh this lets us understand what we can help you with or if you are not able to get some response fast enough to understand how some protocol works we're able to sort of paying everybody to make sure that you are able to continue working on your project and also uh it becomes a quick feedback survey for us to see how we can improve this process for the future events and your stake is returned as you can submit and work on a project but all this happens to your dashboard so don't be alarmed if you don't see anything it'll appear as a section on your dashboard next week and we'll send reminders of all these things as well all right let's get to the judging so there's two ways judging hazards so the first one is the actual official main judging so when you submit your project on sunday the 22nd uh you will get to choose a judging appointment for the day after where you are going to be presenting your project live and the judging happens between 12 p.m and 2 30 p.m eastern and we'll be giving you a big heads up on making sure that we're able to accommodate everything as part of this event in addition if you are trying to win any prizes that is part of the sponsorship judging process and that is an asynchronous thing that's happening where as you select which prizes you want to qualify for we will be sharing that information with all of our partners and they will be looking at all the submissions asynchronously and reaching out to you if they have any questions so we'll share a lot more there uh next week and the week after just as we would get ready for judging but here's the quick summary in addition to that judging is the submission itself is structured as a asynchronous but also a live judging part so you to submit your project you need to create a four-minute demo video that showcases what you've built talks about where you are why you chose to build that idea and also shows a live demo so we really want to make sure that you have enough time allocated to make a four-minute video for your demo uh video submissions are required that's the only way you'll be able to submit and qualify for any prizes so please don't wait until last minute to to create this thing we recommend you have you give this at least one to two hours in total to uh to just dedicate and not to this last minute all these things will also happen uh asynchronously and through your dashboard so uh all the details you need are going to be visible when the time comes just before the deadlines directly on your dashboard and lastly i want to talk about the code of conduct because even though this is an online event our rules and code of conduct still applies and you can check out the rest of the rules on each global.com rules but the gist of it is that please be respectful and harassment and abuse will not be tolerated in any form in addition to the rules in our code of conduct anything that you build as part of this event is solely owned by you from the intellectual property standpoint so you are the owner and you retain full rights to anything that comes out of this if you need any help if you have any other questions please reach out to us whether it's on discord or email and we'll be able to happily respond to any questions or concerns that you have all right so let's get into some of our amazing partners we have so many incredible protocols and companies in this space that are here to talk about why they're excited to be part of hack money and why uh we also want them to be part of this event so without further ado we're going to bring on some of our amazing partners who've told us what they're building and why you should work with their protocols hello everyone my name is konstantin and i'm startup operated protocol labs i'm here to announce exciting collaboration between ipfs filecoin and hackmoney ipfs is a peer-to-peer protocol that makes the web upgradable resilient and more open filecoin is the largest decentralized storage network which is built on top of ipfs that ensures control persistence over time or in short ipfs is here for content addressing and filecoin is persistent storage of webfree moreover our ecosystem is the strongest asset in the growing filecoin network and web free on one side we have a rapidly expanding storage capacity of the network with more than 4 000 storage providers across the globe and more than 18 xb bytes of total storage capacity available to you right now in the network and on the other side we have an increase in demand from explosively growing ecosystem with more than 300 startups building on top of ipfs and filecoin and more than 9000 developers contributing to our protocols in a day-to-day basis moreover we are more than just a storage we're also developing solutions for computing on top of file coin we're enabling programmability is the layer one chain through file coin virtual machine and we are making our effort to make the file coin verifiably green and resilient foundation of the web free follow us more to know more about falcon virtual machine snap deals and many more items in the community roadmap which we are sharing across our networks follow us to film way more and during this hack first of all build an amazing project feel free to follow docs on ipfs and filecoin and reach us on discord for any types of questions and book the office hours with our developers moreover i would wish you to get creative and good luck have fun and if you're curious where to start with ipfs and filecoin feel free to follow up the links on the the on the screen right now or feel free to follow up this dot storage solutions there is flick textile powergate lighthouse.storage opportunities and there are many more tools for you to build and jump start with web3 and storage and ivfs thank you a lot that was protocol labs wish you all good luck amazing thank you so much constantine and with that we are ready for our second partner and that is bull coin so without further ado let's welcome miguel pm i'm miguel from welcome we are working on an open and scalable protocol that allows any developer to add civic resistance to their apps in minutes in a completely anonymous way we're really really excited to be participating in hackimony as part of our effort to open ourselves up be more transparent and work with the community on really cool things let's talk about civil attacks an application of simple resistance when it can tell whether it's users are real people or just a bunch of bots trying to became an airdrop and making your application ship resistance not only makes them fairer but also enable new mechanisms that haven't really been possible before in governance tokenomics and interacting with the real world in general at welcoming we've been working on wall led a protocol to anonymously verify that someone is a real person and that they are performing an action only once so you can anonymously know not only that i'm a real human but also i've never claimed this airdrop or voted on this poll or minted this nft or any of these things this works using this little guy which we're going to deploy all over the world and it will look at your areas and generate a hash that then you can use to generate zero knowledge proofs of humanity you can use to verify yourself without feeling any information about you integrating with wallet is really really easy you just need these two lines of javascript to get started which renders this element on your website which allows people to generate unique anonymous proof of humanity that you can then verify in your app this allows new methods to governance air jobs experiencing quadratic funding and fts and advanced more other vertical things we've collected a bunch of resources at welcoming direct slash hack money including docs for the protocol and the javascript we get a test net for the orbs and a bunch of examples and starter kits we also have a discord at discord.gdg welcome where you can come if you have any questions you want to work together or something you have some ideas feedback or literally anything else let's build together excited to see what you guys make amazing thank you so much and next up we have rahat from polygon please welcome rod what's up packers my name is rahat i'm a developer advocate over at polygon super excited to tell you a little bit about polygon and how we're supporting the hack money hackathon so what is polygon polygon is the leading platform for ethereum scaling and infrastructure development a lot of jargon i know what does that mean we offer a bunch of different products and services that make it easier for you to scale on top of ethereum for multitude of users and make your ux a lot easier and accessible for those users we offer things like standalone side chains ck roll-ups optimistic roll-ups both of which are in the works things like enterprise chains shared security chains and more i'm really excited for you to dive into this ecosystem with me the main thing i really want to point out is how easy it is for developers who are already building on top of ethereum everything you've already learned everything you've already been using in the ethereum ecosystem maps one-to-one right over to polygon solidity still works javascript still works tools like hard hat truffle all of that still map one to one like i said right over to the polygon blockchain polygon ecosystem at large if you already have adap you can use polygon as a high performance layer and supercharge your ux you can do things like depositing assets from ethereum to polygon transferring them between accounts on polygon and then withdrawing back over to ethereum at the end this allows you to leverage the low cost of using the polygon blockchain while still leveraging the security of ethereum at the end and we've got prizes here worth over 16k the polygon track prizes include a first prize of five thousand dollars 2500 1500 and approved prize of one thousand dollars some ideas of things you can build are yield aggregators decentralized exchanges derivatives things like pooling dapps decentralized insurance platforms and more these are just some ideas of things you can build but we would love to see what you want to build what kind of impact you want to make in the device space the only eligibility criteria for being considered for this track is that your dap needs to be deployed either on the polygon proof of stake test knight or the main net either way you're good to go here's some developer resources to help you get started you can check out the polygon developer library as well as the polygon documentation it's very very important always to read documentation before you dive into something new we've also got the polygon academy where you can look up some tutorials learn more about the ecosystem itself and see how you can start leveraging the polygon ecosystem in your dap right now so without further ado let the hacking begin i can't wait to see what you all start building amazing and next up we have pedro from wallet connect so let's let's hear everything about connect welcome hackers volcanic is proud to be sponsoring hack money the 30-day online hackathon organized by if global where you will be able to build your favorite projects and win prizes online with anyone around the world so what is wall connect wall connect connects mobile wallets and desktop wallets to your dab it makes it very easy by providing a very simple sdk that you can integrate into etherjs or web2js and you can easily just build smart contracts on ethereum polygon optimizer or any evm chain so with walla connect we provide this secure communication protocol that supports more than 100 wallets any wallet that the user uses will be able to connect to your wallet to your dap very simply and then with the sdk you can request transactions and get their accounts well connect supports also test nets but you should be looking at which wallets support test nets for your projects why is wallet connect important well connect allows you to support multiple wallets without having to choose which quality the user should be using it's not about desktop or mobile it's about volcanic running everywhere we have documentation at docs.wallconnect.com and we also will be able to help you at the youth global discord under sponsor wallet connect if you have any questions please reach out to our team and we're also going to have a brainstorming session a workshop where we're actually going to help you out with integration as you go so where can you find us you can find us on discord and you can find us on docs.wellconnect.com and if you need any help please reach out and don't forget that we have also bounties for you so projects who use well connect will be able to win extra prizes good luck hackers and happy hacking thank you pedro next up we have boris from uniswap grants program let's welcome boris uh hi guys boris from uniform grand program here uh first of all big thank you to the youth global team for organizing hack money uh we've been at it amsterdam we had lots of fun and we are very excited to continue supporting these global hackathons a little more information about the units of grant program so we are a community run grant program established by the university of governance they've been live for a little over 15 months and during that time they've given out grants to 150 plus different grantees areas we focus on are governance community tooling developer experience and growing units of ecosystem in general uh more information about unisvope so uniswap is a decentralized amm or ethereum it has three different versions with version three also being live on polygon arbitrarily and optimism for hack money we've prepared two different categories the first category is tooling so whether you want to create something cool for other developers to use or you want to create something for unisop end users both projects will fall under this category the second category is innovation we didn't want to limit your creativeness or uh give straight guidelines for your project so any project that is uniswop related will fall under this category the first price for both category is four thousand us dollars uh the runner-ups uh depending on how many submissions we'll get will also uh split uh four thousand us dollars uh if you have any questions uh will be available in discord and also check out our hacker guide there you will find links to different resources and tools which will help you in building your projects we wish you a happy hacking thank you for your time and talk to you in discord amazing and next up we have friend from superfluid let's learn more about superfly hello everyone i'm fran i'm one of the founders of superfluid and we are extremely excited to sponsor hack money this year superfluid is hacking money we are a protocol that enables on-chain streaming of assets in a way that's never been done before streaming money is this concept of sending funds over time from one account to another without requiring ongoing recurring transactions and what this means is that you can pay people with no delays because they get paid every second and no unpayment risk as a result this is simply impossible in traditional finance but with superfluid you can get paid every second rather than having to wait until the end so we can use this to move from recurring payments to ongoing payments and enable all sorts of things that will help make webfree sustainable with sustainable economics and normal business models which is what our industry really needs so to try this out go to app.superfluid.finance in one minute you'll get your first stream you'll start understanding what we mean by streaming money and you can immediately start developing as well so after that go to our console and this is basically an explorer you'll be able to explore click on other people's accounts see their streams you know just kind of check out what's going on in the blockchain when you start building you'll need our javascript sdk our subgraph but also our solidity libraries so what i would recommend is to go to look for our examples fork one of those and just get started from there if you're not sure what to build hack.superfluid.finance has some great ideas i'm extremely excited about the superfluid reactor this is something we launched just a few days ago it's an accelerator where we take no stake in your company and we purely focus on helping you succeed to build on top of superfluid we help you from product refinement to investor introductions and really we are there for you so consider hack money the first step in your web free career on the 20th of may we will be supporting the superfluid reactor summit this is something we're organizing where we've global we'll be highlighting great apps some of the future of the superfluid protocol but we'll also talk about the web free economy so come and join us there and overall get ready to hack money and build the future of finance with us thank you so much friend um super excited for super fluid reactor summit in two weeks as well but last but not least we have babylon.finance hi everyone my name is ramon and i'm a co-founder of babylon finance babylon finance is a decentralized asset management protocol that lets people invest in d5 together babylon finance lets user create investment clubs or investment dials that we call guardians by investing in guardians people get a bunch of benefits versus investing by themselves first of all they share all the gas execution costs so if you have 100 members in a garden you will get a hundred of the cost versus investing yourself secondly you may consolidate all your taxable transactions in just a few because the club or the garden may execute hundreds of operations on your behalf but the users just care about the deposit and withdrawal also gardens allow people to not be 24 7 glued to the screen because they can share the information and they can share the load of keeping up with with a market that never sleeps with all the other members this is also extremely beneficial for managers because babylon is totally totally trustless and permissionless anyone can create a different investment club through our ui or directly through our smart contracts and get this fully functional tokenized fan out of the box for managers this means that they also get an ui so they can interact with 15 other d5 protocols with our simple new code ui and they can mix and match protocols together for example they can lend money on compound then they can borrow diet deposit into carbs and then let's take the lp tokens on convex finally this week we have now released our sdk on smart contracts so now for you as a developer you can take this one step further you can take all these fully functional and tokenized funds that give you an erc20 and then connect it with the rest of diva and the rest of crypto we can't wait to see what you build to get started please visit docs.babylong finals and slash developers thank you all right those were some of our incredible partners that are excited to share about what they built but we have a lot more coming which is we want to talk about all the other prizes that are going to be given out and uh we have some more um quick videos from all of our partners going to specifics of the prizes and then after the prizes we are going to be ready to kick off with the first summit talk so without further ado let's get into the prizes so the first one is ipfs and vulcoin and let's learn about what you can win here hello everyone that is konstantin from protocol labs and i'm happy to announce prizes for the hack money to participate in our prizes the challenge is very very simple there you need to build a solution or project with a best use of ipfs for content addressing and or file coin for decentralized storage or anything that builds on top of either you can use freely any storage helpers that we suggest in the keynote speech and there is an amazing pool of prizes for you to compete in this hack money i wish you all good luck i wish you all to see an amazing project an amazing time during the hackathon and looking forward to your submissions thank you all right and to go directly into the prizes you can win eleven thousand dollars in first second third place of the best use of ipfs and there's also a pool prize for five thousand dollars which means that anybody who uses an ipfs or falcon integration will split the amount uh equally for their team so we'll kind of just rush through some of these uh the details and then all the specifics around what qualifies what doesn't qualify as what is it meaningful integration is all going to be on the prizes page from your hacker dashboard and on our website so uh with that let's go on to our next prize category and that is worldcoin [Music] hey it's me again vulcan has a price pool of 16k for anyone building on top of ability we have 12k for the first second and third best submissions out there and a prize pool of 4k for anyone else building on top of led excited to see what you guys make all right so there are sixteen thousand dollars you can win for world coin so the best integration with the proof of personal protocol integration will receive six thousand dollars second place will receive a four thousand dollar and third place will receive two thousand price and they're also a full price category here again which means that anybody who makes a meaningful integration will equally split four thousand dollars amongst themselves next up we have wallet connect so wallet connect is not only sponsoring this hackathon but we also have sixteen thousand dollars in prizes for all of you hackers so in order to be eligible for the bounties you just need to support vola connect in your project you go into the documentation you follow the tutorial and you have a complete integration with wall connect to connect your wallet and sign a transaction and you become eligible for these prizes we created two special tracks for this we created the multi-chain finance track and we created the social impact track if you build a project that uses cross chain with ethereum optimism polygon and other layer two solutions you qualify for the multi-chain track and if you build a project that particularly helps create social impact democratizing or human coordination you go into the social impact track for each track we have the first second third price and horrible mentions the first price is four thousand dollars the second price is two thousand dollars the third price is one thousand dollars and two honorable mentions for each track as well which have 500k that's a total of 16 000 prizes a 16 000 in prizes that you can win by integrating welcoming so follow our documentation and check out our workshop to see how you can become eligible for the bounty amazing and just to summarize the world connect prizes 16 000 you can win so the two integration tracks are defy and social integration so first second third place will receive four thousand dollars two thousand dollars and one thousand dollars each and then the pool price will be split amongst meaningful usage from any team for a pool of two thousand dollars next up we have the uniswap grants program so for unit swap you have two ways you can win different prizes in two different categories so the best use of the new swap tooling that makes a meaningful contribution and uses existing tools to make the developer experience on units for better uh will receive four thousand dollars for the first place three thousand dollars for the second place and one thousand for the third and then the most innovative implementation of unit swap contracts into their uh project will receive four thousand dollars for the first place three thousand for the second place and one thousand for third place next step we have superfluid hey hack money i'm sam with the superfluid team and we are very very excited to be sponsoring this event so what is superfluid we're protocol that's enabling real time finance and that means that one of the things we like to do is stream money so we support digital native programmable cash flows which let you transfer money in real time second by second with no capital lockups where everything is programmable and completely unchained we have sixteen thousand dollars in prizes for this event and i will go through them here so we have four thousand dollars for the top overall project both on superfluid three thousand dollars for the best project built for streaming in and out of lp positions three thousand dollars for the best lending application built on superfluid two thousand dollars for the most innovative use of superfluid's new acl or access control list feature two thousand dollars for the best use of superfluid for insurance one thousand dollars for the top project built on super fluid and ap one and then another one thousand dollar prize that's open for a good integration with another sponsors tech we want to help you build please reach out to me in discord at sam f superfluid throughout the event if you have any questions join our discord and ask us questions there and we are really excited to help you build an awesome project there's a lot of prizes that superfluid is giving in so many different categories so i'll just quickly go through each of them here which is the top overall project that uses superfluid will be receiving four thousand dollars the best one to make streaming and out of lp position will get three thousand dollars the best lending application that leverages to perform will receive three thousand and the most innovative use of superfluids acl feature will receive two thousand the best idea that incorporates superfluid for insurance will get two thousand the best integration that coal uh works with the ap1 sdk and protocol will receive a thousand and any other integration that you blend with superfluid and any of our other partners for this hackathon will receive a thousand dollars for the best implementation so there's a lot of things going on with superfluid can't wait to see what everybody builds and then we have babylon finance my name is ramon and i'm co-founder of babylon finance i'm really excited to be sponsoring hack money today as you may know babylon finance is a protocol that lets you create decentralized investment dows or investment clubs to let people invest in the fight together to share the fees and build wealth together now for you as a developer this means that babylon gets you a fully functional investment dow or investment club that then you can compose with the rest of diva and web3 we have ten thousand dollars in prices for the best investment collapse of gardens to get started go to docs.babylondos finance slash developers see you soon all right just to summarize you can win six thousand dollars for the first place three thousand per second and one thousand dollars for the third place best integration and use of babylon finance all right next up we have ck sync zk sync version 2 is an ultra scalable layer 2 for ethereum that supports solidity out of the box its security relies on cryptography rather than validators and it provides finality in minutes instead of weeks we have eight thousand dollars in prizes for hack money three thousand for the most interesting application built on v2 and a five thousand dollar pool to be split equally amongst all entries we're also about to launch the first round of zk dao which is a 200 million dollar ecosystem fund and the requirement for round one will be having a working demo so if you want to turn your hackathon project into something a little bit more here is a head start if you have any questions or need ideas send us a message in the hack money discord and here is the link to get started amazing so you can win 8 000 for the best ck sync integration for three thousand for first place and a pool price category there that will be selecting five thousand dollars equally for every project next up we have badger finance badger is a decentralized autonomous organization dedicated to building the permissionless products and infrastructure needed to accelerate bitcoin into centralized finance we've got some great prizes that for grabs at this year's hack money the first of which is to build a yield farming strategy with badger 1.5 mix second build anything on top of the badger rewards manager and at any valid submission using vaults 1.5 or the badger rewards manager is eligible for a piece of the pool prize best of luck to all the hackers looking forward to seeing all your submissions and to quickly summarize uh the categories that we just saw the best yield farming strategy with badger will receive three thousand dollars in total first place two thousand and second place one thousand and the built anything on top of brazil rewards manager will receive two thousand for the first place and one thousand for second place and there's also a two thousand dollar pool price category next up we have gearbox hi youth global hack money participants this is jared from the gearbox protocol dao and we are excited to be a sponsor of this fantastic hackathon here at gearbox we are building generalized and composable leverage it's based on a new d5 primitive which is called a credit account a smart contract wallet that allows you to deploy a combination of your own and borrowed funds across various d5 protocols with a credit account you can build complex trading forming liquid staking strategies and sometimes all of these strategies all at once we'd love to see teams hack on new yield strategies integrations automatic portfolio management and other creative ideas that come to your mind we'll be sponsoring three prizes here first place for a four thousand dollar usdc prize second place for two and a half thousand dollars and third place for one and a half thousand dollars let's build together i'm a gearhead all right and to summarize the gearbox prizes first place will receive four thousand dollars the second place will get 2500 and third place will get 1500 for the best use of a credit account on gearbox next up we have ap wine hello everyone this is julius co-founder of ap1 ap1 allows you to get your yield farming in advance ahead of time and at a fixed rate using a new d5 primitive known as future yield tokenization future yield tokens are composable and compatible with most d5 protocols generating yield for that purpose we're giving away eight thousand dollars in prices for those who build on top of ap1 and we're excited to be partnering with superfluid the leader in payment streaming to present a co-sponsored bounty for the best project leveraging both protocols whether it be a tokenizing money streams or streaming future yield itself the possibilities are endless the team will be on discord throughout the hackathon so please reach out to brainstorm ideas and ask questions you can try the app on app.apy.phi check out our documentation on docs.ip1.phy and also try out our sdk to build your own strategy very easily we're excited to see what you can come up with and we'll be here to help happy amazing and just to repeat the prizes the best yield strategy leveraging the sdk will receive five thousand dollars in apw tokens the best integration with another protocol will receive two thousand dollars in apw tokens and the best co integration with superfluid will receive a thousand dollars next up we have uma hey everybody i'm john shut from uma we are the optimistic oracle for web3 uh what that means is basically any information you need from your smart contract whether that's real world events cross chain data off chain calculation price feeds you name it we can deliver it we're really excited to be here as a sponsor at hack money i was actually a competitor at hack money a couple of years ago and it's a great opportunity to just work on something really creative and we want to be in your toolkit we're offering a couple of prizes there's a five thousand dollar prize for the best use case the optimistic oracle and a three thousand dollar prize for runner-up um we've got engineers like me on hand to help you reach out to us we've got an ideas bank a lot of cool protocols a lot of cool products that you can build on top of um we'd love to hear your ideas and help you build it reach out to us on discord it's always good to see a familiar face um and to summarize the uma prices we have eight thousand dollars in total where the first place receives five thousand and second will get three thousand next up we have volts hey everyone i am simon i am one of the co-founders of volts labs and we have built faults protocol which is an interest rate swap amm which basically means you can trade fixed or variable rates with leverage the protocol is a super low level building block and it's creating a brand new market for d5 that's going to be huge so you've got an opportunity to be involved super early in this massive market plus because the protocol is such a low level building block there's a huge array of different products that you can build that ranges from stuff like a fixed brake volt all the way through to more complicated products like swaptions or even on-chain fixed-rate mortgages whatever you build we're super excited to help we do of course have prizes for the best kind of products that get built through the hackathon she breaks down as 4k for first place 2k for second and 1k for third if you've got any questions hit us up on discord otherwise good luck and we're super excited to see what you build so volts is offering eight thousand dollars in prizes where the first second third place will get four thousand two thousand and thousand respectively and a full price category of a thousand dollars next up we have tempus gm everybody my name is georgie and i'm here to present temple's rewards for heck money temple's built fixed income protocol so far and we are looking for the best implementation on top of it however we have also full price that will be split between everybody that builds on top of tempus also we are looking for a long-term collaboration with the teams through our grants program enjoy hacking all right so there's eight thousand dollars you can win for integrating tempos for the first place we'll receive five thousand dollars and the pool price category of three next we have coinbase wallet hello hack money i am shannon matthews i'm a developer advocate at coinbase and i'm here to talk to you about some prizes that we have for using coinbase wallet in your hackathon project coinbase wallet is our self-custody wallet with millions of users we've also got great features like our newly launched fiat on ramp called coinbase pay for this hackathon we have a six thousand dollar pool prize for using coinbase wallet in your project and we're also giving away special bonus prices for submitting awesome feedback on what your experience integrating coinbase wallet was like i'll be giving a talk about coinbase wallet and how to integrate it and you can find more details on our prizes available on our discord channel happy hacking so anybody who integrates coinbase wallet will be splitting six thousand dollars equally for their teams so that's an amazing pool prize category and next up we have ira finance [Music] hey everyone this is mike from lyra we're building a permissionless options protocol that's native to optimism lyra creates two-way options markets on the biggest crypto assets using a novel automated market maker that manages risk for liquidity providers options are the most composable primitive they can be used to manage risk generate yield and build any payoff structure we're offering up to eight thousand dollars in prices to teams that build on lyra whether it's a new option vault arbitrage bot or something entirely new we know you'll come up with something awesome check the hack money website to get some more ideas or reach out in the discord good luck and to summarize the buyer prices there is four thousand dollars two thousand dollars and one thousand dollars for the first second and third um category winner uh place and then a pool prize of a thousand dollars that you can split for a meaningful integration and then we have swing this is the vec from the swing team and we're super pumped to be supporting hack money this year there's two reasons why you should be building with the swing api with the single api and sdk integration you get access to instant access to multiple blockchains liquidity sources and cross-chain bridges also we help developers cut down their integration time from weeks to just hours check it out we support about 20 plus blockchains nine bridges and 40 plus equity sources out of the box you can see a full list on our documentation page as well we're giving out about eight thousand dollars in prizes this year and if you have any questions check out our docs at documentation.swing.xyz or message us at the hack money discord channel sponsor swing happy hacking guys look forward to seeing all the work you guys put in amazing and to summarize the first place will receive two thousand dollars for the best integration of swing second place will get thirteen hundred and third place will receive one thousand dollars um the pool price is put between all projects for four thousand um and with that let's go into the remaining prices so next up we have polygons so there's a lot of prizes you can win for polygon six thousand dollars for pool uh price category that's going to be split between six projects so every project will get a thousand and the first second third place will be receiving five thousand three thousand two thousand each for the ave grants prize and integration first place we'll get 7 500 second place we'll get 45 and third place we'll get 3 000 and the fourth place will receive a thousand dydx grants program is also offering a lot of amazing prizes for the best integrations the first place guess 5000 second place guess three and the third place gets two for unstoppable domains you can get two thousand fifteen hundred and thousand four first second and third and thirty five hundred for a full price category so any integration will split that equally then we have graphs so the graph for second third places are twenty five hundred thousand and five hundred but it's split into three tracks which is the best use of an existing sub graph and a best new sub graph that is contributed to the protocol and the explorer for that category then we have arbitrary where you have 2500 for the first place and 1500 for the second place then we have connext where the best use of a cross chained app that uses permissioned calls will receive three thousand dollars and the best use of the costume that uses permissionless calls will receive thirteen hundred dollars for integrating with connext then we have chain link where chain link is offering the a thousand dollars in link tokens to the top four projects that use the chain link sdks waku is offering a thousand dollars for the first place for the best integrations for sending and receiving messages in a decentralized manner and a pool price category of 2000. then we have fuel labs fuel labs is offering 2500 for the first place a thousand dollars for second place and a 500 price for third place for the best integration with fuel and a pool price category of four that will be split equally for all meaningful integrations then we have epns where you will receive two thousand fifteen hundred and five hundred dollars for the first second and third place for the best integrations then we have odos and you can receive five hundred dollars for a cross-chain token swap or nft swap idea uh 500 each then we have maker dao and maker dao is offering a 4 000 pool prize where 4000 will be split equally for all maker integrations for your projects then we have chain stack and chain stack you can receive 2500 000 and 500 for the first second and third place for integrations then you have gnosis safe so it's a lot of interesting things that we can do here for the roles modder the best use of zodiac rules modifier on gnosis will receive two thousand dollars as the winning prize and then the best project on top hypnosis just in any given category will receive two thousand prize as well for the best integration then we have year on finance and there's a full price of four thousand dollars that's going to be split between anybody who uses yarn for a meaningful integration then we have redstone where you can receive three thousand dollars for first place and 500 for second and third place each for a most uh efficient use of a cost efficient oracle integration then we have teller where you can receive twenty five hundred thousand and five hundred dollars for first second third for a oracle integration on top of teller then we have covalent uh who were offering the four thousand dollar pool prize for the best integrations for a covalent api for getting on-chain data we have nervos and you can receive two thousand dollars and a thousand dollars for the first and second place for a nervous integration for your project and then we have compound finance content finance so best integration that uses a compound protocol or or an upgrade to the protocol will receive three thousand dollars and there's a full price category of a thousand dollars that's going to be split between all projects then we also have spheron where the top 10 projects who have spheron for hosting their web app will receive 200 each for making a decentralized storage network integration then we also have a 4 000 price from tranzact for a transact integration that's going to be split equally between all teams oses is offering the best privacy integration where the best integration will receive a 4 000 prize and to kind of summarize all these things all of these prizes are listed with a lot more detail especially with workshops documentations and nuances around what qualifies and what doesn't on this url you can head over to d5.eglobal.com prizes and finally just to close up logistics before we go into all of our amazing talks uh we really want you to have fun here please pace yourself this is a couple week long event we really don't want you to tire yourself out or compromise your sleep over building cool things we don't want this to be exhausting for you we want this to be about experimentation and learning so have fun ask us questions if you're stuck ask all of our partners questions if you need help with something and you don't necessarily have to stay up at 2 a.m to watch some talk it's not in your time zone everything will be recorded and we're going to make sure that you are able to catch up if you miss something this is designed to be asynchronous by nature so with that happy hacking and we'll see all of you on discord and for those of you who are joining us for this summit welcome again and let's get started all right so let's go into the summit today is our kickoff summit and we have an amazing set of speakers that are going to be talking about all the interesting things that are happening in d5 so to give a quick overview of today's schedule we're going to have alexis first talking to us about squeak then we have arjun talking about how we do d5 in the cross chain worlds then we're going to talk about how defy is making the rest of the world permissionless in a super interesting and a unique way then kaido will be talking about treasury and sustainability and how do we actually manage these things and treasuries at scale and then how does zero knowledge proof actually change how we think about d5 elena will be coming on and talking about defy and privacy and how all of that is important so with that let's get started with our very first talk so i want to bring on alexis here to talk about squeak uh for those of you who don't know what sweet is um i won't spoil this for you we'll have alexis uh give that intro so without further ado let's welcome alexis on stage good to see you alexis how's it going hey good to see you going well excited to squeeze well perfect oh the stage is yours amazing um okay awesome yeah so really excited to be here excited to chat with everybody about squeeze you're probably wondering what a sqweep is um and by the end of this talk you'll know you'll be able to tell all your friends that you're squeezing um so today we're going to kind of start off by talking about options what they are like how they work then we'll dive into some of the problems with options and how squeeze came to be in the first place um and then we'll talk about what squeak is and how it works uh so let's dive into it so first of all why do people use options well people typically use options for one of these three things they're either looking to get leverage or in yield or to hedge themselves and when we built out you know the first options in d5 open this is what we noticed people were using options for it wasn't just like options for the sake of options but for one of these three like specific things um and we'll come back to this so now what is an option there are two main types of options there are put options and call options and today i'm going to focus on call options so we'll chat about what call options are first talking about this kind of fancy formal definition um but then we'll really break it down go through an example and try to just wrap our heads around what this actually means so the definition of a call option is something that gives you the right but not the obligation to buy an asset which we call the underlying asset at a given price which we call the strike price on a certain date which is the expiry date now that's a mouthful of a definition let's break it down so let's take an example let's say that eth price is currently three thousand dollars but i'm feeling really bullish i think that by the end of the month eighth is gonna be five thousand dollars and i'm really excited about that then what i can do is i can buy this call option and what this call option basically tells me um and is that hey like at the end of the month i can buy each for our price which we call the strike price no matter what the price of eve actually is in the market so i think that youth is going to be thousand dollars at the end of the month so maybe i buy a call option with a strike price of four thousand dollars now what that means is say we get to the very end of the month and ethan's trading at five thousand dollars instead of having to pay five thousand dollars to buy eth i can just use my call option and buy eth for four thousand dollars so even though eth is trading at five thousand dollars on the market this call option lets me buy it cheaper than the market at four thousand dollars so that is kind of what is really powerful about call options um and the cool thing is if i were to buy eth right now i'd have to pay three thousand dollars but if i were to buy this call option i pay some sort of premium say that premium is like a hundred dollars then i'm paying a hundred dollars right now for the right to buy eat that four thousand dollars at the end of the month um and so i can actually just pay a hundred dollars right now to be able to buy each cheaper than the market at the end of the month if i'm feeling really bullish um so so yeah basically kind of just what we talked about i'm bullish eat i think ethan's gonna go up beyond four thousand dollars so if eath price goes up beyond that i can still buy that eat that four 000. so kind of mapping that back on to the definition that we talked about our underlying asset is eth that's the asset that we're thinking about here the one that we are saying hey i think this particular asset is going to be above um four thousand dollars four thousand dollars is the strike price that's the amount that i'm trying to buy this underlying asset for even if the market price is greater uh february 28th is my expiry date so i can do this you know on february 28th at the end of the month of february um and i actually have a choice this is actually really really interesting so you might be thinking okay eath goes up to five thousand dollars at the end of the month why wouldn't i want to buy eve for four thousand dollars when you know for cheaper than it's on the market at five thousand but what if we go the other way and have some sort of like bear situation where ethan's at two thousand dollars then do i still have to buy eth for four thousand dollars am i locked into this price and the answer is no if eth goes down you don't have to use your call option you have the choice to use your call option so if you went down i probably wouldn't use this call option i wouldn't buy you that four thousand dollars but if you went up to 5 000 then i'd want to use it um so you have this nice choice which is that right not obligation that we talked about so what does this look like well the cool thing here is you actually have limited downside and unlimited upside so i'm paying a hundred dollars to buy this call option if eth goes down and i don't want to use the call option then all i've lost is this a hundred dollars and if eth goes up i just keep making more and more and more as the eth price goes up say youth price goes up to 8 000 i can still buy it at 4 000. so that gives us this really really nice property of limited downside and unlimited upside and we have a fancy word for this property so if you've ever heard the word convexity all people are trying to say is a limited downside and unlimited upside so that's that's what people are talking about when they say convexity um and it's this really nice property that you get here okay cool um so now you might be thinking well that's great unlimited upside limited downside like i want that so who's trying to sell this to you who is taking the other side of this bet um well these are people that are actually earning premiums for selling you that really really nice choice that really really nice payoff so when you buy that option for a hundred dollars that hundred dollars is going to this person on the other side of the trade that's willing to take on more risk so for them the maximum amount that they can earn is that a hundred dollars so if each price goes down and you don't use your option they just get to keep that hundred dollars they're happy um but if each price goes up and you exercise your option they're forced to basically like take that other side to sell it to you at four thousand dollars even though it's trading higher on the market and they earn a premium for taking on this risk while you the option buyer has a choice about whether you want to use your option this option seller has no choice they are forced to take the other side of your trade and they get paid for that so for people that think hey there's no way it's going to hit five thousand dollars at the end of the month i'm willing to take on this risk then they can earn this kind of steady premium for selling you this call option okay now what are the problems with defy options what have we seen so far um and there's a couple problems that have popped up that we've seen as we've been building defy options one is that there are tons of different expertise that you can have for these options so we were talking about a call option that expires at the end of the month but you could have an option that expires at the end of the week at the end of two months at the end of three weeks you could have literally any experience and so that means that you need to constantly be thinking about that you can only use your option on that expiry date and then maybe that expert date comes around and you're like hey like i still want this choice then you have to manually kind of roll over your option to the next expiry and then you have to make that choice up front like hmm do i think it's going to hit 5000 at the end of this month no maybe the end of next month no actually next week um and so there's kind of a lot of choices that you have to make and if choosing expertise wasn't enough you also have to choose your strike price so maybe you think eighth is going to go up to 5 000 or maybe 3 000 or maybe 3 500 and then you have all of these different strike prizes and when you take all of these strike price and expiry combinations those are all individual markets so the four thousand dollar call expiring at the end of this week is different from the four thousand call expiring at the end of the month is different from the 3 000 call expiring at the end of next month and so you end up with liquidity fragmentation because you have all of these different separate markets that you have to build liquidity around and that makes things really difficult and so we were like okay there's all of these problems with d5 options right now how do we solve them so we went to the forest the literal the literal forest um and we were like hmm how how do we solve these problems and it was there in the forest that we found squeaf and sqweep solves these problems sqweep is like a call option in terms of its payoff you still have that really nice unlimited upside and limited downside but you have no expertise no strike prices and that means you could have one liquidity pool so we're building liquidity around one instrument we're taking out all of those choices and those and those things that you have to think about and you're still able to get the heart of what you're getting with a call option but in a much more liquid and simple way so what is squeeze well long squeeze is very similar to a call option this blue line here is squeezed and you can see that you have this unlimited upside and limited downside it's like a call option but it's more curvy so the call option is kind of like that and squeeze is like even curvier so um it kind of gives you like this this convexity but but in a better and more perpetual form um and so that's kind of one way to think about sweep like a call option but with no strike price and no expiry um but there are also a couple of other mental models that can be useful to help us understand squeeze so just starting with the name what does the sweet name mean well it's squared if squeeze um and so this blue line here is a is literally the right side of a parabola like if you were to take x squared and plot it on a graph that's what this blue line is so we literally are taking 8th price and squaring it and that's kind of this blue line that you get here you can also compare it to something like 2x leverage um and you can see that kind of compared to 2x leverage when eth goes up you do better with squeak than with 2x leverage when it doesn't move that much you're kind of getting about the same payoff and when eat goes down you get liquidated with 2x leverage but you don't would squeeze and so another kind of way to think about it is as perpetual leverage without liquidations so those are kind of a couple mental models think about squeeze to start to wrap your head around it um we see that it's got similar properties to the call option in terms of that limited downside unlimited upside got that nice curviness which you don't get with the kind of 2x leverage or perpetual swaps you have no liquidations similar to a call option um but your payment you're kind of paying a continuous payment which is a little bit more similar to perpetual swaps versus like a one-time premium that you pay with a call option so some mental models about how to think about squeeze so now you're probably thinking okay like that's great now i get like this perpetual call option thing i have even more unlimited upside and limited downside who's taking the other side um and pretty similar to going short a call option the person on the other side is willing to take on some risk in a return for earning fees so in this case they are earning those continuous funding payments for being short squeaked and kind of taking the other side of that position and the way this works from a mechanism standpoint is actually very similar to something like maker dow if i wanted to go short sweep i could put down some eath collateral into a vault and then i could mint some squeak the same way i would like put each collateral into a vault and mint some dye um and then to go short squeak i would sell that squeak that i just minted on uniswap so squeeze trades on uniswap v3 if i wanted to go long squeeze i would just buy the long sweet erc20 token uh from uniswap um and if i'm going short squeeze i'm selling that same erc20 on uniswap and so that's kind of how things are working behind the scenes now why is this relevant we'll get into that in just a second so uh we have this crab strategy um because when you're going short squeak like i mentioned it's similar to maker dale like you're putting down collateral into a vault you're minting squeak and so that means you need to be thinking about things like your collateralization ratio and your liquidation price it's a bit more of a managed position so to make that easier we built this thing called the crab strategy and the crab strategy is an automated strategy that uses short squeeze um to let you earn funding without you having to worry about the nuances and details of your collateralization ratio liquidation price etc so the strategy is managing that for you um and what this strategy is doing is its goal is to make us dollar returns you're trying to earn funding without necessarily taking a view on each so remember how i mentioned that when you go short sweep you have to put down each collateral into a vault well that means that you have some eat exposure so what this strategy does is it hedges out that eat the exposure so you're just trying to earn funding and so you can positive strategy or in the funding fees uh and not really have to think about your liquidation price or collateralization ratio of course this comes with its own risks like you're going short squeeze you're paying those rebalancing fees um but it's a much simpler way to kind of take the other side of the squeak trade so those are kind of some of the fun ways to sweep but we've got a couple more ways to squeeze uh so like i mentioned squeeze trades on uniswap um so that means that you could be a uniswap lp for sqweep and the main pool is the squeep eath pool and there are a couple different ways that you can lp on uniswamp so when you're lp on uniswap you need to provide two assets you need to provide eath and you need to provide squeeze so there are two different ways that you can get that squeeze to lp with and each way gives you a slightly different path um so you could buy squeeze or you can mint squeeze like we talked about by putting down each collateral and then minting some squeeze so let's start by talking about buying squeeze you go to uniswap you buy some squeeze you bring some meat and you decide you want to lp it well what does that return actually look like well turns out that's this blue line right here and the payoff of buying squeak and lping it is actually east to the power of 1.5 so the same way that squeak is eighth squared buying an l ping is actually eased to the 1.5 power which is pretty cool it's like slightly less squeaky squeeze so you're earning this kind of nice leverage payoff you're still paying funding because you're long squeaked you've bought squeeze but you're also earning fees because you lp'd on uniswap so it's basically like you're offsetting some of that funding payment with the lp fees that you're earning on unit swap and in return you're still getting leverage but you're slightly less levered than normal long squeep because you're kind of paying less in the aggregate so it's a nice way to still get some leverage but not pay as much and kind of not have that full each squared profile but a nice each to 1.5 so that's kind of what buying an lpng is um and then if you mint an lp you actually get like a very different kind of payoff um where you are earning the lp fees uh but you could be earning the lp fees and earning funding because in this case you had put down your eighth collateral into the vault you minted some squeeze and then you put that minted squeeze and eat into the unit swap pool so now when you start you actually start with a payoff that's kind of similar to long eath but as the pool moves and people buy and sell squeeze you could end up with a short squeak position because the amount of sweet debt that you minted could be different than the amount of squeeze in the unit swamp pool so say i put down some earth collateral and i minted ten sweep and then i put that 10 squeeze and some eath and a unit swap full now my debt is 10 squeeze say people trade against the uniswap pool um and the amount that i have in the unit swap pool at the get-go was 10 squeeze it was neutral but now people have traded against the pool and my amount in the unit swap pool is less it's like five squeeze so now i'm short five squeeze which means i'm earning funding and lp fees um so it's a pretty cool way to be able to earn both of those fees uh now of course because you do have like a vault you do have to be thinking about your collateralization ratio and liquidations um but that's like another fun way to squeeze is minting and lping on unisfog so we talked about a lot of different ways that you can squeeze you can go long squeeze and get a nice 2x leverage without liquidations kind of pay off you have that unlimited upside and limited downside you can go short squeeze and earn funding to take on that risk you can participate in some of the short strategies like the crab strategy or there's tons of other really interesting short strategies that can be built we talked about the buying alping and minting and lping strategies um but there's also a lot of other fun things that you can do with sleep you can actually use long sleep to hedge an 8th usd uniswap lp position and we have some blog posts that dive deeper into that that's like a whole another fun rabbit hole you can use sqweep as a volatility oracle because sqweep um kind of represents like a bunch of different options condensed into one it's like if you took the whole options chain and put it into one instrument um squeeze funding can actually uh give you a bit of a vol oracle which is very very exciting so we're looking at like ethics through squeeze funding which is another kind of fun topic to dive into so basically there's lots of interesting things that you can build with squeeze and if you're excited about that we've got some blog posts about those things and happy to chat more about it and yeah if you want to try out squeeze you can squeeze at squeeze.open.com if you try that out definitely feel free to ping me with any questions or thoughts that you have very excited to um you know answer questions we're always trying to improve the squeeze if you want to chat about sqlite or have questions join us at discord.open.com and if you want to build squeak we are hiring at jobs.open.com um cool so it was very fun squeaking with you all if you have questions definitely hit us up on discord um and yeah thank you thanks alexis that was an amazing intro to how squid works and i'm just looking at some of the comments on the chat too and this is so clever so i'm glad that we got to do a beginner-friendly version of how all these things work sweet all right well if there's any other more questions we'll uh we'll relay them to you directly but um one comment we did get was if we can have access to the slides so if you want to send that to us after we'll share that with everybody thanks so much all right with that we are ready for our next talk so next up i want to invite arjun to talk about interesting d5 and how connex makes that a lot more convenient and simpler so uh without further ado let's welcome margin and i'll let you take over from here awesome um thanks so much cody um hi everyone my name is arjun i'm one of the founders of connext connext enables fast trust minimize communication between blockchains and rollups we've been in the space for a very long time uh heavily researching layer twos since like 2018 and then uh uh started working on cross chain master uh and right now have a have a live product that works on transferring funds between chains that is now being upgraded to do more generalized messaging um and i'll kind of go into what that means in a couple minutes um this talk is about cross-chain defy uh i know a lot of people have been thinking about what d5 looks like when you're when you're now in this like interchange interval paradigm and uh and uh this talk hopes to illuminate a little bit about like what uh kinds of things can be built in this cross-chain paradigm and what kinds of pitfalls exist when trying to build projects in in this cross-chain world um so yeah without further ado let's start by just some some basic background on bridges bridge trade-offs and connects um one of the key things with building distributed systems is that there are always trade-offs um this is this is just like the unfortunate nature of being in our space and and this is especially true for bridges because really with a bridge or an interoperability system what you want is a combination of three things you want uh it to be trust minimized obviously you want to kind of maintain the the security properties of the underlying blockchains if at all possible you want it to be generalizable by which i mean you want to be able to take any arbitrary data and pass it between chains you can build arbitrary applications and you want it to be extensible which means that you can take the same system and replicate it on a bunch of different chains and roll-ups and other kinds of of constructions without having to go and do a bunch of custom work to integrate um and generally what what's existed in the past is that there's there's only ever like any construction that has existed has only ever been able to fulfill a couple of these these requirements at any time so uh the way that connects works currently for instance uses uh atomic swaps and uh and while it is trust minimized and can be deployed easily to any chain we cannot uh handle any arbitrary kind of payload we can do some types of contract calling across chains but not every kind of contract calling similarly you have you know mpc systems oracle systems well uh what a large number of people are now colloquially referring to as like multi-sig bridges um and and those things include things like their zero and synapse things like that and while those are very very easy to deploy to many different chains they support arbitrary message passing they're not really trust minimized you're having to trust this like external set of actors um that is fundamentally going to have a different security model than the underlying blockchain now in the last few months we've been we've been pushing this idea of optimistic bridges which was first pioneered by nomads um optimistic bridges kind of take another path along the straight off space where uh they actually fulfill all three of these requirements they are trust minimized generalized successful and they do this by relaying data across chains optimistically um using the similar model to orus where they post data to chain uh on the receiving chain and then there's a certain timeout window in this case 30 minutes within which people can prove fraud um now as you can tell there is again another trade-off here which is latency so while you're able to get some of these highly desirable properties it now takes 30 minutes to do transactions across the chain is there a way to beat these trade-offs we think that the best way to do that is through modularity so one thing that we are working on now with our with our new upgrade is uh layering connects on top of nomad uh so that you know we we offer kind of liquidity layer of stacks nomad offers the messaging there at the stack and by doing this we can uh it's sort of like a positive situation where we can offset some of the the the trade-offs of connect and also some of the trade-offs of nomad um and the outcome is that we can actually end up with something that looks as close to ideal as possible while uh retaining the trust minimization properties of the underlying chain so for any kind of transfer or funds or an unpermissioned call by which i mean a call that goes across chains and doesn't actually need to check px.orgin that can happen with two minutes of latency which is the normal time that it takes for connects to make a transaction um and then for permissioned calls where you are checking px.orgin that takes 30 minutes of latency which is which is the standard nomad time generally what we've seen is that this is actually okay because uh in the vast majority of cases uh user facing interactions are typically unpermissioned because they you don't normally want your broad set of users to be able to call you know a mint function on your token or something like that because that's obviously going to be a security vulnerability and so generally we've found that this works well because user-facing interactions can happen quickly with good user experience and then the slower slower interactions happen with a higher degree of security or i guess they happen it with a higher degree of latency but that's necessary because they need a higher accuracy period all right jumping into cross chain applications um one of the things that we we like one of the ways that we like to think about what connext is actually enabling and what the stack enables is that we are making we are pushing solidity towards becoming asynchronous so until now everybody has built solidity applications in a synchronous environment everything happens within a single block it's sort of like you know the ap computer science uh version of development where you are only building programs that run locally on your on your machine that don't ever interact with the remote resources at all but as we know from building web applications and for anybody that's written anything in typescript you know the reality of the internet is that it doesn't really work that way you have remote resources you don't really know when you're going to get a response from those resources is you have to think about asynchrony and in short you have to start thinking about distributed systems what connects enables is making these kinds of asynchronous calls across chain so we have a function uh the core kind of flow for for making this kind of call is uh is a is a function called xcall which maps to the lower level solidity call function and in the same way that you make a call to a contract on the same on the same chain as you with call data um you would make an x call to a contract on a different chain from you uh with uh call data and a destination domain or basically change chain address and what's really interesting about this is that you can actually again similar to things like javascript um receive a callback and execute that callback back on the origin chain so you can go and execute some transaction somewhere else uh get data from from executing that transaction bring it back home and then do something else with that data now of course there is latency involved in this so you have to think carefully about what that latency means but this is a really really powerful primitive and there's a lot of really interesting types of protocols that can be built using this mechanism where you're able to to access resources in different locations at different times now one of the biggest questions that comes up during this is like what does it look like to actually do this how do you how do you charge fees how do you actually make this interaction happen and what we've tried to do is is just mimic the existing flow for building applications as much as possible so we charge gas fees on the origin chain they're charged in the native asset that is uh that you're already spending on the origin chain to make a transaction and similar to how you handle gas fees on with every single chain today the gas cost of execution on the receiving chain of course is variable but will get executed if you have enough gas to pay for it and if you don't have enough gas to pay for it you can bump gas um in again the exact same way that you do today we think that this actually represents the ideal user experience because uh you do the the the development process for building these cross chain applications then just becomes uh figure out how much it's going to cost to execute a transaction or receiving chain and and you know just come up with your best guess estimate for this send a transaction on the sending chain passing in the gap and then if it isn't enough enough funds to make that transaction happen within the time period you wanted to bump gas in order to make it happen faster um pretty much exactly what you would do to build an application today what does it look like in practice um in practice we've tried to as i mentioned uh map to the existing lower level call interface as much as possible now there's there's obviously limits to this because we're you know we're limited by what like solidity can accomplish and i think in the long run we can work towards doing more interesting mechanisms like perhaps even building in promises in facilities so that you don't have to deal with some of the annoying things associated with callbacks but overall it's still a very simple flow um the entirety the entire entry point of this flow is just a simple x call function and the idea is that you can x call things and return you know and like get return data from x calling things um and use this as a core primitive to now start building much more many more complex multi-chain or a cross-chain system so now we kind of get into what can you actually build uh with these with with this primitive um and this is where things get interesting so there is an entire domain space of d5 applications that exist right now and the the big problem associated with the multi-chain d5 world that we live in is that users have to think about what chain they're on and they have to actually go to external interfaces like bridges to be able to go and interact with an application that's running on another chain and furthermore you don't have this like consolidated liquidity consolidated experience between these different applications so um you know uh you if you use uh like ave on polygon today um it's actually a completely different application to use ave on on average it looks the same but you have to go and do a bunch of things separately from the ave application to actually interact with aveon avalanche and that's just really really bad user experience but what we're really interested in is trying to figure out what like what ways we can basically trying to encourage people to build applications that are just chain agnostic by by default they they live across chains and similar to how you build applications on the web today they access liquidity and resources from any chains all at once examples of these are cross chain taxes so allowing you to swap any asset to any other asset across chains potentially with optimum optimal pricing and basically either depending on whether you want best pricing or whether you want to go to a specific chain you can make this an option to the user you can also build much more interesting yield aggregators so for example being able to zap into a yield aggregator fault from any chain so as a user you don't really need to think about where am i going to get the best opportunity and then even beyond that aggregating yield within those vaults from any source on any other chain another really interesting one is lending so being able to lend money into something like abe migrate ave positions across any chains to be able to get the best rate that you can on eight chains and do things like interest rate swaps um and then do more complex stuff like borrow across chains based on liquidity that you've led down on chain there's so much here there's a whole like world of cross chain d5 that has yet to be explored and if you have original ideas around this we definitely want to help cool um last thing that i really uh not really laughing this is definitely going to be the like biggest chunk of this talk so i what i what i really would like to talk about is uh cross-chain application design um this is something that like not a lot of people have have really explored um and i think that things start to get a little hairy when we deal with this asynchronous world and and i want to caution that like you know this is all this is all like early thinking that is still evolving in real time so as you as you go about designing your cross chain applications definitely try to like speak to us uh reach out to us and that way we can we can help you think through these ideas and and try to try to be cognizant of the fact that the the asynchronous environment that you're operating in now will have a bunch of pitfalls what are these pitfalls well one of the first pitfalls to think about when you're building a distributed system is concurrency when you're when you're building into service systems outside of the space um you have to consciously be aware of the of the possibility that some resource that you're accessing for example if you're trying to like update a database may need to be accessed from other systems at the same time so what happens if you have conflicts within your database because you're trying to update two pieces of the same state at the same time from different origins and the same kind of problem exists in uh asynchronous validity as well uh and this is this is where things kind of get a little weird so um imagine for example you have a beef application where you like like across chinam where there is a pool of funds on a destination chain and that pool of funds needs to be accessed from several different origins concurrently a really really simple example of this is something like synapse where you have a pool of funds sitting on optimism and then you have the ability for people to swap into that full of funds from arbitrarum and polygon and avalanche um what happens in the in the case that multiple people try to access that pool of funds at the same time what happens if funds actually if you actually run out of funds in that pool well then you have to introduce concurrency control uh and this is this is like uh one of the things that you you traditionally deal with in distributed systems outside of the space and you can map a lot of the like core uh uh strategies that you use to deal with concurrency over to this space quite well as well though as we'll see not all of them are very effective the first thing is segmentation you can split up the state within your pool to make it so that only a part of your pool state can be accessed at any time by any origin um and in this case you know you have uh this this out of the single destination pool you now have three pools uh you basically have three destination pools sub pools that are created which each map to origin one two and three and the downside of this is of course that you have fragmented your liquidity on this at the destination and it kind of gets even worse because it's like every time you want to add a new origin you have to refragment your liquidity further and further and of course that means lower pricing that means more complexity that means having to think about oh well you know i have an origin that's just not really being used do i need to re-segment that pool so then that way i can utilize more more of that liquidity elsewhere these end up being like weird operational questions that you normally don't ever have to deal with in amm another option is something called serialization so outside of space sometimes this is called optimistic locking but the idea is like globally order the transactions that are going into into your destination pool so if you have you know a transaction coming from origin one two and three at the same time um go to your uh ensure that these things are ordered within the destination pool based on when they actually uh uh when they're mined within like basically when when uh uh miners ordered them uh within a block now the weird thing about this is that it doesn't really handle the case like with it with an optimistic lock outside of the space what you usually do is if the uh if the state that you're accessing the state update that you're trying to make on the state that you're accessing is no longer valid then you just kind of drop that update and you go back to the origin chain and say hey let's just retry this in this case that doesn't exactly work because what happens is you end up in this sort of weird place where uh you're uh you uh you've say for example you've run out of funds in the destination pool entirely you end up in this weird case where it's like somebody has paid a transaction on the origin chain to be able to make a transaction the destination and now their funds are just kind of stuck they're just there and there's it's very unclear what happened you could potentially make it possible for them to revert their transaction back to the origin chain and then pull their funds out and submit a new transaction but that's just like horrible horrible user experience and it's really unclear like what that even looks like in practice a last option that i think has started to be explored is pessimistic locks so instead of actually ordering transactions or locking them at the at the point of the transfer itself you lock the pool before you start the transfer um this is something that you do with databases where you you could set up like a mutex on uh on on some part of the databases state while you're executing something over here and accessing the database state repeatedly and then you release the mutex at the end of uh of uh of your process so that way other processes can now start accessing that state at the same time um there are downsides to this uh even outside of the space so one of the big downsides is things like deadlocks where you have two things now trying to access the same state at the same time it becomes kind of weird you're like okay well which one of these things should happen first which one of these things should happen later um and that's actually even more weird when you're starting to deal with liquidity rather than just at arbitrary states so in this case if you have a pessimistic lock you are now locking uh you're now locking sublocking this pool um just in time for each transaction but in order to do that you actually need to have a lot more messaging over it you need to have a message that goes back and forth from you know origin one to the pool uh to lock a part of the pool then the actual transaction and then another message to unlock the pool um that's you know in a in a database environment that's not that bad because you can send these messages within like you know milliseconds if that um but on chain uh that latency can add up pretty quickly like if you're using something like nomad that can eventually be like few hours for a transaction which would be kind of ludicrous but even otherwise even if you have like very very low latency in all of these cases these are unchanged transactions so like if nothing else you have an incredibly high cost um and beyond that you also kind of get into some of the weird aspects of like okay well how would you handle a deadlock in this kind of uh in this kind of a scheme um and it's not really clear you know you would you would end up in a situation where uh you know if if origin one and two were interacting with the school at the same time and origin three tried to make a transaction um and and got deadlocked then origin 3 would just kind of be stuck until the others figured it out and and whether or not his transaction would go through would again depend on whether or not there was enough liquidity in the pool the kind of conclusion of this is that for pools and for this specific use case that we're talking about here none of these options are really that great um it kind of sucks uh we have a lot of like trade-offs associated with building on top of blockchains and one of the big big trade-offs is that they're expensive and slow and and this is especially magnified when you're trying to deal with something that's as complex as like concurrency um and so you know while it's true that you could potentially use these sorts of strategies for concurrency control on uh non-defy applications so on applications that aren't necessarily uh utilizing liquidity you uh you are probably going to run into issues with like pricing and complexity if you try to use them within v5 or within cross-chain device another really weird thing is synchrony and this is another kind of assumption that ends up getting made in the space quite a bit when people think about building cross-chain applications so by synchrony i mean the fact that there is asynchrony across chains means that it isn't actually possible to know that this it isn't impossible for any one chain to know the state of another chain at the exact time that it knows its own state um a good example of this is say you are you have again yeah like our straw man of uh of uh of uh or maybe not strongmen uh a our quintessential example of a cross-chain amm and you have a pool of funds on on the origin chain made up of asset x and a pool of funds on the destination chain made up of asset y um in order to calculate the price that you swap into asset y on on the destination chain you need to know the the state of the pool at the time when the swap occurs so say uh when you initiate this swap at p0 you know that the state of the pool is s0 and this is what gets transported across chains by the time it gets across chains um the pool state of x is is is uh is actually changed to s1 um and the reason for this is that of course there are people making transactions going in the other direction the pool is changing constantly in size um however at the destination chain this is actually not known at the destination chain the pool state at t1 is still s0 and it gets kind of weird because it's like one of the fundamental assumptions of amms is that you have a constant product right as we know the k and x y equals k stands for constant um but if you have asynchrony and you're making the synchrony assumption then you end up with a curve that doesn't actually look like an am at all amm at all it just looks like something that is not going to be extremely helpful for pricing um because now your constant is only sometimes constant um how do you synchronize pricing well this one's actually even more difficult you could use an oracle to have access to the to the pool state of all pools at all times um you can try to use a decentralized oracle for this but then once again you're introducing more asynchrony and potentially more assumptions there if you use a centralized oracle then now you've just built coinbase so that's not very helpful um another option is to actually just have uh the the pricing itself just happen entirely off-chain um and this is something that's been explored quite a bit in the past you know this is originally how like vrx worked and a bunch of other projects have tried to try to build off-chain order books that are decentralized um but now you know you have some of the the same trade-offs that you did at that time which are that off-chain order books they're just really really complex and like you have to think about what it means for this off chain order book to achieve consensus and things like that um once again none of these options are really that great uh you synchronizing things across chains and especially synchronizing pricing is just like a really really weird rabbit hole that uh is difficult to go down and you end up in sort of really unpleasant places um the kind of takeaway from this is that building these size apps is going to be tough um and it's not just like building distributed systems outside of space and the reason for this is that messaging overhead in uh on blockchains and between blockchains is costly uh you know it's not like messaging overhead when you're going between two databases where you can have many many millions of database updates happening per second if depending on how optimized your database is instead you have one update happening every so often and it costs a ton of gas so you you really want to make sure that whatever construction you come up with minimizes the amount of messaging that you're doing between chains to begin with secondly state updating update ordering actually matters um in a in a database it only matters sometimes and in many cases you're able to kind of get away with using other mechanisms like um you know things like kafka basically queueing mechanisms to be able to handle ordering better and insert things into a database in the correct way but that doesn't really work as well in this case because again gas overhead and when you don't get ordering correct or when it is possible to manipulate ordering to change pricing then you get med is there a way out of this um i think over time we'll come up with better ways to handle concurrency across chains and to handle some of the design patterns around asynchrony and one of the things that will actually be the the impetus for this will be a massive reduction in cost of operating on these chains to begin with because really really like a lot of the bridge costs come from um the cost of the the underlying chain or roll-ups as we as we drive down the cost of roll-ups very significantly uh by moving to east 2 and things like that we will end up in situations where it is you you will have a bit more flexibility on the messaging overhead that you can have and probably better mechanisms around ordering as well however for now our recommendation is to try to build replicated instances instead of fragmented ones by this we mean have uh instead of building a cross-chain amm that has pools on many different chains all at once or a cross-chain lending protocol that has you know borrowing on one chain landing on another completely isolated from one another and then trying to synchronize those states against each other instead actually have replicated ammo so you have an amm on chain a a good example this is something like sushi right you have you have sushi deployed on every single chain and then what you do is you make it possible for users to be able to to make transactions directly between these amms so that it goes you know swap to transfer to swap all of that can happen in a single transaction and then you allow for rebalancing the pricing between these chains using very cheap and efficient arbitrage um the mental model here is similar to something like ipfs you have a distributed system that um that has a bunch of replicated states that achieves eventual consistency the nice thing about eventual consistency is that it's very very low overhead um it's driven by market forces in this case there's very very strong incentives to actually achieve that consensus consistency in the form of arbitrage and um you get to kind of like mitigate a lot of these really weird situations that you end up at when you deal with like state itself being fragmented on many many different chains now of course this is early there's still a lot of like there are a lot of really interesting use cases around like protocols and things like that that actually where it does make sense especially if you're trying to just go and grab some arbitrary state somewhere else um that isn't liquidity it does actually make sense to still try to use like uh to still try to fragment the state or try to use mechanisms like concurrency control to like update that state a good example is something like um you know uh uh uh pcv in uh in uh in uh uh uh in like a protocol where they uh pcv is used like the the the protocols pcb is used as a like pcv constants are used as a mechanism to decide how much money can be minted against like the protocol treasury and when you are minting against protocol treasury on other chains it is possible to just update that pcb value on other chains rather than having the liquidity move to other chains as well um so there are kind of like optimization functions written around this but generally speaking i would hesitate to like do not try to avoid um situations where you have user-facing pools and other kinds of like user-facing interactions that are fragmented on many many different chains all at once um this is uh obviously like uh initial steps into into building d5 into building crosstain d5 applications there's still a lot to be learned here and we're pretty excited about the the direction a lot of stuff is going so if you're interested in talking to us about it definitely message us on on our discord we have a very very awesome community that talks a lot about this stuff and and has a lot we overall are trying to figure out ways to like pioneer some of these standards around asynchronous ability you can also follow our twitter for updates um and if you're interested in building on top of us check out our docs we have a you know we have our new upgrade live on testnet right now and it should be fully possible to build things on top of um and then it should it should be going live to mainnet within the next like month or so and lastly if you do build on top of us and if you're not in the us apply to our contributor program we're running a program where people who uh build projects and otherwise contribute to connects can earn tokens um as uh once the token network once the once our token launch happens in again about a month or so um and we we think of this as a good incent as an incentive mechanism to get some of these early applications early examples of what it looks like to build costumes device out in the while cool thank you everybody i appreciate your time hey argent surprise it's me how are you man thanks for the talk um and then thanks for uh yeah thanks for walking us through that um i think we don't have enough time for questions so i'm gonna probably have to take you off here but um yeah awesome talk and i appreciate you coming out and chatting more about zaps crosstown apps and uh and the work that's going on at consent at cadets thanks so much um yeah i appreciate you having me thanks everybody awesome so yeah so we're just going to jump into our next chat right away um it's going to be called the futures permission list it's going to be with a couple people from the badger dow team i also invite them on now uh yeah so we've got spadaboom uh in the corner and then we've also got will from the team so i'll let them do a quick little intro about the talk um and uh yeah let them take it from here sweet thanks jacob uh and thanks to the hack money team uh great event today and great to hear uh lots of the other protocols involved speak um yeah today uh if you haven't guessed already we're uh both contributors at badger down myself and in spadaboom um and needless to say we're really excited about the future of the protocol of decentralized finance and where it's trending towards permissionless so you know the word decentralization is taught uh you know tossed around a lot uh it exists within sort of our namesake being badger dao uh it spans across many different aspects as it pertains to our business uh but the the area that we're choosing to focus on today um is really focused at the smart contract level uh so yeah we're hoping to dig in a little bit uh to uh a permissionless future why we're excited about it uh how badger is trending towards this uh and what this means for the future uh so chris why don't you start us off by sort of digging into um you know uh what permission this really means at a smart contract level and how you know perhaps decentralization isn't actualized in reality at the inception of a project but it's more sort of an intention to improve towards over time yeah sounds good everybody uh thanks for tuning off well uh i i want to really hit on that that last point and start there because i feel like there's a misconception in general around um anybody launching anything on ethereum assuming that it's pretty much decentralized you know from the get-go um a lot of the times you know smart contracts specifically and then let's talk about you know the d5 space in particular um when you launch your smart contracts there could be a variety of different parameters and controls around them that involve a human you know people obviously heard um you know the term eoa for example or multi-sigs these are all just different ways to have certain types of control and mechanics in a smart contract so you can have a smart contract that's deployed that does a certain thing but the entire smart contract can be changed because it's been tied to you know an individual there we go i think we did lose you for a second but it looks like you're back now help attribute stuff and i think the camera isn't going in the wrong direction can you hear me okay or no uh yep okay cool i'm not sure what happened there um but nonetheless as i was saying you know when it relates to um different parameters around a smart contract a lot of the times they can be affected and changed by human intervention and it requires a lot of human involvement for the smart contracts to um operate in a certain manner as well and that goes against really the nature of why smart contracts were actually created and that's that's the point that i wanted to really focus on today is when we say the future is permissionless it's really about what the journey looks like for d5 protocols and for anyone developing and deploying smart contracts on ethereum to be able to have this progressive decentralization and eventually get to the point where you have immutable smart contracts that are permissionless in nature and enable you know if it's users or individuals or anyone to leverage those contracts and be able to have complete autonomy around putting their capital as an example into a d5 protocol and isolating their capital as part of that as part of that uh specific contract and or having the ability to tell having the ability to dictate exactly um what they want that smart contract to be doing for them for them and then only as an example uh so that's that's really when we talk about the future promotions and i think speaking about badger in particular if you look at our protocol for those who aren't familiar um badger has a variety of different products that that was built and released our most popular product is a vault product that enables anyone to earn interest and earn yield on their bitcoin and their bitcoin deposits across ethereum and a variety of other side chains and um those vaults you know have managed billions of dollars and those smart contracts have managed billions of dollars and they've been live on main many of them for over a year and even still there's certain parameters and controls around um certain primers and controls around how those smart contracts actually progress from being completely being completely progressing to being completely immutable and if you think about the risks that come with different parameters in place like the risks associated with um having something controlled by an individual or a multi-sig or you know a two of three versus a five of seven multisigger things along those lines it it changes um it changes the risk parameters for that specific contract and for the people actually using it so you need time to obviously mature and be on mainnet for for a period of time be battle tested obviously go through a variety of different audits before you can even get to the point where you can think about um making it more immutable but i'll stop there for a second i wasn't sure if well you wanted to dig deeper there or jump into something else yeah sir i need to request that you spin your camera your sideways on us how's that better will you're also muted oh there we go we're doing good with our tech today tv guys uh no that was a great intro chris yeah maybe i mean obviously from our perspective the best examples uh come from within so maybe you can take us down the road a bit on badger's journey from inception i guess december of 2020 uh at this point um and how we're kind of working towards this and some of the stuff that we're that we're really sort of doubling down on from a deep tech perspective to make this a reality yeah sure so as i mentioned just briefly um you know we we launched in december of 2020 with our vault product uh where it enabled anybody with tokenized bitcoin to deposit it in these vault strategies smart contract-based strategies would take different lp tokens like a curve lp token for those are familiar and it would do different things with it to generate build and the primary the primary in the beginning at least those initial strategies the primary functionality was to take curve awards that are being earned by the lp sell them for the underlying position which is bitcoin and then auto compound those back for the lp so it takes the work out of the lp having to claim those rewards and saves them in gas and time and obviously time to actually do the auto compounding and that was really the core value proposition you know of those vaults and those vaults um in the beginning of course and i think this is you know the nature of d5 but um being at the current state of the market with d5 when contracts are deployed if there's quite a bit of excitement around the protocol in the protocol launch very quickly there is enormous amounts of capital that are deposited and touching these smart contracts as that happened with you know with ours with the contracts that were deployed by badger which you know within the first couple months there was billions of dollars there and if you think about you know any type of regardless of how much you prepare and audit and review and do everything leading into a mainnet deployment and and having it in production for anybody to um to leverage and use it it's it's next to impossible to get the type of um maturity in that contract and have it be battle tested enough to be ready for that type of that type of capital and that's where um certain levers and certain controls around the smart contract and allow around the parameters of that smart contract for example upgradability actually in badgers position actually reduces the risks and and better manages the the risks the risk parameters because if there was an issue or something needed to be changed because of the immaturity of that contract it could be upgraded through appropriate governance um through the token holders through the community but just having that capability is um is very important in those early early stages now as that progresses and becomes more battle tested and those strategies get better leveraged and they're in production for a longer period of time then you can get to a point where um you can remove that upgradability you can make these contracts more immutable and then you know you the the other side of that and i think this is really the the basis of the conversation around a permissionless nature um you know when creating those contracts badger dow contributors and developers are designing what those strategies are in the smart contract so when you deposit a token into that contract what that contract actually does with that token is defined and those parameters are detailed by the developers and again that's another level of um you know i guess you could say control and and risk management and we see that with a lot of protocols today and again over time once those strategies have been deployed across a variety of different lp tokens on the same platform leveraging the same staking mechanics you know testing out different things like auto compounding versus um optimizing those rewards by taking them and selling them for a percentage of you know bitcoin and and eth and stable coins versus just auto compounding you can get to the point where anybody can actually um dictate what they want the vault to do and the protocol to do with their deposits and have the ability to actually deploy these themselves and manage the different functions associated with that contract like harvesting and doing things along those lines and that's when you get to the point where you have complete autonomy in complete cell custody and that's where you know we're really trying to go you know with the badger protocol is moving from being an app where um you know different contributors dictate strategies deploy these vaults users come to the app and deposit into those specific vaults and strategies to more of a baseline protocol where anyone can build on top of our underlying tech and they can permissionlessly deploy their own vaults with their own strategies for their own capital and and manage that really themselves without of course that's the whole point of the smart contract it brings out automation without actually having to manage it but being able to um do that themselves and then build on top you think about all the different opportunities that can come from applications and other protocols building on top of um yield involved strategies like that you know the opportunities become become endless so that's you know that's where we started you know we started with um vaults with more control more human controls around the smart contract for risk mitigation to removing those controls but still having human input around what those actual strategies do to a point where anyone can deploy those strategies and dictate what the strategies do and and have a mat have a level of or have completely self-custody around those um those vaults and build on top of the protocol themselves yeah so i think it's fair to say right and you know at inception for the most part you need some level of human intervention decentralization isn't fully realized you know at that point it's more of a well-intended thing that can kind of trickle down into other aspects right i.e governance um you know doing your best to sort of source decisions or involve token holders in those larger decisions so there's sort of like a decentralized decision making process to an extent um but rather the intention is is you know behind building the tech towards you know what becomes this permissionless thing into the future so i guess that's a you know it's a bit of a it's a bit of a an on-ramp into you know where where do you see this taking us the tech in general um i think you know from what you've said so far the opportunity for for badger um really lies in being this really strong foundational layer one and like you said you know you have to battle test you have to take time to build the right smart contracts you have to test them you have to make sure they work it would be silly to think that you could put you know and immutable contracts uh out there right at the gate um so i think this is a great approach but you know where we are today to where we're going in six months to 12 months from now um where do you see this having the most impact for you know not only badger but potentially the defy ecosystem as a whole and as a whole and and you know beyond that well you know well i think i think what's important is like this is our you know a lot of the contributors that have worked at badger this is the collective's um it's i don't want to say uh goal but it's more like this is at least how we believe there should be a progressive state of decentralization that doesn't mean it's right doesn't mean it's wrong it's you know how the contributor is going to push things forward at badger and i know many other protocols actually see it a different way and actually deploy mutable contracts from the from the get-go with limited upgradeability and things along those lines but nonetheless i think it's important just to just to speak to that um speak to that uh those specifics right it's there is no right or wrong um as it relates to you know the next uh six to six to 12 months i think you know we're going to see more and more of this we're going to see more protocols mature further refine and build better tech goals in the past as as they've insured those protocols changed quite a bit and they get to a point where um you know the smart contracts themselves are are living and breathing you know organisms doing doing their own i think he cut out there chris you're just on mute oh sorry i just said i apologize i was um for cutting out i'm not sure what's going on but what was the last point what was the last point um that it cut up before well uh you were just talking about the future potential for for other protocols looking to build on top where we're going with that yeah it's you know it's less about badger i think just more in general we're going to see more and more protocols mature detect mature and these smart contracts that are living in production you know removing more of those guardrails right and becoming things that there is enormous amount of confidence for other people other protocols and in turn other contracts to build on top of and build with and you know that's the journey that that we're intending to be on we want really anyone that's any individual or any protocol that's looking for unique reward management and composable yield strategies that want to have the ability to dictate almost like a factory you know what lp asset where that assets potentially going what oh yeah i'm not sure what's going on zoom just keeps booting me and then just bring me right back in i'm not sure what's going on yeah very odd um but yeah i guess the i'm not sure what caught up with the point that i was trying to make or what i was saying was um you know really we want any any uh protocol and any um even you know individual that's looking for the ability to customize and tailor their yield strategies and have confidence in um you know the the underlying security and the underlying management of those strategies to be able to build on top of badger and again like have that level of customization around what the strategies are actually doing versus maybe potentially having the ability to integrate an existing strategy or vault for example which people probably heard the term of and instead actually dictate what that vault does um i think that's that's really what we're trying to progress towards and we're trying to build you know tech around to enable that because you know we're not there yet um you know some of the the tech that we use we leverage you know some off-chain functionality for the purpose of um distributing rewards optimizing those rewards as an example um you know if if we're taking if the yield strategy is to take a curve lp and to put into convex you would then be earning you know two sets of rewards cvx and crv and to then you know what you do with those rewards is really what you know and this is obviously just a basic yield farming strategy but you know that what you do with those rewards is really you know the layer that we're talking about here because you could take those sell them back as most do um but instead if you can take you know 26 of one of the rewards and sell it for a stable coin that is then automatically deposited into another lp position and stake to earn more and then you know 44 that's doing something with a different asset that level of customization and if you think about you know how that expands in the future when it's not just basic yield farming strategies um from large dow treasuries to apps that have specific uh functionalities that they're excusing specific um features that they're trying to offer to their users like you know maximizing xyz or a sell for paying loan like outcome alchemists for example being able to have that level of customization i think just opens up a whole new world of opportunities and ideally you know as we continue to build that out we can obviously build confidence in in the technology because of its of its um overall history and production and um the security posture of it but as well give the ability for these new protocols and new applications to come up with really cool use cases what to do on top of that without having to have that level of domain expertise knowledge and um workload resource allocation actually do the yield management part of that stack yeah for sure it makes sense and it kind of paints a clear picture right and from from i guess from our angle from badgers angle is you know the future is really double down on the tech and focus on on building this sort of permission list opportunity for for folks and other protocols to build on top um and obviously you know in doing some of that you obviously take some uh you know human intervention touch points out of the process which i guess could be good and bad but um you know at the end of the day you know the reason we're we're our sponsor pac money is to hopefully work with some you know great individuals looking to build um you know with badger and in decentralized finance um what do you think the future uh spada looks like for you know those who want to contribute um and uh the future of sort of building with patrick because it feels like you know if in general the eco ecosystem moves in this direction it's it's definitely great tech heavy with a lot of opportunities to continue to innovate build um towards the future yeah i think you know you know things like hack money are so fantastic because it gives an opportunity for builders to come together and collaborate with really just other builders that may have have protocols that have been built that are that are looking for more eager builders to come in and build on top of or integrate with or um you know just collaborate with so i think you know naturally in the d5 space and then you know you want to talk about uh the culture within daos is to you know just just get involved right and um if you look at what for this uh for this uh hackathon in particular you know one of our lead developers alex he's done a great job putting together a mix of well we lost chris yeah well there he is you were just talking about alex yeah i was just i was just saying that um um you know alex has done a great job at making it easy for anyone to start building on badger and to get up to speed relatively quickly on our code base and how everything works and um the different ways to actually start building today with a variety of different examples regardless of you know someone's uh you know experience building in the space building and deep fire or not and i think what's important is it should be easy for anybody um to start to start building and that's as much like you know what you're actually building on top of as is the tools that enable someone to start building quickly so i feel like you know we've worked really hard especially over the last six to eight months to make those tools more accessible and as part of this hackathon in particular i feel like there's a a really good way to to get started and to kick start things so i'd encourage anybody that's looking to build anything around bitcoin looking to build anything around automated yield strategies to to dig in and help us work towards this place where um you know yield strategies are completely permission it's almost like a factory or anyone can choose you know what goes in how it comes out has the ability to deploy it themselves and and have that complete level of autonomy so yeah for sure i think this idea of a permissionless future is a good mantra right like getting involved in in decentralized finance or working at a dow is is a very permissionless endeavor i would say right jumping in uh taking the plunge bringing something to the table and and then just you know building the future together so i think that makes a lot of sense um yeah i guess we can close things off chris with just like you know we're excited to be a part of pac money we've got some great uh prizes up for grabs if you hit the prize page we've got a lot of resources we've done our best to sort of put enough content to make the process permissionless for you to get involved and uh yeah i guess we can wrap there chris it's been a great chat and i'm excited for the future and i'm excited to just keep building and meet some new folks as they come through the door same super pumped awesome awesome thank you folks uh we still have a couple more minutes i was wondering if i could maybe ask a question from the audience uh on this uh for sure it's about when you mention sort of this like kind of framework of progressive decentralization of defy apps and going from you know humans can intervene to humans can intervene by governance and then even maybe as far down the road is like burning the key um i wonder what your thoughts are on on protocols in general um like what the role is for protocols and actually kind of educating uh the people who are using their contracts on maybe what stage they're at or maybe the ecosystem in general kind of setting some standards for for sort of giving people more predictability on what kind of level of decentralization they're interacting with i think it's critical i think you know transparency is uh you know the the highest standard across the board that wants that we want to uphold not we saying we as an industry so when anybody's interacting with these contracts they said they should have a level of understanding of how decentralized or not decentralized they are in which stage and path of that journey those protocols are on and that smart contract in particular those smart contracts are in and that in itself and the willingness to be transparent i think you know uh is like that that first you know flag right if i think we should be moving to a place where um if the humans behind the protocols that are building them and and building these smart contracts aren't uh aren't open to bring in transparency at that level that in itself should be something that would make um that would make a potential user that's interacting with that contract uh weary so i i do agree that it should be something that is um that is highly transparent and i think as an industry we can and we should be doing a lot better at this because there is a lot of ambiguity and there's you know we hear the term aping there's a lot of eight being going around you know not board apron but like you know legitimate and um you know there is a lot of money that's that's being put into these contracts and being used nowadays versus a couple years ago so now more than ever it's important that the users that are interacting with them have an understanding of what the what they're actually interacting with awesome uh cool well thank you both for your thoughts and your questions and and and in the talk of the last little bit um we appreciate you taking the time to to chat with us for hack money and thanks again for badger support and like you said feel free to take a look at the prizes and also the tech behind badger and how you can use it in your house thanks so much folks thanks for having us awesome okay cool so we're going to move on to our next chat um which is going to be with kaida so the title is called treasury and sustainability 10 billion opportunity um so yeah kaido when you're ready feel free to uh yeah there you are um awesome to have you back on the youth global stage um and i will turn it over to you all right thank you so much and thank you global for organizing this this is great uh i'll share my screen really quick give me one second all right can you guys see it okay perfect so today i'm going to talk about treasury and sustainability a 10 billion dollar opportunity hope that's a good enough cash line for everybody uh so first a little bit about me i work on incentive design la medaille my work encompasses governance design tokenomics liquidity management and my goal is to create systems to help protocols achieve their vision in this very cyclical market and at la medaille we're building the economic infrastructure for doubts and here are some partners we're working with or have worked with in the past such as away uni swap and many others and previously i was with trader joe which is a decentralized exchange on avalanche which with about 2.4 billion tbis is peak and this is where when i joined uh we had about 40 million tbl so during my time there i saw firsthand the explosive growth you know these protocols can have and also a problem when this growth becomes hard to sustain so you know one day a protocol could have billions of dollars at its disposal and in a few weeks that become a tenth of that and in a few months they can't even sustain their team and have to lay people off and eventually close the project so i become interested in the sustainability of crypto projects and i have also went on to propose some sustainability projects for game economic designs and liquidity system to combat this very cyclical nature and this sustainability problem however sustainability of a project is multi-faceted so in this talk i will focus on one thing which is protocol treasuries and how can we use that to um ensure longer sustainability so the goal for this talk is to answer a few questions so the first one is what is protocol treasury why should i you know bill for it uh the second one is uh what are the current solutions in the space and lastly the most important to you guys which is what can you build um you may have known by now i'm not really great with powerpoints but i hope this will be a fun and actionable talk to you all hackers out there so what is treasury and what is the problem here so protocol treasury's definition is a very general one it's assets owned by protocol for future development and this is really broad by design because we want to encompasses different functionalities here so maybe a few examples would help us to understand what this really is so a few examples of what uh protocol treasuries are used for grant programs right we see the price pool for uh heck money and these are given from protocols and normally people would incentivize others to build on top of their own protocol another big spending is on ecosystem building where you want to build partnership with other protocols and sometimes that involve monetary value transfers and lastly which is actually the biggest uh part which is budgeting so you know you need to pay your salaries for your team you need to pay for operations you need to pay for your marketing and also events and outreach and all these the out of these treasury use cases the last one budget is actually the biggest on the high end and next we're going to just switch gear really quick and talk about you know how big is this space so on the left you can see that this is just a time series plot of total treasury value across time starting last year ending this year so right now there's currently about 9.5 billion dollars in these protocol treasuries and it has increased 10x in the last 10 months and if you remember in the last 10 months there's not really any bitcoin or if you're in price actions so a lot of these come from native uh dow protocols launching and dow building up and when i first heard about it i had an overwhelmingly positive response you know i was like this is amazing you know these protocols are doing amazing things and they have so much capital to attract talent and innovate however there's a catch uh most of these protocol treasury is made up of its native token and i will showcase you know in this slide how concentrated that that is and in the next slide i'll discuss you know why this may not be a good thing so we first start off with unisop's treasury makeup so unisoft is a decentralized exchange on ethereum it's the second largest protocol treasury it has the second largest portable treasury at 1.6 billion however 99.9 percent of that values in its own unit token uh udx is another project i'll go stablecoin living on solana with the third largest protocol treasury at 620 million 99.4 of his total value is locked in his native token and maker dow one that everyone a lot of people was very familiar with it's the 14th largest protocol territory value and 99.2 are in its native token and some people might think i'm you know i'm cherry picking here i am a little bit but while a few projects you know protocols have a little bit more non-native assets the percentage is still very high so right now lido is one of the ones who's doing extremely good they're decentralized 2.0 staking solution provider even though they're doing really well they have the fourth largest treasury treasury it has the fourth largest treasury value still 88 percent of this treasury is in its own native token otherwise mango market and solana uh out of the 500 billion they have 88 so i can you can see this trend as in most protocols where most of these 9.5 billion dollars we're talking about here actually in um highly concentrated in different native tokens out there so why is this a why is this a problem uh there there are three main problems with this high level of concentration number one is you know the market is very volatile so there can be sharp decreases in your treasury value um you know these downturns where most people in crypto are very used to nowadays your valuation can drop 50 percent to 95 percent just in a matter of weeks for example uni swap in the last six months its total treasury value dropped by 65 and the second thing i want to stress on which is the most important thing is growth normally requires cash but not native token i'll try to elaborate here a little bit what does that mean uh a very simplified model if you think about like how these things work is treasury rewards people and people drive growth right however in the end people still need to trade with the market to exit your native token to pay for their daily expenses however native token is really really hard to exchange into cash or eureum or other very liquid assets for example if we use one percent of unisoft's treasury one percent which is about two million unit tokens it will cause you unique swaps price to drop 40 percent and if you want to use 10 percent you just swap treasury you will actually make your unit swaps price go to zero so this is extremely harsh for the protocol itself and also its community and lastly why this is a problem is the huddle what i call the huddle versus sustainability problem imagining your protocol founder or your protocol member uh or within the team and you want to tell your people tell your community members that we need to diversify or we need to sell our tokens to give to others how can your team how can you be a team tell your community members to huddle and at the same time dumping your own token right this requires careful communication and more importantly an important and explicit agreement with the community that what you're doing is okay and everyone agrees and it's on the same page however that is very very hard to achieve so if cash is so important the the question we should answer is how can we generate cash from treasury and in this slide i want to talk about basically what are the current solutions for protocol treasury to achieve this to achieve sustainability to generate cash to continue growth as you can see here i put potential in parentheses because some of these projects are not live yet or it has not gained significant traction due to its complexity or for just do for other protocols to utilize for these current solutions i divide them into three categories so i call them innovative solutions tried by solutions and low hanging fruits however this categorization is not meant as seeing which layer is better than the other because many times simplify a simplified solutions actually wins however we i do believe we're still in the searching phase in which we're trying to find more optimized solution to handle protocol treasuries so on the bottom here we have the low-hanging fruits what i call them these solutions already established and have been used by protocols the middle one are tradify solutions they are these solutions basically borrow existing established ideas from corporate finance and implement them into unchained contracts on top are innovative methods and i this these solutions are less utilized in the traditional world or less known to most people but brings promising ideas to crypto and i also added in a risk spectrum because a lot of these things involve risk the things on the right would have more risks and things on the left however you should know that these are all relative risks and these risks are very different based on different projects so first on the low-hanging fruits there are a few very simple low-hanging fruits right you can sell your token on the market which i would suggest using mev protected trades and also using dex aggregators the second is native yields so for example if you are protocol your treasury has usdc and you're not spending them you can deposit you can be basically be a lender on ave or compound to earn negative yield or you have ethereum you can even become uh you can exchange for state e with vital to become 2.0 2.0 staker and on the far right we have these what we call yield aggregators such as year finance convex pull together and many others and what they do is they you don't know which one has the best yield for your assets so you just give it to them and they help you optimize that in the middle are trying to find solutions uh there are three main buckets for tradify solutions i talked about here fixed-rate lending debt issuance and private investment in public equities and i'll talk more about what pip means a little bit later so first for fixed rate lending is very straightforward you have some amount of capital you're not utilizing now can deposit them for a fixed amount of time for normally a higher apr or guaranteed apr right now element finance notion finance and many other projects support this that issue is very similar as in in some cases you collateralize your native tokens and you borrow money against it and then these you can basically use that money to generate income or you can use that money to pay your pay for growth and the two key uh two very prominent figures here are for refinance and dead dial their mechanisms a little bit different i'm not gonna dive into it but they have very interesting design choices lastly is p i p e this is just sort of like if x and z wants to invest in a coin that already is public so what they can do is what people call a strategic investment sort of these otc deals facilitated by otc trading firms such as genesis trading and lastly are what what i call innovative solutions or these solutions that are you know less familiar to most people and uh so we have uma we have log we have fae and ribbon and each of them have very different design choices i'm not also sure there's a lot others out there that i don't have time to cover and to fit into this graph and then in the next few slides i just want to quickly go over each of these innovative solutions to give you guys a kind of an understanding what they're trying to do and how maybe you know you can combine different ideas together so first is uma success token and in the past you know i talked about otc deals and really what would happen is let's say for example um a16z wants to buy lido what would happen would buy some lighter token what would happen is it would contact the light or dial and then they're going to have a real-life legal contract and for example lido right now is one dollar they're going to buy it at uh 0.6 dollar per liter or 2.7 polito unlock it for two years the problem here is that it's very hard to generate community buy-in and it's you have to go into a legal agreement through otc desks so it's so one example that didn't pay now was for sushi swap they were trying to diversify but they couldn't because community voted down and what uma does is that he actually instead of buying a discounted price for these private investors they can buy a current price but their upside is that if the token price increase above a certain price or what they call a strike price they can have more upside next is log protocol streaming auction so in the past protocol sales only is a fixed price and the problem is that it's hard to agree on token uh sale price for a community because everyone have different opinions and uh it's hard to make sure everyone is happy and what lot does is it's a continuous streaming option based on t1 as a specific set of uh uh automated market maker and people can basically commit capital and withdraw online capital and at any time this movement will change the implied price of these government tokens next is vape protocols turbo and in the past basically what you can do is i've mentioned is a protocol can deposit their tokens into aveo or compound and use out as collateral and borrow against it however most protocols do not meet the risk parameters to be listed on avec or they do not meet the parameter sets uh for using something as collateral because those needs to be really liquid and there's a lot of systematic risk abe has to protect against the lenders so what fake protocol does is that you can collateralize your native token and you can earn interest on its cash value with turbo meaning if you have 10 million 100 million in your native token you can deposit that you can borrow 10 milli 10 million dollars which is you know 10 of that and they use that 10 million dollars maybe generate uh 500k per year a 5 stable yield to pay for your different expenses ribbon uh here uh they they are ribbon is a sorry this is ribbon treasury and in the past basically if most workers do not have a diversification they don't explicitly say what we're going to say we're going to sell our tokens for cash and the problem here is that because it's just hard to agree on diversification during a boat ride right when the price is increasing no one wants to no team wants to talk to the community that oh we're going to sell 200 million or 2 million or 5 million tokens on the open market because that doesn't make anyone happy so what ribbon does is i create discovered cobalts which basically give protocol the freedom to diversify based on some price target and earn free at the same earn premium at the same time ahead of time so you know you can decide during uh during a crab market or a bear market that in the sometime in the future this is something we're going to do and in that case everybody knows ahead of time and that's very easy for people to generate buy-in i've been talking a lot about you know these different ideas what people are building and now the question is you know what can you build just by looking at this you may seem like actually there's most things already exist however if you remember i mentioned that although these are solutions there are only potential solutions a lot of these tools are extremely extremely hard for developers to understand especially for those who doesn't have a strong strong finance background and the trade-off of different you know parameter choices for any of these projects is very hard to visualize so the adoption the system of the system in protocol tertiary is still very low and this you know resonates back with the 9.5 billion dollar slide which you know 90 to 80 percent of the treasury still sits in stable point still citizens native token not really earning anything or producing anything so what can you build uh in this part i basically want to give you guys three kind of methods to think about this problem with three angles to think about this problem so the first thing is to uh to build something that can there's something existing and we want to decrease the trust assumptions of that essentially we want to call the agreements on chain so there's two two examples i give here the first one is the token swap contract what token swap is is a way for protocols to exchange their treasury tokens with other protocols to build partnerships for example on protocol a their protocol b we want to engage in some mutual relationship what we can do is that we can exchange our treasury token so we own uh some value in the other project but at the same time we can you know engage in governance and many many other things however there's not a very great way to code this contract and then for every time you want to engage in this relationship normally a new contract will be right but will be written the second thing is the private investment in public upgrading your work you can think of this otc trades mostly right now happens off chain however there could be some you know simple contracts people can hook up for for for a hackathon where you can think about how can we make that unchained in a way that not just uh otc that can utilize them but also other other people can uh other other people and also other dows without legal entity can engage in these transactions next is to decrease the coordination friction basically these are two kits to manage these positions uh like i said it's it's really complex um for people to think about how what's the correct strategy or even maybe the correct strategy doesn't exist so some very simple ones are simulators for payouts as in based on some past data a very uh based on some heuristics this is you know what we think the payout will be or what are some risks on downsides on sensitivity analysis these very traditional financing stuff the second i think is very underrated which is you know easy to understand front-end i know we have team building uh on decentralized uis i think those are very important and also important is to make sure they're easy to understand for users because if i am a uni swap token holder i shouldn't be an expert for treasury diversification or management so how can you present something that uh the voters or the governance token voter holders can understand and engage with is very very important the the last one is uh brainstorm you know uh new ideas for you maybe heard some idea back in your graduate econ class or undergrad math class or any kind of class or any kind of concepts outside the crypto world and bring them into the crypto world through um making making a chain transaction and i think those are the three main ways where for for a hackathon project i think would be great to see some innovation in those fronts and i will if anyone is interested in talking you know about this feel free to reach out to me on twitter at xerox kaido and i'm very very happy to help you guys out to you know narrow down your space search space and etc and that is the end of my talk i still have a little bit of time so i would love to answer a few questions if anyone have any thanks kaido i'm just taking a look at the chat see if there are any just a quick question jacob what is the like general background for these hackers we have yeah it's a good question i think it's it's a it's a very mixed bag of people um but but certainly the main focus is everybody's very interested in d5 so um i think it's it's largely a group of people who want to build the things that you just built i think are you just defined so i think that that's interesting um i guess one question that comes to mind about the talk that you mentioned um right now we are you know seeing this big advent of treasuries growing in the last like couple months as you mentioned um we are kind of still in quite a a bull market um which makes it difficult like you mentioned sort of like trade away from from growth like how much of this problem do you think is uh simply like mathematical slash like uh like almost like a liquidity problem versus like how much of this actually ends up being like inner dow politics or treasury politics and being able to like win people over like how much of this is math and how much of this is feeling do you think yeah i think that's a great question which goes to this slide um about you know your friend is now your exit look what you mean so my opinion i think most projects who think about long term they know this is a real issue and so it depends on project by project basis but for most of the project i engaged with i think the the team and the general community realized we need to build a ward chess doing it for the bear for for a potential bear market and i think that's very very important uh and i don't think there's a lot of uh inner politics against this i think it's more on the communication maybe as in how do you communicate that from the inner circle of the project to the outside circle people who you know maybe have a more speculative that on the token price gotcha very cool and i think the low hanging fruits uh it's not enough right now so that's also why i don't think we see a lot of hype in the space and uh the reason being if you think about these low-hanging fruits what what what it requires that you requires non-native assets so like how if you don't have non-native assets those doesn't really work very well and that's where the tried fight solutions come in to generate those non-native assets and i think they're good and they're great i think they're a very good first step however at the same time how can you innovate on top of that at the same time moving forward while keeping it simple and for people to understand and use gotcha awesome um cool i don't see too many other questions in the chat perfect perfect yeah this is a great talk thank you so much for for putting this together sharing um obviously it's a big topic right now it might not feel that way because things are going up yeah but it's going to be very obviously important in the future um where things aren't always going up so yeah exactly exactly all right thank you so much for having me and great uh great event and thank you for organizing and i'll see you guys soon thanks so much and also invite up crete from our end who's going to intro elena um and i'll just share my screen for that too and um yeah i'll let both cree and eleanor uh try their video and like create intro hey everyone welcome um yeah so i thanks kaido loved your talk um also he did a talk for us um for dao hacks so you can find that on our youtube as well so the global youtube so i highly recommend watching both of his stuff um the dell hacks was a panel actually though um but yeah so uh we have alana coming up um she's going to talk about why everyone should know ck piece um and yeah alana from iron fish thanks so much for joining us come on mutant do your thing cool thank you so much um [Music] cool um yeah thank you so much for for having me here um so yeah this is a talk that's going to be about why everyone should know zero knowledge proofs or zkp's for short um and before we get started i kind of wanted to share my my own background and how i got into crypto because it was actually through going to hackathons like this one um that have led me to this space um so in a previous life i was a software engineer and in about 2017-2018 era i i started going to uh hackathons um so the first one that i went to was eat waterloo which was in uh 2017. um and that was the first youth global conference or a hackathon and it was such an amazing like an amazing environment everybody was there like vitalik was there his his dad was there like the maker people were there um dan finley from metamask like helped me debug my project it was a really special place and i started going to more and more hackathons and doing talks and and conferences um and that was like the you know the 2017-2019 era um and um at the first hackathon i actually uh set myself in a path that led me to discover zero knowledge proof uh i'm doing proofs which is kind of what i wanted to share with you uh today so the hackathon that i was working on relied on something called video transcoding you don't need to know what video transcoding is just that it is a heavy computation so it's it's really expensive for your for your uh computer to actually do video transcoding and so i was kind of obsessed with this question of um how do we do honest computation how how do you prove honest competition in a trustless adversarial decentralized environment meaning can i make a system such that i give to a different computer a really complicated task to do like video transcoding they come back with a result and i can very cheaply verify that the result was computed correctly and so i started asking around and finally i discovered zero knowledge proofs and zero knowledge proofs were built for exactly this problem they were built for honest computation now unfortunately the knowledge proofs are way too early to do anything as complex as video transcoding but they were kind of built in ethos for this exact problem so um brief kind of history about zero knowledge proofs um what are they they can be used to prove something about hidden data um now they were invented in uh in the 80s by shafiq goldwasser sylvia mccauley and charles rakoff um and some of these names might actually be familiar to you uh somebody macaulay is working on a crypto project currently jaffe is actually a professor at berkeley um and initially zoologist proofs were an interactive protocol um meaning that the verifier and the prover um had to uh have an like interaction in order for the proof to to take place so what are your launch proofs um there are a ton of zero-knowledge proofs um and i'll get to that in in in a few in a few slides but what they are essentially is they are a proof that uh satisfies these three properties um completeness so if this if the statement is true an honest verifier will be convinced by an honest prover meaning that uh you just need the proof uh to verify the statement that you're that you're proving soundness if the statement is false no tree improver can convince an honest verifier meaning that you have to set up a system such that only the honest proof will be valid in the system and it has to be zero knowledge meaning that if the statement is true and if the proof is and if the proof is true the verifier learns nothing extra about the statement so again zero launch proofs can be used to prove something about hidden data and so why is that useful uh and why is that useful today so it's useful it's useful for three things so one thing that is useful for is computation meaning that i can potentially do a fairly expensive computation off chain and then just prove it um or give a proof for the final state on chain um and so currently i'm kind of really thinking about cross chain transactions uh i think as a lot of people are um and so in theory you could potentially prove that a certain action has happened on one chain in order for a different action to happen in a different chain scalability um so because your launch proofs are used to prove on honest computation you could actually prove that state transitions happened correctly and all you need to do at the end is provide a single proof and the final state so if you've heard of zero knowledge proof um roll ups for instance um you know this is where the scalability aspect comes from and the other one is privacy so you can prove ownership of something the user wants to keep hidden so i could say you know i like for instance if you're uh familiar with aztec or to no cash uh which i'll get to in a minute um you could use your knowledge price to say something like look i have a note uh or i have some you know hidden eath or some hidden asset um and i would like to spend it or or move it somewhere um but you don't need to know you know what i've done with it um so in 2018 i quit my job as a software engineer airbnb uh to focus on crypto full time and i kind of made this bed that that even if this blockchain thing is gonna go away um zero knowledge proofs are here to stay uh and in 2018 zero launch proofs were arcane tribal knowledge it was really hard to understand how they work it was really hard to figure out who to even ask for help there were very few projects working with the zoo and launch proofs um and the ones that were you know had people who were academics and phd cryptographers like world-class cryptographers so it's kind of hard to break in um and materials and zeology proofs especially back in the day went from super high level so if you ever looked into what zero knowledge proofs are i think you've all kind of seen this example um of this this cave and then there's a peggy and victor or alice and bob when they're running through this cave to like prove that they know something um so most materials kind of went from this super high level to extremely low level so when dusty and i were working on trying to figure out what zero knowledge proofs are and digging through academic papers we would find statements in the abstract like in the summary of the paper that were as complex as this one for instance one knows that it kind of through the uh construction that the sextic twist will be the d type which means one doesn't have to count points and lift a curve to check their order um it was really hard to get into the launch proofs however fortunately today we have plenty of access to really really good material and extremely great tooling to make zero knowledge proof development fun and accessible and easy and fast which i guess is kind of the more important part when you're working on a hackathon project so um i kind of want to go over a slightly more history about zionish proofs i want to highlight some of the evolutions that kind of have happened that led to the geological proofs that we have today so in 2011 um there was a first paper that coined the term zk snarks and ziki snarks just stand for succinct non-interactive arguments of knowledge that paper was authored by alexander kiezan aaron trommer both of whom you might have heard of they were both z-cash funny scientists and then in 2013 we had a paper that made zika snarks uh more more kind of applicable to general computing um meaning that before zoom launch proofs were again like fairly fairly difficult to use um and then 20 sec in 2016 um johns groth who is a professor at university uh university college of london um uh i made a paper in 2016 that actually made zk snarks pretty darn efficient to use and if you guys have heard of cash for instance um the sapling protocol of z-cash the private their main privacy mechanism is based off of across 16 um as well as uh quite a bit of ethereum based or azure large zoom launch proof ethereum smart contracts are based on gloss16 as well so i'm not going to go into exactly how z key snarks work but i do want to give you guys the intuition behind how they work so that you know their limitations and what they can do but also so you have the necessary knowledge to go and read up on these concepts on your own so a stark construction has these five steps and for the first four steps mean how you go from a computation so like a statement to a quadratic arithmetic program or cap there is actually a great tutorial by stephen demille from centric that kind of goes over exactly how competition goes from like a statement like an if statement even um to like a rank one constraint system and for the last step of how you actually make a snark there is quite an amazing tutorial by mcseem that actually goes over uh the intuition of how polynomials can um can be used to to prove certain information now the most uh the most efficient curve for cros 16 zero launch proofs is bls12381 unfortunately ethereum does not support it despite a lot of eip and a lot of efforts um but there is a great article that explains the curve and why it's so efficient so uh kind of a huge overview of how z key snarks work um for uh for snarks we have kind of a predictable way to transform a statement into what's called language of polynomials um and like with any proof system there is a prover that is trying to prove something um and a verifier so approver here can be the end user and a verifier can be a smart contract on ethereum and there is a challenge meaning what is this prover trying to prove maybe this proverb is trying to prove that i have some hidden state in a game um or i have you know a note that has some balance that i'm trying to spend and the verifier could be a smart contract that actually validates uh those statements um now we do need to make this challenge non-interactive and so um we need to kind of hard code um this common reference string which is part of the trusted setup when you actually set up this like a smart contract for instance um you do need to go through the step of setting this up uh and this is so that the the challenge or the proof that the user gives you can actually be validated now for gras 16 in particular this is kind of done by using elliptic curve pairings um which i won't go into today but not all zero knowledge proofs kind of have this property so i am going to focus a bit on cross 16 and so why is cross 16 so great now zero knowledge proofs are typically created on three things which is prover time proof size and verification time uh prover time means how long does it take for me to actually make the proof uh proof size means how big is the proof which if you are dealing with an ethereum smart contract this is an important part for you to consider and then verification time so given the proof how fast can a validator actually validate the proof and gross 16 has actually pretty good metrics for all of those three things even on curve uh what was it being uh 124 that ethereum uses um so it has pretty good proover time it has great proof size 192 bytes is really really good and it has constant and fast verification time which again is exactly what we need for a blockchain based uh cryptosystem so the other things that uh zealand proofs are sometimes created on is again the size of this common reference string um cryptographic assumptions so for instance gross 16 uses elliptical pairings and that is for instance not quantum secure and for instance 16 does have a trusted setup which can lead to some disadvantages so the trust is set up um i have a great tutorial here that kind of explains how it works but i do want to put kind of a caveat that we do have kind of tools in place to make this less scary um and less quote unquote trusted for you to set up a system um and i'll get into that in a minute so um in 2017 onwards there was this huge huge push in academia as well as uh you know in in in companies and in uh commercial kind of activity as well to figure out how do we do zero knowledge proofs that don't have this trust at setup and there were a couple uh techniques that were being kind of experimented with at the time uh most notably this paper that came out in 2010 sometimes referred to as kcg and i have a great explainer for what that means um this paper kind of led a pretty big explosion in activity for uh discovering user knowledge proofs that don't have a trusted setup and to kind of give you guys an idea of how how many zero launch proofs kind of erupted uh that did not have a trusted setup from 2017 um you know we we had like we had several that were published in 2017 we had some in 2018 we had a ton in 2019 um and we had some in 2020 as well so uh for the for those of you who might be like overwhelmed by the slide um i want to highlight these three that i would kind of pay attention to um halo 2 is being backed and developed by z cash um i believe their next upgrade is going to be using their privacy their new privacy mechanism is going to be using halo 2. planck was originally developed by the aztec team um and now like there's more of a community building up to support tooling for plonk which is really cool to see um and then starks are kind of guided by starkware and things like moses starkx or starknet which is their layered two solution using uh using starks so that was quite a bit um which ones should you pay attention to today so again i think raw 16 actually is still one of the best kind of solutions or best approaches for you to use primarily because we have such great great tooling around it it does require trusted setup however i believe this was started by the ethereum foundation um which is this project called the perpetual powers of tau um and it's a pr um whenever you do a trusted setup there's actually two two steps to get to that final common reference string and the first step can be done through multi-party computation and this project professional powers of tau basically has a system such that anyone at any given point can contribute randomness uh to the trusted setup such that future projects that use it basically have this the stresses set up that's been organized by i think hundreds of people around the world at this point um and only if only one of those people is honest meaning that they throw away the randomness that was used to create uh this common reference string um then the entire system is honest uh which i think is a really cool project because it kind of kind of shows that you know graph 16 and the trusted setup is not that scary because we do have mitigating ways to to reduce uh to reduce risk um and the most recommended tool set for doing launch proof smart contract development in my opinion by far is circum they have uh really great documentation um the project has been developed on for i think three years at this point it started off as a javascript project now they've moved entirely to rust um it's really efficient uh there are implementations that let you generate the proof in the browser which is pretty great for app development um and they also have a smart contract verifier so you can run a command and it kind of uh auto you know uh generates a smart contract with the verifier in place so you can so you can deploy smart contract pretty easily with it so i want to kind of point out some notable examples of projects in in the ethereum ecosystem that not only use circum but are also based in cros16 one such category is gaming so as we all know ethereum is a public state so if you want to create a game that has like hidden state it's kind of hard like for instance how would you make battleship on ethereum when the state is totally transparent it's pretty hard um so one notable example is dark forest um i don't know if you guys are familiar with it but if you're not highly highly recommend it it's probably one of the first genuinely fun games that are based entirely on ethereum at least in my perspective i know there's like a ton that have come up recently but um i personally have spent uh an embarrassing amount of time playing dark forest um and the idea behind it is you can claim planets on ethereum with the help of zero-knowledge proofs such that your opponents don't know which planet you claimed so it's a pretty cool game mechanic the other notable example of things you can do with geology proofs today on ethereum is private transactions um so for instance i mentioned tornado cache earlier tornado cache um is i think one of the biggest zero like a privacy kind of mechanisms for ethereum today and is based on sircom which is pretty cool you can check out our github you can check out their circuits you can kind of use that code base as an example of a production ready project that runs in the browser and you know use a circumstantial like main circuit generator so the other one that i want to point out is plonk so planck is another geological system and remember how i said that zero launch proof systems are created on these three metrics which is prover time proof size verification time and so overall planck you know still lags behind cross 16 but not by much and it actually does outperform gra-16 for ethereum-based curves for operations like mimc and peter's commitments now plonk does require a universal uh setup so uh instead of doing a trusted setup for every time you update your circuit meaning every time you up update your geologist proof kind of logic here you don't have to do that so you can you can use a universal setup so you can actually use the phase one of the professional powers of tau that i mentioned earlier you can kind of skip this entire step and the most recommended tool set for this again is circum circum is probably one of my favorite kind of open source uh projects for zero launch proof tooling today and you can actually write a smart well like your logic in their dsl which is a domain specific language and then you can choose whether or not you want to use plonk or graph 16 as the underlying proving system which is super cool because that means you can start with cross 16 today to kind of get the benefits of some you know things like proven time improve size um but then you know as planned catches up in popularity or in efficiency um you don't have to rewrite your entire circuit you can just still continue using circum and choose planck because the underlying circuit compiler plonk is pretty cool and i kind of highly recommend you guys to dig in further and the best kind of low touch but still efficient you know still thorough tutorial that i found is actually this one by vitalik the other tools is to consider is cairo so cairo is based on starks and again it's a domain specific language language or dsl is being developed by starkware however um in my personal opinion if you are thinking of building um ethereum zoom launch proof based kind of applications today the most obvious choice is circum if you want to actually learn a lot more about zero launch proofs i have i found this great compilation of tutorials on zealous proofs um and all these slides will be posted later for you to click on these links so that pretty much concludes my overview of zero knowledge proofs i hope you have found this helpful in your kind of brainstorming projects to build um and before i go i do want to have this shameless plug so if you want to work on a privacy preserving protocol whole time i'm working on something called iron fish iron fish is a layer one with only private smart contracts and our goal is to bridge to ethereum so that we can give every ethereum asset the best available privacy so if you have any more questions um let me know uh all these slides will will be posted on my twitter um and i highly encourage you if you're curious to learn more about zero launch proofs is to click through some of the links that provided um so you can kind of learn more deeply about how they work and how you can use them today and with that i think that concludes my talk awesome thanks so much elena um yeah i'm definitely going to go check out dark forest now because that looks super cool i started googling it as we were talking um so yeah awesome well thanks for joining us again um and yeah everyone go check out her slides or she'll link them all right thanks awesome and yeah thank you everyone for joining us uh for the hack money summit i hope it was very informative and you learned a lot um i certainly did and yeah super excited to now kick off hack money so happy hacking everyone and um i'll see you in discord bye you 