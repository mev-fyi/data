do [Music] do [Music] do do do do [Music] [Music] do do [Music] [Music] actually 500. receivers do so so cheers okay hello i have not connected yet okay um all right cool uh hey everyone uh my name is juan i'm here to talk to you about regen crypto economics for good and uh could i get a quick show of hands uh who is familiar with the regen crypto movement a few people a lot of people and that's great um how would you gauge like raise your hand by like degree of familiarity with it like you're like a region maybe not a maximalist but like super into the green pill region movement kind of halfway like you kind of know something about it but like not a ton like hey you're not very not familiar great awesome so this talk is for all of you um but that just calibrates how much i should explain of different things and how much i should not bore you uh great so um one of the claims of this talk is that if regen wag me else ngmi so if we can do we can achieve regenerative crypto economics to achieve prior zootopia then we're all going to make it and if we don't then we're pretty screwed so there we go so the talk is going to go through these set of things we're going to i'm going to intro region crypto econ i'm going to talk about what priority is and how to achieve it i'm going to walk through two examples that are both massive and break them down into smaller chunks so we can think of like how to scale it up and how to cause an incentive structure um uh build up towards uh fixing that problem then i'm gonna give you a whole bunch of region ideas that people are talking about right now um and i'm gonna end with like how to get involved and how to take your region ideas forward um how to join the movement and um how to improve the world uh great so um i'm gonna use the uh memetics of greenpealt which is a movement um that the gatecoin folks and especially kevin iwaki and a whole other folks uh have been uh producing the memes are awesome so i'm gonna rely on the great illustrations of the book um you should definitely get this book and check out the podcast so take the green pill and on uh the basics of the green pill um greenfield movement in a sense and region crypto econ is at first the whole planet is filled with coordination failures we'll talk more about that in a moment we understand that and we understand the problem space and we also understand a set of solution possibilities and so we reject the numeraism and we are going to try and build a much better uh better future web3 is a big moment of represents a ton of opportunities and it's a big um shelling point in a sense of um people that want to cause this kind of action and this kind of change the tools that we're going to use are mechanism design and tools around using game theory and crypto networks and so on leaning into all the crypto blockchains that we've built and with that we aim to generate a massively generative and regenerative uh crypto economy that is going to kind of eclipse all the other kind of djen um uh more more uh dystopian uh perspectives of the future um and we're gonna get there by both talking about all these ideas and creating spaces for implementing those ideas creating spaces for showcasing those things and once we find things that work pour tons of energy and resources into scaling those to cause math or change the basics of all this is that everything is about coordination so humans are social animals humans have been building many different kinds of institutions over millennia that are basically about different ways of coordinating parties to achieve various goals from early hunter-gatherer tribes or even before that pacs and families and so on all the way to modern nation states and modern crypto networks and so on it's there's many different ways of coordinating across many layers of the stack and you can even go into biology and think about coordination in terms of an integrated system that is body and an integrated system that is you know one of the major organ systems or the organs themselves or the cells and so on so everything is about how to coordinate different kinds of pieces of a large system to get to uh certain objectives the cool thing is that crypto econ gives us massive levers to coordinate the planet so what is cryptoeconomics it's a field of study that involves many different tangential disciplines so things like economics itself uh things like cryptography things like game theory mechanism design um optimization control theory all of these kinds of things uh blend together into crypto economic uh crypto economic systems mechanism design is really useful the way to kind of think about it is that game theory is the study and and theories behind um studying some incentive structure and understanding what um what the strategy landscape looks like for a set of agents in a game mechanism is game theory in reverse where you set a goal and you're trying to create mechanism and now analyze landscape to figure out what how you need to warp the incentive field to achieve that outcome so it's kind of like applied game theory um with specific sets of goals now with crypto we can um lean into building systems like that that have all kinds of malicious parties and coordination failures and so on uh to sort of get there so what is regen crypto econ um region crypticon is about building systems that are not just kind of um that are certainly not extractive and are not just resilient and sustainable but they're also regenerative they have all kinds of positive externalities to the systems around it and you try to minimize the negative externalities to try and sort of create these um holons that are just kind of emitting value and emitting energy and you can if you can create systems like that then you can scale them up over time uh coordinate between systems like that and over time lift um massive massive problems so the let's talk about coordination failures for a moment um coordination failures are kind of at the core of many many of the problems that we have today so everything from um something as as large as nation states fighting over um uh resources and fighting about uh what you know the nuclear arms race and the buildup there was a massive coordination failure between the you know the two largest macro coordination systems that we had we have much more you know much smaller examples like maintenance of software maintenance of infrastructure taxing systems where the tax money actually goes um and so on so there's all the world is rife with coordination failures and all of it often a lot of it comes from lack of knowledge often a lot of it comes from lack of mechanisms that arrive at a good incentive structure for all parties in the system so there's a set of memes around moloch which is i think came from slate star codex's meditations and molok which is a an essay that kind of talks about all of these terrible coordination failures that are really at the at the core of all you know major problems in the world and so try to um imagine some like demon god of coordination failure and like that's what malek is so if you've heard of molok dao and like slaying molok and so on like that's what it's about it's about like hey uh humans tend to respond better by like visualizing an enemy and trying to fight it uh so let's you know name the um name that coordination failure um uh god moloch and so on uh and the the web3 movement is kind of like leaning into that those medics and saying great like we're going to use web3 and all of these amazing mechanisms to slay mock um and so like that's that's where that all that comes from uh and the greenbelt movement has like this really nice pipeline of um taking the the super um fast growing and super capable and um uh yeah super amazing crypto community and go from like the early incentives that bring a lot of people into crypto to um that are kind of like um exiting or trying to improve on other financial systems coming to crypto because of that and then over time they sort of like realize the potential of the the potential of crypto and the potential to become a region and that's kind of like how how things flow at the end of the day like what we're um what we're trying to break coordination failures for is to kind of build a drastic potential future usually mediated by um all kinds of public goods that we're gonna that we need to generate uh to help humanity flourish um help other species flourish and achieve um a good long-term progress uh so let's you know kind of look at game theory and public goods for a moment so um who here knows like what a public good is like fully well and like doesn't need a definition great most people um so the idea like most goods that you buy and you pay some money for some currency for and you purchase and you can use is a private good um these are tend to be uh excludable or rivalrous um usually suitable and rivalrous excludable means um that when you use it somebody else can't use it so software is not like this ideas are not like this you can have an idea you can tell it to me we now we can both have that idea um rival rivalrous means that um uh when when you i think is when you use it you you get to um yeah sorry that's rivalrous um excludable is that you can you can or cannot toll it so for example um yeah mistake let me rewind definition so when i when i consume it and when when you consume it that's rival rivalrous excludable is whether or not we can kind of like cordon off the the good and tall people into it so for example the air is not really excludable um a public pool that you can build a fence around is excludable so you can create a tool booth for people coming through and you can exclude the the um the participation and so that's kind of public goods are kind of all of these large-scale infrastructure pieces that are not excludable so you can't told them and you can't kind of build them build them with tolling and they're also non-rivalrous now the public goods notion is like kind of messy because what public are we talking about certainly access to specific good is not universal not everyone has access to the same good at the same level so i like to think of like network goods in reality which are good specific to a network of parties that agree on some some set of things so think of like the ethereum blockchain is a network good in a sense um and so on so with crypto econ and web3 we can kind of lean on the fact that we know how to create incentives we know how to create incentive structures and deploy them into the network and start using programmable money to build these kinds of infrastruct infrastructure that is going to fund many major kind of public goods we've already built a bunch of crypto networks that are these public goods we've already built a bunch of dials that are causing some impact in the world we can scale that up and cause many larger scales of of um of impact uh so great so let's go into coordination games for a moment um when you kind of study some incentive structure in a coordination game you end up with this kind of like a traditional game theory style analysis of a game where like you can think through the different parties you can think of their payoffs and so on and they're like classic games that show coordination failures like uh um very very uh famously kind of the personal prisoners dilemma has this classic kind of like defect effect equilibrium where like all parties tend to defect uh even though all parties would be better off if if they um if they coordinated so that's um uh so all of this all the study of these council games um enables us to turn zero sum games where you have fixed resources into positive some games where you can tweak the incentive structure you can use mechanisms to orient people towards coordination towards growing the pie as opposed to fighting for the pie so it's like you can you can in general for most of the universal resources you can generally either fight encounter some conflict and fight for splitting some set of resources or you can focus on growing the pie and growing the resources and and we'll get a little bit more into that in in a moment with prior dystopia um once you start constructing simple incentive structures and you start scaling them and composing them and building larger systems you start building incentive fields and you can think of these as large scale surfaces that you allow parties to dynamically optimize through so for example you can coordinate large larger and larger groups of people by building these like open-ended permissionless incentive structures um that all parties can can see and can engage with and so on and you can coordinate large action by creating a different equilibrium most of the time when you are like frustrated about some problem in the world and you kind of start thinking about it start analyzing it and usually you'll end up finding some broken equilibrium um and usually it'll be people are just stuck in some basin and usually a lot of people in that basin know that it's very possible to arrive at a different basin that is much better for everybody but people can't coordinate their way out of it it's very difficult for individual parties to kind of get out of it uh there's a great book called inadequate equilibria that goes deeply into this and kind of why those basins form and why it's very difficult to get out of it and the gist of it is you end up in a structure where there are multiple different parties that have different strategies and if one of them starts like taking a different more pro-social attitude it's easy for the other parties to kind of take advantage of that and so it's difficult to coordinate everyone out of that basin at the same time but with crypto econ by creating mechanisms you can start like warping that surface and maybe like moving them like destroying the mountain in between those two basins to enable everyone to uh to flow out so that's the that's the kind of the major promise of the whole thing um uh there's many kinds of great economic theories that we can rely on um the eleanor ostrom's uh principles for managing commons is a great example of being able to kind of reason about how parties can use the comments and so on and this is a great example of like building robust uh incentive structures for um for managing the comments and for funding the comments and maintaining the comments which was a kind of before ostram a kind of um kind of open problem and like intractable problem to solve so the the where a lot of this is said at least right now in the in the web3 space is that many times major problems um have many people that know how to solve the problem and know how to um how to create solutions but they're lacking the time and resources to implement those solutions so a lot of times today in 21st century what many of those groups need is funding and funding at larger scales so funding is one of the easy ways to solve a lot of these problems finding structures that can fund those groups now you have to make sure to understand what the impact of that of that funding is and whether or not that's incentive aligned and so you have to create funding structures that can measure impact and then cascade that but at the end of the day you'll see a lot of the ideas right now um in the last few years and probably in the next few years will relate to how do you fund larger and larger impact groups at various different kinds of skills and so a lot of the study right now is around different kinds of distribution models for funding that how do you get funding to um the groups that have like the best ideas for how to solve problems the best or like the most most effectively fastest and you know most most distributed around the world and so on um and then there's you know whole set of study around as you're scaling funding to groups how does that perform um what is that impact um could you do better and so on so you have a capital deployment and maybe assessment of how the capital is being deployed but you now need to kind of create a feedback mechanism to be able to generate more and more capital to fund funded larger and larger scales so this is where things like um uh the sort of value generation of crypto of crypto networks in general can be hooked into these mechanisms right so if you have a system that is funding public goods and we all know that when we have these goods we can get more capital for other reasons for example the fact that these blockchains exist enable us to build monetary systems and make it enable businesses that enable cash flows and so on and money generation then you can feed some fraction of that into funding the public goods themselves right so in a sense this is kind of what nation states do nation states do that kind of um feeding of um of the of the kind of they tax um societies and take some fraction of that tax and feed it into funding of public goods like uh science and so on and that's kind of like from a enlightened perspective of saying great we know these public goods are really valuable long term let's fund that let's take let's take some of the proceeds of the society and fund these larger public goods the problem is that the funding structures in these groups are not that great um and they're not scaling with the capital generation elsewhere we'll see that in a moment of how like the the science funding has not kept pace with the gdp growth of the world um and there are major problems in between uh how you go from science into technology and broad diffusion so there's all kinds of mechanisms that people are exploring so everything from quadratic voting and conviction voting staking bonding curves and and so on i'll kind of like flash a few of these right now for you to explore a bunch of these ideas have been many of them have been proposed many decades ago in some cases centuries uh some of them are very new but what's really cool about blockchains is that you can now have a software system that enables you to broadcast all all of these kinds of mechanisms and deploy them into the network at scale right so you you're no longer rate limited so so before crypto um economists would have to like come up with a mechanism write a bunch of papers and then start to try and convince large-scale governments or large-scale institutions to build that kind of mechanism and that kind of incentive field and that's an extremely slow process in the crypto world you can dream up a new incentive structure deploy into the network see what happens um study it and then from there scale it now that's also dangerous you can definitely deploy bad in center structures so be careful but it but it gives you this very very powerful tool that you can use to understand the world try to solve some problem and as an individual or a small group actually deploy a solution and if it's working then you'll get the scale will follow there's all kinds of problems and potential opportunities i highly encourage you to check out the um the book it goes into a bunch of these these possibilities and the book kind of finishes with like a a good notion of impact dowels and kind of the the the starts painting the future of of uh potential um dowels formed around creating impact on some specific vertical uh vertical kind of um case and the whole movement in general uh is kind of very oriented around this kind of again regenerative economics that are trying to orient on the line incentives towards kind of maximum flourishing um great so i will now switch gears too so that's kind of the green build movement and regen crypto and kind of the the underlying technical foundations but also kind of the social and memetic structure around it check out the book for more and get involved with the broader movement so let's go into so now that like we have those like strong foundations and um we have like a sense of like a general goal uh let me let's kick it up a notch and now talk about pirate utopia so the at the end of the day we um i think we live in an extremely critical century and i'll convince you why uh we've had tremendous global improvement over millennia and maybe tens of thousands of years and certainly in the last few hundred years we've seen by by most indicators that we have about human well-being and the well-being of groups and so on uh the world has been getting dramatically better life expectancy poverty rates health and so on most by most measures the world is getting dramatically better it doesn't feel that way because our media and other systems are kind of co-opted by interest groups that push all kinds of like conflict memes to try and achieve outcomes but in general most groups that take this longer view and longer view of study can point to just the world getting dramatically better over time however we're we're also in um faced with extremely extremely large challenges um this century uh someone's gonna think i've missed the yeah i'll go this one first um we're faced with x-risks which are these existential risks that um might wipe out the species so for example um there are these major nation states with nuclear weapons um there's one of them is like in a war right now um and it's a you know for a while there it looked really scary um still scary for a lot of people and this still could escalate um we also have a massive disaster around climate change um we have potential problems around biotech potential problems around aji so all of these are major technological improvements that because they enhance our capability technology enhance our capabilities it has great positive potential and also great negative potential so that this creates a the possibility of coordination failures that get us into a really bad state so this is why we need to um create very strong coordination structures to achieve really good outcomes and so the reason this century is uh extremely critical is that while other x-risks um which are natural so things like super volcanoes or um asteroid impacts or supernova and so on those um the the scale and timing of those is so large uh that will likely kind of colonize the planets and go out to um potentially other stars before one of those things happens however in this entry there are major major x-risks that we have to make it through and one of the one of those is the kind of computing phase transition there's this if you kind of look at the history of computing and you think of the last 80 years and how decade-over-decade computing infrastructure has improved human life when you sort of start projecting that 80 years in the future a lot of the tech that we've known about and we've dreamed about for the last few decades will likely come to pass computing is one of these kind of interesting things that are that is so fundamentally powerful um and it's so kind of um yeah it's such like a tremendous um physical process um that once you we have we've been able to harness it it's going to rewire what we are um computing is not like about digital computers on its own um life living systems are a computing system neural and memetic systems are a computing system um digital computers are our computing system all of these things have the three kind of like major events in in the planet in the last uh four billion years um are different layers of computing stacks so this transition is like super dangerous because um if we get it right this could be phenomenally uh great for the whole species um and it can block in like this amazing um open-ended progress however we screw it up if we like build um uh yeah things like brain computer interfaces things like agi and so on are extremely powerful technologies that if we like misalign them or or don't broadly diffuse them and so on they could spell catastrophic outcomes for for the species so there's an extremely critical century and one of the the weird things here is that um early on in computing's history um we got kind of the the the implications of building computing machines and computing machines that can think and so on um sort of generated a ton of sci-fi that kind of helped us view potential features and so we we've gotten this very rich cultural set of memes that can paint various possible pictures of what the future might look like and force us to contend with uh with implications unfortunately the sci-fi the sci-fi perspective has like because it's science fiction uh the world finds it really easy to just dismiss all of those ideas as just purely fiction and yet we're just marching that kid over a decade straight into this brain computer interfaces are not that far away they're probably on the order of like 10 to 20 years out from being able to actuate most computers with directly from from your brain or later on connecting brains together and so on um aji is very unclear that this is uh it's it the building of agi has been um predictive for many many decades and um those timelines were always over optimistic but now the most of the experts have like radically shrunk their timelines in the last 10 15 years we've gone from most experts thinking somewhere between 50 and 300 years down to somewhere between 10 to 30 years and that timeline shrink is alarming because if we don't if we don't get this right it could be that um so with all with all of these things so like um and the normal enormous global improvement very scary x-risks that we have to avert that that are you know stemming from coordination failures and this really important computing phase transition that we're like engaging in um unfortunately our current macro systems um are not very adequate to help us solve this these major problems these were really great for getting us here and getting us to this point and driving a lot of the improvement but they're not able to contend with these these cancer coordination failures and they're not able to contend with um something like a like a face transition like what like what computing is causing so hopefully like the picture is like clear like this is a very very critical century now what are we going to do about it um the good news on all of this is that we we have like just in time we have figured out extremely powerful coordination tooling all of these potential failures stem from coordination problems these are macro scale coordination problems but you can usually break down macro scale coordination problems into smaller and smaller pieces that you can then meaningfully contribute to and meaningfully solve so let's let me introduce you to a kind of concept called paradotopia and then kind of give you a tool set for how you can achieve large-scale improvement by kind of breaking down those problems there's a great talk um called part of the topian goal alignment from drexler who's one of the kind of um inventors of a lot of the crypto stuff that we use today um drexler and eric dressler and mark miller kind of in the 70s 80s wrote the agoric papers which kind of described computing with markets and and currencies and the ability to kind of like trade resources and having digital money and so on and it just took a very long time for those ideas to percolate and make it into our global systems and now um get scaled and so part of what they talked about was that there was this concept of private topian and um it's really useful to kind of visualize that picture so um imagine kind of a very simple resource sharing structure so you can think of like two agents a and b and you can think of just one resource like there's just you know the uniform notion of like all resources and this is the picture of a zero sum game where they're kind of like trading off resources perfectly uh let's kind of like plot it on a log scale so like that bulges it out um that takes that straight line and bulges it out which is useful to kind of visualize um growth in a moment and then most most people kind of now in the last 150 years have recognized like hey actually most resource growth is not most resource taking creation it's not a zero sum game and in reality you can instead of conflicting with each other we can coordinate um and we can arrive at kind of broad resource growth we can grow the pi instead of kind of um compete for the pi and so you end up with this really nice kind of parietal frontier part of frontiers like that that line of like um the potential kind of choices that people might make and they can coordinate to try and grow the resources now the the but most kind of systems and governments and so on are built on this kind of picture where like growth is kind of a small fraction of what you have now you're kind of like growing at you know five percent a year or ten percent a year 50 a year uh but when you zoom out the reality is that we're growing at in in terms of many orders of magnitude when you think of something like as pivotal as germ theory and the ability to kind of have sanitation and understand microorganisms and them as a cause for disease and then kicking off like all kinds of health innovation systems that it creates a massive scale of improvement um same thing with uh communication technology being able to kind of have go from a world where you have to like send letters to each other to suddenly having the telegraph and then the telephone and then radio um and then the internet like that kind of um growth creates orders magnitude more more resources and so on uh we don't see this in in most of our measures like gdp and so on because those measures tend to like um just look at what people are willing to pay currently which created a structure where like once you create a lot of value that is broadly diffused it's sort of like nobody's willing nobody will pay anything for it because it's just so cheap that gdp doesn't capture this kind of growth so if you were capturing this kind of growth gdp would be like many orders of magnitude of growth um every every um a century or something like that um so so this is kind of like the fundamental uh idea here which is that if we coordinate to scalar resources to do the kind of deep science work and deep technology translation work and deep product diffusion work to get all the tech out there we can get into this much faster pathway to growing the the the well-being and resources for uh for the species and for many other species for all of life and and so on so that that kind of perspective here is what prioritopia uh is about uh and you know one critical thing here is like the the difference between parties um once you put it in these terms the difference between um uh parties uh taking more or less or whatever is kind of like negligible compared to um uh sharing and so on so it really is kind of like this forcing influence to get everybody to kind of agree to just coordinate as opposed to um uh to taking more and so on and it's also worth pointing out that when people get into conflict they destroy a lot of resources and they hold each other back and they prevent progress or they can wipe out the species and that like that risk profile um in reality is much more pronounced than this that like a red line should really be kind of like going from like zero bulging out all the way out and back um it's kind of like a scarier picture of the diagram so the question is like how do we get get there how do we go from where we are today to that prior utopian potential crypto econ that's how we get there um the crypto economic stuff that we were talking about is extremely powerful so uh the crypto community in general thinks of this as like really powerful and so on like we know kind of how cool programmable money is and how cool incentive structures are and so on um but in reality they're just um it's way deeper than that at the end of the day all of these systems from nation states to tribes to families and so on they're just coordination structures um and what we have now is a way to marry like the digital computing platform that we have that is broadly diffused in the world with programmable incentive structures and in programmable coordination structures and so that is just super super super powerful it can rewrite all of our economic systems it can rewrite all our government systems it can rewrite all ways in which humans coordinate uh and so we're gonna be seeing this kind of major improvement um diffuse into major uh different parts of our life into different verticals and so on over time so this is extremely powerful stuff there's a massive lever by which to kind of move mountains this is a major tool by which how we can uh solve those like large scale large scale problems and just to kind of put it into like very clear perspective uh just think of the bitcoin hashrate when before bitcoin started uh there was no bitcoin network when bitcoin started it had a few computers uh chugging away and and burning a lot of hashes and so on and the incentive structure did two things like the block reward instead of for sure the two major things one is it got a lot of people interested in this currency and gave them a little bit of the currency and it broadly diffused that emission rate enabled the currency to be distributed to a lot of people and it created an incentive structure for um paying the people to maintain the currency itself and paying the people for adding security to the to the network and so on it also uh helped um broadly diffuse the the currency to a lot more people but it had this kind of unintended uh consequence because that incentive structure was so powerful and the computing power that had to go into kind of mining each block is just kind of it absorbs any amount of power you throw at it it created this run of equilibrium for consuming as many resources as possible to secure the ledger and so this is just kind of mediated by the price of bitcoin if the price of bitcoin goes goes higher more more energy goes into securing the letter and so in a few short years we've come from like a tiny little network with maybe you know initially 1 10 and so computers to now one of the largest energy consuming processes on the planet and in in that time scale it also had to kind of uh create the notion of virtual currencies and cryptocurrencies and so on it had to create the entire crypto movement in its wake and so on so that process will slow down you could redo something like this uh much faster now and like i would guess in two to five years you can get a something of this scale and that just gives you a sense of how powerful this open and permissionless incentive structure is uh we've gotten a taste of it with uh with the falcon network in a year and a half we went from like no storage in the network to 15 16 exabytes which is an enormous amount of storage capacity so you know you go from like uh bytes to kilobytes to megabytes gigabytes terabytes petabytes and then um x device which is an enormous uh scale increase i might have missed one i think i got it right um but the point is like an enormous network uh appeared um because of that incentive structure so it just gives you a sense of like the scale of change that you can have on the world um uh by designing a good instant incentive structure and deploying into the network um one important thing here is like this is the sort of scale that now um is this is at the scale of major computing platforms like um google cloud and azure and so on um it's within like uh one or two hours of magnitude which is totally um is super close um and that's how where you can get with you know a year and a year and a half and a super powerful incentive structure that is just coordinating that that kind of um that kind of network so this this like the optimistic view on this is like you can use these incentive structures to cause coordination at that scale and solve major problems in the world so let's go back to this kind of like mechanism design view of hey you have some complex surface area you want to kind of like use this tool tool set of whenever you're encountering some large scale problem break it down into trying to visualize the incentive field um and trying to think of like what basin are people stuck in what other basin could be better and how do you get people from the basin they're stuck in into that better basin and use like the magic of cryptocurrency to kind of warp the incentive structure to enable the people stuck in the higher basin to flow into the lower basin so kind of like a uh one one way to like think about this like you have like your crypto economic uh toolkit which is represented here by like a tunnel boring machine and you're gonna like borrow a hole from one of the basins into the other and kind of create the the potential for for all that energy to to flow and you can keep doing so so with a large problem you can break it down into smaller things and keep making it based into base into basin to basin create incentive structures along the way and that way it's all macro scale microscale problems and so this is how we can get to this prioritopian vision this is how we can solve these major uh scale problems by coordinating humans at grander and grander scales we know we don't really need to have to we don't have to convince everyone in the world we don't have to convince nation states we don't have to convince various governments we can create incentive structures that are that are well designed and that way kind of cause action at various different scales um scales in the network so think of like a picture like this uh this is how we get to periscopia so um you know it's extremely critical century um this is how we can get solve those major problems coordinate out of those x risks and um uh and make sure this computing face transition goes well so now i'll give you a couple of i'll break down a couple examples with you um to kind of give you a sense of like how to apply this thinking um and then we'll talk through some ideas and we'll end with how to get involved so think of like um you know a massive problem like how do we get the planet to go green and start being carbon negative and start fixing a ton of carbon in the planet well you can get there by first um creating a green industry so if most of the energy in the world becomes green um then that's we can get pretty close to a green planet you can you can do that if you have one industry that you can point to that is being uh phenomenally green not just carbon neutral but carbon negative that is like actively fixing carbon in the ground at a great rates if we can cause that to happen in the world that industry will be looked at by many other industries as a strong competitor and they'll be kind of um forced to adapt to what that industry can do or those industries will wane because people will select these other processes to go to the much much greener potential so how do we turn crypto into a fully green industry today we have things like the the bitcoin process we have many other proof of work networks and so on that are that are not green and are consuming massive amounts of resources and and carbonizing the planet so uh the the way we can get all of green crypto is that we get a few crypto networks to become fully green and start decarbonizing themselves and becoming carbon negative and create incentive structures for the other crypto networks to follow suit to um adapt themselves to do the same thing that these other crypto networks that are much better are doing so great like let's do that with one let's um this is what we're doing in the in the falcon project we're making a green file coin so that we can be the greenest possible blockchain to then kind of help drag all of the other blockchains along with us uh and so how do we get there well we start first by thinking about the source providers which are the main parties that consume a lot of energy there are many other groups as well like let's start there and enable source providers to be fully green and get to the point where all storage providers in the network are not only carbon neutral but carbon negative if we can get that going then we can get the entire filecoin network to be green if we can get that to happen then we can get other blockchains to become green if we can get all of crypto to be carbon negative strongly then we can shift the entire industry world into that and if we can do that then we can get to the carbonized planet and this is the kind of thing that we can do in um if you can think of each one of these circles um as achieving that on like a two to three year time scale you could get out of this in in 10 to 15 years you can get to sort of become like heavily carbon negative might take longer but if a lot of us kind of work on these on these pieces we can we can get there and you can think of like using collaborative competition at each layer of the stack here to cause that kind of incentive cascade uh so you know let's kind of break that down like be super practical um so this how do you how do you do that how do you take a crypto network to make it um carbon neutral so let's use crypto incentives you can do things like measure the energy use estimate the energy use of a particular storage provider you can create a lower bound and upper bound you don't have to measure it perfectly we will get to measure it perfectly once we kind of add some devices and so on but right now we can just estimate it and just take the take the upper bound and say let's just assume that we're like in the worst possible case and then after that we will kind of if we're doing better than that we can adjust and then once you have that measure you can then offset all of that and or um get renewable energy to be produced at exactly the same moment in time as you're pulling it out of the grid so the energy grid is a really cool system where like all of the plants are pumping the energy into the grid at the same time and all of the users are pulling energy out of it so it makes it really difficult to trace who you're getting your energy from but if you as a consumer of energy buy renewable energy credits from specific plants at specifically the times that you're drawing the energy out you can make a very credible verifiable argument that as you're pulling the energy out you're paying for renewable energy to be put into the grid precisely at the exact moment in time in which you're pulling it out now if you do that then you have a very strong verifiable claim that you are your entire operation is operating on renewable energy and it is a green uh green process now if you instead of just paying for that amount you pay for like five times the amount of energy or 10 times the amount of energy you now have a multiple you now have a way of saying when i pull energy out of the grid i am paying for five times the amount of renewable energy to go into the grid so it gives you a facility to become not only carbon neutral but carbon negative and so if you can look at all the storage providers on the falco network and one by one figure out which grid they're in and one by one start a rec buying process in that area you can make all of the sps and the palco network become not just carbon neutral but carbon negative and then you know we are like done with like the first and part of the second circle uh and then you know from there you can like scale it up to um you know other parts of the network and kind of um treat each increasing um increasing circle we're kind of in a in part of this process so it'll it'll take some a while uh yeah this is like a like a pretty interesting problem and there's all kinds of areas where crypto tooling and verifiable claims and zero knowledge computation and so on can come in to help this entire structure get much more verifiable much more verifiable green and then you can use programmable money to cause all kinds of action i'm going to maybe fast forward through to get to the um science one because i want to cover that one for a little bit uh and yeah if you want to um get you can check out all the dashboards you can like get involved with this project um and you can um and a big part of a big part of causing this sort of change is that not only do you have to have a technical solution you have to create a large-scale social movement that you that enables a lot of other parties to participate to come up with more ideas to improve the system and to then scale it to to copy it to other places and to scale it so think of all of this as generating public goods that many parties in the world can learn from and can use and so on um cool so let's go into accelerating progress so the a lot of this global improvement that we talked about at the end of the day has been a consequence of the science and technology process so science is the process that humans use to expand our knowledge to get to know more about the universe and the technology build out is about building tools and systems to leverage that knowledge to increase our capabilities in on the planet so these are kind of two sides of the same coin and part of the reason the internet has been so impactful is that the at the end of the day what it really is a way of doing this process much faster and kind of letting it feed back on itself at a greater degree so if we want to kind of accelerate global progress and accelerate the rate at which we're solving tons of problems one thing you can do one high leverage thing you can do is you can think of the entire pipeline from basic science to fundamental development to designing devices that put that those ideas into kind of early notions of technology and then get all the way into products and diffuse that into the technology into uh into the world and you can think of that entire pipeline and create incentive structures to fund it at better scales to um create this like regenerative crypto econ loop that where you're taking kind of outputs at the end of the pipeline um when you're able to kind of create a lot of cash flow and then feed it back through the entire process at every point in the way to to accelerate the um the diffusion of like basic science all the way through through that pipeline to the end today like the funding scales for basic research and basic fundamental development are not great uh we'll see them in a moment and especially in the middle in this research development part there's a huge chasm um so this there's a missing set of coordination structures that enable this technology translation and many times many of us can imagine many problems that we are frustrated by in the world and we know there are communities out there that like know really good solutions and have like you can find tons of papers and you can find tons of uh solutions discussed and yet those solutions haven't made it into technology haven't made it into products haven't been broadly defused something has happened along the way where like some of those efforts just got stuck somewhere um they didn't make it all the way uh sometimes some ideas don't make sense or or they're not as effective as others but many times what's going on is some idea is getting roadblocked and there's no funding uh to enable the people that want to get it to completion to actually do that or there was some funding but you know that team failed and you need a much more robust approach where you're funding many teams at the same time or in sequence to um to make that technology transition happen so this problem exists because there's no good way of like creating profit structures in the middle here like there's the the incentive fields here are are broken so we can use region crypto econ to to fund this um so you can think of like um the the whole science funding structure and funding scale and this kind of what i mentioned about hate's big but it's not that big and you know that has roughly remained similar um that uh decade over a decade it has increased a bit but not dramatically this is just the u.s other nation and this is one of the biggest circles on the planet china is now really big it didn't used to be that big so it's a good sample of like the amount of funding in the world that is going towards um r d uh you can use scripted to scale this uh so crypto is not that big yet to be able to kind of fund this year over year but if crypto gets one or two euros magnitude larger we're basically there we're basically able to crypt is going to be able to fund r d at the scale of nation states and that is massive that that kind of shift could be transformative for the world if suddenly like um as a scientist or uh or an r d person and so on you can get funding not not just from the nsf nih or like equivalent agencies in other countries but you can now get funded by crypto networks at this massive scale that that could just ripple through the entire um the entire system to solve major planetary problems and if you kind of like don't just stop at the at the early beginning the way that um the the modern nation states uh do but you kind of like create incentive structures throughout this pipeline um to help push things along that entire chasm to make sure that there's a really solid incentive field through this this whole thing then we can really scale up the the technology translation pipeline and at that point get a lot of the big solutions that we need in the world actually implemented and scaled um and you know way to kind of visualize these things that's helpful is like think of the um think of large scale projects as again breaking down into smaller things and you can get a lot of action to happen if you have a reliable way to kind of start small and scale up if you have ways of starting small projects prove them out and scale them then you can be in a really good place and part of the reason we have so many um scaled-up startups and and products that have for the last 20 years had these like super fast growth rates is because we have a phenomenally good capital structure in private funding where you can do this kind of scaling at every step of the way so it's very easy for groups that are very close to a product to get funding in larger and larger scales to be able to to achieve this outcome but the same is not for uh it's not the same for public goods uh polygast has a pretty broken funding structure where in the smaller scales it's massive there's just tons of money flowing into into charities a lot of that funding is lost a lot of that funding is going it's even negative uh there's like bad accounting of the impact of that funding and then once you start getting into larger scales there's fewer and fewer and fewer funders and you get to certain scales we're like there's just no funding available this is why we have um this concept of fusion never where like fusion never got the funding it needed to actually get done um and and researched in time we're finally breaking that but like it took like 40 years more than it than than we needed and so if you can create a a funding staircase for public goods similar to this one at similar scales um then we can be in a much better place um the the scale here is like massive and this is all a decentralized system like the the private venture capital system is all pretty decentralized with many different actors that that are part of this incentive structure incentive field that enable them to kind of be collaboratively compete to fund startups that better in better ways and so on in larger scales can we create a similar kind of structure for a funding staircase for for public goods that's i think one of the highest leverage ways to impact the major problems in the world is to do this and you can do it with crypto econ you can do things like create new um new funding structures new grant programs you can take things like what git coin's doing and scale it up like go from the quadratic funding type structures that work really well for the small crypto projects and scale it up to build out entire crypto networks or scale it up to do science research and scale it up to do full technology translation you can come up with better mechanisms to pair the the funding proposal structure with the impact and so on and so you can you can use the crypto econ tooling to to greatly improve improve the structure so you know things like uh you you can even think of things like patreon and so on as like examples of doing this so there's a whole like field of potential um design here um and there's a bunch of groups now now starting to actively pursue these kinds of things um so i greatly encourage you to uh to get involved it is we're now at time so quick question is there another speaker that is about to jump in great so i'm gonna pause here um and maybe conclude with um hopefully i've given you a bunch of different region ideas um i'll be out there and we can talk uh more if you you want to do if you want to explore more and the last thing is get involved by going to the conferences and communities that are talking about these region ideas um go listen to like the green pill podcast um go to go watch the videos from shellac and coin that happened two days ago go to the next one and come to funding the commons which is happening in june uh great so uh let's all uh make it uh by aligning ourselves towards the produtopian outcome and um uh solve the large-scale planetary problems with crypto thanks [Applause] foreign [Music] all right can we start yeah okay hi so um so my name is joao vice i'm from the ethereum foundation and uh and i want to talk today about account obstruction and a elca4337 so first what is account obstruction uh account abstraction means it means that instead of using an externally owned account which means an account that's uh directly associated with the associated uh with a private key you're using a contract wallet and this contract wallet can be controlled by a key or multiple keys but it could also be controlled by an arbitrarily complex mechanism that is encoded in the in the contract so this this enables a use cases such as a social recovery which means that which means that if you lose you lose your keys you lose access to your wallet your friends can sign a special message with their keys to help you recover it or you could use a complex complex access control such as multisig in the context of your wallet it also allows you to switch to a to switch even to different signature schemes such as moving to bls or the quantum resistant signatures in the future which is quite useful for ethereum and it allows you to do things such as batching such as a batching multiple operations so for example uh for example let's say you want to trade an elc 20 on uni swap you could um so when trading you don't need to call you you don't need to approve and then to do a transfer from you can bundle both of them together in the same like in one call and uh so so this is a so a control suction can be quite useful it can also do things like gas abstraction so gas obstruction means that that a decentralized application can pay for its uh its users guys it can sponsor it can sponsor so that the user can be on-boarded without buying it this can be useful in uh this can be a useful in various scenarios and it also it also makes it possible for the user to for example pay for a pay for the gas with some tokens instead of having if and behind the scene the contract will trade will change the will change the token to if in order to pay for the transaction so the user doesn't need to know anything about eth if he has tokens and let's say you have a gaming application uh let's say i mean you have a you have a blockchain game something non-financial and the user doesn't own any crypto you want you want to onboard the users that are not crypto people so they can pay a service provider by credit card for the for a just for sponsoring their gas but this uh but this centralized this centralized service doesn't control the transactions it can't say anything about what the content of the transaction should be it can censor it it can only pay for the gas and it also it enables some more complex use cases such as having such as a private withdrawals from zika rollups and from zk uh from from like a zero knowledge mixers such as tornado cache currently if and accordingly if you want to withdraw money from something like tornado cache you need to have if in the withdrawal address in order to send in order to send a withdrawal call and this could be anonymize you because it associates an address that already has if with the others that's performing the withdrawal and right now they use the there are centralized solutions like a centralized relay that uh that helps you perform the withdrawal but then the really knows about you so with account obstruction this becomes uh this becomes a decentralized and it doesn't de-anonymize you because the withdrawal the withdrawal operation can pay for itself you can have a paymaster that looks at the withdrawal it's a that looks at the withdrawal it sees that it sees that it's going to be successful so it will perform it it will perform the withdrawal for you uh take the take the cost of the deducted the course of the withdrawal and give you the rest which means that you end up with going to an address without associating it with anything else and um it and it makes some interesting use cases that are very popular these days such as a cross-chain operations because it means that you could do things like cross-chain trades uh without having to hold the native currency of both chains so now that we see what what account obstruction can give us why why now why again ethereum already had its fair share of of account obstruction attempts there were many attempts to uh to figure out to figure this problem out and the problem is that it's very complex it's it's very complex and it's hard to agree because all of these attempts require require changing the consensus changing the protocol so what's different about this is that it's an elc it's actually there's no protocol change which means that it can be immediately used on any evm chain no need to wear no need to wait for a hard fork and this allows us to start experimenting with account obstruction without committing to a protocol change so we can start experimenting and iterating until until we see that we have something that everybody that everybody likes that satisfies all the requirements and there are no problems so um the end the end goal is to reach uh to reach a situation where we can drop away altogether we can we no longer need externally owned accounts and everything is account obstruction but in order but in order to take the first steps in the direction we need a way to experiment and elc 4337 is the way to start these experiments so this is our first step so how does it work instead of instead of using normal transactions we created a new obstruction level about above that which we call user operations and these user operations live in a separate mempool it's uh they live in a separate mempool and there are bundlers that there are bundlers that mine this mempool they take user operations they check that these operations are going to be uh are going to be paid for and then uh it they and then they they send the bundlers they put it on chain through through a global global contract called entry point which delivers it to the contract wallet and the bundle gets paid gets paid for it now and this is permissionless anyone can be a bundler including the i mean the user can be can be its own bundler or anyone else can be but the natural fit is that it will be miners or post merge it's going to be block proposals or validators so um so the miners will probably participate in this additional mempool and we'll mine and we will mine user operations so so as we can see here users they just sign and assign user operations and put them in this user operation mempool where bundlers bundlers take it from there and put it on chain as long as as long as they see that they're going to get paid for it so i'm going to go through a through the flow of such bundle uh from the moment it is sent to a it's sent by a bundler until the operations actually happen and starting with the simpler flow where there's no gas obstruction so the bundler so the bundler built a bundle of one or more op so let's say it puts some it puts some user operations inside the inside a bundle transaction it ran a simulation locally it saw that the bundle is going to be successful so it uh so it puts it on chain sending it to the entry point now the entry point contract this is a this is a single tone there is one on the entire chain and this entry point starts by calling the validation function of each wallet so each wallet needs to implement a validation function and this function this function performs several actions first of all it does the access control which normally means checking a signature so it will verify the signature of the operation seeing that it is really signed by the user then it also checks for replay protection which in the current model means means the checking and nonce and incrementing it and finally it pays for it pays the maximum the maximum cost of the of the operation just like just like it works for a for current transactions you first pay for the entire you pay the maximum cost and then you get you get refunded for the unused part so the so the validate function verifies everything then it pays for the operation and then the wallet and then entry point calls the wallet calls the wallets to actually perform the operations so the opera so the wallets now get to perform the user operations to act upon the user's request and after that and after each operation then the entry point also refunds the unused the the unused gas payment the part is that it wasn't consumed by the operation gets refunded to the wallet just like with the current transactions now where now let's switch gear and look at the uh and look at what happens if there's a paymaster involved which means there is gas obstruction so now the wallet doesn't pay it starts it starts the same way entry point calls the an entry point calls the validation function and the validation function checks the signature it increments the nonce but it but he doesn't pay it is not asked to pay because there's a paymaster instead the paymaster now instead the entry point now checks if the paymaster is valid and staked and i'm going to elaborate on that in a bit but let's assume it sees that the paymaster is valid and staked so now it also calls the validation function for the in the paymaster contract and the paymaster gets to look at the operation and decide whether it's uh whether it wants to pay for it if it wants to pay for it it approves it and now the in our entry point uh performs the actual operation tells the wallet it gives the wallet an opportunity to perform the operation and the paymaster is charged is a charge for the amount and now there's another optional an optional step here because the paymaster might want to uh might want to do something after it knows what after it knows how much it paid on behalf of that user for example if it's a token paymaster where the user where the user is paying with tokens so now the paymaster wants to charge the user to transfer tokens from the user to a to a charge for the operation so the so the paymaster could ask that they could ask for a post-op and in that case after the operation post or the paymaster's post-stop function is called so now so now the paymaster gets to do its internal bookkeeping or to charge the user or anything else that it wants to do with this information so in order to uh in order to perform all of these duties the entry point contract needs to uh needs to have a few interfaces it needs to have interfaces to survey the three different entities in the system uh it serves the bundlers so the bundler has the bundler creates the bundle and it needs to locally call a simulate validation function which which is how it checks that that the the band that the operations are valid and then it calls on chain the handle ops operation which which performs the actual uh which performs the the flow that we just seen and the paymaster paymasters have a stake as i mentioned so uh the stake so they need to manage the stake they need a way to lock the stake to unlock it and to withdraw it so this is so there's this interface and finally there's a there's a deposit that is used to pay for gas the deposit is owned by wallets or by paymasters so they also need a way to check their deposit and to uh to check the deposit to deposit more into it or to withdraw it so these are the interfaces that enterpoint provides and if you want to uh if you want to build a wallet to build a wallet or a paymaster you need to implement cellphone interfaces as well so the wallet the wallet implements a very simple interface it has just one function it's the validate user or function this is the function that gets called the that get called during validation it performed this it performed this signature check or whatever access control it has it has the uh it performs the nonce increment or any method of replay protection and it optionally pays for the transaction now the paymaster has a similar interface with the validate function as i explained earlier and it could optionally have another function called postop where it charges the user over from bookkeeping so uh the entry point is a highly trusted component because uh it's it's actually trusted by all the wallets to perform it's it actually tells the wallet what the user wants it to do so there are so the wallets must be really sure that they will only get something that really came from the user and it's trusted by the pay masters to only charge them for to only charge them for operations that they really agreed to pay for and by the bundlers to compensate them properly for a for the bundle so um so there are a lot of security requirements i'm not going to i'm not going to go through all of them right now but we just finished a security audit with the open zeppelin so the contact has been audited and and i'm happy to talk about this security later if anyone wants another important security consideration that also affects the way you use the system is the denial of service says the risk of denial of service against bundlers so um a user operation user operation relies uh the validity of user operation depends on evm state and that makes uh that makes a pretty big attack surface against uh against bundlers for example if um if someone can submit a large number of ops and then and then invalidate all of them at once it means that there's going to be a lot of unpaid work performed by the bundles they need to simulate all of these all of these ops each of these ops is going to fail simulation and get dropped off chain but nobody is paying for all of this extra work so we need so we need to protect against this and it can be even worse if there's a bad paymaster because the payment still can a single paymaster can affect a large number of different orbs from different wallets so we put many mitigations in place the first one is a limit on validation gas so validation guys represents the risk the risk of unpaid work for bundlers and for nodes because this is the this is the work that's being done for the validation before knowing that that operation is going to be paid so so each user operation has to specify how much validation gas is going to need and if this number is set too high then bundlers are likely not to accept this europa's user operation and not even try to simulate it because it has too much risk another thing we needed to take care of is to make sure that the environment is consistent because otherwise otherwise user operations could be invalidated in large numbers without any action for example for example let's say we allow the during validation to check the block number so someone could send a very large number of ops that depend on the they depend on the current block number and they're all going to be successful when when added to the mempool but then the block number changes and by the time a bundler tries to bundle them uh the block number is no longer the the expected one so now all of these operations need to be dropped and it's going to be a lot of work so we so we needed to ban any environment operations so all of these all of the ones listed here are not allowed so an operation is not going to be accepted if it uses them during a validation of course it can use them during the operation itself just not just not in the validate function and we also needed to restrict a couple of uh op codes so for example the the gas left the gas left call it can only be used in the context of a call when setting the the gas for a call you cannot use gas left to read the number and act upon it and make decisions on the gas in practice this shouldn't really be a limitation there isn't a lot that you need to do with it other than making calls and one last thing that we do to ensure consistency is uh we make a list we make a list of all the of any account of the code of any account that is accessed during this uh doing validation and if the code changed between between getting into the mempool and creating the the bundle then the operation is dropped without simulation normally this shouldn't happen it means that someone either created or self-destructed one of the contracts related to the operation so this is how we make sure that everything stays consistent which leaves us with just a storage access so uh we also need to make sure that a single uh storage change cannot invalidate a large number of ops because then someone could set a flag that kills uh that kills all of the all of the ops in the mempool so we limited the wallet the wallet can only access its own storage it cannot access the storage of other contracts and this is complemented by another requirement that each wallet can have only one user operation in mempool at a time it can replace it by fee it could even replace it with a batched operation for multiple actions but it can only have one so these two rules together mean that a wallet that a state state change can only invalidate one op it cannot invalidate a large number of ops um so we have a similar rule for a paymasters but for paymasters this is not enough because you actually could have multiple pay masters you could have multiple ops that use the same paymaster so we also needed a reputation system where each bundler maintains a reputation for for each paymaster it says and it needs to and it needs it needs a way to know if this paymaster is causing a lot of unpaid work so what it does is uh it checks it checks how many it checks how many operations with the display master fail simulation in a sliding in a sliding window and if it sees that the paymaster is causing too much unpaid work then it's going to throttle and eventually ban it for a while now where this is a and this is where the stake comes in because we needed a similar civil resistance mechanism so that it's not uh so that it's not cost effective for an attacker to spin up a large number of paymasters that misbehave so each paymaster has to lock a stake and if it wants to and if it wants to unstake it needs to wait it needs to wait for a while which means that if someone wants to perform such attack they need to spend to spend a lot of heath on deploying on deploying these spare muscles and each of the pair master is going to is going to cause a very small amount of extra work before it gets itself banned so when can you use this uh we started building this uh eight months ago where it's a it was co-authored with vitalik and uh and since then uh the netherlands team and the opengsn team have been working on having a working on a building it and iterating and we kept iterating with vitalik on on the design until we were satisfied with it and now with a last week last week open zeppelin completed the security audit for it which allows us to uh to put it on mainnet so today it's available on ethereum and on testnet it's also available on agnosis on gnosis chain formerly xdi and soon it should be available on more on more layer 1 and layer 2 networks and now and now is your part now we would like you to start building it to start building and experimenting we want the computer the the community to start building the elc 437 wallets and also experiment with different gas abstraction models by implementing paymasters so uh if anyone wants to start to start experimenting with it this hackathon is a great opportunity because the the opengsn team is sitting right here and it could help you get started or you could join our discord where we can also help with such integrations and finally if you are [Music] if you are building any if you are building a cool project that uses elc 4337 you should consider applying for a for a grant from the ethereum foundation because we would love to we would love to see the community start experimenting with this right so um so so i'm going to post a couple of a couple of links for the uh for the eap itself and everything associated with it and now i would like to i'd like to invite a draw from opengsn uh to a walk through the code of the sorry right so um so and so i'd like to invite a draw to a walk through the code and show what a wallet looks like what the paymaster looks like right not with open zeppelin it's maintained by it's maintained by opengsn but it's uh it's active and uh it's active and actually a new version is coming on is coming out now i'm sorry you were you're asking me yeah because open zeppelin was working on gsm right before uh in the first place in the first version we worked on it together but we've been maintaining it since okay uh just a second okay uh i'm draw from i'm from the opengsn team i worked on this project now after the overview of joab i tried to dive into the two contracts in the system that interest you as developers i can overview the entry point but we don't have time for that it's the contract that we all trust and love and opens up a verified i'd love to go in person if you like but the two components that a applications will want to customize and create are a wallet and a paymaster so first of all what is a wallet this is the interface that you have talked about a wallet is an account is a it stands it holds your account it has a execute function but we don't mandate its format so the interface doesn't require it at all and in order for you to easily create a wallet we created the the base wallet implementation it exposes nonce it has of course it has to have and the entry point it supports at any given point there is exactly one and it implements a valid user up so we provide you with the default implementation which verifies it's called only from an entry point [Music] we have to provide a validate signature now the base this base doesn't implement it we'll see in a minute how it is and it performs a pre-fund which means it sends back to the entry point that called it the value the cost of this transaction [Music] if we go down into a specific the sample a wallet we created now sorry simple this is a very simple wallet and for one thing i want to zoom in great this is a simple wallet contract it's a it's a base it provides a nonce it has an owner and it accepts signature only by its owner it implemented the verified signature by using the verify signature it validates the signature using the standard ec recover if you like we can have any different signature scheme we're not enforcing we don't require any signature scheme not even a length this one uses a easy recover it uses a the very very simplistic nonce mechanism which is increment by one again it's very good for start and it provides an exec from entry point which is of course how you it receives requests from the entry point it requires that it is called from the entry point to execute on behalf of the uh on behalf of this wallet which to create the request um one thing it doesn't do and of course a wallet is a probably will do it is not a proxy it works very well except that the deployment will cost you quite a lot because it's the entire contract is deployed each time you use it a better implementation of course will only deploy a simple proxy so that this contract can exist once on chain it also exemplifies how it uses a batch as you have said we can have only a single transaction per a wallet in the mempool but if you want more you probably would use a batch so we added a sample batch into this simple wallet and another example of something it can do is it can transfer it can transfer each from its own balance to other contracts and of course to execute code in any other contract let me see and okay and you provide the basic help function for ela it works only a it has admin to modify its entry point this is the edge case where an entry port has to be upgraded so of course the owner can perform the switch this sample contract is also a access a standalone account a proxy account and it accept requests directly from its owner that is you can either call it just like you would call any other contract object from your owner account or through a account abstraction where with the entry point executed as long as the entry point pace and as long as you're using ethereum as it is today there is no real difference as we said the difference comes when it when you use features like the paymaster so again if you look what it takes to be a paymaster this is the interface you have described earlier there is the verify paymaster a payment receive the request just before it gets accepted and it has a if it appears in the request it has to accept it and then has a chance to run a post operation code to do it again we create a base pay master to implement to implement this interface it provides a convenient way to initialize the entry point and to support this entry point validate paymaster itself is exposed as it is because it's a view function there is no added value we can do in the base class but the post operation is required to be called from the entry points we enforced it in this base paymaster now let's look at an example which is it's very interesting but a little bit a bit more complex of uh for paymaster this is a tokenpay master it is a token and it is a paymaster and if you have tokens you will pay for the request using it so let the the main function is the validation let's see what it does this is the validate usable it's a view function that the pay must expose and it should revert if it doesn't agree to pay and should accept if it agrees to pay for this request so it performs this is an abstract method a conversion from it knows how much this operation will cost so it knows how many token it needs to a request from the account okay it performs some validation that the the verification guys in the request is a big enough this secured issue i'll not dive into it right now now we need to check if the wallet will agree to pay for the request uh what it does it checks that there is a balance that that the token balance again this payment is a token it verifies that the balance of the of this wallet is a high enough in this a token paymaster and if this balance is enough and it reverts if it doesn't immediately balance is enough what you see here is its return value the return value of the verification is what we call a context it's something we pass after the request is complete to the post operation this is a signal from the paymaster to the system that it has some post operation to be done don't forget me after the execution i need to do i need to i need to complete the balancing of the user if you go into this post operation it extracts this context which is the it saves the address of the user in the post operation it gets the actual cost it so now it knows how much tokens it needs a to get from the user so what it does it conforms a low level transfer again this is a token so it can do it by itself from the user's account to itself so this way the user paid in token we made sure that in advance that the user has enough tokens for the maximum possible price in token and post operation after the user completed the operation we performed the actual charge now if you are think think maliciously as a user okay i will start a transaction and then the operation i will create is empty my token balance because if i empty my token balance after the operation i don't have any tokens and i will not have to pay anything the payment will not be able to charge me so we need to mitigate that now it's a bit difficult to see from this paymaster code how it is done so it is written somewhat in comments uh and you have skipped it in the first part when a paymaster runs its post-op post operation if this method reverts the entry point performs a very neat trick and that it reverts the user operation completely along with the post-op of course and then calls again the post-op of the paymaster now if you think about it the code that the user create executed was completely reverted it's not on chain so if you look at the state of the chain the pre-operation the verification the user has a balance was executed we did some operation and reverted it and now we call the post operation which means we have the user has a balance so if the user will perform this trick and try to empty its own balance the post-op will revert the entry point we'll call this a post operation again by the way with updated actual cost which is higher it has to cover for this revert and make sense okay and this and the transfer will succeed so this code it's not that complicated but this is a paymaster that works with a token there are several other paymasters we have in the sample code i don't have much time but i don't have any i don't think okay okay if you like you can talk with us there isn't one payments that we added is the ability to kind of an oracle to trust an external address and so that this spay master can trust a signature created outside of the system and outside of the network off chain and the payment will validate it and will pay based on this signature so we also think it's a cool paymaster to use and to integrate okay thank you if you have any questions any questions so yeah if anyone has questions we can uh we can go outside because uh there's already available oh yeah i will publish i will publish it about this code okay thank you [Applause] do so hello does it work yeah so just gonna wait a few minutes maybe some people are going in or out and then we start in like one or two minutes so so well i think since the talk is a little bit short we just jump in and if people stream in later then we should still be ready for the code examples and and the technical details so let's see hello i'm chris from flashbots and here's my colleague matthias and if you're happy to give a introduction for developers in what we do and how you can actually play with it and with our infrastructure so i guess i would like to know who is already familiar with flashbots here all right have you used uh a flashback protect already too i sent a bundle ever manually all right okay that's good then we have a little bit of context then we dive into more of the technical details so if anybody is interested there's slides they are online and it's linked again at the end so the talk is titled flashbots for solarpunk supercoders and it's because we share the democrat democratization values and their openness and permissionlessness and maximizing the social good ideals at flashbots so we really try to contribute to a open permissionless system where much of the value is available to the community that is very important like we really strive towards a open supporting also the future of ethereum in this talk it's um just a little bit about us flashbots which apis and services we have and then come on libraries to interact with us and then i show you a couple of code examples and there is an example project that you can clone [Music] i'm not sure if you're familiar with the background with pga wars and and miners searchers trying to extract value from the public mempool and miners doing their own things like front running and backgrounding transactions and this was having a very centralizing force and flashbots came up with some research as a basically a research collective that focused on illuminating the dark forest which means making that what is happening and what is going on more transparent with in form of writing of videos of data we have a bunch of dashboards that quantify the amount of mav that is extracted and also about how to tap in to that how to become a participant in the whole network to democratize it so that not only a very small group of privileged players have access to this but that this is a decentralized nature where people everybody if you have ideas you can just tap in and become a participant in the network and this is a very very important thing because the centralizing effects they just also compound and the distribution of the mav benefits so our goal is to maximize social goods as well there's some writings like you can easily find on writing flashbacks.net or on docslashbots.net there's a lot of background and context that you can find there things we do let's get into the more practical side we have the flashbots relay flashbots protect we have mav inspect so the relay is which basically is the central entry point for the bundles and simulations that forwards the bundles to the miners so you can use this api the api is a little bit tricky to use because you need to sign the requests there's a couple of wrappers that you can use in libraries for python go javascript typescript rust and i will dive into them later flashbot protect is a user facing service where you can set your wallet endpoints to rpc.flashbot.net and it will route valuable transactions through flashbots so your transactions will not get front run and you also have a reward protection with that you can actually disable the river protection by using protect with fast mode which routes direct the transactions without simulation to the miners so there's a if you just visit rpc the flashbacks.net then you will have a table with the advantages of both approaches but it's usually a very simple way to protect your transactions from being front run by bots from the public mempool without needing to do any any signing or anything it's like just a meta mask endpoint or whatever mvv inspect is a python tooling that automatically inspects the new blocks and the blockchain also historically to quantify mvv opportunities be it front running backgrounding arbitrage and other things we have a pretty wide range of of things that are quantified there and the data is shared on dashboard and explore.net so with that if you want to have some charts that give you insights into how the trends are developing over time this is also most of this is also open source software so we appreciate contributions it's pretty easy to jump in it's very easy to participate on open issues or pr's or get the most of these things even running locally for yourself of course we have mavgaf which is a go ethereum implementation that has a couple of additional features so you can do transaction simulations there where you can send it a bunch of transactions a bunch of bundles and it will simulate those against the state that you specify and then it returns you the value difference um for what is it warfare minor and you get a couple of additional informations about individual transactions and it's very useful for quickly working locally with the flashbots realistic we do a lot of research and collaborations there's a lot of open research the writings and specification work in collaboration with a bunch of teams and the ef and and yeah wide-ranging collaborations and also always our opportunities to contribute we are hiring as well so if you're interested look at flashbot's jobs there is a bunch of open opportunities especially for engineers plus points if you have a go experience it's a very collaborative environment i i would definitely encourage you to take a look at that if you are interested in opportunities and also check out our github repository it's on github.com i touched on this briefly using the flashbox infrastructure gives you a couple of advantages like privacy front running protection review protection block priority so the bundles they are added on the top of the block and it lifts also certain transaction size constraints so if you have like large data that you want to send through gaff won't let you do that through normal normal transactions i think it's like 500 kilobytes is a size limit so you need to do something very interesting to actually go over this limit but there is a bunch of use cases and this transaction size limit is also not applied in through bundles quick overview how it really works users send transactions to the mempool goes to the miners then there is the searchers that look at your transactions in the main pool and sleep in a transaction right in front of it that does whatever they can do to maximize their value based on on on the impact your transaction has of course there is like very quick growing segments like within a few weeks it was like 10 bots that competed against each other and this leads to a lot of transactions by boards that are in mind into blocks so here we have a the solution here is flashboards with mvvgaf and the flashbacks really where searchers do not send their transactions back to the mempool but they send it to the flashbots really they already get simulated and sends to the miners and the miners will only include those if they do not revert in the end so basically it's for also for searchers advantages because they can send and resend better and better bundles but to not get penalized by having a bad bundle actually mind and losing the transaction fees flashbots protect is currently completely excusing excluding search supports that transactions get routed directly from users to flashbots to the miners there is thinking about how to involve searchers in a non-front-running way that's coming later and we also have muv boost i don't know are you guys familiar interested in mv boost it's basically an approach to proposal separation for ethereum ii that is currently a very also collaborative project with a big part of the community and we try to think through all the challenges and get the approach that it's possible that the consensus client besides talking to the execution client can also get additional private transaction flow so there is relays that send basically blocks to mdv boost which runs as part of the validator consensus client node or instance and the consensus client can then choose which block to use if it's coming from mbb boost then it is not the transactions are not revealed only the header and the validator signs the header and only after he signed the header he receives the block payload which guarantees transaction privacy here so this is a very interesting project i encourage you like the specification is all on github as you see here flashbots slash mvp boost or if you search heavy boosting on google you will find this very easily all right then let's dive a little bit into the technical details this is the apis that we have if call bundle and each send bundle is our classical most widely used apis call bundle allows you to simulate bundles so a list of transactions and you get the information where they have rewarded how much value they provided and so on and with a send bundle you can actually send it to the relay where it will be simulated internally again and if the simulation succeeds it will probably go to the minor except of a time of very high load where there is a some rate limiting ifcent transaction is a relatively new api that we have which does not require the payload signing it's you can send a oh no it requires a pillow signing but you can use a similar api to flashback protect too um for the same private transaction you send one single transaction and it will internally get sent as either bundles to the really because the bundles they are only for one specific block so it's kind of a little bit of hit and miss if you get included if there's like a lot of competing transactions and send private transaction abstracts this that it will send it automatically for up to 25 blocks until transactions included so if you're developing and you want to trust the easy way to send transactions privately but don't have all the issues of resending and checking if it's included you can just send it to esen private transaction and of course you can also use the rpc endpoint where you can use send raw transaction that will either route non-valuable transactions to the public mempool or if it's a valuable transaction through the flashbacks really through send private transaction again so if you send it to the rpc it will use send private transaction internally the rpc endpoint is also open source software written in go so you can take a look at that also you can run it locally very easily and we also always happy about contributions issues pull request feedback whatever if you run into anything we encourage you to open and get in touch and here is maybe the more interesting thing for hackathon like exactly how wood developers what's what's the easiest way to interact with the flashbots apis depending on your programming language in go it's this flashbox rpc library maybe in python it's the the web free pi pi flashback provider if you use javascript typescript it's the ethers provider and we also have one there's also a community built on for rust and i wanted to show just a few code examples how to approach that in and i decided to use a javascript typescript because for a hackathon it's usually very accessible and you can maybe reuse the same code across backhand and front end with node.js and the browsers so i will jump into that and show live with the flashbots ethers provider so the repository if any one of you is interested and i'm sure we can somehow publish the slides later it's github.com metacris this is my username and then it's the flashbox ethers example so if you just go on github crease you should find it on repositories so i will show you now some live coding here so basically what i did was git clone the repository it's in the readme it's built on some typescript boilerplate project that like does there are dependencies and that you can bundle the code as a in node.js executable or for the browser with es build so it's a little bit outdated maybe but it is something that gets you started very quickly and that you can just install right now so it's probably easily transferable to other things but i'm familiar with that so i use that how it works is you clone the repository you install the dependencies with yarn and that's basically all the setup you need here in the source directory there is a four different main dot ts type scripts with increasing complexity and this is included from cli dot ts it's basically just includes the run method and run it or from browser so is it large enough should i make it a little bit larger like this so the first example is a very simple setup of ethers this has a hard coded girly api key for infurial so i will deactivate this in a day or so but feel free today to play with that too it's in the configuration here this is just some randomly created private keys because it's a little bit tricky how to handle them if you build for both the back end and for the browser because on the backend usually you would use a process environment variable but for the browser this is not existent you can use es build to replace these variables in the build process and that's that's very easy but um yeah it's up to you how you handle this so for the sake of simplicity i just hard coded these values but you really should not check them into code so don't do what i did here this is really for just for example it has no values g95 and some helpers and is the girly relay endpoint so in the first example it sets up a a first inferior provider gets a block number and then gets the block for this number it's kind of a very simple example and let's just run this a little bit smaller so you can run this in the cli mode with yarn cli this is also written in the readme so here it fetches the block the block number first and then the block that's it and in the readme we also have the information what else you can do so you can build it for the browser with yarn usb browser and you can add column watch so on every change in the code it automatically rebuilds if there is no hot reloading so in the browser you still need to manually reload the code but it will automatically build it if you change anything so it's waiting for changes it's all fine you open the browser test do it do that yep and here it's doing exactly the thing let's reload to see it better so it's getting the block number and then it's getting the block and then here you have the block details and it all runs in the browser maybe if you target the browser instead of an inferior provider you do like a i think it's called default web free provider that connects to your metamask so metamask can then sign your transactions and then broadcast them so you don't need inferior but this is like up to you but this shows you it's like really kind of simple to reuse the same code with some constraints in both the backend in node.js as well as in the browser in the second example in the second example we create a transaction and in the third example we simulated and the fourth example we send it to flashbacks and get some statistics so it's the same code as before it's just that we create a wallet and here we get the maximum base fee for the future block and then we create a wallet with two of the wallet address and a bunch of parameters and basically that's it so to use that you would for instance go in in cli choose main two and then you can run yarn cli and then here you can see the transaction so in the next step it's exactly the same code except that here we also add a simulating part so basically you have to choose a target block which is the latest block plus one in this case and then we simulate it which means it sends to the flashbots relay with call bundle they call bundle api the request is properly signed and then it returns to the simulation result let's see what this does so i again go to cli and just import this from main three and run yarn cli again so what do you think will happen with dummy keys exactly simulation is successful in the sense that it was simulated and the response has been received but it was of course invalid because in this empty wallet there is insufficient gas to send the transaction so this is a simulation result that the transaction itself had an error so success basically it really up to you how you want to craft the transactions or where you get them from and here finally in the fourth example after simulation if it's not an error it yeah here if it's not an error we submit it to the relay with send raw bundle their send bundle and central bundle in this provider send raw bundle means the transaction is already signed and because it's here here it's signed and if you do send bundle it will sign it internally so it submits the bundle but it won't happen here because the simulation has an error but we can comment this out and still send it anyway let's see what happens i need to import min4 what where is that 72 oh yeah simulation yeah exactly so this is here it's just a compiler error basically that there's additional apis that this does for you and because i commented out the simulation error response you cannot actually get the the result um but there is two more additional apis that's called bundle stats and user stats where you can query the flashbacks really like how did this bundle do what happened with this bundle did it have a reputation impact and end user stats for for seeing the reputation and some data about your signing key because we create basically we have two private keys here one private key for your wallet and one private key for signing the requests that go to the facebook relay and this signing key is impacting whether you will end up in a high or in a low priority queue in times of high congestion when we have a lot of traffic the high priority signing keys will get simulated faster than those with the standard low priority and it's pretty easy to get into high priority you just need some successful bundles so let's try this again and i hope i saved i probably not i need to save it's not like this so the bundle here was submitted but that it tells you here that the block that you sent it for has passed without the bundle being included so kind of what we expect here but it shows you if you want to interact with the flashbacks really from javascript like this is all that you need to do and then you can do some additional user experience with error handling and so on but this is a very simple way to get started in my opinion personally i think for back ends the go code is even a little bit simpler and more straightforward but i think that's probably not true either okay just going to wrap it up if you're interested again take a look at github slash metacritis flashbots e-first example and here you have the full code of the examples what else so if you're building applications or infrastructure services user facing apps be mindful of mev like mmv exists it's exploitable very often and it's not a great approach to just don't think and don't care about it too much it's really important like if you're a developer that you have some thoughts about how does your core your application your infrastructure impact users and and emit mvb because it is going to be exploited if uh and this can be disadvantages to users or lead to centralizing effects so if you have questions like there is a flashboard discord where there's very active discussions and it's very easy to get in touch so if you want to get feedback also on your applications about possible mav it's uh definitely relatively easy to get in touch also matthias is here so he is a one of our mov experts and he will also be able to answer a lot of questions and i'm available after the talk too so that's it i think we rushed a little bit through it but if you want to collaborate easy just try and discord read the docs join github and if you want to build something i hope you have a lot of fun thank you [Applause] so maybe we have a few minutes for some questions any what is on your mind all right then i hope you enjoy the hackathon and happy hacking do [Music] [Music] do do do [Music] you 