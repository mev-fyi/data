good morning good afternoon and good evening everybody my name is kartik i'm one of the co-founders of eat global and i'm super excited to welcome all of you to the scaling ethereum finale um all of you are watching this thing on eatglobal.tv so for those of you who are looking at this interface for the first time we designed something specific for our events so you can all experience um this event with the entire audience and see what's happening with the stage at the same time so uh for all of you who are interested in chatting back with us or speakers or have questions for the projects we're going to see today i hope that you all log in and ask your questions away and also um for everybody who's going to participate in any of our chats today we're going to be giving out a poep nft token so uh please be sure to say hi so scaling ethereum is an event brought to you by each global and and for those of you who don't know what each global is it's an organization with a very simple mission our goal is to onboard thousands of developers into the web3 ecosystem and we do this by running hackathons and summits all across the world online and in person scaling ethereum has been a three week long hackathon that started early april and we're wrapping up the event today by showcasing what came out of the whole hackathon for this event we had over 630 developers and hackers participate and build really cool projects taking advantage of what's happening in the world of scalability we hosted four different summits and had over 1100 attendees who watched some of those amazing talks and these hackers participated from 58 different countries spanning 18 different time zones we had a a very diverse set of people joining in from all across the world and uh we're super excited that we were able to not only include them but also bring on their diverse perspectives and and see what matters to them as they built some of their really cool projects we we did four summits um the first one we did was on what's happening in the world of l2s which was our scaling summit then we spent a whole day on talking about the merge and the transition for how things are going with each two then we he'll say the summit about zero knowledge and applications of zero knowledge on uh with respect to scalability and uh just last week we did a summit uh and then co-hosted the mev roast with the flashbots team just talking about how mev uh is going to change everything in the world of d5 and scalability so for this hackathon we had over 100 mentors and 28 companies this was a massive event with so many people from our ecosystem participating and i want to give a quick shout out to everybody who made this possible i want to especially thank arbitrarium optimism zk sync and starkware and then scale labs bloopering the graph seller connext polygon raiden zika swab taurus compounds grants program protocol labs the unit swap grains program ave superfluid chain link a new cypher covalent zapper the one inch team teller secret network the ethereum foundation ipfs main dp near protocol diversify wearable columnist cap and ens all of these companies participate at this event and really helped all of our attendees not only build interesting and cool projects but also help them really get to where they wanted to do from a technical standpoint by being mentors and unblocking them for their projects all in all uh we're also giving away over 250 000 in prizes for all of our participants today and for those of you who are who are eager to know which prizes you've won uh we'll be announcing that uh very soon right after a few demos so this event has been absolutely phenomenal um it's one of the largest ones we've ever run and we're just super excited that we were able to get this amazing and massive crowd to care about and build on top of and experiment with what's happening with scalability on ethereum we had 133 projects come out of this event and all these teams submitted their projects last sunday about five days ago and we spent the first few days on earlier this week going through and judging all these projects and from all of that i'm super proud to announce that we have 12 finalists who will be showcasing their uh their projects here today live and i can't wait to have all of you also check out these teams so in no particular order uh we have kangaroo alexandria the lab rats zenith hydrophile cairo dap devolution nft puzzle thing x fill eat survey flaunt and ray tracing these are our 12 teams that are going to come on and talk about what they've done and how they've used uh the world of l2s and scalability in in their projects and as we were looking at what some interesting things were for a lot a lot of our teams especially these 12 we notice that there are really interesting categories around applications there's infrastructure and protocols and then there are developer tools so what we've done here is we've we've categorized them in in subcategories and we're gonna go present uh and showcase these projects by by these mini groups and the way it's gonna be structured is that we're gonna have three teams come on at a time and they'll do back-to-back presentations and we'll do some q a with with our judges for comments and feedbacks and questions and before we kind of jump into uh these these teams i want to quickly make a point and say that just because your name is not on one of those 12 uh list items it doesn't mean that you were not good enough or or there was something wrong with your project or something didn't work out uh the 12 teams here are showcasing some of the most interesting and creative hacks from all of our process but it doesn't mean that uh everything else was not great uh this event and the entire goal for our events is to really give people a chance to experiment and see what's possible and i want to especially thank 120 plus teams here listed that um it really takes a lot of courage and time and dedication to continue for a three week long event and build something cool and build something just to learn for the sake of learning so i really encourage all of you to continue working on these projects and as you build them or as you have more questions even after the event ends uh you're all on our discord you can at-mention us or our mentors or anybody here if you need any help uh whether it's being unblocked on a technical issue to uh you want to really show off that now it's finished we'll be happy to really support you in any form and we really hope that you continue building uh everything you've done over the past three weeks and for those of you who are curious um you can check out every single project that came out of this event by heading over to showcase.educable.com we just refreshed this whole ui i'm super happy to uh to announce this for the first time for all of you to check out you can see every single project here with details for what they've done who built it and what they're using under the hood so as we jump into our very first set of demo i want to introduce the the five amazing judges that will be here today talking to all of our teams want to welcome ben jones from optimism we have a vu levy from starkware we have daniel goldman from arbitrarium with angela lou from zk singh and we have hebrew angel from scale apps they'll be here with us for the next two hours uh really chatting with all of our teams and uh and we'll have a great time so without further ado i want to welcome the first category of our demos uh so the first category is web3 applications especially uh really good cool projects that are trying to get more consumer adoption with crypto uh so we have three projects coming on we'll have kangaroo and then we'll have flaunt and we'll have the nft puzzle thing they'll come in back-to-back they'll present and then uh we'll do a q a so um if everything is good to go i'll welcome kangaroo to come kick off today's finale with the very first demo kevin take it away hey guys um sorry i was a bit confused there because it did mention kangaroo first but uh is it me first oh sorry i i misremembered the name it is i did mean kangaroo justin good catch hello okay welcome everyone um welcome to our project kangaroo this is our layer two discord wallet that we made for the scaling theorem hackathon so who we are um i'm justin and i'm from the university of waterloo located in canada hi i'm will i'm also from waterloo and so what's currently the problem well existing discord wallets have issues if any of you have tried tip cc um we'll tried it recently and he wanted to withdraw five dollars worth of dmt unfortunately it costed 117 dollars and clearly something isn't working out so our solution is layer two wallets on zed casing that have reasonable fees so these fees are up to a hundred times less than current layer one fees and it's also good for l2 onboarding so it introduces discord users to layer two and it's pretty easy to use it's intuitive all right now for our demo all right so um we have our discord bot set up on this server so um for example i i can use these discord slash commands and see all the different commands i can use has a really nice ux i can for example see my balance i can see that i have eath die and bat and for example if i wanted to send some tokens to justin i could do send and i have all these like auto fill options here so i can um send one die to justin oops wrong person justin and then if i do confirm no it'll preview the transaction just so i can see what i'm about to do so i'm going to send one die the fee is pretty low which is great and if i do that again so if i send one die to justin and i confirm yes i will take some time send to the transaction and if justin does slash balance again and be able to see he has 15 die whereas before he had 14 die awesome that's great so let's head back to the presentation all right so how does it work so pretty much we have a rest api set up waiting for um interactions to come in from discord and we use the user's unique identifier to get a wallet using ethers.js and the zk-sync sdk and based on the command that they gave us we call a different wallet function and display the right output a nice mesh message ideally it's pretty simple but it's effective at sending transactions oops all right so what's next for kangaroo so in the future when z casing adds smart contracts we will ideally have a smart contract in adap integration because um our because kangaroo uses real zk sync wallets in the back end and maybe we'll add some new l2s in the future so kangaroo is actually live on mainnet i stayed up last night getting it to work um so you can actually add kangaroo to your discord server right now at tiny.cc kangaroo bot and thank you thank you so much for listening to our presentation awesome well justin that was a really cool quick demo and uh super super useful because we're seeing so many communities now form on discord so i can't wait for everybody else here to comment on some of their questions and reactions but uh before we do that um i'll we'll do the other two projects back to back so uh kevin now let's go to you and now we'll see the fontana yeah let me go ahead and just share my desktop alrighty can you guys see that okay yes all good yep great yeah thanks kartik um yeah so i'm going to be walking through the hack with something called flaunt and flaunt helps you answer the question of so i'm just going to start a little timer for myself here awesome i just bought an nft so now what what do i do with it um so before i jump in yeah my name is kevin bluer based in austin uh so let's dive into flaunt really what it's all about is enabling nft owners so people who've spent perhaps just their small fortune on an nft uh to create derivative works new pieces of art new memes new things from these assets from these nfts that they already own cool so why would they want to do that a number of reasons let's have a look firstly monetization so again you may have spent a lot you know some of these nfts aren't cheap um and what you can do with flaunt is create new pieces of art with that or new works perhaps you might get a signed copy whatever and as you'll see in all of these screenshots you're seeing here all these images are created within fluent and we'll see a demo in a moment another reason uh is gifts for your friends family co-workers the community um let's see an example there to my mum more monetization so you might want to just create kind of custom copies uh or you know same copies snapshots of the nft to kind of license downstream and get you know some royalties going for these pieces that you you already own and then lastly for the for the meme for the love of memes i'm a huge fan and i love how it's kind of enriching our culture in kind of quirky ways so you know as you'll see that's another kind of byproduct of this tool but wait you know what about the price of gas um that's pretty prohibitive right now on l1 um and would hold something you know verbally hold something like this back so l2 is to the rescue as we'll see cool so let's jump into a demo so it's available at flaunt.wtf the first thing you'll see when you come in is this ui and you can load either a sample nft so you can just pull one straight and we'll do that in a moment you can also load directly off an existing contract address and then the corresponding id of the nft this is the contract address foundation if anyone's familiar foundation it's kind of neat because you can kind of randomize that and just pull one in and experiment with it and so on or of course paste in a contract address of an nft contract that's been deployed by yourself or you know anywhere else for ease i'm just going to put one in one of the samples you can see here and then let's go ahead and customize this a little bit so it's kind of cartoonized doge but let's bring in the sword let's bring in some laser eyes there on top of the glasses let's bring in a troll see if we can move that guy around on top of this doge watch him all over the place with this live demos um bringing some text so scaling for the win and then finally let's just kind of autograph that to kind of customize it all the more so that's a custom piece off of something we already own and now what we can go ahead is save this and within within the application on the dap you can actually save it directly of cooler doge for the win let's just save it directly to ipfs it's kind of neat and you can see just to prove this isn't smoking mirrors you can see that it's just loaded up there and then the corresponding metadata that's there uh two things you can do here is preserve it with far coin directly so in this case i'm running far coin flavored ganache locally so kind of automatically create a storage deal um or in a kind of simulated manner right now or preserve it with a pinning service like pinata either way it's currently on ipfs now what we can do is kind of getting into the cool bit is go ahead and mint this now if you're flush with ether and you don't mind spending the gas you can mint it directly to the l1 um but in most cases you probably not want to gonna not want to do that and then two l2's that it supports right now are both uh scale um so you know this will toggle my metamask directly to scales network and it's presuming i've got some sk i can go ahead and mint that uh what i'll do in this case is do it via arbitrom so i've used uh taurus in this case and you know they're an open login provider um i've also kind of pre-set some stuff up here to i've moved over some uh l1 eth to the arbif um you can see tiny little balance there um and you had mint and that kicks it off it does take a moment so just in the interest of this demo i'll kind of skip over that um and then what you can do is go into the gallery and you'll see it uh show up here um on the corresponding l2 this is like probably use a little bit of love but uh you get the idea uh and then oops let me just move this zoom window out of the way uh you can go in and see the on the l2 in this case um this is kind of a funny one troll versus troll go ahead and withdraw that and then click you know initiate withdrawal and then you know depending on the l2 obviously there's a bit of you know delay and getting it back to the l1 so you can initiate that obviously super time time and then this is just the view that you would see on the l1 uh find a funny quirk someone just created one off the back of the tweet the first one and then someone tweeted at me with this so this is something that someone's already created um just to finish off let me just go back to the uh final slides uh if it's kind of what's next this you know what if we kind of built this out going forward support different media types more l2s you know want to explore them all and then potentially integrating with marketplaces and creators and so on uh so that's it that's a demo so thank you to kartik and youth global team and everyone for listening and scaling for the win you so much kevin that was awesome and uh we'll do our last demo for this group and that is nfc puzzle thing and i'm sure we'll get a flood of questions coming in from everybody here so you're ready my screen uh cool um cool so hey guys my name is hardik i'm from team nft puzzle thing so we're a team of three college students spread across canada and india and we built a proof-of-work uh nft-based jigsaw puzzle game so the goal of the game is that players are competing to solve one-of-one nft puzzles and the way they do this is you have to buy loot boxes which will give you random puzzle pieces you can swap those pieces with other players through our nft marketplace or through openc if you want and the goal is to be the first one to win that puzzle so currently we have a metallic collection drop going on there's a limited number of metallic puzzles going on and let's see how it works so if i head over to loot boxes the first thing i want to do is buy a loot box and there we go so we generate randomness with chain link vrf for the pieces that are contained within each loot box and once the purchase goes through uh it will show up in the loot boxes that you currently own so i'm going to hit open and [Music] it's going to tell me the 10 pieces that i received from this box so this can take a little moment in the meantime once you receive these tokens oh there we go actually so we received these 10 puzzle pieces from this loot box and once i've received it what i can do is i can head over to the marketplace there's a few different listings on the marketplace right now i can also go on ad listing and select the pieces that i want to swap for some other piece that i want to receive and click on add listings um and i can also go to my listings select a few of these if i want to delete them for example i've already got this piece so i'm going to delete the other ones and i can see my swap history for what i've bought and sold in the past so if i head over to my pieces now actually i have it here so if i head over to my pieces now it's going to show me all the pieces i currently own and the expired pieces which means the puzzle for these pieces has already ended and somebody already claimed this nft um so i have a bunch of different pieces i unboxed the entire morning and so let's head over to puzzles now so these are the four puzzles that are active right now so if you go to og vitalik and i i solved most of the puzzle earlier you have this one last piece i drag and drop it in place i do the recaptcha to prevent bots from cheating at the game and i hit verify and there we go verify successful i win the puzzle um so on my winnings tab i have an unclaimed prize that i can claim to receive the actual nft i hit claim confirm and while this gets mined this is acclaimed nfp i was testing with earlier so once it oh there we go successfully claimed and i can view it on opencv if i want so it takes a couple minutes to sync so i'm just going to show the old one there we go um and yeah we're live on polygon mainnet right now and for the first 30 minutes we're giving away free matic to every person who goes to nftpuzzlething.com right now to play our game so it's only valid for 30 minutes so check us out and join our discord for uh to like if you have any questions or to provide us feedback um yeah really excited to have you play the game and uh just one last thing so og vitalik got replaced by chad vitalik now so we have five puzzles left go and claim them as fast as you can thank you oh actually sorry one more thing for future plans we're going to be partnering with some artists to do future collection drops so once the vitalik collection is over uh we're going to be partnering with artists to create other puzzles and we're going to be dropping these collections usually once a week or every two weeks depends on how long it takes for people to claim them but yeah that's the project thank you amazing well thank you so much and uh with that i'd like to ask all all other two teams to turn their cameras on we'll kind of jump into a q a here and i'll i'll kind of start off by just making a an observation and i'll then i'll let all of our judges sort of uh go in i just realized that all three of these are live on mainnet they're not experiments you can check out the website you can play this right now and uh to me this is amazing like you can it's not like a dream it's it's here scaling scalable high frequency solutions are already live so uh with that in mind i'll see uh what comments and questions we have from our judges anybody can jump in can i go for it just you can directly uh go a great uh great uh project i have uh two questions to kangaroo to the kangaroo guys hi yeah um so i'm kind of curious if you have in mind any other applications except payments to to run on discord um that's something that you've been thinking about yeah we're definitely interested in um deploying some interfaces to like some popular dapps because uh we we do use real zk sync wallets in the back end so it could definitely support that if we wanted to do some integrations with popular dapps very cool um the other thing that i wanted to know is if you had in mind anything about security because obviously when you interact with wallet most of the time there is something about identifying the user and um is this something that you um you've been thinking about uh yeah so right now all the security is done through discord unfortunately discord is obviously a centralized platform so all all of your your wallets are sort of accessed in a centralized way we're definitely investigating solutions to make that ideally a little bit more like user custodial but um we're looking into it for sure but but don't put too many too much funds in a centralized platform like discord if you're not sure about it thank you well so i just want to make a quick comment to will and justin uh the livestream can't see you because your cameras are off so if you have the ability to turn them on they'll be awesome and um well we figure that out and i'll let anybody else ask any other questions or comments just can i go yes absolutely easy i'll be yourself and start talking no no need to i do turn my turn i'm just trying to be like oh just like mindful of the other judges but i will just go um so congratulations i really enjoyed all the demos it's very fantastic to see and like be with the hackers so um first of all kangaroo like if we start with the kangaroo um i lead the validator program at scale so and there's like we always just try to incentivize the community and we always use discord i want to admit discord i think it's a cool idea and um just to just incentivize in a very like easy way on discord so that we can just send incentivization to the community members um my question will be is that um you said that like it's less fees how did you make it less peace yeah for sure uh we're using um instead of using a regular ethereum wallet we're using uh zk sync so zk sync is uh one of the layer two networks at this hackathon and um uh it uses zero knowledge proofs to um i guess consolidate blocks of transactions together so it's a lot cheaper awesome can you add scale as well sure um it's awesome um so my other um question thank you kangaroo team it's it's very nice to see it the demo um the other one is flounce and ft puzzle there also are winners as well at scale um it was so fun to see them um like our team really liked you your guy's solution so i will go with the flop first and um you are just having so much fun was it like what was the best thing that you worked on it's like it's such a fun project did you have fun did you learn something new i'm just very curious yeah and a bunch of fun um i think i made it more fun i was more serious when i started with this um as a hack and probably more like yeah let's just have more fun as we go and and that's what i think i love about the space as well is it's everyone's kind of laid back and it's you know so many things um yeah and i learned a bunch i mean my reason for participating was to get dive into l2 that's the whole point of the hackathon so um and definitely did that the only kind of regret i had was i wanted to kind of go deeper on as many as i could and you know obviously one can't do all the things right so um just landed on a couple but uh yeah no it's been great yeah that's uh that you can see it i will definitely just like send it to my friends and play with super fun um and then the last one is the nft puzzle that's our winners as well um it's just like i'm very bummed that you edit jack's uh our ceo's picture but not mine but um hopefully they get a picture of me um it's very professionally made and um you guys use so many solutions like you you use so many like scaling solutions like polygons scale i think arbitrary you i think you have chaining you have graph how did you just make it work it like tested and i put all this together and i made it work for everything itself and also like did you see any challenges while doing that did we see any challenges is an understatement um it's it looks very smooth on the demo and in the video but i can't even begin to explain everything i didn't sleep i haven't slept in the last three days it's just last minute issues but um it was a really amazing hackathon overall we have been going very hard to integrate all of these things including like at one point we were running our own chain link nodes we were running our own graph nodes because things were slow or things were um having some issues and it's just been a lot of crazy learnings and yeah let's get chain link on scale and we'll get it on scale mainnet as well right let's do it we are working on it no it's it's brilliant it's um i will love it and uh thank you so much for like working on it and just providing us like fantastic solutions thank you i really want to see a collab between these two nft projects i feel like i feel like they can really go hand in hand right like kevin you've got the derivative works that are like different little pieces of the nft that you're creating and then nft puzzle is assembling pieces of nfts like you guys should collab i was just saying this yesterday yesterday when we were making the vitalik collection with the laser eyes and everything i was like you know we should just use lawn to do this um so it was like yeah like next collection with blonde yeah flaunt your puzzles um i have a question for the flaunt team um the um first of all all three were awesome so great work and congrats um i was curious and you may have said this so forgive me but um in terms of the um the integrations with arbitram and scale um were you guys minting the nfts directly on the l2s or did you guys use some sort of bridging system uh directly on the l2 in this case um yeah and it was just me by the way that you said that yeah yeah yeah i don't know um yeah well via uh gosh taurus so i use taurus and you know some of their integration work and then directly on on government iv basically yeah um i have a question for nft puzzle thing i'm curious how you guys handled all the little pieces are they all nfts and then you sort of are you like burning all of them and then like doing an another one or like is it sort of there's a new i know there's a new erc standard for nfts being able to hold child nfts yeah um we didn't use the all the pieces are 720 ones themselves um the main goal for having them be 720 ones was for easier trading on the marketplace because their marketplace like actually just swaps nfps between players um and like one of our immediate goals after this hackathon is to add bundled swaps like trading like two to one or like five to one for more valuable pieces for whatever reason um currently we only support one to one nft swaps but yeah and like a side effect is also you can trade these pieces directly on openc so some of these expired pieces might end up having secondary value for maybe if they're one of the first drops in the collection so even after the puzzle is finished maybe some of these end up retaining some value so yeah i want to relay a question from our live chat audience for a kangaroo and the question is uh it's it's more of actually a suggestion for feature it's official request uh uh people would like to see guinness integration for for discord handles because that would just make everything a lot easier so i don't know if that's on your roadmap but it seems like it'll be a really cool thing to implement yeah yeah for sure we're definitely open to feature requests um i can add that as an issue on our github page right now this is this is turning into a bd meeting this is great that's awesome um so there's any other questions uh please feel free to uh to ask away if not we can check out the rest of the demos so i'll give everybody a one last call on any comments or questions looks like we are all set so well kangaroo flaunt and nft puzzle thing congrats again for uh for being the first three to demo and being our finalist uh you are welcome to either hang out here or uh or follow us on global.tv and watch the rest of the stream we'll be announcing everything closer to the end in terms of a bit of prizes so um stay tuned for for that and uh with that we are ready to move on to our next three demos so the next category is protocols and infrastructure so we have three projects in this category we have zenith ray tracing in next fill we'll kind of kick us off with uh the demo for senate and then we'll have the other two come in and we'll follow the same format with three back to back demos and three and a group q a so i'll have a let ben matt and ed kick us off with the zenit's demo ok awesome hopefully you guys can hear me now and also see my screen yep great so introducing zenith your gasless gateway to l2 my conspirators were matt solomon who built the flashbots integration ed misurik who built the front end and myself ben defrancesco who wrote the smart contracts we're all engineers at scope lift a crypto and web 3 focus dev shop we built zenith your gasless gateway to layer 2. zenith lets you move your tokens to any layer 2 without spending your precious eth on gas it leverages flashbots to get your layer 2 entry transaction mined for zero gas and in the background it swaps some of those tokens on uniswap to compensate the miner now zenith is compatible with any network that lets you bridge erc20 tokens up to layer 2 via some kind of mainnet contract call which turns out to be most of the networks so how does it work well as i mentioned it uses flashbots and if you're not familiar with flashbotch it's flashbots it's a system that allows you to send a bundle of transactions directly to miners who then include it in one of their blocks for zero gas now one of the transactions that you include must pay some ether to the miners as compensation for including your transactions since they're not getting their usual gas fees this system is usually used by individuals who are trying to avoid front-running attacks if they have a valuable transaction that could be visible in the mempool xenith though uses flashbots for a different reason and that's to provide users with a better experience by pairing your l2 entry transaction with a swap and bribe to the miner zenith lets you move to l2 without having to use or even to acquire ether to get your l1 tokens onto l2 so this is useful for a number of things including things like easier onboarding let's see a quick demo of how zenith looks and works today so here is zenith as it stands today we'll take a look first at the gasless l2 entry which is what we were just discussing and pretty straightforward you can choose the token that you're going to use choose the network that you want to enter the amount of the token that you want to send and the fee that you're going to swap and bribe to the miner and we just have some default values here that we've been using for testing and demoing now i want to show you something else which is this gasless token transfer this is something we realized we could also build with zenit's capabilities again you can choose your token but this time you just pick a recipient and the amount of the token that you would like to send and the fee that you would like to pay with the token and then it will allow you to send your tokens to a user without spending any eth on gas just for the sake of giving you a sense of the experience i'll fire one of these transactions off on gurley and you'll see that i'm being asked to sign these messages in metamask it's giving us this warning because right now metamask does not support the east sign transaction rpc call and so we have to use a slightly hackier method to get the signatures that we need and then send them over to our proxy relayer software um the uh we're hoping that metamask will support this in the future and provide a better experience so those have been sent off to flashbots and uh they probably won't be mined before we get to see them so i'm going to go ahead and show you a transaction that we did mine on mainnet uh or did get get mind on mainnet a few days ago so here we're moving one die into zk sync so from mainnet to zk sync and as you can see we're spending zero of our ether on the transaction to do so so this is a real transaction on mainnet that was sent with our software and allowed us to enter with tokens onto zksync so what's going on with zenith well as you just saw it does work on mainnet as i mentioned that transaction was a real one that moved real dye onto zk sync without using ether in the next one to two weeks we're hoping to productionize the proxy relay software clean up the front end and just generally get the software ready and available for public use but there's actually more here because as i've also alluded to we kind of realized that zenith is not just useful for moving tokens to layer two without touching your ether zenith really lets you do anything with your tokens without touching your ether and as you saw we've already built out the functionality for gasless token transfers and over the coming days and weeks we think that we can build a lot of other valuable defy use cases we think that there are broader applications for zenith in the ecosystem we already mentioned easy onboarding from fiat using stable coins but it also enables things like defy investing without triggering taxable events on your ether holdings it could also be used for example to rescue stuck funds after your private keys have been compromised in some way and really anything that you could think of building with generalized gasless account abstraction can be built with zenith because that's really what we're providing here so that's zenith we're excited about it we hope you are too and thank you to everyone at ethglobal for yet another great hackathon experience thank you ben and team um this was awesome this just blew my mind when i saw it first a couple days ago so i'm sure there's going to be tons of questions here but uh hola i'll let the next team present and uh and that is ray tracing so we're just in the middle of promoting everybody from this team onto our zoom and uh as teams move over we'll let them present the demo so we can see everything but i think to master muted there we go yeah all right sorry so the if to any view of liquid staking from the team ray tracing so the team was composed from three different teams of flashbots nethermind and slido so the five people on the team are artem from lido p2p edgar from flashbacks uh jackie from nedermind who cash from nethermines and myself from flash belts and nethermind and the team is truly global coming from poland russia uk us combining different time zones when working together so the main thing about the mev in in ethereum 2 is is that it brings the opportunity for validators to greatly increase the annual revenue so early simulations of how mev would work in ethereum 2 post merge showed that the validators can get 70 percent increased revenue and we can see here the curve in orange that shows depending on the number of validators how much more revenue they can get if they enable the minor extractable values of the arbitrage money uh to flow to validators if they accept the network and what we have done is we suggested a solution based on the existing flashbot solution with the mev searchers that are capable of finding those arbitrage opportunities with mev on the neck and combine the bundles of transactions send them over the relay to the ethereum one client the same way as it is now on the network and then whenever ethereum 2 client for the consensus layer in the merge post proof of stake ethereum asks for the block to be constructed that block will include transactions that will pay to the smart contract that will later redistribute this uh tip from flashbots between the ethereum one node operator it's taking pull and validators and that part is handled by the lido liquid staking distribution and what will be the next steps is providing any decentralized agreements between the validator stakers because now for simplicity we're showing just one third of the splits going to each participant and also think of gas optimizations now each block would require around 150 000 gas to distribute the revenue and let me show you the demo which is infrastructure demo so it includes lots of console um output and what we see here is the running and nethermine tethering one node and it's listening to the messages coming from ethereum two node and just to explain you quickly what happens here the ethereum one node receives messages that ask for the block assembly from the tacho node in ethereum two then nanomine builds the block using the flashbots delivered mev bundles and it adds that block to the consensus and then this is being proposed to the network voted on and if it's included in the canonical chain then uh practically the light pre smart contract and the lido smart contract distribute those payments and let's see test travel transactions that show you the operations of such mev distribution so what we're doing here we first set something that has to be set once which means that the coin base on ethereum one says where the money should go whenever it receives the payments uh and these are these two uh addresses set then mev bundle comes and includes 0.001 if this is paid twice actually and goes to the light free smart contract that light pre smart contract then makes the payment to the coinbase and staking pool and the staking pool itself at the end distributes that payment and that was yeah sticking poll receives the payment and distributes this later to the node operators of ethereum two nodes and the stakers on the liquid staking network and you see at the end there is a coin base and all these staked if tokens that were distributed for the stakers it's distributed via burning of tokens for the node operators it's an iteration over the pool operators at shortlist and all of that was going on the live ethereum one ethereum two network oh yeah this is all fine actually and thank you so much amazing i yeah i just wanna i guess point out that scaling is just not all two you can actually scale something out here too so uh that's on a really cool demo and uh we'll have x fill the demo next uh so david whenever you're ready we'll uh we'll have you present and then we can do a group q a all right hey all right rxville just set up here cool all right hey everyone i'm david goldberg and i'm mark and we're located in the east coast us and we've built exvil which is a protocol an sdk for instance withdrawals from layer 2. so you can sort of think about xfill as you would the feature on venmo for instance withdrawals so on venmo you can do you can pay a fee and get your money available instantly or you can wait a few days to do ach transfer um and now with the rollout of optimistic roll-ups um you know there's a huge push by different d5 protocols to get people over to layer two solutions like you know arbitrary optimism um however you know there's this seven to ten day withdrawal period uh which is a huge hurdle and uh we've done some market research we've talked to a lot of people who have been had the chance to go over to l2 and it seems like this is one of the biggest uh friction points which is you know i want to have confidence that i can quickly get my money out of l2 back to l1 um you know if i need to you know a couple examples would be i want to take some profits get into my bank account or you know maybe i want to withdraw but uh while that 7-10 day window is happening maybe the market tanks right so there's there's a lot of like friction there and so we wanted to to try to resolve that um there's three main parties uh that you know our stakeholders in our protocol so one um are the withdrawers so people who are on l2 i'm trying to withdraw from l2 and go back to l1 two are the liquidity providers so these are people who are coming in to provide liquidity in exchange for fees that are um you know basically they provide liquidity to a pool and then those fees are split by the liquidity providers and then third is the depth protocols themselves who want to build fast withdrawals into their dapps that they're uh have running on l2 so i'll flip it over to mark to talk about how it works yeah so for this hackathon you could think of you know three main components that we've built we built the widget which is kind of like the i'll go over next it's like kind of like the uh you know the white labeled um kind of javascript widget that you drop into the front end so adapt developers can easily put that into their dapps so and kind of like wallet connect where you have consistent experience across apps and then uh the liquidity provider dap which is obviously the interface where you know people can provide liquidity to the pool and the protocols the smart contracts the the bridge communication the oracle stuff like that so let's dive right in so here is the widget on the left side so you know simple javascript react widget it comes with like a front end so go through a little demo here you can basically select your token that you want to withdraw draw out of layer 2 and you would select the recipient address you would you know calculate a fee in the amount of that token that you would receive on layer 1. so you'd sign this transaction here and what we if you see on the right side here we have the flow this is the layer 2x filler who's interacting with the widget basically sends a communication to the bridge says okay here's a fast withdrawals happening communicates to layer one which then um communicates to the oracle once the oracle verifies that it's a valid withdrawal and checks the state of the lawyer two chain it then disperses the funds on layer one for the person who x filled out of layer one minus the fee that gets split up amongst the liquidity provider and the proxy contract here and then obviously the liquidity provider gets the l2 asset as well so if we go through a quick tropical test here this is just a simple example of the oracle we've used teller oracles here and they're basically verifying the state of the l2 chain and this might run a little bit but it's a basically a simple you know check of the state and the with the withdrawal id to make sure it's a valid withdrawal so then you could skip that seven to ten day waiting period assuming you trust the oracle and then so here's an example of the liquidity staking interface um this is a sample interface right now it's a flat fee for the hackathon so you get like a five percent fee of the liquidity that's um of the asset that's been x filled split amongst your share of the pool but going forward we'd probably make this a bit more customizable where you could actually set your fees kind of like a limit order book type situation obviously you can deposit and withdraw and when you withdraw you can take all your funds out of the pool along with your accrued fees yeah so as far as next steps goes and what we work on in the future um so we want to turn into a marketplace kind of as mark alluded to so uh makers like the liquidity providers can set you know here's the fees i'm willing to accept for you know providing this instant with liquidity and then takers uh also known as x-fillers or with jars can say you know here's what i'm willing to pay to get my funds back to l1 um so kind of market forces would dictate you know what what are people willing to pay um and where should the fees be um you know the other piece that's interesting is similar to like one inch you could think about like what's the best path forward to get my funds back to l1 so that's an interesting thing we'd like to explore and then um yeah we definitely believe in decentralized governance so we think you know building a community is really powerful and one of the best ways to do that is through a governance token so we'd probably have something that people could use um for for those types of things maybe earn additional yield for providing liquidity um and then uh we we do see this being bigger than just l2 to l1 we see a similar model working basically cross chain so you could go from you know to and from any chain uh with a sim similar model but we think l2 to l1 is the best use case to start with and focus on just because there's like i mentioned earlier desperate pain for people who are you know hesitant to go to l2 just because there are there's some questions around withdrawing and how easy will it be so that's it on github oh and uh that's it for the demo thank you mark and david so at this point i'd like to ask all uh three teams to turn their cameras on we'll kind of jump into our q a um a lot of interesting themes and topics here from mev to instant withdrawals to uh eats too so who wants to go first i have another collab request i want x-fill and uh zenith to to sync up so that the fast withdrawals when you get paid on l1 also sends a fee directly to the miner that's i just want the collabs are too strong in this grouping all right let's make it happen yep um i i think i will just like ask to ex-fill because um i think that's very interesting and a couple of things i didn't understand but um i think like i kind of understood but i just want to just um get your uh get the information so um how often um can you do um the transfers from l2 to l1 well it depends really on the um the oracle um so right now we're using teller oracles i think it's like i don't know less than 10 10 minutes probably even less than that now um i think it's you're basically waiting for that state to be um validated from the layer 2 chain and then basically when that happens you know the the liquidity is you know the transaction is sent in the liquid of these mines so are dispersed so maybe i don't know 10 minutes or less got it um it's very cool and then how for instance how do you handle um um is that the verify uh part of your solution how do you verify so for instance i'm trying to transfer my funds and it's like 100 funds and at the same time um it's like i'm transferring to l1 from l2 and then like i do not have enough funds for instance like how do you handle not enough funds like or how like do you have any plan for that okay so yeah so basically our liquidity pool is a shared pool of a certain amount of you know liquidity so if basically you have to check that balance on the pool to make sure you're not trying to withdraw more than than is available in the pool so i think there's kind of there's there's a limit uh check there just to make sure you're not going over a certain percentage i'm sure there's a ratio or it'll fluctuate the pool if you withdraw too much but yeah we have to find that sweet spot very very cool yeah very very good and um i definitely agree with it ben uh there's like i definitely see a collaboration with two teams there um and um yeah i i have that and i will let the other gen i have actually couple of yeah go ahead angela okay um i have a question for zenith um i'm really excited to see like a lot of d5 apps like for example like making a swap on uniswap you don't need ease to do that and there's like so many defy apps and i'm wondering how like you guys if you guys have a plan for like scaling horizontally that way because i know that you built like custom ones for the onboard to l2 and then the token transfer but can't really build it for every single one you know yeah so um matt if you have any thoughts feel free to jump in so i would say like the easiest road is for us to start like assembling uh custom transaction bundles but like you said that doesn't really scale in the uh across the immense amount of different applications that exist so i think like the holy grail would be like some kind of system that allows you to sort of assemble uh contract calls yourself and you know the same way that you would just like interacting with the contracts directly um obviously that would be like a bigger lift technically and also i think the biggest lift there is actually the ux and how to do that well in a way that users are going to be successful in assembling those transactions so i think short term it's going to be like custom integrations long term tackling that challenge would be interesting yeah and just uh in terms of that long-term solution you could look at things like pool together has like a proposal creator for governance where you can kind of go transaction by transaction and they'll help you pick out your contract pick out the inputs et cetera i think gnosis safe has something similar so you can imagine something like that for generalizing it well thank you i'm really excited on all three projects i was just going to add something on top of that for zenith it seems like i was thinking maybe like a more um a more like low-hanging use case to provide a nice ux for is just like um consolidating multiple accounts into one or breaking up and even doing some sort of like utxos privacy sort of thing is that something you guys have thought about honestly no it's not but now that you say it's a great idea and i think it is uh a good example of like we think there's a lot of general uh general use case for for something like this yeah so for then if i just wanted to comment it's not really a question but there are the way i feel it worked is the way i use uh layered to applications from time to time the one that do exist um it's often the case that an application uses a very specific rc20 and then you want to do something before level one before you onboard to layer two and it's often like something that creates a bad ux um for example um we have the ydx it's an application that runs on top of starcraft and it only uses usdc and most people well at least i'm not the kind of users that hold tonsville decent it creates kind of mix because i have to take my ears transfer to usdc keep submits for gas and then send it to the layer 2. and i think the layer 2 experience is already need help so that's kind of that's the kind of thing that i could see like quick integration for your app already today i think that something could be very very useful it's not a lot of work probably to integrate that um i'll show the question for the x field or maybe a suggestion or let's see if it works um did you guys were also considering like well faster draw is a very specific use case for a transaction from number two to layer one but i could imagine like i want to do something with my funds on there too directly on their one and then maybe i want to get them back to their two through a deposit something like that so is this something that you consider to expand your application in the future yeah absolutely so you know one of the uh maybe a good analogy i could use here is um if you think in traditional finance of the electronic communications network it's like the ecn it kind of when you put in an order even like especially if it's extended hours it kind of uh figures out the right market maker to fulfill that order right and so if you think about applying this to the crypto world you have all these different chains right you have twos to l ones in ethereum world you have you know other chains like you know binance smart chain you have like solana things like that right like if we can if there's liquidity that we can get on one chain as part of our protocol then there's no reason why the same like fundamental system wouldn't apply and work so in your case you know you could hop from l2 to l1 l1 l2 whether it's you know um uh you're on optimism on l2 and then you want to go to to you know uh arbitram or you know a different chain or you want to go on you know uh some something with zk like you you could seemingly hop around um so we we definitely would love to like tackle those types of use cases as well very nice thank you can i go again and ask a question absolutely okay um my question is for the ray tracing so they're like two things over there um i think it's it's very it's it's complicated to solve i think it's very brilliant um the only thing is i'm very curious is that like so who is defining these shares and um like what does validate of course like i hear from the validators that e2 um is like the profit is not very well and and i think this is great i think they would be very happy to have that split but who is defining this different shares um like who's defining the economics um that's my one question and also like i saw you guys this page you guys have like some like ray tracing as in like the mirrors and the what is that the different types of mirrors in your uh like explanation i'm just like curious about the inspiration right how is it related yeah sure so maybe i started the second one so how is it related they uh the general ethereum one ethereum ii the merge uh ryonis project which is part of the uh ethereum uh global scaling hackathon was about a very fragile devnets of ethereum one ethereum two with lots of glass potentially shuttered and even the first test that was called stiklaw which means glass and uh and when you think about mev it's just finding these opportunities of the arbitrage in a in a huge data set of all the defy elements combined together so when you think about all of this uh race of light in the iranism idea of art and finding something between this shattered glass pieces that's that's where the tray tracing name comes from and that's how you explain it as for the how the shares are defined so we see this this project as a great canvas for experimentation and further research because obviously we know that ethereum 2 comes maybe like the earliest in q4 this year and possibly in q1 2022 and we already have the the plugins and the system to validate how this mev split can work and it's very important because it will show us dynamics between ethereum one and theorem two nodes whether and necessarily we'll see the operators running buff nodes uh or maybe this can be split so can in the future for example uh infuria be independent mev provider that would be selected by by some validator operator to work with or do they have to be one entity and how they if they are separate how do they do the handshake uh of the split can it be in a decentralized way and were that uh where who is the strongest player to actually attract the biggest part the biggest chunk of movies so we think that this research over the next few months might be very interesting for the general economics of ethereum to post merge very cool thank you very much for the answer it's very very cool right any any other final questions for any of our teams going once going twice all right great well i want to thank all three of you for presenting and congrats again for really doing all these amazing and really interesting and complex things in the past three weeks so uh i hope uh hopefully get to use some of them directly on mainnet and especially looking forward to zenith and uh and doing more transactions with the zero gas um perfect so with that we are ready for our third group and uh right after the third group we'll take a quick break and announce all of our winners for the sponsor prizes so um for all of you who are waiting on that stay tuned for a little longer and uh and we'll get there very soon so the third category is uh another set of applications and apps that are especially and uniquely enabled by l2 platforms so we have three projects here alexandria lab rats and evolution they're working on interesting things that become way more accessible and useful and cheaper and just great with what the l2 underlying systems they're using offer so i will have them come on and uh really tell you about what uh what they've been building so first up we have alexandria and i'll let the alexandria team showcase their demo hey guys um sophia we are very happy and very proud to be here and to present our project alexandria so we are a team of three frenchmen uh representing the future of france and pardon our french for um this presentation but we had to amount the um full stack development side and the cairo side we had wasim on the ui ux and web app development i was on the project management and the id making and we are working for a blockchain partner a kpmg friends company so what is alexandria so in one sentence it's proving your identity features without reading more than you actually should so if you have to access let's say an age restricted service um if you want to do it today you have to prove your identity and for example send your passport or your identity card and while doing this you are actually revealing more information about yourself than you actually should um so we tried to resolve this problem and to show you this thomas take it away yes hello everyone so this is alexandria and we'll first start by logging with tourists we decided to use tourists because it's really easy you just need to have a google account and hope you have a wallet and everything is set up so the first time you access the application you will have to provide some information it's a standard car yc process and we plan to work with a third party company to handle this part so here we have some data later and as you can see i have a disability so uh right now i'm going to submit my identity for the kyc verification and just wait for the validation basically what's happening to this process it's that i will be added to various registries based on my identity features so here for example i have a disability and i will be added to the disabled person registered so now i'm confirmed i can actually use recently so um that's perfect we have some services here and i can book a tick 10 ticket so perfect because i want to go to mercedes this weekend so let's take this this trend for example okay as you can see here i can get some discounts based on some features so for example for example my disability but this one seems more interesting for me so i will first try to cheat the system but i will not be able to cheat because i'm not i'm not eligible for this discount so that's too bad but let's take a legit discount so this one and what's happening right now it's uh the kero processor so when your identity has been verified with the kyc the registries matching your identity features were updated with a specific encrypted secret that only you have access to right now by claiming this discount we are trying to prove that we actually know the key behind this encrypted secret in other words i am trying to prove that i am able to decrypt my identity in this disabled person register okay in order to do this we are running kero program with my secret key as an input so the kero program looks like this it's a very simple a very small part of it but here i have two outputs the identity proof here which is basically a way to prove them that i'm the one running the program and we also have the hs3 hash here which will be used in our smart contract to ensure we are using the correct registry and that i'm not trying to again okay finally how smart contact will be able to use these outputs to retrieve a curse fact that will state the correct execution of the program directly on the blockchain and that's perfect because my proof is valid so i can get this discount and i have it okay so i can just just pay and that's perfect so thank you tomar hi everyone so as a future work for this application we thought about having a real kyc service integration that would validate the identities and everything and we want to obviously go mainnet and then implement real life services like the one you saw with the train tickets you could imagine anything with um age restricted services or missing flight insurance and things where you want to prove an identity feature without revealing more about your personal data so thank you everyone for your attention thanks for this great hackathon it was a nice experience and of course we are looking forward to your feedback and questions amazing thank you so much alexandria and um we'll uh move on to our next demo and then we'll kind of get back to all teams with questions so next up we have the lab rats so uh josh joshua team whenever you're ready feel free to show us your demo hey guys everyone see that yes perfect okay um hey guys we are the lab rats uh we're a team of five who are based in the uk and all work for fun fair technologies we've built a multiplayer trading simulation game running on the optimism chain this is played completely on chain and paid out in real time using smart contracts players try to predict where the price will go next by placing bets on the graph all bets are placed in our lab rats um native token if the player wins they get part of the prize pool shared with anyone else who had won as well our aim wanted to see if we could build affordable fare fully on chain games on a layer 2 solution on reflection it was very successful transaction worked out over 120 times cheaper than layer one transactions we use the non-custodial from wallet to allow easy to understand ui for the user to log in i will log into the thumb wallet right now once the player player is authenticated and they can start placing bets they get an integrated approval model which will show that they're betting 100 lab rats tokens steve's going to talk about the game in more depth so over to you steve thank you very much josh uh so this is our rat race game each fan started automatically on chain by the server so the game rounds will run one at a time the players can place a single bet each round into one of the six regions shown on the screen these bets are transferred as tokens into the game contract and common bets of all players are indicated on screen by icons and in player list the game contract will process the results and as soon as the client receives the update it will update the screen graph and show which players have guessed correctly updating player balances as needed uh over today's explain a little bit more about the client hi everyone we've also reacted out to host lab rats uh sorry we're able to react up to host rat race and this is where all the networking and client-side blockchain interaction happens it's integrated with fun wallet which we use as a json rpc provider for calls to place new bets and read game events the client is completely driven by contract events including new rounds player bets and round results bets are created with a transaction title token so we added an integrated uh forces to get funds into player accounts and um excuse me uh yeah and to top up the player accounts when the balance runs low we also have a websocket connection to our server which allows us to get accurate graph graph data and display a live play account so over to mark to talk about the server the server is a dot net core application deployed on a two node cluster on linux it provides the source of timing for rounds and the random numbers that are used to determine gaming outcome it runs in the background waiting for players to come online and when they're players it runs continuously in a loop issuing transactions to start new games then another one to close the batting stage of the game which prevents front runners and finally issuing the transaction which ends the game and pays out any winnings events from a chain are used to move the servant's game state from one stage to another over to steve we'll talk about how the contract works thanks mark on the blockchain the game split into two contracts a manager which handles game status betting and payout and response to round control signals from the server and the game contract which validates the bet and processes the actual game logic the game is run completely on chain with only the round timing and random seed provided by the server server sends a message to begin the round and an event submitted to all the players player bets are placed by sending tokens along with their chosen bet detail and the bets validated by the game contract valid bets go into the pot embedded bets are returned to the player when the server sends a no more bets message it ensures that there can be no front running of the result when the game sees revealed and finally the get server sends the resolved game message the back based contact works out the results and transfers any winnings as needed by the game manager that's the contract flow of that race so back to josh so thanks everyone for spending the time watching our demo um so what's next for us we're going to look at um other ways that we can create fast fair and cheap games that have the security guarantee of layer one overall we were extremely impressed with the speed of optimism it really did feel just as fast as a bank transfer and we will definitely be watching development further um for optimism so thank you everyone uh and thanks for the time yes amazing thank you so much lavares for that game demo and uh with that we have our last uh demo for this category and that is evolution so veronica whenever you're ready feel free to share your your screen hi everyone i'm veronica and this is the devolution team we are diverse a diverse global team from south africa nigeria france the netherlands and canada we are building devolution one small step for a hackathon one giant leap for decentralized governance a dow is many things but at its core it's a tool for decentralized governance most projects require a doubt that can evolve with them from their initial launch with a single team multisig managing governance to a metropolis of engaged community this process is slow and requires a high level of flexibility right now most our options available do not support this vital transition from centralized to decentralized to determine how our project could have the greatest impact we researched the current down landscape and identified the following key challenges most dowels are primarily financial management tools that exclusively reward financial investment this sets back community building as there is no built-in reputation incentives or rewards for community contributions second existing dow smart contracts have very little flexibility this makes it difficult for users to add features that meet their specific needs it also creates a siloed ecosystem with practically no doubt down interactions thirdly the high transaction costs on ethereum have made it virtually impossible to execute government government operations at scale we took advantage of optimism's low gas fees and sequential transaction processing to create highly modular extendable and a novel dial design devolution also offers a tokenized identity solution a universal reputation system and an accessible web3 user interface using taurus open login and now for the demo for timesake we're not going to be using uh taurus but it is integrated the first thing you need to do when joining the devotion ecosystem is mint yourself an identity token sorry just clicked it twice this token will act as a pseudo-anonymous identifier for you and will own your reputation token while the reputation token cannot be transferred from the identity token the identity token itself is transferable here we can see a list of dows that have been pre-deployed for ease of demonstration joining a dao links your identity token to the specific dial you've joined once we've joined a dial we can see the various active proposals just need to give it a second to mine of course there we go here we can see the active proposals proposals can be in two main states active and archived active proposals can still be voted on whereas archive proposals were either voted in voted down or expired before reaching the minimum consensus here we can see the minimum consensus requires at least five unique nft ids and 100 reputation points either for or against currently we only support binary voting but later down the line ideally we would like to support more versatile voting while that's mining here you can see your reputation balance the reputation balance is across all dows that have been deployed under lovely under the devolution branch the governance tokens however are dow specific the most novel feature of our project is its smart contracts the novel design takes advantage of the sequential transaction execution to deploy a large smart contract ecosystem the hub and spoke design allows for modules to be infinitely composable these smart contracts are highly efficient and none of them are in the double digits in kilobyte size we did a lot of market research to ensure that our project really was filling a gap specifically in terms of open extendability which goes hand in hand with dow interoperability we want to continue our project and i would love to hear from you if you're interested our future plans include a more generalized proposal execution system and off chain reputation distribution shout out to team kangaroo earlier we would love to integrate with you guys um thanks so much for hearing our presentation and we are really grateful to be in the finals amazing thank you so much to evolution so at this point i would like to ask all uh all teams and judges to turn their cameras on and we'll kind of jump into our q a i also want to recognize quickly calvin who has been hot swap with ben from optimism so he'll be taking over uh as our judge representative from optimism and uh with that um i'll uh i'll let anyone of you kick us off with any questions or comments um okay i'll start um so i think there was like all three projects were amazing um so for alexandria um we've been looking into the the work that you that you've done in quite detail um i think that thomas thomas made your term here that that you actually did did magics um we were very impressed by by but the work that you've done i i don't think it's that simple to create an end-to-end um um system like you did there and i'm very curious about your future plans there [Music] hello uh thank you very much uh we plan to explore either wasim said some some opportunities like we would like to to see how it's possible to to command with this uh would like to to see what kind of hell a life application we can find uh yes we are really excited about this is this project and we would like to to continue to see more things what we can do with this yeah tomato to elaborate further we are very excited to be building on cairo it's something that we have been looking for for quite some times and uh the acathon was a great opportunity to do so and uh yeah it felt a bit complicated at first but uh yeah too much is like some magic and um we are really excited to be a building on cairo on other use cases in the future so we'll be happy to talk with you guys about it very nice thanks um i'll i'll go next um if it's okay um devolution um [Music] hi ladies i see two ladies in the devolution team i just want to say first like you guys are like gals are like inspiration i just want to go and join the catalan and feel that i think it's very nice to see your faces and i'm very very happy uh there's actually three of us three times yeah nice amazing um i'm just like so like inspired by this one because you guys are everywhere nigeria south africa france uh us canada netherlands are like how did this team get together and how did you guys accomplish the work together and like this amazing tool yeah so um eth global does a lot to facilitate team building so you know it's just kind of combing through the the slides at the beginning of all the team members and finding a common stack in a kind of common time zone and then just going from there it's really cool but yeah just um i'll um my other question would be um i just write it here did you have any issues with the like scaling solutions that you picked or just like any challenges uh yeah so so we picked optimism which has a lower byte code limit for smart contracts than like standard ethereum um but i actually quite enjoyed the design challenge of designing a smart contract ecosystem that actually plays to that as a strength rather than as a weakness which is why there were so many contracts in the ecosystem because they all took care of one thing which made the system really really upgradable um at like every level very cool um my other question would be for the lab rats um first of all i just i'm impressed with that team for the the the tech stack i saw like you guys feel like even put the radius and the caching and you guys put together like my sequel logging like everything is there like already the built-in it's super impressive um like this amount of time to put together all that things together um i just want to um ask the lab rats um i just like there's like a time frame and like i'm just curious about that time frame the bet starts and bet like ends and then how like people decide like where the graph is going like what is that time frame that you decide is it like ten minutes one hour two hour one one day how is that work how does that work the server makes a decision at the time um we biased it about how it really plays because when you're playing a betting game you want it quite fast and that's one of the benefits of optimism it really is very quick um so there's enough time to make a decision do i go up do i go down place a bet you don't have to wait long you've got your result you've got your winnings or you can go again so it was just really how fast would you like it to play you know whereas with layer one we'd be pressing a button and waiting a while wait a minute so it's much nicer that's very cool um yeah so um and also i think it's very cool too like for people to understand where the price is going there's so many people just like trying to figure out like where the price is going in general i think it would be very cool too like i wish i i knew this tool before i learned about all this like pricing very good cool job very good thank you see anyone uh have more questions i guess i'm curious to um to kind of understand from uh kind of the lab rats team um i guess just what was the it's more of like a very matter question because there was so much involved in kind of getting all the set up like how how was the experience like from the developer tooling side of you kind of being able to do this thing easily and successfully on there too i would love to kind of hear some comments on just what was that process like on the discovery piece and and given your background on state channels um i'm curious like how you thought about building on on the ltu's here um given the current tooling um with the current totaling is sort of in some respects because optimism still in development it felt like going back a couple of years to what ethereum was like basically 2017 2018 but other tools had advanced like hard hats and things like that which made development of the contracts a lot easier than it was back then so it's swings and roundabouts and with all the other libraries that we use it was easy to add in support for optimism we had to change a few things here and there because obviously there's no regular block every whatever it is seconds it just comes whenever there's activities you can't sit there waiting for a block so we have to that's why the server does the timing rather than the blockchain doing the timing things like that so this trades are swings and roundabouts with with what's there awesome i do have any other questions from any of our judges or any comments or even feedback see a couple of you trying to unmute i'll i'll just uh wait for somebody to stop the ping pong um i i just um like i think i didn't ask the questions i like sandra there's a there's a part that it's you guys waited like 20 seconds for proof what's happening at the background and what can you just like fix that experience because when you say it oh you can go to a bars um like to show identity i think it's very cool that you don't want to show all your like identity like to a bar like i just want to show my age i don't want to show my address to the person i think it's really cool but i see that it's like takes 20 seconds like what is that how what's happening there and then what can you do to optimize that time yes um so it's the first time you need to to prove your identity you need to interact with a smart contract to to save finance states of your identity to save the proof but once it's saved on the smart contract you can just use this proof and it's just a rejection so the first time you need to prove something it's it can be a bit long but after it's it should be instant i guess on the ux side of things we had this debate about having a model with a popover with the status or having toast notifications we tried both and i think if i after what you said maybe having a panel with the status and leaving the free access to the user to roam in the app while waiting for the transactions would be better but we had some debates about this ux piece and yes i think this part can be improved but it's done once for one proof for one one time for a generation and then you can just reuse the same discount whenever you want again it's like i think it's a very cool idea yeah um i also have a comment for alexandria i feel like with starks and snarks this part of the zero knowledge part is sort of underrated when because like right now everything's about scaling but um i would really love to see you guys starting to sort of expand more on that and like figuring out sort of how to minimize trust on in the kyc process and i know that you guys are storing it on a mongodb database but like also maybe finding some cool integrations with decentralized um dids like decentralized identities like maybe like a cool integration with dns like once you kyc into an ens you can directly like go through a lot of a lot more things and yeah i'm really excited to see where you guys go from here and i encourage you to minimize trust in all possible ways yeah definitely um we had quite some work around the camera part on this one so not necessarily the time to integrate other services but yeah definitely we're not very fan of centralization so definitely if other services fit like we'll integrate them asap but thank you for your comments awesome i'll give one last chance um if there's any more comments or questions if not we are like a lot of running on schedule so we'll uh we'll take a quick uh detour to the next segment of this finale which is i want to announce all of our prize winners so i want to thank all three teams evolution lab rats [Music] and uh why am i blanking on this now i'm sorry alexandria there you go um for uh presenting uh your amazing demos i think just being able to see that how close these things are to being used in real life is incredible and i'm particularly excited about the applications of doubt because we finally now have a a zero uh or a very useful cheap and fast way to experiment and then work with uh with dials at scale so uh just seeing that table and the future trade-offs and just for the lack of any trade-offs just you check that every box there uh it gives me a lot of excitement to see uh what people can do with dows on l2 so congrats again and uh we'll uh move on to our next uh segment so what i wanna do is i wanna go over all the prices that all the teams have won for this event uh this is every single sponsor prize and uh while that's happening uh all of the judges can take a 10 to 15 minute break uh whenever you see me done with the presentation that means we're ready to see our last three teams so um i'll have the last three teams hang out here for just a few more minutes but uh we are good to announce some of the prizes that all of you have been waiting for so uh we asked some of our sponsors to uh record a video of who their winners are so we're going to play some of those videos here and for the rest we're going to announce the the names of the teams and what they want directly so first up we have arbitrary and we'll see their video shortly everybody i'm harry co-founder and cto of armatrum i'm excited to get to tell you about the winners of our four prizes but first i just want to thank all the hackers who participated we had a great time seeing your projects and i hope you had fun our winners are farmtopia which explored defy and composability on arbitrarium with cross chain liquidity nft puzzle thing which showed off the power of nfts on l2 and made awesome use of the graph cross roll-ups of one messages bridge which showed an efficient batch cross-chain transfers between roll-ups and finally eath sorbet which built a smooth ux for onboarding users into arbitram thanks to everybody who participated and i hope you had fun and just to summarize uh the arbitrary prize winners are farm topia nft puzzle thing cross rollups on messages bridge and need sorbet so uh congrats to all four of these teams and we'll talk about logistics shortly so next up we have optimism and uh we'll see what the video is by ben all right hello everyone this is ben from optimism and i am going to be going over our hackathon winners and i've been asked to do it quick and i can't stop talking about all these great projects but i'm going to do my best so without further ado let's get into it in our good for the community category we have three winners devolution an incredible doubt project go check them out popcorn doing some of our favorite stuff redistributing fees to public goods and each sorbet a one-stop shop for all the l2s out there to be deposit and withdraw 2 in one shared place all right for our most memetic hack we have to give it up to what i think is the best out of any hackathon sesame street named hack i've ever seen elmo incredible l2 venmo clone very cool for our most helpful hack we chose two incredible cross chain projects one of them is called troll bridge go check it out instant exits and another one not not as amazing as the name but it's as incredible of an implementation cross roll of 01 messaging passing around batches deposit trials with that one hash baby okay and last but not least for our most outstanding category we have two more zenith an incredible project letting you deposit your tokens with mevgeth i mean my god how cool is that and as well as lab rats an incredible game that was very addictive and allowed us to really push those boundaries with layer 2's lower latency assumptions all right i think i got it in quick enough this time we'll see and of course it goes without saying we had to choose a list but you are all the winners in our hearts it has been an incredible month of hanging out with y'all in discord and on our office hour calls learning about what y'all are doing seeing all the hard work you were putting in each and every one of you killed it it was amazing thank you all so much bye there's a lot of teams that won a lot of prizes from optimism and just just quickly summarize we have zenith lab rats troll bridge crossroads on one messaging elmo evolution popcorn and meat sorbet you've all won two thousand dollars from optimism and i will follow up with a lot of details after this next up we have the winners for zk sync and we'll see who won their prizes hi hackers i'm angela and i leave product sdk sync and today i am so excited to be announcing our winners so in third place we have two winners winning 500 usdc each and the first project is kangaroo which is a cool discord feedback integration that allows super cheap withdrawals and in the second winter is a gas relay service which allows which uses our cool batching transaction feature to allow get the the person receiving the token to pay for the gas for the sender and in second place winning 1500 usdc we have an amm based off unison v2 written in sync our new programming language and they're coming out with the front end soon so we look forward to sharing that with you all so you can try unisop on ck sync in first place we have zenith winning 2000 usdc and this is a cool utilizing flashbots to enable arbitrary meta transactions for externally owned accounts and this and they integrate directly with cksync to allow users to onboard onto zk sync without needing to have ease and that's it we're excited to share with you zk sync 2.0 soon and we hope to see you building on that thank you angela and uh just to summarize as you can sync winners we have senate zero swap kangaroo and gas relay service so congrats to all four of you for winning the zki sync prize next up we have starkware hi i'm a view from stockwere and we are here to announce our winners for youth global 2021 and in the first place we have two winners the first project is the cairo debugger and the second one is alexandria cairo debugger implements the debugger adapter protocol to enables everyone to debug cairo from their favorite editor alexandria is a privacy project that enables everyone to prove details about their identity without reveal without revealing additional extra details and they did an end-to-end implementation using cairo sharp and level one contracts and then directly to the third place we have three winners we have circularized l2 exit format and prime choice select thank you very much awesome and uh to summarize the star wars winners are chiro debugger adapter protocol support alexandria circularize l2 exit format and prime choice select and those were some of our our videos from our sponsors and for everybody else i'm going to quickly read off uh the names of all the teams that won the prizes and don't worry if you missed something or am i going if i'm going too fast because we'll be posting this thing on discord and twitter and we'll also be following up with all of you on email so the scale prize winners are nfc puzzle thing music coin ecommerce series protocol and flaunt the connex winners are gnu swap layer 2 dex aggregator and sharon the protocol labs winners are nama finance hashmark ipfscid sale hydrophile and vhtdp the seller winners are layer 2 finance combination strategy and ethol.link the rating winners are optimistic channels and the graph prize winners are blockhead chain yield wool protocol nft puzzle thing bundle bond layered to dex aggregator m yield and mask it the polygon winners are zenith chain yield blockhead boson l2 dex the taurus winners are ratify voltaire blockhead and vaccine nft the new cipher winners are my token covalent winners are coinport ethol.link and pixel property the zapper winners are blockhead zulo and ethol teller winners are xfill and prime choice select [Music] the one-inch winners are agent ranza kazulo and the ave prize winners are ishaan uh my yield finance and farmtopia the secret network winners are secret manufacture rainbow bridge and sh the chain link winners are golden ticket boson prime choice select nft puzzle thing and creative the super fluid winners are layer hop ricochet in perpetuity the e s prize winner is team blockhead and those are all of our amazing sponsor prize winning teams so there's a lot of names on a lot of teams so congratulate to congratulations to everybody who won a sponsor prize will be following up with you uh very shortly on a lot of details for how you get to receive them and just generally what the prices are in case you missed the details on the slides so with that we are ready to resume our last group of judging and our remaining three projects so if all of our judges are back here i would like to ask them to turn their videos on and we'll shortly get started for the remaining three demos so i'll give that a quick minute and the next category is developer tools so we have three more projects here in the category developer tools and in libraries uh we'll have hydro file eat sorbet and cairo adapt support showcase what they've built to make it easy for developers to really make their applications more scalable and usable so first up we have hydrophile and i'll have doug and kartik uh share their demo all right thanks carter can you hear me all right yes we can all right so i'm doug anderson and i'm presenting for hydropower my partner kartik chopra is on the call and we're proudly canadian hydrophile is a play on words for hydrofoil in case you haven't picked up that um our challenge was sailing the seas of cid so the currently if you upload data to ipfs or it's sort of under library you get a ipld you get a content identifier that of course verifies the data integrity but it's just a long string of letters and numbers as a hash right so it can be kind of hard to keep track of this so we built uh hydrofile to you know keep track of these version files so let's say you've got a file or an object and you modify it along the way well the cid is going to change along the way so we thought the best use case of this is keeping track of this string of version files and thus version c ids and ipfs so we built hydrophile as a library on top of or using ipfs to track those file alterations we also built in keyword search is essentially we want to add this metadata to the file name and the file type of the data that you're saying saving to ipvs so that you can search upon it and index it accordingly so you end up with this long string of version files uh which we basically just slap into uh linked data using uh the interplanetary link data protocol which is very similar to json ids to link them all together so you've got this chain of all of your versions of your files all referenced into one and of course you're probably not going to add just one file to ipfs you're probably gonna have a bunch of different files or objects or pictures or whatever so there's a one of these chains for each one of the threads that you have of a file and it's a bit incestuous because we used this chain of cids we saved them in ipld to link them all together and then we roll it all up in the worker root to ipfs for one giant uh root cid of the whole tree of all your files but that can be a bit problematic because every time you version a file and you get a new cid and you add it your merkle root changes so what we did was we looked for a static way to keep track of those changing roots the ids so we found a hypercore which gives you a static key that you can uh it's an append only log with a static identifier that doesn't change which is great for uploading to ethereum because you can upload the hyper core identifier key once i save it to ethereum once and it always points to the latest value of your um root cd so it's really saves on the gas views by able to uh rolling up to ethereum using the single write so time for the demo so let's switch to my browser here so of course we wrote the the the library in uh javascript and node.js and if we spent a lot of time building this library and then we figured oh wait we need a gui to be able to show you know use of the library but the main the main function in the library was track and you're basically tracking the cid the content identifier with the parameters and the parameters are generally the the file name or the object name and the type so we built a little a little gui here to show how you can create an object and save to ipfs and then they all rolled up so i've got some of the previous previous objects that i've saved i've got text type and picture type so i've got a picture and maybe you save an avatar in there and the cd is linked cid is linked there and if you open that up in the ipld explorer it'll show you all the data in ipfs and then you know this is just a demo so avatar.text but ideally you drag the photo in there and if i wanted to update my avatar i just would save an object of the same name of the same type under pictures and let's say this is uh you know me smiling instead of instead of frowning and i would upload that up and the whole idea is to keep track of all these cids so the avatar if this a little bit buggy sorry about this it's it's a bit challenging because ipfs has to sync with the gui and they're a little bit out of sync anyway uh so boy that's embarrassing let's try um a new file file one two hi hello version zero and so now my text files has file name one with the original cid you can see here in green and if i now modify the file name one and give it a version sort of 2.0 is now here [Music] what it does is for that text file file name it has a new hash which is now in blue and the previous one is linked to it so you have this chain link effect of of the cids being linked to the previous version of the same file name and the same file type all with hydro files so the library is there in github ready to be used all you need to do is instantiate an instance of ipfs and pass that into the library and it'll roll up all your cids into one one mother one which is right here the root c i d and all of these are all linked in the demo so you can open it up in the ipfs explorer and see all of your all of your files so it's a little bit easier to keep track of all these files instead of trying to throw them in the database just use ipfs to merkle root up to the top so i think that's it and i happy to uh in the presentation or take any questions i guess we're doing the group questions at the end kartik yes so thank you so much for that really cool demo i totally agree that uh the same worker wrote for uh i'm wanting to modify everything else after it saves a lot of time and cognitive cycle so this is going to be super cool so uh thanks for that and now next up we have eat sorbet and uh looks like the team is here so whenever you are ready feel free to demo a survey great um let me just share my screen okay um i hope everyone can hear me to see my screen yeah and okay great um hi everyone we're project eve flo bay we're thrilled to be presenting to all of you today if sorbet smooth transition to l2 just like sorbet before the main course to begin i would like to start by introducing our team that is spread over taiwan and hong kong it consists of anton and myself flying obita the objective of a project is help the apps and l2 networks on board users and developers we've developed a react component that developers can install on the d-apps it adds l2 network configs to metamask so users don't have to do that manually it also lets users make deposits directly to l2 network so they can get started with the l2 network right away developers can customize the color theme of the component to suit the dapps we've spent a lot of time to ensure the code is well structured and real and written as this will help foster developer contributions from the community the component is published on npm and now i'd like to show you how if sorbet looks in action so here's a react app that has survey installed if survey currently supports eight network configs and a mana mass wallet i will select optimism coven for this demo and have my my sorbet in dark mode so a component starts with the welcome screen oops as i was sorry supposed to start the welcome screen i was rehearsing um so next it detects that we are not on the coven network so i'm going to change that so now you can see the l1 balance and l2 is updated here this d at least a little bit more eve on l2 for us to get started so let me make a deposit so once the transaction is confirmed on l1 optimism will update our balance on l2 in a few minutes and it will be reflected here but let's not wait and move on to the next step we can see optimism covent network config here so let's switch our wallet to the l2 network a network has been switching metamask and we're ready to have some fun in l2 so our plans is to have support for more l2 networks and ball wallets we also like to add some more friendly implementations as well lastly i'd like to show you guys our github repo where you can see how easy it is to add a component and customize it to your liking you can put your settings and configuration and customizations in the config object and it is literally just one line to add it to your d app we really hope that more developers will try it and your feedback will be most appreciated and this is the end of our presentation thank you to eve global and all the sponsors for organizing this amazing hackathon amazing thank you each survey team and uh i was just gonna say uh thanks for being up super late to do this demo it's uh the other end of the world and uh really appreciate you doing this live and sharing what you've built with all of our attendees so um last but not least uh we have cairo dfp support as our last demo for the day so whenever you're ready jessica we can already see your incredible demo oh hi everyone uh let me share my stream so i'm going to present a debugger for the child programming language um i'm francestraton i'm currently based in london and that was my project for the uh the australian national marketing so what is cairo so trio is a programming language for to write provable computation and is powered by starts and while the language is quite new 7 it's used in production by some big projects like dydx and immutable ads and as the trial documentation wants you the chiral entrance looks simple in fact looks almost like python but it's a fairly low language language i issue 3ds so the main takeaway is that debugging cairo is hard because it's not like a programming language like javascript it requires a bit more attention and hopefully without debugging it should be easier so traditionally britian debug is quite a challenge because you need to write a plugin for each one of the editors you want to support so for example the main editors now are like ps code image and vm so you will need to write three projects but with the debugger adapter protocol you can just write one server and then the users can use the debugger adapter protocol plugin for the editor to connect to your server and they will be able to to debug your program so how does this product work so we have three components one is the editor which is what the users use so it could be vs chord could be image it could be bim and then we have the chiral runner which is responsible for running your tire program what implemented is the server so the communication between the editor and the trigger program and so when the user starts debugging probably the editor we send to the server a list of breakpoints so where they want to stop the institution and the server will confirm to the editor that's what is done and then the user wants to start the execution so one difference that in the one line in the source code could be like multiple instructions in the runner so the trailer server takes care of that so in this case the editor has to run one step and then the server will run two instructions and after that we send our events to the editor saying that the execution stopped because it reached a breakpoint at this point the editor will ask for us for some information to display to the user for example we can ask for stack frame can ask the available variables and their values so let's go into a demo so here i have a cairo program that computes the sum of four numbers between one and three which should be six but three is a live demo so you know anything can happen so we start running our kind of program and here we can see highlighted in yellow the current instruction where this view what code we are executing so i can add breakpoints by totaling the red dot on the left and here at the bottom left we see a list of all the breakpoints that were added to the chiropractor so now i can resume the execution and here we see this country is recursive so the rejection happens before the breakpoint so we can see that the stack traces on on the left are four stack frames deep or that if we mouse over our variable we can see the current value so industry is one zero and we accept the values on the left as we execute the program the values of the variables will change and we can see that you can see that will update here you see it more times and now we can move step forward and we drop out of the compute some function we go here the serialized board is basically how you write outputs in cairo and it's a function provided by the standard library and we can jump into it and the chiro debugger will look up the file from the trial library and we can step like any other piece of code so we can go back now finally the execution finished and yeah the live demo went quite well and we got 6 which is what's been expected so as we can we have seen that the debugger is fairly functional and it works fine but it only works for simple trial programs for like if you want to debug real world programs we need to handle more advanced stuff for example like dynamic memory allocation also like for example we want to watch expression while we run the program also would be quite nice to be able to set the some option for the debugger and how the trial program is compiled from the launch configuration file that dscode uses first it would be nice to be able to change variables while we are debugging so in my presentation i'm here and thank you for for the attention for organizing this argument thank you so much for that really cool demo and uh with that that was our last demo for the day so i want to congratulate all 12 teams and uh now i want to welcome all three of you to alternative videos on we'll kind of jump into uh some questions and comments so um who wants to go first this is incredible set of demos so i'm sure there's gonna be a lot of comments here um yeah i can go first so thanks uh great work everyone um i have a question for francesco for the debugger i'm actually curious we spoke a little bit about your work i'm curious um what was hard with working with um cairo and what was like i don't know maybe slow or broken or anything like that that's a good question so i think first of all i want to congratulate the kyro team because they're the code base is like very well organized and working with a car company is actually quite nice i worked with other compilers compilers before and chiropractic is one of the best and it was very easy to to dive into cairo so yeah that was thank you to the developers yeah the character made my life easier what's different is that cloud is different from other programming languages i work with and for example i think you have to after the execution ends is that when you can finally install the memory so you have to run the complete program before you can inspect memory and that's something i didn't realize when i started working on the debugger so i was positive for a couple of days but i think after uh i've been in touch with the claro team so after that was made clear to me then i think overall it was fine and it was like a pleasure to work with the karo library thank you um so i'll go i'll go next um i just try to not to jump in to let somebody just to say um hey everyone it's like it's so hard to just like ask the question because it's like so straightforward so well done and like everything is just so perfect i just like i can only just like comment at the moment because i'm really impressed and it shows that that you can't there's no limit in the hackathon you can just build anything and it's i think it's very cool um so i will just like since we the last one is the cairo debugger like did you already share with the community and not get an update like francesco like did they like some people are gonna use it like did you already share with them or like um and like are you planning to do that i think so that would be very cool yeah so i think the plan is to keep developing it to have like to be at least feature complete so being able to run like to inspect any trial programs and hopefully the community will start using it uh actually comment on that so i think another step is would be to integrate with the vs code extension that chiral already has so we can work on that together i guess very cool um and the other one is like the comment for the hydro file i watched you guys yesterday and it's like i was very impressed as well um i was just wondering if you guys can work the same like versioning for the scale file storage as well i think that would be very cool i would love to just sync up on that i think it will be a great um like upgrade for us and like after seeing that like let's let's sync up for that i really liked it yeah that'd be interesting are you using uh like hashes for the scale file system are using ipfs what's the back end um i can just like we can just like discuss that and then um like it's like the hashing um and like we like the scale has like like we have our own file storage it's not ipfs and it runs on scale completely and then i would love to just like bring our engineers together and just like improve and build this on scale as well that would be very cool fantastic um each sorbet is um um just i think it's very simple and like it's very very cool and uh i just love i just i'm impressed with the ui um it's very like user experience is like very simple sometimes like when you just like move all these um just uh like die and um like everything it says takes a while um and also is like complicated like all the workflow i think i really like the workflow in general um just want to say that thank you um also for the east sorbet team was there anything that could make it easier i mean you had a lot of networks there right you had eight different networks um was there anything that could make it easier for you to build the same app for all eight different networks like were there things that you had to do differently between the different networks or it was mostly the same process for all of them um um so actually for the three networks or for the a the eight one we we did and the three of them which are the sponsors of this hackathon um we picked them because they were the easiest to to be put on so uh just to give an example uh for example uh scale we we want to put them on as well um but uh for their for their um the endpoint they didn't have an https and unfortunately metamask doesn't let you add that in through their rpc call so we couldn't have put that in oh okay sorry i need the informational oh okay at least i was told i'm so good https i'm sorry that you missed that um like uh i can just share that with you of course i think um i think it's a good feedback for us because we decided after that feedback we decided to completely remove the http from ours like we were just giving out and then we're not going to do that so um we have we said we have support for both so i mean yeah um just just to clarify like you guys do have https for um for the um web point but but not for the information one which was needed just to display the balance but at least you know i'm sure you guys have it for the mainnet and stuff but it's just you know you guys have a different setup uh slightly for this one so we we couldn't add it but it's a shame we would love to have you guys on as well um and we actually wanted to add more uh uh in but um unfortunately for the time we we didn't have uh we didn't have enough time unfortunately because of um the very different networks that we have to put in the work they have to do for the other networks i don't know if anton would like to add anything as well um not much but i feel like actually the the um the flow of adding different network is not that different i feel like we spend most of the time designing the whole architecture in terms of like how do we interact with the like ethers as a plug-in like we choose either over web free js right now and that's really the next thing that we have to build anyway because like we we definitely want to reach by their community um but i feel like yeah like um the probably the only difference is between all the networks is like whether it's erc20 or it's a uh e native token deposit because uh that'll make a difference and sometimes it's like you you deposit the er20 and then um when you devices that onto the side chains like polygon x die it becomes their native token so we we end up like simplifying the flow to only deposit native token instead of like giving you a list of tokens that you can choose because i think though we we thought that we'll like confuse your users about what tokens did the top deposit to actually make things work so i think like there are just so many like um well in a sense like different teams have different implementation of the bridge or just like how they're onboarding and um it's like on the one hand it's like kind of hard to find a unified interface for everyone but on the other hand it's like interesting to see why do different teams have different um designs and which one do we feel like better so i guess that's pretty fun yeah i mean on that subject um you know obviously these networks do have different bridge designs um was there anything like what did you like about the bridge designs what did you not like like if you if you had to sort of combine things into one sort of bridge interface that you would prefer what you know what would that look like to you i think one takeaway from building this is we definitely need some like fast deposit and withdrawal service uh we were just designing the deposit right now but we were also like planning like how will we handle withdrawal as well because uh you can just like onboard user without helping them to exit any l2 and we end up having lots of um like to having too many problems dealing with different kind of vitro system because you know like some enables like fast withdrawal and some is like optimistic roll up so you need that uh speed period or whatever so i definitely feel like we probably need this kind of like um maybe not official but intermediate more intermediate projects that's like um really just like focus on the ux on the contract level and then we can we can have an easy life like focus on the ui level daniel's been meaning to ask a question as well i'll let him oh um i mean it was sort of cover there i guess i'll just add that you know whatever survey did is something that we've sort of been envisioning and wanting to see for a while and we kind of have our own internal version of it but um yours is better so good job and like the team's like what was the most part fun part during the second time like i just like all the teams like all of them since it's like the last call i'm just gonna just take over the call i'm sorry but i'm just like so curious like for me it is like so much so important to like have fun and every time i go to hackathon like i just love talking tech like hackers and i just have so much fun talking to people i'm just um i'm just curious like what was the most fun part for you guys like the teams and what is it uh just for me like the most fun part for me was you know just fine like learning about the new technology in a way that's not you know like work related right i didn't have like to get it done i got something done by some arbitrary deadline right i decided you know what what's something cool that i can do with cairo it's like yeah why not like you know i saw that the compiler was actually quite nice i say can i do anything with a compiler right and say writing like a language server protocol so like the same thing for example auto completion would be a bit more treated to do in three weeks so i was like maybe i can just implement that debugger right and then i went with this and you know i actually did it so i'm pretty happy about that so and then the team was is very nice so you know i had a chance to chat with the travel team and learn more about their compiler more about the language so however it was like a fun experience very cool very va hydrophile um i guess one of the fun things was that near the end we were i think you actually saw the original demo where we didn't have colored hashes so like in the last like 20 minutes before our presentation we sort of hacked together something really quickly uh but that was probably like one of the most fun parts and definitely the creative challenge because during a hackathon it's a completely blank slate right so you have to think okay well what are we gonna make it's like francesco says you have all this awesome technology at your disposal and it completely blank slate it's almost like there's too much options and too many creativity and you have to really narrow it down but it's really exciting to be able to pick and choose from the technology and then and then paint your canvas however you want and it's it's a bit of a double-edged sword because you have so much choice but you've got to pick only one thing because you only have so much time right so it's great creative choice absolutely agree it's so cool um eat survey um well for me at least um i feel like uh a project is almost like a it's a perfect for me because you know there are so many l2 technologies out there and i've always wanted to find out what each one does and there isn't enough time to go through often like really deep so this project kind of has a cheat that i feel like i cannot kind of play with all of them and i don't have to decide and then uh so you know so we kind of go a bit shallow on the uh on each of the technologies but then we focus on the ux and the um and the architecture so um so i'm really happy that i got to play with all of them that's amazing you know what would be more fun build on scale that's on the highest part of this i assure you it would be more fun i think that's a perfect positive note to uh to wrap things up uh congratulations to hydrophilic survey and cairo dab support and um this has been amazing i feel like devtools is kind of what makes the ecosystem move forward so just seeing all these tools will make it a lot more possible for new people to uh not worry about what happens under their hood and use the abstractions to actually build what they want to do and not focus too much on on the internals so this is uh this has been incredible and uh congratulations to all 12 teams for showcasing their amazing projects so thank you so much and i thank you to all of our judges for being here with us for the last two hours sharing some amazing thoughts and comments and offering everybody feedback to take this project to the to the next level so um we're super thankful for your time and i have a few uh a few thank yous to uh to give out to everybody who have made this event possible so um without further ado i'll jump into doing some long due overdue thank yous um especially i want to highlight our judges speakers and sponsors and everybody who helped out as a mentor and our support team and and lastly to all 600 plus of you as hackers who participated this event this event would not be what it is without you participating and building cool things that yeah you get excited about uh we just facilitated this uh this month but uh it was all your work and effort that made everything possible so i won't say every name here don't worry but there's so many people that make an event like this at this scale possible and these are all of our judges from today and all of earlier this week who made it possible to kind of go through and learn about every project that participate this event and have a live conversation with them offer them feedback ask them questions so thank you to all of our judges for giving everybody the time from so many different parts of the world we had an amazing set of speakers who participated in four different summits and gave us uh their perspectives and talks on everything that has that's going on in the world of scaling it needs two and zero knowledge and uh and mev so i want to thank all of our speakers here who were there to help out for workshops talks panels and more and lastly one also thank everybody who's uh who supported uh our our attendees and our hackers from the sponsor side there were so many questions and comments and and uh and just anywhere from above reports to feature requests that came in on on the event and all these amazing sponsors have been helping out all of our attendees throughout the past three weeks and really helping them succeed for all of their projects i want to give a quick shout out to everybody who made this possible so without your support this would not be a thing and i can't wait to see all of you in in person so thanks again to everybody and all hundreds of you that that are that helped us out pull this event and a few more thank yous from our sponsors and i also want to quick uh quickly thank some of our dedicated mentors they were here uh doing shifts uh anywhere from four to six hours every day for the last three weeks helping unblock all of the questions um that all of our attendees had so these are without your help and support as mentors and you constantly giving us 24 7 support on on the attendees uh discord will we would not have amazing projects that we saw today and lastly uh i want to thank all of our volunteers who helped run everything behind the scenes for our judging and for a handful of workshops and talks we ran uh you didn't get to see a lot of them directly but they're the people um who were with us executing everything behind the scenes so you had a smooth experience uh throughout everything that you experienced for the last few weeks and lastly i want to quickly thank members of the global team i want to welcome luke who joined us to lead our marketing uh just two weeks ago i want to thank catherine who's been helping out entrepreneurship partner sponsorship and partnerships she's been the one coordinating everything for all sponsor prizes and all of her interactions with our companies and uh without her support we would not have an amazing experience with our sponsors one especially thank emily hobbs who has been the person managing the entire discord and our event experience from from the support side and operation side every time something happens for this event it's emily making sure that it's happening according to plan and without her help and her kind of constant perfection on getting and executing the right things we would not have a really smooth uh scaling ethereum i want to also thank andrew from our team andrew has been running everything that we do online um really smoothly everything you see from our zoom chats to how we record things to managing or judging to this live stream itself all this thing is because of all the work and and effort and planning andrew has done i want to thank jacob uh from our team jacob lee's partnerships and sponsorship side of global and everything you see about how we work with our sponsors how we think about prizes how would think about the event experience and and honestly just what it takes to make sure that we're offering the best experience to all of our attendees to learn and experiment with with what's happening in any given category whether it's dfi or scaling or nfts that's all thanks to the efforts by jacob and also catherine and i also thank heather heather is the one that puts keeps us all the same in check she's the one in charge of our entire vision and planning of what the rest of the year looks like and what each global does as a company and everything we look at and the lens we look everything from is because of all of the work and planning that goes on and gets executed through heather and lastly i want to thank liam um we're we're finally running all of our events at scale we have anywhere from 50 to 60 countries uh and people from so many different places and parts of the world uh it ended like uh interacting with us whether it's on discord or on our dashboard or or on our live tv uh interface all the tech and behind the scenes that work that goes into managing this event from your dashboards for check-ins to judging to submissions all that is because of all the work the game is done so thanks again to everybody on the global team and uh before we before we wrap i do have a few quick announcements so we saw 12 projects today and we called them the finalists and we really kind of just didn't really go over what what that means we announced some of our our all of our sponsor prize winners but we still keep referring to everybody here as a finalist and part of that is because if you've not been to any global event before we really like to kind of highlight that these events are not designed to be competitions our goal is to get more and more developers into the web3 ecosystem and as such everything is designed to be focused and prioritized on giving you a chance to experiment and build cool things that you are excited about so we don't have uh first like in third place as part of that uh goal and when we say somebody's a finalist they are all our top first place uh for a lack of a better uh term and i want to congratulate all 12 teams here for uh for winning this event and as for what that means uh we are going to be giving a thousand dollars in stable coins to every single member for each of these projects so collectively everybody who presented today uh is uh as a as a one of the 12 teams is winning thousand dollars per member so congratulations to all of you and also to everybody who won a sponsor prize uh please be patient we'll be following up with you over email and also on discord about what the amounts are how you can retrieve them and just what the next steps look like so i will be in touch with all of you uh very soon and of course um this would not be any global event if we don't tell you what's next so um as we wrap this up i want to quickly announce that our next event is already live and i'm super proud to talk about our next hackathon it's going to be hack money we're relaunching hack money for 2021 it's gonna be our biggest event uh of this year we're we're gonna be a thousand person event entirely focused on defy and as of right now we have announced this and submissions and registration is open so if you are interested in participating whether it's as a hacker or a speaker or a sponsor you can head over to d5.ethglobal.com and check us out the event is going to take place on june 18th and i wish and i hope to see all of you participate again in hack money and do a lot of more cruel things with t5 so thank you so much for coming to the scaling ethereum finale and thank you for all of you for the last three weeks who who participated at the event and watched so many amazing talks and built on really cool projects before we end today i want to um i want to make a an honest series i want to make a quick comment on on something that happened earlier this week we lost one of our dear friends chuck the gulp and shakti was in charge of running india in that folio it was very unfortunate that we launched aktidi to kovet and i want to take a minute here and just thank shakti for all the effort that he's put in over the past few years to to really bring the indian community to where it is now without shakti we would not have tens of thousands of developers in the ethereum ecosystem and the web through ecosystem in india without shakti we would not have a broader student led and a student group of developers that are excited about what's happening in tech altogether through his efforts at defolio and shakti is somebody we've worked with for the past three years to organize india which is the largest event in india uh related to crypto and ethereum and without him things would not be where they are now shakti was a dear friend and he will be sorely missed and we wish everybody in the death folio team and chucky's family or our condolences and i hope that you rest in peace shakti so with that thank you so much and um we hope to see you in the future 8 global events bye-bye you 