hey everybody thanks for joining us again this afternoon it's a lovely monday we're getting started here with mario from conjure finance i will let him take it away um we're going to be doing q a afterwards so if you want to post your questions in the chat we can get to them i will give them to him and he'll answer them all after this session and if you can't i would recommend linking up in discord in the conjure channel mario thank you so much for joining us and the participants today i'll let you take it from here so hello uh thanks for having me my name is mario i'm from concho.finance and uh i will be with you today for the next 30 minutes and i will present you what we are doing and how we are participating for you in the hackathon so let me quickly share my screen okay so in this session i will give you an overview of what concept of finance is um uh and especially what our open working framework is um then i will go will show you how to create your own uh oracle within within just a few minutes where you can use any api uh and then uh basically let it uh be on chain so that everybody can use it and at the end they will show you um for the prices which we have prepared for you uh but we will show you at the end of this for the end of this hackathon um so basically what is conscious dot finance and the open oracle framework so contra let's basically let you create any synthetic asset you want basically 100 permission list for example um you can take any oracle source you can find on chain and use them and combine them to make your own synthetic asset a few different ways we you can you can combine this i will show you later in this presentation uh then you can take zero interest free loans on the synthetic assets so the fees are just in one time at one time because they're for example you can as the creator you can set a minting fee uh and the people who meet these assets are then paying these uh meeting fees are to you uh so basically that's just the only time where you have to pay this fees and basically we're also compatible with all oracle sources out there which is which are on chain uh and actually we have deployments on basically every uh ethereum uh testnet of course on the zero main that we launched in end of may and also we are deployed on the polygon network and our open oracle framework um basically the open oracle framework lets users set up their own oracles with just in a few minutes uh you can bring any api data on chain so basically any oracle feed um we also support multiple revenue models uh at this at the oracle feed level and you can also make multiple feeds per oracle so basically we'll just one uh one transactions to pull them update and create up to yeah we tested it with up to 250 feet that's possible in one transaction so pretty cool uh and then we have an extra repository ready for you to use basically um where you can uh just fork it clone it and run your own note and start signing your own uh oracle database right away and also we have a keyword contract ready which also uh lets you use the time weighted average prices for any oracle um which we are providing or maybe you are also providing in the future for us and for your teams so basically um yeah so basically a little overview of the open oracle framework um it's basically a ready to use code because we have already deployed a factory contract uh i will show you later in detail how you can roll your own oracle uh in just a few minutes it's just a simple step program so don't worry about actual code it's very easy to set up and you can really do use any api out there so for example um if you want to bring like a commodity data on chain which isn't actually there you can just grab it and provide the api so a get request and basically uh you know within a few steps you're ready to roll and bring your or actually on the on chain so basically i will just go over the actual steps which are required uh to basically create uh your own oracle start signing it and actually providing feeds online on chain uh and then we will look into detail how this all works um basically we will dive a bit more into the code and uh how to run the actual node so give you really a step-by-step uh experience here so the first step is you can see we have actually the factory contract which is uh yeah which just takes a few arguments um and if you provide this uh you can actually let's say mint a new oracle uh contract just for you just for your team uh and i have linked here the polygon version and also the ethereum version of course we also have rinkyp versions for testnet available and basically you just have to go over it and provide a few simple attributes since this is an oracle it's all about designers so for example in this uh configuration we're just doing a one of one configuration that means we have one sign up design of ratio is one so basically every time this signer signs a transaction the data feed is then provided on chain for the specific asset that means for example if you just blow it up and have for example three signers and the threshold of two that means every time two out of the three uh people sign or the address is signed then we have the data on change um we also let users specify a payout address uh the payout address is used basically i said before you you have we support different uh revenue streams if you want to uh provide oracles for the one one thing was basically you can provide a coaster feed you can provide like subscription pass which actually suits like as a subscription pass but not for one feed but for the whole oracle and also you can uh do donations every time so that you see if uh people actually like this intent like support it and the payout address is like the address which can actually get the fees you can also add the zero address here and the zero address will then do like an equal split over all designers this example it would be just one the subscription pass price is just an argument uh to have the additional value set so basically um after the contract is minted you can check the event and uh yeah afterwards the new oracle framework is basically set up for you and would be ready to go um i will show this later to you so you can then go to the github repository and check out our open oracle framework note code which is basically a node let's call it so so basically there are two scripts in it one script is actually um the script which actually generates the on chain data feeds so basically the list which uh then so your oracle knows which actual data feeds can be signed and the other one is basically running a synonym signing mechanism in the background so for you to become a designer so we also provide like a little google uh spreadsheet which uh actually right as the time being um is like the data feeds uh and uh where our script our note script actually grabs the data from we will take a look uh afterwards in it so basically uh the script just pulls the data from it and that's where i said in the introduction you can use any api the apis will also be found there and uh you can just fork it and uh or even make a new database call but uh right at the moment it's just a google spreadsheet where we're just using um so basically it would just look like this for example you have like the oracle addresses here uh the feed name the feed ids which is which are just the ascending uh numericals then we have the api endpoint uh we'll show you later in detail the update frequency in milliseconds sorry this is in seconds uh the decimals which have to be parsed and the parser code it's basically if you walk down the json object and you can see for example you get the raw data with this uh json representation of the api uh and if you walk down to get like the actual value which has to be parsed in the description which uh yeah then works uh basically for internal processes um so basically this uh javascript file uh setup features um basically sets up in the first sets of one transaction uh where they so that they already then knows um basically which feeds are actually in and which feeds uh have to be signed in the future so it's basically just a one-time setup transaction and we said this transaction can actually be sent by uh any signer in the oracle you can also uh send this transaction around this script once again if you like have for example new data feeds updated or if anything has changed so it will just modify the the values in there um so as i said we'll check for the google sheet um and they will make direct course yeah so so basically this final script is of node.js script which we also provide in our github repository then uh goes in a loop uh over all the data feeds we have here for example you can see it's okay we have the api and you have the the value which which which it is actually has uh found uh as a value and uh these values are cached and then at the after all um values have been parsed one transaction to the oracle is sent by each signer of course um to save gas and uh yeah then the feature actually signed um so basically that's just a little screenshot where you can see okay we have like um i think in this this case it was like yeah a lot of transactions and uh yeah it's it just got optimized in this case so you can see we can as i said i think the extreme case we tested is like with 170 or 200 feet per with one transaction so you can actually sign a lot of feeds yes um and at the end basically after now that the feeds are signed they are basically on chain so basically their values on chain for each of the data feeds and then these feeds can actually be used by any contract in this screenshot uh i just used uh yeah one of the feats we already have on the theorem this is actually um this drop down symbolizes like our oracle framework and this actually uh can be used at our control platform basically that you can uh yeah select it as a drop down and uh make a student out of it for example yeah so basically um i will uh stop with the presentation here at this point and uh now we go into the details so that you can see uh after all these slides uh how it actually works and how it actually looks like so at first um the first thing i said is like we have to go into this open oracle factory contract i'm here at the polygon network right now and uh you can see that the code of course is all public in our github repository i will point to this at the end of the presentation also documentation everything available um so basically here you can see there have been a few oracle framework means and if you just go directly on the contract here for example if you go on the right contract this was like the the field order menu which i was uh showing before in the presentation where you can actually um yeah fill in the signers sign up ratio payout address and the subscription pass then yeah so basically after this is filled and the the new oracle framework is basically minted um you can then switch over to the oracle framework and you can see here it was just a test but here you can see you have this submit feed function which was called i actually was calling it right before the present invitation but basically what it does it's basically um you can see that the feeds are actually signed so basically this contract uh is basically uh with the configuration one sign or one threshold so whenever the signer actually signs then the oracle data feeds get pushed so when i just go over so because i wanted to show you also how the google sheet looks where we have like the data and everything available so for example i think i showed you already this here uh from the presentation but when we take a deeper look for example at this uh yeah euro usd here at this uh yeah at this link basically which is actually the the get api uh and if i open that you i will get like a representation of this here where i have like yeah multiple forex data database is usd and yeah then a lot of other currencies and what i meant with this parser here um basically i will have here the quote and then euro so basically it means i have to go to the quote and then we have this nested json here and after we find uh the euro we will find the value so basically um that's what the internal program then passes so basically the oof node basically passes this then um yeah let me quickly jump back here um so okay we saw this so for example um we also made different differentials here for example the node we are actually running on the theorem has just these uh four data feeds because um yeah obviously it caused gas to sign the the transaction of course we also have like a wikipedia version which is always up and running uh because uh so you can you can also check them out um polygon version and like right now for this workshop i have like this this little virtual version um if we now just take a quick look for let me just stop here and share the new screen yeah so basically i'm just switched over to the code because i said you can just clone our open oracle uh note github and get the basically the basic code which is uh which you can actually run and uh yeah actually yeah it's ready to use code the only thing you have to specify is here in this uh env template um you have to provide the private key of the signer address um the rpc node i i think i don't have like the inferior key here but you can also use alchemy for example if you want to here at the oof address you have to paste in the address of your newly minted open oracle framework the sheet api and the sheet id um is basically the one i just showed you so you can actually let uh yeah if you actually clone uh the google sheet is this these two values will also change of course but yeah you just have to grab them out of the google sheet and the sheet title is basically the last of the of the sheet for example we had like ethereum polygon workshop yeah and and ringkeeper the first one so the first uh transaction i showed you was basically this uh setup feeds and the setup feeds are just a little script which basically i told you just generates the new or which basically registers the new uh basically the basic feeds which uh are provided by the oracle game yeah so this is just a one-time transaction and after this basically you can uh get this off no script descript uh if we actually run it live right now for example um as you can see it will go over all the data feeds we have in the workshop tab of course then it waits for example now it's configurated for the polygon network it will submit with 0.4 grey as the gas price then you can see okay one confirmation confirmation message okay we have like seven feet submitted um at the time stamp and then we have the transaction so basically this script would run periodically for like every hour uh you can also if you want like shorter time periods uh adapted in the code it's no problem so it's just the one uh reference object you have to um change there but basically now i will stop it but if you run it in the background uh it's just one time for the code and then you can just run it and leave it there and as long as if you have funds for example ethereum or matic token we will just uh continue assigning uh this script of course if you want to run it in a zero network mainnet has like a few little uh tweaks built in so that you don't uh overshoot gas or if there is times with uh high gas uh that you don't like uh pay crazy amount of ethereum standard so as let me just simply switch the screen again um [Music] all right so basically i told you um you have the kit our github is uh public you can uh check out our contract you can check out the code you can check that that has everything it's a contour fi but we have like the special um uh repositories for the open oracle framework and also for control dot finance but you will find them uh under control fi and also you have we have like the documentation for the open oracle framework it's uh also linked at the home page uh yeah on this at the sidebar where we uh there you can also have like a deep red um how like the how the subscription models work for example donation subscription subscription pass or the fundamentals work and also you can check out our deployments here for ethereum rinkeby and polygon network um and also of course we have like same documentations for contour our synthetic asset platform you can also check out the deployments uh little overview over the contracts and also of course we have the contracts linked in our uh github repository so just a little uh swipe over to uh contour so basically what i just uh showed you the whole oracle deployment here for example if i'm at my concert.finance and on the create tab you can basically let me just unlock the wallet automatic network okay yeah so basically you can uh just create here any arc uh any synthetic assets you want to and we just made a little template here for oracle framework uh where we provide our four feets we currently signing and created for the open oracle framework but for example if you want to integrate your own feed uh for example you have created an open oracle framework and they have created a few feeds you are always able to uh plug in via the custom option here for just have to paste in the oracle framework address signature value would always be zero in in this case the call data and for example like 1840 decimals and then you can uh use your own values which you actually signed or from any other oracle framework out there but not not on the open oracle framework but basically for any uh oracle framework uh or out there so you can really lose any data no problem so if i jump back here into the presentation um so basically the open oracle framework and conjure uh you have unlimited possibilities so for example you can create like uh fully on chain trading bots where you use indicators provided by oracle framework or this time weighted average price contract we are also providing uh to get a new data feeds um or for example you bring new commodity prices online but really really many many more and yeah we are also still discovering all the possibilities uh there are with this framework stuff so basically now uh to our prices we have uh 7500 usd uh worth in total prices and it splits down to um one second just a pool price is denominated with 5000 us dollars then we have and we have the most interesting use cases where the first place will get 1000 us dollar second place 500 and the third place will go with 200 us dollar for the most interesting oracle uh feed actually which you can provide we also have a price for 200 us dollar here uh and for the best synthetic assets created on our contour platform we will give you a 600 us dollar impress so basically um i'm now uh through the presentation and through the through the workshop and uh i will now um going over to your questions let me just check so maybe open the chat so basically are there any questions because i don't see them here in the zoom chat looks like we're pretty good on questions kevin says he's still getting his head around four years presented i think there will be questions in the future a lot but basically if if there are no questions right now it's absolutely no problem uh we are here for you uh in our discord channel and also shoot us and match messages anytime so please just ask us the question afterwards if you have them yeah we know the best questions come right after the conversation and so you know that's why we keep the discord channels open for everyone well thank you mario for presenting this was really fun i'm really glad that we were able to have you today and thank you to all of our participants for being here today and spending your time with us thanks for having me of course we will be closing the session here um stay tuned we have another one coming right up at 3 so there will be more things to wrap your head around very shortly 