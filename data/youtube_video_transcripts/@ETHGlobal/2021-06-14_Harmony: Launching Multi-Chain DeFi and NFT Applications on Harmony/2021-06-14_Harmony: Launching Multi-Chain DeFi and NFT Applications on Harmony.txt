the application on harmony and uh if you have any questions please post them in the chat you can also get on discord after this workshop to engage with uh the harmony team and ganesha so without further ado i'll let you take it away hello everyone welcome to hacker money hackathon uh my name is ganesha i'm an engineer at harmony i work on core protocol developing sdks ecosystem and more recently i'm managing the interoperability of building bridges between harmony and other blockchains in this workshop i'm basically going to provide you all the materials that you need or where to find them to get started on building on harmony to begin one place you can first start is a dark start harmony.1 where you can find basically everything that you need to get started to start with general information about harmony and then there is a section on developers we have been working recently a lot on improving the developers documentation to help you guys get started building on harmony really fast and the third section is about networks where it's mainly about validators delegators and token holders and so on to begin uh yeah at any point in time if you have any questions uh feel free to post in the zoom chat or in youtube i will be able to take some of the questions towards the end to begin harmony is a layer one blockchain uh which is which has proof of stake and also it's a sharded blockchain with currently running four shards overall 1000 nodes securing the network and harmony has about a two second transaction finality and out of the 1000 dollars currently 800 of them are run by the community and how many still runs around 200 nodes if you look at harmonious roadmap mainly we are keen on improving the adoption of our blockchain by helping developers build on top of harmony and also we are focusing more on making our interoperability solutions uh to connect with other blockchains uh in a manner that is both efficient and in terms of cost and time and finally we are also very focused on fully decentralizing our blockchain so that whole blockchain and everything is done by the community you can read more about harmony and its technology under the section here key features being consensus and sharding randomness uh proof of stake token economics etc so i won't spend a lot of time on this theory um another aspect of harmony is its horizon bridge if you guys some of you guys probably i already have used the bridge currently it has over 5000 unique users and over 30 000 bridge transfers already done in few months feel free to check out i'll be talking about like how you can build application uh using the bridge sdk in few minutes horizon bridge is basically a bridge connecting between harmony and ethereum [Music] you can find some materials on how to bridge it's basically user guides over here that lets you like connect metamask and bridge between ethereum and harmony you can bridge any kind of yes with 20 tokens vrc 721 nfts and also you can bridge how many native tokens like one and also hrc20 which is the erc20 of harmony to ethereum you can also look at some of the existing dabs that were built as part of some of the hackathons for example also the partners or the products or the projects that are that have built on top of harmony for example in terms of defy there are multiple decentralized exchanges like viper mochi and so on and there's also uh recently we had released nft marketplace davinci that's also attracting a lot of users and also there are other forms of applications that you can take a look and in terms of how many sql system you can see in this map there's a lot of products and partners that are integrated with company and more coming in this year and there are various channels uh to interact with the harmony community and there's also a well established grant program where uh if you are if you want to take your project beyond hackathon you can apply for grants and we can see through all i'll see see it all the way through to midnight and attracting users and so on so without wasting a lot of time let's go to the most important section which is the developers as i believe a lot of you guys are looking to build on top of harmony and in terms of if you are coming from the ethereum world harmony should feel very familiar for you guys building on top of harmony because uh harmony is fully even compatible as well as ethereum tooling compatible uh when i what i mean to say is that you can use all the ethereum tools like truffle remakes wallets metamask web3 etc right out of the box of course we had some minor issues that we along the way we fixed and right now most of these libraries are fully compatible with harmony and you don't need to you won't hit the major roadblock here the first place to start is just exploring the harmony blockchain via json rpgs for example here we have some examples on for example if you want to look at let's say protocol related method want to see how many latest header uh there are few example commands that you can use to query the blockchain that is like first way to get feel of the harmony blockchain if you want to take further you uh kind of create a wallet uh how many follows a back 32 address format and it also which is called one address it also follows address that is uh in ethereum both are works well with the harmony so either of them you can use and in terms of develop development environment there's uh mainnet testnet and also a local net that you can spin up and there are test file sets using which you can obtain uh some uh one tokens uh to begin your uh development another currently explorers uh where you can look up the transactions uh for a major difference between harmony and ethereum is uh basically in terms of development uh how many transactions include uh shard ids which is not the case in ethereum uh but we have kind of able to abstract it away so that all the ethereum sdks can be used libraries and sds can be used out of the box i'll go over some of the sdks and examples in a bit so we also have some sample smart contract deploy tutorials uh and for example if you look here and this github uh there's some examples here on how to deploy contact how to programmatically uh interact with the wallets like uh metamask math wallet or one value um at any point in time apart from uh when you're delving on how many during this hackathon or beyond of course we have a dedicated channel uh for this hackathon where uh you may feel free to ask any question we'll try to respond as soon as possible apart from that you can also ask your questions in uh talk.harmony.one which is a forum for uh harmony where we have a dedicated developer sub forum where you can ask [Music] your questions apart from this forum uh there's also a reddit uh harmony developers channel where innovative ideas are currently being discussed so i encourage you guys to check it out and there are for immediate responses there there are also a couple of uh discord channels uh uh links are provided here and there's also a telegram channel where you may you may be able to find uh kind of a faster uh responses sometimes we still encourage uh you post your questions and talk dot harmony that one so that it can benefit other developers as well yeah uh there's a unknown limitation which is currently uh being work done is uh uh all the crushers generally uh i mean all the smart contracts are right now deployed onto shard zero and there's uh the contacts won't be able to interact with the smart contract deployed on other shirts so that's one uh item that is on our roadmap where we want to make the contracts deployed on different charts interact with each other you can find more information about for example ethereum compatibility we are maintaining a github repo here that uh constantly being uh well we try out all the new tools wallets etc for check for compatibility and uh you can take a look at this github vehicle for uh to know whether certain tool or library is compatible or which one to use and so on so in terms of network and faucet that uh already this and getting started guide here as well as you can find it here um let's go over deploying and harmony there are different uh as a ethereum developer you guys already know uh you can deploy using remix which is the most convenient and then your next is a truffle that you can use hard hat is more convenient than directly with 3js we also have harmony javascript sdk which is kind of uh most popularly used uh but right now web3 is web3.js is something that is even more convenient to use so let's see uh how to deploy certain contract using remix it should be fairly quick i just open the remix id and make sure metamask is uh compatible so let me increase the font just to make it easier here so for you can add how many networks like testnet and mainnet into your metamouse just it's a custom network very standard where you go here and add the rpc url and the chain id this information is also available in docs.com as well so after you configure that we load the remix and let's go back here and let's say copy this simple counter contract um just to see it working create a new file [Music] [Music] and go here and compile very standard nothing fancy uh there's no error just a warning that is fine select injected web3 it is automatically connected here to harmony testnet and then let's select contour and deploy so metamask transaction up here confirm should be able to see yeah it's deployed so you can see the address here then you'll be able to interact with the contacts so it's fairly straightforward uh right exactly the same way you do it in ethereum there is no difference you just have to come and add your harmony network into your metamask and then that's it use as it so we saw a contract deploying and the next step is there's also a harmony version of the remix that is customized to work with the harmony one wallet and math wallets if you would like to use that it's also possible it looks look and feel like this is exactly same uh just there's a customized harmony uh deployment interface where you can select a wallet that you want to use and do that everything that is similar to the image and then if you don't want to use remix that's also truffle in which case it's also straightforward just uh make sure to use a more recent truffle version the previous truffle had some issues with respect to hasty wallet provider otherwise it's fairly straightforward what you need to do is in the truffle config add harmony networks with the rpc url and also how many is this a different uh derivation path for reading the address out of the mnemonics so it's not exactly same as ethereum it's slightly different so make a note of that if you are trying to load an account from the mnemonics most times developers face this issue where they assumed the particular address and they have some funds there but when they are trying to deploy using that account it's reading another account which doesn't have funds and so they encounter deployment issues so just to note down that fact if you are using private keys nothing needs to be changed it will directly work as is not on the network id if you are using the minute basically there is a different network id for that [Music] rest of the stuff deploying using truffle is exactly the same and hard hat i also provided here i really like this hard hat tutorial so i just referred to that tutorial here in the step number seven where that is when you try to deploy your contract to a live network that is when you basically specify uh hard hat config where you specify your harmony network here i'm saying testnet with the regular rpc url and loading my private key that's all i need to do simply run hard hat deploy split and point it to the network so one thing uh like you guys noticed deploying and harmony should feel exactly the same as e3m there is no less learning curve or resistance in terms of deploying and then we also provided a guide standard web 3 using web3.js how we can deploy and how many this one also uses a solidity compiler programmatically to compile even compile your solidity file and deploy so you don't even in this role tutorial you don't even need to compile it externally feel free to check it out and there's also harmony js javascript sdk that is uh which you can use to deploy and how many there is uh yeah this uh example demo repository contains all the relevant code for this uh tutorial we also have a triple box for harmony which you can pull and right we get get started okay yeah and then there is uh deploying hrc 20 hrc20 is basically nothing but the erc20 uh contact on the harmony or token there's a tutorial here that basically says how to deploy uh hrc20 on harmony uh this uses the uh a repository hrc but i mean even there is a even easier way to deploy your own hrc 20 token which you can find under learn tutorial currently tutorials are limited but we are keep on adding more and more tutorials plan to add more tutorials here so for example in remix if you want to do let's say this famous deal with open uh 20 you can basically uh let me close this here go back here and create a new file [Music] here yeah it's compiled and then go here same connected to how many tests and select a gld token requires a muscle supply and then it's the fastest way to deploy your own erc20 my opinion and similarly you can do the nfc deployment we have added a small tutorials here and they'll learn expert tests over the next week also add more and more tutorials uh to help even help more for the developer to get started so that's about deploying and harmony and then we have uh the mentioned several sdks popularly web3.js is still you can use because most of you already probably have some applications built on top of ethereum so you can easily bring it over and deploy it on harmony so retro js being still i see being a most popular option and then javascript sdk and there's also golang cli that currently we are adding more and more features to even do the smart smart contract interaction using the golang library there's a java sdk as well uh python recently had uh had a pr that added several features to this uh by harmony library uh using which you can perform various things [Music] not only interacting with the blockchain but transaction signing um and also staking feature uh of course uh if you want to use web3.pi that is also uh even better that should work just right out of the box we are going to add more tutorials in this sdk section or more examples in the coming week so that's about sdks and there's uh api methods what are all the blockchain apis the json rpgs that are available here uh i mean still i think most up-to-date dot places man i can y dot io is a place where you can find uh and try out all the distribution it's similar to eastern jason rpc wiki um [Music] so that's about apis in terms of wallet uh most popular metamask uh this section of the wallet is going to provide examples on how to interact with wallets programmatically this is one thing that you need for the app development so uh there are some great examples here even interacting with one wallet and so on it's a nice place to look and tools uh yeah it's still improving but we have added some tools for example horizon sdk like um as part of this hackathon we want to want developers to build more and more d5 nft gaming across chain applications so you may find this horizon bridge sdk this is the sdk to operate with our horizon bridge in a programmatic manner so um basically there are two versions of the bridge that are currently deployed one is a minute bridge dot harmony that one there's a one test net version that you probably want to use when you're developing and there is already a bunch of examples provided in the bridge sdk repository which i think i have it here [Music] as you can see this uh it's in harmony and there are several examples on going from harmony to ethereum sample application uh using node.js there's also application that integrates with browser um and there are more more examples so let's just walk through this one uh real quick so let me open my command account and the secret [Music] so i create a sample repository and pull the bridge sdk i'm going to demonstrate uh how to use sdk to forgot okay the testnet bridge is connected between coven ethereum kovan testnet and harmony testnet so in this small demonstration i'm going to show how to send send over some bust tokens that license cover and test it to harmony using the investigate so i created a sample node.js repo and then i pull the bridge sdk and then after that i basically create this file that will do the bridge operation so let me while it is uh installing packages let me go over this example here you can see first thing i do is uh from bridges okay if you pull some classes and configs the sdk has several log level uh where you can get the full detail information or only success error ratio uh etc and and you can also turn off the whole log and you basically have to connect to the ethereum wallet remember this is bridging from ethereum to harmony so you need to have tokens in the ethereum wallet so you provide connect to that wallet then you initiate an operation sending tokens the usd amount uh receiver one address and the sender next address um that's it basically uh a simple over here i think this is done so let's create [Music] and then just simply run that particular program that says one wallet balance before uh creating an operation ethereum to harmony sending us token amount all this and then creates an operation and the bridging has several steps approving bridge manager and locking the tokens on the ethereum side and then waiting for enough number of confirmation so that on the ethereum side we are able to reach finality and then finally minting and harmony so you can take a look this is where it should be straightforward and after that when completed you can go to the testnet explorer and you can see here the operation that i created is under progress that is currently waiting for finality so that's how you basically use the horizon which sdk to kind of programmatically interact with the bridge uh i have few minutes so let me rest through a little bit so you can also find other tools here graphs also integrated harmony there is a docker file that you can run to run your own local graph node a good example is that horizon bridge currently has a sub graph that's been utilizing the graph and then there are other tools like ganache harmony react and also oracle's like uh ban and chain link also exists you can also find several examples uh along with the source code uh under showcases and uh hackathon currently our list for developers to build and more importantly there are also bounties that you can take a look uh those have like there are many of them um already there are several developers have contributed to these boundaries in the past um yeah um i think that's about it thanks for participating and hope you guys enjoy building on harmony thanks ganesha um i don't know if you've had a chance to address every question in the chat as we're going um i we're running out of time so i can send it to you directly if you want to address them any of them that is remaining in the main channel i'll post this answer to these questions in uh hackathon harmony channel yeah exactly so you everybody here if you have more questions for getting a shout out please just hop over on the sponsor chat now that is in the public discord that you guys have uh to talk directly with harmony yeah there's already all the information that you need here under the resources you can find the discord channel telegram beyond the hackathon channel you can also use these channels to ask your questions and get answers thank you thank you ganesha thank you everyone for joining us today and we'll see you on discord 