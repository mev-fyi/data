okay so uh yeah i think i'll get started right now all right so i just want to welcome everybody uh thank you guys for all coming to uh your hack fast judging session which we'll start right now yeah so just going over some uh quick uh statistics of this event we've had 650 hackers from 61 countries in 18 time zones so it's just really great to see like everybody from the ethereum community coming out all over the world to come participate at this event and just for you guys attendees i'll give you guys a quick overview of the judging format in total you have seven minutes per team four minutes for a demo and three minutes per q a session with the judges will where they'll be able to ask you guys questions about your project and inquire more about it and then we'll take a ten minute break for every six to eight teams um we don't have that many today so i don't think so we'll probably take ten minute break at around 5. and the judging criteria was based off of five key points which is technicality originality practicality ui ux dx as well as the wow factor of your project and a friendly reminder it's good to keep in mind that this is not a competition we are here to learn we're here to explore what's possible and not all of us are aiming to become successful businesses or anything and the main focus here is just to get feedback and overall just to create a strong ethereum community here at haccafest so yeah and i'll give a quick introduction to our judges we have carson from textile.io and we have vijay from bits crunch if you guys can give yourselves a quick introduction hi carson here from textile um this is my second well it's the second and my second hack fs hackathon as a sponsor and um i was pretty pretty excited to be engaging with everybody in the channels and things like that and looking forward to seeing what you all have built cool so myself vijay i'm living in munich germany i'm one of the founders and and the ceo of bitscrunch so we are currently operating in germany as well as in india and we are one of the sponsors for this event as well so previously uh a few events back i was in the organizing team but yeah it's it's good to be on the other side of the event now uh good to be judging this event so yeah looking forward uh thanks all right fantastic looking forward to it as well um so let's just get right into it i guess um yeah so we'll i would like to just ask team gainesvault to come up and present your presentation so reminder seven minutes in total four minutes for your video presentation and three minutes of q a so you guys should share your screen real quick all right hello everyone hello hey there so i'll share my screen is that working uh looks like it yep we can see welcome to games vault and you're signing with metamask button are we supposed to be hearing sound right now so are you getting sound through no no we're not okay um yeah pretty common problem sure so break it back to me yeah so if you don't know how to do it tell us if you got it i think this should be working out okay hello and welcome to games a decentralized ecosystem for pc gaming the problem with the pc game marketplace today is that a handful of massive companies have a monopoly over discoverability content requirements exclusivity and take up to 30 of sales revenue for the privilege of using their platforms our vision is to create a community-owned game marketplace where developers receive 100 of their sales revenue and consumers have true digital ownership over their games let me walk you through the mvp we've developed for hack fs first we need to sign in with metamask next we need to switch to the polygon network here you're presented with the store page which lists some games added earlier for demonstration purposes all game data is stored using textiles threaddb and here on the left you can see we're retrieving tags from the game's database you'll notice all the games are price-thematic but technically we can use any currency even credit cards using unlocked protocol let's take a look at some of the games [Music] here you can see the game listing for cyberpunk all game assets marketing images and even the game builds are stored using ipfs web3.storage technology on the right you can see the price but 60matic is a bit too expensive for us so let's find a cheaper option so here on this game you'll notice that the price is much cheaper so let's go ahead and buy this game so you want to confirm the price confirm what's actually happening here is i'm buying an nft which the developer minted when publishing the game this nft will give me lifetime access to game update updates but can also be sold or traded on open marketplaces completed and it was successful and that that purchase button is now turned into a download button and we're able to download again and this downloads a zip file or it could be an executable or any sort of file the developer chooses to upload for the game and this is all stored using web3.storage and you can also view your purchase games in your library using the graph restore we're able to retrieve a collection of all the games that the the user owns next up we'll go to the developer page [Music] so i'm already registered as a developer but if you're not um you're presented with a signup screen and you can pay a small monthly subscription using unlock protocol in order to get access to the developer dashboard once you've got access to the developer dashboard you can add your games you can edit your games you can publish your games and but you can also update your developer info here which is publicly displayed so what we're going to do now is we're going to add a new game and i'll show you how that works all right let's click publish what this is actually doing now is it's minting an nft which represents the game using unlock protocol so as you can see here this game has now been published so we can go to the store page and we can see indeed that red dead redemption has been published and it's available to buy for 30 matic cool so that's our demo yeah so uh you guys can move on to the q and a session now we're just having the question yeah if you guys have any questions we're happy to answer anything that you've got yeah i can kick us off and uh actually i'll turn my video on here um uh so for the when when i noticed that there's no fee for uploading or publishing a game um so the platform does it effectively you know in theory make money based off of like sales of the nfts does it take a cut or something like that or or is it purely uh cut free and everything just goes straight to the uploaders yeah so um in terms of sort of monetization models for the one thing that we really want to do is uh offer developers the opportunity to get 100 of revenue um so in terms of monetization from our end what we're looking at doing is offering sort of premium placement so kind of similar to the the in the uk there's a site called gumtree um where you can list as many things as you want for free but you can pay for premium space um so this is kind of a completely different model to what most games platforms are doing at the moment we want completely free uh 100 of royalties going to developers and they can even take their games and they can sell them on other platforms because it's completely decentralized um but if they want to use our platform um and they want premiums of placement on the store and they can pay for that also we get um we get a cut of the well we get 100 of the developer fee as well so developers have to pay a monthly subscription using unlock protocol and that goes to us cool great great so first of all henry it's it's a good project uh so you did a good job so thanks for doing it doing it alone or uh you have a team yeah so we've got mario in the in the channel as well um uh so me and mario both worked on it so it's just a it's a two-man team okay okay and then what about the future plans i mean what about the road map uh how are you going to proceed from here on yeah well this is our first hacker fest and actually our first web 3 project and we've got a little bit of front-end experience but mostly we're game developers by profession um so now that we've built this um we're aware of some uh potential funding uh sort of game specific funding so we're going to take this demo and we're going to put together a deck and we're going to pitch it as a potential project and transfer care some funding and builder into a into a full project great yeah cool nice thanks um and just another question from my end maybe is um so in theory i could upload a game asset for a game i didn't develop so there are any um you know you don't have to hackathon so you don't have to have this figured out but um are there any thoughts about how you might do sort of you know curation and takedowns and things like that yeah yeah that's a difficult one uh one thing that we want to do is some sort of community moderation um so one thing we were thinking of is that we were going to have a thing called a games vip pass vote vip pass and that allows once people own that pass um they get free games monthly um but another benefit of that is they they get sort of curator privilege and um they can kind of sort of uh let games pass go through or do like a certification process and they can help out with that um we're kind of new to that we're kind of new to sort of community moderation and things like that but that's something we would like to explore but in terms of dmca take downs and stuff like that i've got no idea how that sort of stuff is managed usually the gamification of curation is very interesting that's a cool idea i like that you sort of benefit in addition to like having the control of community moderation yeah yeah so time's up for the q a session that was a great presentation thank you gainesville for presenting your project thanks game as well brilliant thanks very much thanks for having us thanks up next i would like to welcome team scholar dao if you guys could come up and present your project you able to see my video yes i'm not i don't think we're hearing audio right now yeah yeah so if you got if you could unshare your screen and then uh click share screen again all right open access that's good there we go start it again now yeah i don't hear anything right now no no sound yeah so uh just stop sharing your screen right now like yeah like exit out are we can see it but we can't hear it okay yeah what's up yeah stop sharing your screen and then click share screen again don't select your window just yet but you have to find the option to share sound at the bottom left okay and yeah and then once you turn that on we can hear the hear the audio everyone i'm part of the team at scholar dao and we're trying to make scientific pyraming system more transparent verifiable and open we have two front end two back-end developers on our team there's a lot of problems right now with the scientific publishing system here are just a few there's a lack of transparency so peer reviewer matching which is facilitated by journals inevitably leads to bias there are huge barriers to entry because open access journals are costly for authors to publish on and close access journal expense for readers to access in the first place there's warped incentives because of high processing fees that lead to authors and reviewers being unable to monetize their work and there's a lack of an open reputation system there's several centralized citation indices but no open protocol that indexes all papers together in decentralized fashion and there are many impact factor formulas which are formulas that calculate the average number of citations your paper has received and because there are so many of them and different journals follow different conventions you never know which paper is making the greatest impact we solve these issues through utilizing many technologies we use decentralized storage open reviews and validation ownership by default and uh open reputation system more is detailed in the demo okay so now i'm going to upload the paper so uh i have viewed the in the entry for title the field the specific field the validator tip in either and the repeated address so now i'm going to upload the files so uh should be ethereum yellow paper okay then i submit it okay confirm we should have knight papers okay so this paper is still in draft stage and now i will use a validator care of who we add as the editor of a journal and then i go into paper number nine i start the validation request and confirm the transaction okay so we'll reload the page again okay all right now the the paper is instead pre-print and uh you can see here there is uh this just and then uh the ipf athletes work so we have already submitted their institute into the ipfs and yes this is the ethereum yellow paper okay so now i'm going to use my review account uh to um yes to add a review here so let's say i want to add review here and then paper review but the decision is accept this paper okay this page okay it's confirmed there should be a review the new review yes so it is reviewed by scholar to accept and now we can review the review uh so let's say i'm going to use mobility to account to to to publish the paper here we go now now the paper night is in stage published okay now let's talk about the reputation system of scholar dao so we use a sub graph to fetch different events happening in our smart contracts and then index them you on a graph node and then expose them through an api so as you can see there are like two papers here and then one scholar uh that has been indexed so far and this particular paper references this paper id 4 so that means this this paper gets one citations from uh here and this particular author or scholar uh improves their number of citations and we're also computing the h index which is a measure of productivity and the number of citations achieved by a scholar in the different publications thank you so much for watching yeah so that's it yep judges you guys can go ahead um okay cool great presentation thanks very much um so how are the are you using a service to upload to ipfs or how is the ipfs integration yeah we're using the web3.storage library for that okay great um and is the h the h index is it calculate like where is that calculated in so we have uh yeah it's done in the smart contracts as well as in the graph node as well uh like in the sub graph we fetch events from the smart contracts about like let's say one paper reference is another and then we uh like compute the h index in a function right okay and obviously the you know the index depends on essentially this being a closed system in which all papers are included in the system yeah um so we did think about like onboarding other uh researchers as well and verifying their identities using an oracle but then we fell into some errors and then we skipped that part for now yeah i mean that's a pretty tricky on-boarding issue um well okay i'll i have other questions but vijay if you've got f1 go for it nice one rajiv so it's a good work and what about the business model i mean if you are looking to scale up this business yeah so the validators are just like editors in a regular journal system editors or just journals and then they would need to stake some amount of tokens into our dao and then their tokens would be slashed in case they missed the uh publishing deadlines or if they have a like a lower reputation so the reputations are uh available openly so uh there won't be like civil attacks or something like i could make another um i could just impersonate another scientist but then my reputation would be low so then it wouldn't really matter if i have different accounts so and and then we also thought about having a uh a funding model uh in which peop people can just use quadratic funding to uh find the reviewers and the authors as well if they want to like get the paper published or research done so what was what was that you mentioned some technical issues oh sorry vijay did i just interrupt i uh no ways yeah so the technical issue one of them was the chain link in which we we were having some problem uh connecting the contract with the like the chain link oracle node so that was one and then in the graph part we had some problem uh uh like hosting it on the graph explorer it wasn't indexing it fast so we just ran it on a local node uh sorry to interrupt but i know vijay you had a question but uh we don't have uh our run out of time for the q a sessions it's fine so yeah i just want to up next we have team braniumverse so i'd like you guys to start when you're ready uh start presenting your presentation and thank you so much to scholar dao for presenting can you see my screen uh i can see you so you'll see me okay um oh yeah well i'm trying to find the share button right here let's do this again okay i think i got lost there yeah now don't forget to select the share sound option in the bottom left back in the real world can you hear me night spaces we can hear you but we can't see you yeah okay or we can see you not your screen though um how are you trying to share your screen are you pressing the green share button at the bottom uh share screen okay so i got to do it in here yeah and make sure to select the sheer sound option on the bottom left yeah i think um there we go all right too many windows up but just getting confused start raining is that it i think the real okay nice space of breathing yeah pseudo-ai to simplify life and its interactions crypto and ethereum powerful but complex with all the new terms and systems this complexity is preventing faster adoption by the problem public keys private keys smart contracts gas to regular folks all might known however crypto's power can be used to simplify its usage our uranium works real world objects and entities are mapped into smart contracts interactions are handled by executing smart contract functions all these interactions will create a knowledge base the suitable way i can use this knowledge base to learn over time you can perform these transact these transactions or even recommend others the end result is an automated and simplified world the stack we have brilliant ai the bow for governance an economy for payments uh cloud for daily storage and it's built on top of the decentralized centralized systems and systems like ethereum ipfs filecam both through storage and of course how do we experience brain universe teleporting it's like jumping from one reality into another it's totally visual uranium first simplifies life we know what we want meridian verse takes care of interactions and crypto complexity and maybe that is why crypto is complex it is for machines and we're going to teleport to let's say ac department uh advanced department um and maybe we can pause the teleporter for a second purchase a suit or something they can continue trying reporting and you would say to star wars and make a friend or visit you can even go to a land on the scene just teleport somewhere california see what's going on [Music] and see what's going on globally the real angles yeah make your friends and teleport to different cities and see what's going on a live event um or even teleport down the street what's going on so yeah you can close the teleport um teleport will go back to the main screen so basically this is the navigation i will teleport around um but to populate foreign companies and real world assets and then all the interactions will be what helps create uh so it's a different way of looking at things and very interesting thank you very much thank you so much for your presentation and we'll be moving on to the q a session so yeah judges take it away cool that's a very future futurism uh very exciting sort of presentation i'm wondering uh and it doesn't have to be all finished or anything like that but for obviously for the hackathon but how much of this has been implemented uh the only parts that were not implemented was like uh creating the nft i did uh use um i think mentee uh as a test um but the screen the layout that's done probably needs a better enhancement from a game developer but the i was able to also load the files onto i think web3 storage i use that uh um and it actually references it you know uh in the uh in in in the uh display in fact i was a little surprised that it actually worked just as well as like so the first few screens were being referenced within the app itself um and i just wanted to make sure that was fast enough but referencing the files directly on um web three yeah it was the right you couldn't even tell the difference in fact it was no different so that kind of worked really well and kind of showed the power of the distributed file system um it makes it almost as powerful or more powerful blockchain it almost looks like blockchain the files is distributed file system just as powerful and you could build some interesting apps on the distributed file system that maybe use the blockchain even for something maybe for persistence um you know for immutability um but it's so much faster i was kind of well you know i wasn't i was expecting some kind of lag but there wasn't right um so you were basically you were like hosting assets directly off of ipfs gateway yeah well straight on web 3 uh the well there's a back end sending the actual uh file name to the react uh um front end and then that actually references the web three so that entire interaction where you know it was done very smoothly you know that's why i was kind of a little surprised you know there was no difference between like the file the images being displayed from within the react app versus um it being sent from the back end and then being referenced from web 3. so um the web 3 storage that was pretty interesting good so i see this as maybe a like a way of uh oh um i think vj did you have uh yes i know i mean we are already running out of time so just one comment from my side uh it's it's a good project i'm in good thinking first of all it's uh what i see a lot of ui works that is still vending which is fine because it's just a hackathon we are here to learn so i wish you make more and more progress and just feel free to contact if you need any help thank you thanks thanks a lot all right thank you so much team bring universe for your presentation that was great all right um moving on i think we have team web3 dev tools if you guys could come up and start whenever you guys are ready so that's a way [Music] there you are all right josh okay whenever you're ready you can take it away i'm viraj an chin for the hacker first hackathon i've worked on web3 dev tools web3 devtools consists of dev tools powered by web3 technologies as of now it includes container registry and nft detection using machine learning models that is ai hub now let me tell you about nft detection nft detection uses tensorflow keras to generate a machine learning model to detect similar nfts based on the uploaded image the graph protocol is used to generate the data set required for training the machine learning model the generated model is then pushed to ipfs slash filecoin using web3.storage once the model server is started then the model is pulled from ipfs and used for the inference an ft detection model can be used using a ui or using a rest api as of now it only supports the crypto punx nft the data set can be updated to handle other nfts too use cases search and neft using an image similar nft detection detect smart contract address and token id for an nft using an image counterfeit and ft detection detect nft owner based on twitter profile image that is if cryptopunk's nft is used as a profile image these are the screenshots now let me quickly show you a live demo for the same so this is the home page for the nfa detection and what i can do is i can select an image over here now i click on search as you can see that it correctly identified that it is a nfd number triple line seven and it also shows the previous sale price and a link to buy this item and along with that it also shows similar related nfps to this one and here is another example for this event so just conclude the demo for nft detection now we'll move on to the next one and this is a container registry container registry allows you to push and pull docker images from ipfs and filecoin it provides a native docker integration via custom docker registry server it is powered by web3.storage and orbitdb the docker image layers and the manifest file are pushed and pulled from ipfs and filecoin using web3.storage the orbitdb is used to maintain the mapping of ipfs hash for the docker image layers and the manifest file now these are the screenshots so this one is for the docker registry server so in this we will start the docker registry server and these are the screenshots for push and pull and here is the live terminal so here you can see that the first step is to tag the local image for your docker registry server here this is our address and then what you will do is you will push the image to your custom docker registry server powered by web3.storage and you will see that each layer is being pushed over here and finally you can see that the manifest file is pushed then to test the further steps what we do is we delete the local images and then what we do is we try to pull it from the docker registry server and as you can see that it pulled completely over here and finally we downloaded the image locally and then finally we run a container using this uh docker image and this is the docker registry server which is running and here you can see the records for the various api calls which the docker client made here you can see that it uses web3.storage this concludes the demo for web3devtools thanks okay so first of all it's it's a good one uh we at bits crunch we are also working on counterfeit nfts as well so you can also write me and my question is so for this demo i i see that you use crypto punks which is kind of finite so there are limited number of crypto punks uh but but what are your plans let's say if if you go for an nft collection that is infinite that is generated over over and over again so you will have to retrain the model periodically okay so the way this works is like basically initially from the data set right we compute a feature vectors from that thing and then when a new image comes then you generate the feature vector using the model and then you compute the distance between those two images if the distance is very less then it's similar to that nft and then you will sort it like based on say if you want to see five similar images or one similar image like the best one or you want to see any more images okay yeah um cool so how um mirage this is you you did the um docker uh doc some of the docker stuff in the last hack fest right yeah is this so is this earlier i did three different ways so one was using power gate the another one was using textile hub and the third one was using a fleek uh in the past so this time i used a combination of uh web three dot storage and uh orbit db um okay um and uh what now so it seems like it could have been enough to just do the image uh you know nft detection stuff or the docker stuff what made you decide to do like a whole suite of tools because they're kind of unrelated but we have to experiment uh various different ways in which we could make it more popular basically the entire reptilian thing so one benefit of web 3. storage is right now 1tb is free right now so that is also a powerful use case because of that right yeah that makes sense uh okay well we got one minute left uh what's what's next what's the next step here uh so one thing would be like to connect with different people who need the uh the nft detection algorithm uh so that is one thing and uh like say it would be nft marketplaces or uh some other people and similarly for the docker thingy to participate with various projects who are interested in the solution cool and like uh doing that and i also wanted to research more different things also like see a service like cloudfront you know powered by web3 and things like backups or radius etc but i didn't get time for those things okay i'm good so uh thank you team web3devtools for your presentation i would just like to ask the next team coopart to please come onto the stages panelists and present one of you guys already hello sorry just give me a minute can you hear me yep yep all right so i can show the screen [Music] right away all right okay grow part is the first ever utile tile-based nft art marketplace create a canvas and add the first style the artists expand the canvas in any direction and add new tiles people can vote tiles in or out each canvas is its own gio and self governs some tiles are voted out and some tiles are rotted in to replace them canvas is sold and profits distributed to all its contributors hi i'm breck i first got the idea for go apart from looking at the 69 million people's nft the piece of art is made from 5 000 tiles merged together into a common canvas i thought it would be great if each tile was made from a different author and so co-part was born let's try it out go to coop.art and connect your metamask wallet make sure your wallet is connected to the matic mumbai testnet as i've deployed the smart contact on the polygon testnet once you are connected your e-address should appear in the top right corner you are now ready to create a new canvas or contribute to existing canvases let's start by creating create new canvas you are you you can see an empty tile and a few options first choose a tile size note that all tiles in the canvas will have the same size even for other contributors let's choose 130 pixel by 340 pixels you can also select the time period for other artists to contribute to the canvas let's choose a deadline three days from now after that the canvas will automatically lock and be put on sale meaning that no contribution will be possible now over your mouse over the tile to see its coordinates and an upload button you can click the arrows to expand the canvas on the right side left side top side or bottom side there is no limit to the canvas size this could technically scale to a million of tiles let's upload the first tile note that i am using ipfs with the insurer gateway to store the nft images and token metadata so it is fully decentralized and tile owners can be reassured that their heart is safely stored forever once the image is uploaded it appears in the tile you chose and a transaction to meet the tile is automatically started accept it to mean the tile as an erc721 token in the smart contract you can check out polygon scan to confirm that the transaction is indeed successful this canvas is now officially started you can add more tiles yourself or wait for others to contribute let's now go to the marketplace here you can see ongoing canvases that still have time left in their contribution period and canvases that have expired and have automatically been put on sale you can see the canvas that we just created with only one tile let's say now that i am another artist that want to contribute to this canvas i can click contribute and the tile editor will open and fetch the tiles from the smart contract note that i created a custom subgraph to fetch the data with graphql let me now add two new tiles to this canvas i am now done contributing if i reload the marketplace i can see that the canvas does display the new tiles let's contribute to another canvas here i can see tiles about typical rage comics however there is a tile here that does not seem to fit the theme of the canvas in that case i can avoid this style to be removed each canvas is its own dio and self governance you can click a vote or downvote on each tile and those with more than votes and upvotes will be removed automatically now once the contribution period of canvas expires no one can contribute to it anymore and it is automatically put on sale in the marketplace for now i've only implemented a simple fixed price sale at one matic as a proof of concept but i do plan on developing a more complex ocean's auction system soon when a canvas is purchased all the tile creators except those that were voted out of course are paid according to the number of tiles they contributed for instance if a canvas has 10 tiles and is sold for one matic each time creator would receive 0.1 matic if someone contributed it contributed 2 tiles to the canvas he would receive 0.2 coparts is a revolutionary way of building nft art cooperatively tile-based art will lead to new and exceptional pieces from thousands of artists working together and maybe one day worth millions super cool um very very nice presentation love the idea um thanks and yeah quite original that's great um can you tell us a little bit more about that the tech stack that you're working with yeah i didn't catch you oh yeah just go yeah so the the front end is made with react and i'm using the http ipfs client to connect to the infuria gateway to upload the stack i'm using rdat to deploy and compile the smart contracts i'm deploying everything on polygon i'm always using a custom subgraph uh to to fetch that with graphql uh and i think that's it i'm using typechain because everything is in typescript and yeah that's about it like carson said it's a super cool idea and then uh did you already started building a community or spread the word around this project or what's what's the current status so uh i started working on this like three weeks ago uh if you look at the description on the on the eth online website because i don't have very long time in the video to explain everything but if you look at the description and the submission you can see that i have divided the project in three phases and the first phases is a tile art editor with a simple sail and in phase 2 that i'm going to start right now until the next acaton will be based on layer layer cooperative art which is another form of cooperative art with auctions and and yeah i'm gonna i'm gonna build some more stuff until the next hackathon and i would like to to ideally release it on the main net in september cool yeah uh yeah that's all the time we have for uh team cooper so thank you for presenting thank you all right so actually right now i'm just going to share my screen real quick because we are going to be taking a quick 10 minute break before we go on to the last few teams so we'll be back okay let me just put the time here real quick at 1 43 p.m eastern yeah everybody just take a break relax and we'll be back by then thank you all right we are back yeah i'll stop all right so team uh in line meditation i would like to give you guys a warm welcome if you guys are ready uh whenever you guys are ready you guys can start and present your video all right uh hello yeah you can go ahead this is in-light meditation it is a mobile first web app for tracking meditation and creating nfds for each session one possible use case could be that you can imagine organizations like not-for-profits deploying funds into supporting meditation by buying meditation nfts in a similar fashion as in the present day individuals donate money to charities for specific causes the technology stack i used was react js next js tailwind css on the front end nft.storage hard hat and the network polygon here is the profile page you can click to edit the first and last name and the longitude and latitude and this can be automatically filled in using the browser api [Applause] on the meditation page you can set the meditation duration and press start when the meditation completes you have an opportunity to update the user information or the location you can see the duration and the start and end time stamps are set you have an optional description field you can update the ethereum price and you have an option of uploading an image or using an automatically generated image and this image can be uh of your meditation space or anything you like the image is uploaded to nft.storage along with all of the other metadata [Applause] you can uh so somehow to make the nft press create meditation asset [Applause] after the transaction is approved and it is minted you can see that it is on the marketplace and on the store page so now to buy one to view all of your meditation nfts you go to the list page you can see all the ones you created other ones you bought and sold [Applause] cool um thanks for that great presentation very very quick and clean um that was youtube [Music] okay okay yeah wondering who was talking there um uh [Music] so um can you explain to me i think what what what would be like a use case where someone buys someone else's um meditation nft um [Music] it could be to have um have like a souvenir um or to support someone's practice or to support like um you can maybe uh restricted by the geographical carrier or a certain group then you could like buy those okay [Music] that's almost the same question that i had in my mind person so yeah it's for the niche uh community i mean not everybody is into meditation or exercise so it's it's it's a good one to to promote uh meditation as such and also a way to uh bring this nft community together i see i still see uh some yards to cover but yeah good work so far so um in terms because i mean i don't know the meditation like app space is actually huge right like there's a lot of features that different meditation apps and things use um i'm not a big meditation person myself but my wife is quite um adamant or does a lot so what in this first implementation what what's missing what's the next sort of like feature and how does that feature how might that feature leverage the fact that we have a blockchain here that we're interacting with like that we have nfts you know that's something like you just couldn't have done before right um i have a couple general ideas i am not too [Music] focused on like taking this further as uh into a business this is mostly because uh to learn and write a small contract and kind of uh just uh getting started out in this space um but i i also wanted to i wasn't always imagining like using the unlock protocol and making allowing for more of the social media platform where users can follow some meditators and have access to some special content from them that way yeah that's cool nice do you have any other suggestions for improvements [Music] um well i think that idea there is pretty pretty powerful right like you in for theory you have a reputation for someone who maybe leads like really interesting or deep or useful meditations that you know you might want to buy their nft um from like a past meditation in like a past session in order to then like revisit it later or something like that like there is certainly a sort of like way of like yeah the social media application or social application where people could like experience meditation that someone else has done or i think that seems like a pretty powerful you know it would be a way for you know people who lead meditations to monetize their skills [Music] yes i think that's it um thank you so much uh team enlightened meditation for your presentation okay uh up next i would like to welcome team web 3 dark mode if you guys could please turn on your cameras and share your presentation first hi i am chris and this is web3 dark mode a chrome extension that lets you edit any website css and share it over a decentralized storage network you can use the extension for example to turn your favorite block dark so you can read it at night or really any website for example you can invert colors on google docs or on twitter you can also use it to block ads or block distracting elements on the website you can also use it to increase font sizes and buttons for example on b5 websites to increase accessibility to people with reading impairments and finally you have the options page where an overview of all your changes where you can log in with ethereum and sync all your changes in a dedicated ceramic schema and finally you can view the feed of any changes that other people uploaded you can follow changes follow this and you can rate them and the rating first of all helps to sort the list because then you can show the most popular ones on top but it also attaches kind of reputation to any editor's identity to any editor's ethereum entrance right and that's the the motivation behind starting the stack sort of to have this useful tool that lets ethereum users help each other without requiring too much technical knowledge and this way bridge reputation from the web 2 to the world 3 to ethereum addresses right this is really an alternative approach to let's say legion scores or kyc or any of the civil resistance protocols and once people use this extension the information about valued relationships in this new network will help with decentralized governance registratic voting funding and so on thanks for listening uh happy to hear feedback yeah thanks cool well i'm going to start with the same question i start with most teams which is can you tell us a bit about the tech stack that you were working with there yeah sure um so basically the the front end is javascript and ujs and for the back end of storage we use ceramic and stored locally but you could also plug it into aws or ikjs for example um and then the the identity part also ceramic right so you map your icm addresses to decentralized identifiers and you could map it as well to your twitter github any any like web 2 social account does it depend on any browser right like web 2 browsers or with three browsers or it is independent of the browser oh yeah so i mean the whole thing is a chrome extension so you could use it in chrome and brave chromium um and to authenticate you need metamask or any other web3 wallet yeah okay so right now you have it for chrome and uh brave yeah exactly okay and um so maybe you can go through how so say i come up with a pretty sweet uh you know um uh theme set up and how would like i share that how does the sharing work with other peers can you just go through that again oh yeah sure so you start by logging in with your meta mask and then generate a did in ceramic like the first time you actually use ceramic and then the other times you just log in with your metamouse and after that you use the chrome extension to make some changes on websites some css changes and then there's a button to upload those changes and then on the other side the second user he sees those changes saved in a list so a different list could have different names right like accessibility or minimalism focus or like dark mode or anything and in in like a next version you could also do the same thing with uh javascript so you could do something like in advanced ad blocker or something like crease monkey if you know that and um so the like registry where the like where the tagged where you basically tag your changes and what how does is that like indexed with the graph or anything like that um so like um no i guess you can so use ceramic to sort of standardize the data yeah then you have this yeah then you have a standard for these lists and for changes and then you can really save it anywhere right like uh like i said an ipfs for example is like deploy storage network on aws or just locally and you share it with a bluetooth or usb stick right but that and that determines how you can index it but but not with the graph right like it's not unchanging okay okay if uh yeah if there's nothing else then i'll assume that all the questions have been asked and uh we'll move on so thank you so much for the dark mode for your presentation thanks guys all right then up next we have team pulp so if you guys could please on yourself or turn on the cameras and share your presentations please thank you hi everyone uh this video is only slides so i'm gonna i'm gonna talk over that if if that's okay um so so my name is dan can everyone hear me all right my name is dan i'm one of the members of the pulp team um i'm joined today by brahma sen we hail from boston massachusetts and columbus maryland respectively before we start i just want to disclose pulp is an existing project we actually participated in a hackathon last year and i'd like to emphasize that we're only submitting work completed in the last two weeks for judging this year um and i'll highlight that work in the demo so just a little quick background pulp is a publishing platform so think sub stacker or medium and traditionally the publisher sits kind of in between the author and the subscriber and they intermediate the relationship which gives them eventual control over the author's revenue stream but paul actually replaces the publisher with an open protocol this effectively commoditizes the services of the publisher into easily replicable low margin software notes um and and in developing pulp last year we anticipated a quality problem i call this the 8-chan problem with no offense to hm but the problem is that a totally free speech platform initially attracts kind of the lowest common denominator posters and then you get this negative feedback loop that tarnishes the community and drives away any would-be high-quality content so our hack this year sets out to solve this problem with distributed tech we have the unique opportunity to unbundle the editorial board from the publisher and in traditional media the editorial board acts as kind of a content filter this is analogous to the twitter or facebook terms of service but once you unbundle the editorial board from the publication you have the opportunity to implement a market of editorial boards with a many-to-many review pattern and this creates a quality filter rooted in pluralism there's no single authority on what should or should not be propagated but we end up kind of with quality metadata that can be used by subscribers to make decisions about who or what to read so we've updated that in in the pnlp protocol shown here um and we also decided to use hackfest as an opportunity to integrate with superfluid to facilitate revenue streams for authors so i'll demo all of that quickly so the ref the reference implementation is a react app and i'm going to begin here by quickly adding some test content this is all in our existing app so we can demo the two new features that we built for our hack initially i'm acting as an author i'm using metamask for identity i'm starting a new publication and i'm writing my first article so these artifacts are indexed on the ethereum blockchain and they're persisted on ipfs via textile once this is complete i'll switch metamask accounts to act first as an editor and then as a subscriber so we can demo our two new features so here i'm an editor reading this article published by somebody else and upon reading the article i can choose to approve it or reject it this information is persisted to the ethereum network and once my transaction completes all future readers of the article can see my approval you can see there and as with any data in pulp we can view this information on the ethereum on any block explorer so here we bounce over to etherscan and we can see that transaction successfully um next thing i'm going to do is act as a subscriber so i can go back to the ui i can read somebody else's article and i subscribe to their publication um i've set the subscription to be one x die per month payable directly to the author's address this opens up a super fluid stream for a continuous subscription flow and again we can see this information in any block explorer so i'll bounce back over the ether scan we can see the transaction successfully complete and then we can also go over to the superfluid dashboard and we can see our 1x die per month flowing from the subscriber to the author as as we would expect so that's what we've got uh we're happy to answer any questions and we want to thank the judges and eth global for putting on another great ffs cool nice um well you kind of went over your text text so my default question has been stolen thanks a lot but um but that's pretty great so can you tell me a little bit more about the super fluid setup is that would you say that's like the bigger biggest component of what you did on at this hack fs or yeah we did all the work for this the work i mean it was pretty evenly split um we we added what i would call the review um functionality and then the subscribe functionality the review functionality was just solidity um you know there's there's nothing super magical going on there it's it's just updates to our solidity contract um and then the associated updates on the client to um to handle those the reviews um and then the the other probably even even half of the work was um we had we had never used super fluid before we we actually were introduced to it through a hack of us we saw them as a sponsor and we decided that that was actually one candidate technology for implementing subscriptions and we wanted to experiment with with that um i i should note that the subscribe feature is not gating content at the moment so you know you're you're you're paying the author you're you're sending money to the author almost pro bono um it's it's not like we we gave the content that that is is on the publication when you open up a new subscription um and and obviously that would that is an important feature that is kind of on the roadmap for us um but but at the moment we're just sending value from from the subscriber to the to the author well you could for net for now you could just oh um yeah go ahead vijay you go ahead i'm sorry i have an emergency in the background so i'm gonna have to deal with that okay okay robot daniel uh i'm just not clear about the business model that you guys are thinking about can please elaborate on that a bit yeah good question um so i i see i mean there's a few ways you could potentially monetize a service like this um i think there's there's room to monetize as as the builder of the client um where if you you end up facilitating at least some large portion of readership then you could you could ask to take a cut the whole idea of pulp though is if you think about sub stack charges 10 um the idea is that those those clients end up being kind of commoditized software very low margin software so you know that's not like vc area activity per se but but you know you hopefully end up being able to make a little bit of money on running a node yourself i i think there's there's other monetization area around aggregation so if you're becoming a destination for uh subscribers who are looking for authors you can you can translate that into a little bit of monetization as well two thoughts among among many other possibilities [Music] good okay yeah i guess we are running late so good luck great thanks guys yeah keep going thanks thank you so much pope for uh presenting uh carson are you are you fine to move on yeah i think so far um i think we're okay okay good sounds good that's fine all right so i would like to welcome uh i think it's journalists to uh come and present your uh projects everyone um yeah i'm going to share my screen real quick um all right all right live this is a submission to hack fs called journalist real quick our team is myself on the right there griffin and then riley on the left there we're both based in san francisco our project um so it aims to address updates and additions made to articles after the time of publication online um some publications use a footer a header to indicate when they've been edited and that's great however it relies on the publisher noting what changed and when which comes with its own problems and tracking and then there's no easy way to verify and view these changes sort of like a git diff where you can see what changed uh between article versions so we have to tackle this with smart contracts and ipfs on ethereum so the way that it works is an author publishes their first version of an article uh we then upload this article via smart contract to ethereum's blockchain and store it there and then the text of the article itself is given to ipfs and then we get the unique id associated with that text and vr smart contract as well that article now points to an array of all these different cids so anytime this article is updated on our site we store a new cid unique identifier to the text of that edit so now because we have all these different versions we're very easily able to diff or view the changes between these versions via our ui so speaking of the ui let's go ahead and jump into that um so let's create a new article here article name one two three so you can fill it with a full address here but normally you as a publication you'd approve an author's address so random people can't just publish to your publication let's go and get some random text here fill that in and upload to ipfs confirm this transaction via metamask now you can see ipfs whoops ipfs has it has been uploaded to ipfs um you can see the unique cid here and then the text of the article great let's just miss that let's go to our articles here you can see this new one article 123 at the bottom but oh crap we made a mistake we need to edit something so let's delete this first sentence which is an error and we can say uh we fixed the error great let's upload this to ipfs and you edit confirm this transaction and then again this success and we can view the new version on ipfs if we want go ahead and dismiss that go back to this articles view and we can see now that it's been updated click this new view now we're on the diff view you can see the version one and two here and then via our diff here we can see that um in red the change that we made and green and the thing that we added great so that's pretty much our app uh future plans uh we didn't get to the full publish you publisher ui we finished the article or the author ui but we wanted ability to be able to add uh authors to our publication uh like pre-approve them and then the ability to not only view like authors articles which we currently have like all the articles that an author has published but also as well as all the articles published under async um but yeah that is uh that's our project uh and yeah the last cut the video off at the end there but i think we would also plan to like deploy to a layer two scaling solution so where where is is the smart are the smart contracts running on like a test net right now i didn't catch that yeah we haven't deployed them to a test net so we've just been locally uh like using ganache uh just testing it i'm going to deploy it in polygon right yeah yeah okay any main reasons for that or it's just just the cost factor yeah just a cost factor um and just like probably the layer two solution i'm most familiar with that we've both used okay yeah um so i saw that your future plans are for maybe some sort of like persistence you know framework or something like that um so is the idea there that you would persist like all all past copies on file coin or something like that in addition to just ipfs yeah yeah yeah that would be the plan so then you get to like maintain that uh like the versions and then you can see um like any differences that were made cool okay um and then maybe another question would be so you know in addition to the obvious like you know you can diff and see what the changes are yeah do you envision this being used like as a tool for journalists to track you know you know to flag incorrect content and like as an actual sort of like transparency tool yeah i think like in my mind there's a couple things it would be useful for like one yeah it's like a transparency tool like then you you get that uh like transparency as a journalist which could be a benefit for you and then another thing too is just that it's like decentralized you have this like censorship resistance um if i don't know maybe you're a journalist uh that needs that so i think those are the kind of two like benefits that i would see for for journalists and yeah we had like the future work was this the publisher side which would kind of solve like part of the issue of people just like posting whatever they want or like you know bad content you could go to like a specific or a specific publisher address and then it would just show articles of like the journalists for that for that publisher yeah kind of kind of similar to a pulp so funny that we ended up going right after them but right yeah well i mean yeah these are all important ideas that people are tackling so some overlap is okay okay we got one minute left bj any questions to finish off with yeah even i could say some similarities to pulp it's really weird that they were placed right after each other but it's it's nice i mean uh but but still you need to work on the ui part um or what i see is it's it's just a couple of weeks of hackathon so once once you get the ui done then it'll look really cool yeah yeah definitely um yeah it sounds good and there's the plan to keep working on the project uh yeah i think so i think it was like uh it's mainly seen as just a like a learning opportunity for us this is like our first hackathon and like working with solidity um but uh but i do think it's pretty interesting so yeah we'll probably like flush it out a little more cool that's great yeah all right fantastic so uh thank you so much journalists for your presentation and that was our last team so i guess i'll wrap it up really quick all right so um that's it everyone and i just want to say uh thank you for all of our participants for taking the time to create and present these amazing projects uh all very well done and very interesting as well and of course i would like to give a big thank you to our two judges carson and vijay for helping us out today and again thank you guys all for coming out and i hope everybody had a wonderful day uh take care thank you and uh yeah dj and carson i'll just give you guys a quick reminder you guys need to connect back with kartik for your score tallies so yeah okay it's the same link or uh the same link kartik already centering yeah it should be okay yeah okay you sent us a separate link for that i don't know uh the the same link that you used uh before this call oh yeah yeah it's cool all right yeah so take care have a good day 