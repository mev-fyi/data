okay and we are live okay thank you everyone for joining us for our last workshop of the day uh we'll have frank uh doing a workshop on waku using waku to add decentralized communication to your dapps if you have any questions you could leave them in the chat and you'll answer them throughout or at the end uh take it away awesome thank you hi everyone let's start the waku workshop so first what is waku um suaku enables you to send and receive messages in a decentralized manner that's as simple as that so um we are building waku as a public good so it's agnostic so it's work with uh any blockchain in the way that i mean it's not a blockchain first but if you want to interact with blockchains you can do whatever you want there um it is probably good so we there's no need to uh lock some tokens or anything like that to uh to use waku and anti decentralized so the idea is that we you are running what could not um you don't need to worry about that too much during the hackathon but when if you use waku let's say use jswork with the browser you'll be running a work not in the browser um so enables you to send messages in decentralized manner so these messages are of chain so if there is anything you want to uh to take off chain and still enable some interaction between users you can use waku so once the message is is you know any payload so you can encode anything in the messages so it could be chat messages um it could be a start message that you want to send exchange of chain to then later put in a smart contract um what can that be it could be as a signature for multi-seg transaction it could be a bid on an nft auction so sign the bid so that if you take the message and put it in the smart contract you get the um the nft solder um it could be maybe some event in a game and you could sign it so that later this um lead to some asset exchange on the blockchain um so far yeah a game move pick the chart so frankly you know you do card game uh you can you know pick a cast commit to account and you can sign a message which is you know the hash of the card uh to say a committee to this card and then when you reveal the card you can have another message which shows what cards uh was hashed um so as long as they can be any message with any payload and it's really limited by your own creativity and imagination um so in short but ask yourself one is in roku well if you are i'm thinking about having some communication going on with your project and at the moment you're looking at maybe having a sensory server that could run firebase for onboard or like a lightweight database to be able to message exchange instead try to use waku so that your application can be decentralized uh if you are maybe thinking about using dp2p but you also need to run your own nodes maybe instead it's roku because waku the node which means that anyone running raccoon node can support any kind of project so that's pretty much it for our quiz it's really just about being able to send messages off chain in the sensorized manner and decentralized manner means that it is censorship resistant it is a resilience because we have a number of nodes um and and yeah that's pretty much it so now uh let's have a look uh at you know let's say i think there's more ideas so i put this thing uh i thought it was ideas against the end but um so yes we have this website doc.waco connectordev where we have a lot of documentation for um for cheers work with the browser so just click on this link uh it's open there already um there we go so so yeah so message can be a chat message that's absolutely fine and we you know everyone can get that so poor message should i say we um uh we also have some balls and you're in a project a bit like twitter polls okay but that doesn't need to be on chain and that can be and it can be decentralized using uh so what happens that you send one message which is uh your poor questions and then give other users a constitutive message and can answer the point by sending the answer and everyone can create the answer and see the answer of the poll we actually have a couple of we actually have an sdk available for pulse which is a react-based so you can just jump into oppo there and the repo there um for nfc marketplaces there's a few ways you can use waku when you are building a decentralized aft marketplace one way is to add the social media layer so that for example you can enable users to like uh to publicly like an nft or to make a comment on this nft and we just send the like or the comment as a message over cool i know there is a you know classic message from aku and then this page or you can see them in there in the app and also you can look at some of the actions you do as part of the nc platform and see whether it will work for system of chain so the idea is instead of having to go there too for example to make it cheaper especially if some of the nfc are you know holding on to l1 you could use waku to make some of the action of chain so one of the action which would make sense to have ocean for example is bidding so you could still have someone alice sells her nft so she's going to interact with the l1 contract to say okay my ift is up for auction now but then when bob and carol bid for the nfc what they could do is that they could send a signed message over waku to say i want to buy cnft for this mesh is they may have to preauthorize you know the is to be transferred by the smart contract but that's only once when they use the platform and then alice can collect all the bits take the highest beast and put this one the blockchain to search the nfc to the highest bidder so that's one way actually to move things off chain um to save gas and in this scenario alice and bob maybe uh sorry maybe bob and carroll uh didn't win the bid but he didn't have to pay uh any gas to bid in the first place and that is again in decentralized manner and we have other so stationary is called the complex one so i skipped this one last thing for zacaton voting and proposals so um one way that can be done with voting and we have a sdk for this one as well is instead of having each user vote on smart contract and pay gas what you could do is that users vote by signing a transaction and sending it over waku and then you could have the dao or maybe the proposer take all the votes and submit them on chains so that you basically enable users to vote without paying gas and the gas is being paid when uh someone submits the bad spots um signature exchange for music wallet so we actually have agnosis um for knowledge safe we have a little uh plc doing that um we talked about gameplay communication um so you know instead of having all the move happening on the blockchain uh or all of the moving on central server um any moves that doesn't immediately immediately um lead to an asset being you know burnt means exchanged or moved can be done on waku of chain so let's say you do card game you can have the move of setting up what card you're going to use and then leaving the card turn over waku and then if you know wins around then lead to one of uh an asset make move of the chain then you can go to blockchain but just thinking about what can be done off-chain basically um that way communication so you can use waku you know if you in wallet in that which may not be possible within a hackathon but uh you could use to do communication here as well um and and something for layer two as well it may be a bit complex for uh for um hackathon there you go so that's why you add any kind of generalized marketplace as well so we could see waku as an open network to enable any kind of market so if you want to have a market where alice can sell something so you say i have something to sell and uh and bob wants to buy something you don't have to go on the blockchain and having at least paying gas to say she has said something and then bumping gas to say oh i want to buy it but just take it off chain and it's okay i want to say something uh and send a message over bob can see the message okay i'll buy it i'll send a message to alicia circular business message still going so far nobody has big ass and then eisenberg can enter into the a2 uh the cell and then now enter this contract and have this sale opening over over ethereum um or any any chain and what's enticing with that is you could uh maybe have one battle to say so let's say you're sending a physical item then this part of the cell can happen you know in the real world in the real world and only the transaction the asset being uh happening over the blockchain um so yes welcome could be can be used when you say one section a message is it can be used in a way where you broadcast messages so that you send a message and everyone can access it so that's already saying i'm going i want to save my uh my nfc or sell an item but you can also use waku for one-to-one private conversation and we do offer some encryption network which are already available so when bob wants to say to alice hey i want to buy this thing bob can send a message about waku that is only for alice okay other strategies for that so yeah okay so we have three waku implementation available at the moment so gs waku is our browser-focused implementation um in our written type scripts and survivable just use the typescript and that's one where we have most documentation available then we have nwaku which is our service node and has a json rpc api so anyway is a node and so when you use js welcome you do run a node in the browser now if you want to run an add a node in the cloud for example you can use anywaku um and it has which is an rpc api so if you have maybe a python backend or a node.js backend you could use nuaku and access waco network using the json rpc api of nwaku and then finally we also have a goac version so if you have a go back and software then you can integrate i will also provide some c bindings for uh kuaku so which means and we have some examples so with c bindings you could integrate it in most if not any language and we do have some examples on how to use this bindings either in c sharp for especially for unity uh in swift and codepen so it does work on the mobile if you are building a mobile app so js vacuum so most of the documentation of json is available on the waco connect doc website um so if i just jump in there so here's the website and here all the docs available so we have a number of guides available and if you just jump on the guide one you can see that they are grouped um so we do have some examples using showing how to use waku with react framework and angular framework if you are using other framework you can just just jump in javascript section and solve this framework so for example if i jump in the receive and send messages using voice um so what could it is a gossip sub protocol so meaning that you send a message a message is being forwarded to other nodes and probably it propagates through the network and um and then it can be received by your party on the other side so if you look at you know using waku uh you know with a simple javascript or any framework so you can just um you know install jsoaku with as a package um and then to create substrate to work with node uh we can't it's very simple just you know what could create api bootstrap is when you create a node it needs to go into the network um so we have some bootstrap method method available so from uh from like a javascript developer point of view you can just use that and connect to uh some what could not being run by status and we and that's the last thing we are evolving and improving as we uh um so you can just do bootstrap default true now if you decide to run your own edward kunod you could decide to pass the address of one could not there which is like this way um but you know for hackathon we suggest you just use default true then we have a method just to ensure that all the handshakes are being done and you're ready to go also i need to go to send message um so to receive messages first you just need to um try to change the size of your screen i just need to create a callback method that processes your incoming messages so this process can message a function it's just uh a callback method take a working message and then you can do whatever you want to do you know you can display it you can process it um it's up to you and then it's just to work correlate dot add observer so you add an observer you pass your callback function and then you pass this array of strings so this is a content topic okay so um a consent topic is so when you send a message you always attach content to big tweet so that if you say i have my uh cool card game all right and this message and we want our messages to be able to commit to card then you could have content to pick which is slash michael card game slash version one slash commit to call so that when you send a message you set this content to peak to commit a card and then the users that are playing with who are playing the game will listen to messages on this content topic so that's basically the way for you to categorize messages so that you can process all the messages that are for your app uh instead of you know processing all messages of the network and trying to find one there so that's a it's a way to type your messages to circus this is what's relevant to me if you want to know more about content topic you can see on the left we have a guide which is how to choose a content topic so when you send message i need to create a work message we have some helper functions to create messages and you just need no the message first and then here the the content topic that we just talked about now in terms of the message here so we have a string utf-8 helper but most likely you want to just use bytes so you can put whatever you want in there and so we have a from byte function and then just use our core ascent okay so now in terms of in terms of i say using bytes we do suggest to use protobuf and we have some explanation on how to use protobuf um and so back to the guide so we have some information around the general concepts no content topic discovery bootstrap and how to debug if you have some issues um what's good with vacuum that we have what we call a store protocol that enables uh so you start your node in the browser and you may want to retrieve past messages so you can query any work nodes to get past messages for your given content topic and that is explained in these scripts messages from using workstore okay and then if you want to encrypt messages or sign messages we also have a couple of guide guides that explain how to unclip messages and send messages so i really suggest you go have a look there once you know what you want to do with waku i also have a faq page with some of the basic questions so if you have any error or issues just jump into faq first and of course you can ping me on this card no issue all right so that's for jswaku um so one more thing i wanted to mention is that in the website we also have a list of examples so here are all your examples being listed and and what you want to do you can jump into this page and try to find examples that matches what you want to do um so also you know focus code is open source of course so in the work repo you have we have an example folder and in which we have the example trumper here for pure javascript uh in html example we have an example for that and there's a html code i can go in there and then demonstrate what we should so um that's something that's a good resource to jump into so the example folder in the work repo has a number of examples as they're available so you can see more uh you can see that is a call itself ruling your guide okay [Music] now if you decide to go so that's javascript so if you decide to go let's say you have um a node as part of your project you have some back end running uh hopefully it's decentralized right um then what you could just do is use anywhere crew to access the waku network so we do have um nemo cool so let's just version zero nine and this label on docker so i would suggest you know jump and use docker directly so you don't have to worry about trying to compile it so anyway written in nim uh which is a functional language very similar to python and rust and so you don't have to worry about you know trying to compile it or anything as i just use as uh the duca image to go faster um we have so many the condition is mainly available in the annual repo and you can see anywhere cool search request for hv2 um and they also has explanation how to build and run i suggest use docker um and there is some explanation on how to configure domain name and use dns so if you are using jet on the other side you need ssl and domain name for as the browser choose website to connect to your annual node um so you may want to look into that now if you are using nwaku because you have a back end then you'll just use any try to move faster in terms of the json rpc api it is a fully described inspect in all specs so that's what could be to rpc api i will send the link to the presentation with all these links in the discord in the connect discord channel on the this global discord okay at the end so here so what could be two rpc api uh so general pc and that enables you to use anywhere cool with any other software uh just using this rpc so if we look at you know a sending message then we have the relay api which is our gossip server protocol and you can do a post work movie to all everyone message little uh as a content topic that's topic uh can um of the message and then the message by safe and if you jump to a correlate type you have a payload so you just encode your payload as a hex string and you have a contact topic and your timestamp um that's our youtube some messages um we have some api so to uh get messages here and then the store api to retrieve the messages from other ango nodes uh extra so that's where the api is defined if you want to go through the uh to the right of having your anwark node running with some other backend software or some other node of yours all right um and then finally we do have a gowaku go implementation so that's useful both if you have go so if your backend your knowledge is everything you go you can't tell it and go but we also have c baggings as i mentioned before so if actually any kind of software and you prefer to go through the sea bagging root rot instead of going uh something jasmine rpc then can you go okay so it's really up to you whatever you feel more confident from me with uh you could either run anywhere and uses an rpg to access to work with network and you have to want to software your software and roku or if you want to integrate a waku software directory in your native software then you can go with goaku so um goa kuso for gwaku the best way to go is going the examples so we do have some talks we do have some other conversations that explain a few things in uh in martin so if you jump in the holy doc you know it explains how to do that so that's a good um good way to start and have some explanations and once you feel like okay you're getting a hang of it and getting some uh understanding on how the api works then you can jump into the examples uh so into the example so we have so basic two and chat two are good examples to look into uh so chat two is a simple um [Music] a chat application protein kubaku and you can have you know have a look at the code and see what's used once you have seen the docs and if you're interested in integrating gowaku uh in c sharp or in swift or clean um it's all in there okay that's because it's all balancing binding so again germany's examples and that's one way to go all right a lot of time and that's it yes that's pretty much it for me um so again maybe back to the idea so you know a lot of explanations so um waku is to sign messages okay and whether it is about broadcasting messages to refusers or doing what one message is anything you want to take off chain you can use vocals and message the we provide some amazon to encrypt messages so that if you want to have this um the messages can be anything because we enable you to have any kind of payload which is a byte array so you can put anything you want in there in terms of use cases you can go in there and have some ideas but if you look at your project and you um and you want to have some interaction between the users most likely today you are either thinking about having a centralized server or maybe you are thinking about putting all the interactions on the blockchain but there is a better way which is to use roku so you can have the messaging being sent uh in decentralized manner and work with table for the browser for native apps and for any kind of back-end node as well so that's all the different implementation we have available there um yeah that's it for me don't have any questions so if you have a question now is a good time otherwise uh happy hacking i don't see any questions right now but if anyone does have any questions they could bring them over to can't hear me yes not a good deal oh okay uh great uh yeah so i don't see any questions but if there's any questions you could take them over to the discord channel that we have set up for waku um [Music] yep i think we're good yep so this is our last workshop of the day we will be having more starting tomorrow um so tune into that we have the schedule on our website as well thank you very much frank thank you all right have a good one everyone 