great awesome thank you so much everyone for joining us we've got the yarn team here who's going to teach us all about strats so doug from yearn is going to take over now and we'll have time for questions at the end thanks ted sure um just share my screen here let me know if you can see my screen not yet maybe make sure you hit the share button i believe it's oh one second sorry i need to grant access to yes sometimes you may have to drop back out if you haven't granted access yet come back in yeah yeah let me see if i can open the yeah i have it here let me try let me jump out and hop in real quick one second awesome now now i'm able to share i think uh let me know if you can see my screen it's working nice okay cool so we can start um yeah my name is doug um i'm here with uh brian uh luciano um orbal x48 we and faculty we're working on different pieces of wiring and uh yeah we want to bring you here the a small workshop where we go into what the vaults are the strategies how they work together and hopefully if i mean the requirements that you know a bit about solidity but hopefully um by the end of this you're able to feel confident and go into trying to attack tackle building a small strategy and when you go ahead and hack into the event so jumping ahead uh wiring ecosystem overview overall it's like it's it's it's growing rapidly it's different protocols and features but the by far the most used one are the vaults so the the the main topic that we're going to be discussing today are about the mechanics of how they work and combined with the strategies so the the concept that that usually gets thrown around for bulbs is that they're they're yield aggregators so wiring is this yield aggregator what that means is that you deposit funds and you don't necessarily know what's happening or need to know what's happening but somehow those funds get deployed and earn you more yield on on those positive funds so uh we're gonna we're gonna go into how that works at the low level the mechanics and and dive deep into the code um to it's it's required for you to understand how how do you go about building a strategy so it's it's when you dive deep into this it sounds complicated at the beginning like it's it's a lot of moving pieces um from but hopefully we the way we compose this demo and presentation it gives you it sort of like simplifies the aero picture and and by the end hopefully you can take away um how all these components and pieces work when we're talking about bolts at the core components that are are being um they're in question there are the balls the controls and the strategies so those are the the components that we'll do a deep dive within the within the stock right so the bolts are the user uh facing interface for the protocol so that's where most users interact taken by android's code quote here are simple token containers they're meant to be normal tokens with added functionality but so as an example here in the diagram you you can deposit coming and deposit die and you get back this why die which is a representation of your shares within this pool and that some magic happens here in the middle the strategy uh that does something with those funds and at the end the output is you get more of the initial target token that you deposited right so more die in this case so we're gonna dive deep into what's going on with those strategies how do they get those deals and and and how will you go about uh thinking about the signing one um so overall with those properties the bolts are again meant to be simple talking containers as simple as possible just to keep track of the shares of the users what is the balance of each user within the pool and and and the overall supply of the pool and so forth it it complies to the uc 20 standard so on top of all the methods that the ball has to achieve its goal it it it's also meant to be transferable you can you can move it around use all the normal uh your c20 methods and that means that you can compose the vaults themselves because they're at the end of the day they're tokens so we see in that with curve that they use them in their own pools and who knows it can hopefully we see some cool use cases of composability within the event uh the other design goal is for the pools the vaults to be efficient when you go in and out um so that means that when i'm depositing the it happen the the the only thing that's happening is you're maintaining shares for that deposit and uh and when you withdraw in the same fashion you're just uh returning balance that's with a caveat because uh if if the ball currently has the balance to return the amount that you're requesting then you don't need to go to to the strategy you just have it there and you do you return it back to the user um so that's less gas but if the amount exceeds the current balance then it needs to go downstream to the to the strategy and we'll see how those pieces work together but that it's extra steps and the extra step in ethereum is more gas so that's the carrier but at the end of the day it's really a cool design the way that you're basically scaling this same interaction if users came in wallets came in trying to do the same thing that the volts are doing when the strategy is directly mining curve or mining compound they're really all all the wallets will be individually uh fighting for that block space which we know is limited in ethereum so this makes it so all those interactions are compressed into a single transaction that interacts with the protocol world so it's sort of like a scaling solution as well and it all the volts map one to one to a back token so it's why die usually it handles die why why if both is backed by eth and so forth um the by design the vault uh has a dependency on the controller and the governance and that's by design because the vaults themselves do they're very simplistic to do one thing uh well and i'll keep repeating this this concept because i think that that's the core of the design uh each of those components are meant to do one thing and one thing well and that's what like makes it easier to audit easy to come up with new ones and and and deploy new strategies and as they go on but um so that means that the legwork and the complexity of handling this yield strategies it's taken downstream from the ball it's extracted away from the vault itself we'll see that in the code as well the controller has full access to the vault to deploy the fonts to the strategy and that controller um is is covering it's it's it's meant to only be called through governance and the multisig so that makes the volts in themselves simplistic because they're not they're agnostic about what's going on the strategy we'll see that how that fits in uh within the real world system uh in a minute so this is the the normal volt interface that you will see so um the main things that that the users uh interact with are the deposits you have deposit all uh you can withdraw again those are the the main functions that the users will be uh working with when they talk to the vaults but there's this errand function function that you're like uh if you uh come back to what i said before you deposit funds but their funds and are dormant until something happens to them until we deploy them to the strategy to invest them or make the liquidity mining now so that's where aaron comes in and i'll show you a diagram where it shows the whole interaction shortly um but that vern method is not necessarily meant to be qualified the users the users for the most part will be interacting with deposit withdrawal and withdrawal and this is sort of like the interface for the bulk but as as you also have all the erc trending methods available but this is just the specific ones for for the default uh use cases then downstream to the next step is the controller so the vault knows about the controller and the controllers you can see is this glue in the system uh registry that that keeps track uh of what bolt has what current strategy active at this point and each of those strategies uh are doing something with a specific defy protocol or or maybe many defy protocols depending on on the complexity of the strategy but the controller is this routing mechanism that that keeps track that again that that knows this vault is currently at this strategy and whenever uh the funds are funneled it browses funds to the correct strategy that's active at this point and so that decouples the system in a way that the vault only knows about the controller and the strategy doesn't know about the fault and and so forth and this is the interface for the controller so the controller is not meant to be called by anybody outside the system uh it's it's it talks only with bolts and the component strategies and the components so you see here the withdrawals is meant for um the vault to be when the when the ball says i want my funds back and pulling back all the funds for the position uh depending on what the strategy is doing uh earn is the is the method that when you call the vault earn those uh that's the method that funnels the funds to the strategy that's active at this point for that for that particular ball and we have the admin methods that are uh notable here that pro approved strategy and i used to approve strategy you have a candidate strategy that's signed by the multisig and it goes into this queue of candidate strategies that can go live and sector strategy is flagging that and putting it active basically so it has this process of migrating funds from the uh previous strategy to the new new one it's going in so now uh when you go into strategy going back to the androsco here they're meant to be simplistic in a way you can see strategies they do one thing and one thing well uh there they should be meant to not uh to be as simple as possible even i mean the fights as complex as it is uh you don't wanna over uh add more complexity if you can avoid it so they they have this concept of a one token so one token comes back to the vault um that the one token is the goal that they're trying to achieve to increase or maximize returns on on that specific token so for going back to example here this strategy is meant for die so die is the one token so we um once the strategy has control of the dyes it funnels it to a specific um protocol that does something with it some liquidity mining um and with those dies and funds you uh through that liquidity mining process you get a secondary token and that secondary token is usually a reward token and that reward token uh is a non-zero value token that you can come into the market and and swap it for more uh for any token so what the strategy does is it does this loop periodically depending on the the strategy and the nuances and you call harvest which is a method that grabs all the rewards that we have collected so far and we swap them into whether we use a converter type interface like a unit swap or balancer or curve depending on what pairs you're working with um to avoid the the bet to get some avoid slippage or too much slippers and at the end you'll get profits on that one token and that one token can be reinvested into the past and you get this feedback there's this loop that that you're constantly doing this so this is the takeaway here is that this is the pattern that you'll see time and time again on all the strategies that are live if you won't go into the code you you want to identify this pattern you have this one token something something happens here that makes yields that eventually become more of that initial one token um so it for the most part all strategies fall into the similar pattern but you'll see like uh orwell may talk more the why each strategy has considerable more steps to achieve the same goal but at the end of the day the basics are still the same you're trying to uh increase position on a specific token so what are the considerations and strategies so um like i said the fights in itself is complex that means the strategy for the most part should strive to be simple doing one thing one thing well i mean the strategies working with curve um you would need knowledge in depth of how curve works uh to deploy that strategy to make it work what are the risks in that and um again the strikes are compared to the vaults are more dynamic they're upgradable they're meant to be sometimes that they're femoral meaning that they don't uh they may only last for uh months defy moves so fast that may it may make sense to deploy a different strategy to target a different uh yield mining mechanism so they're upgradable they're cohesive they do one thing one thing well and again going back to the risk we'll talk more about risk specifically but but the main point here take away is that doesn't matter if your strategy is like the it has the best code it has no exploit or anything if the the protocol that the strategy is relying on it's not safe um there's nothing you can do if your funds are drained within that protocol where it stands um the strategy doesn't have any mechanism to save you on that point so you need to be careful about it's not the same to build a strategy on top of a protocol that's well tested production ready has a great team compared to building a strategy on top of the next uh one of the protocol that was just out came out two weeks ago or something so it's a big difference so there's no way to save the strategy if the funds underlying in the protocol are drained so that's like a big uh a big concern that we take seriously uh when we're building strategies so uh the interface for the strategy we talked about with the one token that's like the token that the gold that the strategy is starting to increase and we have the harvest method uh we'll see the mechanics but the harvest really the one that collects the rewards and try to uh and swaps it and makes more one tokens uh to really deposit uh deposit is the method that the controller calls to funnel the funds from the vault and um withdrawals they're all the same they're pulling back is the way that the the controller target signals the strategy i want my funds back give me all the position and that has some implications um it's it's currently heavily discussed in the protocol team because depending on the strategy or where the positioning is it may not be easy to do a full withdrawal so that that entails other systemic risks that that i think orwell and brian will touch upon but um yeah the withdrawal and the mechanics is is essentially the the controller saying i want my fonts back uh when we're switching strategies okay so you use we we touch upon each of those individual components um so how does the use case work end-to-end right so the main thing um the the the things that are of interest here are for example the air method we talked before when i'm depositing to the fault nothing happens the the the necessarily uh the the token is lying there doing nothing being is not being deployed until somebody calls earn and that earn funnels to the controller and says the vault says to the controller here take these funds uh to do something with them and the controller has this routing mechanism that we we saw before that says this is where the funds are going to go to the current strategy and that strategy is the one that actually does the interaction with the defy protocol so the other method of interest here that is now we're no longer hitting this the vault directly we're talking about the strategy is the harvest uh which is also not meant to to be called by the users necessarily um so the harvest here uh we call the strategy and the on the and the strategy claims rewards for in that specific protocol and this by the way this this line here is not meant to ma to to be taken as the five protocol calls back to strategy or somehow it's just uh to represent that we have rewards our balance increase and those reward tokens that we got for the strategy and the swapping uh we get those rewards and we convert them back to one token whether that's uniform for this example diagram or or other protocol that they're table to convert to the the one tokens um and we get more one tokens and those are transfer for a fee to controller which eventually goes to the treasury back to the wi-fi holders and we deposit the rest back into profits and make it work again in the cycle so awesome so that that was the high level concept design now i want to get into the the repo that we have here so um so we made this repo for the event it contains uh what you need to get started on making strategies so i have here you just do your normal git clone and through the folder that you want to start working with and here you i already have one so i'll walk through what what you expect to see here uh the readme uh first thing that that you you you can take on the requirements uh the the [Music] the repo needs um needs uh brownie so you can it has the setup here you can go here install brownie and install the dependencies next step would be you install ganache so i'll talk why we need ganache to make the ripple work and then you have this environment example which you put input your each scan token and your project id because the tests are doing um some integration with infuria and you need it for the ganache fork as well which i'll i'll just explain surely and and once you have that you're good to go you can you can compile here uh the the code that we have and uh running uh it compiles the code and and you have your your started cycle to set up um well and also you can do the test there's example tests that are very thorough about testing the vault the strategies and i have i have it run here in this in the interest of time i already went ahead and run them and you can see here they're exercising the controller they're exercising the strategies they're exercising vaults themselves and um yeah it has to set up for you and go down as an example to take how do you go about building your own strategy so with that said i want to go into the code here and and dive into what uh i was mentioning in the slides um by the way it also has all the interfaces ready for the protocols that we're interacting at this point uh so you you it's a good uh way to learn about if you if you want to get familiar with specific protocols um you have the interface of of how to add liquidity curve all of all of those interfaces are really uh set up already and that if you want for example if you're if you're thinking more about doing something with the ui instead of uh doing the contracts then this this uh you this uh builds also the artifacts the apis that you want to pick up from your website and and call the vaults and everything so yeah jumping into the code of whiteboard so the main thing is the takeaway is narrow down those patterns that i that i mentioned before like the urine and deposit here once you understand the simple patterns are going on i think you you're able to stray away from that for example say the deposit this is the user's deposit in the violence maybe you want to give them an nft here at the end i don't know so it depends uh you go into the shares and what it's doing is just minting the token and giving you the shares but you need to sort of understand the basic um the basic pattern that is happening here to improve upon it and and come up with cool ways to to iterate on what we're doing the the other one uh that we mentioned is earned so here the earring we get the balance that we have to work with and we pass it along to the controller we're saying the controller take it away uh do something with this funds and that's for the most part the the ball that really um simple uh they're like i said they're they're keeping track of the accounting of who's in the ball and the pool and for the most part so now we prefer i'm going to the strategy that we built just for the event here it's not a strategy that's live but it's something that that helps uh it's instructed to help how a strategy works so this strategy mines die using a compound setup that you get rewards in comp and then you invest them again into so the one token here it becomes my diatom so you're always coming back to the one tokens uh and and the mention here the compound is the system that we're interacting for this strategy uh the comp is the reward um uh token that we're getting uh cdi is an interface that that we need for to work with compound and uni is our uh interface to convert those tokens uh back to the one token so the the the the main things that you want to see in the strategy is the deposit remember the controller is calling the deposit when it funnels the funds from the ball so what is the deposit doing when it comes to compound okay we need to get the balance of dye and mint it into c tokens um and that's it if we have something to mint uh we have some balance left we we meant more that means investing more into the the protocol but you'll see this this is the the the thing uh this is the line that you'll be changing for the most part when you're saying i want to do something else here um you're going to come here and say now i want to do um who knows i want to interact with more protocols and you can see in another strategy that i'll show uh shortly um this is the the thing that you want to change when because you're interacting with a different protocol that's not compound but for the most part this is really basic like you're minting uh you're you're uh lending your die into a compound then we jump into the other notable here is harvest so now that i'm invested in compound how do i do that that what the strategy does so the interface for compound claims the comps every so often when you call harvest now that means after this i have balance to work with compound right so here i'm checking how much balance i got out of my rewards if i got something then i go to uniswap and uh pass it along from comp into my one token and if you see here this this is really generic because this this could become any token that you get rewards out of any other system right so so again i think the the best way to see this is pick up the patterns that are going on here and see how you switch them to whatever is the target system that you want to do the mining on and so here uni swap could be another a different a different amm to to get you that pair but for this for this particular use case we we use unit swappers and and that way we swap the tokens and then after we swap them yay we have more dye why what do we do with those guys then we send them uh we we subtract the performance fee we send them to governance here and then we deposit more so whatever is left we go back and deposit into into the same strategy and that's the cycle until the strategy is uh replaced by another one so if you take away that same pattern across all the defy protocols uh um i think you're in a very pretty good spot to think about cool things that could happen within harvest or or you maybe could add insurance when you're depositing within the strategy um just just thinking on the top of my head um yeah so so that that's the the code example and um i wanted to hand it off to brian noble they're going to talk more about uh what are the main considerations uh and risk regarding strategies and what to think about when you're trying to build one take it away brian i wasn't recognizing my keyboard okay um so yeah so thanks a lot for the overview doug um and and like he's saying we have these common patterns that have been i've been working very well uh with this uh whole yield farming craze um but as uh as we get you know more complex into the ecosystem and find different ways of earning higher uh returns for you know four strategies you need to think start thinking about uh rest so doug ready mentioned uh one form of risk that is kind of um uh at a higher level uh protocol risk of you know your strategy interacting with uh the ecosystem so if you know uniswap has an issue and then all of a sudden you're losing 90 of the swaps you're doing uh from the the yield token back to the want token then you could be in a problem um or if uh you know if if the protocol itself that you're interacting with has a problem and basically it loses all your deposits on you that's that's a form protocol risk and and that's uh that's kind of at a level a little bit higher than what you uh as a strategist um you know i need to consider it's it's it's how the strategy is applied and who's in control of it and how they can get out of it so getting out of the strategy is an interesting question um for these simple yield farming uh schemes it's it's kind of easy basically you've deposited something and it's sitting there and you can withdraw basically all of it at any time there's no real risk to it you might lose some of the the yield token when you when you withdraw but you won't and most of them you won't lose the underlying token that you've deposited as you know as things get more complex we're starting to find ways where that's not always true so i think some of the curve pools are interesting in that regard because you might deposit um one of the three or four tokens in the curve pool and then it'll actually do a bit of a swap to the other ones to balance it so when you go to withdraw there is there is a potential for loss if um if the token you want to get out of it is operating at a loss compared to the other tokens in the pool so that's something to consider uh you know with curve and then there's lots of lots of other little things to consider and just always think about how you know of course think about how you're going to get into the position that the strategy takes but also have a plan for how to get out of that strategy and if if there is a loss that can occur during that process because right now the way the system is set up basically the user wants to withdraw a bunch of funds and they own let's say 80 of the vault and they go to withdrawal at once that means we're going to take out 80 percent of the entire you know ecosystem and that could have some impact um so that's something you need to think about basically everything that your strategy has could be taken at any time and you have to put yourself uh you have to be able to recognize that and make sure that if that's ever called you minimize losses as much as possible now as uh also as the ecosystem gets more complex we're we've started playing around with some uh strategies that are not quote-unquote lossless there isn't um you're not just uh farming a yield token you're actually using debt or something of that nature like the the die strategy is you're uh you know you're using the eve to open a cdp uh to acquire to acquire die invest the die earn some yield on that and then hope that you know you have a pretty safe ratio for the cdp and that's a part of what the dye strategy manages when every time it's uh i think uh earn or whatever is called um so every time uh that's called it actually updates the cdp to i think a 200 threshold or something like that and that's called pretty frequently so it's you're sort of tending your crops if you think about it like uh like the farming mean um you're sort of tending it every so often to make sure they're they're healthy and happy um and as as the ecosystem gets more complex debt-based strategies and other forms of uh strategies that can actually incur loss are going to start to be a thing and that was one of the actual problems we had with that strategy is that unwinding out of the position is uh would have caused a larger loss than the the strategy could have sustained so we ended up backing out out of that strategy rethinking how that occurs um and i think this was only on in the terms of upgrading uh to a newer version of the strategy so those are things you should consider uh upgrading is actually another thing you should consider as well so eventually your strategy might need to be tweaked a little bit there might be a better way of doing what you're trying to do and that's fine so when you upgrade you're basically you have your strategy's address and it may own a certain amount of stuff and you want to basically move all the ownership of that stuff to a new strategy now you can do that by transferring you know some sort of underlying lp share or something like that or you can have it um like actually withdraw all the funds so this was the problem with the dye strategy is that it would it would try to withdraw all of the diet basically out of curve and that was more than kirby even had at that point so it would have caused a large slippage loss and then the strategy would be at a negative which is something we're trying to avoid um so so really just keep that all in mind uh the designs of these strategies is to kind of uh minimize risk as much as possible uh both in terms of the protocol risk so be thinking about that and also in terms of the economic risks of the strategy changing its position over time and the strategy having to go through these events such as upgrading or being shut down where it needs to unwind everything uh in a you know in a short time frame so always have that in mind and then if if you don't necessarily have a solution for at least know what the risks are so they can be accounted for and how uh you know governance decides to give debt from the vaults of the strategies in order to earn the yield so i'll let uh orbal take it over a little bit and he's going to talk about more about actual strategy development and the specific um the specific uh issues he encountered and and and ways that the the wyeth strategy was being designed hello guys um i'm marble so i think brian covers most of the risk and the online risk and the upgrading of all the strategies very well so i'm just give more consideration on the actual part so i think the first things that everyone should keep in mind is the simplicity as we know solidity um cannot handle very complicated calculations uh ls for now um so we have to keep as simple as possible um so i believe everyone knows this famous equation from um dr einstein so e is equal to mc square so my multiple is to decode this as arrow is equal to more complex more complicated code so it's yeah if you write more complicated codes and you create more errors um so in the ye strategy it do a very simple task so it's its only goal is to uh automatically manage the collateralization ratio and make sure the collectorization ratio is always in the very in the safe threshold and i also create another safe threshold to use or leverage the crowdsourcing power to make sure that it won't get liquidated so i just managed to use the force of these two to make sure the c ratio collateralization ratio is between a very high number and a very appropriate number so this is for the simplicity and the other one um is risks but i i i believe that everyone almost everyone knows risk is very important but i would divide them into two so first one is um exogenous risk and the other one is endogenous risk so for exogenous risk we can also view it as composability risks so when you are using others protocols you have to keep in mind that um maybe some volumes or um how it works um that that's very important if you combine it with something that you invent where your design is there any security flow or is there any economic flow and for endogenous part because uh like the y link or white e strategy we are using some parts in the internal system so we also need to care about the endogenous risk the yeah and yeah and the opposite of the risk i would say it's benefit so that's like a side effect so if your strategy can also benefit other protocols i think that's very good for the whole d5 ecosystem and that is also encoded in ye because one of its goal is to pack diet back to one dollar and that is a long existing problem that borrowing um maker team for a long time so if it can uh and we in our experiment we proved it works but as um brian said there are also this is v one y e strategy uh we have unwinding problems because in the die strategy the curve is an lp token it bears um unwinding risks but in the wipe e2 we actually mitigate this problem um so we will ship it in the future as the upgrade so this is for the benefit so you can just keep the benefit in mind if that works and then it will bring brings inside benefit so in conclusion uh to abstract all out i guess there are three things that we should keep in mind uh and i would put them in priority order like this so when it shift then conflicts with each other in some situation and the priority work so first is the safety so according to the linguistic definition and people's understanding a vote should be safe and secure so just make sure that there's no small contract risk and mitigate the exogenous endogenous risks as much as possible and that's the first priority and second is the gas efficiency so in the original design we put all asset and white vote and operate them together to save gas so this is the main economic incentive for for for users perspective they use white vote because they can say gas by accumulating all other sensors together then that's why there should be another incentive to be put in for strategies to make the whole economic machine work with aligned incentive so far my perspective the third one is the return of course the return is important we have to cr if we can create a better strategy to get more return that's good but compare with the the former two it's less important because it because the value of return may bear higher risk and in some sense if though if it breaks or a crash not only it will affect the wiring system but also other protocols because in the d5 community composability it's the infrastructure so i would say you have when you get more power to create the strategy um you're gonna take more social responsibility on that so i think um we should put return as the least important part and yeah so that i think that's all we have to keep in mind and that's my actual experience when designing uh the yu strategy and let me hand back to dr malia uh for the rest of the part hey thanks brian and obama uh that was great yeah it's it's a one big key aspect of the wire ecosystem is that the way that to to achieve that why eat strategy the strategy itself needed to be wide listening for to get to get the oracle uh directly from from maker uh to be able so so that that's another key aspect that's great that the way the strategies create this synergy around the d5 space so yeah so finalizing more tips this is another way that you can go about learning what's currently on chain and what's going on feel the the the wire and it's a really nice website that came out of the community and you can click here see the current bolts and you can when you dive into you can see the ether scan contract code of the current deploy vault we saw vaults it's not different from from what we saw but we can also see the strategies here and the strategies are different for for each world following that pattern that we showed and you can come in paste the code from etherscan into remix and start hacking away and and changing stuff and and and it compiles and all that so that that's another way to to go about um um learning what the strategies do what happens if i change something and so on so forth um so yeah and um finally when we talk about it's not like we wanted to scare you but we did we really wanted to emphasize the risk uh the need to you need to be thinking when when you're building strategies but uh at the same time where the upside for the strategist uh gets up gets a a percentage of the performance fee so these we're incentivizing uh strategies to come up with uh uh with cool ideas uh that makes sense within the con within to come those constraints about risk that orbital was mentioning um try to be efficient try to try to think safety first and uh and uh the returns at the end um so yeah if you come up with something cool through the event and it it really um it gets to go to mainnet you you you get that incentive as part of being a strategist so um these are resources that i will publish in discord uh the slides uh these are resources that you can dive deeper we have we did a great effort for the event to boost our developer documentation uh the wiring and we'll be available on this square as well throughout the event the the repo if it's anything that you guys need or you you feel that that we need to add to the ripple we we we're happy to to help out throughout the event so with that said yeah uh in any case are our social media accounts and and just opening up for questions so we already have a question in the chat here um so his question was currently so currently the system works and that the controller basically maps a single vault to a single strategy and that that's entirely correct so there can either be no strategy or one strategy for wall the vault is a single token pair do you foresee a future where this is not the case perhaps a vault that contains a pool of many currencies and many strategies so part of our uh our design iterations that we're going through now on a version two of the vaults is to allow a vault which will still be a single currency um a single currency token uh vault will allow it to be connected to multiple strategies so there's a lot of considerations uh in that regard and part of that design change will actually be removing the controller from the protocol design so that will allow it to basically map to multiple strategies for a single vault and then we're we'll have to uh integrate some of the controller functionality about how the vaults are able to withdraw from strategies to make sure that when when a user calls withdrawal they get the full amount that they ask for on the withdrawal for a specific amount of shares um so that's that's sort of the current design strategy we're working through now uh i don't think it's planned that a vault would ever be composed in many currencies i think the solution there is if you wanted to deploy a ball um that is an uh composed token of many currencies like like we have with i think the was it y curve y yeah yeah it's kind of z usd as well uh just recently something that these are like aggregating bolts within it yeah but it's right it's one step away right for keeping simple the balls and then it's another layer on top of that yeah exactly so if you think about that that's sort of a high composed protocol risk because now you're having it loop back on itself and you're also having a loop into a pool that splits out into four underlying tokens some of which are uh you know decentralized stable coins like die some of which are uh you know centralized fiat coins like usdt and usdc uh which have their own legal and and uh risks themselves as i'm sure people are frank frantically checking their phones for usdt today uh um but yeah yeah currently we're working on that redesign and that will basically allow vaults to contain many strategies and that will help uh stabilize uh the um the the returns for particular vault and try to increase them over time and also allow us to more efficiently and easily uh add and remove strategies without affecting the um the earnings that of all can take because right now it's it's it's either on it's earning or it's off and it's not earning and that's uh that's been problematic so we we definitely want to solve that with the version two all right thank you is there anything from uh youtube let me just grab one second and just to expand on that i i was fooling around with the v2 design this uh this week and and we're gonna um take some of those ideas and put it into the v2 and other ideas uh keep iterating on it and see if we can get further with them uh part of part of the design idea was with debt based strategies i think there will be a lot more of them in the future so we need to revisit some of the assumptions on withdrawals because withdrawing from a debt path strategy does have the potential to cause like a a large um a large uh fluctuation or uh you know slippage is also always a concern stuff like that um heather oh so there's two how is the team delegated um so right now there's uh uh doug and i and also um uh a few other people i think luciano and a few others um so there's i know four or five of us now yeah um so andre is really kind of the mastermind strategist and whereball is also experimenting a lot with strategies and part of what we want to do is get more strategists because that's how the vaults continue to earn uh their the reward and their yield um so the core protocol team is it's actually doesn't really involve andre much anymore we talk with him we get ideas from him but it's mostly a separate team at this point um heather got one a few from uh youtube are there integration tests with all the protocols uranuses so yes currently we're trying to add as much as possible um it's it is very tedious as you noted but um it's actually hard to do against test nets um that that's a really excellent point so as as doug showed you the strategies actually use hard-coded addresses and that's for gas savings but also you you can't really you can't really test these things unless you're testing against like the live system and most of the live systems uh the only the only place where all the live systems live in the same place is on main net so there's some deployed on robsteen test net there's some deployed on corley testnet and the other ones um it's it's something i experienced with at new york last year a lot of people were complaining about uh the different test nets and how there's not a lot of support there's also not a lot of activity happening on them as well so um the best solution we found is that brownie has a main net fork mode uh using ganache and in fura so how it works is basically you get a snapshot from infira at the time you're doing your test and then you're running that locally on ganache against the main net fork and it's calling out to infuria in order to get um uh state from from maine at ethereum uh at the time that you're running it and you're running your tests against the fork of what exists on mainnet so that's also one of the problems all the protocols are now in the same place however the activity that's going on around it that's still something we're trying to figure out the best way to simulate that activity it's a very difficult problem from the testing infrastructure perspective yeah totally and and then and that sounds like um you're tied to i guess you could you could uh delete the hard-coded and inject those in wrinkly but still you're not simulating the real thing like you said the problem is like compound has its own dye that's not the same test dye that the maker may have in that particular testament so you really the only way to do an end to end really as close that you can it's uh before maine and it's just again ash work at this point and uh and like like ryan and orville mentioned there are economic tests that you need to that can only be done live i think i mean when you have a specific amount of funds i mean that that's i guess it's a problem that that all protocols are yeah i think a lot of people give andre grief for doing that kind of testing production but really what he's doing is experimenting and that kind of experimentation just cannot happen in a simulated environment like a test net it has to happen in the real environment so when do you want to do that kind of experimentation i mean andre uh has a lot more experience and a lot more free capital for himself to do that so just try to think of ways that you can test and validate your assumptions uh usually just by running the the kind of strategy that you're doing and maybe a python script or something which is another reason why we like brownie and then translating those results over to your strategy for like a more longer term thing because the strategies uh have access to the large pool of capital in the vaults and not just your little plate capital that you've been using to help test the strategy and do your experiment so i'm scrolling down and uh heather's comments here are there safeguards against front running the vault um i guess the vault no so since we are dealing with a large amount of money being deployed by a vault are there any safeguards against front running so that could either be safeguards against withdrawals and deposits or calls to earn or safeguards against harvesting a strategy and that kind of stuff so earn is usually is is an unauthenticated mechanism but it doesn't do anything unsafe in that regard so anyone can call earn so that's been something we've been watching because that could lead to a potential uh for abuse so in the v2 design basically the the mechanisms that synchronize capital between the vaults and the strategies is now fully authenticated um so we won't have that kind of issue anymore um and then the harvest uh that that is authenticated um so basically only certain uh i think it's authenticated strategies and governance uh yeah exactly so usually somebody runs a bot and the bot will call the harvest at uh either a predefined interval or i'll call it if it sees like it's gonna earn a good amount um a lot of a lot of the strategies are basically fully automated now in terms of how often that that is called so there's less of a concern there um unless people are watching for those transactions and then trying to run around us um yeah i might have to look into that new uh dark pool thing that uh spark pool is is is having basically the ability to um get transactions mined directly without them being broadcasted that's an interesting thought uh could the v2 vaults help roll out new strategies safely as in could we could deploy new strategies and only delegate one percent of the assets in the vault and slowly increase over time yeah so that that is the core one of the core design goals with the v2 volts is that um when you when you add a strategy you basically specify the amount of seat capital that it gets and then i was trying to get it to work where it would actually increase over time as it basically it's proving itself to work and then it would it would kind of level out at the best uh yield curve that um it can manage but uh part of the refactor might be that we we give a debt limit to the strategy and increase it through governance as we see fit yeah it says like a way is into it and and like get real data on before we go further in the caps but like like you mentioned like uh if if we have several active strategies then then one strategy is always earning something while we're sort of test driving the new ones that they're coming in yeah that's that's really important especially if if we let the vaults get bigger having it shut on and shut off like that is really really a kind of a bad design um but orbal wants to share a little bit more insight on front running uh so hopefully are you right yes um so front is an interesting problem for the for the current consensus layer so this is not the only problem for volt but um like in our research lab we are also um digging into some cryptographic schemes to use on um front running protection so if there are more information and the academia will also try to implement that and test it on the vote so yeah so just subscribe to wiring.finance to make sure that you get the latest information on yeah the front-end protection yeah but i can also like uh given some candidates on that so first using secure multi-party computation is one of the method to make sure front-running can be somewhat mitigated the other one is um using zk stark or z key star as the base layer to do comment reveal uh commit reveal method with a time block and the third one is still under progress by author research lab it's about using verifiable delay function and that that that is just an initial idea so still need to verify them underlying mathematics work so yeah that's the submarine swap right um have a look into submarine swap so cannot verify that they use the same okay yeah it's the same lab at your school though i think okay um so brian had a question which i want a little bit more um expansion on what kind of due diligence do we do on protocol hacking risks of counterparties so if you could just uh expand brian on what counterparties means uh definitely like to answer that question in terms of oh like okay yeah so like we were saying there is definitely a risk of a protocol risk of interacting with other protocols that that is part of the risk assessment that has to be you know basically considered by the team and watched for um with the with the v2 volts design the way it's uh way i was trying to set it up is it would actually define emergency shutdown scenarios that can be executed automatically basically um you know either either um i think for the strategy the strategist can call it or governance and call it at any time and it'll basically uh divest as fast as possible even including for slippage and then for the uh for the vault there was this emergency shutdown procedure that basically uh recalls all the debt from all the strategies at the same time uh to try to get all the debt back to zero and then you know people are withdrawing the entire time uh depending on the withdrawal scenarios um once that gets to zero hopefully there'll be you know no no uh withdrawal fee on on on that because there's no debt to pull out of so yeah you know we we are definitely looking at hacking of external protocols and and you that you just basically have to respond as best as possible and have good communications with the individual teens which is another reason why we don't want to just you know do some random and undeployed uh you know potato meme farm we want to do things with real teams so we know how to again contact them and have good communications with them if all d5 projects were on the same test net with a large amount deposited would it make testing possible um yes but so like fundamentally there is a divide here and the divide is that on main net people are earning money so money is a pretty strong motivator of continued activity and because you don't really make money on test nets um and this is something that could be offered at least to you know compensate people running infrastructure that simulates that kind of environment but if people aren't making money they're very not incentivized to uh put their energy into creating activity on the test nets and therefore you can't really see that kind of thing working uh on other test nuts but that that is a good question i mean it always comes back to this uh testing and production meme uh it's also like and it's also like everybody it's it's putting its hands in in their own data if the state it's shared across the board it's if you you're using a test that you're you're you're you're fudging your dye and that dye is going to affect the other the other the other protocols testing the same diet so that's why they don't do it that way they everybody mints their own diet just for their setup but uh yeah so i think for test notes they're very useful for you know testing under a live environment how your particular protocol works and then you can set up uh you know any sort of simulations you need for external uh you know mocking external behavior basically but for you know real live economics that that can only really begin live from mainnet so one thing i definitely want to explore and if anyone's interested in building tools uh over the hackathon here a tool for not only being able to do fork testing so like forking a snapshot of mainnet and then doing your testing against that but also forking you know some of the activity that's happening at least for the protocols that you're interested in interacting with um and you know create and this is why i really like python for this purpose you know create that behavior and just like re-execute it or at least try or attempt to do um you know some of that behavior so you can get some of that uh you know simulated behavior into your test suite and be able to see how it performs over time so these kinds of you know economic analysis tools is something i see is very lacking in the ecosystem something that could go a long way towards not having to experiment directly on mainnet although that will always be something you have to do because um you can't see how your idea interacts with other things unless it actually has an impact on other things so like you can see if the simulated behavior works and that's a good first step to getting the next step which is actually trying it seeing if it does the same thing or seeing if there's uh reverse impacts from those protocols interacting on you because not everything is in a vacuum and you can't test in a vacuum 100 yeah uh where we're at in time um i think we're past the hour but heather i know do we have time for more questions or yeah we are just uh past the time but where we can hang out and answer questions uh let's just answer one more question i see brian and it's really quick uh already entertaining strategies for new token types so yes um it's if you have a token for a vault that already exists and it's doing and you think it'll do better than the existing vault strategy then yes do that if you have a new vault that you want to create that's also something we can consider um the vaults are meant to you know be for a particular token type and if you think uh with with that the concern is that um there has to be a lot of people that want to deposit into the vault in order for it to be useful at scale so that's the kind of consideration there if you want to replace a current strategy then the money's already there we already know yeah i was talking with tyrone from gauntlet about some of these economic analysis stuff awesome thank you so much you guys this is a great presentation i know um i learned a lot and we had a lot of interest on youtube and here congrats on all the exciting work you guys are doing and thanks for participating on ethonline um where's the best place to reach you on twitter twitter and we'll be hanging around the discord for the event um yeah any questions uh you're welcome awesome thank you so much you guys uh just a reminder it's the last day to stake your spot for the hackathon so make sure you do it cool thanks guys thank you thank you 