hi everyone thanks for joining us today um i think we're now live streamed so thanks for joining us uh today for the uni swap uh workshop we have um omar from parading with us who will be walking you through unislap v3 dev setup in less than 30 seconds um if you have any questions please post them in the chat home i will be able to address them there and eventually it will be in the units grand sponsored channel in our discord yeah i'll let you uh take it over omar awesome uh good morning everyone uh my name is omar i'm an entrepreneur at a venture fund called paradigm and the talk i want to give today is it's a very specific one but it's something that i thought about a lot over the past couple of weeks um and it's about how to deploy uniswap v3 in your development environment in under 60 seconds um this is something that matters a lot to me because i've been working on on a couple of unisof related projects and i promise that by the end of this talk you will be able to deploy all of the unison v3 contacts in your dev setup in under 60 seconds as well um and before we begin a bit about me i mentioned so yeah i'm an entrepreneur in residence at paradigm and previously i led a new asset edition at coinbase so uh yeah kind of seeing the wide gamut and just got very passionate about just good developer experiences so let's get into it like i said uh this is the project that i've been working on for the past couple of weeks uh liquidity mining staking is a pretty big deal on in defy and i wanted to build the canonical seeking contract for unison v3 so let's talk about like how to actually do it so you know i started off wanting to make something for unison v3 um in order to do that i need some unisoft v3 libraries so i cloned v3 core needed some periphery code so i cloned v3 periphery needed some more source code so i copy you know copy pasted some solidity contracts that didn't work pasted some more libraries uh kind of got to the point where like seventy percent of my repo was code that i hadn't really that i had written myself got frustrated uh with thousand nft descriptor tried forking mainnet that didn't feel right more copy pasting tried git sub modules yeah no that wasn't a good idea git sub modules are never a good idea um existential dread what's a non-fungible position manager issues with linked libraries and ethers imposter syndrome you know feelings of doubt thinking about quitting tech forever took a break looked at it again with a fresh set of eyes oh that's when i found out oh i guess other people also have a hard time here i guess i'm not the only one um and i basically kept this loop for like five days straight um just like 10 hours a day it was pretty frustrating i kept getting closer almost got there finally after struggling for a while i got my dev environment working i could run my test suite and it would fail a test and i finally after about seven days of work uh wrote my first line of contract code so that was my experience just getting to the point that i could start writing solidity code for the staking contract and it was pretty painful now i really care about this and here's what i want to do for you i want to make it so that you can go from i want to make something from unisoft b3 skip all the stuff in the middle that i struggled with and you can go straight to writing your first line of contract code um there's a lot of stuff here but my essentially you know everyone here has great ideas and i want you to be able to build them right away because that's like the best thing for the community um because in general right like the best dev tools are invisible and help you make stuff people want and the operative clause here is like let's make stuff people want um now here's where it gets interesting up until yesterday at about 10 p.m this presentation was going to be like 30 minutes about how to you know configure the libraries and deploy the contracts one by one by one but i had this realization late last night so i stayed up late and built it which is that we could just build a hard hat plugin which would be great for this where essentially instead of you spending even even 30 minutes having to deploy it i figure what's the fastest way that people can deploy unisoft v3 so um actions speak louder than words so let's uh let's do it um so this is the repository that i put up and what i'm gonna do now is i'm actually gonna switch from sharing google slides to sharing my terminal and we're just gonna live present it and i hope this works uh share screen share all right uh somebody mentioned something in the chat if you or yeah some somebody say something if you cannot see my terminal otherwise i'm gonna assume that everybody can see this perfect we're good to go all right let's do it yeah csh for the win um so let's go into this project um this is a regular uh hard hat project latest version of hard hat i just npm installed it and we have nothing else in here quite yeah so this is so basically we just ran um hard had created we created a repository or a project so we've done this and now we want to get unisop set up so here's what we do uh if somebody has a stopwatch start it now this is going to take under 60 seconds i think so first we want to npm install you know suave v3 deploy plugin so now we're installing that hard hat plugin that i mentioned okay so that's done uh now the next thing we do is we go to our hard hat config file and we require it unisoft d3 deploy plugin save that so yeah we just did those two things now when we look and we say what can we do now with hard hat boom all of a sudden we have this deploy unisop task i wonder what happens if we run it hard hat deploy unisoft boom done um what we just did is we just deployed all of the necessary unisop contracts what's 9 the factory the router the nfc descriptor decision descriptor and the manager and we can start building uh cool products for other people and um yeah i'm not sure if anybody was timing but that's all it should take to get started in deploying on unisop and that might have been a little bit anti-climactic but that was actually my my entire presentation so i uh i i yield the floor to anybody here who has questions or anybody who wants to do q a and i'll be in the discord in a couple of minutes and i can work with people one-on-one if anybody wants to uh get set up and work on the plug-in as well and uh that that is it for my presentation so thank you that was short um yeah feel free i mean we do have more time here so anyone who wants to jump in i have a question uh please uh take the time for it um you're more than welcome too there is a question in the chat from sam absolutely yeah sam mentioned an overview of the details of the plugin yeah um so they're what i so so yeah so this question actually has like two parts to it there was the library the way that i was writing it before i made it a plug-in and after i made it a plug-in before i made it a plug-in i'm going to share my screen again in just a second excellent so yeah so what i'd done was initially i had this dev tools repository inside of this i had a lot of uh plugins that i've written in order to do the staker for example um when you're doing contract development one common thing you want to do is you want to have a test drc 20 and you want to uh what's it called do a transfer okay in order to do a transfer in order to do a transfer you have to ensure balances and approval so a lot of the repository was actually utilities like this where you can say things like erc20 helper insure balances and approvals so in your test if you want to say you know this user has these two tokens and they have this amount of both of these tokens and they want to allow spend by a certain user it's individual calls that you can do it's also a lot of this which c20 helper there is something here yes exactly the other part of the library that i had was a lot of these useful commands um for example let's say so one common thing with the staking contract with unisoft v3 in the staking contract because you want to do something like you want to mint an nft you want to deposit it you want and then you want to stake it it's largely these these sorts of commands and what's useful about these note that it does anything magical but it automates away a lot of the really difficult stuff that uh that you have to do like uh you know doing transfers approving tokens making sure that you're logged in as the right person uh so on and so forth so that was that so it's really those two types of things and then for the actual plug-in v3 uh deploy nissan v3 so i actually haven't even opened it up on my uh what's it called [Music] so yeah for the plugin itself uh the plugin is is is pretty straightforward largely what it does is it adds this task to deploy uniswap the way that it does it is that it just has this unisoft b3 deployer class um the way that that works is that you essentially can deploy it essentially has the what's it called the abis and the byte code for the relevant unisop contracts and it deploys them all for you automatically um so i hope i answered that question about any about the details of the plug-in and happy to go deeper in a further question um where was it deployed to so when we deployed the contract um whenever you run any hard hat script you specify the network that you want to deploy it to by default i believe hard hat deploys to the development network so it deployed to the developer network locally um i could have just as easily passed in a different network parameter and said put it on like robson or put it you know elsewhere and it would have deployed uh there instead um from youtube when will the sdk for v3 be updated that's actually a good question i've spoken with the uniswap team about this um i know there are several different efforts um i think the devtools are important enough that it's good to have multiple people and multiple teams working on it but hopefully soon because i mean good dev tools are really critical um and then a question from youtube is there a way to use this plugin to automatically deploy the contract and the setup function of my hard hat tests yes absolutely um i also struggled a couple of days uh attempting to figure this out the way that we would do it is uh i'm guessing in the setup function of your hard hat tests you have some before each function or a before helper which runs what you'd want to do is you'd want to use this class to deploy the contracts um in a future version of this library we could update it so that you pass in a provider instead in addition to an actor that way you pass in whatever test provider you're using if you're using for example the uh waffle mug provider or something like that you could pass that in and it would deploy them given given that provider and that signer so yeah absolutely is doable and it's something that should be doable in uh yeah like one to two lines of code um question from youtube does hard hat provide a boilerplate framework for smart contract projects i believe that it does i think that's largely what hard hat is because when you create a uh a smart contract project using hard hat it will create a contract directory for you here so i believe just by starting up a hard hat project you get that and then when you add this plug-in to the hard hat to your hard hat project you're able to get them in that project itself um i think we are i think that's it in terms of questions so far i figured we discovered a lot of ground in just a couple of minutes so happy to elaborate on um any topics that i did go into or also talk about anything else so if you have any questions so if you're to post them in the zoom chat if not i think that's great too because uh because really like the way i think about dev tools right like devtools should be invisible and they they should help you they should almost be like super powers that you have but ideally this presentation is you know sort of follow the same follows the same ethos as dev tools themselves which is that it's like ideally you can set up this tool right away so that you can get back to building something awesome for people um and yeah do i have any commentary on the current state of dao's uh i i do but that's sort of out of scope for this presentation so happy to chat about it one on one so cool all right well i think that is it so like i said i'll be on the discord in a couple of minutes time and the uh yeah and like the the 30 minutes that we won't spend talking about like this dev tool i hope you spend it building something uh awesome for people so that is it go forth and build great stuff for people thank you uh amazing amara that was uh to the point and and very very clear uh really appreciate it yes uh we'll be in the sponsor uh for you sponsor discord for uni grants uh that's where you'll be able to find omar shortly uh there's no more question on youtube either i appreciate all your questions all of you coming and joining us today and thanks again for the great presentation omar absolutely thanks so much everyone have a great day thanks you too 