all right thank you luke um hi um i'm eric tang and i'm the co-founder and cto at lifepier um you know today i'm gonna tell you a little bit about uh video streaming um you know we're really excited to be at this hackathon um you know lf grow and and and lens protocol is is a really exciting new new protocol that we've been kind of working with for a while now um in the background and and excited to to be kind of participating in this in in this session where we got to see a lot of exciting new ideas come out uh this weekend um obviously social social networking and video is so intertwined today that you know it's it's hard to imagine you know building a social app without some kind of video component to it um and so life here is really excited to be participating uh here um just for you know for the people in the audience that who aren't as familiar with life here life here is building the video streaming layer of web 3. right so what that means is life here can be leveraged as a video streaming infrastructure that helps developers building web3 applications to add video features into their application so think of this as a um think of it as you know ipfs or filecoin to storage uh as you know live pr is to video streaming um today uh i'll go through uh you know spend a little bit of time talking about a um like decentralized social and web 3 video um get some concepts out there but spend most of the time going through an example application um you know just kind of talking through like what what it might take to build a decentralized tick tock with lens plus life here right and then yeah and please feel free to feel free to ask any question that you have um i've already seen questions rolling in is it possible to use live here also for audio online sources um absolutely so you can actually just stream an audio only track for example and and life here will be able to stream that no problem um yeah so um going um you know going going into kind of decentralized social applications and web 3 in general a little bit right today we live in this world where um there's this huge creator economy right and and social applications is where creator economies um creators uh kind of create their content and and a lot some of them even make a living full-time right so it's estimated that there's about around like 50 million people around the world that um you know identify as content creators um about two million of them are professional content creators um and and as we can see here right most of them are using a few big centralized platforms uh and and as we all know there's there are these kind of um perverse incentives um on these platforms right uh at this uh you know on the one end these platforms are in business because the creators are on these platforms created content to keep these platforms going but on the other end um the platforms are now keeping a and the creators are dependent on the platform because the platforms are so big and they kind of um hold so much power over the creators that they are taking a huge um cut in the in in this like economic uh relation relationship right so you know it's it's for youtube for example um youtube's take rate is about 50 which means um for every two for every two dollars youtube makes uh it shares one dollar with the creator and it keeps the other right and which is quite a big tax if you think about you know most like all of the content on youtube is created by creators right um so as we as we see already happening right um you know these creators are finding out about web3 and and you know there's all these interesting benefits in web3 um you know the one of the biggest things is that um in web 3 creators and content creators actually own their content right when you create something where you create an ft the nft is in your wallet and you have this indisputable proof that's cryptographically signed that you own that piece of content right so and because of this we have applications that are built around this concept instead of um you know users being like being beholden to the application applications now are working around the users um and where we're seeing this type of shift where um you know creators are coming into web 3 and and there are interesting web 3 based creator applications that are being being built on top of web3 infrastructure um so diving in a little bit uh more into kind of what a web 2 video application looks like um you know in in the back end right if you zoom in we see that you know we have either you know live streaming a video source going into a media server or we have kind of people um users uploading video from uh from a front-end application uh this media server would then kind of transcode the video maybe store or upload the transcode renditions up to a object storage uh maybe s3 something like that right and it gets cat uh this this content gets cached in the content delivery network and then it gets distributed around the world to the users and devices right it could it could be a front-end kind of web browser based video player it could be a mobile application something like that and then in the back end right we have the database that stores all the user information and then we have the server side logic you know the back end of the application themselves that you know that kind of have the business logics built in right so this is a pretty um kind of typical um technical architecture of a web 2 based video application so what does that look like for the in the web 3 world where well we still need to have all these components for video streaming to work on the internet right but instead we start to use decentralized infrastructure to power these applications right so we have a decentralized streaming and transcoding network um which is live peer right we have um decentralized storage you know it could be falcoin could be our weave you know store j there's a bunch of solutions we have decentralized cdns even that are starting to pop up um and well and and then we have the blockchain kind of replacing the the database as the storage of the user information uh and then we have the centralized query layer right could be the graph or in this case um lens protocol actually has a query um inquiry backend for for application developers right and we can as developers we can continue to build these uh applications in the front end um so you know looking uh looking at this in in layers right we have you know at the very bottom uh this smart contract layer that provides us token standards provides us value means for value transfer making markets um a ability to kind of coordinate in a decentralized way right and then on top of that we have this web 3 infrastructure that gives us storage data querying video streaming right and then on top of that we have you know web 3 video applications right whether it's social or nft applications meta versus we have wallets commerce applications et cetera so um so you know these are kind of just high level concepts of um you know building applications um in uh in the web3 space especially around video or or social um let's let's take a look at an example right how would we build um a decentralized tick tock especially using lens and life here since this weekend is about lens um so so let's let's take a look at a couple of features and and and how we can build them um so a decentralized tech talk should probably have a user profile right that's um that's kind of uh with the that's tied to a web3 wallet it should have video upload and playback capabilities right people should be able to you know record a short video uploaded and then you know the application should be able to play back um tic toc also has a live streaming capability so people users should be able to live to create a live broadcast um they should be able to record those broadcasts so that um you know viewers can go and play back past sessions and then there can be um you know those are kind of there's kind of the cornerstone features right and then there can be other um additional features on top that are more what they're web3 centric and we'll get to them in a little bit so um diving into each of these features right um think of thinking about profile how do we create a profile well lens kind of has this for us right so uh if we just go to a the lens um yeah if we just go to the the lens documentation uh we see that you know here's a way for us to create a profile right with a few parameters um and and from there a web3 wallet would have a profile right um and so after that um once you create a profile um you you you need to you can create posts in those profiles right so um really video uploads uh in the video context uh become posts in the in the lens context right so uh again going to this lens documentation page we see that each profile can create many posts and then for example here in the post in the post metadata field we have this content url and that's really what we need in order to to specify what the post looks like right and and you know we'll have different we can have different types of schema stored in in these posts um so i'm going to show you how to do um how to do a video upload with the live peer uh with the life here api right so for example you know this is mr beast's um profile right so how do we create a profile like this um so let me let me go here uh the first thing that i'll do is i'll pick a video so i'm going to [Music] pick this waterfall video right i'm just creating a you know this is a video of a beautiful waterfall and from there what i will do is i can um i can go to livecare.com uh which is a gateway service for for the livestream network um i'm going to go here this is what it what it looks like when you log in you can go to players you can go to api key and you can create an api key right so i'm going to copy this api key and i'm going to set this api key in my local environment right so now my environment knows what the api key is and from here i can use a i can use the video nft package from live pr this is a mvm package um and i can um i can use this package to help me create a video nft right so so what this is doing is right now it's kind of downloading the npm package now i can say i want to call this um i want to call this nft waterfall and you know i don't want to customize any nft metadata but you know if i wanted to i could so now what um this script is basically going through um the going through the video uploading the video into life here uh and then it'll transcode the video and and optimize it for for online streaming and after that it'll return us the metadata that we need in order to create a post or mint nft or kind of anything kind of any web 3 specific action that we want to take uh with with this video right so now it's uploading the video the video is about 30 30 megs so you know it'll take a little bit for that upload to finish and by the way um all of this code is is open source and you can there's also an npm package that you can use to embed this system um into your application uh so that you don't need to go through the cli um process right it'll just it cannot be done programmatically so now we see that um the file has been uploaded uh we have this id and we're just waiting for the import task to complete um it'll take a it'll take a little while to kind of transcode the video and after the video is transcoded we should get a we should get a metadata field back so let's just wait for a few minutes um maybe as we um yeah as we're waiting uh let's just go back to um to the um documentation i can show you guys um how the how to create a post if you haven't seen that before um [Music] so um in uh in lens um right we we can create a you know we can create many posts in a profile uh and um and at the same time uh post posts uh can have comments right a post is also called an app a publication um and from there you can even create a mirror uh in and that is basically a collection of different posts uh from other profiles right so you can kind of create this view uh so that you can you can you can create a curate curated list of posts um looks like i'm having a little bit of a problem here of getting my task to finish i'm just going to try to do this again [Music] it's gonna be one second uh [Music] right now it's gonna it's gonna upload the file um maybe we'll we'll skip this part since it's taking a little while um and uh um and we can go back to uh we can go to uh a file that we that i have previously uploaded already uh so just to show you what it uh what it looks like um so um i'm i'm going to play this file right so so what we what we see is um this file is a uh has itfs hash and it's pinned uh using using life here so if i play uh i will see that uh this is a you know the the same file uh for for the waterfall um and and now this file is inside ipfs right so what i what i can do for example is to then um play back this video in a browser uh so here i'm i have a code pin right so this is just a really simple um video player uh inside video.js and what i can do is find this source and replace this source url with my sorry with my the url of the video that i just uploaded um into ips ipfs and using using live here to uh to transcode it and now uh you see i i am able to play this video back in the browser right so you know this is for example a component that you can use to embed all the videos that the users have users have uploaded uh into your application um cool oh yeah we see this is successful now uh and um and this is what we what you will see um when once you upload the the file you see that not only do you have the video file cid and and kind of gateway url but you also have an nft metadata gateway url so this one is interesting if you if i just curl this um [Music] and [Music] pipe that into jsonp [Music] maybe i don't have that install here uh so we'll see that uh this is a json that basically follows the erc721 or 1150 51 standard so that you can just use this uh this url as your token uri to to mint um into nft if you wanted to um cool so so this is the the kind of the video uploading portion of the of the workshop um i'm going to do another one which is kind of live broadcasting and playback right so so imagine your your user wants to um you know broadcast a video so what do we do what do we do there well so um there are a couple things that we can do one is we can have a in browser we can have an in-browser broadcasting experience using one of the tools that like the lifebear has created so um the first thing that we'll do is to create a stream inside life here uh and i'll say this is called rocks right this is the the the name of my stream um there are a few a few pieces of important information here that we should we should know about the most important thing is probably this stream key right with which represents where i should ingest my my life my live stream uh and of course this ingest url is is what i can use to to ingest that video uh so for example if i use a broadcasting software like obs right i can copy this url into obs and using the stream key to start streaming but what if you wanted to offer kind of an in-browser broadcasting experience so that you don't need to require the users to then have to download another piece of software to run to run this well we have built this tool um called um i'll just cast it so um um okay so um so this is the kind of a in browser broadcaster that's been built um and and there's a shorthand here which is i can just copy my stream key into the url um so it's just cast it slash 2 slash the stream key and now i can start broadcasting now just press the button and and i am broadcasting my video uh into the live here network it's you know being processed in a network and and transcoded and all the infrastructure um you know that complex diagram that we saw is taken care of by the network and we see that here we have a live stream going already right uh another interesting thing uh that we have um a piece of the information that we have is this playback url in the cdn so what i would what i can do is then copy that same um copy that url to put it into a video player for example right um we go back to now this this is a slightly different player just to showcase this is called the the player um player um that plays hls instead of um before we were playing an mp4 file right so i'm just gonna copy this uh playback stream i'm gonna put this as the as the video source uh it'll load and now i have my live stream embedded um in this um uh in this page right in this video player so uh it's that easy right um and now you can you can imagine building a kind of a live streaming uh style experience uh one thing to note is that um you should probably like if you want to build um kind of this channel concept inside lens you should probably create just one post or one publication that's dedicated to the live stream of this channel right and and what you can do is every time you um you can you can specify to the live peer network to um to record the session um you know here i can just turn that on manually but of course everything can be controlled with the with the api right when you turn on the recording session uh you will see that um there will be a recording url when your session is finished and you can use this recording url as the um as the content you are as a content url when you're creating your post inside um inside lens here right so for every for every session you will create a new post that represents like a recording of the previous session um cool so so these are kind of the the basic uh video streaming features and how you would use live here to add video streaming into your into your applications right so what are some of the other features that you can potentially think about well one is how do you build a feed of kind of this home feed and you know if you launch uh into tick tock right um you know you're you're sent into a home feed right um there there happens to be a pretty handy tool inside lens that i think will be helpful um and let me just find what that is i think there's an explorer functionality right so here you can kind of explore all the publications or all the posts that have been published by by people so you can for example create a video explorer view you can um you can do follow right and then follow inside lens simply means uh this is very similar to kind of subscribe to channel uh type of concept right where you like as people post new videos uh you will be able to see them see them come up mirror where we talk a little bit about right which is curating videos so users can go to you know other creators profiles and and curate their own custom video galleries or they can even create their own video galleries for example if you want to create a you know an education platform a video based education platform right you can have different courses to be you know within different video galleries right um collect is a really interesting mechanism inside lens um and this kind of represents monetization for video content right so that you for every publication you can specify like a custom collect functionality uh and from there basically when people uh try to um it gives users a way to uh kind of pay the patronage to for for creators uh and finally i think um content moderation is a really important thing right especially when it comes to decentralized um social networking you need to you need uh you need to have a way to prevent bad or offensive content or harmful content from interning or from being surfaced to users so kind of flagging sensitive content is a way there's a way to to do that inside lens as well um so that's kind of um it's in oh yeah that's in here reporting so you can kind of follow this follow this mechanism to um to flag a piece of content um that's uh that's most of the um the um yeah that's most of the um workshop i'm gonna jump to just to give a quick overview of all the prizes that lifebear has um you know of sixteen thousand dollars of total prizes um the first place prize is for the best web 3 creator social platform using live peer right um here we're emphasizing creator social platform so thinking about how to um enable uh how to empower creators to to kind of connect it with their fans uh to monetize and type their the content that they're creating um second prize for four thousand dollars um is uh the best web3 live streaming social platform using livecare so imagine what a web 3 based twitch would look like or things like that um third place uh best short form video social platform using life here also for four thousand dollars um so yeah like imagining uh what a web three and decentralized uh tick tock uh would look like uh and finally we have a we have a price pool of four thousand dollars for any hack that uses live peer uh to add video streaming uh functionalities into uh into the application um like i said i think in today's world uh when you're building and when you're building a social app um it is really hard to imagine you know social like the popular social applications that actually don't have any video component in there um and finally i'm just going to mention that uh live peer is also hiring right so if you're interested to work on uh video streaming to kind of enable video streaming for the web 3 world um come and and check out these job posts we're hiring across um engineering and marketing and uh evangelism right many different roles so you can go to lifeguard.com jobs to uh to take a look at uh what are the open roles all right um i'm going to hop over to these um to the to the questions for for a couple minutes luke is that cool go for it all right uh uh we already talked about the the audio file um so video nft is creating a new uh erc 721 collection i maintain one token with the hash for each um yeah so yeah so exactly if when you upload a video um it cream it creates um a it just creates the um the metadata that you need in order to mint the um the token and you can just use that to mim the token right um you don't necessarily need to uh it won't necessarily mend the token for you um yeah so so so that means you can you know use any erc20 contract for example to admit token and and by the way i also think inside lens um lens heavily uses the concept of nfts so for example i believe every publication inside lens is also an erc721 nft um cool gonna go um next is ifs.uh live here um slash ipfs um blah blah blah pull video from ipf sos3 um it's it's it's um going through our ipfs pinning service uh so it does use um ipfs um for um for the cdn architecture absolutely the cdn the cdn through the lifeguard gateway service is now a a centralized cdn that we use right and that's because um decentralized cdns aren't haven't quite gotten there yet in terms of scalability and there are some quite scaled applications that are using uh the lifeguard gateway right now so so we um we kind of use the a centralized cdn but you know at the same time if you want if you're interested to swap in your own decentralized cdn you can you can actually just um integrate that on top of the the livehere.com um url and and that would that would also work uh cool so video nft is only uploaded video and getting the hash um yep i think that's right yeah you can you can then use the metadata to make your own um nft um is there any any api to get how many users currently watching yeah that's a great question um we're working on this feature right now and it currently doesn't um it's currently not available so my my recommendation here would be to um either integrate with something like google analytics to to keep track of that information or to like simply implement some kind of counter in the back end that uh kind of um counts how many times the page has been loaded um and or like use a you know use a cookie to to to identify um unique users and that way you can keep account and show and show that count to to the viewers if that's important that's an important feature uh in in your application um cool coming to hack around it well uh is there any way to establish a private gateway mechanism with the ipfs hash like submarine yeah great great question um right now there is not a way to do a private ipfs hash uh but yeah like definitely i think that's a that's a really that's a really cool feature and and something that we're we're interested to to see exist uh so so absolutely if if you want to build a hack around it um let us know cool i think these are all the all the questions that i got all right oh let's see a couple more coming in how does performance compare to serving from ipfs or s3 um performance on live pier is pretty uh comparable to x3 and i think if you're just using pure ipfs it's going to be a lot better than just purely running ipfs right because that the dht inside ipfs is actually not super um like it's not super well um calibrated for kind of a global video streaming um workflow uh without without any kind of incentives to to cache that content right uh and i also saw someone ask uh what's the cost of using live pier so um so if you use the lifehear gateway um you know there's a there's a um it's free to use uh for you you get you got a certain amount of free minutes i think up to a thousand minutes uh and then from there um you pay on a per go on a usage basis um you know if you compare that um that cost to something like a an amazon ibs or or even a cloud for our stream uh you'll see that it's anywhere between five to ten times cheaper than any other centralized centrally hosted solution uh and that's exactly because uh it utilizes the lifetime network under the hood uh and and um take advantage of kind of the cost savings uh when you're using a decentralized network all right i think that was all the questions awesome thanks again eric thanks for this excellent uh presentation uh always always a pleasure to have you on we always love having you here and i know that our hackers are brief um i want to encourage everyone to continue uh talking to eric in discord and and and follow up on some of the conversations that were started here today uh we we all wish you a lot of uh good luck there will be a team information session uh happening at 6 p.m eastern time today if anyone's interested in that but otherwise uh good luck go start planning your hacks and and get ready for an incredible weekend all right thanks everybody thanks luke all right we're gonna be closing the sess 