appreciate your patience awesome well thank you everyone who's joining us right now um i want to give a quick introduction to ivan who's uh gonna be leading this session i mean and probably introduce yourself better than i can so i'll hand things over to you right now but i believe we'll be doing some q a at the end so if anyone has any questions feel free to put them into the chat on zoom and we will get to them at the end if we don't get to your question obviously link up on discord it's all yours perfect thanks luke and great to be here today we're going to discuss how to build apps how to build them quickly and exactly the tools that we provide at morales and my name is ivan i am the co-founder and ceo of morales and something we have to understand that all dapp developers need to reach some kind of success we all have some kind of success picture and it can be different for different people but at the end of the day in crypto we want users the success in crypto can i think with great certainty be defined the number of users or the total value locked or something of that nature we want people to interact with our creations and you may have different ideas i may have different ideas for example for all of you watching maybe you have idea about nfc marketplace maybe some kind of wallet maybe some kind of default dashboard cross chain bridge exchange and so on so forth and something that unites all of these different ideas is that they all need exactly the same things developers whatever idea you have uh we all need to figure out how to log in a user all dapps need to do that we all have to figure out how to fetch balances from the user whether it is token balances whether it is native balances whether it is nfcs we need to face transactions we need to fetch smart contract events so when something happens on chain we have to know that we need to watch the different topics and we need to get that in real time in many cases we have to build an index so we need to create some kind of subgraph or to index data in some way basically that we update a state based on on-chain transactions and we have to send the transactions if you really think about most of the use cases most of the use cases you think about they all need this the problem in crypto especially in crypto development is that everyone is reinventing this wheel over and over again you start a new project you have to build this whole infrastructure and of course when you reinvent the wheel and everyone has to reinvent the wheel the industry moves slowly it doesn't move as quickly as it could have been moving if we did not reinvent the wheel and the mistakes and the problems really start with projects deciding to use rpc node as the beginning of their project because rpc nodes are really very primitive low-level technology rpc node cannot tell you a lot about the blockchain it has all the data but accessing that data is very difficult you cannot construct a query and run it against the rpc node you need to look transaction by transaction block by block in many cases you have to build your own database with all of that or do a sub graph it doesn't support filtering nor aggregation so filtering for example if you want to get some kind of transactions with specific condition or aggregation if you want to get some kind of aggregate number maybe the total volume for your dap or maybe total volume for users and so on so forth it cannot do filtering cannot be aggregation and requires massive massive code base around it so this is normally how it looks like you connect your pc node you start your project connect your pc node your first problem is to how to log in a user how to authenticate user well you have to verify their signature so you have to build that if you have some kind of real-time app real-time dap communication you have to figure out sockets you have to build that you have to figure out user lifecycle what is that the user logs in you need to figure out how to fast transactions how to fetch their balances how to fetch their nfcs the node cannot tell you that it can tell you specific nfcs for specific smart contract but you cannot just ask and now hey give me all nfcs for this user you interface transactions you need to swing smart contracts it's a lot so basically you build this entire monster this entire monstrosity of infrastructure whenever you want to start something you have an idea and you want to go to market and not only do you have to build that you also have to provision infrastructure if you have a lot of users you have to scale database you have to maintain it debug it you will make a lot of bugs when you do this first time if you do this for first time it's going to be a lot of bugs scale it and so on so forth so this leads to what this leads to slow iterations when you have an idea about a new feature for example it's difficult for you to build it why because you have to make it work together with everything else you have to make it work with your entire tech stack that you've built around your rpc node it's difficult to test because it's complicated it's long time to go to market for you to go to market with all of this probably a few weeks at least maybe months and all in all at least to increase failure rates because in crypto in any startup in any new project you have to be fast you have to be trying new features fast you have to be trying new concepts fast so of course if you have this baggage you have this baggage holding you back with all of this tech that you run and maintain around your node is going to be horrible so of course the answer is that we don't build like this this is not how that should be built at least now in 2021 because this is the exact back end that all the apps have to figure out you don't have this back end you cannot build a meaningful dap today so of course the question is if there only was a solution a pre-packaged solution with this standard boilerplate backend that each and every dapp needs if only there was such a solution if there only was a simple sdk with all of these features built in and of course i'm here to tell you that there is a chance that there is such a solution and it is called morales it is morality server and morale sdk you can think of morale as kind of like firebase of crypto if you've been building websites you've been building mobile apps you probably know about firebase so building with morales is very similar to how you build the mobile app in firebase basically you sign up for morales and you get the morales server so morales server is basically this back end with all of these features we discussed all already built in with all of these features that you shouldn't build yourself for example authenticating users getting all transactions syncing smart contracts and so on so forth and the way to use it is through a very simple javascript sdk we also have sdks for unisy if you want to build unity games a mobile sdk is coming soon but all in all if you want to log in the user while enough code morales.web3.authenticate as soon as the user clicks login in their metamask you instantly have a database of all the data about the users older nfcs all their transfers all their token transactions you get a finished database already with all of this most importantly this database updates in real time if your user moves their assets on chain this database reflects it instantly so all the time you have a database that has everything you need about your user tokens transactions nfts and so on so forth most importantly cross chain if the user address is active on ethereum on binance chain on matic on avalanche on any other evm chain it's all there it's all already by default and what did you do you wrote one line of code just imagine what kind of infrastructure you have you would have to build in order to make this work moreover this is infinitely scalable you don't have to worry about provisioning database scaling it it's already infinitely infinitely scalable and of course in order to make use of this data we have a wonderful sdk so you want to read from database one line of code morales.web3.gettransactions to get all transactions about the user to get the balance well of code get native balance to get erc20 balances don't get token balances very very easy way to build basically a wallet you you wrote four lines of code here plus one line of code to log in the user with five lines of code all together you now have a dashboard with the user all their funds all their nfts cross chain cross chain and it's updating in real time that's most important and you just did five lines of code this is of course completely completely new paradigm for that building because normally you have to have this ginormous monster around the rpc node like we discussed in the beginning now something very important is that this database that we give you the morales database it is a database that you can do any query i mean you can you can have a filtration aggregation you could never do that on a node with rpc node you cannot do anything in terms of querying here you have a database that you can do any query you want it's infinitely queryable and you can get real-time alerts through sockets so for example here is with two lines of code you can see at the bottom we do all new year's eve 20 transactions you can subscribe to them and in real time all your clients will be getting that through websockets so you don't have to know how to set up websockets or if you know that you don't have to spend time to do that and maintain that is already all figured out so already now this is unlimited power in many ways because imagine you get an idea you can quickly with few lines of code get it working quickly show it to users quickly go to market quickly test is this idea even good is this something i should be pursuing especially in hackathons like this when there is a limited time you need to have a tool like this in order to deliver quickly try things quickly and move quickly ahead now we've been talking about the user how to log in user get transactions about the user get balances of the user and of course you can do the same things with smart contracts you can give morales a contract address and event topic and instantly you will be guessing in real time updates for that particular event topic and you can also get all passed all past transactions all past occurrences of that event so this means that you don't need to build your own subgraph you can just tell morales hey this is the contract this is the topic and you can update the database in real time and have some kind of state that you build based on on-chain events and you do it with two lines of code you just specify a contract event like this and you subscribe to it that's it and also you get all the past occurrences in the in the database and something we focus a lot on is the docs if you go to docs.morales.io you find a lot a lot a lot of information there we spend a lot of time on video on code examples and so on and so forth and so we've been discussing how to get information about the user how to log in user how to get all transactions how to get all smart contract events and and how to build index let's talk about how to send assets because one of the things you discover when you use ethereum is that to send an ear to 20 token you need to construct this whole data structure with abi i mean it should be just one line of code and this is what we give you one enough code morale is the transfer to transfer native assets and you provide just an option field like this that is native type native amount and receiver a one enough code morale is the transfer to transfer yes it years a 20s because in the options you just specify that you want to transfer token and you this is the amount and this is the receiver and contract address the same thing with nfts so as you can see the goal of morales is to basically put all of this complexity underlying complexity of the blockchain as far below in the stack as possible and already now in the few minutes of this short presentation you see how with a few lines of code we have logged in user with page balances transactions flash smart contract events real-time alerts for users and smart contracts we can build an index you don't have to have a sub graph and we can send transactions and this is 99 of the features that all dapps need this is the common burial plate that everyone today needs to reinvent from scratch but there is more but wait let me know if you've seen this but wait there is more there is more what is more plugins you see morales is infinitely extendable through plugins so right now for example we have one line of code for you to have a fee at onramp morales.ligands.fia.buy and you just write one of code and your user gets a fiat on-ramp pop-up and you can already pre-fill their address so you know of course the address of your users from metamask so you can just have this one of code and you specify as argument the user address and it's already prefilled in the onboarding in this fiat on ramp and that's it that's how easy it should be we also have plugins right now with one inch with pyroswap as well which means that you just write one line of code morales.plugins.oneinch dot swap and you can swap any asset to any other asset through vanish just buy enough code you don't have to know any smart contracts anything like that you just need to know simple javascript because for example with one inch they already have figured out the smart contract we just write one enough code to swap so we have a lot of plugins in our plugin store and you can build your own plugin by the way and it is cross chain by default we already mentioned that but it's very important that we reiterate why it's so important because as you know all dapps right now have to be in some way a bit cross chain you look at open c one of the biggest dabs of course of course they have polygon they have probably more chains coming up in the future but something very important with morales right now is that we do support each binos polygon arbitrary avalanche meaning that your dap is cross chain by default and in the near future we're also adding solana we're adding lrond because guess what even solana and lrond apps what do they need exactly the same thing login user fast transactions which means that we can have a unified api unified sdk for all current blockchains and all future blockchains whatever is hot in the future whether it is orbits from layer 2 whether it is something else you don't want that risk you don't want to be locked into something that may not be relevant in the future you want the unified question sdk which is moralist and for for moralist a new blockchain is like a new printer it's like windows operating system you don't care that tomorrow there will be a new screen and that your computer will not talk to that new screen or a new printer because windows will handle that just like morales a new blockchain is like a new printer it will work with any blockchain but of course our heavy focus is on ethereum and evm based chains right now that is what we support we don't support solana and android yet although that is under on the roadmap so basically using our pc nodes basically building in this fashion that we discussed in the beginning building in this fashion when you build your own things around the rpc node it's using primitive tools you know for example you don't have an excavator you have to dig by hand in the dirt it's very primitive tool you have to spend so much time you have to organize so much people just to build something that looks like a mud hut and of course using morales and morale sdk you can build complex things because you move faster you try things faster you excel faster it's a whole new level of abstraction and so in that sense talking to our pc node directly and building around it is kind of like you want to build a website and you talk to cpu you should never talk to cpu if you build the website imagine if you had to talk to cpu when you just wanted to build some html and css we would never get anywhere with the web but this is unfortunately how crypto works today that we all talk to cpu and sorry we all talk to our pc node and rpc node should be way way way somewhere in the sky because it cannot give you a lot of info without robust infrastructure around it our pc nodes are not that useful and this is really how we're seeing now this blockchain space transformer now of course we have a lot of tutorials for example how to clone xerian in 20 minutes because if you think about ziri and it's logging in user getting transactions getting all of the data about the user and sending transactions so you can see how you can do it yourself in just a few minutes using rallies cloning ether scan in a few hours cloning variable in 24 hours we do all of these different series where we explain how to rebuild different things in crypto because when you come into crypto you you kind of think that you can do what etherscan does but without a tool like morales if you just speak to the node you cannot do easter scan you cannot get for example all tokens of a user just talking to uh to rpc node and of course we have all kinds of different tutorials on different uh on different topics there on morales um web3 web3 channel but right now we've saved some time sometime for q a so i'm very happy to answer q a of course join the discord channel in the if global is global server but also we have our own server uh if you want to join our community at morales.mage and yeah i'm happy to take any question and and answer if you guys have any and look you probably know know that i think we have a few questions in the chat more than welcome to post any of that you might have come up with now i think we have a few more minutes uh ivan thank you for an incredible presentation i'm really excited for morales in the future of what you guys are doing over there um somebody's asking is the database centralized yeah so that's a great question when you build your dap you have to have centralized solution to handle off chain data i mean that is how it is the database we give you the database and so right now everyone is building their own database so of course by definition when you want when you're handling off-chain data for example when you want to index the blockchain where you want to have all of this option data it is right now in many cases in most cases centralized i mean this picture is a typical dap right now now the good thing is that most important things are decentralized all the assets morales doesn't hold any node any keys all the assets all the smart contracts and so on so forth that is what should be decentralized but of course right now when you look at a backend for crypto handling off chain data i mean option data by default is is of chain so morale of chain databases of course also of chain in that sense i see some more questions in the chat so look should i take them myself or do you want to read them yeah go for it go for it all right we see some more questions for example corsic asks how does it compare to alchemy so alchemy is uh is nodes uh while morales is this whole solution for all kinds of things um for logging user fetching balances transactions and so on and so forth uh what's the business model of morales and price for developers so right now we do have a free plan for uh most of the things you can do 3.6 000 requests per second and soon we're going to launch paid plans but our free plan it's more than enough for 99 of the use cases and our whole our whole strategy here is to be as free as possible as free as possible uh for ddos uh reasons and for spam reasons it's not gonna be fully fully free but for 99 of the use cases it's it's basically no cost so you can try it uh as soon as possible and our business model it is support we have many projects that come to us and they say hey we love the technology but you better help us you know with if something goes wrong so that is a paid feature of course that we have uh real-time support chat support and of course if it is heavy heavy dap with a you know tens of thousands of users then it costs as well yeah um cool stuff i will try to understand what is the risk associated with using morales what type of control is sacrificed well what you sacrifice in terms of control is basically the the database although you can export it you can always export all the data at any time and you sacrifice a bit of control when it comes to communication with the database so for example when it comes to sockets i mean we give we give that to you when it comes to api to the database we give that to you as well but things like this when you want to build something you want to do it quick and if your dap becomes big feel free to build your own back end start using morales build something quickly get up to speed get users get adoption and then you can worry about being completely independent and of course in many cases it does make sense to be completely independent and morales is a tool when you are starting out and you want to be big and you're not big currently and so when you're not big it's not a problem for you that you outsource some of the features like for example all of this basic boil plate to something like morales and in in most cases you're still using some kind of provider whether it is in four alchemy great providers but you're using them i mean you're still reliant on some provider but yes i mean when you come big you can run your own nodes you can run your own back end you can you then at that time it makes sense and you can afford that but many people they pre they prematurely optimize i mean they're not even anywhere in their project and already they're thinking about how they're gonna be completely completely independent so it's all about your strategy and it's all when you're sourcing out it's important to be quick it's important to try things because the risk is you build a lot you build all of this yourself and then nobody cares about your idea because you you didn't try it you didn't go to market and you didn't test it so it's better to use more alice try it out you become big perfect then you can build your own if you want to be completely independent um let's see uh what's in the works so uh bob when it comes to what's in the works we are adding more chains like solana and stuff like that i mean our goal we're not there yet but our goal is one unified api across different chains so if you use morales you know that you are on solana you're on eth you're an avalanche you're also on all future chains because just look at the ecosystem just a year ago we did not have polygon arbitrarion we did not have optimism and so on so forth and so when you build on blockchain you have a big uncertainty will this chain that you build on be the best chain for you in one year even if it is ethereum ethereum is fantastic but now it's all about how do we scale do we go to polygon do we go to orbit room do we go to immutable x where do we go so why not just be everywhere and if a new chain comes tomorrow we're going to integrate it's going to be the same api for everyone and uh it's decreasing that risk of that you pick the correct horse and it's very difficult to pick the correct horse because even the best horse in town if right now is also scaling into even faster horses for different different use cases but look at orbits from look at all other zika sync coming out so that's that's important and ethereum is now a whole ecosystem when i think about ethereum i'm not only about thinking the ethereum blockchain ethereum is now uh everything that we're seeing uh optimistic roll-ups zero-knowledge roll-ups and all of them have their own chain and you have to be there somehow otherwise someone else will be there and you will not capture as big market as you could have are there any hackathons for morales so yeah of course we well this is a hackathon for example by the way we have 12k you can go to to the if global price page you can find all the prices there so we we pick the maximum 12k that we could give to everyone who uses morales and then we're going to have our own hackathons as well we had one in during the summer so go and join our discord to to keep an eye and of course join if global discord and there you can see our channel as well uh any plans to build awesome morales like awesome polygon i i'm not sure what the uh naj i'm not sure what that is um let's see this sounds useful but i'm missing something do you see dab storing some historical contract uh events of chain in morales if so does the that that verify the back end isn't hacked when they query for events so yeah exactly you can specify that this is the contract you want to watch and this is the topic that you want to watch and you get all historical occurrences when it comes to verifying i mean at the end of the day whatever node you ask you don't know if that's correct i mean even if you talk to our pc node how do you know that they have the correct information but the actual node has correct information so as long as you don't run your own node you can never be 100 sure uh when you're using a provider whether it is morales or any other rpc provider so of course you can have some some of your own verification and stuff like that but if you are worried you should i mean number one this is a worry you may have when you are already big like i said if you want to build your own backend and if you're not running your own node you always have to verify you always have to check with many nodes anyway so it's yeah it's difficult to uh to overcome that if you're not running your own node but great question are there any yeah that one we discussed um can we discuss the cost 10 users so korsek if you want to discuss go and join morales io slash mage and write to krashemer so just join our discord and and we will help you there we are all very active there uh thanks for the question um i found morales recently never worked with it but are you cross-chain yeah exactly we're cross-chained uh right now we support binance uh polygon eth and eth we are adding orbit room so we have by the way our casinos for arbitrary but it's not full integration into the server but orbitrum and avalanche coming this week full integration uh so basically the entire ecosystem with eth polygon arbitrary and also we're gonna add zika sync we're gonna add optimism we wanted to add optimism some while ago but it was closed so if they're fully open soon we're going to add them and then of course solana elrond and even non-evm chains but i already discussed this in this so i don't want to repeat so yeah you can go back and watch or you can you can also go to morale's web 3 youtube channel and you can watch the pinned video and you get basically a version of this presentation there corsic thanks for a great session now thanks thanks kartik thanks karzik okay guys thanks a lot thanks a lot thank thanks for this live stream guys was fantastic and thanks for great questions uh from you yeah this has been an incredible session um it's really great to see everyone so uh participatory um thank you ivan for walking us through that a reminder everyone uh if if you want to follow up with him in our discord or in his discord uh by all means continue the conversation i think there's a lot of things that you guys can still discuss but thank you everyone for joining us we will be ending the live stream here unless there's one last question we can get to in a few seconds but i think i think this should be good to go thanks guys thanks luke and looking forward to discuss more in the discord absolutely good luck all right guys we're gonna end it here take care 