foreign [Music] hi everyone I'm Jason and this is sarbis from airstack uh today we're today we're going to tell you how I'll show you how to build applications using airstack how to use the apis um high level first of all Air stack is a single API that enables you to query and combine data across chain cross project in a single query in response we have apis today that blockchain's ethereum polygon every transaction since the Genesis block and new transactions within a few seconds as are finalized as well as very strong in areas such as identity so ens forecaster lens co-ops nfts socials uh and uh so a lot of products are using airstack for identity resolvers for creating recommendation engines for doing all sorts of new types of data wear experiences service is going to show you exactly how to use airstack and what the apis are involved I'm going to show you first the cheat codes really quick um and then Sarah should go into actually the details but if you go to app air stack XYZ you'll see a Marketplace first of queries that other people have run and have shared with the community so after you run a query if you want you can share it so here are popular queries such as recent transfers a die token metallics balance of eight coin a bulky and S query that Starbucks actually ran and the cheat codes I'll show you is so I'm just going to show you how to write queries from scratch that cheat codes is using our AI generator to write the query for you I actually recommend trying it to start because it's a great way to very quickly learn the apis if you look out of the left hand side these are all the apis that airstack offers and I can write a query that because cross chain crossdap and the AI will write it write the query for me so I can say show me all holders of orange Dow this is and we have a Chooser you can select it from about 10 000 different tokens pull-offs nft projects Orange that was on polygon and I can say and their web3 socials and ens and the air stack AI will generate this query for you um and so here you can see it's putting in get token balances of this contract address it's looking on polygon it's getting the first 10 you can increase the number of responses and for each person it's getting the token balance that they have the owners their domains primary domains and their socials and so here you've sent since we see that uh Orange dial this token holder his lens name is Byron sue.lens you can see his ens names and you can see this for the next person next person next person so it's a great way to learn how to use the apis I'll do one other just to show you is you can also do this like in all sorts of directions so I can say for stani.lens show his nfts and their images and so here we're combining we're getting stani.lens as you know obviously is a he's the founder of lens that's an address on lens that's on polygon resolving that to a Xerox address then we're going looking up all of his nfts and also getting images which we've resized so you don't have to go out to ipfs and get them yourself so here is stani's nfts as an example um so let me hand over to sarabesh though and he'll give you an entire tutorial about how to use the apis already sorry yeah it's good yep yep okay so I'll use uh next couple of minutes to go through what's currently possible with airstrike apis and then I'll cover couple of use cases that you can build with the Apes right now so in this diagram you can see we are currently live on ethereum and polygon chain and on the left side we have like most basic building block of any of the blockchain based projects so we have all your tokens and FTS balances and transfers for nfts we have option metadata and G5 images we have a whole vertical on identity like this is where a lot of people are integrating abstract so you can query all the ens domains and their primary domains we have lens and forecaster you can query pop-ups with your stack right now and then on the last side we have sales data coming from nfts like so we have sales from openc blur and durable we also aggregate this sales data on like and if specific and ft level or a connection collection level or Marketplace level and this aggregation runs from different timelines like daily weekly monthly early and lifetime so this slides is this slide is the basic summary of what you can build today with airstrike in this hackathon and these are like couple of use cases that we feel it's very easy to build on airstrike right now this is not an exhaustive list you can add because hashtag is general purpose product so you can add more to it but to go through the first thing is identity resolver so I'll build couple of queries from this use case I think three or four of them uh but uh if you have any 0x address or any ANS you can actually ask about the lens for cluster co-ops nfts so this is an identity resolver similarly you can build groups if you are building like a chat application and you want to figure out what are the groups you should build so you can build groups based on nft holders for the Ops the event they attended together so this is possible I am going to build this recommendation engine today so a simple recommendation engine based on pop-ups so if you have a lens profile and you need to recommend what other lens profile that profile should follow So based on similar events attended I'll try to build a combination engine today definite open balances transfer history token getting is very much possible so you can use token balances API and put a wallet in a token address and check whether the wallet has a token or not uh this new thing that we are looking into how a stack can be used for zika's Association so you can prove what's on chain throat and a stack in this source of turret and then you can generate proof and validate with some other protocol set that's here for it and one more area that we are looking into to build very awesome visualizations on top of our strike so a lot of data on nft sales and ens and pull up so you can actually build a visualization like find me the common wallets who attend Easter anyway and each water low so a lot of those visualizations are possible uh I'll go through the couple of use cases so I'll prepare like the queries that I'm going to build so I'll start with with a simple query uh I want to build it open getting use case uh so I want to build like token balances along with nft images and metadata so I'll go here on the wallet yeah so here I have all the list of the apis but for token getting I want to build with token balance so I'll select the token balance uh I will filter based on a wallet so I will select this as a variable and I will select all the fields that I want as an output so definitely I need amount and because I'm fetching ball balance so I need to query name and symbol and if the balance is of nft then it also makes sense to ask about any images from metadata it might have so I'll select those swings and yeah from the token I should also select address and open ID right so these are all the fields that I'm going to use for the query now let us go to the filters part so we have very complex set of filters that is allowed so you have and or nor in Clause so all the Clause here used in any SQL or any database programming language those kind of filters you can build in abstract apis so I'm going to add filter on owner right now and so my query is complete now I'll add a variable so it sort of completes Okay so list a PS3 note yeah now it loads properly Now quickly build the same query again token address in symbol from the nfts I will select images I will rename my query variable to something more meaningful so I will name it identity and I will put it here it's in the variables then now I should be able to tell me this little field sorry about this yeah just use this one yeah okay we are ready with the query so let's say first I want to build token getting and I want to fetch call balances based on ens name so I just put in unison of italic so that's possible uh you might if you are integrating with lens or lens then you can also put a lens profile here so you can also query based on lens profile you can get the same result uh definitely you can put a wallet address so I'll just select my wallet yeah so that's possible too now let's say You're Building dopen grading so not just owner but you also want to add a filter on token so you will add a filter here and you can just put your token address you see like I have the token so this query can help us help you build the token getting applications I'll go to the next use case so next Tuesday is more about identity so you want to figure out uh holders of moon boards collection and along with you want to know about what are the social profiles and the primary NS of those holders so holders are returned from the token balance so I'll again use the same kind of query but and again the token address is Moon birds for me so I will change to the Moon Birds I don't care about ownerica because I'm looking for all the holders so I will remove that okay now I am interested in social profiles of the owners so in the owners wallet and you can ask any question about the wallet from this wind so you can ask social profiles I'll select the DAP name in the profile name similarly you can select ens ruins we also have a primary domain if you are interested in that so this completes the query we can just run it so it gets it gives you all the holders of moon Birds then it will also give you all the domains and primary domains of those folders let's say some of the interesting data points here okay one more thing you can add ask for 200 records in one go so initially it by default it takes 10 so I will add 200. so you can see you're getting a lot more records you can see right this Moon bird is being held by this lens profile who has this ens and this is also a primary ns4ing so you can resolve a lot of identities uh with this combination um okay now last two queries are more like a recombination engine that I'm trying to win today so the use case is I have a lens profile and I want to know what all event I have attended that's first what are the query and the second part is from one event that I have attended I will figure out what are the other lens profile OS attend the same event so I'll build the first one so the first query is to get the lens profile given the lens profile find the co-ops so the because I am querying on Pops I need to go to the Ops API and my input is a lens profile so that's an identity for me so I will select owner then from the pull-ups I will fetch some details about the pop-up event itself so the description and the name of the event uh yeah so this is complete if you want we can change like this variable names these are not that good but I'll just keep it same right now okay so this is my lens profile and I can also select event ID yeah okay let me just see what happens here let me try everything here yeah so I will ask about the event I'll select some more fields name of the UI I can just run this query so you can see I have attended this events one of those event is 8th Denver 2023 so the event ID is one zero three zero nine three so I'll just remember this one so here the input was a lens profile so I could say this lens profile is attended this event now in order to build the recommendation engine you need to also figure out what other what other lens profile has attended the eighth turnover right so that's my second query foreign so this time again I'm in po-offs API but this time I want to filter based on event ID and the event ID of each done with I will use this event ID that I got got in the past query and I'll put it here now in this case I want the lens profile of the attendees right so I will go to the owner and I will select the socials and I'll ask the app name and the profile name if I put it here I get the lens profile so not all everybody has a lens profile but I can also select like identity and user addresses so it will give me the wallet address with at least yeah so if you can see like this lens profile also attended each tanver so if you're building any application which has a social angle you can actually build a recommendation Engine with this kind of queries uh I can also like add more records to it so you'll see like more data coming so there is also one profile on forecaster who attended the East Denver so combining these two queries I can build a simple recommendation engine uh where I'm finding people based on the same activity on pops right okay let me uh showcase couple of more queries uh I want to showcase this bulk social query once okay so uh we have this wallet API and we have social API so sometimes you have a use case where you want to ask for more than one wallet so you want to look up for 100 such wallets right so here we are using something called in clause in the in Clause you can pass array of addresses in one go and you can select uh like put so in this query I'm putting like I'm finding based on some identity so the identity here is a wallet address so I have 100 wallet addresses and I'm asking for social profiles for those wallets so I'm getting all the results in one query yeah so for so you can ask about like in bulk of 200 uh profiles in one go okay along with this uh if you're building your apps so we currently have two sdks react and python uh I can show quickly showcase how SDK looks like and how you can add this queries to SDK and get the data so this is a python SDK so you need to First install the python SDK and once you have the SDK you need to import necessary files so abstract client is a class that we export and in any of the SDK you will need an API key to integrate so in order to get the API key you will go to the profile page so here I have a profile in the profile you will get your API key you will copy this API again you put it in the SDK and any query that you would want to run you build on the query Builder and you put it here so you'll initialize your query the next thing you'll do is you will create a query object and you'll just execute that query so in this case you can see I have poor Ops query already created here for service.lans and you can see each query response give me two things an error object in a data object so if error is none you will get the data and you can just use it sometimes you are building an application which requires lot of data and on one API cannot give you all the data so you need to use PG Nation so in that case SDK provides to two Boolean Flags in the query response that is next page in previous page so if you have an X page in your query response you can ask for the next page again here this will give you the second page similarly uh if you want to go to the previous page then you can again go to the previous run the previous page method so I built this small utility function where you can just pass a strike SDK client Aquarian variable what this function is doing it's executing the query it's collecting the response then it will keep on doing it till it goes to the last page and as soon as it gets the response it will return it in one go and so yeah so this way like you can actually integrate any of the query into SDK so because the SDK is general purpose you just need to work on the query part and put your variables here and you will just run it and it will give you the response like this okay yeah I think this is it uh these are the use cases I wanted to cover uh so you will be able to so for nfts uh you will be able to query based on okay so the token represents the collection here so you will be able to query based on let me select the token CPI here yeah so you will be able to query based on address name symbol and type okay so if you have car package yeah you can put the address of the corner I can ask it and we have like one more thing that I want to showcase so in the token nfts if you want to query specific nfts of a contract and you want to query based on trades so something which has a background color green right so you can basically go to the attributes and you put like trade type is background color and you put like the value as green right so it will only give you the nfts of that collection who has that background yeah custom properties right from Genesis we only have poverts right now uh perhaps and but for ethereum and polygon we have like all the data from Genesis to the live blocks uh yes we have um uh five two thousand dollar presence um the first three years were our three favorite projects building that you want an airstack there's lots of ideas uh in our notion um and then we have a two thousand dollar prize specifically if you build something that makes use of airstack and xmtp or AI or uh attestation um and xnxp is specific we do a lot with a lot of SMTP projects are building with airstack no we do not uh Blitz we just think it's uh so xmtp is an awesome way to message people with ethereum address and what they've been missing before airstack was a way to resolve say from the Xerox address to an ens or a lens or forecaster Etc and so we've kind of teamed up together to make that possible and so it's um a lot of applications are making use of that uh and so if you build some of the xmtp there's two thousand dollars from Air stack plus another thousand from xmtp available uh and then finally if anyone just wants to build a unique visualization of air stack data so if you see right now the response here is the Json file if you want to build something that is just a unique visualization of the response that's another two thousand dollar uh battery we have as well um and just to show you real quickly an example we built a demo app you can look at on demo.airstock XYZ which is just a front end to I can say put in any um uh lens forecaster ens Setter and it it's taking the airstack apis and give it a visual response rather than the AKA slots of the five balances exactly yeah so if you check out an app called I can show you afterwards um called Converse said get Converse they have a recommendation Engine with built by it's built on top Fair stack where if you click on a button that says who can I message it'll show you everyone that went to the same events that even blow-offs everywhere Who You'd send tokens to or from um from your transfer history with air sac so it's kind of building it's kind of getting past that cold start problem with what three that's showing you people you know already based on on chain data other questions anyone all right if you need any health uh our telegram chat is our team is there 24 7. 