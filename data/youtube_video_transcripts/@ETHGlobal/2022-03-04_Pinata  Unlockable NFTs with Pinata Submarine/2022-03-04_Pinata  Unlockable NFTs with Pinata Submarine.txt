and try to get a sense for what uh what they needed from the nft space and from the just media space as a whole that didn't exist yet and it was very clear that they needed unlockable content these are real quotes from conversations that we had with our customers and from uh creators out there and as you can see there's a there's a very clear pattern of especially new creators to the nft space not understanding that when you put media on ipfs and when you're attaching it to an nft that's public it's accessible to anyone and so people really wanted to have some form of private data in you know marketplaces often have a field for you to have unlockable content and so what these creators would end up doing is they'd take a public remember public dropbox link and put it into the unlockable content field that's really no better than putting a public ipfs link in there so we wanted to to tackle this problem again from the file side since that's our our focus and we wanted to use ipfs we've always been built on top of ipfs the content identifier associated with and with ipfs media is to us the most important part of ipfs of the whole peer-to-peer storage protocol because it verifies a piece of content without any additional work on the power on the the part of the creator or the consumer if i give you a content identifier and you don't have the file i can later send you the file and you can check to see if that file ends up generating the same content identifier accentuated advance so you get that sort of authenticity that proof of authenticity at scale without any additional work so while we're thinking about how to solve these problems for customers how to leverage ipfs within pinata and have private content we decided that what if we just made private ipfs nodes for our customers a reality and so that's what we rolled out in uh i'll talk about this in a second that's what we rolled out in september of last year and those uh those private ipfs nodes were exactly how they found they're just ipfs you get the content identifier the content is stored it's just not exposed to the public network if you dig into how ipfs works it's very easy to not expose content to the public network uh but we wanted to programmatically allow creators uh developers whoever to uh expose that content so they could generate rules on their own and expose that content part of this idea of giving access to content based on uh what creators were doing or what creators had their communities doing came from these nft projects board apiac club is is probably the the most famous they built a game they've built a bunch of other content that they only released to their community and there's a spin-off project called jenkins the valet we've talked with both ford api club and jacobs the valley to really get further insights into building this uh submarine feature that we've built um both of these projects they needed to lock media lock content behind uh some sort of rules right but they didn't want to build that that rule set they didn't want to have to create the logic of storing the content uh generating logic for unlocking the content and then serving that content back they wanted somebody to build that for them so that they could focus on their core offering and so that's exactly what we did when we rolled this out we focused exclusively on developers and uh allowing them to come up with whatever their own rule set would be for um you know unlocking this content we figured it would be nfts and for the most part it really is but what we didn't realize at the time was just how hard this was going to be for uh non-technical creators we did we rolled it out into our web app we uh we added a button in there to upload private content and then to share that private content but probably not surprising to most of you and shouldn't have been surprising to us these creators these non-technical creators wanted to um have these advanced rule sets the same things that developers wanted to do they wanted to say like if somebody owns this particular nft they should be able to unlock a uh a piece of content that i've submarined or if somebody takes this other action they should be able to unlock it well they they couldn't write the code to do that so over the last few months we've been thinking about how we could solve that for non-technical creators and we were fortunate enough to sponsor each denver and also participate at eat denver as part of the hackathon we took that opportunity in the hackathon to create a non-technical version of pinata submarine we called it submarine.me it's a great url for first of all um but it's also a really easy way for non-technical creators to um do exactly what these developers have been able to do ever since we rolled out pinata submarine i want to uh just show you a quick demo of this not because i expect you as you know builders and hackers to use submarine. you are more than welcome to and we'll talk about how you can do it but more to highlight what you can build i'd like to point out that this app is built entirely with the pinata submarine api so i should be able to come here i think you guys can still see my screen so somebody can post in the chat if you can't anymore um but we're going to actually i already have this loaded up here so i'm going to just show you the interface here that we built out pinata submarine allows or i'm sorry submarine.me allows a non-technical creator to come in and just click a button and provide some data about their files that they're going to lock i'll give you the hypothetical scenario here um i own uh jenkins the valet nft so i'm able to actually demonstrate how this will work um but we're going to pretend that the project jacobs the valet they have their roadmap 2.0 they want to only release that to holders of the nft most of these projects they release it publicly of course and that's exactly what jenkins valet did so we're just pretending here but pretend that they wanted to lock that behind ownership of their nft collection uh nfts from within their collection all they would have to do or all a creator would have to do is come and click new submarine new file we don't have these other options available yet we're just kind of feeling out the community to see what other ways people might want to unlock content but we did build out the nft ownership it supports erc 721 right now we will very soon be supporting erc 1155 as well and probably solana um but when they click that they get to a page where they can provide simple metadata information about the file that's being locked so that when you get to the screen to unlock it you know what you're trying to get so if i go and i'm going to select a thumbnail here for the file and we're going to grab the 3d image of jenkins the valet we then have to pick the or provide the smart contract address that the nft collection is under so if i go to open c i can quickly find that if i go find my jenkins the valet ticket and scroll down to the details section i can get the contract address and we'll just go back to the submarine dot me app paste that in here if this was on polygon or on rinkeby uh we could select those networks they're all supported here but this is on mainnet so now i just need to give a name for the content so this is uh jenkins spell right jenkins the valet road map 2.0 and it's jenkins and then we're going to give a description as well so this is the roadmap 2.0 file only for jenkins holders and then of course i need to actually upload the file that is going to be uh submarined it's going to be protected nobody will be able to access it unless they own this particular nft so i'm going to grab that file i'm going to click upload and continue and in just a second here it should store that file generate an ipfs cid which you can see here i could try to load this up on the public ipfs network it would not work because it is private it's not exposed to the broader network but i could give this uh ipfsc id to anybody that's hoping to get the content and when they get that content they can verify that i gave them the right thing sort of like a promise for a future delivery now as a creator all i have to do is click copy share link and we'll open this share link up in another tab here and you can see it pulls in all of that metadata that we added a nice kind of pretty display for anybody that might want to uh to try to unlock this content you you or the creators whoever is doing this can share this content on twitter telegram discord anywhere public without fear of that content being unlocked by mistake uh to show you this i am going to switch to a wallet here metamask wallet that does not have the nft and when i go and i click connect wallet i'll be asked to sign a message message includes the contract address includes a unique identifier generated by the server when i sign this i don't own the nft i can't get the file i'm rejected but then if i switch back to the wallet that does have the nft and i do the same thing you'll see that we verify that the nft is owned we fetch the content and we serve it back so this is the the jenkins the valley road map um again i show you all this not necessarily because you will use this as part of a hackathon or part of projects going forward but just as inspiration of what you can build with the uh pinata submarine api uh let's see so let me jump back to the presentation and we're going to try to make this big again there we go and i jumped ahead oh actually so that is uh that is the end so what i want to do we have a couple of minutes here to uh talk about pinata's philosophy on nfts if uh if you have questions put them in the chat i'm happy to answer those i'm just going to quickly cover um before we wrap up here what how like kind of how we think about what an nft is we've written about this um it's not just the token right we don't think it's a thing that lives on the blockchain we don't think that's the only part of it at least that token is actually the second layer in our opinion um the first layer is a relationship that relationship is creator to owner uh owner to new owner uh multiple owners in the case of fractional nfts uh but then you have the token of course and that's like the uh the way we think about this is the token and the blockchain is this automation engine that allows you to exchange transfer um ownership without having to build the infrastructure yourself it's really powerful and i'm sure i'm preaching to the choir here the next layer is the metadata which of course points to uh the file itself it points to a bunch of other information attributes um custom information in there that many projects may not take or may not leverage and then the file a a file tied to an nft can be literally anything um we've seen full full web apps we've seen games we've seen videos of course audio files people are getting very creative with the media that they associate with nfts but the last layer is the one that we're not seeing used uh a lot yet but people should the licensing layer should be built in whether that's in the metadata it's like a pointer from the metadata the licensing layer is very important especially as larger companies come into the nft space imagine netflix coming into the nft space and saying you get uh your netflix subscription as an nft of course they're not going to just let you do whatever you want with that they're going to have a licensing layer same with warner music group or any any big company they're going to have some sort of licensing if they can put that license licensing in as part of the nft it's just as transferable it's just as easy to fetch and it's just as scalable honestly as the transferring mechanism of the tokens themselves so this is uh just a high level overview of how we think about nfts um i'm gonna check the chat here make sure there's no question still um but there's also a interesting idea that i wanna highlight before we wrap up here and it's this permanent versus preservation when we're talking about nfts we often hear about um well is it permanent and my answer to that is always if you take a step back and you ask uh is the mona lisa actually permanent if you think about it the answer of course is that it is not permanent uh the reason the mona lisa still exists today is because people cared enough to preserve it preservation and permanence are two different things this is why we love ipfs so much by the way ipfs is not a blockchain it works very well with blockchains and blockchains do a lot of really good things that need to be permanent ipfs does not need to be permanent um instead ipfs allows for very engaged communities engaged people to show how much they care about content by making sure it continues to exist with ipfs to to make sure something continues to exist is as simple as making sure it's pinned on at least one ipfs storage node so that the rest of the world can continue accessing it we saw this in real life with an nft marketplace that the founder just shut it down um was slowly taking things offline artists were very worried that they were going to lose all of their content but fortunately the content was on ipfs so individual artists individual buyers they were able to back that content up themselves and then a group of people came together and reached out to pinata and asked well can you back up everything and the answer of course was yes it's public it's ipfs all we needed was the cids and because of the power of ipfs the power of that open data we were able to uh duplicate and migrate over a million files and keep those alive and that is that's really powerful to me in the way that we think about media and the way that we think about keeping media alive that was a community that came together and decided that they wanted to preserve something that they really cared about um i like to end on that idea because there's so much noise if you go on twitter about permanence and media and nfts that sometimes it gets conflated with preservation so my ask to you as you go out and hack is try not to confuse permanence and preservation people will preserve things that they care about and with that let's see we've got questions in here uh can we get some more detail about the submarine api absolutely so i was going to i don't know if this is the best place to put it but i'll drop it in the chat right now um the submarine api is actually on a different url than uh or a different yeah different url than our main api it's going to eventually be merged back down to the regular api.pinata.cloud um but right now it's at the manage dot mypinata.cloud forward slash api forward slash v1 and the docs are in the chat um so let's see what methods are available all the methods are listed out there with the api you can uh store your your content you just have to say pin to ipfs is false that's that's how you're indicating that it is submarined and not in the public network um you can list your content one of the cool things that we did enable with um i'll try to scroll down to it since you guys can see here one of the cool things that we enabled in the submarine side of the api and the ipfs nodes that's not quite as easy on the public nodes but in retrospect we wish we had done this and we may in the future is you can list the contents of a folder very easily for those of you that played around with ipfs in the past listing the contents of a folder often means going directly to the node itself the ipfs node running a cli command on that node um and then waiting for depending on how big the folder is for all of those cids within the folder to generate and come back to you we made this much easier with pinata submarine so if you do happen to submarine a folder it's uh very easy to list all of the files in there um if there's another i guess uh there's also the discord so i'll try to find a good place in the discord to put these docs i'll put the regular pinata docs both in the chat here docs.pinata.cloud and i'll put it in the discord or anywhere else that that is useful for everyone um did i miss any questions [Music] looks like that's it uh if anyone has any last-minute questions that's it for me uh i'm very excited to see what everyone builds and and uh both now and in the future we've seen a lot of great projects come from hackathons and early just tinkering that turned into really great things so i guess with that thank you guys very much for taking the time to listen to me for dealing with my dog barking in the background while i try to present for all of that so i really appreciate it that's a killer presentation thank you justin for for running us through all of that and thanks to everybody who spent some time this afternoon with us today um really uh really appreciate that and i highly recommend linking up with him in discord uh following this to to ask the questions that you might not have now but we'll pop up later they're a great resource and reach out to the mentors as well to get a little bit more insight as you're building out your projects but we will be ending the room here thanks again justin and the rest of the crew looking forward to seeing you guys soon 