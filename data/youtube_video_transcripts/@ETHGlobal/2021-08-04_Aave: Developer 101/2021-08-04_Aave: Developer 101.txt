that's right here i'll give you a moment to intro what you're where you're going to talk about but i'm really excited to see how this goes hi um i'm shivani i'm a developer at hawaii and we'll be going through some basics of our development which will be helpful for anyone who's looking to integrate away in their contracts or want to interact via their apps um here we go so away is a liquidity protocol that allows depositors to put their digital assets to use and make some earn some interest on it based on the market um conditions and borrowers to get um instant digital loans okay borrowers don't have to wait for them to be matched or anything they just can um have either enough credit uh delegated to them or have some collateral deposited in the our liquidity pools and they can get instantaneous loans so apart from these two the other main actors in our protocol are the price feed oracles um we use chain link oracles uh with av fallback oracles to provide the up-to-date market prices then we have collateral liquidators since health of our pool depends on the health of underlying depositions or the health factor of the protocol so liquidators help by closing the bad debt positions and in doing so they can earn liquidation bonus um and so it's a win-win situation and then lastly our integration and integrated applications the applications built on top of how they are that are using it um flashlight or in some way as of last i checked um the total value locked in our protocol is about 15.4 billion and it's going up as we speak probably um this total value uh in the rv system comes from ave viva market ave v2 market which was launched earlier this year um amm market which allows people to put their liquidity provider tokens from unit swap or balancer as assets um then our market on polygon chain and then the safety module we'll talk about this shortly so the main protocol features are the a tokens these are interest accruing tokens they are one to one with the underlying asset um then we have borrow um in our way protocol there is option to take both stable versus variable bar rate and someone who wants to switch between rates you can do that any time without having to clear the old dead position and by [Music] to share their credit limit with other users and flash loans are um the instantaneous loans which you can get without any collateral with just a little caveat that you have to pay them back in the same transaction but in that transaction you can do anything with the funds and lastly we have governance um our governance v2 is what allows this protocol to be decentralized the entire protocol upgrades or the upgrades to even the protocol itself or adding of new assets all is done via our governance so what's new in v2 batch flash loans um flash phones were provided in previous version of rv2 but in now you can take batch loans which that is like multiple assets in the single flash loan transaction or single call then there is tokenized debt position these are non-transferable tokens uh credit delegations is now native to the protocol and our governance v2 uh ave token has governance delegation capabilities for about uh proposaling and voting in the proposal um in the protocol and obviously we have optimized the gas usage the lending tool um in the market in david protocol is only for interacting with erc20 you can only deposit erc 20s or borrow er60s there but if you wanna use native eath or uh native matic in case of polygon then you can use our beth gateway support uh all a tokens are also eip2612 compatible that is they have a permit function so this enables a gas less transaction feature or meta transaction feature so how does this deposit our lending in our liquidity pool works um in protocol tokenizes all the debt to uh all the deposits with eight tokens so if you deposit like 100 thai then you receive 100 a die and the user who's holding these a tokens on interest every second depending on the risk parameters and borrowing demand um there's also like if if you transfer these a tokens then the person in your underlying collateral also gets transferred so that's a little trick um thing to be careful of don't transfer if transferring your tokens would be correct and anytime you can withdraw your collateral by just burning these a tokens so programmatically this is how it looks you just need the address of the asset the amount for which uh amount that you are depositing uh message you can deposit on behalf of someone or for yourself the message sender or whoever the on behalf of is will be the one who will receive a tokens and will be the one um who can withdraw the collateral before depositing you'll have to allow lending pool for the amount that you're trying to deposit and then you can deposit this referral code is for third-party integrations um when you deposit uh emit function is oh sorry a deposit an event is emitted with this referral code which third party can use for their promotional or whatever integration they use for but if it is you're not using for anything you can just leave it zero so withdrawal is pretty straightforward you don't need any approvals for it and you just need to mention which underlying asset you're withdrawing and the holder of a tokens can withdraw lending pool when you call lending profit raw it lendingpool will just withdraw it from the message.sender account pull a tokens from message.senders account and they will receive the uh and anyone who's mentioned in this two can receive so you a contract can withdraw it to someone else if they want to um in case you want to withdraw the max you can just specify minus one or you can that is u and max or you can specify specific um the special like whatever amount you want borrow so if you have deposited assets you can borrow any supported asset and select between variable or stable bar rate borrow position can be backed by single or multiple assets um when you deposit an away by default if that reserve that asset can be used as collateral it will be enabled but if you want to disable you can separately like disable assets so when you take a loan it is automatically backed by all the assets for which borrow is enabled then you can pay whenever you want uh using the same asset you borrowed or you can also pay with your collateral to cover the debt position so this is in syndrome as we said so when you borrow at away there is health factor which is basically a proportion of your collateral versus the value of the borrowed acid anytime your health factor is less than one anyone can liquidate their position which means they can basically claim your collateral undiscounted rate to clear off the bad debt until that the health factor of that account comes back to equal to one or um more than one the suggested health factor for volatile assets would be about two or more than two this is how borrow looks um on the code side you need the asset you this is the address of that that you're borrowing that's the underlying asset the amount uh interest rate mode can be one first table are two for variable stable that would have just stable interest rate and variable is changing based on market utilization rate referral code can again be left a zero or just um this will be an event that will be emitted um and this on behalf of is interesting so the uh this on behalf could be someone who has credited your their uh credit line like they'll share their credit line either with the person who's sending this transaction or it could be successful uh then then you should have like enough collateral deposited or otherwise the creditor should have enough credit delegated to you we'll talk about the credit identification in more detail very shocking so uh swapping as i said you don't need to clear your debt positions you can just swap your interest rate mode one two whatever repayment um repayment happens directly in the lending pool itself um you need to have the borrowed asset or the asset you're repaying you can pay on behalf of someone else too so anyone can clear the debt position so even if it is like a creditor has dedicated their tread line to someone else they can still uh irrespective of borrowers to be paying it on time or not they can do it themselves too too if the health factor is low or they could have like some offline arrangement um yeah so while repayment uh you need to approve lending pool for the amount you're repaying and again you have to specify the interest rate mode um so if you're clearing the table that it has to be one else two so finally credited location this is pretty cool i like it so credit delegation allows approved third-party entities or contracts to power assets using your collateral and repayment mechanism can be enforced on-chain or off-chain so it could be something um how i think deep by savior was doing you have you can have a wall that opens a depth position and then have some sort of other some other contract with which it enforces um some agreement with their borrowers but they can have like huge pool of um asset with bunch of like other users delegated some credit limit based on like totally um external way so this way borrowers who are taking loans from our protocol does not need to have assets deposited in the protocol how this works um a creditor can either delegate the stable debt or a variable debt so you have to get the address of the stable that token or variable that token whichever you are um approving for and for you get the address of the borrower uh specify the amount that you want to delegate so that would be the max amount that can that a borrower can get from liquidity a protocol a liquidity pool and just on that token approved delegation amount and borrower address um once the credit has been delegated that borrower can just simply go um directly from the liquidity pool um borrow and here the on behalf of address would be same as who in this previous slide approved this token or who has yeah who approved these limits um as a salary pay can be done by anyone so in this case there could be um an off-chain agreement or a separate on-chain contract with which this creditor enforces repayment but um they can like manage the large repayments and whatever it's single they're the vault if if it is like a contract big contract that is doing this so the wall can do the repayments and manage the assets in our protocol while enforcing repayments from an external contract with its actual borrowers so that's pretty cool um next is flashlight so these are special loans they are uncollateralized they must be paid at the end of the same transaction um if you don't repay yeah then the entire transaction just rewards it's like nothing happened um can be used by arbitrary code so once you get those um borrowed funds you can run whatever and you can do whatever with those funds no obligations just the only thing is you have to repay at the end of the transaction so there is a platform guide i'll share more links at the end of presentation but here so some use cases of flashlights are migrating liquidity between protocols so you don't have to um hold those ones you can just decentralize exchange arbitrage that's pretty interesting one when or i would suggest simple one the basic one um where you have two dexes with price differences and to make actual like profit out of it you can just like flash loan enough entire liquidity of the pool in the transaction sell it on the other decks and then finally repay the debt and the profit is all yours um liquidations without capitals as we said when health factor in our way protocol falls below one you can liquidate or even like and make it out collateralized debt positions um if uh ethereum value falls actually no not there no no anyway yeah so in liquidations um when health factors fall below one you need to repay the debt um while clearing that debt position before you can get the discounted collateral so you can do that thing with flash loans without needing that upfront capital to repay the debt or clear that bad debt positions then swap a tokens or repaid it using your collateral so this is how internally uh ijs library does how you can if you don't have enough of the borrowed asset to clear your debt position you can use your 8 open slash loan to flash loan and then sold on decks to repay your debt free or collateral so those are our cool things and many more this is how it looks like um for flashlights you the the liquidator or the user would deploy their own contract with a function which which will be the one yeah calling this flashed loan on lending pool you specify the receiver address which will be the address of this contract or whichever contract is the flash and receiver base so basically right now over here it would be um this contract and then the assets that you want to borrow since um v2 allows batch flashlines so you can specify multiple assets uh amounts this is what like corresponding to the assets um so asset zero asset amount zero like that would be the amount borrowed for that asset modes for each for each asset you have to specify mode so in v2 flash zones you have the option to have no debt position at the end of the platform that's basically how most factions work but in case you want to open a dead position at the end of the flat loan call you can specify mode as one and instead of the amount being repaid if you have enough collateral or that position would be opened for this this receiver address um and then right yeah it could be stable or variable uh you have to specify on behalf of um that's the this address um which actually that's who that will be the address of for on behalf of who's whom the debt position will be open uh these are the parents that will be passed to the execute operation um execute from operation this is we'll talk in a bit uh these are the arbitrary patterns you need to execute you need for the execution of your flashlight code so you can pass that and this referral code is same as what we had in deposit and morals so now this is where the firearms actually get used so this execute operation is the method which is going to be called by lending pool so so once you call the flash loan it goes the call goes to the linux pool it does its check uh the receiver address is right assets and amounts lengths are valid modes are correct and all those things and there are then it sends those requested amount and call this execute operation so by the time the control or execution returns to this functions or comes to this function uh you already have the requested assets here you can do arbitrary logic whatever like if let's say you want to liquid use flashlights for liquidation you can use do the liquidation call here do the swap of the collateral to get back the borrowed acid and all you have to do is just at the end uh approve lending pool for the amount you owe this amount you owe is the amount you borrowed plus the premium so currently i think it's point nine percent point zero nine percent fee on uh on flash notes so yeah it would be premium plus the asset and that's it you have to make sure or the your contract has enough funds and lending pool itself will itself like withdraw those funds or pull those funds from your contract if there aren't enough funds or you have not given enough approval the entire flash loan would fail so this is like important governance so now coming to what makes this whole protocol decentralized so are we and um take our way token holders have power to vote in the pro for on call and propose um in the protocol so um and these government this government allows protocol upside updates new asset listings changing of risk parameters and upgrades to the governance contract itself and yeah so voting and proposing both of these powers can be delegated and you can choose to delegate one of the power or both this is how it works um a proposer with enough proposition power submits the proposal to the governance contract it goes into the short time walk or long term block and these short term lock proposals are for upgrades to the protocol or adding new assets or ecosystem reserve related stuff um and if you want to update governance module itself then it goes through a long time log after the lock expires and vote on the proposals are submitted through the government's contract um based on the governance strategy it's skewed and then executed so to summarize uh we have in governance and off chain process where you submission our request to community um and then aips our improvement proposals uh then you create an on-chain proposal uh for this you need enough power and you also need to have enough proposition power throughout the voting boarding happens through certain um the voting period is specified during the proposal so through through the voting period uh wow yeah proposal voting happened through the to the through the period like based on whether it's short time lock or long time lock then it's cute and finally executed so here's a real cool um precedent set by the curve dial where they wanted to add curve token [Music] to our protocol v2 and they went ahead and added this nice arc on our governance forums the links were shared here and i'll share all these links later for but yeah so they submitted the arc on governance forum for communities recommendation and discussion start the discussion around risk analysis and reviewing the stuff then they went on twitter asking people to delegate proposal power for the account held by curve dao yeah then they submitted the this is how the governance delegation can happen you just you can delegate um so there is governance power associated with away token as well as take dave's token so you can do and this could be our token or you can do the same for stakeholder insert the address of the person the user the account um contract who you want to delegate the voting slash or proposing power and then delegate so over here there this is delegating both the power but you can do something like delicate by type um i'll share a link to our guides where all these code snippets are also available then submitting vote um that's done on our governance to contract you need to know the id of the proposal you want to vote for and anyone who has voting powers can vote like there's no minimum threshold when it comes to vote uh support would be false or true based on that support um okay so next is taking uh this is really cool so our way markets are covered in case of hacks by safety modules um this is obviously subject to the governance um whether they agree or like how do they see this situation as so any anyway anyone can deposit our way or are we eat balancer pool tokens into our safety module [Music] and the good thing is like by depositing in the safety modules one can earn rewards in terms of away and these takers will be slashed in case of the disaster like up to 30 percent of the uh of the reserve can be used for covering these unforeseeable circumstances but um that happens really and there's also like incentive to earn rewards so it balances out house taking work um you can use your away token address amount to stake approve lending lending pool uh for the amount you want us take and [Music] then on stake token contract you just call stake and amount to stake you will receive excuse me um rewards in the form of state away which you can claim after a certain period uh to release your stake away there's a cooldown so it's not instantaneous that you can withdraw um you have to initiate a cooldown period for your state which opens and at the end of that cooldown period you can redeem uh if you forget to do it at the end of the program period then you'll have to start the cooldown period again finally we have our way in avengers them um that includes um curf5 which um allows aida deposits and into the curved liquidity pool the fire saver one of the first apps with flush flashlight for automations using flash clone for the automations and pretty cool um full combo that was they got pretty nice flash known weave so platforms quickly used by non-developers too um beyond finance they have a link waltz away cochi so this is pretty cool they have nfts but underlying these nfts there are a bunch of a tokens which are earning interest so totally unrelated project to our way but we know them through hackathons and pretty cool there are a lot more integrations that i don't i can't really talk about but we are very glad to have them as part of our avengers family here all the contracts are open sourced and you can find them on github and you can also import using from the npm package um protocol v2 is deployed on cointestnet and on so on mumbai testnet we do use different erc20 tokens for cohens for easing mint so refer the dots on how to get those we also have client library of a protocol js for easy data formatting and integration and you can find more about it in docs um drop into our discard if dev channel if you have any question uh here's the documentation links and i'll also probably share links and discard channel um each little channel and now we can have questions thank you for that that's an incredible presentation um if anyone has any questions you know feel free to come off mute i know a few of you have put some questions in the chat already um which i'm not sure if we've gotten to but i guess start from the top um first question asks what sort of collateral collateral is to be submitted by borrowers sorry so there are 29 27 26 collaterals that are um allowed on our main market but each market has um different reserve tools that are allowed and these are erc20 tokens that makes sense if anyone wants to come off commute feel free to raise your hand and i'll bring you up that one already hey uh i was wondering if we can create custom landing pools for uh sticking for example uh landing pools for staking yeah like um let's say if i i want a set of people to be able to stay on a specific pool that would be maybe owned by or dab or something like that right and so you're saying you have a separate pool which on in which people like add money to and that you use that to stake on maybe rv protocol or somewhere else yeah and yeah that seems interesting and you can have a separate mechanism how you distribute the rewards to your um users and have them okay yeah and uh can i also stake on behalf someone so you were talking about um it was another feature where we could do on behalf of but i was wondering for sticking if we also have this kind of parameter no says taking is just use weight you can't take on the half off but then only there that like so so there's a thing like all the rewards that will be earned will be cleaned by only that user so if you can okay i will do some more research uh yeah thank you it was a great uh great presentation yeah i i have a question um so when you deposit you get the a tokens back and um when you gain interest the a tokens uh in your wallet stay the same right so is there a function to uh check the profit of your underlying uh so when you deposit your a token balance starts increasing like every second if you irrespec like you don't have to do any transaction um but your a token balance will start increasing that's because um on underlying like every time someone deposits or pools liquidity in the exchanges the pool's income changes and that's how we are calculating the user's balance so there's no distribution function that's something like shows people offer yeah you'll get your updated balance if you want to just get like not the base scale balance you can you can get like the scale balance of the user too but balance off will give you the updated balance which includes increase plus principal yeah i think so uh so yeah i've never noticed that i have plenty of a tokens in my wallet but i've never noticed them going up i guess yeah i think we have two questions in the chat um feel free to feel free to post your questions in the chat if you're more comfortable doing so and we'll get to them in the order that they they appear we have a few people joining us right now uh if you're just joining us right now we are taking questions um so the first question i'm new to d5 and i have a question here i can swap one token with another or borrow staking my token in both conditions i need initial capital then what advantage user gets on borrowing rather than swapping can you give an example condition where borrowing seems very suitable than swapping i guess well in case of borrowing you don't really have to swap you deposit your tokens which are uh available to withdraw plus um since these are like collateralized loans um when you deposit you'll be earning uh interest on those deposited assets plus they're something i actually forgot to talk in the presentation there's lots of liquidity mining incentives that are running right now so you'll be earning away or matic on in case you're doing it on polygon so yeah you you'll be earning liquidity mining incentive on both your borrowed assets as well as deposited assets plus you'll be earning interest in uh on your deposited assets so uh your interest and borrow is like kind of reduced and whenever you want to just finally repay you can get your collateral back even if your collateral just like let's say if it was a volatile asset meant up in price so you can get it back so you don't didn't really swap them and that that's where like it ends up being sometimes profitable to get collateralized dead positions rather than swapping them does that answer the question i think so um i appreciate the explanation there uh one more question from the chat i'm curious about the credit delegation function how in a smart contract can you enforce the delegate to repay the delegate tour wait okay can you say again i'm i'm sorry um in uh in a smart contract how can you enforce that the person being delegated to can repay the one delegating to them all right so in this mark you can have some um like totally different mechanism on how you like you could have one two one collateralization ratio and instead of how we have over collateralized loans on our protocol v2 or you could have some sort of nft uh which is held as a collateral and if the delegate he didn't pay the that nft which could be very valuable can be captured by the delegator so those could be the mechanisms you have or in your externally for repayment arrangements whereas the delegator uh can be using this credit delegation feature from the protocol so basically a delegate can get in that case nft back loans too so that would be like on top of the main protocol that makes sense um one more from the chat how can i use object for a smart contract that gets into agreement with another smart contract you might be raising that wrong if the person who is asking that wants to hop on real quick hop off me to to ask the question go for it are they for a smart contract that i don't know what that means that get into agreement with another smart contract um i'm not sure what you're talking about maybe you can like um message me on discord and we can discuss like what you exactly yeah but it's a good option um to mention that uh if we don't get to any of your questions today um feel free to post them at discord and continue the conversation there it's an excellent place to continually communicate with other during the hackathon a little more from the chat are the matic rewards mapped to the address holding the a tokens and is there a function to calculate the accrued matic yes so um matic rewards are for atocon holders or and also for the borrower so yes they will be mapped to the ato controllers once you transfer your a tokens your previous rewards won't get transferred but new rewards would start accruing on the for the new address holder um regarding is there a function to calculate we have this guide and also our js can be used for the calculations and formatting so i'll share the links and you can check the developer talks awesome does anyone anyone have any further questions feel free to uh come off me real quick and ask or throw them in a chat and i will ask for you how long are the matic rewards going to last ah that's something i don't know yes so right now you can see there is some um date emission end date and based on that that would but i don't know if they would decide to like um increase the reward this liquidity incentive like that's not in my control these awesome if anyone's got any uh last questions i think we'll we'll wrap up here uh i think giovanni for an incredible presentation and um again feel free to connecting discord it's an excellent place to continue the conversation ask any questions that might come up after the presentation that you might have while building without a tech um i think at this point we will uh be closing this stream thank you to everyone who attended and again thank you giovanni for presenting 