come a quick intro on a second but i think we're gonna let people file in for uh a minute or two give them a fair chance to view the content i know i've seen a few of you at the uh brainstorming sessions already so thanks for coming back and thanks for participating there will be another one uh at 4 30 today that is eastern time just so you're aware cool i think we are ready to go i just got the okay um if you're ready julian i think we should we should get started thank you everyone who is joining us thanks again and thank you specifically to julian for gracing us with his presence really excited to hear what he has uh unlocking uh using ethers with unlock um julian i'll let you introduce yourself a little bit better than i ever could of course take it away thanks well thank you very much for having me luke thanks for uh organizing this uh all of these double teams we're very excited to be back uh sponsoring and uh seeing what uh what you all in the building will unlock so we'll start with a quick introduction about unlock and then we'll move into a more specific more actionable thing with ethers uh unlock at a high level is a simple protocol for memberships that uses nfts to represent these memberships it is the idea that every creator on the web should be able to have their own little membership basically people already paying access or sorry paying to access their content their work their communities their software uh in any way uh that would make sense uh in a permissionless decentralized way so not using any of the uh existing infrastructure um unlock has been around for about three years and we've built a bunch of cool stuff uh but we definitely look forward to seeing more cool stuff uh maybe a as a matter of intro on my blog post i'm sorry on my blog you know i'll post the list the link in the chat i don't know if that's uh that's kosher but uh and you guys don't need to buy the membership but on my blog i've added a little membership and only my members can read my stories and what i did which i think is pretty unique uh because creating a paywall is not that different but quick pretty unique is like i'm actually bringing all of my blog members who are people that have an nft on chain it's using the x i chain to my video call so i don't if you see at the bottom of my screen here it's my screen my camera you see a little bar with a bunch of icons uh if anyone can give me a thumbs up if you can see that just to confirm that it's visible um so this little bar of people here are just by blog's members so that's to give you an example of of what can be done very easily with with unlocked is again selling nfcs that represent memberships and then bring these memberships to any kind of application and here i'm bringing them to a virtual webcam application that allows me to kind of overlay uh their faces uh as i chat here so get a little bit of a gimmick but that's uh that's pretty cool uh i hope this makes sense so unlock as i said program for membership when creator deploys their lock and we'll do that in a couple seconds uh people can then purchase a membership like mint a membership in the form of an nfc uh that matches this we're deploying on mainnet obviously even though that's pretty expensive these days so i would necessarily go there uh but also on polygon x dye binance chain as of earlier this week uh by the end the hackathon will be on some other uh l2s such as optimism uh it's gonna have a little nugget that i give you here because it's not public yet but we'll be there uh and as i said would you play on these networks um we work with any wallet uh out there metamask to get started but i mean to start but uh anything that supports wallet connect coinbase wallets as well we have a bunch of apis that a lot that allow people to do certain things on top of the core protocols such as for example sell memberships with credit cards so it's the only platform that allows people to purchase an empty required card in a safe way because you might imagine that people could run away with the funds i'm more than happy to explain how that works in detail on the chat we have also a pretty interesting support for metadata so ways to customize how each nft looks like but also more metadata that can be collected as part of the nft so that for example you some creator might ask their members email addresses we support that natively it's actually pretty easy to do uh and i'm more than happy to point you in the docs on how to do that uh with that i think that's pretty much it for the high level intro i think next step for me is to show to share my screen and show you uh a little bit of how to use unlock so i'm gonna just gonna share my screen uh and you see here that i was earlier on the on the channel or maybe actually before i start a couple places where you can find some help obviously um docs.unlock.protocol.com we have a bunch of docs specifically the developer section that explains uh what is the high level architecture a bunch of things about the smart contract unlock js which is javascript library that we wrote the subgraphs we are using the graph and have a bunch of sub-graphs as well as couple applications the paywall which is the thing that allows you to embed on different applications on different websites sorry locksmith which is the back end i mean all these explains you don't necessarily have to follow and then maybe uh one interesting portion uh and actually we'll go uh deeper into that specific tutorial but like a bunch of ways that you can use unlocking to existing application uh on the front end to lock access to media stuff uh like i did on my blog specifically or basically to create an express js application that requires users to have a membership before they can access some of the routes and that the uh the express application supports um there is also a governance section that you're more than welcome to look at uh we are all on github everything's open source and none of the code that we wrote is uh is not available for you all to inspect and see uh and we have a discord uh even though the discord is a good place to ask for feedback or sql but we also have a discord uh specific to unlock that you're more than welcome to join all right let's move on to uh actually deploying a lock uh as i said earlier we're deploying on multiple networks so actually wait to go there unlock dash you know what let's do this uh nope not the right um unlocked protocol dot com [Music] uh you would go there and then you click on app and that brings you to our dashboard and the dashboard is what i'm seeing here let me actually give you guys that bar the report is what i'm seeing here as well uh that first ask you to connect i'm just going to connect with my in browser well as i said again you support what kind of conveys um and i'm connected here you can see that i already can switch between multiple networks the one that are currently supported uh rikubi is a good one for tests uh and we'll just uh use that in a second so by default yours is gonna be empty i have a lot of locks which are the smart contract that was in membership deployed already um but yours will be empty to get started and then you can just easily deploy your first lock so let's do the web3 jam membership here so we'll just give it a name um sorry uh the duration of each membership so here we'll pick uh i think it's 12 days if i'm correct the academy duration it's been 12 um you can be anything between it's actually in seconds the ui doesn't show this but uh between one second and a million years and that's that's interesting and useful uh for your application then the key quantity is the number of members that you want to have so you can create artificial car city scarcity to say hey i want at best to exist 10 members 10 nfts of that kind or any kind of number between the game zero actually would make sense and explain why later to an unlimited number so just unlimited here and the price uh what's interesting about unlock is like we support any erc20 so you could price your membership in obviously ether or the native currency on the chain that you're on so if it's on polygon and pneumatic if it's next it would be xdi but you can also use any erc20 on that specific chain so you could do die on mainnet you could do die on polygon you could do ugt which is our own governance token on any chain that supports it and that really lends sorry yields really interesting applications around combining say social tokens with memberships you can say hey if i've got my own social money i can charge people in that social money for accessing to my accessing my content um and what i'm going to do next is obviously uh hit submit which is something pretty perfect probably for me with uh metamask pops up and say hey you want to send a create log transaction pay a little bit of gas here i'm just going to hit confirm and then the next step is to wait for that transaction to go through uh i usually click on the mask ui for that uh to go inspect this we'll wait a couple seconds usually it's not that very slow on the ring to be but let's uh let's give it a couple seconds uh what's happening here as you before you understand is like a new smart product is being deployed uh what's interesting about this is like this smart contract is going to be fully owned by you the person who deployed it so in this this one by me and unlock inc or me or anybody else doesn't have any right on that contract it is really your contract that's actually very different from a lot of nfc platforms where in practice you deploy their contract or not just their code they still have kind of administrative access uh to the smart contract which is you know not as must be as decentralized as i think uh things should be at least in this ecosystem uh looks like it's a bit slow okay it was my just had to refresh i was in my 32 seconds ago and again um nothing too fancy here you can inspect uh the actual transaction that i sent as i said earlier the duration um i think it took 11 days that's in seconds token address is the erc20 address the key price is the amount of money that people have to pay number of keys is i picked unlimited this is literally uh max you int so it's the largest number you can do and the name is the web3 jam membership let's go inspect uh the contract um all of our contracts are verified on all of the chains uh so here oh actually wait did i do oh yes i clicked on the contract now the contract was deployed the contract that was used to deploy it we use a factory pattern uh but you can actually inspect the look at the contract here by clicking on this thing this is an event a new lock and you see that the contract obviously has not seen any transactions yet uh but you can inspect the code uh you can access the api which i assume some of you at least understand or is it at the bottom there's more and more stuff in here uh avi that you can use and we'll use that to import ethers in a couple of minutes uh i need to get faster because time is running out uh you can obviously interact with the smart contract using etherscan and i'm sure all of you are familiar with this so let's uh let's go to the next step um we provide a little uh demo which is a way to kind of sell or try to see what selling a membership is so this is a fake website similar to what you can find on any news or media sites and i'm just going to click join us which is the way to become a member to that site it's on the wrinkly network it's building all of the information the web 3g membership by the way this little ui is completely optional you can build anything i mean everything without it or you can use it and customize it in ways that would make sense i'm just going to click here because i want to purchase this and select micro toilet okay when i'm asked here um i'm being prompted to pay basically 0.01 each which is the price that we decided it is valid for 12 days i click here to pay with my wallet my wallet pops up say hey you want to pay for that amount i'm going to say yes and then immediately we do this thing called optimistic unlocking where we just look at the transaction and assess how likely to go through um we unlock the content so i can close this and i can read the rest of the article if we go back to uh if we go back to our friends here at etherscan we'll have to wait for a couple seconds to get the transaction to be mined and appear yeah that has been mine so interesting i guess uh it's been mine but uh this thing doesn't show it let's wait a couple more seconds i assume it's just uh a caching yeah meteor scan is not indexed yes now it's indexed uh and so we'll look uh here yes we'll see that the transaction has been sent 20 and 28 seconds ago uh let's go quickly through what happened here uh me um this is my address sent to the contract uh purchase transaction so it's called purchase um there's a bunch of parameters that are there we will discuss this but one of them is the value that i've sent to the lock to purchase the membership another one is the recipient and you'll see that it's actually my address it's because i can purchase a membership on behalf of another address here are purchased on my behalf who's going to purchase an address for myself we also have a referrer address which is also said to be me which is useful here um because uh unlock as i said earlier has its own governance token it's on governor's mechanism and basically governance token are assigned to the users of the protocol so um that's a way to kind of share if you use unlock you should become a stakeholder uh and should have a table uh at the governance table and sorry a space in the governance table and so that's what's happening here uh so let's now look at the tokens basically some udt the governance circuit was minted and assigned to the purchaser here another bunch of ddt was uh minted and assigned to the portable maintainers uh which is this address for now uh and then a token another token was transferred this is an nft uh you can see here ese 721 which is entity number one for the web free gem membership uh was sent and it was mined out of zero zero zero to my address so that's what we have uh i know i have just 15 minutes left to show you um to show you actually one final thing if i refresh this page you'll see that yes there is one membership still uh in the block has received the point zero ones you wanna eat which means that there's money on it and i can withdraw that money uh because i'm the beneficiary of that log there's a couple more things but i don't want to go in details too quickly uh you'll see that we have a bunch of integration that were built by other people doing hackathons and others in wordpress in discord which is a sort i mean using the bot in cloudflare so you can re-lock gate lock any website in the world webflow discourse um firebase so you can build kind of pretty um that's the right way pretty um rich application using google firebase uh and allow only members to access different features we have also a couple tutorials uh to uh integrate this to create tickets to uh collect memberships uh donation on github and things like this cool cool cool so let's move quickly to the tutorial section so using unlock with ethers we actually have a whole document here i assume most of you are familiar with ethers it is probably the most popular um ethereum library uh javascript epm library we have a package called unlock protocol slash contracts that you're more than welcome to install that includes all of the apis you can also copy media is manually from either external from our source code if you're interested in this and so um let's delta uh let's build a very basic example and again nothing too fancy if you use ethers in the past that should be all pretty clear here we're wrapping everything in a run function so that you can use async format of javascript so basically the first thing to do is to connect the provider we're using one of the default epira public interrupt providers here on rinkybee obviously if you use it for network you would use a different provider i assume you know this uh the address is the lock address so here actually i didn't show you this but on the dashboard which is here you can see the lock address here so xb58 is the one that we're dealing with here and then you can just basically instantiate a contract from the api um we actually that's a good thing to add we have multiple versions but we have had multiple versions of unlock over the over the years uh the current version is version v8 you can easily see what version uh your lock is by just going to read contract here and check the uh public cloud version yep here it is uh and you'll see that it's version eight so you load uh the api eight um and after this basically you instantiate that contract with address api provider like you would do for any other uh library and then you can call a bunch of functions like do the symbol which is part of your c7 spec we use key by default the lock name so here would be web3 gem membership instead of test october 20 which is something that i did a couple weeks ago uh you can also actually uh the log version as i said you can go retrieve it from equal scan you can also manually uh build kind of a an ebi string that would allow you to retrieve this from the contract by just implementing the public block versions here and this is literally what we do we just create this api object uh plug it into a provider and then set the address initialize the contract and then read the version for this and that yields uh actually a big a big number uh in ether's um space that we convert to string it's a bit more readable at least for me i know some people are very good at reading uh big numbers that's not my case uh so it's uh it's an eight um so this is reading stuff uh with ethers uh you can also obviously send transaction and modify things so here pretty much same structure uh we're connecting to provider but this time now we need a wallet so we we have this fake and it's not a real one it's a real one but there's no real money there you can you don't have to sell it if you don't want to uh so basically connect with the seat phase there's multiple ways to do that with meters i'm going to let you look at this on your own and then you create a signer by connecting the wallet to the provider after this basically you're pretty much all set it works the same as above have the address and then you instantiate the uh the lock contract by creating a new contract that you point to the right address with the right api and this time instead of using the provider the naked provider you just use the signer and that will allow you to send transactions that modify the state of the lock basically so what we're doing here we're going to purchase a membership exactly what i did through the you know the unlocked times ui we're going to do the same thing here so the first step is to retrieve the price so we know how much we have to pay and we're constructing this little uh object which is called purchase primes that includes a couple things the amount so which was producing the price and that makes sense uh the recipient so again the address that's going to have the membership attached to it it is most of the time the purchaser will purchase for themselves but again you can put somebody else's address there and you purchase a membership for them the referrer which is again the address that's going to get the the udt token the governance token of the of the network uh and we have an optional uh uh object called data and i'll explain maybe what that is in the fader um that by default here we leave empty uh we want to show an important thing is to you can actually get the gas price uh sorry the guess estimate uh how much gas is going to be spent by this transaction uh so we reached the gas price uh we pass it uh to a little uh object that includes the amount what's interesting about the amount it's like what is being purchased here because this lock and the one that i deployed a couple minutes ago actually use the default currency ethers you need to actually pass the value uh as part of the transaction you need to actually send that amount uh if it was an erc20 lock it would actually you can set that to zero as long as you have the right amount in the purchase params um we're running the estimate uh by just basically uh using ether's uh function to do this which is basically contract.estimategas.method and so that's what we're doing this and we're passing the estimate as the limit uh you could bump this a little bit if you wanted to be safe uh but that should work uh right out of the box and then basically simply uh this time we're gonna send the real uh purchase by just calling uh contract name to lock dot method purchasing that example with all of the params are required uh plus the options and the options do include the gas price uh the value here because again it's in either lock and the limit um once we get the the transaction we wait a couple seconds to get the receipt and you can do anything with the receipt it will include the token id uh the nft id that the person has purchased anything like this so if you're familiar with ethers all of this should be pretty straightforward maybe you know what i'm going to take a couple seconds to actually run that with the lock that we just deployed so i'm going to move to the terminal that i think some of you might be familiar with uh and i don't know if you can see my screen but i'm going to make this a bit bigger hopefully oh yes not too big uh here again and let's actually go here uh tutorials actually no events [Music] there's yes i have it here cool okay so um using a pretty standard um javascript project you know approach here uh and let's look at this one uh well that's the one we just looked at a couple minutes ago so we're going to use the uh infuria provider here we'll use this phrase please don't don't go steal the fake leaf that's on there for now uh and i'm going to just replace this address with the one that we just deployed which is this one with food gem membership uh cool uh we're gonna instantiate the lock as i said earlier um and pass this we're gonna pass somebody else's address here maybe we can pass uh you know what we'll pass my but they're going to get a free membership uh here uh let's say uh we'll keep me as the referrer the sender here and then we'll just do this but we'll uh console.log this time the receipt and i think that's it so pretty uh pretty straightforward here i'm just gonna go node uh index um and i say no here because i'm doing this from the back end but you could definitely use ethers on the front end uh with libraries like react and others uh again not specific to unlock uh very much how um things normally work in space uh it is taking a couple times a couple seconds i assume it's because it's waiting the transaction has been sent i should have logged something before we're waiting for it to be mined at this point uh hopefully yep that was uh mine so this is actually the receipt uh so you'll see that this is two and this is the address of the contract from the status of the sender that's us guess used uh it's a big number i'm not uh able to read this but let's actually go look at the transaction hash on uh ruling computer scan uh yes well it wasn't the next yet uh but uh basically all of the mission is here so logs there's three different events that are being triggered uh we'll look at them in a couple seconds on each scan obviously one confirmation the full gas used events are here and that's it so let's go refresh yes everything is here so it's similar to the one that i said a couple minutes ago from the ui where this time this address has purchased a membership and the funny part here is like that nft was sent to this address uh which we just picked on youtube a couple minutes ago so that person just got uh the membership number two for the web free gem uh some guarding students were minted again uh and assigned to the sender's address so this little address here that um to this our governor's token but if you go look here i assume uh we can go inspect uh this address limit um that's not what we should do we inspected sideways and you'll see that they've made a couple purchase and use this to build the tutorial and describing here but they have received some governance to them which is uh pretty cool uh in that scenario uh and uh and yes some government's looking for them some governor's looking for the maintainer of the protocol uh here the developer reward again the nfc was minted and given to this address here so we can go inspect it uh there is two membership web to jam one for the one that i purchased by the content and the second one that you can find here let's click uh briefly here and you'll see that this address that was used for bunch of things now has a new c71 token the web to jam membership that we just purchased for them um and i think that's pretty much it and that's good because i'm running out of time so i'm more than happy to provide again if you need any help join us on discord uh the hackathon's discord is a good place uh we have team members going to look at this over the next few days pretty much every few hours at worst uh i am more than happy personally to help you send i did earlier send a little bit of a fake uh ring b uh i did that a couple minutes ago for some of the some of the participants in the hackathon uh please go build fun things uh that's the that's maybe the the last uh the last little hint oh yes we have prices i will i don't really remember the numbers but i think it's about four thousand dollars worth of udt token our governor's token on mainnet this time it's a real one not just fake one from wikileaks uh that you can use then to uh join our governance our dow and vote on what to do with the treasury uh upgrades the protocol and things like this yes uh thank you emily for posting this um and i'm i'm really looking forward to see what we're in the building maybe one little piece of advice don't build frankenstein thing that tried to capture all of the rewards from all of the protocols like try to build something unique it doesn't use unlock it's okay i'd much rather see fun stuff that the same project that you know tries to check all of the boxes uh and i know emily and luke are gonna make faces when they say this but please build cool stuff even if it's just using one protocol that's better than ugly stuff that use everything cool yeah if you got you would you like i can funnel you some of the questions we have a few in the chat oh yes definitely a list is completely sorry yes no worries just came up any way to use nfts that have already been minted and have communities around them uh unfortunately not quite yet uh a month from now yes that's definitely on the roadmap and we're an engineer working on this so i unfortunately not right now if we do another hackathon uh in a month i think that's gonna be possible by then uh for now it the only way to do that would be to uh i didn't show you this but the locks themselves have two functions for minting there's the purchase which the one that we use in the example and there's one called grant key uh the nft we call them keys because the contract was pulled block a grand key is a way to give away a membership a key for free to someone so you would use guarantee to grant keys to the people that have another nft or a board ape or something like this absolutely free i mean big ass that's the only thing and you should use a credit card there's going to be credit card fees associated with this uh kevin i'm more than happy to point you to the docs for grantees uh please join the the the discord and i'll do that in a couple minutes because i want to be conscious of the time here uh yes only seven to one for now uh we are thinking about 1155 honestly for now we didn't see um a lot of value in adding pt5 into 155 because each of the locks is its own contract like it's really important for us that each creator has their contract and is not using somebody else's contract or their union control medic is supported uh only we're supporting on if you're a mainnet xdy polygon and then on each of these chain pretty much any erc20 or the native energy token so matic on xda is possible matic on polygon is the default i guess matic on mainnet is possible as well we are also on binance chain which i mean i don't know if this is interesting to anyone but that's we're there it's excellent um thank you so much for your presentation that was really incredible i'm really looking forward to seeing how things grow and i'm really looking forward to seeing how the hackers utilize this tech throughout the rest of the hackathon um really appreciate you joining us today and and everyone else for joining us from their homes uh all around the world of course thank you very much have a good uh afternoon morning i mean gm i guess that's the that's the thing that people are supposed to say these days so gm everyone and uh have fun really enjoy your enjoy your time the hackathon this is the best things right on well everyone um like you said uh feel free to continue the conversation in discord it's a great opportunity a lot of great resources there but other than that i think we'll be closing the session here thank you for your participation we look forward to seeing you at the next one i think 3 30. all right take care 