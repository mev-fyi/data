all righty hi everybody um welcome to the building with polygon workshop uh started by our sponsor polygon here we have uh yuling who's gonna be teaching us some really amazing skills um and yeah if you have any questions just pop them right into the chat she's gonna try your best to get to them but if you guys can't get your questions answered during the presentation then feel free to message her on discord can you wing your time to shine hey all right uh thanks nisha for the introduction and uh hi everyone so my name is elaine i'm the integration lead at polygon and it's absolutely a pleasure to be here today and so then today we're going to be talking about building on polygon and as you know polygon also has has this name ether ethereum's internet of blockchains so then we will first be going through different features on polygon and also to explain why it's called as insurance internet of blockchains and so then the first thing uh i would like to quickly go through the contents that we will be covering today so uh so then the first is just the overview introduction about polygon and then we're gonna see how you can connect with polygon and then you know just um uh to be able to do deployment with remix and also with truffle um and uh well actually we're gonna use the zoo uh studio to do the deployment um with truffle support and um and then uh we're gonna see a few features on polygon uh how you can do cross-chain as a trend transfer uh like deposit withdrawal um polygon as well and then uh if there's enough time then we will quickly go through network agnostic transactions on polygon as well all right so then uh the first thing um about polygon so polygon was actually first funded in 2017 so it's been around for a few years but uh but its name was actually manic until um earlier this year it got rebranded um as polygon and so so then it is just to solve apparently you know like the high gas fee and low throughput uh roadblocks that we as developers or the users have to face for dabs on ethereum so um so let's just take a quick look at the current architecture of polygons pos bridge so so then on the on the graph here we can see that there are three layers right so that yeah this is a three layer architecture so on the ethernet layer that's where polygon deploys its uh staking smart contract and also a plasma smart contract and and also a pos bridge smart contract and those are uh apparently for uh staking purposes and also you know just to do the verification of the transactions on the polygon chain and then the middle layer as you can see here is the pos validator layer so it's actually a separate chain and then at the bottom we have uh here says matic sidechain so basically this is our block producer layer that that we call as a four layer of polygon right so then those three layers would just form uh this hybrid pos plasma bridge uh or the polygon chain so then you know just for uh for all the transactions going back and forth from ethereum to polygon they are basically realized on two mechanisms and those two are both uh stay i would say even driven um so one is the staging mechanism and the second one is check pointing so then uh with the stay sync so so then uh if there's transactions let's say if someone would like to deposit uh some token from ethereum to polygon right or to transfer to be more precise so then uh this transaction is gonna be uh synced on the polygon site based on an event called a csync right and the validators would be listening to those events emitted from israel the midnight and once it picks up those um statistic event it's gonna propagate the message to the polygon chain and then at this point it's gonna be the the block producer layer on the polygon chain right the third layer and then you know uh so that if it's uh a deposit right or if it's a transfer of uh asset from ethereum to polygon then it's going to be a mint stack on the polygon chain right so then the token at this point is basically going to be minted so the question is that if the token is going to be minted on the polygon side now what's going to happen to the crisp bonding tokens originally transferred from the ethereum site so the answer is the token on the ethereum site to be transferred is first going to be locked into a predicate smart contract deployed on ethereum so only after that happens the stay sync event is going to be kicked off and then the corresponding amount of token is going to be minted on polygon site so then that's how that's how the network or the bridge utilizes the c sync mechanism to do deposit from israel to polygon and then the reverse way would be for someone for example to exit their token from polygon site to eastern side right so then uh to do that of course the token previously minted on the polygon side would have have to be burned first and uh and then with that burn transaction proof it's going to be checkpoint pointed meaning all the transactions that happen on the polygon side are going to be periodically committed through merkle tree route to the eastern midnight and that's also the reason why polygon chain is called as a commit chain and so you know just with all those uh transactions in merkel tree route at any point of time any transaction that happened on polygon is able to be verified uh for its validity on the israel uh chain right so then this is our check pointing so then you know just uh when user burned their token on the polygon side they're gonna provide this burn transaction uh and uh give that to polygon sdk to create this bird proof and then this bird proof is going to be submitted to ethereum minute right and once that is verified to see okay this burn transaction actually happened on the polygon slide then um then then the the amount of the token previously locked in the predicate smart contract is going to be released and redeposit back to the the user right so then as you can see that's how the cross chain asset transfer takes place and uh so then um so then um that's also how polygon is able to provide decentralization and also security at the same time right and of course it's super fast the the um the the block finality time on polygon is two seconds uh and uh you know just uh we currently have 100 validators in place to validate every single transaction that happen on polygon before it gets submitted to ethereum all right so then uh this is the main structure i'll just quickly check the chat and uh to see if there's any questions so the fees of transaction polygon are will enable the cost of burn proof and allow the convenience of mercury happens okay good questions uh yeah so so then uh we'll also go over the fee uh polygon in a little bit uh but then uh so for transactions that uh happen only on the polygon side of course we're gonna pay polygons own native token which is called medic and that is just like the equivalent of ether on ethereum and you know just for for uh submitting or for committing the merkle tree root of uh of of the transactions that happens on the polygon chain as part of the checkpointing process as it uh involves ethereum at this point right so then uh it's gonna have some ether guest fee incurred so so then in that sense yes you're gonna have to pay ether uh you know just for transactions um coming out of polygon back to ethereum all right so then i hope that answers the question and uh let's just come to the next slide all right so the current skilling problems that uh everyone's facing and uh i would like to cover all those for uh for different issues so for the first one is that different projects would have different needs apparently and uh multiple solutions should coexist right so so then this actually happened with polygon's own scaling solution because when it was first provided um it was a plasma a layer to scaling solution uh so then it's it's great because the security is piggybacked on ethereum however um the drawback is that um it's not flexible in terms of the withdrawal period so then there's a seven day challenging period with a plasma solution and then as you can imagine it won't be a good uh option for some of the adapts right so so so for example for gaming um it's it definitely needs a faster um period than uh that and that's how polygon is able to offer the pos um solution so you know so so the seven day challenging period is uh no longer um existed with the pos uh with with pos skilling and uh and then the securities achieved by uh chip pointing to ethereum at the same time so we're not sacrificing security uh while providing more flexibility and then you know apparently we want to adopt new innovations in skilling right and uh you know just recently polygon has uh acquired a major zk group shot right so so then um therefore you know not only were able to provide pos uh skilling solution plasma and there's also fx portal as well but also we look to provide more and more new innovative solutions all under polygons single umbrella and then you know just uh the third one is just um mainly for example popular implementations scattered and and buyers information confuses developers right so so then this is what polygon is trying to solve by combining different skilling solutions and now of course there's either ethereum killer right that's constantly trying to take away uh the resources from ethereum so yeah so then um with polygons solution it's called as a swiss army knife um so so so the picture here you can see it's a big polygon right so then uh each edge would be a different skilling solution uh the ones that we mentioned as uh polygons native pos and plasma scaling solution the side chain and also there's a shared security chains um like jk roloff chains optimistic reload and plasma essential and then there's a standalone chains right so so then uh there's also uh enterprise chains so all those different skilling solutions are all gonna be aggregated together and the interoperability is gonna be provided and of course the main hub of this polygon um is ether itself right so then therefore it's turning ethereum into a fully fledged multi-chain system so then so then uh this is like um what we call as a internet of uh blockchains all right so so then uh the power of polygon so then here it gives you some of the attributes on polygon uh as you can see we have many depths on board at this point and then for uh tbl logged uh it's over 10 billion at this point and then for daily transactions it's over 6 million at this point right and then for uh the sticking amount it's uh over 2 billion at this point and then there's a two second block time finality on polygon maintain um and uh the average transaction cost uh might have gone up as a trade uh as a polygon chain gets uh a lot busier every single day but then it's basically still like a fraction of a sit and then uh and then there's uh of course you know the good news uh to us the developers uh is that as polygon is an evm compatible blockchain so basically it means like all the toolings all the frameworks um and um and the wallets right so everything and the libraries so everything that we're so used to using on ethereum they can be used as is on polygon so we don't have to learn additional language or tooling right so then this is also why dev loves polygon and then here as you can see that uh by providing the high throughput and low gas v on polygon it's gonna reduce the user adoption friction so that it's gonna provide a very good user experience for the major adaption of ethereum [Music] all right so then before i go on let me just quickly check er chat yes i do i believe in ether too but but then even with that uh i would think that you know just with the amount of transactions that we get right like more and more so then skilling solutions are still necessary with uh uh in the future with ethereum uh i mean like additional skilling solutions does it push transactions afterwards on ether midnight well it depends right so then for checkpointing of course you're you're committing uh all the transactions periodically to the minute right but other than that uh you do not so then this is only for cross chain transactions [Music] okay so the fee we talked about it all right so then let's just move on [Music] all right so then uh so then this is our core team and uh i would also like to quickly show you polygons eco system as you can see here right uh there are just endless icons that we see uh in the picture here but the community has made um a page to keep track the recent like uh like the list of depths currently onboard this polygon as you can see that they put it into different categories as well and uh so yeah i mean just a few feel free to um browse the different categories here and to see if the dabs that you like are listed in here and then if so that you're able to save um guest fee on those and then there's like an ftn gaming as well right so then yeah i mean just to feel free to check them out and we also support the wallets that are currently supported on ethereum as well and then with oracle's uh you know like for chin link right um and also all the other oracles you can also just use this is with polygon and then of course for deaf tooling um yeah again you know uh just afford the ones that you use on easter and they're available for you to use here and those are um ex changes that uh have already in integrated uh with uh polygon uh so then there should be coinbase as well yeah so i guess uh this does not have the latest uh information but uh yeah but then we we get the idea here right all right so then um so then i think uh that's just um what i would like to cover in terms of the different uh features and attributes and polygons so now let's see how we can connect to polygon so then i would like to point you to our polygon documentation so then uh here uh the way to access that is docs.matic.network and then from here i just click on develop and you will be able to get to network details and network because you're going to need this configuration information to be able to connect to polygon right and and then we're also going to see uh the different ways to do deployment right there's um hard heads and um and then there's also um truffle as well so we will go through remix and travel as well but then to do deployment with hard hats uh just feel free to check this out offline so then you know just with this we can just quickly click on metamask and you know just once you're here just click on the drop down and uh you would like to select custom rpc and so basically at this point you you can just copy over all the information that you see right from from the dog to to um to the text views in here right so so so uh since i already have this information so i'm not gonna do it uh also because we have very limited time here uh but but you'll get the idea it's the same way as what you you would do you know just to connect to different test nets on ethereum so on polygon we basically have two two uh different uh chains that are available so what is the main net polygon main net and this is a configuration settings for it and also there's mumbai testnet as well so yeah so depending on which chain you would like to connect to um and um so then after you configure this in the meta mask right uh the next thing that you want to do in order to do the deployment of polygon is of course to get some gas right and then we will be able to do so uh through polygons forces and um and the link to to that is also available on the dock right so it's under tools and it's under medic for forces and uh so then uh the way to do it is very straightforward you basically just copy over your metamask account address here right and then looks like it's loading okay i wonder if it's uh under maintenance at this point but it's a little weird uh but i'm i'm just gonna tell you so basically uh you will be able to see a text field where you can paste over your account information the address right and then there you will be able to specify that you want token by testnet and it's going to be thematic token and uh and then um and then you can just uh claim the test token to your account and then you know once you check all the information is correct and then you just go go ahead and confirm and your accounts will be funded with the magic token it's not huge i think it's at this point it's only 0.1 test token but it's going to last you surprisingly a long time all right so then after you're done with the configuration and also with um getting some font to do the deployment um you can just come back to remix and here as you can see i have the most simple uh smart contract here in remix and so basically we're just going to do a quick deployment um polygon for it and in order to do so we need to make sure that we select the correct network here right so i do have matic test net here right so then on the environment you want to choose injected web 3 and here we go so i would like to confirm this transaction of deployment and pay the gas fee for it and um and then my uh smart contract is deployed so then let's just copy over this transaction hash and then you will be able to get his information from polygon explorer polygon scan and this is actually um developed by etherscan team so a lot of features will be similar as as ether skin so then as we can see uh this is a contract creation transaction here on polygon site right all right so then uh that is how you would do the deployment remix very straightforward and then the next thing is how you do the deployment through truffle um and here as you can see i have i have a travel config file open right so then all you have to do is to copy over the configuration detail again from the dock and then here i basically have you using truffle uh section right so then what you would like to do is that you copy over this matte entry to your travel config file right you can just keep as is however you are able to see like a mine's uh mine is slightly different because i purposely leave this um dedicated rpc uh your eye here right so then uh it's free to get a dedicated rpc uri with um uh rpc providers like magic digital or like inferior right um so then yeah but then with this dedicated uri you will get a smoother experience so then that's what i did and then uh all the other information is available on the dock and then once you have this uh available um you can just run as what you would do to deploy a smart contract on ethereum so then the only difference is here that i specify network polygon and then i do reset and then you will be able to deploy it on polygon so then this is a smart contract that i just deployed prior to our workshop um so so i hope i would have a little bit of time just to show you the smart contract okay uh so then again uh this is a very very straightforward smart contract and uh awesome so then as you can see i basically just extend the erc 20 um smart contract provided by open zeppelin right exactly the same way as what you would do your erc20 smart contract on ethernet right so so then you know just for what three uh ether.js and all the libraries that we use on instagram you just use them the same way uh on polygon so then yep so then uh that covers the deployment on polygon and then uh just a quick the last thing uh how do you do cross-chain asset transfers right as we said uh to do the deposit you basically use as they sink mechanism polygon of course you don't have to know the detail about it all you have to do is to utilize polygons as dk which is in javascript and you just have to call those two api you first approve this erc 20 token to deposit and your token is going to get locked into the smart contract on ethereum and then you do deposit erc20 free user right and then you pass in the address of the recipient and then you're good to go uh and then for withdrawal first you need to burn the token polygon right so then you just call the first api here and then the second is that you provide your burn transaction hash to polygon right and then uh just with this single api from polygon sdk you are able to have it to verify the sperm transaction polygon and then um and then you know just to release the tokens previously locked back to your account that is it uh so you know just uh super super um so i think we're running out of time but then you know just uh uh please feel free to check out all the previous uh previously made youtube videos on polygon and also uh there are a lot of information available on our doc as well and you know uh so for any questions that you have on polygon uh just please feel free to reach out to us and then so before i end this uh just a quick quick thing because the gas v on polygon is extremely low right so that it makes a lot of sense for you to actually cover the gatsby for the users right and then you know you can do this through meta transaction and the network agnostic feature on polygon as well and uh economy provides amazing support for for it so you know of course you can just use other framework as well so just make sure that you check that that out and try it and yeah so then have fun building on polygon um thank you so much yulin we really want to be respectful of your time and if you uh need to go for something that's 100 okay but we have a lot of really great great questions in the chat that if you feel like you can't answer right now uh we can go a little bit over time and give you some more time to address those i'll be great that that would be great because because i got the impression that i have to end by uh half an hour or so you're all good don't worry okay cool thank you very much i really appreciate it uh so let's see oh i should just open this whole thing up okay so then the different side sign chains that we provide uh polygon our pos uh profile stake uh side chain uh and then there's a plasma chain and also we have fx portal as well and as i mentioned we recently acquired a zk roll-up shop so then that's also offered under polygons one big umbrella and never enough block space what does kraus chain mean [Music] good question for it so crosstrain is just like a cross chain um like cross ethereum and uh polygon so basically you know just to be able to cope with the high transaction fee and low throughput ethereum all a lot of dabs would just map their tokens right from israel to polygon and once it's mapped to polygon they're able to you know just to um uh deposit their tokens from ethereum to polygon and then uh once you're on polygon you basically are free to do all the transactions right and uh you know just from awesome polygon that page that we saw like a lot of uh depths that you probably have used are already integrated with polygon right so then once you're on polygon blockchain you're able to do a lot of transactions with near zero gas feed right so then once you're done and then you're you want to access your token from israel that you can uh take that out by withdrawing the asset from polygon to ethereum so that is uh the uh what cross-chain means right so this is a great way to scale your dab and pay less gas of course it's not just limited to asset only right so for arbitrary message transfer cross chain it's also supported with polygons pos um pos bridge and also uh it's supported with a polygon's fs portal uh bridge as well we actually have a wallet adapt that you can use with polygon and um um yeah and i can quickly show you you know well right right exactly uh crosstree means interaction awesome right great all right so then uh looks like all the questions are covered at this point and um i'll just borrow one second here um so basically you know like uh for here this is a polygons wallets right and then you know just uh from here uh once you connect to it um you know just for you to explore this you may want to connect to the test net instead so it's wallet that medic today right so then here you are able to just um connect to mumbai testnet and then once you're in and uh so then here is what i meant by cross chain asset transfers you are able to move funds from israel to polygon and also the other way around right so then yeah and um and then uh to deposit your token from ethereum to polygon it takes about five to seven minutes for the token to arrive on polygon and for the other way it's gonna take a longer time it's anywhere from um from half an hour to three hours the reason for it uh is that uh checkpointing process because it has to take time to commit all the transactions to ethereum and to do the verification about it right so then yeah so so then this is a tool provided by polygon to do the cross chain asset transfers um and uh and then of course um this is the tutorial on the polygon wallets and uh bridge app so then feel free to check that out um and i'm just gonna paste the link here for your reference and um yeah so then uh i think this is uh this is the uh information that i would like to cover about the cross chain as a transfer um polygon [Music] perfect alrighty do we have any other questions for you ling okay if not then thank you so much ewing for hosting um this workshop and thank you for polygon um for sponsoring uh hack youth online this year um and yeah thank you everybody for coming on to listen to this workshop i would do encourage you guys to reach out to you ling in the sponsor discord channel and um yeah have a great day thanks a lot bye everyone 