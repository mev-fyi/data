foreign [Applause] [Music] okay cool awesome um yeah thank you for coming so we'll be talking about um there's really two parts I'll talk for like five ten minutes about what alua is in general and then we'll dive deeper into the code for all of you guys who might be building on top of what we do um so yeah so I know his mission is to democratize the access to financial services um we do this in multiple ways um so yeah so the main topic is we'll explore the protocol side of what we do rather than we're building another another site which is a non-custodial Mobile Wallet presentation is mostly about in the protocol side of what we do uh cool so quick agenda what's aluo Allen should use um the streamable interest bearing Allure tokens um then we'll talk quickly about decentralized governance because it's quite important to understand how do we make interest on that streamable token the big part of our governance um and then we'll dive deeper into the streaming aluo and that's what we'll touch up the code um we'll give a few examples of people that have built on top of our token standard and then a few ideas of what people might want to build this weekend um just FY we have a 10K price pool um So for anybody that builds on top of us this weekend so it's split in three uh there's 6K there will be split between all the projects that are built on top of Allure so if you if there's six people it'll be 1K each if there's five people will split it that way um there's a 2K prize for the most futuristic idea um somebody yeah the most futuristic idea on uh I Lu and there's uh 2K prize on I forgot what's the last one oh the best use of streaming tokens so there's other stuff that Allure does but specifically there's a price for the streaming tokens cool so what's hello um like I said two things uh first thing it's a non-custodial Mobile Wallet that looks and feel like a new bank uh we've been live uh since February uh we're live anywhere on the App Store Apple uh app so both have Android and iOS um the idea is that this is the interface for people that don't know crypto that want to have all the benefits of crypto um the mission is really you know can we give this to the average Joe industry it's somebody that's used to use revolutes or you know any other Neo bank and they'd be able to use it just like in a Neo Bank Main feature of the app today is that it gives you a seven percent interest on your deposit um seven percent on US Dollars um does it say five yeah it's seven today so actually it is an interesting why it says five and seven today and I'll get into that in a sec uh so it's seven today um cool uh there's also adapt um so the DAP is exactly the same if you want in the mobile app but it's for people who understand what crypto is uh so if you have metamask if you have a ledger so on so forth you can do exactly the same in the mobile app then in the dab it's just a bit more crypto friendly let's say like that um yeah so that looks like this it's on app.allure.finance uh yeah please have a look uh it's just an interface for for the protocol basically cool um so um the interest bearing token streamable interest bearing token um I'll first explain what I mean by streamable um so hello is the first Super token that's been built um other than what superfluid has done with their token so we build with super fluid in partnership with them um what I mean by swimmer is that you can send some elc20 elc20 token to another address every second so the balance you know goes up every second it's actually more than every second um yeah and we'll we'll do a demo of that later on very interesting you know you can think about a subscription model you can think about programmable cash flow and there's a lot of ways that you can send money uh to something else somebody else every second um yeah that's what I mean by streamable it's on polygon by the way the streamable aspect of things is on polygon um yeah sorry uh yeah well her blog yeah per block you'll be able to refresh your balance per block um again we'll show that at the second part of the demo um cool and what I mean by interest bearing is that the token that we have built the St iblo um carries an interest um so today US Dollars makes seven percent uh we have uh US Dollars we have Euro eth and BTC each have a different interest Associated to it um I'll explain how do we make um that money at that seven percent or whatever the apy is in a sec um but basically it's managed by the ALU odao so every governance cycle two weeks um Allure token holders vote on where do the liquidity that comes either via the DAP or the mobile app gets invested into into D5 so today we support anything on curve anything on convex uh and on Harvest on polygon and on Main net so every two weeks a little token holders vote and they're like okay we're going to put 10 of the total liquidity in the protocol into this curveball 20 into this Harvest farm and so on and so forth um allow token holders do this because they make the difference between the advertised API and the realized API advertise apy is that seven percent whatever you know we give in the mobile Point adapt to depositors realize apy is whatever we can make at the back end ten percent let's assume that it's ten percent that we can make at the back end you know a lower token holders that will vote uh will make three percent of the total value lock that is in the protocol will split to them to all the people that have voted um yeah so you know you can watch your money live uh you can watch your money grow live if you want to download the app you'll there's a nice animation where you can see money going up um and yeah so uh yeah so I did say uh USD USD Euro eth BTC on polygonal mainnet um yeah does that the streamable aspect of things is only on polygon wouldn't be efficient on midnet cool so uh the governance and hardly crazy Direction work uh it's obviously quite important um if anybody knows there's a big controversial things to say but if anybody knows Celsius the big company that went down yeah um I know it's somewhat similar to Celsius but it's fully on chain and it's fully transparent so at no point hello the team or the protocol is in custody of the funds um all of it it happens on chain we never take the funds off we cannot take the funds off chain even if we wanted to um but ultimately and token holders direct where the liquidity goes somewhat what Celsius was doing um so these this is an example of our snapshot and this an example of our governance surrounds every two weeks uh there's a few the series of votes that happen first one is liquid Direction so where do we put the funds second one is percentage of the treasury that gets invested into our own protocol um so today I don't remember where we're at 60 or 70 something like that of the total treasury of the Dow is invested in our own protocol you know we put our money where our mouth is we actually use our own stuff um we also uh the Dow also sets the apy for each iblower so I mentioned seven percent you saw five percent at the beginning because it varies so the dial might vote on you know five percent for these two weeks seven percent for the next two weeks according to whatever we can realize in the back end in whatever D5 product um you know we invest our money into so it's stable for two weeks um to give you an idea of range we've gone I think the highest we went to was 16 or 15 and we've gone all the way down to I think it was five five was the lowest on US Dollars Today is at seven really depends market conditions and you know whatever we can achieve on on D5 and then finally the last video is any anything else you know that might um that might affect the token economics or anything else there's a core part of our token is also voted um cool so I think that I think that it's really important that you know we've worked really hard on is decentralizing the voting obviously but a lot of people do that snapshot is not exceptional um but we also decentralized the execution of our vote um and so that for us is really big part it's great to have a decentralized voting but then if to actually execute the vote you need some sort of more to sake or you need some sort of signer behind the scenes you know that does the transaction the thing is kind of pointless because if that sign up goes away then right you can vote but then nothing will ever happens on plane um so we've also decentralized the whole execution of the votes um that happens cross chain so between polygon um and mainnet we use multi-chain to do that to do cross-chain messaging um and yeah all the votes happen automatically um today there's a script there's operated by the Dao that works in GitHub actions that facilitates this but anybody could run the script really it's a it's an open source script um so yeah decentralize the execution of the vote is pretty important really hard to do as well um cool a quick example of things that have been built uh on top of aluo uh super fluids so it's kind of a we've done it both ways uh they've been on top of us and we build on top of them um an example of a use case for this today all the core contributors that are being paid a salary or being paid a salary using this um so we're using again our own product um you know we're using our mobile wallets we're using our stream board tokens to pay salaries for people that get salaries um yeah um something else that's been built is by a team called Ricochet maybe some of you guys know Ricochet um they build a DCA protocol DCS stands for dollar cost averaging um basically you you can buy an asset every block or every second uh whatever the spot price is um so you know you could buy ethereum at whatever the spot prices ethereum every block um there's an economy an economy economic theory that you know goes into the details of why this is the best way to buy an asset rather than you know impulsely you say Okay I want to put you you know buy order at X price this is probably the most efficient way to buy an asset and so what Ricochet has done is they've done this with interest bearing tokens so with the iblower tokens what that means is you make seven percent on your US Dollars while it's buying ethereum that you're yielding four and a half percent on the ethereum on the other side so it really is probably the most Capital efficient way to buy ethereum today is to make yield on the dollars that are buying the ethereum that makes yield on the other side as well without having to do anything um so yeah so today I think they have USD to ethereum um ethereum to bitcoin Bitcoin to USD USD to bitcoin um yeah you could build you know any other markets if you wanted to cool uh so we'll dive a bit deeper in the code um so bent I will we'll go um yeah we'll do that okay hey guys so I'm one of the developers in the protocol and I think and what I just want to make sure I want to do in this Workshop is not so much go into the technical details of like each line of code each function in our own contracts but rather show you how you might create a protocol that would integrate DCA from iblo USD to iblo eth so the objective what we're going to do is we're going to create a contract where users can deposit usdc and go into iblo USD and then we're going to stream that IB alloy USD directly into ibloith and I'll show you real time like how you can see your eth growing so let's just jump into it cool so this is a code is it a bit small do you think should I just zoom in oh no that's not right can you guys see it okay or is a bit small bit small okay let's let's zoom in man is it is it better now okay cool so this is a really simple contract where I just really stripped it down to the Bare Bones of how you how you would go through the process so first we have just a bunch of imports but I'll walk through the Imports uh when I explain the Constructor and what the key things you have to set before you write the contract so let's just go into it so i i i inherit from two contracts if one is access control and um erc77 recipient so about access control it's pretty self-explanatory uh we just I I access block I put access control on the functions so people can't take my money so here's the Constructor we're going to set three parameters first one is IBL will use from and iblo2 the first one IBL frog that's we're going to set as USD so I actually deployed this contract and I'll show you the contract afterwards but it says iblo from is USD and we're going to go to eth okay and we're going to set the last one of the Ricochet DCA contract so what is a Ricochet DCA contract it's a it's a contract that will take all your all the streams of incoming iblo USD streams so I could be doing it multiple other people can be streaming and they're gonna what they're gonna do is they're going to turn that into USD like usdc for example swap it to eth and then reinvest it in as iblo USD so we're gonna that's how we that's they handle all the logic of converting a streamed IB aloes from USD to eth but they but they do like all the other markets as well like USD to BTC and they even dot like usdc to IBL or USD so like they're like multiple ways you can uh unramp onto these streams so here are some Key Food preferred parameters we're going to set I don't use all of them in depth but I just wanted to show that you you might find them very useful if you've built on superflip before you'll know that there are these things called these uh libraries which work with this one is called the constant flow agreement so this is what the streaming function and this this is the instant distribution agreement so This Is How They air drop tokens in super fluid so it's just a bunch of initialization uh and then the second part is here we're gonna we're granting permissions to the IB outload contract to create streams on your behalf so it's analogous to how you would you have an erc20 approved to um to a contract to do transfer from it's this exact same thing but it allows you to create streams through the iblo contract function called create flow and here we have two things these are actually super important because you can see it approves their subscription to um iblo eth and ricochet's Rec contract so this is how one say once Ricochet takes in all your streams they convert it into IBL eth but the way they actually send it to the users is they use instant distribution agreements to just air drop them to people so if you don't set these up your money will be just flowing into this contract and you'll never get your ease so please please don't forget to set these two parameters up if you have and I'm more than happy to explain like what these numbers mean later on like if you have any questions building on top of it and then last one is just uh setting up some key things these this one is Access Control this uh this set interface implementer has to do with a technicality in the super fluid contract so we can talk about that if you're interested as well but you need to set this cool so here are the key functions and so let's go through in order so how we're going to get iblo okay so we're going to set an amount and the address of token so let's say for example this is usdc we're going to go from we're going to do transfer from from the message sender let's say I call this contract and I'm going to send 100 usdc I send I sent 50 actually to this contract and then I'm going to approve this contract I'm going to approve the iblo USD contract and then I'm going to deposit okay and once once when you deposit an amount of usdc you're going to receive a receipt token and that's our iblo USD and then you're now the contract owns a bunch of IBL OSD okay now that you have iblo USD you can just you don't have to work worry about you know wrapping into a super token and everything if you call this function called iblo you know create flow it handles all the wrapping for you and actually all the functions inside iblo take care of all the technicalities of moving between iblo and STI blo if you're familiar with super fluid so if you if you do this there's an additional benefit where once you start streaming of you know a flow rate per second to the DCA contract you get two kind of two types of protection I'm sure if you work with super fluid you know that they have this thing called liquidations where if you fall below a certain uh amount of stib allo SD St toke extremable token they will liquidate you and take like you know like four hours worth of your stream so like if you're streaming like ten dollars and like ten dollars an hour they'll take forty dollars from you which is like kind of crazy so if you create a flow through our IBO contract we have gelato resolvers to prevent that so if you're close to eight if you're eight hours away from Liquidation we shut the stream down before you know so your stream just stops right and that prevents you from ever being liquidated and number two there's another uh there's an overload function here where you can set a timestamp an end timestamp you can't do the super foot actually but you can set an end date for your stream so it can you can set like if you set 600 it'll run for 10 minutes and it'll just shut down so and we will close the stream at the end of the 10 minutes it's not a native feature built in superfluid so if you use this you could just work around it and interact directly with like super fluid contracts but it's just a pain just if you just use this you get your added protections and you don't have to worry about STI blower really and then you know self-explanatory this just close the same stream here we just check the balances and I just return both um the from and the two balance so the first value is going to be your real-time ID allo USD balance and your second one is going to be your real-time iblo balance okay and then these are just a bunch of uh function function so I can get my money out of the contract so let's have a look at you know how it's actually working on on chain so I deployed this today morning and so I once you call create flow start DCA stream in that in that contract you can see on super fluid that this is a contractor deployed and this is super fluids um a DCA contract and you can see I'm sending fifth like 49.25 STI BL a month and you can see it's streaming and here's what what I meant by meant by the buffer so they take a buffer of 0.2736 if you fall below a certain like balance they'll take this money so please use our create flow in our IBO contract because we'll we'll protect you from all that liquidation and you can see here in the contract where we if we call that check balance function to see your balance of iblo USD and eth so I did this right before the project so you can see it's 51 point something dollars in here it's like you know some really small amount of eth if you query it you can see the numbers change right so the first one went down because every second your iblo USD balance is going down it's streaming into the DCA contract and Ricochet I think it's every 10 minutes or something they convert all the pooled US iblo USD and convert it to iblo so I think if I call it again it should change you can see this one increased but this one decreased so yeah so those are the key things if you have any questions about like you know the technicalities of like the IBL or USD and you'll find in our docs but you know I'll be here to throughout the whole hackathon to help you guys on this so I I guess uh we can move on to like what kind of uh projects you might you might think of to build on the hackathon and here so let me show you this yeah yeah so the DAP ideas I'll go through the streams so the first one is the tokenizing these IB aloe streams so yes we have all these streams but we can't trade these streams right now so an example of what you could do is if you can tokenize these streams to be tradable into nfcs then you can stream like if Alice streams 100 to Bob every month okay and they and Barbara seems of an nft of the stream and you create a super app which is a fancy word for a contract that works with these streams then you can allow the owner of this nft to be receiving this this cash flow so if Bob sells it to you know Celine she gets you know the cash flow instead but you know this this will unlock other you know applications we think such as lending using nfts streams as collateral so whoever owns the nft can you know like put it as collateral you know their income against and then they get like USD see you know in advance so they have to wait the whole month for their salary to build up and number two it might be quite interesting you can create more Structured Products where you have like you can build up multiple like of these streams you know put a package it up into something like a CDO and you know we can build some more uh more transparent versions of the same products that you have in Trad fi and I think Remy you want to talk about boost Okay so we've only got five minutes so um I'll talk quickly about boost um boost is nothing to do with streaming it's a new product that we were released about like two or three weeks ago um it's an improvement in our original um token economics um so in brief uh what we're doing is we're allowing you to boost your yield that you will make on uh cvxlps um so if anybody is familiar with convex uh you know when you deposit into convex you get a cvxlp we basically use we Loop that LP around and allow you to boost I don't know as well it's a 30 boost something like that about 30 boost on your on your original yield of your CVX um again if you want to know more about how boost Works um maybe find find us at our table I can go in a bit more detail on what you can do with Boost but yeah that's something new that we released like a few weeks ago so yeah um cool so if you wanted to build something on Boost um you could you know there's things that you could yeah you could these are the two things everything you could do you can expand the sort of boost pools that we have um to frax.comx finance that's in one uh today we only support convex or traditional convex um and then the last one would be oh yeah to to enter farms uh to enter mainnet Farms from polygons so to do some crocheting stuff again if you're interested in how cross-chin would work we've done a lot of stuff with multi-chain um bridging assets but also messaging cross chain um for our for our governance process so again that's something that we can help with um but yeah cool uh anything else that you want to that you can think of so like I said you know we've got a 10K uh prize pool so substantial price pool and anybody that builds anything on Allure will get at least something out of that price pool um so yeah um these are a few links uh find us on Twitter so app uh Discord is there documentation it's pretty straightforward dogs.com um it's Technical and non-technical so there are bits for if you're not a technical user you can read and it's it's still easily understandable and then there's a bit more code stuff in there and that's the GitHub for the repo that for the contract that we just showed um the GitHub for the rest of protocol where everything else is I think it's just slash that's it so GitHub slash getalua and that that has all the rest of the of the contracts uh cool that's that um yeah I think we're out of time but if anybody has any questions I'll be around anybody that has one of these jumpers and there's a close to the table uh yeah we're all from the Allure team so I think there's like four of us here um so yeah cool thanks guys 