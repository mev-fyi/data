cool looks like there's a solid turn out how people brought their questions they're glad injured okay yeah so I was just saying that we will I'll do a little like recap of the week and then we could just jump into questions and feedback and everything and so I guess recap on the week we launched the hosted power gate for teams to use so this is a power gate connected to currently test net I know that there's another there's another kind of parallel network to test net that hack FS users are able to use and it syncs a bit faster and deals clear a bit faster but right now we're going to leave this power gate connected to the full test net we could always switch it if there's strong demand for some reason to move over to the other one the reason we'll keep it on this one though is then you can make use of other resources that are connected to tests on that test net so things like the block explorers and things that are online but anyway if you've missed any of that just look at our slack channel and we can get you instructions on joining that the other thing that we launched this week was our our experimental version of the hub api's and so this is a version just for hack FS participants but it gives you an extended API set so you can use all the same things for API key generation threads users buckets all of that stuff is in there everything that's in our production Docs is available to be used but it additionally has the ability to run bucket archive commands which will push will push bucket snapshots to deals on file coin and get those stored with miners on test net and provide you back the deal information so that you can do things with deals on file coin in your app or on the command line so that's super cool sandir just pushed a big release to buckets late last night we'll work on getting some of that stuff into the production api's shortly but if you missed that that's over on our slack channel we just announced our releases so but lots of cool cool things come in there for making use of buckets in your hacks if that's what you're doing and then I think just a recap on some issues that we're seeing that may be a worth discussion discussing I think that there's going to be a bunch of power game questions it seems from our our support just a lot of people using the power gate javascript library and interested in talking through that and then I had a little thread on our support channel about identities right now our API is just use a very simple key pair based identity but I'm just trying to explore you know where we should expand to and so I have some ideas now on what what might be coming next but if anybody's interested in talking through that stuff and then Carson or Aaron do you think there's anything I missed there maybe we just jump into any questions people have yeah I think that's a pretty good summary oh yeah yeah I think this let's just jump into okay so should we do the I mean there's not so many people we can do hand raising or people can just jump in right yeah I think that's fine I believe people should be able to unmute if you can't change that setting yeah go ahead job guys can I just share my screen for a moment so that we all know what I'm what I'm talking about okay all right [Music] already can you guys see that mm-hmm so this is the basic idea it's a it's a Python financial financial data app ideally what we want to do is add a UI on to it so that the end user can get a quote and an Associated chart with it ultimately what we want to do is have it so that it would be a financial data store where and users could get historical quotes let's say you wanted to see a quote on Apple or a chart from Apple say from 1980 to the present in traditional databases that really aren't any products that do that but it would be very useful my question is the way we have the app now it's plugged into a Postgres database where customers can kind of well the end user can kind of go get their quote goes into Postgres pulls out the information and creates the prince2 chart also could create a CSV file with those historical with those historical quotes how how would this app be able to plug in to power gate then into into file coin so that the data would be stored there and then the end user could pull it out is there is there an ability to do that that anytime the end user requests that data that it can just go in it can go into file coin pull it out that's question one question two is since because it's a it's a Python app would we be better off using Highgate for it or does one have nothing to do with the other and we could just use that that's sweet of what Andrew did in this video two weeks ago we have Lotus power gate and ipfs all in one package maybe to answer the second question first I mean definitely the pi gate stuff could could move you on quickly Aaron also just started publishing the Python packages for the grcc API directly so you can you can also use that if you just want to be calling power gate functions from Python Aaron anything maybe dad there about that yeah maybe let me just explain kind of how those pieces fit together a little bit so so pi gate at least my understanding of it is just a wrapper around the G RPC bindings that communicate with the power gate G RPC service in that power gate G RPC service is just one one service kind of exposed by that system of power gate lotus in ipfs that are running together so so choosing it's not choosing pi gate or you know target ipfs lotus its they're really you know one is an extension of the other or a client of the other so I think if you have an application written in Python using you know those if work continues on PI gate and then it ends up being a nice client that's easy to use to communicate with power gate I think it would be really good option if you find it it isn't really to your liking and you still want to use Python then like Andrew mentioned we're publishing the grcc bind generated bindings as a Python library in the pipe I you know packaged index called G RPC - power gates - client so you could build your own client on top of those G RPC bindings okay and then not even have to really use pi Gate you could go I could go directly to that yeah but I mean you might end up writing a lot of the same kind of wrapper code that they did they are writing it for a PI gate you know - because the GRP see by me like using G RPC bindings directly it's kind of a lower level API it's not as nice your tongue is it's not you have to like you have to like wrap protobuf calls a lot so yeah so so usually when you write like a client library on top of some G RPC bindings you do the work that it takes to kind of like turn that lower-level ugly API into kind of a prettier easy-to-use API so both seems like it might be yeah I mean definitely if if Highgate is a good library that you like and it's complete and you're usable I think that'll be the way to go the reason we did the little motivation there the reason we did the Python releases is because without those they were having to manual in pi PI gate they're manually basically wrapping our api's and the protobuf definitions of our api's but now we automatically generate these bindings every release so they can just pull in the latest release and get those sort of bindings automatically so it was just to help them kind of keep that up to date faster and Erin had some big API releases or API stuff coming out anyway so got that in there so yeah anyway so then the first question is well does that answer the second question sounds like it does so yeah that the end user can just get the data dip into dip it's a file coin get what they need I guess it would be in cold storage let's say something that nobody really gets quoted on that often yeah I think that did it okay cool yeah super thank you very much appreciate it hey everyone oh yeah I mean we can talk more about this tan slack if you want but I think depending on how users are interacting with this data like how dynamic it needs to be as far as like querying for like opening certain fields in the data or only certain time ranges if I mean that kind of stuff is really typical with a database like Postgres right but if you're talking about pulling data out of file coin it's a little bit of a different thing where you're just gonna be pulling out a chunk of very static data so that's one concern that I had when you when you mention that so I think however you use file going you just need to understand kind of the nature of how data is stored and retrieved and file line it's it's kind of slow you're pulling chunks of data you're not really able it's not a very dynamic kind of like database query kind of like API you know and also depending on how frequent any data set needs to be retrieved by your user I think you definitely won't want to consider using like that I empower gave the hot storage or ipfs layer to kind of make that data more available so you don't actually have to retrieve it from file point every time you know it's or else the users gonna have to pay to retrieve it from final point every time and you don't want that actually there would be kind of two uses for it it would be that that static that static Jim won't long-term data storage just for somebody doing like technical analysis of stock ones good all right one's good sell it but then like somebody using hot storage might be somebody who's trying to write an algorithm for a trading bot which that would have to be very dynamic data so I guess kind of pick and choose which which bucket it goes into hot or cold or depending on yeah or else you might want to consider also like textile threads database is a more dynamic way to interact with the data you know maybe periodically when the data the whole data sets pulled from cold storage maybe you parse it on your application server and load it in a more dynamic way into like a textile like a thread database one question about that okay yeah my query again one question about that who's creating that index of data are you doing that kind of as a service right now actually this would come from through pandas data reader actually the new data would come through through pandas data reader from hook up to New York Stock Exchange or Nasdaq or or an exchange such as that that's that's where it would come from but they only go back they only go back a certain a certain period of time like you can only get three years of data where if you're gonna do real thorough technical analysis of you know any kind of trading instrument you have to you have to have a much bigger sample space so I'm also thinking like where you know where would that data feed come from that's something I haven't figured out yet and that's where the integration into into this into this whole set up with alkaline and an IP FS you know I kind of have to figure that out later but for hackathon purposes you know just for the next whatever it is three weeks the information that you guys are giving me is kind of it's kind of what I need okay so but I just like clarification there so what happens is a user will come and they'll actually generate their own feed from one of these api's the first time and then what they'll do is they'll take that CSV or whatever and they'll put it in power gates so the next time they need it it's just there and they can add more on top of it or whatever that might be some users and some users might need it to be dynamic so for example let's say somebody were trading the stock of Apple or Google and they trade the trades like water it trades all day long so you would not have that kind of data go into cold storage you want it to be always accessible in hot storage so that they could yeah kind of like that up-to-the-minute quote but it's them but it's them creating that data from API calls to the ya know that so that's cool that's a good clarification because that means it's them that will actually put it in hot storage and then that will pull it back out the next time they need it for the like they're they're kind of a closed loop of their own use so that's cool so Aaron that sounds like they don't actually need anything super dynamic cuz they're the ones that will create it so they could just expire cold power gates Eid configs and create new ones for the updated content or have like an append system where like new content points at the old content so you can have a series of deals in the CIT something like that sounds doable though okay and they couldn't they could get in and out and do what they need to do and it would be quick enough yeah if you hit if you issues there there's a good chance I don't quite understand the setup so we should just chat more like Aaron said we can jump on slack oh cool yeah nice that's great thanks so much guys anyone else I got a question I think I'm hand raising I don't know like these these symbols confuse me actually yourself that was for me of course knowing these are good give myself a thumbs up so I know you're going in pretty good there and you something pretty good so thank you like naturally in my development process I yeah you get down on in and debate I'm still looking out in the basement but I haven't old saying if you have it tore tear and tore down it's replacing the plumbing you might as well get the electrical so the issue that I have is that I've designed my subscription blog such that we're gonna have an archive folder and a current folder that's it please whenever you subscribe to months of Jonathan karate is awesome blog you get all of the archives so whenever they use the smart contract it's gonna populate the array with their address and the date/time stamp and then it's gonna actually push them into both arrays so you're gonna have two keys we're gonna two buckets one encrypted bucket that's archived and whenever someone pays once they automatically get added to the group for the textile bucket for the hub bucket when we call it's just the bucket right there added to the group that has access to that so when they get the session token' they can read the issue I have is the current bucket so like I'm trying to think about this in such a way right when you pay you get access to the current bucket and then I need to rotate that key in that bucket somehow for each month like what do I do cuz when I just create a new bucket for each month that's what I'm thinking and so well I don't want one for everybody because I don't want the web page to get filled up with like months and months a month I just want it to be current in archives right click an archive so go ahead there's also the possibility so you can also like in do what's going in the bucket it's like the blog post it's awesome so there's also the option to like individually encrypt like on a per file basis what will happen to the bucket with a password like so basically you just give them a new password every month in there well you'd give them a link with that contains the password probably so that when they click on it they would get the latest blog that'd be awesome yeah so what you're saying is is they encrypt the post itself yeah yeah is an option in the bucket buck-buck command line thing there's like an unencrypted one so like by default if you have a private bucket it does all of the like encryption stuff like transparently and those keys are the like so if once you're part of that bucket that's it you're in but there's an additional layer where you can actually like individually password protect a single file so if you do that for each month blog post with a different file you get a different password and then you could just like in your you know and your email subscription like whatever however the subscription system works they would just get the new password each month or a link that embeds the password and you're good to go that's to 1995 I appreciate that but like it and I still may end up doing that so I promise you I want it to be that like they go to like so look that down so I want to mean this may not be timeless but I want them to be able to go that can't say current time so that they click the link I love the functionality that is already built in to where when they go it says type in your email they click it they get the blanket log so it gives me the session to open up OpenCL and then they're good and then if they if it I guess I haven't worked out the usability here but when it comes up they would just click that you have an archive bucket the other bucket so I guess I'll keep that in mind but if I would I could just create a new bucket for every current month right which was kind of it this is a hybrid between what Andrew said what you're saying right I could just create a new bucket every month and that would be the new one yeah that would work too yep yeah that's what I'll promise you how's that URL gonna work right I get it new you you relative you bucket though right I knew my PFS sorry we're not coming you all right you can't see ID what are we calling this I'm CID what does that pass call you get a new like IP NS CID yeah every bucket yeah yeah so I'm gonna have to my naming convention for right within that no I was just thinking there's actually something pretty interest in there maybe it's a hybrid of this where you could I don't know if this is this possible Carson can you change the password on a bucket I guess not I was just thinking you could actually delete I'm just thinking you could actually use the same bucket delete the old document move it to the archive and create then add the new document but you definitely do that you just need to change the encryption of the new document or I could change the key keeper bucket I don't know that you can yeah sounding it though right it sounds like an awesome idea yes great feature request yeah that was kind of what I was trying to get out with the like individually encrypting the files it's like each month you encrypt the file move it like decrypt it move it to archive you know put the new like routine encrypt it with the new one you do still have to get the password for it somehow but I'm sure like you know you could also have a thread like a subscription thread for the user when they subscribe that just gives them the latest passwords something like that yeah like super challenge user friction well I mean sorry so they wouldn't actually do anything with the password like the password would just be there and would be used when they access it so they wouldn't have to type in the password I'm just like it would just the system would unlock it for them automatically so you're saying would be part of the URL string that I'm giving them or would it be built into their basically their identity that's all machine somehow well you could do it either way you could do it so that they've got like a thread that just sinks in the background that's in that distinct the passwords there and then you know your system would or your your app or whatever we go oh look here's the password great you can see this or yeah I mean the easier way to do it is just to embed it in the link that they get each time and be done with it related here is actually the thinking about when when that needs to change because basically you could create the same password for so like in your subscribers list you have one subscriber you're gonna create a password anytime you add a new subscriber you can just keep using the same password for every month for all the users it's actually only when a subscriber leaves that you need to generate a new password so you could just have a trigger that if subscribers leave you could generate a whole new password for everyone and start start the next month using that password instead so there's not so many passwords you'd have to so actually you could make it so that you just generate a new bucket only when subscribers leave if that makes sense so this is like designed to be like a we haven't gone this far yet and I'll just give you a window so we're gonna basically be able parameterised like the different types of subscriptions and ideally the design is that you pay a dollar whitening for article but then you can get monthly for like people just want to read one like if there's someone you have to subscribe to you and I want to get away from like merchant services evil like addiction like just slavery and so this is the beginning we're studying very simple okay trying to get encrypted content that people can read and click through that actually works that somebody can you know like a normal person like not one of us can actually use this blog functionality and so I think that I think I'm gonna go with probably the new bucket and I'm not the best with the CID undo URL mapping or something because that is clean because then they when they use the smart contract it's gonna Cod wait those arrays and it'll be totally transparent to them and they'll click and they'll go get all the archives and then they just won't be able to see the new ones and then that involves a minute least amount of steps but I made it with some mixture of these let's just see if I can get this thing right right now I'm learning Hugo which is my new web platform I started the check I didn't do a job you guys much better it's awesome yeah yeah it's way better but like now I yeah it's a long so I don't look like the biggest theme ever and now I have to customize it so I'm now beautiful on side thank you go very much and yeah for this and eventually we're getting a react this whole thing's gonna go great I'm just looking to see in our bucket documentation if there's a way to change the password but I think not right now how do you match the bucket names in your react app Andrew how do you match those and yeah cuz I've read that app but I haven't been able to get it to start so just thinking what am i doing the photos the photos you have a rack native Photos app and those book completely transparent to the user they subscribe in threat right these buckets so basically that's like single rider buckets so if the user creates the bucket but they're not encrypted so then I can share the IP NS address with anybody who wants to view it okay yeah let me explain it because it's actually pretty neat so you as the owner of the bucket you don't really care you know the structure of the bucket so the app can just do anything in the bucket it knows the it knows the schema and everything but when you share that IP NS address you imagine that you're just sharing some dag with people and they have no clue what's inside of it but most gateways on the ipfs network will look to see if it's an HTML folder and so if there's an index.html on the root it will just render that and so what I do in the app is the user creates a bucket that they own and then the app drops an HTML file into the root in index dot HTML file into that root that just has some really simple Java Script to parse all the photos that they're adding to that bucket and render them in a gallery and so it's really cool there is that then the owner can update those images add up delete whatever and they can share that IP NS address which just rendered them as a gallery so they get this public gallery on their on their images did you just say it wasn't encrypted though this one is a public bucket yeah sneaky so even though they subscribe to the thread I mean someone else if they found it they can still see it then yeah well the whole idea has to share the gallery so that this is for creating public galleries yeah so it was kind of like if you wanted to build like a Flickr clone this would be the basic start of that I was thinking I was like a Facebook thing sorry for that you sent I'm sorry for the dirty word just yeah my computer bleeps those outside it does it's just like why not Kate had been what do you have on there Dropbox all right thanks I see another hand Taryn yeah hi I do Kyler I yeah like something regarding like we have some update so I've been in like continuous discussion with Aaron from the past few days and we were looking to you know have this offline signing for for our architecture like yesterday we had a one on one call with file Queen and with the fine point team and I discussed the architecture with them so they were saying like it does completely makes sense but right now the team is like you know is just started doing work around offline signing stuff so so maybe like for this hackathon and for like next month we can you know just go with the power gate and whatever the current architecture looks like just like we can just run the power power gate mood ourselves or maybe like the hosted provided by you guys and just two or our data on our file when addresses and for for now and and you just have like full control and on it because like we are using an encryption so Hey so yeah so I just wanted to yeah I mean that makes that makes a ton of sense actually because well good on the update about the offline signing but also just makes a lot of sense because it will reduce your what you have to develop for the next couple weeks and kind of MVP status plus buzzes on test net so like not so much that can go wrong right now so yeah it sounds great yeah have also shared me the links late where I can you know just see all the RPC methods so basically everything is like end of the day it is calling that RPC method I so you need to just support that but they are just asking for the time right now they are so yeah we can just wait and just go for the dish net like does it make sense like I'm asking it again but yeah yeah I think it sounds awesome yeah thanks for the update there you definitely liked where you were going with that idea is kind of like on the bleeding edge of file claim and therefore kind of are already on bleeding it to power gates so we are like literally figuring this stuff out at the same time you are so yeah so it's like I was learning this stuff but go keep it up man who else anybody else with a question if we don't have any questions I'm gonna put Carson on the spot for some dad jokes we'll do that for 30 minutes and then always really with puns are my specialty bartender says why the long face just just a question yeah yeah I'm just curiously as pocket change the easily same kind of stuff we are used to and then when you are really planning that service you know so a lot of that a lot of that we're just trying to like file coins so early we're just trying to figure out and this hackathon it's gonna be awesome for us we're just trying to figure out how people want to use these api's and so that's why for us it makes a lot of sense to have like the power gate be kind of raw and open so that people that want to use that stuff can just go use it and we can get some feedback about look like how you're imagining organizing deals and who you want to be in control and manage those things and and then on the hub side of things our host api's we're just like slipping them in in some simple ways at first so the first example that is with buckets like the this experimental version of the hub you can do all the archiving that get you on file coin and that really rides on this architecture of the file coin the idea that things can live in the hot lair and be available on the network and then you can archive them which is - in which is in bucket terminology but on power gate that's just moving it to the coat layer and so that's sort of our nice and most straightforward integration there but we're also well we're also exploring kind of two other concrete things one is we're exploring the idea if you're any developers that have already dug into the power gate there's the ffs API which is more or less the primary API you get an FS token you can map that to a service or a user or and and so we're looking at every user of the hub would get a new ffs token so that they could have sort of the full ffs API available per user and that's pretty cool because that means that every developer would get an address on file coin they get the full ffs API it would have all the API security stuff that's built in the hub for them to use it but then the next question is do we do we mirror that down into developers users themselves so then your app user could have their own ffs instance and their own API that's something we're exploring and then the next thing kind of more like deep integration is in the threads database so there's a few big chunks of the threads database that are missing still one is one is more advanced ACLs and the other is snapshotting and so snap snapshotting is super important for threads because they let you wrap up the current state of the thread into one item and but when we implement that in threads it actually gives us it opens the door to do a lot of other really cool things so one of them is that we can allow the developer to we're not visiting concrete exactly how it work but you can allow the developer to set the thread for how much verification you want on that snapshot so for example all thread participants maybe sign the snapshot and say yeah for sure that is the current state of the database and then they can move to basically building off that as they can all like collectively move to that being the root of the next updates and so it's really cool about that is then you can have mutable ACL in your database because you can create a snapshot use that as the root of a new thread with more people in it yes people just like just like dissolution has this concept of so you can just totally have a snapshot of the server and after that you could just spawn it into another group or maybe somewhere else totally exactly but the next door that opens up for us is because file coin is really great at this sort of cold storage archiving that is a great place to put your snapshot and so you would have thread commands to archive a thread which would be take the snapshot put it on file coin and and start storing it long-term so that's kind of like that's just in our heads we know that that's the direction that that will go but it's just about time and human resources and anything anything you guys are doing related to like providing some caching service like reddish maybe it's like something on the fastening of the things or we can just directly use Redis on top of our infrastructure when we I don't know curse int is that does that trigger any thoughts for you you can repeat the question something is also planning for this caching layer also so I'm just I'm just asking it's not like I'm also clear so it's like it's like when let's say we are using power gate and we want to fashion up some experience right and so that we can just catch some data and you know just include readies for that for that we need you know something for that and I'm just saying like are you guys also building something related to caching also for like like like some library around there so that we can just you know integrate that is like service very very easily with text right yeah I think that's well so you may see Ignacio just posted in here we could think of a hot storage implementation that uses a different data store for storing data so you would you could have a Reaper Redis or a you know or something like that as a local database or or even potential like a you know browser or something if it's a JavaScript yeah I mean so our threads DB JavaScript implementation the data bit database implementation that does basically have a local cache in the browser or on the desktop if you're running in a node so all the queries actually go to the local one and then updates are sync to and from the network so you can imagine something very similar like to that I think for the power gate yes and one thing we have discussed actually as a team before is so ignacio mention we can think of a hot storage implementation that uses it another data store but you could think of also like parallel hot stolen tations if we have our distributed system you know like a cluster of aggregate news running and if we have some cool library around right so but yeah it's it's something very later on things so yeah yeah yeah yeah so for sure like I'll update like we are totally in process of indicating power in our application so while update like yeah please do yeah all right like magic well we're still it was still at that magic stage with a lot of this stuff so when it works you're like I mean I know it was supposed to work but like damn it worked that's pretty cool I mean of course it works we won't tell about the number of times we cried when it didn't work yeah today he tries try to connect to to work his pockets example and it well discourse I saw I saw this issue I wrote back I wrote back in a thread to him to see if I could take a look because I rings a bell that's something like this happened when I was building some react examples but it was pretty quick to get around and so I just wanted to see if I could try his coat or take a look at it except I'm not sure yeah so well first of all I thought we had cores enabled on that a those api's but maybe not do we do I think it's something to do with the react app launching I think yeah the other thing you could try is you could try accessing it over like loopback versus localhost versus whatever to see if that makes a difference because some browsers treat localhost and like one 27001 differently so you could try that as well well yeah the best thing is maybe just if producible example was that the browser it could be related to the browser or well my question for him was is the react app running just a static react website or does it have like an express server in the example in the image in like the J's examples repo you mean in which example though or the bucket photo gallery so there isn't a yarn start there that might be one problem I haven't tested this with yarn I that might can't imagine that leading to the problem but definitely just try the default NPM run start NPM install on NPM run start and then the other question is yeah there's no server involved here yeah let's take this one over chat because I don't have a good answer for you right now yeah that photo app works if you drop the key in then you run your NPM like you do your react app sauce yeah when you demo it looks awesome but I my shitty machine doesn't work so like I think it's me other problems like actually developing someone wants to look at that's we're gonna add react native later you know in our leisure I did follow all of your instructions to like with the whole like Xcode and everything else for iOS one store whatever that find the mobile stack to always have weird issues that sneak in there so yes that's why I always didn't want to waste your time well we're happy to we're happy to try because we can always add it to the readme or whatever if we could figure it out Oh neither Android nor nor iOS minute and I had this emulator already started and I've used it for a different react app but mine uses expo so I used it like on my ex-wife used it to just react native I use expo normally an hour is fine but I have not been able to get react with cloned it basically you have like four steps that you do and I did all the steps I blew it out like three times and tried it like all different ways when it starts it gets that it gets a crash it's actually a crash from Xcode it's air 65 where it's it's a bill there it's one of them error because X code XK build produces has to do with it doesn't have a path to config blah blah blah so I think it has something to do with an Xcode configuration setting of some sort okay actually yeah still yeah chat chat that one to me because when I did when I did when I put that example together I definitely hit issues and but then you think that there you and you think he's like you're like that stack confused as you say not sure and so I I might not have documented them and I might just not remember so if you share that maybe it'll ring some bells for me and I'll bump it I'll bump it yeah you know like I said I figure that's fridge again the road okay let's get this subscribe blog first for then we'll worry about you know native cool what else we got any questions Carson what coffee you drink in today I say hey I'm drinking a medium roast from the Fernwood fragrant coffee roaster just like roasted about fifty feet from my house lovely nice already posted off actually asked question related to that example is blog and secret keys or secret Frances for every subscriber so basically more about maybe details how its implemented how this secret Keys is stored I mean is it encoded for every public address of every subscriber and so is there like thousands of subscribers so it'll be thousands of encoded secrets to the content I mister I maybe didn't catch the fur is this a question about did you say blog or log blog oh so there's a question for karate yes yes it's a related question so you can just buckets and various option to go is password and you can specify who can access the site so there is only one password and it's up to market owner to send this password email or something to anybody else the res option to encrypt this password their address like this a symmetric key so you encrypt to public address of everyone like Bob Ellis etc and then they can decrypt it as a private key I was it organized I think you're on mute and I am you glad I was on mute but unfortunately I'm you so you're saying that's another option I can use correct that's what you saying right I think he was asking but I think it is another option I mean it it it doesn't I mean it depends just on what channel I think you want like what channel you want to use to get that password to the users if it's an insecure channel than doing something like encryption / like user identity sending them that and then having them decrypt it locally obviously all seamlessly they're not doing this like directly then that is a great idea but ultimately they're all going to end up with like the same password so if you're worried about like someone leaking the password I mean they could leak it whether you encrypt it for them directly or you don't so yes if your content is good enough someone's pirating it dude you did a great job so honestly you know you get huge I mean that's the right way I find that that's a good idea people are leaking a blog that's high on content and you can it monetize it in different ways well I just wanted to be seems I love like I like the way I mean so my favorite thing but I like the way it's quick you get a session token' i watch the whole process the session gets loaded into cookie I'm good I can use that with Hugo I'm in good shape I think we're in we'll see I'm not gonna get in this fancy like fancy encryption and fantasy like encrypting people's pokey and like allow them to decrypt it sounds awesome example I use for my Jason's - defiant by Camilla Brousseau her I hate subscribing on sub stack is that they knew when they have out their subset I can't stand that sight so that's my reason is to make something better so I can subscribe anyway well yeah I mean the TLDR there I think is Alex yeah that's tough that is a reasonable thing to do and I think it depends a lot and like how your user network how you want to structure your user network and identities and things like that yeah so I was thinking about this approach so as you mentioned before you encode every article individually this different password I mean is a writer and then you encrypt this password every subscriber so you can for example create that that will be for example JSON array of encrypted passwords for every subscriber so there could be post content and companion file with an encoded passwords to this content for every subscriber and you can do this for every article but there's a big problem here is when somebody joins or leaves this subscription yeah I mean you get but I think the part the other part of it in Chrono you're probably gonna agree with me on this is like once you've the leaving thing is less of an issue like I think once you've given someone a password for any content at some point in the past you just have to assume like that is effectively compromised they have that now they could leak it and so it's really just like I don't even think it's worth mitigating against that like threat really but you obviously don't want like someone who has left to get future posts so you know you want sort of forward secrecy but you don't really care so much about backward secrecy yeah that's why they get all your constant not only that like sharing passes spawned the creation of the new operating system so let's hope so I always think that email is the perfect is the perfect design to always think about these things like you can't you can't delete an email from somebody else's inbox like once it's gone it's gone I always think that like delete is also a user interface it's not data data doesn't know delete at all so like getting people removing access to other people of data is just UI and that's not very secure ever such a video you drinkin oh you stop that yeah yeah that's the idea like you know give them all contents all archives and it's honestly I do think about this so a lot of people want to resell content that they've already done the work for it so why need get paying more than once for the same work please think about that so there's a lot of moral and ethical things that ipfs and the new decentralized internet we're building so this is a really big deal people don't realize this is big of a deal you know and government and cause it to be made at least the last year so I mean I mean that's why I resign I don't want to your mind I was like dude you're on ipfx these guys are giving away everything for free to show your stupid idea you're gonna tell them exactly how you're building it I was like ya know what you're going to do like you know whatever looks like I'm done so I've already talked too much fun I'll just keep on going so yeah thank you thank you as always for your questions and any last questions for her today hey this is some action hi guys so yeah I so if you remember that I had this idea of working on a collaborative music platform and and initially I had thought of a design I know it's towards the end of the discussion so I try to make it quick so initially I had this design around like power purgative and ffs and then recently I have like I've tried to relook at the design and try to use like pockets and the threads API and while doing that I kind of I started looking at the the authentication part of the documentation and so like I came across some issues while using trying to like document well try to authenticate through the go backand and I raised initially on the github on Gator for go threads so while in that discussion itself I spoke with Santa peck and that was when I kind of like thought about the idea a little bit and maybe thought about like totally scrapping the backend out of my application totally because when you think of it in an application like this you probably don't need to have like any kind of private data because I want to have maximum collaboration on any audio that has been posted so basically the ideas that a user will pull like submit a publish a track and any other user could based on the search that he or she makes would be able to like on that particular track and republish a new track so probably I don't actually need a database to or I mean like a centralized database that would for example like lock fuels for particular tracks for particular users things like that so I was thinking of absolutely going like server lists and have just a front-end client to client communicate communication approach while having the threads API and threads database to store all of this information and have buckets as a store for the audio tracks so I just wanted to like like run it by you to maybe if there are there would be any more challenges that I could be facing with this particular approach yep I see Carson thinking the only thing I see that may be so right now I think are like user authentication model is pretty thin so right now it's just like when you create when you create your API keys and authenticate based on key pairs right we're in discussions right now about what the right way to go forward is but I don't think we'll have anything significantly different before the end of the hackathon so just be aware of that Reverend put together so one thing you might want to do is just have like a really thin you might want to still have a really thin server that just will allow you to do more authentication types so like allow people to log in with any ro auth provider so you don't have to force them to be like a private key holder right so that would just be like nice UX maybe in the road term and then you could remove that later if Oh or don't do or leave it even like like like you propose and leave it sort of light and don't do that but by aaron has a nice example called the note starter in our in our repos example there's like the hub browser example both of those ones would just give like a really simple back-end that then you could map things like allow people to sign in with their github or with their Spotify and get a get a key pair that then they use for all the rest of the api's and next time they log in they would get that same key pair that just might be nice UX but Rick yes so this is the hub browser repo that you are talking about right yeah there's another one let me share it let me share actually I think I need to merge pull request real quick in there while I'm in there but right so this isn't really this doesn't really involve anything textile except for it import it currently has the latest libraries is dependent you can just start using them but it just gives a simple framework for for having an authentication endpoint all right all right yeah makes sense Thanks and yeah I'm actually thinking of running a very thin server for example like when a user would make a search for a particular track based on like for example a user would need to like particularly need just guitar tracks because that person wants to add some drums on top of that so forth for those kind of searches I was thinking of writing a thin server anyway but but like for the authentication part of is the discussion with Santa Beck was like why don't you just like have the client directly authenticate with the text of a textile just to basically get those tokens to be able to make push buckets and add files to the to those buckets and things like that so all right I actually think about this a little bit more and then we'll get back to you guys regarding whatever changes have thought about go via already yeah yeah I think all this makes it's like you could go super light and do it that way and you could add a little layer here but like you said if you add a little layer that gives you another place to add indices or like search endpoints and things to which could be totally great right all right all right thanks anyone else are we are we at the end of office hours we're technically at the end but it's a final question I think we're good cool well awesome is always really excited to see everybody and hear about some of the progress and hopefully any of the issues were able to unblock quickly or unblock some of them are today but we're trying to be as active as possible in slack so just keep the questions come in and we'll try to keep you unblocked so keep up the good work so you guys thank you thank you thank you thanks everyone 