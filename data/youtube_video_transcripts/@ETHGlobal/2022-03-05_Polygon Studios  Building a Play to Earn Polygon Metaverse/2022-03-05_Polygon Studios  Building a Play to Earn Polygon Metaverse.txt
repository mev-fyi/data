um so we're good to begin hello everyone uh good afternoon good evening good morning depending on where you are in the world um welcome to our day two of workshops here at build quest um we have saraj raval from polygon studios who's gonna be doing a workshop on building a play to earn polygon metaverse um questions go into the zoom chat uh and with that being said i'll pass the mic off to siraj all right awesome thanks anna so hi everybody today i'm here to talk about building a play to earn metaverse with polygon that's a lot of different very high trending words all at once i understand that um we only have 30 minutes so we're gonna try to pack in a lot of very valuable information into this time period so let me just start streaming my screen right now so we can get started here so if you go to polygon.technology ecosystem this is our brand new web page it's a landing page that the marketing team has been working on for weeks now uh but what we've done is we have compiled our entire dapp ecosystem into one page so there are over 7 000 apps indexed on this single landing page here and what we can do that would be related to this talk is to go to the nft section so we have categories for all the polygon dapps out there and we have 157 games right here you probably have heard of decentraland this is the one that snoop dogg bought a house in a mansion and then people started buying houses next to them for that clout right um you've probably heard of avagachi it's a play on words for tamagotchi the famous game from the 90s atari the age-old brand in gaming is they have their own um dap a gaming gap here there's a lot of different possibilities here and i i would definitely suggest if you want to learn more about the metaverse and examples of play-doh earned games all of these are play to earn games right so any type of game that you build that involves using a blockchain that is a store of value that can be used outside of your system that is a play to earn game because anything that is connected to that for a player if they have a if they have access to a wallet in the game they can then use those funds to do whatever they want and that's what a lot of these games have done there's so many different strategies there's so many different uh types of economies that can be built we can have um assets that are nfts that can be sold outside of the game um like is the most popular case for that it's called taxi infinity so if we go to x infinity um this is perhaps the most popular play to earn game today um and it's one where people will earn different assets uh players will earn assets and then they will be able to sell those assets these nfts um outside of the game on these marketplaces and this has actually become a full-time job for some people in the philippines and in other parts of the world but the you know a lot of people don't like axe t infinity they say it's like a really bad game um it's not that fun but i think that they're looking at it the wrong way because yes this is a really bad game but it's the most fun job you have to think about it less as a game and more as a job a means of income because uh you know one of my goals personally is to get to a world where money is irrelevant so it's not that money doesn't exist it's just that we don't have to be so focused on it for our day-to-day lives like paying rent and all these things and getting to a play to earn gaming reality where people are playing actual fun games that are also earning them money that's where we want to get to and we're not quite there yet that's what this next stage of uh r d evolution is going to get us to so let's look at an example of what a play to earn games looks like okay so i want to show you a few tools here all together so i'm going to first create this gaming smart contract in solidity which is the smart contract language of ethereum and that's going to be our blockchain element okay everything else is going to be you know super standard for building a game but let me just name this right here i'm going to call it gaming contract dot solidity okay that's all i'm going to call it and it's an empty file and it's running in the browser in this online ide integrated developer environment okay so let's see what kind of game do i want to make i want to make a game that is really easy and it is a 3d game and i will be able to collect different objects that are scattered across the map and these objects are rare collectibles of a kind they are teddy bears let's say they're teddy bears and there's a hundred of them spread across a giant mmorpg map and this is a 3d game so how am i going to do this well because if i want it to be 3d i'm going to use my favorite tool for this would be unity unity is more open source-y than the other one but i would use unity here and i would download unity it's also i think unity is free not the pro version but one of them one of them are free um i've done plenty of unity development myself i had a game you can click on create your game unity has got all of these uh you know very easy ways to get started so so many amazing tutorials on like getting started um you can agree to download it it's going to be a dmg boom and there you go we have unity hub that's going to set up it's going to download my game i'm gonna get set up so actually unity itself is quite a massive uh download but i'll just show you this process of adding unity hub and then you know opening it up and it's gonna ask me well what part what parts of our stack do you to install we have a 3d game creator we have you know something that can uh deploy games to different platforms we have vr you know all of these different things but you really want to start here from unity and um you know this is going to ask me where do you want to install it 14 gigabyte file so this is going to be big okay but once it's installed it's going to open up the editor and once we have our editor open it's going to we can insert a template so like some pre-built map let's say a desert okay there's going to be a lot of those and if we want to see like a place where we can get assets um before our game we can go online to the unity asset store and we can find any number of assets so let's say like i said this we want to collect teddy bears let's say it's in a desert so here's a desert right here so it's got all these desert assets and i will add it to my cart and then from the unity hub it'll connect to my account and all those assets will show up here and then i'll drag and drop them into the game so okay so i've got this game and i'm in there and i'm collecting different teddy bears alone okay but now i need other people to be involved well then i'm gonna need an online element for that right i'm gonna need an online element so what am i going to do for online elements so if i want an online element for gaming there are several um options here one that comes to mind is like i think it's called photon yeah photon that's what i used last time so the photon will take this unity game that's living locally on our machine and we can try it for free and see it has support for unity right here um what it will do is we will download this as the plugin to our game and then we will be able to export a client to a desktop for you know different you know mac windows ios whatever you want android and what this client will do is it will allow people to have user account signup functionality so anybody can join our game so this layer this multiplayer networking layer we can add on top of unity once we've built our 3d uh game and then on top of that after that second layer of this is now an interactive online game that's where we can add the money aspect the play to earn gaming aspect so if we look at what a character is in our game let's say our character is a humanoid which with two arms and two legs and they're trying to get teddy bears and all of us are trying to do that okay so what we're going to do is we're going to have to interface with the smart contract to make this a play to earn game in this case we want to make it so that the teddy bears are nfts and these nfts can be traded on openc openc is a public online marketplace for nfts it's not controlled by our game it's not controlled by anybody other than the open c team but the point is that we can trade our in-game assets here um all over the place so you know there's plenty of these game assets that people have already done this for for different games they're being bought and sold you know death by robot all this stuff you know there's just so much where do you even begin wolfgang what even is that right so we're gonna make our own smart contract to for our our desktop local client to interact with so this smart contract will live on the ethereum blockchain so we can have you know our truffle suite ready we can if you know we can download truffle we can download the ganache blockchain so we have a test blockchain to deploy it to before we deploy to the real blockchain which requires money um or we can use something called hardhat so the other option is hardhat and that's the other tech stack option for building a decentralized application whatever that is ethereum development environment for professionals so which one do i prefer well i actually prefer hard hat we can install hard hat very easily with a single command line command npm install and there you go we have a hard hat being installed right there so now that we have hard hat installed um we can create our first hard hat project and then we can add our smart contract to that hat project um but for the sake of viewability i'm gonna put that smart contract instead that's what we would normally do we would have it locally i'm gonna put it inside in the browser so we have something to look at in the browser um also feel free to ask questions once i start writing code i'm going to stop after a bit and i'm going to answer some questions okay but right now we're going to start writing this gaming smart contract which we want the back end of the unity game which is written in c sharp okay so this game is going to be written unity programs are written in c sharp we're going to have a c sharp client that's going to be calling this smart contract code so it's going to be communicating with this solidity code from c sharp locally on the desktop so we're going to pragma solidity and we have a version of our uh solidity smart contract that goes at the very top always and we're going to call this smart contract um let's see teddy collection that's the name of our game teddy collection that's that's our play to earn game that we are building teddy collection and it is of type erc 721 now this is the nft token standard it's also an ownable smart contract what does that mean that means that we as the creators of the smart contract own uh the contract and all of the funds that go into and out of it now ideally this would be a dow a distributed autonomous organization so a committee community shared ownership of this so remember in our teddy collection game we have a type of character and this type of character is going to be a uh this is going to be a humanoid remember that's the word we use we have a humanoid and then perhaps we have another type so we give players a choice they can have two types of humanoids okay so give players a choice of character that's what this line does and this defines our like main game smart contract okay now hopefully this will only be about 50 lines of code we'll see where we get to those so um what else we need we need a counter variable because we're going to be counting through a lot of array indices and um before i write out the parameters that they're going to be in the character the structure of this first character that i'm going to write out before i do that i'm going to answer some questions so let's see what we have here see how so how does unity interact with the contract is it just like a plug-in yes it is so let me show you that let me show you how unity does it so if we go to the unity um app store and we go to the let's see it's called the unity app store i'm sure there's an easier link to get there but i'm just gonna go there the hard way there we go and then i'll type in ethereum and uh your ethereum manager so a bunch of great developers have built all sorts of uh you know plug-ins for ethereum directly to unity and they have these like great video tutorials on like enter your speed phrase here like in the wallet and you're you're basically interacting with this unity editor but you have functions that let you um perform actions on the ethereum blockchain from it which is super cool and you know just looking a little bit more at this okay so this guy's kind of doing the same thing so this is c sharpcode.cs and you have you're able to interact with the ethereum blockchain from here as you can see you know it's pretty cool so like i built a game in unity i spent actually 70 000 on this game it didn't work out um but the other alternative to unity was unreal engine and i tried that one out too and i will say that unreal is like way better for graphics quality but it's also harder to get started with like the learning curve is a lot more intense for unreal and it it also you know i'm not sure what the tech stack for ethereum looks like in the unreal ecosystem i see that there is this nfti is your in-game item oh that's super cool i didn't even know that was a thing that's a new thing i so this like uh way of structuring programming is really interesting to me like this is very unreal engine specific where you're like building out this left to right um i don't even know what you would call this this is like a a call tree or something but i i think this is cool um so yeah like get a user's nfps by user id so all of these tools exist pulls the nft data initial call you want to reuse this over and over again okay so like we don't want to have to build this we'll just reuse what they've already written um etherlinker exec contract method with parameter so you're literally in this game you're walking around and you're executing ethereum functions as uh an in-game 3d humanoid which is super cool i actually want to try this now that i'm looking at this ether linker this looks cool um anyways so peter linker and then coin picked up vfx um so dope i know yeah unreal nft creation that would be a great tutorial to make i i think that's a good point um i might need to do that this one doesn't seem related this is just coin particles anyway where were we we were somewhere we were damn look at those graphics okay we were writing out code here okay so we were writing out code for our characters so what does our character have so our each of our characters we can give them any arbitrary parameters um i'm going to just say that for simplicity's sake we're going to have a type of character so you know that's the first uh parameter what type of character is this is either gonna be a humanoid one or a humanoid two which we wrote up here let me make this bigger humanoid one or humanoid two and uh that's what we have and we have one more um parameter which is life and life is a is a character is the integer amount and when two players fight their life they destroy each other's life but um so that's what this smart contract will do and what we're gonna do is we're going to have uh these characters they're in their game and they're going to be finding you know teddy bears and if they find one then we will want to mint that teddy bear as an nft that we own as a character so that's where this most important function goes in function mint teddy okay so that's what it would be like function mint teddy and the parameters for that function would be what type of character is minting this so that would be type character we've got to give that variable a name and um let's see what else so we would have another structure by the way so we have another structure called teddy and that's going to have some value which is uh like some boolean value or something like nft id or something like that something like that and so this mint teddy gets two parameters we want the type character and then we want this uh we want this uh structure yeah well actually that's not going to go in there i'm just going to keep that over here so we're going to start with this character and then we're going to say um we're going to use a function that we didn't actually write it's just going to exist it's called safenet and safement is a function that is found in this the erc2721 smart contract so if we go to open zeppelin which is a library of templates of smart contracts and we click on contracts and then we type in contracts token ercp 721 this is going to lay out all of these embedded functions for minting nfts okay so we are importing that existing template so that we don't have to write the code for minting we'll just call it as safe mint and savement is going to take whoever is calling this function and that the next id that uh is going to be in the list and it's going to mint that as an nft okay um so that's the first part um and once we have minted that we're going to look at what do we want to do after that so what what are what are other function calls that we want to do we we might want to sell on nft we might want to um what else what might what we want to do we might want to trade in game so perhaps trade nft and you know we would have one of those as the parameters as well there now um this is just in the browser we want something that's a little bit more holistic so let's take a look at github for an actual example that we can download and compile and run and it's going to be holistic so let's search for um play to earn i want you guys to get really good at searching on github just like you do on google because github is really a treasure trove of um data so okay so play to earn game protocol right here this one's really interesting so this is three months ago this guy has this play to earn protocol this is a hard hat file let's go ahead and download this and see how this works we're going to download and we'll open that up and now we're going to open up terminal let's see if there's any question i agree this needs more than 30 minutes that's why i'm just kind of just kind of moving here okay uh let me move that over here okay so let's make this thing run make play to earn game run that we found so we're gonna cd into it we're gonna see all right well what are the instructions here what do we need us to do okay we need to do npx hard hat compile we have to compile this hard hat repository but it looks like because i have a new macbook you're trying to use a non-local install hard hat and try again of course so i'm going to go um npm install i think it's like npm install right it should be like really easy and then i'll run it but while that's running let's take a look at the contract here like what's the big deal oh it's a single solidity file it is just one solidity file for all of this and it is about 109 lines of code okay that's doable okay so we installed hard hat let's go back compile it using hard hat okay done i think that's done oh no there's an unexpected error cannot find module dot end oh yeah i forgot that's a really that's a really easy fix what was the dot and one um that was npm install.duh yeah so okay and that'll do the npm install okay and now we'll go back to hard hat compile ah matic see okay so this is a polygon talk so by the way the only thing differently that we have to do for polygon versus regular ethereum literally the only thing is deploying it to the polygon network versus ethereum all the code is the same it's all solidity it's all hard hat and truffle and ganache and everything is the same you just deploy it to a different blockchain and then what happens is the polygon validators the network itself they're going to take the data from your game and they're going to post it um to the ethereum blockchain so that you get the immutability and the security and the decentralization of ethereum you know that source of truth that ethereum is but you get the speed the fast transaction times the low gas fees of polygons so you know the ethereum team they change their wording from l1 and l2 to execution layer and consensus layer that's what eth2 is these two they have given up on the idea that one blockchain can do both execution and consensus really well we need two and polygon is that execution layer whereas ethereum is that consensus layer so that's why we're deploying to polygon because it's not that these two will make polygon irrelevant polygon is a part of e2 scaling strategy okay as well as other blockchains but we're the best so because i'm biased and i work there so um invalid account we gotta fix thematic thing invalid value aha okay so we need to fix this configuration that's the issue with hard hats configuration so i'm going to open up this as a uh wow i need to install like a bunch of things but i'm going to open this up as a file and then i'm going to uh change the code so that the hard hat config file is working properly right now this particular configuration file is our is our issue i can already tell that's what it is i'm going to open up sublime and i'm going to open up that exact um oh i still got to add the um command line hotkey or something yeah so i don't wanna waste everybody's timing with this so that's fine yeah something like that that's what it is yeah sublime nope no okay so never mind all right whatever so we're gonna look back at this smart contract file and let's just take a look here okay so this person defines two types of characters in a game the character has an attack defense life sports experience great okay it's got all these things and they're going to define some details for the character they have this empty constructor which is there for no reason they have a get token details which returns the details of every character whenever it's called and then they have this mint function the mint function will say let's see you want to create a character so this code actually lets someone create a character as an nft they'll mint and remember and remit and depending on the type of character there's one of two types either professor or lisbon whatever that is it will define the character as a string given these unique integers so you're minting these character nfts boom boom boom boom you're calling this function from unity from c sharp you're calling this every time someone goes to a terminal or clicks on a hotkey or something like that um and then there's this heal function okay so there's for some reason this person put a a heal function in uh play to earn gaming smart contract why would they do that because it seems that the mechanism here that they've encoded into their economy is the fight mechanism so recall that if we go back up here we see the life force for a character whenever two characters two token ids are in a fight this function is called and whoever has the most life force wins so it's a very simple you know turn based strategy fighting game that we can just tell from the smart contract and we the winner of this whoever wins whoever has the most life force that person is going to get more experience points okay so experience plus plus healing is here because it is an economic activity the more you heal the more likely you are to win a fight which means the more likely you are to win money from the fight because you'll be able to um sell the nft of the character you've defeated on the internet because you won the battle so every time you're fighting someone you earn their nft and you can sell it on the internet now that's it that's all that's in this single repository everything else is boilerplate nothing special nothing unique the rest of this as you can see that's the matic the polygon network that's where you want to deploy this metaverges to if you want to start out with a lot of speed and low gas fees i'm sure i know users don't like paying gas fees but that's really all that it took is and that's but it's a super crucial component this smart contract play to earn solidity uh class file there's only one of them there's not multiple there's only one but 90 of your tech stack looks like what i was showing you unity you've got unreal engine you've got the plug-ins to interact with the network ethereum plug-in um truffle ganache hard hat um marketplace's photon for online multiplayer gaming um all of this stuff none of it has to do with uh the actual solidity code so remember solidity is a very small portion of your game but in today's environment it's how you're going to market your game because that's what people care about now they want play to earn games um they don't want just a regular game now everything's play to earn and i think that's super exciting you know that's the kind of world we want to live in let's see if we can make a game that is super fun and you're earning money from it what does that look like i mean we live in a world where i can literally type in like fortnight into this unity store and i can probably find an entire replica of fortnite to build off of you know fortnite map i promise you i will find one there he is there's the battle arena right there for 20 you know we live in a world where it's so easy to build off of existing um work of brilliant people you know so it just doesn't have to seem like a very daunting task it's just you know putting the puzzle pieces together all right so definitely if you're interested check out you know learning more about polygon and the metaverse to play to earn metaverse go to the academy it's what i've been working on at polygonacademy.polygon.technology and just go you know top to bottom and there's even gaming tutorials in here as well which you can find and all sorts of things quadratic voting and art galleries and assignments no one's completed it yet so we gotta i want to get someone to complete it eventually and then i'm gonna give them a wizard nft and make them glorified thank you everybody any other questions feel free to come off me and ask your questions live nice thank you guys i will go ahead does anyone have any last questions for suraj all right um yeah i i guess i'll i'll jump in uh first and foremost amazing to actually me meet you i've been watching you for years and you're like ai videos back in the day and like blockchain as well so um i'm not gonna fanboy too heavy but definitely fanboying um second of all thank you so much for the presentation it was really really good um the question that i have is in relation to the um the battle element of of the game because right now um it looks like you can abstract some of a lot of the better elements to um the the smart contract size so through solidity um but can't you also have for example like an nft character um where they have their stats um which are on on the blockchain and then you freeze the nft with the stats of where it's at and then abstract the fighting to um let's say like more than the unity and see um sharp level yeah um yeah uh cool awesome yeah well it's awesome you watch my videos thank you that's really cool in terms of like the nfts one good way i like to think about nfts is like you can literally make anything into an nft so any store like anything we that we saw in this constructor file uh here this like basic gaming contract file we can these characters could be nfts this function itself could be an nft minting teddy so you know if we approach battle and there's a bunch of functions that are fired event listeners whenever we enter into a battle per se um one of those event listeners could be a function named um uh time battle time which records it's just a timer it just records a time that i'm battling with somebody else that could be an nft you know that clock with like a you know so when it comes to what like can you you were asking a question about a specific step-by-step process of like could you freeze it in time and then you know mint an nft of something that was more abstract not the direct thing the answer is like 99 yes um but the real question i think nobody has figured out yet is what is the proper way like what exactly to be selling what is valuable as an nft and how is that going to scale um very successfully something like fortnight or um counter strike one of these like massive games how do you scale to that level i don't think anyone's figured that out yet but it's a really exciting field yeah yeah definitely so definitely so because we're looking to make an interoperable nft where you have like your champion and then like enable other people to or other uh companies to allow you to do things and learn with them and then upgrade your nft when you learn with them so it's like an e-learning game um and it makes learning more fun and rewarding because it's like going to school and then coming home and your fortnight character is upgraded um so like it just like sorry i'm not showing my face it's very but yeah it just makes it a little bit easier for people to um to learn and intensify them to do that and we can perhaps like use polygon um to decide who is verified to actually allow the data of the nft to change as well love it love the educational aspect yeah yeah yeah it's a big passion of mine but yeah that's i'm yeah we'll see how it goes but it'll be awesome to like reach out to you and like we're building it see um how it develops yeah dm me on twitter awesome we'll do we'll reach out thank you so much again thank you hello my name is zuri i'm a uh polygon advocate and i was on board to polygon or even introduced the polycom based on your videos so uh big shout outs to you on that as well i'm really interested in this project and the way that you taught it um especially with this github repo that you use because the concept that i'm building out is a pokemon style battle game for music um so my biggest question up until this point have been how to create the uh the health bar and if the health bar would be somehow incorporated into the nft um i believe you have that somewhere in this smart contract that you just reviewed and i wanted to know if it's possible to just kind of scroll up and and uh and explain how it's how it's being used currently um if that's possible i'd appreciate it thank you yeah yeah yeah we can do that so in terms of health bar um so the health bar in this case is this uh it's it's two part when it comes to the parameters so you have life which is just a single integer which represents your health okay and then you have um these metadata which they're not exactly health but they help keep track of history over time which is what was the last time you heal when was your last fight you know how much experience have you gained but health is just life so if we go to fight here um this is uh where the the health is calculated and so the way it's calculated is you take these experience parameters and you're you're multiplying the attack by the experience minus the defense divided by four now why did this person choose to add this um what's called uh magic number in computer science right it looks like it's just like a number um with no real definition in the code i don't know they just decided to do that could you change it yes would it have different dynamics yes um but that's what this person did and that gave you this subtract life uh variable and then from the subtract like variable we said like if if it's less than zero then that player is dead and then give that the winner experience points else do the opposite um else and so there's just like two else statements like if one player kills the other or the other kill the other or then both kill each other add this to their life force and then but this is really the main um calculating line for the health bar and it's arbitrary and i guess you know if you go into different games you can see that sometimes they have a user configuration slider where you can change the uh sensitivity of health and stuff that's what i think this kind of is this this numbers can be changed for sensitivity that's phenomenal and thank you for the detail i really do appreciate it i'm definitely forking to see this uh github as we speak but another thing that i had a question about specifically was um i think i got excited about the unreal in particular but i see that this is uint which probably is unity so could you just review where to get the unity nfc uh package thank you yeah yeah no so uint uh it doesn't mean unity this just means unsigned integer so this is just a solidity um a solidity definition this is an ethereum definition it's not unity in terms of unity though like unity versus unreal i think unity would be the best place to start just like it's the easiest for a beginner who's never done uh game development before and then move on to unreal but uh in terms of like you know the next steps is like once you you know we looked at the unity hub and then you know clicking on install and then you open up the browser and inside of the browser you go to the unity asset store and then you just start downloading all the assets that you want ultimately you want to get to a place where you're you're at the unity asset store and you're able to download like all these interesting nft uh tools to turn like assets into nfts like this which is super cool you know just play around with some of these it's appreciated thank you um just one more question um from nikhil in the chat he says can we use pre-built templates yeah yes we can use pre-built templates for smart contracts if we want to use pre-built templates for building play to earn gaming smart contracts we can go to open zeppelin it opens up is literally a collection of pre-built templates if we can go to their docs we can see some of the contracts and we can see erc you know for nfts token standards one one five five which is like for gas efficiency you know all of these different ones we can use those and then we can also use templates for um unity you know so many games you know you've heard the term white labeling when it comes to startups like web 2 mobile startups that's the same when it comes to gaming right you want to build off of what exists it's all in the store you basically go to the store and you put it all together and um you know as long as it's as long as there's an app store there's so many different uh ways to integrate it so definitely possible awesome um unfortunately that's all the time that we have for this workshop um uh that was super super interesting i'm sure everyone agrees that um like this is super awesome so thank you so much for taking the time to do this workshop for build quests and for the build quest hackers uh just a question um what would be the best way for people to reach out to you or polygon if they have questions yeah so the best play would be um on twitter at siraj deval on twitter uh my dms are open if anyone wants to dm me um i will be there on twitter and then for polygon we have a discord channel which i'm active in as well if we go to 0x polygon developers on twitter you'll find a link to the polygon discord as well cool um awesome uh thank you once again now for the rest of you i hope you're having a really great first day of hacking or second day of hacking now um we do have a lineup of workshops for later in the day so we'd love to see all of you there as well and with that being said i hope everyone has a great rest of your day or evening thank you 