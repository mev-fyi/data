had to kick the session off and yeah okay great let me just show my screen here okay all good perfect okay hey guys i'm miles from advisor finance the d5 protocol for active liquidity management uh uniswap v3 was released it was released on march 23 2021 and went live later in may they developed unisof v3 which offers significant improvements for liquidity providers the most remarkable improvement was the development of concentrated liquidity by providing concentrated liquidity lps can provide the same liquidity depth as unisot v2 within specified price ranges while putting far less capital at risk instead of having to provide liquidity with in an infinite price range lps can increase their capital efficiency by placing liquidity within a custom or concentrated price range this is a uniswap v2 infinite price range that's applied to each each pair and this is unisoft v3 custom price range where lps can concentrate their capital within custom price ranges providing greater amounts of liquidity within a price range in doing so lps construct individualized price curves and here it is again so in unisop v2 lps only earn fees on a small portion of their capital which can fail to appropriately compensate for the price risk also known as some permanent loss they take by holding large inventories in both tokens additionally traders are often subject to high degrees of slippage as liquidity is spread thin across all price ranges in v2 under nv3 lps can concentrate their capital within custom price ranges providing greater amounts of liquidity at desired prices so here we compare two positions uh one in unisof v2 and another in unisop v3 these two positions will earn equal fees and perform identically while the price remains between hundred dollars and twenty eight hundred dollars furthermore in order to capture the same amount of fees the lp on unisop v3 only has to provide 150 000 into the pair whereas on v2 the lp would have to provide 785 thousand dollars this demonstrates capital efficiency improvement of more than 5x um but with these um unisoft p3 lp nfts there's a significant barrier to being an lp on unisoft v3 providing liquidity is cost prohibitive and time intensive for d5 participants on unisoft v3 this is because an lp has to mint an nft for each lp position which means when an lp wants to change the price range they provide liquidity for they have to withdraw the assets and mint a new nft each time that's why we create advisor and visor aims to solve these challenges by serving as an active manager on v3 so what we've done is created this periphery contract around uniswap core contracts which enables a strategy deployment which are responsive to volatile prices and serve to generate the highest yield on both correlated and uncorrelated pairs positions can better stay within range since we do not use the nft minting to change ranges but instead have developed periphery contracts because of this liquidity provision now has a range of complex strategies that can be applied to positions resembling a traditional market structure and new financial products so visor is the protocol venue that allows for the deposit of assets and management of these new liquidity positions this is the advisory web app which allows lp's to deposit assets into our managed positions visor allows a strategy to be applied to positions on a liquidity provider's behalf to maximize fee return and stay within range and with visor anybody can create their own strategy and we built this active management strategy framework which simon will go over in the next part so you can write your own strategy simulate it and then deploy it for lps to subscribe to and i'll just go over the prizes so visor has three categories for prizes the first place first place in each category will receive fifteen hundred dollars and runner up will receive a thousand we will also be awarding uh the strategies that are created in the hackathon an additional 10 000 up to an additional 10 000 in grants so the first category is unisop v3 lp strategy construction and the second strategy is unisoft b3 tooling uh category sorry and the third category is the most novel use slash integration of unisop v3 so that is it for this first part and simon will go over the technical details um but if you have any questions we'll be in the youth global discord so i'll stop check my screen hello hello simon here from vicer um and i'll be going over a more technical overview of our hypervisor like miles mentioned will be available on the eath global discord in case you have any follow-up questions or want to get some feedback on something so in this presentation i'll be going over uh these three main topics first just an overall high level description of the concepts behind the hypervisor and its three main functionalities which are depositing withdrawing and rebalancing lp positions then i'll go a little bit deeper into the how the hypervisor functions work and finally i'll provide a short introduction to our active strategy framework so that anybody that's participating in the hackathon could get a little bit of a start in developing strategies for gamma so like miles said before what is a hypervisor a hypervisor is our periphery contract around uniswap lp positions that allows for many participants to pool their assets together and for them to be managed by a single strategy that is professionally developed we deploy these hypervisors to manage these the concentrated the concentrated liquidity provision of a una swap v3 pair and a hypervisor has to be deployed for each pool basically a pool is an asset pair and a feed tier combination these allow the strategies for to be executed if with the liquidity for many lps which allows for gas saving costs allowing for more active strategies to be deployed and we also deploy private hypervisors for protocols and dows that want to manage their own liquidity more efficiently and with different objectives perhaps so what is the the first functionality that we want to describe is simply how uh the deposit work uh any anybody who signs up a through our visor web app can deposit assets to our hypervisor managed lp position and uh what we allow is for potentially single-sided deposits uh so you can you have to deposit one of the tokens um you may you may choose to only deposit one of them so the second one is optional but if you do you can deploy them in the ratio that represents the unit swap p3 lp position and in exchange you receive an erc20 a receipt token that represents your share of the whole uh position in the pool and remember that a pause is a determined by an asset pair and a feet here when you uh deposit your assets you receive the erc20 lp tokens in an nft vault that is deployed through our uh web app that it represents your share of the assets and this nft vault holds uh all of the erc20s for the different lp positions that visor manages therefore uh we make the uniso v3 positions that are non-fungible and each user uh must a have their own and nft representing them if we make them fungible and represented by an er c20 that is easily uh tradable and uh represents a fungible position the second functionality that we want to introduce is the withdrawal when you withdraw what you do is that erc20 lp receipt token that you received and sits in your advisor nfd vault you re you burn it or return basically return it to the hypervisor contract and in return you get both tokens in the share that is uh represent that in the share that they are currently deployed in the lp position so where while you can deposit single-sided withdrawals are uh necessarily a two-sided basically in the whatever ratio they are currently placed in the lp position these uh can also it's important to note that these can be partial you can you can deposit uh a large amount and then it would draw in smaller chunks or fully as you decide and these are and these withdrawals are initiated through our uh web app or if you're interested you could do it directly through uh contracts and then these how does the pool uh how does the ratio that you get the assets back is determined it's basically by what happens in the price of the uniswa pool if there's a lot of swaps that make uh that put in one of one they put it one a lot of token a and withdraw a lot of token b what would happen is that you get a lot of uh when you withdraw you get a lot of the token that gets put into the pool and so you are your ownership is of it's a fractional representation of whatever the pool as a whole contains and finally i'm going to talk to you briefly about one of the key parts of the hypervisor which is that rebalance when the hypervisors place two positions whenever uh a one is initiated and basically we place a what we call a base position which contains both types of tokens and necessarily includes um the price uh the current price in the pool somewhere in there and then what we call a limit position which is a single-sided position that re that is with whatever token was enabled to be placed basically the base position uh puts in as much of of both tokens as it can and then there's typically one of the two tokens left over and then and then that is placed in a limit position the way this is done in order to make sure that all liquidity that is possible to be deployed gets deployed and this also allows us to uh automatically rebalance the position to get into a healthier uh ratio of the two tokens and that we don't get uh too concentrated in one of the two tokens while doing this while earning fees rather than swapping them and paying fees so this generates further income for the lp positions and our hypervisor users so whenever uh rebalance is triggered as you can see by that vertical line uh that's called rebalance point basically the position ranges get moved um and it could be the case like you can see here that the limit position is still at the top and the base position is still at the bottom it could be the case that because of the price action that happened or because of deposits from lps these could get put in in a different order but uh this is the main the main strategy of uh the hypervisor and uh what we'll describe in the active strategy framework part is what flexibility you have in terms of choosing these so one main thing to notice is that the rebalance functions are only callable by a supervisor account designated by the deployer and this rebalance function is what modifies the lp positions we are able to a plug this into an endpoint and our active strategy framework so that we can uh uh implement any strategy and make this hands-off and automated uh gamma strategies which is a research arm funded by visor researches and implements these strategies through that off-chain endpoint that i mentioned and this allows for hyper vigilance in terms of making sure that the strategy is always in range and risk mitigation for when there are violent moves in price so let me enter into the more technical description of our hypervisor periphery contract i'll first describe the overall flow of the inter of the interactions that users can take with uh our hypervisor basically if we start here you can see that liquidity providers or what we call anybody who deposits into our hypervisors how how does their journey looks like basically you must first mint the nft vault which is separate from the uh hypervisor lp nft it's not related to that it's our uh fault where we we allow users to hold all of the hypervisor lp erc20 tokens uh in in one place and so you first have to mint this nft and it's associated with the account of your where you uh decided to provide your liquidity and then you become then you can choose to deposit which is that deposit first function that we saw when we were describing the hypervisor and you can as you may remember you can deposit either single-sided or both tokens from your wallet and then this these go through your nft vault and then these get deposited into a hypervisor that remember is specific to one uh univ3 pool defined as a pair of tokens or a fee tier and when these this hypervisor receives your tokens it issues uh erc20 receive tokens that sit in your nfd vault um and then when a rebalance is called uh these are uh transferred into the univ3 pool and deployed as liquidity provision so what are the steps uh that go into a rebalance and you were go you could see this in our uh in detail in our hypervisor contract which is both available in visors github and uh is a verified contract on ether scan for each one of our pools basically when a rebalance is called first of all all of the liquidity in the position is burned and fees are collected this makes sure that all of the assets that were deployed into the contract into the unit swap v3 pool and the fees that have been earned are collected back into the hypervisor periphery contract in order to both rebalance remove the changes but also automatically compound the fees that have been collected we have an optional swap functionality in case there is uh some need to uh but remember that we typically prefer for the limit precisions to be used in order to rebalance the lp position into a more healthy uh in between range and finally after the fees are collected the liquidity is burned and you may choose to do a swap liquidity is minted into the new position by calling the unisrap b3 pool mint functionality then the third part in in the typical user journey is um withdrawal where uh a user calls withdrawal from the device or web app uh interacting with their nft vault and the specific hypervisor they have lpd too um and then what occurs is that liquidity from the unit swap b3 pool is burned and the tokens are returned to the hypervisor contract these in turn are returned to your nft vault and finally back into your wallet so uh these are the three main functions that users are typically exposed to and defines the overall hypervisor journey so in case for users that for hackathon participants that want to get into the little the nitty-gritty of how our hypervisor works i will i'll briefly describe the parameters for the main uh three functionalities that we've been talking through this talk basically the deposit function is very simple you uh choose a you you have to send the units of each token that you're depositing with the right uh decimals uh that the erc20 that underlies it uh it requires and you are you finally choose the two address where the erc20 tokens are minted towards typically most users use our nft vaults to interact with but um if you are building a more enterprise b2b product it could be the case that you plug this into a gnosis vault or something else and so our hypervisor contracts have flexibility to either use our uh nft vault periphery or to mint these erc20s directly and there are some constraints for example we require some deposit to actually occur we have some maximum deposit thresholds in order to ensure uh safety in terms of a economic arbitrage that could occur in case the hypervisors represent us a very large share of the overall vault and we don't allow for anything that gets deposited to be accidentally burned to the zero contract second i'll uh describe the withdrawal function the draw function is uh basically what you expect uh here what you do is you return the erc20 tokens that were minted uh here towards the two address and these represent the basically amounts of shares that you have of the overall lp position um and here you you tell where the returned tokens should be sent to allowing a little bit more functionality and a little bit more flexibility as well um and there are some other uh constraints uh that are uh not that important and then finally i will describe the rebalance function um basically uh however uh please be aware that these are only open to uh supervisor role in order to make sure that our users uh are safe and not anybody can interact with the contract but this is determined uh at launch and we uh interact with these mostly through an endpoint that is plugged into our active strategy framework okay so the main parameters that the rebalance function takes are the ticks of the two positions that we described before the base position that take that typically has both tokens so this is the lower end of the tick and the upper end the tick of the lower end of that position and the tick of the upper end of that position we then have the ticks of the lower a limit the lower part of the limit position and the lower part of the upper position note that these can overlap or be really in any relevant combination what's important is to make sure that before you call the rebalance you're aware of which token is going to end up there by determining of which one you have more uh value or of which one you could place the liquidity and that logic is already coded into our uh active strategy framework um finally uh few recipient uh make sure that the hypervisor which uh vicer it takes a 10 cut of the fees that are earned in each hypervisor and returns it to uh our stakers people who own vicer and stake it into the protocol and this makes sure that it tells you which address you receive it and in case you choose to swap this swap quantity parameter uh executes the swaps if it's positive it'll it'll basically uh token zero for token one and if negative it goes in the other direction please make sure to uh be careful to use the decimals of the tokens appropriately okay so these are the three main functions um and uh we're gonna now describe the active strategy framework in the last five minutes that we have so we have built the first open source uh uniswap v3 strategy simulator and it's freely available in gamma strategies of github account it we have used it to study active strategies of unisop v3 lp management in order to simulate and and also to actively implement these through our endpoint it's important to know that we call these active strategies because they're placed over a smaller range than the uniswap v2 range of 0 to infinity and by virtue of their concentration they are exposed to more risk to more risk of impermanent loss and to being out of range uh if the price moves beyond the limit and when you're out of range you don't earn any fees until your capital is deployed without a returning any yield and so these characteristics imply that they require constant oversight and some predictive ability in order to optimize the risk reward trade-off and that's um what gamma strategies focuses on there are three main uh scripts in the active strategy framework uh github repo which it will share will make sure to share and be and it's freely available if you just um don't get find gamma strategies and the three main files are get pull data and it makes sure to and it downloads the necessary data from several sources um so first of all the price data is collected from bitquery.oh which is um pretty good because it provides historical data for free um you need to get an api key but uh it is it is really it it doesn't come at a cost um all of the swaps that have occurred in the pool that you're studying uh these are downloaded from the unesco b3 uh sub graph and finally how much liquidity there is in the pool at any given point in time this is downloaded from flip side crypto and you need to set up a query for each pool that you need to simulate but i believe that they're trying to make sure that that goes automated the second relevant file is what we call the active strategy framework and it is the main framework that runs a strategy for simulations or when a live strategy is being implemented it what it does is generate the data series uh for the simulations and has functions for for kind of preparing and massaging the data that is necessary for the simulation and finally uh you have the specific strategy file um in this case i'm talking about the autoregressive strategy uh but basically what's in here is what a hackathon participant would mostly need to modify which are the two main functions that implement an active strategy and we'll talk about it soon and let me tell you what these two main functions are basically it is the set position function and the check position function basically when uh you deposit into an lp position and you add these assets one the main key point first is to set the position um and that's where you calculate the the four parameters uh for the uh hypervisor here in this set position you may you must make sure you choose these four parameters according to whatever it is the criteria that you need for example the autoregressive strategy that we're using as an example here it uses historical data and uh econometric models um then uh the slp position is deployed and we make sure to check the position this position is checked um with a some frequency depending on our endpoint parameters but at least every 30 seconds and there we choose whether or not to rebalance if certain conditions are met and therefore it is a key step to effectively check your position uh because that makes sure that the risk is not too large or that you're not out of position and then finally people may choose to withdraw okay and so hey what is what are some of the choices that people that you may have when you are setting your position you may uh use uh data from the past prices are typically some of the most common ways um like you could look at the uh distribution of prior price changes bollinger bands are pretty uh use are pretty common um time series forecasting is also used typically as well as machine learning algorithms in order to predict where prices are going these uh in this step you must choose like i mentioned before ranges for both the base and the limit positions and therefore when you choose those there is a center that is implicit in the base position and this center can be informed from price predictions to improve performance both to make sure that you're in range on longer time and to lower impermanent loss finally in the check position step like i mentioned before there are many decisions rule that could be implemented as part of this step it could be make sure you implement uh rebalance every end period of time it could be depending on the market context if the price has moved 20 percent close to the end of my base or limit positions i'll make sure to error balance it could be a mix of both it could be um something more advanced like if volatility increases a lot i'll widen it volatility decreases relative to the last time i rebalance all narrow and so it's important to just uh take a little bit of a second to make sure that everybody understands that rebalance step is really important because this is when permanent loss is locked in so the way that we think about it this is a plot of um how impermanent loss looks for an lp position and so imagine this is an e usdc pair and on the x-axis we have what is the eighth price um and then on the y-axis we display how much you have you know quote-unquote loss due to impermanent loss and that is basically how much more the value of your position would have been had you just hold a held the two assets in rather than deploy them in the position imagine that you started the position when the price was 2 000 um if the price increases basically it you would have been you would have had 50 dollars more if you had been out outside of the lp position than if you had been in but it's important to note that this does not include fees and this is why active management positions are key when you uh include fees this this this a curve will move up and so what we want to make sure is that whenever we rebalance these places when is such that the impermanent loss has been compensated by the fees that have been earned and basically by the risk that rlps have been exposed to um this is the end of our talk and now we'll open the stage for some questions thank you very much and this is andrew from eath global also um if there's no immediate questions at the moment as uh miles and simon said um they will both be in the visor finance discord channel in the eth global in the unicode hackathon server so you i encourage everybody to like if they want to reach out to do it in discord doesn't look like there's any questions at the moment so uh yeah i'd like to thank um both of our presenters today um simon and miles that was an awesome presentation this is also recorded on the eth global um youtube so people can use it later as a resource thanks for having us all right thanks guys and we'll see you out there 