great thank you everyone for joining us pedro will be doing a talk about how to connect your dap with wallet connect if you have any questions just leave them in the zoom chat and he'll be answering them throughout the presentation uh you can go ahead awesome thank you so thanks everyone for joining um this will be my first uh virtual workshop and i've prepared some slides for it but i definitely would like to have as many questions as possible because i think that for this workshop to work well i need to listen to what you guys need to know and from that we can like develop uh what is more useful for you but these slides kind of provide like a background to wallet connect and also cover how to connect wallets to your dab using wall connect and the stack that we're going to use i also will include links with qr codes that you can scan very easily so you can actually go and visit the github pages that we have and yes let's get started so hi my name is pedro i'm a co-founder of wall connect and i've wrote created a wall connect as an open protocol for connecting wallets to dapps in a short sentence wall connect is a secure remote signing protocol it allows a mobile wallet to remotely sign a transaction or a message to a desktop or even another mobile app where you have your dab that will format the transaction and then that needs to be signed securely on the mobile app and we provide this end-to-end encrypted protocol that allows the message to be received by the wallet in order to be signed or the transaction and then it's sent back into the dap and you can use your favorite library like web3js and neter.js and build your dap with smart contracts or anything you're working on for hack money so while connect is supported by any wallet we have more than a hundred wallets including leading wallets in the space like metamask mobile trust wallet rainbow origin can also save so on and so forth like your favorite wall will be included in the style and it's also widely supported by dapps you might have seen well connect already when you use adap and we are growing and we have hundreds of dabs using it and in the future we're going to have your dab that you're building at hackmoney so it's widely supported by community and it has a lot of downloads we crossed 180 000 downloads with wall connect but the workshop is about how to integrate in your data you may have seen this before it's this very simple modal that when you press connect wallet or just connect you see it pop up for the user to actually select the options and maybe you're not familiar about the options but to cover perhaps the most popular ones like metamouse and wall connect you essentially have the option of connecting either with your mobile phone with wall connect or with your browser extension on metamask and this uses a library that i have written also called web3 model to make this experience easier to integrate multiple providers but in this workshop we're going to cover using metamask and wall connect so the first thing is that you can visit web3 model on github and i'll share links for that and basically it's a single ethereum provider solution that makes it much easier for you to not have to understand all the options that are out there and you can for example use npm or yarn and you do npm install web3 model and well connect web3 provider and these two libraries alone will allow you to support metamask and wallet connect together the reason for this is because web3 model will support metamask given that the user has the browser extension installed so after you have installed you have to configure it uh it's actually very simple to configure it you import your modals especially if you're using webpack or any other es modules library if you're building react this will be built in into your create react app and you then instantiate the new web to model that you can configure the network that you're going to use for example mainnet if you're using for example rink b you just write ring kobe or if you're using i don't know gourley or covent or if you're using um what's the other one like polygon mumbai it's also supported here and optimism and arbitrary so you just write your network name and that will be enough for the web3 model to understand what you need to do in order to connect metamask and welcoming then wall connect requires you to insert uh inferior project id you can go to ifpuro.com and get the in project id the reason for this is because wall connect will allow you to sign messages and transactions from your wallet on your phone but then you need to read from the blockchain nonces and balances and all of this information is read from and in your id we also provide documentation in more detail about how you can actually configure other providers like alchemy and quick node or pocket network but for ease of use we actually added this with your id that you can add right now after you configure it you want to display this user model and this is exactly how it's actually displayed you have this promise called connect so you do await web3model.connect and this will be enough from the configuration that you have before to display the options in this case i have an example of showing it minimize while connect tourism coinbase but if you only configured wall connect then you're going to have metamask and wallet connect so the configuration will then change how it's actually displays to the user and it's the user choice that's actually gonna change how the promise resolves so the promise will handle how the user connects to one of these options and then once it's successful it's going to return to you so that's why you see the return of the promise as the provider that means that you don't need to know what provider the user chose you just need to build your dap and allow winter model to handle how these providers work under the hood and then it's very easy because you can just insert that or inject that into your web tree by creating new web3 object and inject the provider and it makes it very easy for you to support any of these providers by just delegating that responsibility to webtrimon it's important also to understand that like these providers comply to a standard called eip1193 and they have very important events so when you use web3.js or etherjs you're going to see that it's exposes accounts and it exposes a chain id for you to understand what is the accounts that the user has exposed to this tab and what chain id is it currently connected to and to do that you can also have this point where the user will actually switch in the wallet and you need to subscribe to these events to understand it so if you don't subscribe to this event you're going to think that the accounts are still the same but they actually change and that's going to make your transaction fail or the same thing can happen with chain id where you are going to make a transaction let's say on rink b and then the user chose mainnet and at the moment if you don't listen for these events then you're going to break your app because then you don't know that the chain has changed so we have two events called accounts change and chain change will then pass down the data from the event that will actually tell you which accounts and which chain id were provided so you can update your app another thing most providers actually have a disconnect button uh while metamask doesn't have this most providers do so it's important to actually include this logic in your app as well where you can allow the user to disconnect from the current wallet that they have by doing a promise await provider.disconnect and because you're using webtrimodal it also allows it to cache the provider so it means that next time the user comes back to the comes back to the dap it will always choose the same provider so it doesn't have to be always choosing so you might want to clear the cache provider from with your model when you the user has disconnected that because the user gave the intent to disconnect therefore you should clear it the reason i say this because in previous hackathons we've seen people that have kind of spent hours debugging why is my web3 model uh always selecting the same provider and the reason is because sometimes you have to dig a little bit into the docs and this is one of the recommended uh parts i think that's something that i should improve on the docs but i'm telling you now make sure that you clear the cash provider so yeah i mean i covered pretty much the basics here i want to make sure that we have questions and we kind of have a back and forth you can see that in the web3 module docs we have instructions for multiple providers from walgreens coinbase wallet fortmatic torres supporters and all of these and then you can configure your web3 model uh with as many as you want i definitely do not recommend that you use more than six or even eight i think four to six is kind of like a sweet spot to not overwhelm users and we also have documentation about different apis and how to actually update themes because you can have a dark mode if you want and you can follow this qr code to have more information regarding the wall connect dogs where we have a little bit more detail regarding the inferior ids and we have these tabs where you can see the differences between using a custom rpc or an inferior id you can go to the docs.volconnect.com different qr code now and then we also have documentation for ether.js and web2js because you want to perhaps use different libraries depending on which one you're more comfortable with my personal recommendation honestly would be ether's js but some people find that webgas has a more developer friendly api it's really a very subjective manner to make it easier for you guys so it saves a little bit time i've created the react app that already implements web3 model with eaters and you can fork this right now and you basically scan the secure code and you will just build your dap on top it's a very bare bones react app and from this bare bones react up you have a wallet connect you have web3 model and you have etherjs and from this you can basically just build anything you want and it just kind of covers this integration part that we talked right now so first question is safepal included in the wallet list uh safepal supports volcanic we you can actually visit wallconnect.com uh where you can see all the walls that are supported and i'm pretty sure the safe pile is part of the walls the wall connect is supported by because it's an open protocol you must understand that like there's a hundreds of wallets and every day we see a new wallet show up and i'm pretty sure put the repo link in the chat will do so you can go which which reaper link landner because uh you have this repo link which is for the example and then you have the wallet connect docs and if you're talking about the registry the registry can be found at qualconic.com registry so jordan can i use wall connect to test using hard hat and ganache so that's actually a very interesting question um you can do that so wall connect is isomorphic library which means that it will work even on react native it will work on browsers like react view angular whatever library you want to use and it will also work with node.js however in order to use uh hard hat or ganache um i think that you might not want to use webtrimodal because what your model is a browser-specific library so i would recommend if you want to test with hard hat or ganache that you go to the wall connect docks that are right now displayed and you actually um you actually go through the web3 providers by itself don't use webtrimodal for hardhat or ganache any other questions i want to make sure that i didn't go too fast it's made very easy for a reason but i definitely think that you don't forget that we are on discord as well uh because some problems might not be as apparent now but in the future uh they can come around and i know that this is a virtual hackathon you have 30 days and it's not as stressful as the weekend hackathons but definitely make sure that you try to cover as many questions now so you can focus on building your project and not have to spend hours debugging [Music] yeah if you do have any questions just bring them over to the youth global discord page and under the wallet connect channel i don't see any more coming in now we do have a few more minutes if anyone does have any questions it looks like we don't um well thank you pedro that was very informative um it was great to have you if anyone has your questions bring them over to discord we do have another talk with oh we do have one more that just came out so web3 uy kit i'm actually not familiar with this uh with this library uh but i i would say probably not i mean if you see the interface that looks like this uh maybe the answer is yes but it you can't customize this interface that much the one used by morales um maybe not maybe they have their own i actually haven't looked into it i'm familiar that some people use web3 react and wag me and onboard js these are popular integrations for web3 do you plan to become a full authentication manager and help apps do twitter slash discord connect um i don't think so the goal is to still stick to web3 and i think that webtrimodal as it says in the name might expand beyond ethereum in the future uh supporting other blockchains like solana and cosmos and polkadot and near but i still think that the best value can provide this is almost as a generalized authentication for blockchain so you could think of it as almost like a sign in with web3 rather than sign in with twitter or discord [Music] perfect thank you very much okay great thank you everyone for tuning in as well we do have one more workshop with ave tonight at uh 5 30 eastern time and with that being said we can uh head over there soon thank you very much peter awesome thanks everyone for coming and if you have any other questions go to the eve global discord at sponsor wall connect 