i'll just go ahead jacob good to go [Music] all right we are uh good to go looks like we got the stream live and everybody's here so i will hand it off to jacob to get started all right awesome well thanks to everybody who showed up for this uh looks like we're already almost 40 people strong um welcome to the first event officially of heath online which we're really excited about so um for our first event you know this is gonna be a sponsor workshop uh hosted by matic um i'm sure that's uh that the mavic team manual and instant deep will fill you in on everything but uh you know if you're going to build with scale and then try to tackle a large number of users and and keep things fast then you probably want to use matic so um you know with i guess i'll hand it off really quickly i don't think there's too much more else to say um i hope everybody enjoys the workshop um and yeah i'll turn it over to the matic team awesome so let me share my screen i hope you guys can see my screen right yeah that's great yep so yeah so we uh you know wanted to primarily speak more about uh you know like how uh using the uh scalable tools like uh matic network like scalable side chains layer two on top of uh ethereum how can you build the applications to onboard the next million users on blockchains and uh yeah you know we are we are already seeing that trend with some of the applications and i'll kind of walk you through that how uh you know you as developers can uh kind of build these applications which will have like scalability as well as the user experience which can actually match the uh you know kind of the user experience which users are generally uh like kind of more used to in terms of using their web 2 applications and then angela is going to give you a demo that how you can you know build up you know blockchain applications which can build it in a decentralized and censorship resistant way but still be able to kind of make blockchain invisible using the toolings and then you know as we all say that you know the the decentralization and and you know the censorship resistance is all a spectrum so how can you build like superlative user experiences but then give people give users you know advanced users the advantages or kind of features where they if they want to interact directly with the applications or the blockchain they can directly interact so those are the things that we'll cover and then angela is going to have a full-blown uh like you know programming demos and everything right so uh so basically the assumption here is that you already know a bit about ethereum and then you have programmed previously on solidity and on ethereum and uh you know have the basic kind of knowledge around the these these topics so the talk as i already said that it's it's about like building these applications which have which have scalability and yet are decentralized and censorship resistant and then how can you build superlative user experiences on top of that so so first of all why matic so matic and what exactly is matic let me also you know give a brief uh intro on that somatic is a layer to uh you know generalized layer two which which wants to support multiple uh kind of layer two approaches uh on top of ethereum and we believe that uh you know every application every business has their kind of requirements and there is no uh like you know this there's no kind of silver bullet wherein one solution fits all uh in all the for all the applications so our first uh you know the main net that is live it is a proof of stake plus plasma hybrid uh you know side chain wherein you as a developer can choose that if you wanted to have ethereum uh provability and ethereum kind of asset ownership defined by ethereum only then you can choose a plasma bagged you know kind of architecture for your assets or if you want to rely on the proof of stake validators of the matic side chain which is again fairly largely decentralized like 100 plus validators which is fairly decentralized for uh you know proof of stake number you can rely on the proof of stake capabilities of automatic completely depends on you so so yeah so basically you can already see that in one layer to uh like kind of a platform you can pick and choose that as per your application as a developer what level of security you want right so that's the kind of brief idea about matic network it's a layer two which will offer multiple such security and decentralization like decentralization decentralized execution platforms as per your uh you know kind of requirements and the business uh logic around it so so so why matic coming back to the question that you know it offers you that kind of developer friendliness as well as you know freedom to choose the level of security uh and you know the other trade-off like user experience how much uh you know ease of use you want you know your application and all that stuff that is completely defined by the uh developers rather than anybody else right so or rather than defined by the uh you know infrastructure so uh you know we all know this blockchain's bigger biggest barriers of adoption we have you know slow transactions high transaction fees we already know and user experience also suffers uh because of high transaction fees as well as the um you know like slow block times and everything so matic uh kind of solves uh these things so what matic actually builds is uh basically it it is a layer two and then you know on the layer two side you have a public side chain which is a shared change so you know it's not like a dab specific chain so it's a shared change multiple applications can build on top of it and then can utilize the composability benefits and which uh kind of is one of the biggest uh you know uh like importance or the biggest kind of selling points for matic right you know many applications that they that that are building over there they get to they get to utilize the network effects and with the advent of d5 we all know that how uh you know these composability and money legos thing can compound over time to build like uh really you know cohesive network effects so you know matic public side chains are a side chain is a is a is a is a shared chain where multiple apps work together and then you know we expect to have more uh you know execution environments like optimistic roll up zika roll-ups you know in future so but the present offering is the is the public side chain which offers you hybrid plasma and pos capabilities and you know these are like full-blown evm chains wherein you can you know deploy your entire solidity contract all the ethereum like we have built it in a way that all the ethereum developer tooling bead wallets be it you know your uh your your your middleware utilities everything work out of the box like you know graph protocol if you need uh things like that uh your metamask box out of the box your truffle and you know your remix and all that stuff also works uh you know completely like that and developers are completely shielded from any of of like you know shifted from managing the infrastructure just like on ethereum you connect with your metamask you pay for the gas fees and your you and your users are done so that's that's how and we also you know keep saying internally that if you are a ethereum developer you are already a matic developer you don't need to learn anything new to start utilizing matic just switch your you know metamask rpc and then you know you have this network which you are connecting to and you know in the background it is having all these validations and and you know the validators community validating it and then you know putting it on the checkpoint on the ethereum main chain all that securities aspects those are completely abstracted from the developers uh this this is the the sidechain i was talking about that you know you have this uh you know uh matic side chain which is which is being produced the the blocks are produced by this layer only so randomly out of 100 plus validators few validators get selected uh to produce the blocks for every like we have concept of sprints and spans so you know few validators get selected for a particular uh you know uh a particular particular sprint and then they have multiple spans in between where you know individually they produce the blocks and all other validators validate and put a checkpoint on ethereum which is kind of a cryptographic proof of image so so you can clearly see that validation and block production uh using the randomization techniques have been separated from each other and then you know the blocks are being produced here and then uh you know the validation happens on this this layer and like the the whole concept of as i was saying that you don't need to you know learn many new things because it utilizes a lot of open source technology so this layer is built uh you know with up with a get like evm kind of know uh you know system that's why it's like highly compatible uh this particular uh you know your uh layer is built on tendermint and then you know this tendermint based consensus uh basis this consensus these validators put checkpoints onto the main chain right so you know what does matic offer so matic offers you a very highly scalable chain like 7.2 k transactions per second and then the block trans block confirmations are also around two seconds uh right now if you can you know and the the piece also is very very low right now uh you know we are already seeing fees uh to the tune of like 100 000 times lower than ethereum so basically in in one dollar you can easily do like somewhere around 100 000 transactions to 500 000 perfections that is like because the network is starting up and there's a lot of uh validator rewards so that's why uh you know like this is like the piece of this extreme but even in the kind of matured way where many many applications are there uh we easily expect like you know a differential of 1000 to 10 000 times lesser fees than what is what would be there on ethereum let's focus on a user experience as i already said that you know we support all these metamask and and you know like all the ethereum tools plus you know meta transactions kind of services plus your block times are like two seconds so if you can use meta transactions and the fees is very low so you can actually uh you know think of it as you buying out a 20 server uh for you know on aws for month for for your users so your transactions are can be all on meta transaction base and for the users it's like a click click kind of experience and two second block times also help help in that so user clicks something happens within two seconds and then you know he gets his results so the user experiences can be superlative on that and you know like happy to tell you that matic is like right now one of the fastest growing dab platforms worldwide and you know in terms of games specifically games and nfts you know every i'm pretty sure if you talk to at least like every uh you know like three games out of them you know one or two would be already either already be automatic or would be in higher stages of you know exploring and building on top of matic network and similarly we are also seeing a lot of things on the d5 side uh prediction markets for example auger is is in fairly advanced stages of of you know kind of exploring and and you know they have put out multiple uh you know things about like discuss this in public multiple times uh then decent land like virtual worlds is a very big you know example gaming side as i already told you that you know like bigger games like you know neon districts and you know mega crypto police and you know multiple ones they are currently uh you know uh right now um so so yeah so and then you know developer community is also you know going very fast and since it's it's it kind of derives its benefit from ethereum and evm so it's like uh you know the documentation around it and everything you get it like in at a fairly uh detailed level uh when you're building with matic um technical advantages i think i've covered most of it uh here but you you know on a snapshot you can see that you know it's highly decentralized uh if you use plasma your asset ownership is still defined by ethereum so user could exit to ethereum and then you know like this is kind of an older side uh slide uh but we did a testing around with 110 validators and you know we could see the the chain could achieve easily 77.2 okay transactions per second so and the gas is extremely extremely low we are like on the main net we are seeing even lower than that you could easily go to explorer.matic.network and see for yourself like you know like the kind of you could see uh transactions happening every few seconds and you can easily see the kind of glass that that is that is there so and as i already said that if you are a cdm developer you are already a magic developer you don't need to learn too much of things simply hop like switch your metamask to this rpc mumbai dot matic.today this rpc link and get some faucet tokens uh and then you know get going like if you are a sm developer you don't need to learn anything new and then you know build uh slowly on top of it um this i have already covered 100 compatibility with evm chain only the deposits and withdrawals becomes like you know one additional ui layer if you want to you know what if you think that your users are going to use a lot of like depositing from main chain and drawing back to main chain uh otherwise like if you you know the everything works uh you know just it was working with ethereum uh so yeah so from here i would hand it over to angela and then you know let's go directly to the uh demos uh and you know where india can walk you some parts of the code so yeah that's that's about it from my side um can you uh give me host access so i can share my screen yeah i think now you can share your screen oh okay i can't come on wait just a second um is my screen visible yes yes okay awesome so uh yeah so i'll be talking about the developer side of things so moving over to why exactly do devs uh love matic so one thing is that there are no new skills that are required for you to port your either pre-existing tap on matic or build out a new tab on matic these the skills that you're already familiar with you can use them to start developing and so the two ways that you can start interacting with matic network is one is that you start building a new dap which is as simple as just heading over to remix and deploying your first smart contract i'll be demoing that as well and the other is if you already have a dap you can use matic as a faster transactions layer so in that case uh you can have your erc20 721 or double one double five mapped over to matic network and uh as soon as it is mapped you will be able to deposit your uh assets over to matic and then you can uh do the transfers and then you can withdraw from matic so connecting to matic uh from your back end or your front end requires no other effort so if there you already have a library that uses an ethereum provider you can switch over to matix rpc so uh this is the uh this is one of the rpcs that we have and the other rpc uh like an infurial like provider uh which is block widget also provides uh an rpc from wherein like similar to the in feudal's experience you can register your dap on the dashboard and you can get an rpc so swarup from block vigil will share the link in the chat so you can head over and uh request your links there so next is i'll be demoing a few bits of the uh of how you can start interacting with matic so these are the two links that you can open up if you'd like to follow along or if you'd just like to see the helper doc that i have put together so this helper dock will help you to get back to these uh to whatever is being discussed right now so that you don't have to open the video again so it's uh so in this helper dock i'll just switch my screen to the docks so that i can uh yeah so i think it's yeah okay so this is the rock so basically i'll be uh going ahead with connecting the rpc to uh your truffle project or your metamask and then deploying your first contract via remix next is i'd be talking about uh the network agnostic transactions feature i'll just open this here okay so the agenda would be this and so basically the first two parts of the demo would be how you can switch over to matic uh as soon as possible and how quickly you can switch over your code to magic the next part is how you can make it seamless for your users to switch over to layer two because most of the cases users might not be familiar with uh like adding rpc links to metamask or their own web3 provider and the last part is i'll uh mention and i'll share a few code snippets uh wherein you can wherein cross chain transfer of assets can happen through the sdk that we have so starting off with uh interacting with matic so let's say we have a metamask account and it's you just have to add your own custom rpc and i'll just add over here umatik dot today the chain id is 8 000 anyway it's optional and i'll just add okay so this should be it and this is how my metamask is now connected to mumbai and so there was also a question in chat if matic uses solidity yes it does so this is what i'll demonstrate right now so i'll my meta mask is connected to mumbai and i just deploy this very simple smart contract on mumbai network which is which so mumbai network is child chain to goldly network so in case you would like to transfer your assets so the parent chain that you would want to use is goidi and i'll just simply deploy confirm okay so i've got my smart contract if i head over to our explorer which is uh just yeah mumbai explorer you should be able to see your smart contract over here so you can uh interact with the explorer as well this is the transaction so next what i'd like to share is so let's say so this was how you can deploy your first smart contract on my so there aren't anything new that i've done uh so the only skills that were required was how to interact with remix and how to write solidity so the next part is let's say you have your own truffle project and so this is like a built already built app so it is like a simple token transfer app and it has a it has contracts like one contract and it has a front end which i'll just run so let's say my uh entire code is deployed on ganache or any other blockchain network so i'll just first i'll just compile the contracts and make sure that they compile all right and they migrate all right so i'll just quickly copy this private key because we'll be needing it so let me just import okay and switching over to localhost so my contracts have compiled to canash okay and i just okay so this is my uh deployed application so this is connected to uh this is connected to so the front end is on uh localhost and the backend which is a ganache it is deployed on port 45 and i'll just simply connect it and let's see my balance over here okay so i've got my balance so uh basically so let's say this is my application now i'd like to migrate over to matic so the so in case you have your built truffle project the only thing that you'd have to add is this particular object in your truffle config which just specifies matrix uh rpc and the particular account that you'd want to use to deploy your smart contracts and that is it so this is the only thing that is required and i can just simply now switch over so i can just remove the nash now and let me just close this as well okay so i'll just migrate over to matic this will probably give me an error i think because i haven't just a second so basically i have to export my private keys which is an env okay now it should work so i'll i'll migrate my so the all the process remain same i have compiled my contracts now i'll migrate over to matic network and once it's migrated i'll switch over to okay so it's probably already there i'll just switch over to matic from my metamask and see what do we have here okay so probably it was this account that's already connected yeah so i've got my balance here so so this is how it's done so basically what i just did was i had my already built application uh using truffle which had a front end and a back end so the back end were the contracts which are deployed on any chain i switched over to matic i added the rpc so this was possible only because matic is an evm compatible chain so anything that is compatible with ethereum is already compatible with matic so now that my meta mask is hello uh okay i'm sorry i just heard something okay so now that my metamask is connected to matic network i'm able to see my balance but right now in this entire application what we are expecting from the user is that they know how to add custom rpc so basically we are expecting each and every user of our application to add a custom rpc and add all these details in any of their web 3 provider that they're using now to bypass that what we have is a network agnostic feature so i'll just switch over here to this okay so network agnostic transactions is something that can uh so basically the user doesn't need to know that the transactions are going over to a separate layer and they don't even need to know if the transactions are going to a blockchain or not so basically they just need a web3 provider wherein they'd be signing messages they don't need to have uh funds for gas or anything so for this i have a demo ready here so first of all i'll just show you what is happening okay just a second so this is like a simple demo so here in like we had like a simple transfer app of tokens that we deployed this is also similar to that we have a token address which is deployed on mumbai and let's just switch over to a different network goldie okay so now we have switched over to a different network and this is the token and let's say let's say uh i'll just make so this account has zero eight let's just switch over to an account that doesn't have these tokens as well okay this account so this account has zero tokens zero eth and uh what this person would like to do is they want to mint some tokens and then transfer some tokens and these two actions will be will happen on mumbai network so let's say i first meant about 200 tokens here so this is not a transaction pop-up on metamask this is a message signing pop-up so the only requirement in uh in an application that uses network agnostic feature is that the vector provider should be eip-712 uh compatible so the specifics of which i have linked in the dock only so that should help you basically it's just a very uh like nice way and a prettier way of displaying the message that you'd like to sign that you'd like to get the signature uh from the user so i'll just simply sign it i haven't given anything as the gas so this is the signature that was relayed over to this server so this is a very simple server that this is just one script so this is in no way a production ready server in cases like this what is uh expected is that a network of relayers is running that are picking up these signatures and that are executing the signatures for you so what this uh what this post call does is it just takes in the signature function sick and the intent so intent is the function sig signed over by the user and the contract address where this transaction has to be relayed to and once this is done the uh what it returns is so this server returns the transaction hash this is coded in such a way and if i so i didn't switch over to matic network i'm still on goalie and if i take this transaction hash and i open on mumbai's explorer i'll be able to see this transaction executed so before getting into the details of how this happened i'll just reload and see that i in fact got 200 tokens on mumbai so now just mention so what exactly happened behind the scenes was one thing is that the user signed on a message that message was relayed to a server and that server then interacted with the blockchain user didn't interact with the blockchain and neither did he pay for gas so the function that was called on the particular contract was execute mera transaction and in the logs you'd be able to see that internally this particular function called uh the other function that we actually wanted to execute which was transfer from address zero to this basically minting these tokens and similar to this we'd be able to uh transfer funds if we'd like to let's say we now like to transfer two of these tokens similar way we just sign and signature is relayed to the server which will then display the result hash over here so the post has happened i get the result hash and just similar to this i'd be able to see it on mumbai's network okay if you'd like to also get into the details of how to make a contract network agnostic you can actually look over to the code here which is this particular function has to be present in any contract that you'd like to uh make it network agnostic from so basically it just expects a function signature and the user address who is executing the transaction so this uh if you also uh if you would not want to spin up your own server you can use bikonomy's mexi sdk and this entire strategy was also put together by by economy which is like a standard meta transaction strategy for any contracts and all contracts on matic's uh network so any child contracts that you'd interact with or any contract that you have deployed so basically any child erc20 which is deployed on matic network uh will be uh will already be compatible with this feature so you don't have to worry about how to implement it you can simply start using it so uh yeah moving ahead uh this was like a brief demo of the network agnostic feature next is if you'd like to now do the cross chain asset transfer this is so basically by now if you are comfortable with using later and if your users are also comfortable with using the layer 2 in your application the uh one thing is that you'd want to now transfer assets from main chain to matic chain and then also back to main chain if you'd like so that thing can be handled by matix sdk which is just two simple function calls which is approved for the deposit and uh transfer for the deposit so the function uh so the line so the code one to six happens on main chain uh so basically these two function calls happen on main chain and what the second function call is doing is it is transferring those tokens on deposit manager now how they uh so how one token is so how the asset transfer is handled by matix contract is that when you transfer over to matic your contract on main chain uh so the deposit manager on main chain locks your asset and then it it mints on mat exchange and when you'd like to come back from mat exchange to main chain you just simply burn your token on matic network and give that proof of burn so that transaction hash uh to maintain contract so basically deposit is the function that so deposit is two transaction calls for uh on the so so let's say we are transferring from goldie to mumbai so it is two function calls on goldie and for withdrawal it is one function call on matic and the other function call on goalie and this particular thing of two function calls is only in the case of erc20 token transfer if you'd like to transfer erc721 you can simply transfer it uh to the deposit manager and the deposit will be handled for you so the final part that i'd like to mention is in terms of cross chain asset transfer is using of widgets so if you're uh if they if you already have your dap logic set up and now you'd like to use matic network for just as a transactions layer then you can simply use our drop-in widgets that are uh you'll find you'll find relevant documentation in our website and so basically you just have to register your application on the dashboard and you'd be able to get a code snippet which can simply be used in your application giving your uh dap id and it's just as simple as having this drop-in widget on your application wherein users can simply deposit and withdraw their assets so only the setup has to be done via the dashboard so yeah this was uh all that i i had to mention and if if there's anything so these two links should help you that i have mentioned in the uh in my presentation as well so the second link is for the code that i had run here so this shuffle code this was the network agnostic code and the shuffle code here so you'd find the code in this particular link and the notes or the helper doc in the first link uh moving over to who is building on matic i think i'll hand it over back to sandy yeah so i've been once again share my screen okay this difference angela can you uh maybe share the side slide again because i think i'm having some problems yeah yeah sure yeah just a second okay uh it's visible right okay yeah yeah so uh you know i briefly already spoke about it so let's like take maybe one more minute on that so you know like these are some of the bigger ones like decent land and you know somnium space these are two bigger kind of vr spaces ethers also now moving to magnetic network and all that this is like a very small uh this thing uh on the d5 side the the kind of bigger prediction markets almost all the bigger prediction markets are looking to like be on matic networks so you know these are some of the global's angela we can go to the next slide uh did we lose angular um i have switched over to this slide you can see it right here yeah yeah yeah so please move to the next like so we you know as we say that we are in this together we help a lot of teams who are building uh you know applications on top of ethereum or on matic network by providing a lot of like grants uh you know and then we have a very big like fifty thousand dollars a month uh you know kind of get point grant program going on uh we're in right now around 17 teams are participating uh and then you know they are getting a lot of public grants also apart from that they get like overall a pool of 50 000 also uh you know from matic sites team uh from matics matic side uh to build their applications and this is this this build and on program is for early stage teams who you know want to grow and take their product to the next level of these things so we also help our teams to you know get the early users so matic has a like one of the largest communities now in the blockchain space uh you know our twitter handle is also like followed by more than 55 000 people now i think 55 6 000 and then our telegram group is also like you know real 3 000 30 000 members over there so you know you you get all this community to initially support your product and then we do a lot of campaigns grant programs uh investment connects investor connects and all that so for example the bitcoin kernel program also we have already funded like three four teams over there so if you are building something interesting which requires skill and you know uh you want uh any help on taking an application the next level definitely uh you know we can we would love to help you out and we are very close we provide fairly close handed support for uh you know application developers to take their applications to the next level uh next slide please yeah so these are some of the examples some of the pr's that we you know kind of do for our uh partners and all that next slide yeah developer support program is also like you know we have now increased the overall pool size of the developer support program to around five million dollars this uh you know we provide technical guidance once you are building an application we provide we kind of have a you know fast track channel with you guys and then you know we help you with the technical guidance side uh you know on the security audit side also we are connected to multiple security audit firms so we kind of wrote them in also to help you investor connects are already you know part of that and joint marketing also next slide yeah so we are backed by binance and coinbase and some of the other investors yeah so it's also one thing yeah that's that's pretty much it from our side uh you know any questions so where should we uh trent where should we look for the questions like one is the chat forum yeah i just dropped something in the zoom chat and then there are a few in the youtube stream as well but we're gonna prioritize the people in the zoom chat as well so if anybody wants to unmute and ask their question verbally or write it in the chat um juror sandeep or angela would be more than happy to give you the information you need um let me just scroll through the chat to see if we have any uh one of the questions from youtube is uh is matic the base token for the network uh what are gas fees paid in um yeah uh so yes matic is the base token for uh paying gas on matic network so you'd need uh yeah so basically you need to deposit mathematic tokens onto the network for to be able to pay for gas actually i'll just also quickly share our link to the faucet uh if you'd like to test out quickly there is a faucet that we have and also the link to the mapper application that we have another question i see from andrew are there any example projects that we can look out definitely so like on the gaming side you can look at let's say blockchain cuties or maybe uh you know decentral gains is one like interesting inside the center land you might want to check check that out and uh you know many many uh such like on the gaming side you will find a lot of uh this thing like synergy of sierra you can uh you know go and i'm thinking of uh some games where you can play it with meta transactions uh on that like there is this one that this recently went live uh maybe five bit yeah yeah is it bad big yeah yeah yeah so bad they have a full-blown uh like meta transaction integration so i think that that would be a good application to kind of explore how uh you know the user experience can work on matic so yeah so many applications like that plus we will be having our dab radar and dab review dot com kind of applications uh like integrations very soon and then you will be able to then quickly uh have it all within one place yeah uh another question i've seen come up is um or we can um leverage your experience what sort of things are you excited to see built on medic i know you guys talk a lot about high throughput applications like games or social media applications but are there any specific things you can imagine people building uh forget online yeah yeah so uh i think yeah so on the application side like as you as you said that gaming and uh like gaming an nf3 magic is already like big already maybe one of the biggest aft on only after ethereum i think and then uh you know and this these are like still very early days in our minute like it went live like two months back or whatever and then on the social network side for example the bigger ones like uh sapien network and you know murmur all these are like building on on matic and about to go live uh apart from that like recently we are also seeing a lot of d5 uh then you know like there are their projects like easy fire network who who have like folk compound protocol and then on top of that they are kind of building micro credit functionalities plus you have projects like ave gotcha very famous project building on top of away you know using this so they are also in fairly advanced stages of exploring you know mavic network for example uh pretty actively uh you know doing development so you know on the d5 side also synthetics for example is a is a big field where you know people can build applications and then uh you know now on the side chain you can you can have some of these uh you know protocols available over there for which you can build during your hackathons plus you know like chain link for example uh there is a very high chance that matic will be the second chain only after ethereum where chain link mainnet would be live and they have also talked publicly about it and once that is available you can kind of imagine having like you know a live your real time price feed every two seconds uh like you know because the block time is two seconds so how will it impact uh you know or lead to uh d5 applications which will be more like more secure uh you know especially like which are getting in uh or equalized data for example you know a compound like lending protocol on the side chain can it go for a lower collateralization ratio instead of 150 percent can it do like 125 percent because you know the the the the transactions are happening at a much faster rate the price feed is getting fed into the system very fast so is that a possibility those kind of things you know would be really cool to imagine that when like d5 has this kind of scalability available what kind of applications can be built so you know gaming nft social network sure but you know if you guys want to explore on the d5 side we would uh we would be very happy to see and then i think big bi economy is also there i think we'll be offering some joint bounties with bi economy so you can you know build applications and then be eligible for both the kind of bounties build it uh on top of the genomic network and then integrate meta transactions with economy so that would also be pretty cool to see and you know kind of user experience we would like to see where you can build like a robust uh web 2 kind of experience where it's like a click click experience so these these would be some of the some of the areas yeah yeah how uh how can we get started on the process to work so you know angela has already given you the faucet and the uh you know the the test net contract so you just need to take that and then configure that rpc on your metamask on the test net get some tokens and then you know you can start deploying using your remix or truffle it's exactly like uh ethereum right so uh you can get it started from there and then uh you know trent and i'm hope i'm thinking that we'll have a discord channel also over there so you can reach out to us directly to me or angela any kind of help you guys need and we can create we can we can kind of directly help you on any things like that it yes definitely we should be opening up the sponsor channels today so anybody who has questions from this or anybody from the youtube stream who i wasn't able to join the zoom call and is staked uh you will be able to join there and you know get help with any integration with thematic network that you might need um i think all of the questions are covered there might be oh there's one more question from how can we uh about smart contact which needs on-chain data so i think uh the question from stanley is about having the data from ethereum so we have a state sync mechanism uh stanley uh so you know you could use that state sync mechanism to sync some of those values from ethereum to matic side chain and vice versa there are few teams like wild wild cards who are building dows where the uh you know the applications or where the voting on the dow happens on the layer two because you know voting needs to be low cost but then the results of the of the dow or voting goes to the main chain and from there you know the uh the actions on the funds of the dow actually get taken so something like that if you need something like that or you know if you need if you don't need like a decentralized form of it and you want to like have an oracle speed into main chain uh uh from the main chain to the side chain for that need of your application that is like very easy to do you can read it from main chain like some events and then fire up a small transaction on the side chain that should also be easy to do yeah sorry trent yeah using no that's great great response [Music] um let's see there's a question about matic relating to eth2 um not super related to the hackathon but i'm sure sandeep would have an answer for it yeah so on the east 2.0 uh you know matic is a layer two on top of ethereum so you know i think eight two point zero whenever it comes i think that's that's very helpful because you know that that gets our uh so for example matic check points right now go to eat two point zero every 15 2.0 is there you know those checkpoints can become like five minutes so you get like eventual uh finality on main chain within five minutes and then you know the other question would be that whether it 2.0 will make any other scalability solution like you know especially layer one definitely it will make a lot of layer one solutions to be redundant but on layer two what we believe is that uh and our vision is that you know even if age 2.0 comes in and then it has 60 to 64 shards and each chart is let's say is comparable to the current ethereum main chain right so which has let's say 13 to 15 tps let's assume that it goes to 6 30 tps for each shard right even then it's with 64 shard it will be like 1800 to 2000 transactions per second very good for the current level of scale but the kind of scale that we are thinking onboarding like uh you know that the decentralized applications looking to onboard next million 10 million users onto main chain but we believe that the moment the the the moment the supply of those transactions go up uh like tps on the ethereum main chain goes up like you will see even more innovation on multiple applications which will again surpass that kind of demand and you'll start seeing a lot of like similar kind of scenarios because even that tps is not about so but what we believe is that layer one ethereum would be a very good settlement layer maybe the layer one will become like a pure defy uh you know blockchain and then the other kind of business activities social networks or like you know gaming nft use cases they might be on the they might remain on the side you know layer two so that's what is i you know our belief and uh i think yeah hopefully that that makes sense and plus also like 2.0 still you know many of us believe who are tracking the development like it's still 1.5 maybe two years away like fully blue full-blown multi-shard ee 2.0 available for you to build applications so i think you know there's a quite a bit of time to go and that happens yeah there's another question in here about dev contacts um sandeep uh angela all a bunch of the medic team will be in the sponsored discord starting today um so if that's specifically the discord you should already be in if you're hacking for ether online and then that channel will be opened up and you'll be able to ask your many questions to them um and they will probably i hope know the answers yeah exactly but yeah i mean we'll be there in the group and then anytime feel free to tag us we'll be there at a very fast like we have a very good response time on that that one important question carlos asked that i believe that the major gap is metamask and custom rpgs you know we completely agree with you carlos so you know there are two two things i want to tell over there so one angela you can if you can share that tutorial we have already built a way if you use meta transactions so uh the users don't need to switch from mainnet to the sidechain like you users can still remain on the side on the main chain your application knows the context so when user is doing a transaction on the sidechain he essentially just signs the transaction rather than doing it on main chain and that the signature actually is relayed by other meta transactions on the sidechain so user can remain on the main chain you he doesn't need to switch the customer rpc so that's one way of doing it if you want to use metamask second way is all the major wallets like your portis your uh you know uh like you know taurus as well as your uh you know fortmatic which is now magic uh all of these like arcane wallet all of these wallets support uh matic network you know default from their you know sdk implementations if you don't want your end users to switch the rpc simply you can use these email based wallets like web browser based wallets to you know kind of relieve them of this pain and also in future we believe that metamask is going to come up with the uh you know with with plugins wherein the all these things could be automated so yeah hopefully that would also be bring in the solutions for metamask but for now you can use either of these two and you can see angela is already trying to do something wherein the user is on uh you know main chain uh you know on the main chain itself he doesn't switch the this this thing and he's doing a transaction on uh uh like issues doing a transaction on the side chain uh the only by popping up a you know kind of transaction so that's one thing uh how matic is different from other layout to solution zika roll up or optimistic i'm not sure if if we have a or already like a production ready like one thing i would say is the difference is the production ready uh you know implementation optimistic roll-ups especially from the optimism team they are really like you know awesome i think they are going to make a lot of like a layer what other layer world solutions uh like completely redundant because you know if you get that kind of scalability uh with optimistic roll-ups which is like as much uh you know as good as ethereum level security with optimistic rollouts i think uh that that could be really uh cool so how matic differs is that the like from for example zika rollover i will not take a take it up right now uh because you know zika roller we don't have a production ready uh you know implementation i'm not sure uh and the but optimistic roll-ups is like optimism team came up with the test net the the difference between the optimism uh kind of optimistic roll up and matic kind of side chain is would be on the scalability side of things so on optimistic rollups all of your transactions actually the call data is being pushed on ethereum main chain so you know it will be slightly costlier also in matic sites and what is happening is all the transaction data is uh kind of being merged into a checkpoint and that goes on to maintain so definitely when you with optimistic rollups when all of your call data is going on to ethereum your you know provability on ethereum is much much much higher but then the scalability is also limited because you know at the end all the call data is going on to ethereum so you know i feel but for for like kind of d5 kind of applications that makes a lot of sense right uh but on the matic side chain the scalability that's why you will have like much higher scalability faster block times and everything on on this thing because you know in the background it is putting one particular cryptographic checkpoint on ethereum instead of putting all the transaction data on here that's how optimistic uh you know roll ups and uh matic differ about zk for example looping if you would want to compare so looping currently if if i'm not wrong they support only payments and dex kind of use cases whereas on matic network you can build your evm so developer yeah one thing where like you know from optimistic roll-ups or zika roll-ups or loopering or any other like zk sync also one thing that you will find very different would be the developer experience like right now if you want to utilize uh let's say gk sync or loop ring you will have to learn a lot of new things the new programming language on that side uh you know and then you will be able to build here within like you know a matter of like few minutes you will be up and running so that's i think on the positive side of things the scalability is higher developer experience is much better is what i feel yeah and then yeah i'm just looking through the questions now if you see any other ones just go ahead and grab them uh but before you jump into any last things it looks like we only got a few minutes left so before we lose any other people and we wrap up i just want to make the pitch for if anybody is on this call or watching on youtube and you haven't applied to eat online but you're you know you're still interested in doing it please make sure to apply today tomorrow before uh the 30th the 30th is the cut off september 30th so if you're trying to get your the rest of your team to apply or you just haven't found the time to do it please make sure to do that asap um we are nearing the cap on the number of people that we're going to have in this event so you want to make sure to do it as soon as you can uh and then on top of that you if you are not aware you do have to stake to get into this event um this is something that we return after you submit a project so there is no no worry about losing your funds this is just a tool that we use a mechanism to ensure that people are focused and they're committed to completing the event out i think it's only about 20 us dollars and again you get that back at the at the end so make sure to apply is the first directive and then once you've applied and been accepted stake and link your discord and then that gives you access to all of these online channels all right cool how about we got time for one more question sandeep if you can see one yeah i can see one question from carlos but i'm not entirely sure what he's exactly trying to say so i you know i will just bring him yeah maybe we'll follow follow up in discord awesome well this has been an amazing first workshop for ethonline starting off the week and basically the entire month really strong so thank you again sandeep and angela for sharing a little bit about thematic network and how devs can integrate it they linked a ton of stuff in the chat so we'll make sure to port that over to the discord and get all this information in the hands of packers thank you everybody for showing up and jacob for doing a little bit a bit of mc and we'll see you in the discord remember to apply and stake see everybody thanks guys thanks carl uh thanks jacob bye-bye thanks everyone 