thank you for having me here today uh we're extremely we're extremely proud to be the sponsors of this hackathon we love the developments of any kind and we have a special product for all of you here today it's variable protocol it was pre-released uh i guess on the nft hack a while ago and since then we've learned a lot there are several teams working on the variable protocol right now just yesterday the app sync went live on wearable protocol using lazy minting mainly uh so a wearable protocol allows you to do a lot of cool stuff and we are more than happy to work with all of you on the next wave of the adoption of the protocol we learned a lot from the first teams and that's why we improved how the protocol works and today i i want to talk to you about how to use it and what is the overall philosophy of the wearable protocol so let me share the screen real quick here and and i'll start so wearable protocol the the idea in general is to build the liquidity layer for the nft ecosystem just because right now we'll build variable for for almost two years now and one of the hardest things to build or to crack was to acquire the liquidity on the marketplace is the hardest problem to get because uh when you're building something new there are no buyers to to to to work with sellers and when the sellers come there they're they feel they feel sad and the same the same works vice versa uh if there is a buyer but no no real items so uh they also feel upset so to to kick the roll uh the ball rolling to to kick start the the network effect for the marketplace you really need some some initial liquidity and that's why we built variable protocol it's basically the set of smart contracts and indexing and backends on top of that to allow you to interact with with existing uh shared order book with a lot of liquidity all the wearables users like 500 500 000 users monthly are at your hands when you're using wearable protocol that's that's the most important part about variable protocol and uh so what we really wanted to do basically right now wearable we just released that verbal.com uses variable protocol under hood as the main way to talk to blockchain so variable protocol does all the heavy lifting concerning minting concerning sales bidding auctions it's it's all done on variable protocol and variable.com is just a proxy to the protocol when when you we are talking about this this trading stuff so robocom is an app built on top of verbal protocol so let me briefly cover what we built for you so the first the most basic layer is the nft layer you can use your own nft contracts any erc721 or 1155 contracts are compatible with with our trading trading uh uh smart contracts but uh in addition to that we've created a special set of smart contracts variable uh token contracts that allow you to use lazy minting so that means to create items that doesn't live on chain before they are bought so it's it's in like a signature item you sign the message and and then you submit it to the protocol and you create an order and once that order gets matched this item would be minted by the matching contract on chain and given to the new owner so that basically uncover the minting to all the people out there without the need to without the need to have ease to pay the gas prices it's not expensive these days but still that's that's uh that's a entry barrier right now you can just support fortnite or any other great custodian wallet and the user would only need to sign the message in order to create an item that's that's really powerful aside from the lazy meeting this user contracts the user token contracts they support such nice things as baked in loyalties so you can specify the arbitrary set of royalties that would be respected by the exchange contract on every secondary sale and aside from that you can also specify multiple creators so instantly enabled collaborations i guess the space really lacks a nice app for the collaborations and if everybody is building it today that will be really cool so it's all supported on the wearable smart contract for the token for the nft created so if you want to build a great nft asset you can fork the wearable token contract uh create your own collection uh out of it deploy it and enjoy the lazy maintaining and multiple creators all of that so the second big part of variable protocol is actually matching contract it's uh the contract that does the swaps it supports erc721 year 1155 and erc20 trades in any player basically you can change your c720 721 to 721 or 721 to 8th or 721 to die 721 to use the c so all the combinations are supported uh the main thing that you need to understand probably is that the order storage is off chain so in order to create the order you just need to sign the message uh that i am the wallet 0x blah blah blah i want to sell that nft that i own for 10 die so there are like two sides of the order uh the asset that you want to make or or you want to give and the asset that you want to take you want to receive in response so two-sided order you you combine that that's that message you're assigning it and you submit it to the protocol you submit it to the back-end api that would store the order and that you can query for all other orders that's how shared order book is is real it is implemented so uh it's it's a back-end api that you you can store orders on and if you want to buy an item now you're you're creating a counter order the counter order is the same order basically but where you you specify it as a make you now specify the make asset as money i want to give money and i want to receive an nft and again uh you can either store this uh in the api or you can take these two orders and and go to the contract and match them so that's that's that simple basically uh again i want to sell an nft so i'm assigning a message and i also calling an approval function so i need to allow the contract to take my nft without my my my knowledge i might be offline i'm approving an nft i'm citing the signing the order i store it on the back end so uh now how does the auction works the auctions are basically the consecutive bits and bid is just the order uh which comes before the sell order it's a buy order which comes before the sell order uh the buy order is when you're making uh so the make part of the order is money and take part of the order is nft and again you need to to call an approval for your make uh part of an order and then you can match an order uh that's that's the basic architecture there is a lot of features and that our uh matching engine supports it supports uh multiple payouts so you can specify again the arbitrary set of addresses that would receive um the the uh the appropriate amount of funds that you specified in the order it supports it it all obviously respects all the royalties that it finds in the asset and it also allows you i guess that's the most important feature out of all of them it's a it allows you to instantly monetize your use of the protocol it allows you to specify the front-end fee so each front-end through which the order was submitted you can add the fee on top and when the matching uh engine works it it just transfers the fee to to the front-end address uh this is this is really important for everybody who wants to work on top of the protocol because like we understand that you want you want to have a sustainable business um and it's important to understand that there is a sell order and the buy order and each of these orders can have its own respectful fee so if there is a one front end that specifies on minting you can only mean through that front end you are like really targeted to acquire the best talent out there and these people come to your front end and they mint a token on your front end and they put it for sale on your front end so when they put it for sale they create a sell order and the minting front end adds a sell order fee that they will receive once the order is matched now this order is in the shared order book everybody can match against it and now there is a wallet imagine there is a wallet that doesn't do any minting but they have a lot of users and they show all the orders for sale to their users so when the users come to that front end they create a buy order in respectful buy order to match the sell order and now this wallet as a front end adds its own fees to that front end so now when the orders will be matched the protocol will receive the fee the front-end that created the sell order would receive the fee and the front-end that created the buy order would receive the fees so there is like a a full supply chain from from from the seller to the buyer um so this is our the the main things to understand on top of that we have an indexing layer the back end that listens to the blockchain to understand all the things that happened every nft transfer every nft creation every nft burn or a sale is indexed by by this ser by this layer and once you submit your your nft for mint you can now query that in the indexing layer so basically there are all the tools that you need to to build either a marketplace or a minting tool or even the contract that wants to interact with other contracts um so as a as a task for this for this hackathon uh is like like to build something on top of protocol uh the sky is the limit on you in the imagination you you can choose anything uh one one thing is particularly interesting to to wearable protocol i think you can um as your participation the hackathon you can actually build something uh inside the protocol so to improve the protocol for example uh if you want to improve the contract to contract interaction and you want to create a storage on-chain storage for orders that's that's one task or you want to add like on-chain link english auctions that that would work directly in the protocol that's all like a part of the scope as well so here is the wearable.org website with all the resources that you need uh you can you can join the discord uh and ask for the questions and basically the the two most important the three most important links here is like contract addresses and it's our contracts deployed on mainnet and brinky by and rushton you can find the addresses here as well as api reference and and tutorials for the for for the for the protocol so api reference is the most up-to-date controller listing for for the indexing service here you can find order controller and code controller item controller so item controller is is the place where you query all the items for example you can query items by owner or by creator collection uh and then you can carry the metadata of an item by id or to get the same item by id if you already know that here on the right side you can find the api endpoints to query the protocol uh here again the option wrinky buy and mainnet all three endpoints are here um some example on answers uh there is a lazy main controller if you want to create the laser mint items that would leave inside inside the protocol and some some other helpers so uh if we try to [Music] get on the on the overall protocol flow so at first you need to create an item in order to create an item you need to call the um like the lazy mint controller if you want to create a lazy mint item or you can call the your your contract um mint and transfer function on on the on on variable uh erc 721 1155 contracts uh there is a little helper function that will help you to generate the token id that you need to pass uh we are pre-creating the token ideas um they are not like created as the part of the meeting you need to specify them so you're calling here the generate token idea then you create a lazy main item you in order to create the lazy mint item you need to combine a structure uh something like this so it's a type contract token id uri creators royalties and the signature so you need to sign this message without this field in order to create a lazy mint and then you submit it here uh basically um to to the create lazy main as soon as you did that you want to create a cell order so to create a cell order you're going to encode controller and you are creating the order so the maker is you you basically want to make an asset the asset is uh is erc721 here is an example for for the bid so if you want to create an uh a sell order the asset would be iric 721 and here would be uh the let me find it here yeah you can find so ears is 721 uh and the contract and token id you pass it here contract token id university 721 then the taker is empty and what you want to get in response you want to have 10 is in response salt is the random number start end is the time time constraints for that order to get live here is the data field you need to have the wearable v2 data and you can specify payouts and origin fees origin pieces this front-end fees that you want to pass and you need to sign in this order the signature so uh why in code controller so this controller would return you the special encoded um the encoded structure that you need to sign using eip77112 it's the signature it's the typed signature that you need to use to sign this order so basically uh this encode controller is returning you all the data that you need to pass into eap 712 to create the order to sign the order on the front end uh it also gives you the transfer proxy address it's the address to which you need to approve your item you need to approve you you're selling an nft you need to approve the spending of that nft to this particular address um so if you used the wearable erc721 or 1155 contract you don't need to call any approval just because all the items are automatically approved for our own exchange if you use variable uh variable contracts i don't know how clear that is uh but i know that as soon as you will start to dive in into the protocol you would this this video would be helpful to you so uh try to release in that so again we created an item with the lazy mint or an actual item and now we called in code order controller that basically is building the the order signature the order structure for us that we need to sign so if that's a lazy mint item the order and code controller would understand that this is the lasermint item and it would automatically pre-built the the correct structure again so you're assigning that and you go to the order controller uh create or update order uh this is the end point and you're you're putting the signed order here you signed it with the eap 7112 712 and and you put it here in this endpoint designed order now what you can actually do you can get all bits or get all sell items for sell orders by maker by item by collection so the order is already there on the protocol and now you want to query the protocol for all the orders uh this is when you're making a listing you're clearing the protocol for the orders for the connect for this particular item or for the list of items and now what you want to match that order so again in order to match the order you need to create a counter order so basically just uh the mirror the order to switch maker and taker uh places and to sign with the new uh with the new wallet that that is making the the bid the buy order uh instead of doing that by hand we created a nice little helper for you which is called prepare tx for order so if you found an order uh then you can call preparatix by order uh here's the end point it it takes the hash of the order as the order id and the preparations uh and all you need to to supply is the maker basically you who's creating the counter order is the amount so if the order the sell order was for 10 items and you only want to buy two you put two here in the amount and you can specify the payout and again the fees and that little helper would return you uh the transaction the pre-built transaction the tool and data and so that you can actually like call it you can actually call it it was web three you you you passed this to and data to the web 3 provider that you have and also if that's a buy order and you want to attach the is the is as the value to pay for the order it would it would tell you how much is do you need to attach and uh if that's erc20 it would also tell you how many erc20 tokens you need to buy and it it would give you the transfer proxy address to which you needed to make an actual approval because the contract would need to be able to spend your your c 20 tokens without your your your your transactions again not sure how clear that is but that's all you need to actually uh match the order so i would i would go one step further so here are the dogs uh it more or less describes the overall flow of the protocol some calls from here are outdated that was pre-released for the previous hackathon so please don't pay attention to exact calls here the the up-to-date version is here it's it's uh it's api reference so but you can understand you can read what i just said about the overall structure of how the protocol works again the best link here is under the docs tutorials there is an example code on github that our cto prepared for you to actually uh see the example code which does a lazy minting and creates a cell order and submits a cell order to the protocol that's what you need in order to use the protocol okay i'll stop here and let's see if anybody has questions there are several questions in the chat uh the question does wearable support zora protocol nfts so wearable supports any nfts out there that is compliant with erc721 and 1155 standard if you want to create an order the only new thing you need to do is to specify the contract and id and make sure you don't forget to approve the contract to spend your uh your your nft uh and the question from nadit is are the nft files stored on the ipfs or any pinning services so yes wearable items are stored on ipfs the protocol does not actually give you the end point for ipfs so if you want to create the nfts that store that are stored on ipfs please use wearable ui or your own pinata uh pinata and pinata credentials to upload to ipfs uh the next question does wearable support any other networks besides it's net so um we don't support that yet but this is on our like really short term plans to deploy that to polygon medic and to uh several others even compatible networks probably after matic that would be moonbeam to support polka dot uh version or xdi so we can we completely rebuild our infrastructure to support multi-chain we will do that really soon if you want to build a a product for any other network please just refer to eruption or winky buy version for the carrying hackathon and then we can extend we can work with you to deploy that to the uh other other network yeah you can deploy these contracts yourselves but you won't get the indexing service you the next question do we need rarity tokens to interact with protocol i i completely forgot to tell about this emily do do i have a couple minutes more yeah sure we can extend by about like five or so minutes that's no worries okay thanks a lot uh so you don't really need rarity tokens to interact with protocol the best thing is that you will actually get rarity tokens for interacting with protocol there is the app mining program that we are developing right now and if you brought some volume to the protocol you would be you would be granted with the rarity token because we wanted to build a dao that would govern the the protocol and the best users the best like citizens of that dao is the users of the protocol um and kevin is asking is the unlockable content feature only component of wearable.com i don't imagine it is in the wearable org protocol but just wanted to make sure so uh very unlockable content uh is done on the back end so it would be part of the protocol soon we didn't make it a public api yet uh if you want to interact with unlockable you can try to just find the call for the unlockable api endpoint from the network uh tab of your developers tool in the browser and use it if you want to build the product project on that would be utilizing unlockable i encourage you to do so it will be part of the protocol it can't be done on chain it's off chain with the back end wheel variable support nfts whose balance of function behavior have been changed as far as i remember we don't use balance off of the nfts at all so we only use like transfers and approvals in order to sell them okay great thanks so much alex some great questions coming in there and if you have any more questions uh alex is in the sponsor wearable channel in discord so feel free to ping him in that channel as well big thanks for the session and maybe you can share those slides and we can post that in the sponsor variable channel as well for everybody to use as a resource but thanks so much where there will be a recording yes there's a this is available on youtube and we can link this in your channel as well for people to have a look at post that would be really great thank you everyone for the all the great questions i i'm excited to build some products with you 