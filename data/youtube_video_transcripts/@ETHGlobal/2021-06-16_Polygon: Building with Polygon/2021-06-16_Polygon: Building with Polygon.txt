have yuling with us from polygon who will be running the workshop on building with polygon uh if you have any questions please post them in the chat you are also welcome to keep this discussion going after this workshop in the discord channel that polygon has that all of you hackers can interact with and um without further ado i'll let you ling introduce yourself and take it away thanks uh hi everyone it's absolutely a pleasure to be here so i'm just gonna share my screen really quick and then we'll just get started so uh it's absolutely a pleasure to be here with everyone at this hour at hack money here on at uh is global so then first i would like to uh start with a polygon so um so then uh we all know that in 2017 because of crypto kds episodes caused major network congestion and then there's a very poor user experience and which apparently is going to be a roadblock to the mainstream adoption uh for ethereum and uh that is where polygon comes in so basically uh polygons solve the pain points like high gas fees and slow speed associated with blockchain without sacrificing on security so then um with that said i would like to quickly uh go over this solution to ethereum uh skilling the architecture with everybody so hold down let me just so the foundation okay all right okay so how does this uh look to uh everyone okay so then i'll just uh assume that uh everyone is able to see the funds uh well enough so uh so basically here uh as we can see uh there are three tier there's a three three tier architecture here so we have so we have here uh staking and plasma smart contract on ethereum and then we have proof of stake layer and we also have a blog producer layer um here as well so then the bottom one is thematic or polygon side chain and then the top as we can see uh that is a ethereum minute and then in the middle we have this checkpoint later so matic or polygon maintains a set of smart contracts on ethereum which handles the following staking management for the proof of stake layer and also delegation management including validator shares and of course plasma contracts which includes checkpoints and snapshot of the sidechain state so basically for our blog producer layer uh here on the matic side chain the which is the entity responsible for aggregating transactions into blocks and block producers are periodically shuffled via committee selection on the validation layer so in durations termed we call as a span in polygon and so then blocks are produced at this layer and this side chain is also evm compatible and so then blocks produced on this layer are also validated periodically by the validation layer so we call it hemdel uh notes in polygon and a checkpoint consisting of marco tree hash of a set of blocks on on the uh block producing layer is committed to ethereum periodically so then you know just for uh every few blogs on um on the blog producer layer um that's where our qs validator comes in it basically uh validates all the blocks uh since the last checkpoint and also uh it creates a markup tree of the block hashes and publishes the marco route to the main chain so then at this point uh we've got the checkpoint feature which is very very important for two reasons so for one is the ability to provide finality on the routine which of course is ethereum midnight and it's also able to provide proof of burn uh in withdrawal of assets as well so then for uh this specific part we will cover in a moment as well so then uh because of this solution we are able to provide fast um transactions and and with the finality of transactions on ether minute uh we're able to provide secured transactions and then with our pos notes on the validators and also the blog producers as well we're able to ensure uh decentralization as well so then that is the architecture and uh then uh we're gonna see problem solved so hold on let me just do this much better awesome um so then so uh there are like a few pro problems that uh polygon uh or mata in the past that that's what's called uh was looking to solve so one is that we know that there's no one-size-fits-all skilling solutions so it just depends on the need for each specific project some may need to use layer two solutions or some may just use a side chain solution so then there's like no one-size-fits-all and then um new innovation in scaling makes the old one obsolete just take a medic scaling solution for instance originally a plasma plasma was implemented for our skilling solution but then not long um we realized that uh um you know just the way this seven day challenge period when user wants to exit the side chain um they basically poses an issue to a lot of the defy projects right so then um so then um now polygon is able to provide plasma pos hybrid solution um and then um there's no formalized framework that offers multiple solutions so that it's clear that uh there will be like a spectrum of different scaling options in the future and uh so then um polygons framework combines the best of insurance secure chains which includes how to allocate gators and as well as the standard loan chains or site chain into a multi-chain system and so then instead of being a eastern killer we look to um to promote and to solve the uh scalability issue in in the space so then uh let's look at uh polygons solution so then we call this a swiss army knife for ethereum scaling as you can see here it's um it basically um the purpose of this is to let the developers decide which solution to use and um it just combines the secure chain and also stand alone blockchain into multi-chain system here so similar to other scaling solutions like polka dots or cosmo or avalanche for inter operability of different blockchains but with this structure it has a few major upsides as we can see here on ethereum being the main hub to connect everything it basically just offers benefits from ethereum's network effect for it's a strong community of users and devs and also supports of evm as well as solidity as well so then you uh just with a long history of serving as reliable base chain um it's uh it's very hard to replicate and also it just take time to to build an ecosystem like this and um so so then just uh with this solution we are uh turning ethereum into a fully fledged multi-chain system and uh just really let the developers define which one is the best to suit their projects and so then the next slide is um about uh history of polygon and also uh the power of polygon as well and as i mentioned polygon started in 2017 in the heat of the network congestion issues caused by a major projects in the space and of course it only got worse like in 2020 with a d5 hype so then um so then with polygon solutions within two years top 20 uh blockchain project worldwide got on board and so then we are providing multiple skilling solutions um so matic peel as on the hybrid pos plasma chain and also we provide polygon sdk as well just for the developers to be able to interact uh with our uh pos chain easily so um so polygon is uh one of the fastest uh growing that platforms and as a leading skilling solution with over 10 billion worth of asset at this point held on the network and as we can see the market cap as of now is um beyond 15 billion dollars and so then we have over 400 dabs on board and we have over 1.3 million user wallets and daily transaction is over 6 million as well so um i think the so then you know just a polygon is becoming what we call us with army knife for skilling and it's able to accommodate uh different projects needs in the space and we have a large it's potentially a growing developer community as well so let's see these are a snapshot of our key ecosystem enablers um so then we uh so a lot of major wallets are able to support polygon and also our partner uh chin ching dia um and so then there are stable coins that are on boarding on polygon as well and then major uh d5 dabs um and quick swap and then there are uh gaming apps as well and then there's uh an ft app as well so uh and also uh there's the meta transaction support from by economy uh gas station network and um all right so then i i wonder if there's a thousand polygon yeah so basically uh those are different uh depths currently um integrated to polygon as as you can see the list is really just uh growing every day and there's d5 there's a fts gaming um there's doll and um also we're able to see wallace um currently support polygon and then of course oracles as well and so then for depth tooling we have all those listed so then the fact that polygon is evm compatible uh it basically just means uh if you are a ethereum developer you're already a polygon developer um there's really nothing new for you to learn in order to interact with polygon or to deploy your smart contract on polygon so with that said i would like to quickly go into our um demo for um how to integrate or how to deploy onto polygon okay so then uh the first thing uh i would just like to share uh how we deploy through remix and then we do uh deployment through truffle and so um so basically i'm just gonna show a very easy [Music] basic smart contract remix okay so uh this is a very straightforward counter smart contract um and um in order to deploy it so so uh so first i'll just try to deploy that in ethereum test net just move this out of the way okay so uh all right so i just want to confirm this transaction foreign okay i wonder what is going on here just try um creation of counter painting okay um this is this is a little weird but uh but then just to quickly um go over what i'm trying to show here so basically um like when we deploy this in remix all we have to do is to select the network that we want to deploy to and so then um so then the first i was on goalie and so then so then just to deploy this contour smart contract and find it okay so this i need to circle back back afterwards uh but uh but then uh in order to deploy its um polygon we basically just have to switch the network the network here and we just need to switch back to uh a test net by here so and uh just to add this into metamask uh it basically is very straightforward and we just need to go to uh settings we go to network and then we do add network and so then this is a rpc that we need to specify based on the docs that we have on polygons site and so basically if you just go to develop and you will be able to see network details menu and then for the network uh you will be able to see matic network as well as its um testnet here so then we could just put all the information here in metamask and so then just to quickly show you so then this is uh pre configured but uh uh you can just add a new network here with uh rpc and then on the network name it's a mumbai test network and with the rpc url so we basically have a few public ones offered here and you can also get gets the dedicated uh free rpc url from those rpc providers and um uh with the chain id for for the testnet being eight zero zero zero one and then um simple and also we have a block explorer for mumbai as well and then you do save and you will have this mumbai testnet configured in your metamask and uh that's how you do with remix so so basically uh i just wanted to share quickly about uh my first encounter with polygon and it's actually back then uh it's called medic so so it's also at east global hackathon we basically uh did a supply chain checking gap and literally i think it's just like within the last hour before we're scheduled to present to the judges and we were still trying to wrap up the testing of the smart contract and and i remember our ui guy volunteered to venture force to explore the possibility of migrating to matic uh simply just for the sake of adding another two sponsor label to our prop project because back then we didn't know very well about uh it was still called this magmatic back then so then five minutes afterwards he came back and he's like super excited and said that we just need to plug in a few lines of code into the travel config file which i'm i'm gonna show you next and um so then uh we need to request uh metacoin um mumbai testnet faucet and that that's it and then that was exactly what we did um so then you know uh he he was apparently our team's hero on that day and of course we all loved the smooth experience because of that to uh interact with polygon and so then let me just quickly check if there's um thanks julian thanks for sharing your story too with um with the global uh hackathons a lot of actually like one inch which is one of the presenter to your uh sponsor as well like started is a project that started a doable hackathon and a lot of projects that have people um in in different teams that have joined uh used to be part of these hackathons so it's really great to have it's first coming again appreciate it yes um we're running out of time here i know there is like a few um question in the chat or not that many uh one was uh does the contract have a compiler warning oh uh let me see did i overlook that oh wow time just flies um i actually still have like a few things to cover but uh um [Music] but i guess we're running out running out of time like um the best part is do your cover uh well i mean if you can do it in less than like three minutes uh we can you know extend by five five minutes or something um otherwise yeah we can uh we'll have to to cut it off because we'll have other workshops after got it okay all right so then uh so that i don't think i'm able to i'll be able to cover them all but then uh just uh a quick uh few things uh as i said um so you know just the the experience that we had with with uh deploying our uh depth to polygon with truffle uh it is just to add those uh field lines of code and that was it uh so so basically you will be able to find out those information on on polygon duck and and also um um so yeah so so i won't be able to demonstrate this but uh that's basically all you need uh in terms of configuration and everything else is the same uh and uh i was also gonna talk about the the um i think actually i i just realized um if you have like five minutes if you want to cover like i said three but like i realized like we have a little bit more uh like we can deal with like five five six minutes like if there if it makes a difference in like showing the right things go ahead got it thanks a lot okay so then uh so that i just wanna quickly uh go over like uh two different ways to interact with uh polygon so then uh one of course is to build uh adapt um and uh to remix and uh deploy your brand new smart contract or uh and truffle are also supported um and the second way is that if you already have a dab uh you could use matic as a faster transaction layer and uh so then you know just to get all the uh tokens like erc20 rc721 and erc 1155 mapped to manic network and then um and then just uh depaul deposit uh your asset uh to matic and then you will be able to do transfer um polygon with near zero gas fee and then you will be able to withdraw them from polygon to the mainnet um as well and our javascript sdk matic just it handles all the heavy lifting for you and so then um connecting uh with polygon network via rpc like all the public ones um as i said you are able to find them on the dock and uh so then you know just for today's workshop um i i will share uh the links afterwards um to the community so then um as we're running out out of time here but if you want to follow along you can always follow the instructions on the link and then if you have any questions with them please feel free to reach out in discord um so so then um as well um you know just for um for men's and ft today it basically uh is like something else that i want to show you guys quickly um hopefully there's gonna be some time okay so let's basically just do bridge and and ft today all right so uh so so basically uh this one um it is very neat in the way that we don't have to have user go to metamask every time to switch to different uh network uh just with a single click here so for example i'm currently on let me just uh switch really quick so i'm currently on ethereum midnight so then just with a quick click here um i'm able to switch and uh so then uh there we go and then they're able to uh just do operations without having to manually switch this so then that's just a great way to reduce user frictions here and uh this feature is actually provided by metamask and then you know i if uh i'll also just share the information as well uh and uh we also have network agnostic feature um as well and uh that's basically available on the duck um if you just look up the economy you will be able to find a lot of information a lot of information there so i'll just quickly show everyone here okay so so uh so basically this one is able to um have user uh interact uh with uh depth without having to worry about paying gas fees and so then we have like two uh different um two to different implementations here um so one is economy it basically is a real layer infrastructure and ready to use and then as you can see here is a depth user and basically um it's able to just get its signature and other interaction details to the real layers here and then relayer is able to send signed contract uh transactions to a blockchain and then pay for the transaction fee on behalf of the user and uh so then you know we have uh this free framework available and uh there's uh economy relay hub as well as user contract wallets and uh through through that um it's able to call the destination contract and uh for the user to uh interact with the adapt the experience is just like um a web 2 um app so then they don't have to worry about the logistics and then there's another implementation here there's another way which is to for uh depths already support their native meta transactions um so the economy really can directly talk to the that contract and uh do not need any user specific uh contract involved uh here so then uh this is the infrastructure here and then just to uh be able to integrate uh with economy um there's a sdk provided for uh this purpose as well so uh so then uh i may not have the time to show you guys but uh there's an ft that today uh which is a perfect um community dab that we did and uh so basically uh just with my current accounts um let's say um um a minute right so then uh just with like zero is here i will be able to means an ft automatic and i didn't have to uh switch network in this case it would just to do behind the scene um for me at this point so let's see if we are able to get some time to do this okay and i would like to connect wallets and i want to say metamask and now it's connected and so then i will be able to mince nft and then we got json data uploaded to fpfs so then um so then for this network oh and it's currently minting at this point so then you register for the network agnostic feature we basically expect users to know how to add custom ad pc and um the details in the website providers that they use and they don't need to know the transactions going to blockchain or not and they don't need to know if it's going over to a different layer all they need to know is the web3 provider where they will be able to sign the messages and no gas is needed at this point so then you will be able to see now my ft is minted successfully and i will be able to look at my transaction here on polygon scan which is a polygon explorer in this case so then that demonstrates the network agnostic feature provided in polygon so then uh so then the time is actually uh tight uh but then the last thing is uh matic.js it's a cross-chain asset transfer libraries that we uh provide and um um so so then um there are a few simple apis that the users um can just use directly to interact with with polygons so bit so basically you know just uh from um midnight to polygon uh uh it's handled as i said by matic uh js sdk uh through approve erc for deposits and uh deposit erc uh those two and uh so so basically those two calls will happen on the main chain and then transfer tokens to deposit manager that locks the asset and then the token is able to mint um polygon and then with withdrawal polygon needs to burn the asset first and then to return the transaction hash to be check checkpoint um to checkpoint to do verification and then after that um the minute is um able to present the transaction hash for burning and after that succeeded um it's able to have the asset exit um polygon into ethereum um okay so then um i think that's all i needed to cover today and uh thanks a lot for giving me time uh to to uh cover those uh stuff and as i said i will share the related links uh after um this workshop and should there be any questions please feel uh free to reach out thanks everyone thank you so much elaine um yeah everybody please uh join the sponsor channel where uh polygon is so sponsor polygon in the discord channel uh to i know some questions are here but please post them there and uh yulin will get to them or someone else in the team will get to them uh thanks again for this super great uh workshop through all things polygon uh it was super interesting have a good rest of the day evening and thanks everyone for joining us all right thanks bye 