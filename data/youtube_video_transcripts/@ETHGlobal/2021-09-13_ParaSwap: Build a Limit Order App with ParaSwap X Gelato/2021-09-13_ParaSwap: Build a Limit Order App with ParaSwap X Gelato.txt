[Music] great hello and welcome everybody um thanks for joining our workshop session today with muhammad who is from paris swap and he'll be taking us through the session build a limit order app and yeah with that i will hand it over to him to introduce himself and kick the session off yeah thank you thank you emily so i am i met i said mommy webster engineer at power swap so yeah we're going to build together a limit order app so first thing first a limit order app is this thing uh when you want to buy a a stock or you want to buy some crypto assets let's say under some price you want to set a limit order or you want to uh sorry you want to sell it for hours so a certain price then you put this limit order and it works the on the other way around with the with the bi so here we are going to do the cell together and we are building this with power swap and gelato so here is the the app that we are going to build together uh we are not going to start from scratch i'm sorry all the css i i did all the css and the heavy lifting of setting up everything but it's going to be a cool uh a cool ride so why power swap first uh power swap is a is a dex aggregator so decentralized exchange aggregator and the idea of power swap if we put apart uh crypto say i want to fly one person from paris to sydney and i have a multiple flights at different prices and chances are the cheapest one is one with transits so okay i can buy this flight and i can i can fly cheaply from paris to sydney through roma and mumbai but what if there is only two spots available and you want to fly four persons so in this case you have to make some choices you can't you can't fly all your passengers to paris uh the the paris road mumbai uh sydney flight or maybe you can negotiate with the company and you can end up paying a premium to get uh to get on this flight but when you're gonna pay this premium you're gonna you're gonna find yourself paying more than uh a a worse price say this one or this one and this is where it makes sense to split your passengers across all these flights and this is where powerswap what powersoft does with your cryptos with decentralized exchanges and this is how optimal it is so here we can see a real-life example of uh a powershot trade uh that everybody can do and you can see that it works also in small amounts for on networks like polygon so why gelato gelato is uh answering this question like how to wake up smart contracts because okay they are the best to explain this but their white paper explains that uh first thing first small contracts are lazy right so the uh program uh software on the blockchain cannot run without triggering it via a eoa so an externally owned account so at some point it should be a something outside of the blockchain that triggers the the smart contract i mean you can come up with some boat but but both they are quite complicated to maintain you have to have some devops capabilities uh also you can delegate this to a network but it has to be decentralized there are lots of questions and actually gelato is answering this problem these questions so let's go together first thing first uh we are going to use a quite amount of libraries which will help us on the way let's let's remind ourselves the app that we want to build so as i told you we have a we have something that is quite um it looks like it's working but it's not i can maybe write some stuff but nothing is really peaking uh i can click here for instance on connect to metamask and this is the idea we want to connect our account to metamask we don't want to say have a private key somewhere so okay this is all we're what we are going to do we're going to do so first thing uh let's remove the background as everybody is disturbed by this so what we want first thing first is to connect our account to metamask and this is where web3 react is a convenient tool where to help you do this and it does it really simply so for this let's just start and look at the structure of the project it has been generated by react create react app so we have a app component at the top then we go a bit uh down so a bit deeper we have uh and so the structure of the body of the app where we give it a web3 react provider which is uh so is which is uh mandatory to use web3 reacts so it just gives the gives the context to the rest of your app and for using web3 react you have to give it a provider which is actually a library uh it's it's actually what's your wallet gonna pass over uh to ether.js which i told you which is going to be used by um by web3 react so now let's get back to this connect metamask button if i go into main i have a structure with header the body but what we are looking for is in connect connect account so i did a couple of things uh styles apart we have some default so we have four connecting to metamask metamask is a one of the solutions to inject a wallet so inside the dab and we have web3 react has this generic uh injected connector that will help us uh grab our our grab our wallet so what we want to do is we want to activate uh one whenever we click on connect to metamask we want to activate uh our wallet so we want to connect it with the dab so for this we need to grab the activate function from use web3 react and we have to get the account which is uh the public address so let's get back to the here we have nothing yet because we didn't activate yet the connect uh the we didn't connected the the the wallet with the dab and we want to do it here so we want to activate injected and now if i click on connect to metamask all right i should okay so let's see what's going on we want to click on all right activate inject it doesn't seem to work all right [Music] you know what i'm going to use it um yeah it should code so i'm getting my code from here uh i changed [Music] okay demo effect let's go let's go let's go okay let's double check some stuff what do i do all right right so okay i'm connect okay all right i got it so apparently i was connected to the wrong network which is something i didn't support it and this is um because i'm connected to ethereum and one we want to do this demo on polygon so i'm connected i will connect on polygon and this is it so i can refresh and make prove myself that i can connect to metamask on polygon so click on connect and here is my address here so once i connected my address i can see it here there is this code here that formatted so we can see the whole address so this is the first step now the second step that we want is to say handle this inputs here so here i want to to be able to select the one of the tokens and i want to specify what amount i'm i want to sell and here i'm going to get from uh power swap the market rate and here it will be the calculation of uh what i will receive based on the rate that will be here so by default i will have the market market rate this is what we want to do at first but then the user can change this rate to give a a a better rate for himself like to sell it at a higher price in the future all right so for this we have to go to back to main and we have the limit order component which does everything that happens here so we go to limit order we have some we have some stuff we have some variables declared but no logic yet because as we as we saw there is we cannot uh like we can type stuff but there is nothing reacting at all so what we want to do first is to maybe have some state so i want to maintain a state amount state so this one will goes for this input so i can give it to this input which is already done this token input is a component that will be that is reused between the the the the token i'm selling and the one that i want to get so we can see quickly what it does but uh it's uh it's mostly some presentation presentational uh components so looking at the interface we have to pass an amount token address a token change which is uh which is a callback function that we're gonna use to update our states uh at uber level and on amount change if we are allowed to change the amount okay so we have the amount we can set uh on amount change so we can pass set amount and normally this should still work we should still be able to type something all right uh we can look at dev tools to see if uh if we are or not uh playing with some uh with some state so let's see this one if i go up all right mid order so i do have a state that where there is a 23 12 here and it's a string all right i want to do so i want to keep track of the source token address so the one that i'm selling so i will also have a use state and all right so let's do this properly now we want to do the same for the test test token address so now we have a so we can see that there is an error we are passing this token address but there is an error because the exercise the idea is to have an initial um to init this value with some token so this is what i'm going to do i'm gonna i'm going to grab my token list somewhere so i have this file where i have few tokens so i'm going to grab the magic address on polygon which is uh ethereum on east is on ethereum sorry and i want to do say die all right so i initialize my source token as if magic and my desk token as as die right okay so i still have some troubles apparently i didn't manage this one all right so because source token could be undefined or maybe once okay so now i have the source token i can give it this setter and yeah so we have default uh tokens i click on this it changes okay so i am keeping track of this state and this one uh and for the test token i so i need to pass also my center here so it's somewhere like here i hope everything everyone can see what i'm doing here all right so um [Music] now now that we have our source uh token address and desktop and address what we want is um okay so we have the amount first we have to pass an initial amount just to see uh just to see uh some number and it's gonna make sense after when we're gonna retrieve the rate so first thing first we're gonna retrieve the rate so the market rate that i'm going to get from parasol so the market rate i can i can see that there is a hook already so use market rate it takes the source token address desktop and address and the source amount and we're going to use the power swap sdk here so um [Music] let's just use the hook market rate and we're going to give it source token address that's token address and amount all right and if i look at the logic here so i have a state i have a use effect a fetch and i want to fetch some rate and i want ultimately to set the rate all right so for this we can look at the at the documentation how we how we can easily uh query some rate on power swap so you import power swap you create a new instance and you can call some methods on it so get tokens that's not what we are interested about and get rate this is the one that we are interested in so what we can do first is uh create a new instance of power swap here and i will give it a network 137 which is the polygon chain id uh i want to get the rate so i want to get sorry the price route so this uh plugin is a ai powered sometimes it gets as well sometimes not so we want to get the rate okay am i doing right and as we are using typescript so to ask some types and i think the ide is a bit late come find this okay the source amount i give it a source amount here and it could be in the undefined so let's say if it's undefined we just skip so looking at this i can probably put a debugger and see what's going on if it's building first it's if it's building first [Music] okay it's up to my rate so as you remember we have one uh we have always one here so this amount will be one and we want to send one token one matic for get server too busy let's try try again compute price here all right so i have an error when querying uh our api so probably i didn't pass some uh info right yeah so i'm asking for one unit of magic but in reality here so as as you some of you might know tokens are encoded with the the with the decimals so most of the tokens if i'm not wrong are encoded into 18 decimals so here what i have to do is multiply my number i have to multiply it by 10 to the power of 18. but if i want to do this i'm going to run to a overflow so i need to use a big number library which will help me do this without overflow so i can multiply and i can just do to fixed fixed just for matching it it didn't set up my my creature unfortunately so where are we all right okay and i have another error here where it says the so optimal uh rate is not sustainable to optimal rate so this happens if we have uh if we have an error so so this price route isn't always optimal rate it can be a api error at some point and now we can we can see what's going on so we have a price route we can see that we have a price route we can see it also in the network if it's more convenient so these were all the failing requests and this one is working well [Music] but we stopped everything so we can see it let's just do this all right so here we have a price route uh so the things that we we want to look at here is the source amount which we what we passed so one and to the power 1 multiply by 10 to the power of 18 and the test amount which which uh the most optimal uh amount we we can we can get by selling at this point but what we want to want to do so first is to have an idea of the market rate but this is just indicative because what we want to do ultimately sell our token at a higher price so this will help us compute a market rate but this is not uh what we are going to use if we want to use it right now we have to call another api in the price of sdk that's that we we can pass it the price route and it will help us execute the transaction right now but that's not what we want to do here so all we want to do is uh get an idea of what's the rate between these two tokens at instant t so we are not going to finish this part of the code we are just going to get some um some code here that does the calculation so the idea is that this price route can be an error so we have to skip if there is an error or we have to handle it properly but this is out of scope and this will help for typescript also then what we want to do is capture this market rate which is just simply dividing the test amount by source amount and now we can set this rate once we set it we can uh see that it's returned by this uh hook which is used market rate we can completely forget for forget it from now on we if it's working of course and we can look at uh so where is used it's supposed to pass so a market rate here this rate is desired rate um double exclamation point mortgage rates as is undefined is always being a market rate at this point and we are calculating a min return that will be interesting at the end to show what amount we are going to get so let's see if this is working it seems like it's for it works this seems to be the the uh the magic price uh for yeah if you want to sell one matic today you get 1.22 die which is uh also in dollar it's an approximation of a dollar you can put whatever value here so you can see that the market price uh shifts a little bit it's this is because the more you swap the more you are having this price impact problem that's why that's what i show you in my uh analogy with the with the with the the flight so all right we can we can also check that either i have ether here so i can see that one ether is one uh 3158 which is not that much all right let's continue so we have the market rate now what we want is to let the user uh put a rate here so here for now i cannot change this so this is the idea i want to be able to change this rate so it's it's really classic dev uh it's a classic uh reactor coding so let's just do this desired rate set desired rate and thank you github co-pilot all right i want to set the desires rate uh somewhere like here so this is a material ui component and it's gonna give me at some point um the event and i can use it to set my desired rate uh i don't want it to be undefined by default uh yeah okay so now i can see this rate and i can see i can i want to buy it to sell it only if it's over 1.4 and i can put any number so now we are over the market price and this is when this will be submitted so let's connect our meta mask and try to submit it we can't uh this is because the button is kind of is a great here so for this i have also to have the whole logic to submit a sell order and let's do it so i can use this [Music] this pre-made hook which is on submit order and i can see that that we don't have that much time so i'm just going to use my cheat paper again where i can show you that there is this hook it's going to give us ultimately a callback we're going to see how it's used but this callback we are going to give it to the button to submit here this one we can disable it if we don't have an account connected now we can submit but at the end we still have to have the logic and the logic is quite simple actually uh what we have to do is so let's see if we have a bit [Music] so here i am in uh the use on submit uh call ba order which will return me a callback this is where uh i'm going to submit to gelato so i have this hook that we can you can see by yourself it's uh just uh instantiating the sdk gelato and what we can do here is grab this uh code that we had um so if the token is not it we have to approve it uh if not we can pursue with the transaction and after this we have a functional uh we have a functional limit order up unless like this is just purely um passing the so we are passing the token address the from the to token address the amount we want to buy uh to sell and the mean return which is what we want ultimately so i'm just going to revert this one so we can have it working it should work out of the box and let's try to submit an order in real time so say i want to sell one matic for 1.3 i can submit the cell here i have meta masks that opens okay so metamask opens why because of web3 react that helped us connect to metamask and when we submit this transaction we are giving the provider to gelato this part i didn't show you but this is what we are giving here the library which is the one that we gave to gelato and we gave it the signer which is our account and instead of passing the private key we pass it signer which is an abstraction for saying this metamask account i can confirm now this transaction so let's confirm it so this is a contract uh interaction and i can look at uh polygon scan to see what's going on i can prove myself that it's working uh to prove myself like it's working but it can take some time so what i want to show you at the end is that we can look we can easily thanks to gelato see at all our orders so by uh just uh fetching uh orders why are they they're sdk so we're not going to do it we're just going to grab it from my previous coding session so now that we have the order history i can just see my orders here and this is quite simple code like honestly it's just uh calling gelato let me tell those get orders and this others i can give it to this hook and this is it this hook i use it to just provide this list of entries which is uh which is just a react code uh so what i wanted to tell you at the end you can go further i advise you to to keep this in mind to keep this somewhere so you can go further by by doing accomplishing this uh bullet points um also if you want to build with powershop is super cool because we have this permission permissionless monetization uh so you have to check out at the documentation we are hiring we are hiring react developers we are hiring not developers solidity developers of course and if you can uh let's just keep in touch on twitter so these are our twitter handles but we are an army as munir likes to say and uh i just want to finish by say just thanks so much mohammed um that was a really great session and yeah i guess more time needed to get to absolutely everything and i've saved the questions in the chat and what i'll do is i'm going to transfer these over into the sponsor paraswap discord channel and mohammed will be able to answer all those questions there and hopefully also share a link to the slides that he took us through sure sure i can see all the the questions in the chat uh i'm just screenshotting it and uh i'm going to answer it in discord if it's for everyone yeah great thanks so much mohammed um yeah i'll also just transfer those over no worries and thanks everyone for joining and uh yeah have a great monday thank you 