or friday depending on where you are in the world she's just standing by one second on the stream standby i hope you're all excited for nft hack this is our first youth global event of 2022 so we're super excited and then ivan is actually our very first workshop for the event as well so ivan you're kicking off the new year for us that's fantastic should be almost good to go soon yeah standby we i'm gonna give it one more minute and then we may just go and i'll repost on a new stream but i'll update you shortly there seems to be a glitch here standby sounds good for those of you who are just trickling in we're just waiting for the youtube stream to be set up before we officially start perfect perfect i can actually see the youtube stream it seems to be working oh perfect okay sorry it just went up cool perfect all right well welcome everyone to our very first workshop of nft hacks 2022 um our very first east global event of the year so we're super excited to have you all kick it off with us we have ivan on tech here from morales who will be doing his workshop on building cross chain nft dabs so with that being said i'll hand it over to ivan uh and you feel free to start your workshop perfect thanks anna and thanks guys guys for joining so in this workshop we're going to discuss a lot of things that will help you on your journey building your nfc app building your game building your meta works experience whatever you want because at morales we have a lot of tools for this we have a lot a lot of tools and it's going to be very fantastic to show it with you and then we're going to have a q a at the end and you can ask whatever you want first and foremost the things that you will learn how to do in this video is for example how to use unity game engine and you know from unity you can export to xbox to playstation to ios to android to web and where you can build the games that have crypto login so imagine you are in your living room you bring up your xbox game you can log in with wallet connect i will show you how to do that or how to do vr because you need to also support exporting to vr next i will also show you how you can use our nfc api to get cross chain nfc data from ethereum vanishing polygon avalanche phantom and the old test nest and we're going to add more blocking soon as well so when you get the user that is using your application you can you can get their balances of nfcs ownership all transfer data you can get the lowest price over the nfc if you want to show some statistics kind of like the floor price all that is supported and so so much more but first and foremost my name is ivan i'm the ceo and and one of the co-founders of morales and um we focus a lot on the uh on the nfc space by the way i see i hear some background noise maybe it's anna you have to mute uh i hear some happy bird or something but it's all good now so let's start if you go to docs.morales.io you will see this page and then if you go on the left and you see web3 api you can see the nfc api so let's start here this is something you can do already while you're watching the stream and i will walk through and we'll work through it step by step first and foremost you see all of these different endpoints that are supported these endpoints for for example searching nfcs getting the nfts of a user getting an empties of a collection getting nft transfers in a block if you want to have like real-time alerts when something happens on chain block by block in regards to nfcs and all of the all of these other endpoints they are available as rest http endpoints so you can call them from your server however you want if you use morales sdk which is javascript sdk you can also just call the sdk function which you if you click on this endpoints right here for example i clicked on this get nft you see that you can also call it like this already prepared the function that calls that will call the the api behind the scenes and in order to build games for unity that are then exportable to different platforms like xbox playstation web desktop you can google ethereum unity boilerplate and you will come to our border place here which is basically like a unity sdk and you can see that you can authenticate with wallet connect and this is a native unity when you're authenticated you see the address right here in this demo app you see all the assets and so forth but what's important is that this unity border plate it supports all of these different endpoints as well via c-sharp interface because of course unity as you know it is c-sharp and natively in unity you can get all the data about all the nfcs on different blockchains and all the user balances and so on so forth so we have two major platforms supported with our sdk that is javascript and c-sharp and javascript is for all web as you know and c-sharp is for for unity now but morales is so much more than just an api because now i just show you that we have api and some sdks morales in itself is a whole end-to-end uh platform for creating dapps including creating nfc applications so let me speak a bit about that what else we provide for your nft project that is outside of just an api that is accessible via different via different programming languages and of course you can also call it straight via http so one of the most important things is that we provide the full platform where you can log in users because whatever idea you have whether it's nfc idea or some other idea you need exactly the same things as all other people with the same idea into log in the user you need to get their balances you need to be able to fetch real-time events so when something happens on chain you need to know that and you need to be able to sync smart contract events so that when you have your smart contract and somebody transfers or somebody interacts with a smart contract you need to know that in your code and the mistake many people make is that they connect to the rpc node and they use for example ethers or web3 and directly speak to our pc node and while this can work for small primitive applications you quickly realize you need to build the whole back end around the rpc node to make anything work for example how do you log in a user with an rpc node well in reality in order to know that the user is who they say they are you need to verify the signature on the back end so this is one of the first issues you will discover if you are to build your blockchain applications completely on your own without using morales you need to verify the signature then you need to set up the database where you store for example the it turns out user transactions user data maybe you store their email so you can email them there's a bunch of option data you need to store you need to fetch your transactions you need to fetch smart construct events i mean all of this if you just use the rpc node directly and you go to a node provider you will have to do all of this yourself and this is a server that you will have to run scale maintain debug and so on so forth and this will be 80 of your time that is spent here and of course you shouldn't you shouldn't do it because this is what everyone needs everyone needs exactly the same back end for building their application and the question is what if there was a pre-packaged solution a pre-packaged backing solution that that developers can use in order to move quickly develop quickly and go to market quickly and what if there was a nice sdk with all of these features built in for example our test casing users on any blockchain fetching their nfc fetching the transactions and you have everything already in a backend as a service solution and this is exactly what morales is so we give morality server which is this back-end solution for all dapps all the apps needed because all dapps have an off-chain component like we're discussing to build this monstrosity you normally have to build it yourself with morales you don't and morale sdk to access these different functionalities in javascript or c-sharp or whatever so in a way you can think of morales as firebase of crypto if you've been using firebase for traditional web and mobile apps you know how easy it is if you have an idea to build some kind of web or mobile app you can have a prototype already tonight if you use firebase because it's it's back-end solution you don't have to build anything yourself you just use simple sdk and simple functions and simple apis and everything is done for you while in crypto in web3 if you don't use morales you can never just get an idea and have a demo already already this evening in many cases you have to do your backend authenticate user verify transaction and maintain and do all of this while with morales it is you get this web to experience dev experience but it is web 3. so for example if you want to authenticate your user instead of using web3 or ethers directly you can use morales.web3.authenticate and when you do that the user can log in on any blockchain so now we support all evm chains we're going to add solana we're going to add lromd so this is cross cross chain but also cross architecture it's not only evm because even non-evm chains they also need exactly the same thing they need to log in user fetch balances and so forth so we have a cross-chain cross-architecture across architecture experience when you just one write write one of code and instantly when your user clicks login in your morales dashboard you see all of the transactions all of their assets and so on so forth you can of course use this database to do whatever you want this database updates in real time that we give you so when they do new transactions it all shows up here in order to read the database for example case introductions nfts you use morales.web3 api dot get transactions get balances get token balances native balance very very easy so look you've written four or five lines of code you logged in a user with this one line of code morality.authenticate then you written a few more lines and now you have a dashboard you have a wallet with all user assets kind of like a default dashboard without doing anything just writing a few lines of code you can read the database easily because it's um it's a database that can be queried like your normal mongodb or pos address you can do whatever you want so you can query on-chain data that you would never be able to do without a solution like morales if you just use web3.js or ethers for example this kind of querying querying for example the average transaction that your user does in your nfc marketplace or querying the average uh something else or querying the top the top most active users in your dap you need to have a database with on-chain data in order to do the square so morales provides that all of that for you so it is unlimited power if you truly think about how long time you would have to do to have to spend to set up yourself normally versus morales it's unlimited power and also very easy to index more contract events you just write morale's query and whenever a new smart contract event happens for a specific topic and api it will get inserted into your database uh automatically and the the biggest resource that you can use in order to accelerate yourself as a web3 developer is to go to morales web3 youtube channel because there we show you everything um everything step by step so you want to learn how to do uh if you go to playlist and then you go to web3 programming projects here you can see everything how to clone openc in a few hours and we share with you the final code we even maintain this different library so for example if you want to build a an nft marketplace you should use the nfc market marketplace border plate which you can find if you go to ethereum boilerplate project on organization on github which is maintained by us and you see that you already have a functioning nfc marketplace and you can follow step by step how you build it in this video i cloned open c in two hours or if you want to build something that is a social network maybe based around nfcs we have that a video for that as well causing web through social network and if you go to the description here in the video you can find the social network border plate uh web through social network world plate which is also in ethereum water plate organization on github and you see it's a fully functioning social network where you can vote up you have your own change reputation and stuff like that of course could be very nice starting point for your nfc project that you're building in in this hackathon because this hackathon is just a few days so all time you can save you better save it and if you go here to ethereum border plate organization on github you can just google it if you google ethereum border plates you will find this as you can see we have the ethereum boilerplate which is the react one so this is just a standard one if you want to you know log in users see their transactions uh and you also get nfcs there but more towards the specific nfc border place we have this for unity which i showed you at the start of the stream and we have this um standard demo game here where you can log in with wallet connect this works cross chain on the web on unity you can export to xbox playstation web and you bring blockchain wherever you go cross chain with morales functionality uh nft marketplace we have about three social network and we're adding more and more uh border plays and whenever we add a new border plate we create a video about it so that's why you should right now go and subscribe to morales web 3 on youtube it's very important actually and on the high level this is what uh i wanted to explain and we're soon gonna go into q a because q a is going to be most valuable i'm sure you have many questions uh but to summarize number one is our morales uh metaverse sdk and if you google morales network sdk you will find it but basically it will explain how everything works and it will lead you if you click get started now it will lead you to this unity borrow plate on github and if you go to if you want to have an uh a walk through this you need to borrow plate step by step how everything works you can go to morales web 3 and then you can see this video right here from two days ago with uh exceed me so we did a moralist unity workshop our our david from our team who is really hazing this spearheading this metaverse unity development he shows you how to build this project how it works he explains it step by step he locks him with his wallet and he answers a bunch of questions here so this is something you should watch if you want to basically have spoon fizzing if you want us to spoon feed you exactly how this unity package works then go there if you just need the api let's say you need the api go to docs.morales.com you go here to retro api and you see nfc api and you see and you see the specific nfc functions so this one you can use from your own backend or from from your own tech stack so that's number two and number three that i want to say is that you have this full crypto experience i mean you can use morales as your full back end if you start here by clicking getting started we explain to you that each dab has an ancient part an option part exactly where morales fits in how to connect the sdk how it's very simple it's very simple javascript we have react support view support you can easily log in your user when the user is logged in you have all their assets in the database so you can just go through all of these steps and if you want to learn how morales works fully fully fully fully we have a morales course if you go to morales web 3 youtube channel and then let me see if i can find that we have a full moralist course here somewhere uh flash long course let me find it moralist web 3 full course because we have recorded six hours of yeah here it is of golden content about morales specifically going through everything step by step by step because it is i mean this will change your life if you go to if you go and you search on google morale's full course for beginners this is a six hour course will will which will teach you everything everything about morales this will speed up your development 10x and this is the actual fact why because we have asked our developers how much time do you save and all of them say between 80 and 90 percent with the average being 87 uh and on the high level this is what we do and we discuss specifics with the energy api unic meta versus sdk the full end to end back-end platform there is moralist and now happy to take any questions the most important call to action here is to go to morales web3 youtube channel sign up there and you're going to get daily web 3 developer content and on that note let's go to questions as we have 10 minutes left feel free to meet yourself if you want to ask the question live otherwise there are some questions in zoom so crown of boji asks how centralized is morales that's a great question we have actually a whole video on it if you google morales uh is morality centralized you will get the full answer i will also explain to you here but i want you to watch the video is morally centralized so it is this one so go and watch it after the video but i will also explain to you here but but here i explained for 10 minutes so as we explained in our documentation a adap has two parts it has on chain part with all the smart contracts all the user balances and everything else that should be completely decentralized and it will be completely decentralized on chain and then you have an option part and option part let's say you're building a game will your game run on chain absolutely not will you have your game loop on chain of course not will you have option data like for example user email for example their phone number in case you want to send them sms or notification which you by the way can easily do with morales if you go here and you check our our videos we just released a few days ago this how to send sms messages and uh all of that easily easily with morales and there are some things that are on chain and there are some things that are off-chain so when it comes to the off-chain part this is where morales helps you build quickly because it's going to be option anyway so either you run it yourself and you're going to use probably aws or something or some or some other cloud you're still going to use centralize the providers like in pura or or some other node provider so your option part will be still filled with service providers and the question is you know how quickly you want to build and what kind of architecture you want it's always it's always a trade-off that you have to make and by the way here's this video i thought i talked about get sms push email or web hook for on-chin events with morales but where this industry is heading is that you want to move quickly especially in a hackathon like this and let's say that your dab becomes huge then you're free to do whatever you want maybe if your dab's because it becomes huge you can re-implement the whole stack yourself uh but when starting out if you are if you're doing everything from scratch yourself it's going to take weeks and weeks for you to get anywhere and um our our solution makes it simple and easy and it's really a no-brainer especially when you're starting out when you're big and you want to do everything yourself it's possible it's kind of like with the cloud you know do you want to run a server in your basement you could but you're going to get absolutely out completed by everyone else who uses tools and and the developer platforms provided by the industry and this is where the world is heading that you have things that are decentralized and that's on chain all assets of course nobody should be able to attach your assets but the option part is already you know you're already relying on a bunch of providers and morales makes this process that you would do yourself anyway faster one thing i will note though is that soon you can sell host morales and this means that you can host it on your own server as well because we're going to open source our solution as we are we're packaging this as i showed we're packaging all of these technologies into one back end that can be deployed uh on morales infrastructure or it can be deployed on your own infrastructure so that's that's also going to be a possibility soon but to summarize it's only the option part and and if you in the future want to redo all of this yourself you're gonna you you you can do that and look if you're using any api you're relying on a provider if your app uses openc api i mean it's already you're using a provider if your adapt uses any kind of api so it's it's important that you you're honest with yourself you know what do you want if you want to be completely decentralized run your own server in the basement sync your own node you're not going to get anywhere and that's not how you do it you want to use the tools the providers that will accelerate your app that will ensure you go mainstream you go big all of the on-chain assets which should be decentralized they are decentralized but the off-chain uh at least my theory and my thesis is that this should be done quickly it should be done quickly because that's where most of the time goes i mean most of the time goes to option off chain tech not on on chain tech writing smart contracts it's very quickly because most smart contracts are already done so what you do normally is that you just reuse down smart contracts and when it comes to off chain you're still going to rely on openc4 metadata anyway you still have providers and the provider using providers is the way to go for the off chain and now as this infrastructure grows so we have plans for decentralization as well uh as this infrastructure develops and grows we will open source and we will ensure that you can self-host yourself and that's in a road map as well but i hope it answers the question if you want to have a more in-depth uh uh in-depth answer go and watch that video i showed is morality centralized you can just google it and you'll have a nice 10-minute answer with i also draw there i also draw how it works awesome thank you um so crown of budgie's second question was can we use morales api as an nft indexer and what's the latency performance yeah you can try it's under the api latency 400 milliseconds or so for requests and when it comes to indexer what do you mean it's not that it's not the graph if you want to make your own custom index you need to use the graph if you need functionalities that that are in the documentation so if you go to the docs and then you go to web3 api here and then you go to nfc api you see for example if you want nft metadata ownership data transfer data basically which transfers are happening which trades are happening and nft prices so it's for example for the lowest price you can get if you want to have a floor metric and lowest price on floor is not exactly the same metric but the lowest price is the metric you can get from from the blockchain uh and uh because floor price it's it's a difficult to get from from the blockchain because a lot of marketplaces have it centralized that all of the bids and all of the orders they're not stored on chain so of course floor price it's not easy to get but the lowest price that has been executed that you can get from the blockchain and that's also what we provide so if you need any of this and you should go to dogs morales. and you should click around here then it's perfect but for nfc indexer if you need some some kind of specific nfc index you need to run the graph but in 99.99 of cases you don't need it because it's all here for for most use cases but you may have some other use case where yeah you need some specific index or something but then you have to use the graph for that well and justin subspace asked has morales been audited we're not doing anything uh on chain so audit you you mainly speak about on-chain smart contracts we're not doing anything on-chain we're completely off-chain uh so that's why we don't have any smart contracts obviously if that's what your question was we're extracting data from the blockchain and we're pushing it to yours when the user logs in we push the data into your database with the user transactions real-time transactions and all of that and julianna asks how many api calls can we get in the free tier of morales it is if you go to morales.io pricing you can see there and you can also read that some of them are uh weighted so uh most of them are gonna be just you know one request one uh one um which counts like one request but some heavy requests count like several requests but we explain all of that in the uh pricing but uh yeah i don't i don't know on top i think it is 1.5 000 that you can do per minute on the free plan and then if you do do the pro plan which is 29 you get the 3.5 and you can do even higher but that's uh that's on the enterprise plan ayush gupta asks if i use morales do i still need to use ether.js or web3.js well it depends on what you need uh so morales it's uh it it wraps around ether.js and web3.js and the reason we wrap around it is because we want the same interface even for solana for eldrant and non-evm chain so for example we do have morales.transfer that can transfer nfts erc20 tokens and this underneath will use the ether.js and then when we add solana you can use the same function whereas the transfer but then you can also transfer nfcs on solana and other chains so that's why we wrap around this low level libraries like ethers and web3 if you still if if these functionalities that are wrapped are not enough let's say that you want to do something specific which which we don't have a wrap around then you can still get uh get the web3 instance or ethers instance uh by going here to web3 provider and you do like this morale is enabled with web3 it will actually give you the underlying web3 instance but for for as much as possible you should use morale's wrapper functions why because then if you want your app to work on other chains that are not necessarily evm compatible you don't have to do anything i mean that's the beauty of morales and so we always recommend to use so for example if you want to run the smart contract function use morales.execute function it will it will use ether.js under the hood but then when you have solana you use the same function or when you have ld so that's why if you if possible use morale's wrap function because they will be extendable to other chains and if you still want something specific you can just get the instance like this so you is to answer you use both use use them together lyron asks when i authenticate with morales do i need to also do a nonzero signature check no morales does it uh for you you don't have to do anything you just write morales dot authenticate like this let me show you how it works uh here in in and connect to sdk so you write morales authenticate uh like this you can set the signing message yourself um and when user tries to log in they will get this authentication they click sign and you don't have to do anything and then when the user is signed in you see a user object you see their address you see their signature that they provided and a session is established so as you can see here i know it is clear but a session is established and you can now basically use it as a logged in user as you know as if they were logged in with email and password and by the way you can also log in with email and password as well and then you can add add the addresses to that user profile so if you want for example your users not to care about wallets you can first have them sign in with email password then you can connect the wallet to their to their to their account so they they will have to sign a message and signing as you know it's free it's not some kind of on-chain transaction it's no gas there signing is always free but to answer no you don't have to do anything in terms of in terms of that signing logic it's all handled for you all right we have one more minute so we have a time for one more question uh can morales store non-web3 data like firebase does exactly yes you can store anything you want that's that's that's a good comparison to firebase if you go to database here and you go to objects you see that you can store whatever you want it's a underneath morale is that database is mongodb you even have direct access to it so you can store whatever you want it's mongodb you can store whatever you want and you can do for example live query this is that on your front end you can subscribe to database events using query the subscriber you're going to get socket alerts when something for example something happens on chain it will be first inserted into a database this means that you can get it in your front end as well through live query a notification and there is a lot more now finally guys before we wrap up i know we're out of time go to morales.io slash mage morales dot io mage and join our discord because there we can continue and discuss sign up for uh for our youtube so morale is slash page and you can sign up with your email here to join this card go subscribe to youtube and happy to take more questions in in discord as i know we're out of time approaching awesome well thank you so much for hosting this workshop ivan that was super interesting and informative um just like ivan said i will be available on the youth global discord in the morales discord channel i hope you all have a great rest of your day and i'll see you guys at the next workshop 