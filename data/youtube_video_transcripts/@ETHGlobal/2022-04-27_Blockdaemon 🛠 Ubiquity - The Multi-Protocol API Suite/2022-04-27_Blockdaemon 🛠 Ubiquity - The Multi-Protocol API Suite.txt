[Music] [Applause] [Music] all right welcome everybody here watching online at home or wherever you are in the world and again to my audience my name is limaris torres i am with block damon and today i'm going to be presenting about our ubiquity api for those of you that don't know me i'm a senior r d blockchain engineer at block daemon and i'm very passionate about tinkering with all the things so without further ado let's talk about ubiquity ubiquity is essentially a a bunch of apis that fall under a singular umbrella that we call ubiquity it's versatile it's high performance it's multi-protocol and it's an api suite that helps us query all sorts of blockchain data you can broadcast transactions you can search for history all sorts of exciting things that we'll get into in a little bit the four main pillars of our ubiquity api are the universal api the native access api that allows you access to our infrastructure the specialized apis and historical data who's ubiquity for anyone everyone you like data we got theta so custodians in exchanges that need highly scalable zero downtime blockchain access rely on ubiquity we have some fintechs firms that are looking to scale rapidly uh from zero to maybe over ten protocols we have analytics firms that are partnering with us that are using ubiquity for cost-effective access to historical protocol data on some chains and we have developers who need reliable access to blockchain protocols and what we do is ubiquity allows everybody to manage all of this different information all of this data on all of these different protocols from a single pane of glass here are some example use cases of ubiquity we have real-time event streaming native token balances multi-protocol data primitives transaction uh construction and broadcasting staking reports rpc and native protocol access gas fee estimation archive in full history nodes and most recently we shared our news that we just launched an nft api so all my nft fans out there i encourage you to check us out at blocktayman.com request access to that new launch so that you can you know get up to mischief here's what our ubiquity api looks like at the high level you've got the three or three main pillars here the specialized apis the native access api the universal api like i said these all follow under the umbrella of ubiquity um which is that single pane of glass easy to use frictionless across different chains even though it's different tools and protocols it's one user experience if you need direct access you can use our native access api and for specialized data and universal uh data data you can use those apis as well to index uh our universal api is a versatile multi-protocol abstraction layer what does that even mean uh it says to generalize protocol that allows us access in a unified format and we'll get into that in our demo uh it's a single rest api that allows you to query multiple protocols you have websockets for real-time streaming updates and an sdk uh that also supports multiple programming languages you can scale from 0 to over 10 protocols in the fraction of time it would take you to do this alone for those of you who are developers trying to build across different chains i know we're here at ethereum sometimes we're trying to collaborate with different layers different protocols ubiquity really makes it easy to transfer our knowledge across chain and work with data all across the board with one singular experience that is like i said frictionless and feels almost the same regardless of what protocol you're using our native access api allows native access to web 3 protocols uh to over 10 different web 3 protocols and it allows for historical and archived data on some protocols uh the reason for that is uh well solana if you know you know it's very difficult to do that we're figuring out we'll add it soon auto scaling and redundant node clusters are also something that is available on our native access api here is a sample of what the native access api looks like versus what the universal api looks like like i mentioned earlier regardless of what function you're using it still looks the same you're still using very similar commands across the board and for more information on what the commands are and what the use cases are and the technical specs of how you can accomplish this you can go onto blockdaemon.com and look for our ubiquity docs for guides our historical data protocol is well like i said earlier data archival and finding historical data and manipulating it is notoriously difficult so ubiquity historical data makes it easy across some of these protocols to do some kind of custom indexing and to access archive and full history nodes right with that universal api and that native access historical data function we also have specialized apis for ubiquity uh some of the things that i've used it for recently are gas fee estimation staking reports that export to a clean easy to read csv when we're doing analytics internally and like i said we just launched our nft api this is what your single pane of glass will look like when you're accessing ubiquity you'll have your user account uh you could see your overview the nodes you have access to your api access this is just all part of the same look and feel across the board for all of our apps at blockdaemon you can see the different protocols that you have access to on your api and get all sorts of metrics and even see if the transactions that you're running or if the data that you're wearing runs successfully or if it's a bad request here the good stuff here you can see again the under the umbrella of ubiquity we have all these different functionalities and this chart helps us highlight exactly what functionalities we do offer on what protocol so you can see that algorand has a lot more functionalities than something like oasis we're still building a lot of these out our goal is to make all these purple we're working on it and this is all based on customer demand but specifically on ethereum which is what we're here to talk about today we do have that transaction broadcasting we do have that native token balance option we have websocket support we have native access uh we have auto scaling native historical data querying universal historical we have gas fee estimation you can get metadata from transactions and nfts uh you can do transaction constructions it supports golang typescript python java and rust lots of work has gone into this so if you do test it and if you do like it please let us know our developers are always happy to hear feedback on what other services we can add for the community additional resources for our ubiquity api can be found at the following links our documentation our client sdks the website the actual app and the link to request access to the nft api so now that we've kind of gone into what is ubiquity let's do a quick demo oh by the way before i go into that uh this is what our documentation page looks like these are the supported protocols again and for those of you here at east amsterdam that are interested in participating block daemon is sponsoring a hacker house or for those of you watching that are deaf connected maybe not east amsterdam i know all of those folks are busy downstairs hacking away our hacker house started yesterday goes until sunday and we have a bounty with six thousand dollars as the main prize for anybody who builds the coolest thing using ubiquity as you can see ubiquity is already a fully functioning api so you get the easy part which is just making stuff happen with it and we're really excited to see what the community can actually accomplish using this tool that we've put so much work into the details for the hacker house can be found at a link that i'll share after this or on my personal twitter and the address here we go oh this wasn't updated in prices but the address will be a single 80 10 15 ac amsterdam in the netherlands so i'll see some of you there after this now on to our ubiquity api obviously there's a login page that i seem to have bypassed here thanks to single sign-on but essentially you go to app.blockdaemon.com you log in you go to your ubiquity api section first step is you need to create a new key and you can name it anything you want in my case i named it test one test one uh and i'm not gonna do this on my screen so that i don't leak my keys to the entire world that's gonna be watching this after this uh security first right and once you do that you just have to go onto your terminal uh export those keys and then you'll be fully integrated and able to run here you can see a sample of the transactions that you have run if the requests were successful and you we do have different options for ubiquity we have a free option for the community that is metered in speed and in transactions i don't know off the top of my head but do contact us if you're interested in that and then we have like an enterprise version of our ubiquity api which is not throttled at all lightning fast and works across a couple different chains that is the one that we use to partner with different you know developers data analytics companies fintech firms and whatnot on their individual use cases once you do that open up your handy dandy terminal and you have all sorts of fun experiences uh i like pink so my terminals pink don't out me anyway uh here we have an example where we found a wallet that we wanted to query and we wanted to see how much east was in it and like i said it's frictionless so you're doing all from the same terminal that you've been doing your work all day every day for the last couple years in this case we are asking for 18 decimals so there are 53 something something something 18 decimal uh ethereum in here and then in this other case here we are asking for six decimals and we are querying to see what would the equivalent of this ethereum wallet be or sorry or how much sorry how much tether is in this wallet address and we're asking for six decimals so we can see it's about four thousand five hundred here uh eighteen decimals is too much for me to do in my head but you all can figure that out later uh again down here four thousand five hundred so simple easy to the point frictionless one single pane of glass for all these use cases and that's what we at blockchain are trying to build for the community access to all the chains in a very simple uh easy manner for anybody to use so thanks for coming are we done recording okay [Music] [Applause] [Music] you 