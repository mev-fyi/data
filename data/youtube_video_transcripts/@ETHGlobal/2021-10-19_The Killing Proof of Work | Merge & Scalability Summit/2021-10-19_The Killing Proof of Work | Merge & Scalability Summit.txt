[Music] [Applause] [Music] and uh let's jump right into it so next up we have danny ryan from foundation doing his talk and it is titled the end of proof of work which is already a hot enough of that topic so uh let's let's get right into it and i'll let danny take over welcome danny thank you i actually changed the the topic the the title name i think it's called killing proof of work now um a little more aggressive even better okay so you all can see this everything is great okay cool uh today i'm talking about killing proof of work on ethereum at least but we might inspire others to kill proof of work too um the sub talk is when why and how emerge um first thing to talk about a little bit about wynn uh recently which if you were following in the past week on the internet many developers and researchers met together for the amphora interop and we had much progress on the merge specifically on killing work uh proof of work on unifying the beacon chain consensus with that of the execution layer of ethereum today this is uh this was pure joy this picture this was like t minus two minutes before the our final kind of closing dinner and we successfully had a launch a test net of 100 nodes 10 000 validators had work going had proof of state going and they came together and we're all cheering actually we're all looking at a screen and cheering because of this tiny little text that appeared on the screen which says entered proof-of-stake stage and then subsequently uh watch that proof mistake uh finalize the merge uh so when soon soon sooner than ever um i know i i when i began to work on proof of stake in 2017 everyone was saying casper is coming and it was but uh wasn't coming quite as soon as we thought it was uh but now this is actually soon on all core devs today we're talking about you know how long to push back this difficulty bomb in december for kind of a final final stretch we're hoping to have um we have a a test net up today that you can you can go and check out uh but at the end of november targeting a reboot of the test net with the latest and likely to be final specification updates so it's coming when it's coming why i talk about this a lot um three s's to increase security increase sustainability and scalability of ethereum while retaining decentralization these things are hard to do it's one of the reasons it's taken a long time but here we go i'll dig into each one of these and we can better understand what i mean when i say this so security i make a claim proof of stake is more secure than proof of work i'll give you at least a high level intuition as to why that is uh so the first one is it's less centralizing with respect to the the nade the crypto economic asset at play so what is proof-of-work what is proof-of-stake it's really proof of dedication of scarce resource to the protocol in proof-of-work that's uh mining hardware and the burning of energy and proof-of-stake that's the dedication of the end protocol asset itself either both of those things are easy to get to to prove to the protocol that you've dedicated to it and that's why they're they're good versions of a cryptoeconomic consensus protocol you could imagine like proof of car would work but like it's hard to demonstrate that you've dedicated a car to a blockchain but that's the intuition is you know scarce resource but the thing about proof of work is is you get these economies at scale you get in the large players are entrenched in supply chains they're building their own chips and so they can take uh capital some amount of capital and more uh efficiently turn that into profit as opposed to like the home hobbyist which is getting you know second generation hardware maybe even used hardware light in the supply chain and so their function of turning their capital into uh profits is is not quite as good as those entrenched in the supply chains and so uh but with eth uh with proof of stake the the crypto economic asset is itself and thus the conversion of that into uh staking rewards is as much pure function it lacks these economies of scales we see with proof of work the acid's also highly liquid and available it's kind of implied by the previous if i want a steak i go get ether you can get ether in 10 million different places and there's a very active market of trading and thus you get a pure function of return of capital and you don't have these like mega centralizing factors um that you do in proof of work there's also a higher security margin and this i don't know if this is very widely spoken about so we take crypto economic capital whether that be mining mining power and uh energy or uh the staking asset and proof of stake protocol and we dedicated the protocol so that's this white block crypto economic capital and then you get a return so some some amount of issuance taking rewards and and um fees and other ways that you can get a return on on that investment and in in proof of work that's your security margin is that is that return and so that's a carrot you know we we incentivize you to put up your capital to make this thing more secure and you get you get a carrot the thing about proof of stake is that not only do we have a carrot but we have a stick and so the security margin isn't just the return but because the asset itself is in the protocol the asset can not only be rewarded for positive behavior but but penalized and for negative behavior so this might be penalized for being offline not doing your job very well or in the extreme where you're doing something explicitly nefarious you can actually lose all of that capital so the uh the the intuition here is if you try to attack proof of work ethereum no one can come well somebody probably could but the protocol cannot go burn your mining farm down whereas in in proof of stake those assets are literally in the protocol and so the protocol can identify attacks itself and burn your virtual mining farm down so we get a much higher security margin and so for the same amount of crypto economic capital securing a protocol we get a much better security margin stick and carrot better than just carrot um we also get better emergency recoveries so proof of work when you get attacked in a 51 attack um that entity now just is in god mode and they can reorg and double spend and reorg and double spin and uh vitalik in a post long ago call this a spawn camping attack where essentially like you come back to life you're back at the head of the chain and then you get attacked again you can just do it in perpetuity you can't really get your your feet underneath you again and and secure the chain and this is because those uh attacking assets the mining hardware and the energy are extra protocol they're outside of the protocol and so the protocol can't do anything about it once you have enough capital to attack the chain it's it's game over your spawn camp forever and so you can say the miners please stop spawn killing us please uh and they'll just say stop spawning we're in god mode the nice thing about proof of stake and i alluded to this in the security margin is that attacking capital uh can either be burned uh depending on the type of attack or it can be socially intervened so many attacks are actually detectable by the protocol itself um and can burn nefarious capital so if you try to rewrite history you get to do so once and then you get all your assets burned as opposed to proof of work and certain other types of attack like potentially censoring can be identified and at least socially coordinated around so we cannot socially coordinate out a subset of mining uh censoring mining capital but we can because the asset is in protocol socially coordinate in the event of an issue and essentially fork out evil people's assets that's a nuclear option and one i don't actually expect to see but the threat of it is actually uh pretty powerful in and of itself sustainability the third is uh this is this is the theorem proof of work well it's probably more like bitcoin proof of work i think they use a lot more energy than us but uh if because the amount of mining power that secures a protocol scales with the value of the protocol eventually that's where we're going to end up and that's not where we want to end up we want to end up more like this you know ethereum we want to build new beautiful utopias with ethereum so we need to kick out this energy hungry component and that's the third s of y proof of stake and we can take a deeper look at this the estimated energy consumption of ethereum right now is 80 terawatt hours per year which is a lot that is uh that is akin to the energy consumption of chile and would put it if it's its own country like in the top 40 countries of energy consumption in the world um bitcoin is actually much worse or magnitude worse and is more like on the order of poland and is maybe in the top 10 top 12 in terms of countries energy burning in the world so um let's look at some quick napkin math on what this what this means when we get rid of proof of work so a normal computer which i think you know my computer looks something like this is uh takes about 400 kilowatt hours per year of energy just to keep it on do its normal processing light up its screen and talk to the internet on ethereum today there are about ten thousand nodes give or take some amount and so that's four gigawatt hours of uh energy per year and that is uh so that's that's kind of the baseline to run all the computers in the network and then you have this other thing the the the mining which is that 80 terawatt hours of energy and so when we get rid of um proof of work we actually just become a network of nodes a network of like the energy consumption is literally just the amount of computers on the internet that are running ethereum which is not that much energy it's a bunch of laptops it's a bunch of home servers and so we get to take this 80 000 gigawatt hours and slash it out and we just get the four gigawatt hours of running about 10 000 nodes you know and even if that scales even if that goes to um 100 000 nodes in the network which would be awesome it's 40 gigawatt hours on uh the entire usage of uh energy and so to contextualize that a bit that's a 99.995 percent energy reduction like that's that's insane and the intuition there is because you don't have you don't have to secure the network you're the dedication of the resource the scarce resource is not energy like we the dedication of the scarce resources itself in in proof of stake and so that is how we're going to go from this to this 99.995 and the crazy thing is if 10xed um not making price prediction but if if a proof of work asset 10x is the new equilibrium for the amount of energy you're burning also scales with linear with linear with it so we also get out of this like this hamster wheel thing of energy as as the protocol becomes more valuable will burn more energy you don't want to do that proof of stake more secure more sustainable oh i didn't do the third one and more scalable oh that's i messed up that slide anyway that said 10 faster block times so we're going from like 13.6 seconds to 12 seconds and less variance and timing scalability that's we actually do get that scalability game but it's that's not like the main reason the proof of stake is going to be more scalable at the merge it's going to give us just a little bit of marginal gain because you get more regular block times you get fat a little bit faster block times but that's not that's not the scale but that's at the end of the scalability narrative with proof of stake what it actually does is it opens up the door for more sophisticated consensus mechanisms with proof of work because the consensus participants are extra protocol we cannot sophisticatedly orchestrate them to do more complex things in our consensus protocol and what it really does is it it allows us to do to utilize sharding which takes consensus participants and randomly samples them in a very secure way to do distributed work across different subsets of the protocol at any given time so sharding the intuition is that we get to get more out of our consensus mechanism um so the scalability uh the merge lays the foundation for more scalability uh because by moving from preferred stake we can architect more sophisticated consensus mechanisms to come so i'm going to shift into we did when relatively soon we did y uh the 3s is more secure more sustainable and more scalable while retaining decentralization um and now we're going to do the how uh the how and like what it's going to look like so this is a theorem after the merge it looks like a blockchain because that's literally what it is uh it is a single unified blockchain uh and to an end user it looks and feels like a blockchain it looks and feels actually exactly like if the arm does today except it's a little bit more secure it's a little more it's mega more sustainable um and we all get to hang out a nice more secure land uh but let's dig in a little bit this is what it looks like after the merge we have the consensus layer we have the beacon chain supporting the security of ethereum and then we have the execution layer where all the transactions and accounts and state and stuff lives if we dig in a bit deeper we can take a look at this consensus layer if you're familiar with the being chain you have slot you have a parent you have randomness you have a deposit route for bringing in new validators you have all these uh system level operations like attestations and deposits and exits and then you have the execution layer embedded in this beacon block uh that again is all the things that you know and love and uh hang out with an ethereum today that's what it looks like after the merge and actually this execution layer references itself so we have kind of this like sub blockchain inside of the blockchain that's an important point that i'll reference in about so this is the execution layer this is this is from the perspective of a user today on proof of work and after on proof of stake this is what everything looks and feels like you know the the outer consensus that gives you security is for most use cases and for most users that's in implementation detail right as long as i'm getting sufficient security so this is what ethereum looks like today instead of that proof of stake consensus layer as the kind of outer secure shell we have a proof of work consensus layer and we have that execution layer embedded in proof of work instead of proof of state so this is what the consensus layer looks like after the merge we don't need to really go into that i think that's a bit extraneous but essentially it is consensus and we have some stuff we can shove into consensus in this blank spot uh and ethereum after the merge is simple and we're going to show you how we get there so this is ethereum today the beacon chain was launched at the end of last year in december um and the beacon chain is a consensus mechanism as the proof is stake in sentence mechanism and is primed to come to consensus on things other than just itself and and parallel to the speaking chain that is running very successfully is the proof of work chain this proof of work chain as you see runs in parallel it has all the user activity today and the idea is we want to take all this execution layer activity and shove it into the beacon chain and let go of our energy burning proof of work overlords so this is what it looks like um the execution layer is chugging along and proof of work we hit a terminal total difficulty so essentially this block exceeds some threshold of total difficulty that will be decided upon in a few months and at that point the proof of stake validators say you're mine now and continue make a continual chain a continual uh sequence of history from the previous uh where the previous execution layer lived into uh for stake and from the end user they go from here to here to here to here and they just are hanging out in a uh in a proof of stake chain instead of hanging out in the proof of work chain and we can finally move on with our lives and to finish this proof-of-work business so again the the key is that we have these two things in parallel they right now the proof-of-stake uh doesn't really have any much valuable things for users if your work has all that and at a point of of transition and time um the proof of stake validators take over the mantle of securing the execution layer over there and the nice thing is that to an end user it just looks like this right the first two blocks here could be proof of work the next three and forever are proof of stake and to the end user it just feels and looks like a continuous blockchain and that's major major design goal like ethereum is a fantastic place with tons of activity and tons of security and lots of things and needs uptime and it needs uh consistency and this merge process has been designed with that in mind there is no downtime and there is no there's no migration process you literally just continue to use your dapps and the security gets better and we get rid of all that energy consumption and after that we take that consensus mechanism this is a bonus this is something we do after is you know you shove more things than the consensus mechanism we had that execution layer inside of the consensus layer and then we also add the sharded data layer where the validators not only are processing the evm and that transaction payload but they're also being randomly sampled across shards to provide a scalable data layer cool so what is a there's some engineering implications here um i alluded to it at the beginning but we have uh we have different types of client teams now we have what we're called eth1 clients those become execution layer clients they build execution engines for this post merge world they essentially take their client subtract out proof of work and begin listening to the beacon chain uh and so if you're if you're building geth uh it's primarily guest is primarily a sophisticated execution layer that handles transaction processing and state management and all that hard stuff and a very minimal kind of brain called proof of work and it's then we're essentially cutting out the brain and listening to uh to the beacon chain after and these what we call e2 clients what is that uh these clients become consensus layer clients and what have they been doing for the past few years they've been creating highly sophisticated uh proof-of-stake engines and those drive uh that layer of the software after the after the merge and so what does this look like it looks like two pieces of software living next to each other the execution engine being driven by this engine api you have user apis that remain entirely stable all those web 3 libraries and then you have these beacon apis where if you want to query about validators and different things about the consensus you ask there and actually uh the nice thing is we can take a web3 library web 3.js or 3pi whatever it may be and just namespace these things so instead of um so the standard standard api is still a bit web3.e no problem and then we can add some additional apis with 3.beacon and so i can continue to use the same software and if i want to get a peek into the consensus layer or the proof of consensus layer i can just call up 3. beacon and the nice things there there's a bit of uh ux work to do here uh obviously running two pieces of software is harder than running one um but there's some nice efforts on doing a unified uh unified gui on the two uh maybe some unified clis uh peter was working on this thing called minority that maybe doesn't help the ux but it does a nice multi-client thing uh check it out anyway that is it i will shield these nfts one more time if you want to check out if you want to own a piece of ethereum history you can go to this openc when merge page i think the floor has been bought up but if you want to want to donate to the researchers and developers working on this day in and day out you can go buy an nft support the cause and these will be distributed to those that work on the merge after or on the merge chain i think i have a few minutes uh if there's any questions i'd love to chat yeah thanks danny um one question uh from one of the audiences like you talked about killing proof of work uh kind of just extrapolating way too far out what does the world look like with post quantum kind of pieces coming in and any concerns that you may have now for uh proof of sake in that world uh yeah so there are there are a number of things that we want to do in the next few years so that involves killing proof of work that involves uh creating a more sustainable state solution that involves bringing sharding online and some probably a number of iterative improvements to the evm um those once we get a lot of that in place ethereum becomes like a very sustainable piece of architecture for for the internet except for this one glaring problem which uh depending on the person you ask it could be in 10 years or could be in 50 and that is to to make the protocol quantum resistant the entire internet including ethereum is going to have this problem and uh it is on the roadmap to replace all non-quantum resistant components with quantum resistant components as soon as is feasible so that was a design goal in a lot of the the building and designing of the beacon chain was there needed to be a known post quantum analog for any of the tools and gadgets we were using so like signature aggregation we use bls that's not um quantum resistant but you can use starks as you do the same thing you wouldn't want to do it today because it'd be very expensive but we do expect in the next five years or so for that to be a much more palatable solution and so in that probably five plus year range uh i would imagine we slowly kind of swap out some of these components for quantum resistant components awesome well hopefully um that was uh a satisfying answer um one other question i have for you jenny is uh i mean kind of talked about mostly what's in the future and how we're looking at uh killing killingbrotherwork could you give us an update on basically what's happening right now with the merged timeline just from your review just high level items we got a couple minutes so we have to yeah we talked about this a bit on all core devs this morning um at the end of the interop which was last week we had a general thumbs up all around of uh we had a number of spec refinements and mostly simplifications that came out of the interop and those we will will certainly be done by the end of october then throughout november we'll the client implementations will iterate to get these these spec changes done i think we'll do a few short-lived test net launches in november with a target of a sustained test net at the end of november to run through the holidays then we come into january and are able to make a little bit more clear decisions about uh timeline from there it's either going to be something where we were feeling pretty good and it looks like uh march april maybe early may or things have surfaced where we need more time more testing and at that point uh we would have to kick it down kick it down the line um i'm very confident uh i i think that the the work that we've done and the momentum behind this thing is is pretty extraordinary at this point um and i think in january we're gonna be feeling pretty good um there will be in december a hard fork and upgrade on on the proof work chain to push back the difficulty bomb and i believe that would be pushed back for about early may mid-may and so really like we either either that's that's kind of the like that that is what we're tempting to do right is before we hit that difficulty bomb um and if not we'd have to kick it back maybe a month or two well you heard a year second because i think you heard it first at the core devs call but uh this was great um hopefully uh we get things sooner uh then then outline but uh that's the plan what happens next so thank you so much danny and uh if there's any other questions we'll reload them to you over email thank you very much i appreciate you [Music] [Applause] [Music] 