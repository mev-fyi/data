hi um okay 9 30. so i'm just gonna kind of take a slow start maybe a couple more people will trickle in but it's also 9 30 on a friday so might just be us um thanks for coming i'm leilani or lei i'm a product marketing manager at covalent um so i think i've seen a couple of you at our booth this morning um or all through the day really i'm just going to give an overview of covalent how you can use it and how it might be useful for this hackathon and this is kind of the broad agenda for the talk so before we get started if i haven't kind of given you this feel already at the booth at some point today um covalent is an indexing company for blockchain data so what we have is an api that's actually free and it's unified so you can use it across all the different chains that we index which currently is 35 different blockchains um and then you can basically build multi-chain applications pretty quickly it's a rest api and it's also read-only so those are kind of like the ground details before we get into the rest of the presentation common use cases are like wallets nft galleries but any on-chain data you can pull into your applications with us so yeah i'll cover some of the data challenges just so you get an overview of like how we compare to other solutions go a little more into the api how to access it get started and then our bounty info because we are doing a ten thousand dollar bounty for uh east new york so and it's a general bounty so if you use the api at all you're actually eligible for part of that prize money so um kind of how we usually start off these presentations maybe if you've participated in each global hackathons before you might have actually seen one of these kind of talks that we do and overviews but covalent's always really been focused on the future interoperability um and just gambling on like real mass adoption of blockchains whether or not that's in a deep file landscape i like the woo um or like whether or not you even know you're using a blockchain so in the future we see millions maybe billions of pieces of information on chain um i should update that slide actually because i think like there's already dozens of blockchains um and lots of applications which means also lots of users and initially when covalent was developed it was with this in mind which was that data was going to be very complicated and in demand especially because blockchains are not all the same they use very different architecture we've seen the evm model and now the non-evm model and it can be challenging to standardize data across those to access them to learn new tools and new ecosystems and all of the things that come with that so that's kind of where we saw the data challenges and what we wanted to address so what it kind of boils down to is interoperability and this is everything from like users so if you've even just used the d5 protocol or bought an nft or really done anything in the web3 space you notice that it's pretty fragmented there are different solutions across different chains and a lot of solutions are kind of in silos so especially for developers like yourselves if you're building applications and you have that user persona in mind where you want to aggregate their data perhaps to make that ux or ui a little bit easier there isn't really there aren't many solutions to actually do that and there's also just so much data on the blockchain in general um so doing the indexing work yourselves or running your own infrastructure can be pretty challenging because it's just adding an element on top of what you already want to build um so this is like a little bit more into the data challenges i know i'm like really illuminating the problems here um but not only is it complicated it can be expensive if you have your own if you have experience like running your own nodes perhaps you know that the more you scale the more your project grows the more you're also paying and at some point that's quite a barrier i think to a lot of growth in some interesting use cases also missing delayed data lack of standards blah blah blah there's a lot of problems i don't think we need to illuminate every single thing because if you've spent time building in this space you probably have run into these problems um so that kind of leads me into the covalent api i hope you can see that qr code it's just going to take you to our website which is the point of contact for signing up for an api key which is free but also for all of the information that i'm going to cover throughout the presentation so if you want to follow along you can do that and i'll go into some of those links as well um it's one solution to access all on-chain data so the unified aspect as i mentioned before aggregates different apis across different blockchains so that you're only really interfacing with one tool and you do that through what's called a chain id in the future might be a chain name we're just trying to make that the easiest possible experience for developers but basically if you built a project on ethereum and you want to include polygon or you want to include another chain that your users might be on you just have to change a parameter to be able to add that in so it's super useful for focusing on multi-chain applications it's also useful for all historical data granular transaction data really anything on the chain we index and what's nice about the unified api is that it's a standard request and response format so we're pretty big on developing a standard for data so that again you're not kind of like reinventing the wheel every single time you build something new so yeah you can get really familiar with the tool and the response and then as we scale you scale that's kind of the idea with this there's also no code required so recently i'll show you the docs in a little bit but we did develop an analyst mode because we saw that a lot of kind of normal users or people dipping their toes into web3 want to be able to understand the data and make quick insights and cut through the kind of the noise on twitter and things like that so that is a useful feature as well so this is kind of where we fit in the crypto stack it's a question i think we get pretty commonly because there are a lot of different infrastructure solutions out there there's people that both read and write to the blockchain we are kind of a read-only layer so you can think of the blockchains as the blockchains i guess they're the foundation where the data lives the nodes are the way that you interact with those blockchains so without covalent you'd be running your own nodes paying a node provider or using some other kind of solutions but where we sit is between that and the application layer so really what we support is just those applications on top so if you need to display any kind of data or pull in those feeds into your applications whatever you're doing we just make it easier so that you don't have to do all those steps beforehand you don't have to run your own nodes you don't have to like write complex queries you just make api calls and the data is instant so that's kind of how we see supporting like the the scaling issues of just development in the ecosystem i think at this point we've seen reports that there's pretty small group of developers so i think a big chunk of the active ones in web 3 are actually at these events because i think i read there's 30 000 active like monthly developers in web 3. which when you think about that globally it's really not a lot so in order to make that process easier need better onboarding tools or things that people are just familiar in general like apis people understand apis and we can simplify that language and make it easier for more people to build in this space so that's kind of how we see empowering more users again kind of just supporting adoption in general because as much as it's really exciting to meet like your small little tribe at these events to support the mainstream and to to make it for all of us we need to make it easier for people that have like no experience or don't know what any of these things mean um so these are kind of our two main users developers like yourselves maybe crypto isn't the right word maybe web3 is a little bit better but developers and then analysts so really in the past year i think we saw like a lot more mainstream news applications um covering the crypto markets and if you've read some of those articles i don't know where they get the data it's like not always accurate it is hard to find um just granular accurate data that is easy to access so if you don't have that you can rely on on misinformation or on other sites that might not be giving you like the most i mean it's just better to be able to do things yourself and verify yourself anyway with that in mind we did develop an analyst mode so with the api um if you use it in developer mode you'll get a json response but if you switch it to analyst mode in rdocs which i'll show you you can actually just download those directly as csvs or you can see it as a spreadsheet in the browser so even if you are a developer and if you have limited time at these hackathons i think it's a really useful way to just visualize the data because you can clearly see like all the columns that you'd be getting what those values are so it's a little bit about our ecosystem some of the bigger projects that use us but also just you know the proof that a lot of developers have tried out covalent and yeah really enjoy the ease and the speed of working with it i think especially because you have a tight turnaround of these hackathons it's kind of nice to have one solution that you can really experiment with it's good for beginners as well but also bigger projects that again kind of want that like standard response multi-chain capabilities and everything else that we support so just a little bit about our network one of the questions that we used to get a lot is are you decentralized how does that work with web3 it is important to a lot of people in this ecosystem we actually are decentralizing and we took a big step a couple months ago with launching single-sided staking and launching um what is called a block specimen producer i'm not going to get too into the details because i don't think that's the most relevant if you want to learn more you could talk to me after but basically it's a first proof based extraction mechanism for the blockchain so what we do is we uh we have validators that are running our block specimen we extract the data and then they verify that it is like they verified it with a cryptographic signature that is accurate so that's a really important part of our decentralization step and throughout the rest of the year we plan to decentralize the storage the indexing the querying really probably in like a quarter by quarter format so we're looking at about a year roadmap but of course things are kind of you know flexible in that way um but yeah that would be the universal decentralized data model for multi-chain indexing and querying is quite a complex sentence um but you get it we're decentralizing so this is a little bit more on the bounty that we're providing um for eth new york so ten thousand dollars um in stable coins new york itself actually distributes that um so yeah but uh basically it's just meaningful use of the api so we like to keep it open because actually our slogan has one unified api one billion possibilities when you're a data provider you don't really like gear people in a certain direction it's better to actually just see what comes out of events like these and i really like the unique use cases so if you have a weird idea in mind and you need any sort of on-chain data the most useful end point i think is like log events you can scrape through those you can do that by topic cache you can go through the contracts but we do have like specific endpoints for nfts for instance specific balances endpoints i'll show you those in the docs as well so by meaningful use the top prize is a 3000 the minimum price is 500 and basically we judge it based on like complexity and the creativity of the use case so if you do combine more than one endpoint you're typically eligible to win more but if you integrate covalent at all with other solutions or whatever you want to do that's totally okay and you'll be eligible to win part of that bounty so i can go to those details a little bit more in depth uh once we get into my other links so here's kind of the primary developer resources um one is our covalent docs obviously when you try a new product you go to the docs to see how it all works so on there you can see supported networks more info on the blockchains that we actually support and how you can use those endpoints you can also see how to guides you can see some of the other tech that we have built on top of the api that's an option for you to use then there's the api reference itself so that is the extension of the docs where you can actually try the api live in the browser so we added that feature last year and it was a really important thing for us again to make that onboarding experience a little bit easier so you can actually see exactly what the data is that you'll be getting before you go as before you go ahead and build something with it so you can try all of the endpoints live in the browser and you can view that response and you can see the fields and everything like that before you might pull it into another solution and then the third important resource if you've been by our booth i've probably plugged this to you as well is our code templates so we've started to build out more code templates components tutorials just kind of focusing on onboarding more people into that ecosystem and we have a giveaway going on that if you go to that link for our code templates you star our repository you enter to win airpods pros which we'll give out at the end of this conference so yeah and now i'm actually gonna like go to these links uh okay it's a little bit complicated on here okay so is that like showing my whole screen yet is we love to see it there we go so this is what our docs look like um you have an overview of pretty much everything that i just said so what covalent is apps that are building on us and then the sidebar is where you can get the rest of the information this is covalenthq.com docs and what you can do is expand the developer tools you can see the updates that we've recently made here we do that month by month you can see primer which is kind of similar to mongodb it's like another thing that you can do to customize your api queries and you can click on supported networks so this is where we show all of the information on our blockchain partners we're adding these like crazy right now it's been a really big year for indexing for us um so yeah stay up to date with those because it's pretty exciting but if you go to click on them for instance you can just see the chain id a little bit more details oh yeah i wasn't going to click on anything because the wi-fi is not great so i probably shouldn't have done that whoopsie-daisy stop okay and then yeah there's a little bit more on here we actually did have a network section of our docs as well oopsy daisy um just if you want to learn more about that decentralized component and how how the api is connected to our network and how it all connects so you can browse these at your leisure and you can ask us questions in the booth so moving to our api reference um this is where you can actually see the endpoints that we provide and this is where you can test them as well again i'm sorry wi-fi so i can't really do it right now but i was just informed that they're pushing a big fix so stay tuned for that but we have been broken down into some categories so these are what we call class a en points and then we have further further categorization in there so broadly we separate into balances nfte transactions and base so balances um this is the most used endpoint that we have we kind of started with balances and it's been our rock ever since and we are making more improvements to it on a continual basis but especially in the next quarter it's going to be revamped and faster again so when you get in other solutions you can query like does this wallet hold this exact token for instance with our balances endpoint um you put in a wallet address and it just shows every single token that they have so it's a really good way for aggregating balances data for building wallets or just anything where you want to display a user's assets on chain and you can again do that across multiple chains our nft endpoints um a lot of these were developed in the last year just because nfts became such a huge trend and a huge space for developers to innovate um so you can get metadata for nfts like the images themselves the gifs whatever that is also the attributes um this is kind of more used for building like nft galleries or uh or speculation tools for instance we've seen people build like predictive tools for whether a collection's going to go up or down so cool things like that and yeah nfts are a fun creative project for hackathons for sure because it's visual so if you're if you're thinking of doing that we can support you there transactions so um a lot more of these are used in like defy use cases so you can just show a user's actual activity on chain uh i'll kind of go into that a little further and then base so base is just things like to get a block a date and time anything that you might need to help support your other queries class a endpoints can be done across every single chain so if you want to see the supported chains oops you can click the drop down here and this can show you all of the change that we index and you can switch between them um yeah it'll show you their ids everything you need to know and if again you want more details you go to the docs and then um we have class b so class b originated as just like protocol specific endpoints we actually only have this one on here right now but it's a very powerful set so if you're familiar with like x y equals k it's the amm model that uni swap b2 popularized that a lot of other swaps have like forked and cloned so pancake swap and spirit swap and like a lot of the swaps basically um so what you can do with this endpoint is you can query all of the dex data where they use that model so it's a lot of the dexes in the market you can get pools spot prices volume any sort of decentralized exchange data really useful if you're doing sort of dex analytics and we do support a lot of those clients as well with their info pages so if you're building something like that x y equals k is a really powerful tool to use at the bottom here too you just have a couple of pricing endpoints that are always useful so yeah that's an overview of the docs and now i'll show you that code templates thing that i was talking about so if you come by our booth or if you copy the link in this presentation it's going to take you to the web 3 starter resources these are some useful things that we're consistently adding to to help people get started so we do a little bit of the work and you can fork it and modify it and basically just use these in whatever builds you want so again if you go to this where's the star i already started but if you start then you're eligible to win those airpods this is what it looks like so right now we have an x y equals k dex dashboard template so the ones that i just mentioned where you can show all of that different data um you can fork and clone this and modify it it looks kind of like this at its base so we've built this out you could switch the different exchanges oh yeah i'm only on ethereum so it's those two but you can switch the chains supported over here you can see all the different chains that this supports and then it'll populate the different exchanges supported on those as well um it even has like a little sentiment analysis thing and this is again just like the very base so you can improve this um but if you are looking for like a quick thing to build maybe this is somewhere for you to get started and then we have a price tracker chrome extension as well i haven't played around with this as much but uh i recommend checking it out we're getting a little more into widgets lately oh you're welcome we're getting more into widgets lately and components so if you are interested in integrating those into your into your apps or whatever you're building it's another quick addition that you can you can yeah quickly add in it might add some pizzazz to your project and the re the readmes for these kind of give you all that you need to know so oops where am i going yeah and then um just at the bottom here we have a code along so we're starting to do a couple more of those as well it's just like a python notebook that you can follow along and get started um with yeah there's also like a little bit of a narrative in this one but you can get started with our api and see what that would look like as well so just to give a little bit more info on the bounty and pull up this page hopefully the writing is like a decent size i think i can there we go cool so as i mentioned the api is super useful for nft storefronts on chain analytics wallets a lot of these are popular use cases that some of our bigger customers who are around sponsoring also use this for and if you want ever to have like a more in-depth conversation on how that works you can also come see me at the booth or ask me afterwards um but this is kind of broadly how we look at judging so one to five on each of the key factors which is the creativity and feasibility is kind of a big part um this was more relevant i think i think in like the bull market when you just saw everybody building things like kind of for no reason which was which was great but you know what i mean um so people that are looking to solve a key problem obviously that's awesome and judging we take that into consideration and then which endpoints you used um i still really recommend checking out log events uh because that's just like the most versatile endpoint for anything you might want to query and then the user experience is a factor i always just advise people maybe this is the first hackathon or maybe you've done a lot but good design goes like a long way because it makes you more noticeable and it's awesome and then the technical competence so basically just like how how organized how clean the code is things like that so the resources are at the bottom of this page this is published somewhere on each global site as well and we actually do have our lead api engineer with us at the booth which is amazing his first time he's here so if you have like specific technical questions or anything you want to help with or more inquiries stop by and he's like around to help with all of that which is amazing so yeah i think what else did i put in this presentation let me just see if i'm at the end um one second yeah that's basically it so if you have any questions i can take those now that link i think is just going to take you back to the website again so you can follow everything i just said and yeah i'm happy to chat you can also come up here if you don't want to like say it loudly but thanks thanks for joining foreign really excited to see you all so today we're gonna explain what uma is what optimistic oracles are and for the hackers in the crowd we're gonna give some ideas for some projects you could build with optimistic oracles i think we have a pretty decent quick hack idea but also just give some examples of how uma is used in the wild today to help you guys out no matter how far you are in the process um and i'm nick i'm an engineer and this is shawn product manager and yeah let's begin so so uh just starting with the basics basically uma is an optimistic oracle i think to talk about what an optimistic oracle is we need to first talk about the fundamentals what is an oracle an oracle is a system that is built to uh trustlessly and reliably bring data on chain so it can be used within smart contracts so if you have a smart contract uh for like a derivative on the price of say gold you need to know what the dollar value of gold is and you need a way to actually get that data on chain because smart contracts have no notion of you know off chain data um so in you know d5 uh what do people think about when they think about oracles they typically think about things that we call price feudal oracles so an example of a price feed oracle would be something like chain link what are price feed oracle is good for basically price feed oracles have a trusted set of actors that push prices frequently and are good for deterministic types of data so they're used a lot in d5 for things like uh you know securing lending protocols and running like liquidation engines there and they're very good for you know times when you need data quickly and you care less about like flexibility of the types of data you can get access to or you care less about you care less about like a concept of recourse and you also don't need any element of human judgment so things like crypto prices are probably the best example what is an optimistic oracle so optimistic oracles are a different take on how you approach this oracle problem um optimistic oracles uh we say enforce correctness after a dispute um so what are they good for uh they're good for basically bringing any type of data that is like uh generally uh verifiable on chain so you can ask a much broader set of questions of the oracle so rather than you know only being able to get things like crypto prices you can ask it like very very general questions um and we'll go into like why that is and like how the oracle actually works uh but it's good for things like you know not only can you get access to the price of eth but you can get access to uh basically the answer to any sort of like yes or no question that you can ask it so like what like who won the lakers game last night or uh like who won this political election or what happened on this other blockchain network those are all things that optimistic oracles can serve very easily this is a very complicated diagram so we'll share slides afterwards and i would recommend going through it then um but just at a very high level uh what does the data request process look like um basically with price feed oracles the way they work is that this permission set of actors will come to consensus on prices beforehand and push these prices on chain very frequently with our optimistic oracle basically somebody needs to say hey i need the this piece of data so they need to submit a request once that happens anybody so a completely permissionless set of people or not a set but like anybody can come in and say you know you're asking for the outcome of the sports game last night or you're asking for the price of eath and i can submit a bonded proposal saying i know the answer to that question it's this that answer then sits through this liveness period or verification period where anybody else can view that and decide if they agree or disagree with it if everybody agrees and nobody disputes what the initial proposal is then this is accepted as truth and this is where the word optimistic comes from so it's kind of similar to like optimistic roll-up fraud proofs where there's like a verification period where things are verified um but so if nobody disputes it then it's accepted as truth and that's the like data point that's used if somebody disputes it then it basically gets escalated to a larger court system or dispute arbitration system again there's a lot here so i would go through the diagram but that's it at a high level and nick's going to go through a couple demos of things you can build cool um so this this next section is mostly for builders developers and i'm just going to walk through some very simple toy examples of contracts that use the optimistic oracle i'm going to explain how they are very simple versions of real apps that are out in the wild right now using the uma optimistic oracle and then we'll walk through some of those real-life applications at the end of this so the github repo the quick start repo that we just put together is live at the url there we use um typescript hard hat ether.js type chain pretty um standard stuff in the industry today but it could be i guess it's just a good place to go if you want to just get started quickly with the latest of the tools that real facility solidity developers use today i'm gonna explain a really really simple um contract first called the deposit box i'm gonna extend that with what i think could be a potentially useful application in the real world but maybe not but it does actually use the optimistic price request very well and then the third i'm going to explain how you could build a prediction market very simply well actually we built it i'm just going to explain how it works so the user story is there's a deposit box let's treat it as a black box that's why it's black a user deposits 10 erc20s into the box and the idea is to keep it safe there safe from their own hands in case they trade it so call it let's say 30 days later the user wants to withdraw money from the deposit box to pay for cookies or coffee and the user wants to withdraw ten dollars worth of tokens now recall when the user first put in tokens they put in 10 tokens they had no idea what amount of dollars they were putting into the box so 30 days later the user wants to withdraw ten dollars worth of erc20s how does the black box know what what one dollar worth of tokens is well the deposit box can make a price request to the uma oracle this is a very contrived example because you could have asked this to a to a price feed oracle as sean explained earlier it's very for most tokens it's pretty easy to understand what one dollar worth of that tokens are but you could ask this to the uma price oracle and you'll you'll ask hey what is one dollar worth of tokens today um and the umo oracle is going to respond to it so i'll give a really quick segue on how does the oracle know how to answer the question so the actual price request that the deposit box is making to the oracle is a question what is one dollar worth of tokens today voters who are off chain actors need to look at some sort of legal contract or some sort of rules off chain or methodology to understand like how to respond to this question so a real life example that we use to secure contracts that store like the comp token comp is uh the offset uh the off chain set of rules might be look at these three exchanges and take the median of their prices at the current time and that is the price you should return so uma oracles are secured by these off-chain contracts with rules that voters can easily follow and it's the the onus is on the writer of the contract to define these rules correctly and then voters should be completely neutral about how they respond to them so in this example case the deposit box has asked the uma oracle what is one dollar worth of tokens today the uma oracle says one token's worth five dollars so the user will receive two dollars back let's extend this that deposit box is not super useful i um you could have used a different oracle for that imagine i deposit the ten dollars into 10 10 ethan to a lock box this is something i've been thinking about and actually just was talking about today with some some uh co-workers um say i wanna say my daughter was one years old and i wanted to give her 10 eth but i didn't want her to be to be able to withdraw until she was older and not just based on her age i didn't want her to withdraw it when she was 20. i wanted to sort of incentivize her so i i set a rule that she could withdraw the money if she graduated college um this is something that is easily verifiable by an off-chain set of rules but it's not necessarily easy to define on chain there's no sort of bot that's tracking my daughter's life and responding to this automatically so say for the next 20 years she tries every day to trick me and asks um she requests to withdraw 10 eth every single day i'm going to look at this set of contracts and i'm going to answer no if she ever wants to dispute me she can dispute me and she can raise this question to the dvm and then uma voters can can then answer this question hey um the the box might ask uma has nick's daughter graduated college yet someone might propose no she's four years old she has not graduated college yet so the example umip identifier for this might be a yes or no question has my daughter graduated college yet voters uma voters remember are credibly neutral and they're gonna they're gonna vote according to the rule set that's described so this umip um or or this this this methodology might be vote yes if if she if there's proof that her name has appeared on the graduation list for some certified college this is obviously a very hazy set of rules but it's just just a toy example here and vote no otherwise and the contract could take the result of that vote and unlock her assets is this a useful product maybe not um but i think it would one thing that actually it could be useful for is if you in the future say you lose communication with your daughter uma voters will still continue to vote on this question has she graduated college yet according to that set of rules so um maybe it has some use case but it's just a little bit of an example of a deposit box that could not be used on a different price feed oracle um okay so i'll explain the prediction market this this is a very simple example of how prediction a prediction market today called poly market is built on the um optimistic oracle and this is how it's sort of built today so say users want to bet on the question uh who's going to win the kentucky derby so use the user you might put 10 usdc on the horse seahorse to win the kentucky derby you're going to deposit this into a contract written by the prediction market developers and the prediction market is going to immediately ask the uma oracle did seahorse win the kentucky derby say the user originally deposited this 10 days before the kentucky derby started so there's actually no answer yet the contract needs to be written in such a way that um the prediction market contract needs to be written in such a way that um it will throw out answers where voters answer to the question that the the question hasn't resolved yet there's no way to know if seahorse won the kentucky derby if the kentucky derby hasn't started yet so the oracle's going to basically just give a standby signal to the contract and the contract is going to wait around until the kentucky derby actually happens and then someone will be able to propose a price the proposer wants to do this because they might earn like 50 bucks or just something some simple reward for responding to the question assuming no one challenges it the uh the contract can then pay out users and so this that's a very simple example of how poly market works today and imagine they're running this on many many different markets that are all asking questions to the optimistic oracle maybe 10 a day and individual people around the world are responding to this for a little bit of a reward um and very few of these actually get challenged because they're relatively easy to verify they're they're pretty hard to verify in the price feed oracle like it's not not easy to um to answer questions like um like presidential elections or whether insurance contracts smart contracts got hacked so today we'll just walk through some of the some of some of the the products out there that actually do use the oracle and we can reduce their use case to the questions that they ask um do you want to give this cool yeah so uh these are some examples of protocols that use huma today and like nick said the questions they asked so poly market is a prediction markets platform and you know they ask questions like did the trailblazers win their basketball game last night so you can you know create prediction markets on emma based on very arbitrary flexible types of real-world data the second one the purple one is sherlock which is a decentralized insurance protocol and they ask uma basically was this protocol hacked and should my defy insurance contract uh should it cover this insurance claim um so another good use case is you know enforcing legal contracts where there's some degree of ambiguity and you need some sort of human element to resolve these things the third is across which is a cross-chain asset bridge and across uses zooma's oracle to ask for information about uh transactions that have happened on other networks so if you're trying to bridge usdc from say optimism to mainnet and uh basically across is asking questions about uh like certain usdc deposits and if like relayers are basically like forwarding uh funds it's yeah it's pretty complicated but like was this relay correct so like was this transaction correct and were the fees that were taken out of it correct um the la or the fourth one is uh basically asking for the price of a specific defy token so here it's asking for the price of the fox token and can be used in things such as like structured products or like bespoke financial contracts and then well the last one um is asking what was boba's tvl in february of 2022 so this is used within these things that we call kpi options which are essentially trying to tokenize uh like arbitrary uh kpis or metrics around certain protocols um so here you can create like a financial contract where the payout is actually uh determined by uh boba's tvl in february of 2022. so this is really a reiteration of that with you know what we're actually calling the products so prediction markets are good use case bribes optimistic governance is one thing we didn't talk about but uh basically we have a set of contracts where you could ask the oracle does this like arbitrary transaction follow a set of off-chain rules for a dow and if it does it allows it to be executed and then kpi options we briefly covered and then synthetic assets is like a pretty simple use case but basically tokenizing uh derivatives based off the price of like any real world thing and then the fun stuff so prizes uh we're giving out 10 000 total dollars five thousand dollars first place three thousand a second in two thousand the third uh we have a link where we give a more in-depth explanation around the criteria associated with it but like to really distill it simply it's basically the best use case that integrates uma's optimistic oracle we also are hiring extensively uh we have a referral program so right now we're hiring for a product lead front end engineer smart contract engineer so if you're looking for jobs and want to apply please do we also have a referral program so if you have friends that are interested you can make money off of that if you follow that qr code it links you to our referral program details and yeah thank you uh here we have some resources uh there's actually should be more than that but we'll publish these these slides afterwards that link to our docs uh the quick start tutorial that nick went over um within the docs or tutorials that go through that quick start tutorial on the example contracts and then we're all here for the next few days enjoying this experience with you guys so thank you are there any questions yes so the question was not just that anyone can propose an answer to a question um actually anyone can propose an answer to a question but you you just have to stake a bond the bond keeps you honest and prevent or disincentivizes you from just spamming answers so you'd post a bond that's usually much larger than the reward but anyone can propose an answer anyone can also propose a bond and challenge you and if someone challenges you the the answer goes to a vote to the uma oracle at which point there's no further escalation and the um oracle will just resolve the question yep so the the voters which are uma holders are paid in uma to respond to votes and they're paid if they vote uh with the correct answer so think about um participating voters who vote correctly earn a relative they accrue um a share of the network um and it's sort of taken out of the it's infl it's diluted from the people who don't vote correctly or don't participate cool thank you thanks for coming so i think we're going to be good to get started here uh just a quick session what we're going to be doing is just kind of going over the basics of what pocket network is and how you will very likely want to use it in your application so um i think we can just get right into it so let's start off with uh the basic kind of what is pocket network so in short uh pocket network is a decentralized rpc provider and um yeah i think we're good that's kind of all we have to say uh no so what exactly does that mean um in the ethereum network there's there's kind of two ways to get your transaction out there uh you can run a client and then broadcast the transaction in the network through the client or you can send a request to a node that offers some form of rpc service and so when we ask like what a client is some examples of those are mining nodes in each one validator nodes in eth2 uh things that are called full nodes uh which uh is the the blockchain in the most what most 128 recent blocks archival nodes which is all the blocks in the history of ethereum and so what exactly does it take to run a node uh what this means is you need a machine that can be on 24 7. is that an old computer is that something like a raspberry pi is it a rack server is it in the cloud and on top of making sure it's on can you get to it securely can you figure out how to scale it if you need more than one there's a lot of work that goes into this process that's completely unrelated to smart contracted development and if you're not coming in as someone with a solid devops experience this is a really tough barrier to get over if you want to start using your application in production but wait isn't this what like clients are supposed to do for us and it would be great if they were here but unfortunately you can't really run a light client in a web browser today uh and so it's because that that client still needs to actually talk to the chain and there's a lot of complex behavior that just can't be done yet um and so in comes our pc service and this is what metamask uses and ledger smart contracts use this and so does trustwallet and guarda wallet and myetherwallet and basically every web-based df that you've ever used uh but what exactly is that uh and our pc itself stands for remote procedure call what that is is the messages go between the network through json nodes expose it over http https and so you can talk with it as you would any other standard web application and it provides the lowest technical barrier of entry for people building apps that work with the blockchain almost everything can go through json https so if you can write a traditional web 2 app that uses json http you can start building smart contract interfaces and who handles this uh is it the miners um which will be validators eventually um is this what gas pays for and the reality of that's no miners and validators can choose to serve rpc service but there's nothing that's obligating them to do so and so what this means is there's no on-chain incentive for nodes to actually serve rpc service to the network so while there's incentives to keep the [Music] blockchain data valid there's no way to incentivize that the blockchain actually provides service in the way that every application uses it today um some of the solutions for this uh private entities have really stepped up to fill this space some examples of these are infuria alchemy anchor and these are great products they make blockchain development super accessible but they're centralized and they all require monthly fiat payments to keep that d app open typically the only solution for contract developers who don't want to do this is to stand up their own servers until pocket network comes along pocket network is an independent blockchain that runs on the pocket token node runners earn that pocket for serving those rpc relays and apps can stake up pocket to get that rpc access it provides a utilitarian market for this infrastructure and it makes rpc permissionless and decentralized this all sounds neat and all but how does pocket actually help you as a developer and so a big thing is you have less risk from outages pocket nodes run in a variety of con configurations there's people who self-host physical machines that they actually own there's people who cloud host aws digitalocean all of those standard providers there's people who rent direct hardware through ovh ibm cloud bare metal basically if any of these big services goes down there's an entire other swarth of nodes out there ready to pick up that service another big advantage of pocket is it allows you to own your access what do we mean by that it means once an app is staked that rate is locked in and as long as that app remains staked there will be some guarantee of service this means for app developers that you don't have to worry about monthly billing you can't accidentally run up a giant cloud bill and you can actually recoup some of that initial infrastructure investment by unstaking and selling that when you're done in short with pocket network web 3 infrastructure becomes an investment and not a cost so let's actually get started getting free access here so the portal is an application that we've built on top of the network we have a link through today's event that gets anyone wanting to build on us free service up to a million daily requests it gives developers the same kind of user experience that they have if they were using a previously centralized option it gives them that dedicated url that they expect it gives them the security configuration options to keep that contract endpoint safe as well as dashboards about actually watching and understanding what's going on and who's using your infrastructure and it keeps you alerted in case you are approaching your limit and again that free tier that we're offering gives you a million daily relays and so this is the this is where you go this is the the url will take you to here you sign up get registered and then creating an app is as simple as heading over to apps typing in the name launching the application and then urls are available and you're ready to roll there's the option of setting up security that allows it so that you can protect who actually can access that endpoint if you don't want to make it public and there's ways to set up the notifications that way you'll be sure that you're not going over your service limits so how do you use it we'll get started with just your basic solidity development environments so in hard hat if you're in your hard hat config.js um it's as simple as using the pocket network urls from the portal in place of where you are so for example the main net is the mainnet url that you would get from the portal we have roxton and rinkby and gourley and coven and truffle looks very similar what you're doing is plopping the url in where you would previously plop something else in and you're good to start deploying in your build environments across test nets and mainnet with pocket network instead of any centralized option on top of this you can also use this in remix if truffle and hard hat are a little too in the weeds so if you go to the deploy and run tab of remix you have an option here of select web3 provider then after you select that it's as simple as putting the url into that box and clicking ok and you're running in remix with us as well what about now if you're using it in javascript so in ethers ethers it's as simple as using the json rpc provider with that url and you're ready to roll web3js very similar you can instantiate the web3 provider just with that pocket network url and you're ready to start getting service using us in python again it's going to start to look really similar just drop that url in and you're ready to roll on top of that you can use this in ways if you're not just a diac developer metamask gives people the option to use their own rpc and pocket network provides a variety of public rpcs for people to use so if you go to meta mask in your networks you can choose to add a network give it a name and then you're free to use the the pocket public rpc and now your meta mask is also decentralized so if inferior goes down you still have access to your to the service that you expect through metamask and you can repeat that for any of the chains we use right now we have just a subset of chains that we have public rpc for the full list is available on our docs for anyone interested on top of that what's so great is pocket can be used for cross chain and multi-chain uses so the same application that you register in the portal not only gets you access to the ethereum main net and test nets but as of now up to 50 other chains so for example let's say you wanted to use polygon and eth in the same application it's as simple as taking the urls throwing them into providers and you can get the eth block number and the polygon block number just as easily and the full list of supported chains we have available at the docs and for anyone interested um this qr code here will take you to a link if you register and use us you're set up to start getting going with one million daily relays any questions yeah yeah so this whole focus has been about how pocket fits into your from the perspective of an app developer but the network itself what it is is the app developers actually have the ability to get service from a network of independent providers and so those providers when they successfully provide service to an application who requests it are rewarded with that pocket token so they would all be pocket still yeah so how it works is that pocket itself is its own blockchain and that that blockchain is used to validate that nodes are servicing applications correctly and then the native token of that blockchain pocket is what's used to distribute the rewards no not currently it's uh it's based off of tendermint uh based off of like the cosmos tendermint system the the underlying chain so when people run pocket blockchain nodes themselves what they do is they configure that pocket node to point to instances of nodes that are running on other chains those other chains nodes don't have to be validators they just have to be able to provide essentially the data and write service the read write from that layer so it would be like running a node but not validating on it yeah so the the pocket network sits on top of those rpc nodes to provide some incentive mechanism to do so yeah anything else yeah yeah go ahead um yeah so there's there's options to do so uh the underlying mechanism is that that native token is staked not necessarily paid so um there's features coming out to help us with uh bringing that out in ways that make the experience easier for those who don't have liquidity in the native token but yeah the it's not actually spent is the is the core difference there well everyone holds that stake um and then the everyone who is servicing continues to earn rewards while the apps that are staked the apps that are staked don't earn anything that it's essentially locked is probably a better term so it's locked up in a way that they can't access it they can't build on it while those who have locked up tokens to service continue to earn rewards for doing so awesome thanks everyone [Applause] good morning you got to oh oh okay so um um [Music] working all night it just doesn't make any sense foreign future [Music] oh [Music] i'm joking okay um yes remember crazy okay yes okay oh usd [Music] oh oh foreign foreign oh uh oh i [Music] yes messages [Music] okay town so so so is okay oh uh you 