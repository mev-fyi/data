um hello and welcome everyone to the raiden intro workshop titled introduction to get raiden scaling your doubts using raiden joining us today is jacob who will be taking us through this session one quick reminder to everyone to stake their spot for eath online if you're having any issues please do not hesitate to reach out to myself or anyone on the east global team and with that i'll pass it over to jacob to introduce himself and get the session started yeah thank you emily let me just share my screen so does anyone's or everyone see my screen hopefully great uh yeah so i'm jacob i've been working with raiden for four and a half years now um and yeah i'm here to give a workshop on the current state of raiden and we'll be mainly focusing on using gurley since that's definitely more suitable for a hackathon than they may knit if they're throughout the hackathon or sorry the the the workshop are any uh questions please uh do not hesitate to ask them i'll just see if i can find the chat somewhere here it is uh yeah as emily already said please uh throw the questions in the chat or interrupt me if there are any questions along the way um sure so let's uh let's get started i'll give a brief introduction to raiden itself um for those who are not uh familiar yet uh with it um and then we'll talk a bit about setting operating then there'll be a quick walkthrough of the the rating api so like showing you guys what you can do with raiden and then we'll do a quick session with questions and a brainstorm for those of you who are thinking about building on raiden if you have any questions we can talk about that and also i will do a quick overview of the prices for the hackathon as well so yeah let's get started so raiden is a payment channel network exactly what that means i'll get into a bit later but uh most of you probably heard about state channels or payment channels in one direction or two directions raiden is bidirectional payment channels um in a network and that makes it quite powerful but how that works i'll get back to soon so what we do right now or like what is cool about raiden is that it enables any kind of token ese 20 token to be exchanged between counterparties of chain so this can take a lot of load of the ethereum magnet itself um really works with any ec20 token in theory at the moment on mainnet only dye and wrapped ether are supposed supported but on girly if you're running the development version which is the one i recommend using for the hackathon you can register your own tokens use whatever your c20 token you want so this is quite powerful and in the future it's also planned that all uh ese 20 tokens will be registered or can be registered on demand on mainnet so as most of you probably noticed recently the gas prices have been quite quite insane on ethereum especially due to the d5 craze and yeah what not so one of the big things that raiden solves here is that you can do transactions uh off chain only easy 20 token transfers though so there's a limit to the to the logic that you can can perform but we still believe that it can significantly help ethereum scale and take load off the the main net to use uh raiden and another thing it's it's quite fast as well so you do sub second or around a second per per transfer and you don't have to wait for the blockchain to finalize your transactions as soon as you receive a payment from your counterparty you have a valid uh proof that you can always claim unchain um so we consider transactions more or less finalized as soon as you have this claim um yeah so a payment channel in radiant is always backed by um an unchained deposit so this deposit represents the value that can be transferred in one direction on uh or in a payment channel so in in this specific case we have bob who's got two years each running tokens and las s4 and this is is how the channel starts out for instance so the total amount that can ever be like the maximum amount that can be sent in a in a transfer would be six in this case but uh bob could send two in this case to alice and then ls could set six and they could do that back and forth thousands of times it's only the the the final uh netted balance that will be put on the the blockchain so here um yeah we do this with what we call balance proofs so in this in the specific case uh alice has now sent two tokens to bob with a balance proof representing that and that's how you [Music] always can take these balance proof to the blockchain where the radiant smart contracts can interpret these balance proofs and will then pay out the correct amount in the end so the only interactions you have with the even blockchain when using raiden is for opening channels depositing to the channels and then closing these channels um one other thing you can do in the middle would be to either top up channels or partially withdraw some of the funds from the channel so the reason we did that is that people uh it's quite expensive to close channels and it takes time so it's nicer that you can always just add funds or remove funds from your channels without closing them um so so far we only focused on channels between two parties but what makes reading really powerful is the fact that you can have um you can have payments that go through several nodes so for instance in this example here we have bob uh that has a channel through or a path through d and i to to to h for instance so that means that even though bob is only connected to alice charlie and doris uh he can still pay make a payment to to to age if there is a path in the network um and that basically and a basically uh oh sorry i don't there was a question i i don't understand the question the question is are there plans to do state channels as well okay maybe that's more like if we plan in raiden to have generalized state channels and the answer to that would be at the moment no we're more uh focusing on this specific use case um and question two from youtube is ethereum this is the third version of the lighting network you can say so uh it's it's very uh it's based on the same fundamental ideas at the light as the lightning network uh and how does this compare to roll up question i will take in the end this is a it doesn't compare uh really it's it's two very different technologies but uh let's talk about that in the in the end um so yeah what i was saying was that uh what makes great powerful are these mediated transfers do you only have to have a limited amount of payment channels open that then allows you to basically transfer to everyone in the network and i think this is the the true power of uh of rating that you can use it to pay everyone who participates in raiden without having direct channels with them um so the current status of reagent in may we launched alderaan which is more or less a feature complete version of raiden as we envisioned it from the beginning this specific version had what we call monitoring services and pathfinding services that were new items and these uh the pathfinding services uh is some nodes that that you can request paths through the network from so that means that if you have a like client or your node is not always online you can use these pathfinding services to request a path from one part part of the network to another one for doing mediated transfers and the second one is monitoring services this works a bit like watchtowers in lightning so this is you can ask for a specific channel to be monitored and then this monitoring service will keep an eye out if your counterparty closes a channel when you're offline or something then he will react on your behalf so this these two items were things that we definitely needed in order to be able to implement something like a like client of raiden which we're currently working on uh which is a full radiant implementation in typescript where we cannot expect users to be online all the time so we try to circumvent it with this with uh pathfinding services and monitoring services um yeah that was a brief introduction on raiden i don't know if there are any questions to this if there is then please interrupt now nothing right now all right um there's a question from you what's the current user experience like uh can it just be plugged into metamask using custom rpg at the moment not but the like client will do that so the like line that we're we're working on uh basically uses um metamask and then you sign we call we sign the session when you start and we use derived sub keys so you don't have to sign every single thing you do in the like lined which is uh pretty nice because raiden at least needs to sign quite a lot of messages so the like line will uh run in the browser using meteor mask but uh the raden python client which is the one that is currently in the best shape is a full client that you run locally on your machine that you provide a specific or your desired uh frpc endpoint too uh but i'll show you that in in just a moment so for setting up radon i shared already in discord a link to setting up raiden but basically we have this uh wizard the radio wizard is uh is a small script we made that allows users to just run the script and that will then on girly font this note with some girly eth some wizard token that we could call it that's just an esg20 token that you can use for for for the purpose of the of the hackathon and for this workshop and it also gets some service tokens right we call it this is what you need to pay the pathfinding and the monitoring service so this is a very convenient tool to get up and running with uh raiden and there's also a quick start guide that you can use uh here that explains how this works but yeah you can find this in discord i posted it just before the workshop started um it takes a couple of minutes probably five minutes to set it up so you should uh start doing that if you want to interact later on in the workshop um and there was another question i think uh so monitoring there was another question monitoring so stream essential is there a downside to having your channel monitored as an end user um i don't think there's like the downside would be that you share all your balance proofs so that would be all your your payments you share those with the with the monitoring service so you could say that you might lose some privacy um for some um assurances of uh like safety instead and then there's a question about when i anticipate the the oh sorry um there's a question about when i anticipate the likelihood will be released and if it will be before end of year i cannot say that i think everything that is released on mainnet in uh in ethereum is very very hard to predict when it's ready to go out and how long time it will take at least that's something we've learned from experience so far uh with the raden python client all right let's move on so for starting if you're running if you rather run raiden without using the the wizard you can start it like this um it's it's um yeah there's a uh you can download the you can download rating and then you run it like this uh i'll share the the slides afterwards so you don't have to to worry about the not following right now on this um but i definitely recommend using the the wizard to get going all right then a quick walkthrough of the api first like a an overview of the different uh api calls on what you can do through the api you can query a node you can get the like the address of a node for instance uh just standard node information then you can query all the channels for a specific node you can query channels for a specific node for a specific token so you can see all the the die channels or all the wrapped ether channels whatever token you you're interested in you can check out all the channels that are open then you can check a specific channel so the status of a specific channel that will be for a specific token network with a specific partner uh you can see all the the registered tokens um you can see all the partners you have for specific token then you can register a token so registering a token if is is if you have a a token that is not yet on raden then you can you can register it and this basically sets up a token network for a new token you can open channels you can join a token network this is just a convenience call that allows you like if you use this it will open uh channels with three existing nodes in the network and then it will reserve 40 of the of the funds that you you open or you join with will be reserved for other people that can join you later on so this is just a convenience for for joining the network but not something you have to do you can deposit to a channel you can do payment this is the the big thing um then you can do partial withdrawals which i mentioned earlier this allows you to pull funds out of the channel but you don't have to close the channel so that's that could be very convenient if you're as a shop or store of some kind and you get more funds into your channel than you're putting out of your channel then you can withdraw some of it every month or every week in order to pay your bills or whatever then you can query all payment events so you can see all previous payments you can see the outgoing payments the incoming payments the failed payments as well you can close channels and lastly you can leave a token network what this will do is it will automatically close all channels that you have open in a payment in a token network so this is the the opposite kind of to joining um now just go through a couple of examples so a typical channel object would look something like this it would be an identifier of the channel there'll be a token network identifier so this is for every unique token network so that you cannot have a double spend or you cannot use the same balance proofs in different networks then there's address of the partner there's the address of the token there's the balance um and so and the total deposit the total deposit shows how much you've deposited in total and the balance shows how much how much you have uh right now so based on this we can calculate that there's probably been uh yeah 1 million tokens transferred 10 million tokens transferred in this specific case then the state which shows it can be either opened or closed and it will be settled uh once the settlement has passed um then there's the settlement timeout or settle timeout this is the period of time after you call close that in which your counterparty can provide his last received balance proof um and the reveal timeout is for for these um you have these secrets because you we use these locked messages so this is just the the time out on revealing um a couple of examples on uh how to use the api here you is how you can open a channel by just putting on the channels endpoint and providing the partner address the token address the total deposit and the settlement timeout which would then give the response of the the channel as we saw before um you could query channel so that was what i talked about before that returns a list of open channels um querying a specific channel so this would be in the first case it would be just all the channels for a specific token and the second one will be the specific channel of a token address and your partner address i actually have a couple of examples of this here so if we want to see all the channels in this case i have two channels open slightly the api is slightly or the returners of the object is slightly different than in the slides because we recently updated this i just realized but this gives you an idea and for like an overview of all the payments which you can see here um i just did a couple of payments let's do a payment and check that out then um let's send 13 and let's say the identifier would be lead this should then here we did a payment that was quite fast as you could see and if we then look at the list of payments we should see here that we had an event payments and success with the value and the identifier we specified um and we can also see this represented in the raiden web ui so this is kind of uh referring to to the question about the ux uh this is just a sample implementation we've made for for the people who rather be able to to see and feel what is going on here you can see that we recently sent 13 tokens to the second node that i have here and we can see here that i received 13 tokens and in the in this ui you can also do payment so let's let's do a payment here um [Music] 12 and see here it's pending going through and also here we receive 12 tokens so in general payments are quite fast in raiden um and they're very very cheap compared to to unchain transactions yeah so that was a bit about this uh yeah doing payments i just showed that but basically what you need is uh the token address that you wanna the token you wanna send and of course the the target address the target address can be someone that you're not directly connected to if there is a path as i explained earlier and the payload would be the amount of tokens and you can then optionally also provide and identifier that can be convenient if you want to make sure that a specific payment is going through and yeah this response we already saw um [Music] i also showed you how to check out the payment uh responses so i think that is like a a brief introduction to uh so the i think this is like a brief introduction to the um the api then there's a question what is the partner address so the partner address that would be the the address of the the the counterparty in the channel so for instance if we look at it in the in the web ui i have some some channels open here um oh actually it's very probably better to show in the slides if we go back to the overview so here a and b so if if i'm looking from the perspective of a then b would be a partner address and f would be a partner address so it's just the representation of a channel um where b is the is the partner in in this specific channel between a and b i hope that answers the question and then of course as i said there can also be target addresses so that would always be the target of a payment but not necessarily um someone who's who you have a direct channel with how much gas cost i'm not sure i understand the question so there are different things the the payments itself have no gas cost because radian is is off change the rating is represented through uh off chain payment channels so doing doing payments back and forth is free there's no gas cost on that there's a gas cost of course on opening channels because that's a blockchain interaction depositing is a blockchain interaction closing is a blockchain interaction so you pay for for those actions um so you have to make sure that it kind of makes sense to uh to open a channel if you if you only if you open a rating channel just to do one payment it is definitely not financially viable but if you open a payment channel and do 1 million transactions you're saving a lot of gas i can post uh the the gas like the this precise gas prices after the the presentation if you're interested in in that but the important takeaway is that rate and payments in itself are free um then there is a question about uh if rating can be used uh with remix um [Music] i'm not sure how how so remix is a solidity um ide as far as i'm concerned and uh you're not really interacting with the only thing you do uh is like with radon is to interact with the smart contracts but you're not programming or specifying any logic for radian in solidity that has already been done by us then there's another question about the let's just hop jump into the questions part already uh then there's a question about the like client uh if if um if the like client will provide users with a path without having to run a full node and with the likelihood users have to stay collateral um so the pathfinding service that i mentioned earlier is what will make sure that the the the like client can find paths so the pathfinding service is a service that will that is running i think right now there are four pathfinding services running on mainnet and you then make a request to the pathfinding service to give you a path from your node to the desired target so that could be a path that says alice bob charlie um sorry that you don't need to have the full picture of the of the network at all points in in time that's the that's the purpose of of introducing the path finding services and the monitoring services as i mentioned uh they're there because if your node is not online and your counterparty closes the channel you need to be able to to react to that and provide the balance proof that you received from your counterparty so to answer your question briefly uh like clients don't have to run a full node if they are subscribing or using a pathfinding service which is the default behavior and you don't need to stay collateral to use like client i mean i'm not sure what you especially uh mean by sticking collateral but you still need to of course deposit tokens that can be used in radim but other than that no uh how many channels are there right now uh i that depends on which uh token network and which uh like is it the main net or like i sorry mainly a test net the the wist token that i showed uh before does not have a lot of channels because we just set up that up last week for for the purpose of the of the hackathon all right um any other questions right now if not i would like to you can check out the the docs on docs.radiant.network that's also a good place to to start to learn about raiden in general um we also have a developer portal where you can go and get started some guides on how to get started [Music] and if there are no more questions right now i will just mention the prices that we have for the hackathon and then we can do a quick brainstorm on uh ideas for hacks if you're interested in that but the prices we have is two thousand dollars in rdn for the best hack that utilize raden to scale payments so this is a very broad price and it's basically up to you how you want to use raden to do easy 20 payments so if you can come up with some creative way to to do payments or to to offload some of the the load on the ethereum network with with raiden that would be great but it could also be just uh i don't know it could be a an electric scooter paying every minute of electricity it uses uh through raden stuff like that um and we have a blog post uh with a list of ideas um it's from a year ago but there's still a lot of great ideas in that list and you can find this under the the price section uh on if online then the second price is 2000 in rdn for the best hack that combines d5 and raden so this could for instance be something that replicates a d5 protocol on top of raiden or some cross chain radiant transfers like at dyed xdi bridge and this price we think is quite interesting with the current hype around d5 and it could also be a good chance to combine raiden with some of the other projects that are sponsoring the hackathon like urine compound and arbor so yeah there we have some we have some some good ideas on this as well and feel free to to ask in in the discord channel if you if you're interested in in in some of these uh ideas uh we personally think it could be fun to to have proxies that convert your dye into sea dye and then you basically earn fees on your deposits in region while they are deposited so your funds are not just standing still doing nothing while they're deposited in radem but you basically have urine earning so yield earning fees or yield earning deposits while you can still transfer dye for instance in raiden so these are some of the ideas that we think could be interesting to explore and we see quite a big potential for for stuff like this to to help scale some of these d5 solutions as well and for both prices there will be a 500 price in rdn for the runner ups so yeah five thousand dollars in total and should be some interesting opportunities to to hack on rain definitely um so this is mainly it for me i still have 28 minutes so if there are any people who are interested in brainstorming some ideas or pitching ideas i'm here and i'll be happy to to listen to them and i'll also be happy to play around with uh with raiden for a bit if someone wants to do some some payments or receive some payments try it out i will uh happily give some some help here um but if not yeah i'll hang out here for a bit and otherwise thank you all very much for for joining and um do not hesitate to join the discord channel and ask any kind of uh question you might have there here's the channel so here's a question you mentioned that opening a channel would require gas but will roll-ups complement it in such a way to make the process of opening and closing channels uh significantly less expenses expensive or even near zero um that is a good question and also something we're very interested in in looking into if we could uh put raiden on some kind of roll up i don't think it's impossible and we had another hackathon where one of the hacks was to actually try to to do this so it's definitely an area we could and will look into regarding making it cheaper to to open channels so if this is something that that you're interested in in hacking that would be very much appreciated as well thanks jacob um yes you guys are more than welcome to unmute yourself and ask any questions picture ideas um chat to jacob um so yeah free feel free to unmute your souls if you'd like to chat yeah and derek you asked the question if there are office hours this week um you can at any point in time reach out in in discord and we can uh we can set up a small session if you're interested so uh there are no no planned office hours but we're willing to to plant them at any point in time you you want right has anyone got any ideas they maybe want to put your jacob chat about what you think you'd like to work on um yeah okay well um yeah jacob's always available in the sponsor raydom discord channel for any questions you may have and yeah feel free to reach out to him at any point um as he said you can even organize a small session he's available and if there's no more questions or um brainstorm or pitch ideas um i'd like to thank jacob so much for the session and um yeah i'll see you guys in discord yeah thank you um [Music] yeah there's a one guy with an idea but yeah please just reach out in in discord then we can discuss it there might also be be easier and thank you very much emily and thank you all for for joining in and hope to hear from you on discord great thanks so much jacob cheers cheers 