great welcome again to our workshop on morales we have david goodrich here who will be leading the workshop and you'll be learning on how to build unity web 3 games david i'll let you leave the workshop and if you have any questions feel free to pop them in the chat and we can take them towards the end links thank you hello everyone this is david from morales aka exactant if you've been in the discord for morales so what i want to talk about today really briefly is why use morales in unity 3d provide some examples of what you can build do a quick walkthrough of our boilerplate how to get it up and running and see how easy that is just go through a little bit of the code that shows how to use unity and morales together um walk through a couple tools that will be really important to helping you build your games and then hopefully we'll have some time for questions and answers at the end so why use morales well there are a lot of reasons to me the biggest reason to use morales is our community we have a great community of developers and a lot of employees that are really willing to help and answer questions and uh we like to have really quick turnaround on on answering user questions that's one of the big things but morales also offers you a lot of tools to quickly get your your development going so all the heavy work that's required for crypto development in the back end is done for you whether this is uh nodes querying data um talking to the evm chains morales provides all this for you so you can concentrate on your dap and what your dap is going to do so you can concentrate in your game on the ui on the characters and then all the heavy lists the heavy lifting of communicating with the blockchain is handled by morales so just for an example if we look at morales server you can see that it provides a lot of information so this is one of my test servers and when a user logs in the morales backend server automatically syncs all the data of the chain that the user logged in with into the database so you can query it real time so you can see for this user i have for these users i have the east i can see the nft transfers their erc20 token balances all this is in real time same thing with other blockchains bsc ethereum polygon avalanche all the major evm blockchains are provided by morales the next thing is the nft api so what's really cool about this is this foil api is available to you as a developer um even without authentication by the user so you can you can have your game come up and start querying nfts tokens balances a lot of read any of the read that you have to do on the chain you can actually do through the api and morales has already taken all those data and indexed them and loaded them so that you can do very quick searches very specific searches so if i go back to my server and go to the web3 api you can see that you have the whole schema of the api here and you can actually run through and test these transactions and the way that you use them here is fairly similar to the way that you're going to access them to unity so this full api and all of the um services that are offered by morales start with a free tier and those are all available inside your unity sdk so what is it you can build so you're probably looking at unity you've probably looked at some other game engines the cool thing about unity is it also has a very large community it caters toward new developers so if you're new to game development you're new to using a professional game engine the community for unity itself is very large there are a lot of tutorials on youtube and also on the unity site and so it makes it very easy and some of the cool things that unity provides is an asset store and on that asset store are a lot of free tier assets that you can use to test around with so this is a multiplayer game that one of our developers is creating uh there is a tutorial that he's doing a series on with this and so very quickly i can run this or maybe not as quickly as i expected all right so what is happening here is unity is um basically compiling on the game it's compiling the game um while that is happening i'm going to skip ahead just a little bit we offer a boilerplate application on the web and if you just go to google and type in ethereum boilerplate you'll come to our github and then within that you'll find unity boilerplate and basically what this does is offer you the sdk plus an example application that demonstrates how to log in how to check your wallet balance um how to check nft balance and also how to transfer an nft and then it has some other cool things such as the glowing effects on the sword the life bars showing address and so on [Music] and let's see if that game is loaded yet all right it has okay so i'm going to take my wallet and i'm going to scan the qr code and then just so you know if you build this in the webgl version which is a browser version it will use metamask inside the browser instead of the qr code reason i didn't try that is that it takes a lot longer to build the webgl game so this is basically logged me in and i've now joined a multiplayer game and so far in this game what we can do is just walk around and um and so on and if you follow the morales web 3 youtube channel you can see this game in progress as it's being built and you can see it has my username that's associated with my address back in the database and again this is all made with free assets out of the unity asset store right so how do we get started so again we go to the ethereum boilerplate ethereum unity boilerplate github and just go to releases and find the newest release click on the package it'll automatically download and while that's downloading i'm going to go to unity hub and i'm going to create a new project and i'm going to call this demo project now you can change the version of unity that you're using so far 3.30 is the newest release there are newer versions than that that are also in development so you can try out the new features of unity so you can just set that here i'm going to leave it where it's at create my project and unity will load this is part of live streaming is doing everything in real time okay so let's not have dead air here while this is loading since we do have a short amount of time oh okay came up so never mind all right so we have that we have our package so you can see it's a clean build freshly opened i'm going to take my package and drag it right into assets so this is going to open up and show you everything that's in that package so the cool thing here is that if you're developing your own game you've already used the example you don't want to use it you can just uncheck it and it'll automatically not import that code so that your build is cleaner but of course we want to see it for the demo so i'm going to leave it and i'm just going to import everything to get started still importing you see that while it is fast it does take a few seconds okay so everything's imported uh there are a couple of things that we need to do for housekeeping okay uh i forgot about this little issue okay we're working on this so the newest version does not come with uh with the package for newtonsoft and so you have to load that separately we are working on having that automatically load when it comes in so i apologize about that so see what i'm going to do is just start that over in a older version and i apologize for that so what i'd have to do is pull in newton's soft and that takes a little bit of time so i'm going to instead redo to do this as let's choose 27. and again the joys of doing things live stream all right so while that is happening again to save time i just want to point out uh some of the cool tools that um you can use with unity so first of all there's the morales documentation this walks you through how to connect everything up how to talk to morales how to integrate with morales the features that are available unity has its own unity manual which is very complete there's also the unity learning courses and the unity asset store which i talked about before and this is a great set of assets again there is free and paid but there's plenty of free assets that you can use to play with and you're allowed to use those in your games the is an open source picture or image uh application that allows you to create gifs and pngs um it's very similar similar to the adobe product but again it's open source and free blender is a free 3d creation tool this allows you to create 3d assets characters rig them skin them create animations and so on um if you're not so good about that with that or you're in kind of a hurry you can use mixamo miximo has a lot of free characters and a lot of free animations that you can use in those characters and then you can just import those into your unity application and use them right out of the box all right let's check on the loading of all right so i am going to re-import my download again importing everything that was the previous version so one of the packages we use is called in theorem and within ethereum it uses some mathematical operations that require unsafe c sharp code and so what we have to do is go into player settings and find other settings and scroll down and find a check box for allow unsafe code and if you're new to c sharp what unsafe code does is it uses some um um more platform-specific code that isn't wrapped in the garbage collector and um isn't uh it can cause errors if used improperly um it's used for advanced applications and in this case ethereum which is um what wall connect uses to connect to the blockchain it uses it for some of the encryption algorithms so that's why that's necessary and [Music] so when i look at the scene that was imported what i have is i have my morales web3 api i have the scenes that came with the demo those were automatically created and then the webgl templates so if i was going to use webgl i'd want to go to player settings and then select my morales web3 template and if i have time i will show that in a minute so to get up and running we have an example screen and i'm going to open that scene and for morale setup i need to have my morale server uri and morales service or application id so i can just go to my server and see view details and copy that directly okay so everything's connected and so what the demo scene has in it is we have um a login canvas and this handles all of our ui it has menus for ios android the qr code one that we saw earlier and then it also handles wallet connect through metamask that doesn't show up here because that's actually handled through the browser and there's also a little joystick controller for ios and android so all that is actually toggled automatically you just have to select the build you don't have to actually actively turn these on and off because the application will do that and that demo for this uh is actually inside the script and so if we edit the script we'll see that okay so let's run this and i'm running in desktop mode and again i have my qr code i'm going to scan it and i'm at the moment using rainbow wallet um but uh on my phone but i've used metamask and i've used trust wallet and i am token wallet and they all seem to work so i'm authenticated and you'll see that my name bar now comes up with the address and as you saw in the other demo application you could change this to take your address query the morales database and then get the username that the user set um so that's something that you can add in um so i can run around here the orcs won't attack me but i can attack them and then the chest and within the chest there's an nft mug and i can click on that and then it asks me to confirm the transaction and the mug disappears because my transaction has been uh completed all right so let's look at some of the code and i know we're running out of time here so i need to do this quickly again part of the joys of live streaming is waiting for the applications to start up and run okay all right so we have our morales web 3 api within at the example and the example has are the scripts in the scene that enable us to connect to some of the morales tools some of the wireless tools you'll work with a lot on the morales interface this allows you to basically interact with the morales client with the web3 api client with the web3 client from anywhere inside the application you don't have to keep instantiating those objects um it's just like in the jc js client it allows you to just access them from anywhere so let's take a quick look at the main script that controls the menu system and once you authenticate this is what logs you into morales so you can see that there's code in here that determines whether or not we're in android ios webgl or other platforms and then it's handled in different ways so the first thing that has to happen is that we have to um we have to authenticate oh and i guess i'm getting ahead we need to connect with um morales itself but the package does that automatically for you but just so you can see because it's in the documentation that it calls the initialize with the information that you've entered into the scene so this this automatically happens on start of the application again with the api you just drag and drop it you don't have to worry about this it just happens so when i hit authenticate it's calling play and it's determining if you're used in or not if you're on desktop or you're on mobile then when the user logs in it's persisted on the device as long as the session is good and so if they're already logged in the section is good it's just going to go right into the scene otherwise it's going to show our authentication method for unity i mean for android and for ios it's going to show you your list of mobile wallets that you can then connect to for desktop it's going to show you the qr code that we just saw and then if you're in webgl it's going to bring up metamask so if we look in the wallet connect handler this is what's called by wallet connect when the user is connected to the wallet we're going to sign the transaction and then we're going to log into morales so again if you're using this code you don't have to worry about it it's already done for you but if you're making your own code it's a good thing to look through here and to see how this is happening but as i like to say it's basically one line of code so a line of code for signing and this takes care of sending the signed message to the wallet one line of code for logging in and then if you want to do cool things with the chain um we talked about the web3 api if we go to this awardable controller and again this is in the code this is an example code you can see how easy it is to call your balances for nfts so inside the demo we've got this collectible nft and it's running on the mumbai chain so it's you know a sample nft um but basically i'm just giving it my address this is the user's address it's doing the claiming of the the contract address that i'm calling and what this does is it goes out and it finds all the nfts that are owned by that person so in this case i want to make sure they don't own the nft before i show it in the game and so i take those results i look for the ownership and if the person already has the mug so if this returns data then that means they already own it and it's not going to show the nft whereas if they don't own it it'll still show the nft and then when they claim the nft we're basically taking our let's see here it is okay so we have our token id this is saved in a constant uh in a different file and it turns it into a bigint and passes it in and so we have one line of code morales in the interface send transaction and this is going to um call the claim reward function on my rewards contract and again these are defined in a different file and you if you look through the code you'll see how this is done but again it's one line of code and this takes care of calling the contract and doing the transfer of the nft from game ownership to the ownership of the player all right uh we've got about five minutes left and so at this point i'm going to stop here and let's go to some questions and answers are there any questions at this moment no but guys feel free to post them in the chat and we can take them live go ahead fernando someone asked would this work on an apple m1 chip so when it's time to store or have the amount of transactions that morales needs and i know you you show the server and the type of um blockchain you could connect to to interact is there like any different levels of service we need to consider for going to prod or for going to yeah how yes so it's size by number of transactions per minute uh and there is a pricing sheet on the morales website if you go to so there's the free tier which is great for development and again you have access to all the services you can just only make so many calls per minute though when that's against the api the database plugins against the rpc node uh so those are all limited and then there's a paid tier that's a little bit that has a uh pretty good number of calls per minute that you can make and then there's there also um the enterprise tiers that if you call and talk to if you basically email or call our sales folk then they will put together a specific pricing plan for your application and if you'll if you look on the website there with your servers it tells you that when you're getting ready to go into production to give them a call and then they can they can help estimate um how much throughput you're going to need for the expected number of users that you're going to have in your you know in your application in this case your game yeah but but when you start you don't know that right so um and you can have like uh let's say you have a promotion over one weekend and you can have a huge peak uh maybe the peak will be on the ipfs server maybe because you have the nft has been view viewed or sold is this all the same pool of resources pay for and i'm wondering how how it works like at especially for the first at lunch time right when i notice you have like two tires like three then the middle one and then the next one and i know with the um the highest level um basically it's i believe it spins up your own virtual server okay and then the size of that is going to be determined on your contract and again uh tom and everyone else in sales is really good at estimating that and helping and then if you're going to have spikes or dips um of course you can adjust those those uh as well so i guess like specifically when you launch a game and you have all let's say you have a thousand items inside right on the marketplace the game and these ones are viewed by like people is still not paying for it right there yours being viewed are we using the ipfs for that all the time or we use like a cache server in between so the data that you would read actually are coming off the database and they've already they're synced live and there's like a minute delay but it will be in the database so you can call the web3 api you can have a list of the uh nfts and use the in what will come back is the address for ipfs so the ipfs call is just like a web call so what would be monitored are the calls for loading the nft set but then when it goes out and touches ipfs that's just like a regular web call so when you view an item uh from a marketplace it's account for one ipfs web call and one api call that's it no no database goal the ipfs call goes from the client's application and so that's not regulated as far um but again a lot of these questions are going to be better answered by our sales folk okay so but what i can show you as i can go back to that server i'm trying to figure out this big right this this moment when you launch or you're in preview or beta until you have like something more stable also in terms of revenue so what is the infrastructure costing are if there's there's a magic formula maybe you have to put up front this much right and then when you talk to this to this the sales force they have all the information in front of them so it shows the server is going to show you how much you're using um again these are all free tier the ones i develop with and this gets refreshed uh once a minute so if you're calling cloud functions then that counts toward your throughput if you're making calls to the tables in the database um or you're using any of the web hooks or triggers that counts toward your throughput and then if you're making calls against the web3 api that is also going to count towards your your throughput um and honestly with the free tier the only and of course it's just me or a couple people at a time testing against it uh the only time i've ever hit a limit is if i'm doing a lot of saving on the uh if i'm creating a lot of uh web functions um a lot of cloud functions and then saving them so if i create a big block of those at once sometimes that'll cause the cpu to spike um but the other ones i've never run into with a free tier now with the game a production game you will and so again the best thing is to contact sales and talk to them and they can walk you through that all right all right so yeah specifically if there are any tips to use during the 