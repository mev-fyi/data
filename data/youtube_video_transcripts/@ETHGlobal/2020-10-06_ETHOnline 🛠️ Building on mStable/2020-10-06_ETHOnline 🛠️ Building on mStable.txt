getting a slight feedback from i think it's yours alex oh whoops all right we're uh we're up and we'll um i'll open the room great and we'll just wait still a little bit usually people join either youtube or the event right at the last minute [Music] awesome so yeah maybe we'll give it one or two more minutes for people to join cool alex great so um we will just get the presentation started and i'll put some notes in the chat about where people can leave questions and stuff thanks everyone for joining we've got the team from mstable alex and james here to tell you about building on m stable and with that i'll let alex take it away i'm actually going to start i'm james i'm co-founder and lead at mstable and thanks for everyone uh for joining this session we're incredibly excited to be here um eth global events i kind of i've i've been as an attendee um over over many years but this is the first time that mstable as a project as a protocol has has been able to support an event like this uh we're all kind of we all know that everyone kind of wanted to be in devcon at the moment but this is uh the next best thing i suppose um but yeah we're really really thrilled to support uh eath global and this eats online event and where would be really um uh thrilled to see people build on mstable um and we've obviously created this uh a prize pool for people who do just that uh so today uh alex is gonna be speaking predominantly and he'll be speaking about how exactly you can build an home stable and the kind of cool things you can do with the v1 protocol that we've built so far for me i'm just going to give you a really quick overview of what the project is um we thought it could be helpful to some people given that m stable is a little new uh on the block i mean quite a few new projects that have come out recently so we we forgive you if you haven't um if you haven't kind of dug your teeth into m stable uh specifically so i'm gonna give a quick quick overview of what it is why we built it uh and and the kind of uh market problems that we're seeking to solve and then alex is going to dig into the technicals in more detail so what is m stable like most of d5 m stable is centered around pooling assets and what we do is we unite stable coins uh and they're lending and swapping into one standard so mstable creates a liquidity pool for same peg assets and the reason why we started doing this is because it's become clear over the last few years that assets and this is kind of the megabit that we're that we've been making is that assets are migrating on chain so recently um this year uh the amount of stable coins on ethereum have increased 95 to over 12 billion um and the value transfer on ethereum is surpassed out of bitcoin um in july so these these are amazing statistics i think we've we've all seen also recently a lot of rap bitcoin migrating to uh to to ethereum as well uh this is a really major theme and it's created obviously stable coins however stable to find stable coins is obviously on one level something that is stable in reference to purchasing power at least in the short term and the second thing is that something is stable in in reference to a peg so we define stable coins as both u.s kind of something like a us dollar but also something like bitcoin if it's stable to that peg and m-stable creates a liquidity pool for those stable coins and we can then build a whole bunch of infrastructure around that liquidity pool and then other people can also build on top of that which alex will be getting into why are we doing this uh well there are three major problems that we were solving one is fragmentation this explosion of assets that i spoke about in the previous slide has also led to a fragment a huge fragmentation of same peg assets many issuers many projects are creating us dollar equivalents and that fragments liquidity it's really bad for user experience so we solve that by creating a swap product to create zero slippage hyper efficient uh swaps between same peg assets so designing a liquidity pool specifically for swapping those same peg assets we also relatively uniquely have an lp token that is also a liquidity provider token there's also a stable coin in its own right and in our case that's called musd when you deposit into the musd pool you get a an musd stable coin it's a stable coin that's worth a dollar and it's redeemable one to one for the us dollar stable coins in that pool the same will happen for mbtc so we simultaneously m m-stable simultaneously solves this fragmentation problem by enabling really efficient trading between same peg assets and also creating a unifying asset for that um we also try and make the capital more efficient and our smart contracts programmatically lend out all assets that are deposited onto integrated lending platforms currently are they in compound um simultaneously all of the swaps are earning fees so uh if you hold musd you can access the musd native savings rate and and that savings rate is is generally outsized for three reasons one because it's always because all the capital is being lent out two because of the swap fees and three because uh we've leveraged it uh in the sense that if you don't put your musd into the savings account then you don't get uh the uh the savings rate so people who do get a leveraged uh savings account so we've been able to create a better yield and the third thing is risk and insurance if you hold one same one stable coin that has a whole heap of concentrated risk m stable diversifies risk amongst a whole bunch of issuers and also seeks to uh ensure against it with our token meta that hasn't been implemented yet but it will be proposed to the community at some point in the future um so that's kind of a [Music] high level on the problems and what we're doing if we just zoom out a little bit this is the product line that we've been working on uh so we've released earn which is a yield farming product we were one of the first yield farming initiatives um back in back in june i think and we and meta is admitted to people who contribute to unstable asset liquidity um we're moving to create a more efficient amm and also reduce the gas later in the year adding mbtc and also wanting to create a composable save so tokenizing that that savings account in an interesting novel way in terms of meta we're really pushing decentralized governance um and and ultimately re-collateralization is something we'll propose later uh so that's a really big kind of high level on on mstable um again really excited to see what people come up with and i'll pass it on to alex now to dive deeper on the technical sides cheers james um can you hear me all right yeah yeah perfect you're good uh cool so i'm just gonna whiz through like um i'm still score functionality um why you might want to build on i'm stable and then give you some docs and um and then run through a demo on making something simple and um getting it running um as so said uh like we um have the uh our m assets represent a basket of underlying stable coins so and the first of which musd um uh you deposit usdc die usdt or usdc um and you receive a corresponding amount of musd back so that's obviously um one to one and um it relies on these bassets being under their maximum weight so um similar with swapping um any of the underlying can be swapped one to one with a small fee providing the asset that's spot in does not exceed its maximum weight um redemption uh opposite of minting you choose which basset you would like to withdraw from the system and then um to withdraw that that's it you you burn the corresponding amount of musd so when i say basset i'm referring to basket asset which is which is uh ustc die tethered or usdc um fourth sort of core function here is save so that's when you deposit musd or enter the savings contract or in the native yield you can withdraw that at any time to realize the gains so the interest is actually script from the musd contract on the deposit into save and then distribute it to the existing savers to the ban of the existing savers so um so yeah to realize that um uh increase in savings balance there needs to be a subsequent deposit um following your deposit um okay so why would you might build on stable um and simple provides um a robust basilar uh collateral assets um with the goal being to um act as this sort of safe base layer for the d5 um infrastructure that's being built um there's a simplified native yield generation so just by depositing musd into saving new risk savings contracts you can get that native yield it provides a unique source of arbitrage for swapping so um it's really the only place um where the one-to-one swaps are are implemented and it abstracts and consolidates um the sort of usd stablecoin layer so um theoretically this could be expanded to sort of capitalize and consolidate a lot of the market so what is in scope for hacking um basically anything that builds on top of or extends the unstable protocol um are sort of at the very least utilizes unstable assets to their potential um uh yeah so what what might that look like a new loss lottery for example like pull together um where the the interest is um the interest from the deposits are collected and then um awarded in a sort of lottery fashion um a derivative using m stable save or musd for example like the chai token um you know i'm using well-known examples here but these are things that can be accomplished um utilizing uh mint and swap as part of the trading bot it's a simple one um a derivative that utilizes m assets is a settlement layer so by this i mean like um capitalizing on the uh the fragmentation solution that musd um is built to provide uh like using mvsd as a safe settlement layer and um uh performing actions on top of it uh generally speaking utilizing musd or mta um either utilizing their value or providing utility to them um for example using mvsd to collateralize synthetic instruments um yeah uh what's not in the scope is um creating new official and mass sets for example like uh m euro um but by all means go for it and create a rash now um it's just that given that the the master will be eventually um collateralized uh further by the meta token it's more of a governance thing um so there are obviously some other functions that could be built on top of staking and earning um but these these sort of address the the sort of core um functions of the system i think it's worth mentioning that like the core prize is for applications built on top of m stable like these no loss lotteries for example um but there will be two smaller prizes of 500 musd each just for applications that utilize musd or mti and in the application so um so yeah we're excited about that and here's where you get the documentation so we put a bit of work into the git book here and um there are some good examples about how to get set up and black lists of um the test net uh test net app so we've got running um test nets on robston and kovan and they've both got like um app endpoints and sub graph endpoints and uh deployed addresses so uh yeah just check it out on the docs and then we've built uh we've sort of wrapped some of the core stuff into node packages so the protocol the contracts are there and i'll show you how to use that in a second and then we have built um a sort of basic unstable js library just to just to grab and parse the data um to use so this is the main stuff and we've also written a medium post with a bit more meat on the uh prizes distribution i guess that'll be on the east uh global website and you can always jump into the discord if you need to chat about anything so um i'm going to um run through an example so what i think would be good to build is a contract that wraps save and allows users to pull together or sort of stake a gift um and then collect the interest which would then be uh distributed to a beneficiary um so this allows us to like collect the crowdsource interest through the savings contract and then distribute it so i'm going to do is just whip up contracts uh well first i'll add the latest note package so it should be version 1.2.1 come through and then i can import the interfaces yes so i'm just putting the core contracts right now i've got the master interface the savings contract interface and an m stable helper interface to sort of provide some helper utilities around the core functions so um how to wrap constructors again okay so we we want to have um a few core functions um staking a gift and we will where we will like stick stick the gift um and have a track there we will have a withdrawal gift hey alex um we just got a question on youtube can we increase the size of your font oh yeah sorry thank you oh is this this person's on mobile so it might need a little bit bigger let's see what i can do thank you all right so so um got three core functions here sticking gift withdrawing the gift and collecting the interest so i'm probably going to need to choose what i'm staking which is the musd contract let's just put that from um uh mbsd and we'll import the helper here too so okay now we've got our variable setup um so stating the gift um what should happen here we should be uh transferring from the sender so um let me just uh i'd like to do um use opens up on safety library so so i'm going to transfer the musd from sender to the contract and then i will deposit into save so save dot deposit savings and then deposit the amount and this is all it takes to deposit into the savings contract but actually it will need um approval to to send the mesd i it's it's sort of a bit risky to have these safe approvals left open all over the place but i think given that this cf contract is trusted it's okay um so we've deposited into sieve um we now need to track the the user sticks and the total state so drop these gifts okay so we are sticking gifts and we're tracking the amount um so if the user wanted to then withdraw his gift from the contract we would want to check that check video's bounce reduce the storage and then retrieve from sieve so i'm just gonna copy this over down the dirt something i made earlier and so i'm withdrawing from save here uh when we call the savings contract uh regime it ex it expects uh a unit in terms of savings credits um so we can use the helper here to just uh convert the musd amount back into savings credits and then call redeem um calling save.redeem here we'll just simply uh redeem this uh amount of credits from the caller which is this contract um and then return musd back to this contract so if the user wants to uh if the user wants to withdraw this we need to send it send it off so um okay so we've now um built a function to withdraw the user's uh gift from savings contract um and now to add the gamification and to actually collect this interest from the from the gifted party we want to simply um check the we want to check how much interest has been generated and credited to this account so we can get the current um savings balance by calling get save balance on the helper and passing this address then we figure out how much interest has been collected since since the deposits were made so say current balance minus the tool that has been gifted um and then to with to to send this off to the beneficiary we can um convert it into credits and simply transfer it um we need to add uh we need to add the beneficiary first so i'm just going to make this um an owned contract and then transfer ownership okay so um what we've quickly whipped up here is a contract that allows people to gift stick a gift and then um credit the interest of that gift to a beneficiary that's been specified when the contract was created so hopefully this should compile okay so uh let's just go ahead and deploy this and get it running um so we can verify that it is doing what it says it's doing so i'm just going to jump quickly into remix and deploy this so if you don't know what remix is it's it's a it's a pretty nice tool to just quickly get um contract up and deployed without having to uh without having to you know deal with private keys and uh inferior builder and that sort of stuff so yeah so to deploy this contract um i need the musd address i need the save address i need the helper address and i need to specify beneficiary so um as i mentioned earlier the the addresses are all in the booked here um got them in that the robston in the cool van so i'm just gonna grab the um i'm gonna grab the robston deployment for the savings contract and there's the helper and i'm gonna specify myself as the beneficiary um so okay okay so that contract is is hopefully going to deploy um and then we should be able to interface with it so there's actually a really nice tool from uh adrian adrian lee here east 95 just to quickly get um a ui for the very ethereum dab so all we need for that is a um is to specif specify the build folder for the contracts and then it should yeah host something on local localhost oh so the contract has been deployed here um let's just check it out um okay so yep that looks like it's gone okay and let's have a look at the eth95 so um i've got access to my pool with amsterdam [Music] um and what i can do is um first give the pool with them stable um the uh the permission to to spend um the assets on my behalf so i'm going to call the musd contract and just give the gifting contract permission to spend my uh my musd so i'll mark the expander here and just give it a few way of um allowance and i'll also do that for a second to cont so that we can see things in action here okay so that should be approving um then you should be able to call state gift here once this is um approved are there any uh questions in the chat i can answer in the meantime while these transactions are processing none from youtube it looks like we're all good here too oh good well it looks like there's a country so you made a mistake can i let's take it it's just uh i think we're i think we're not connected here here we go okay so um this is me sticking uh like one trillionth offer of an musd um to the to the pool with them stable contract um so as soon as i deposit this um it's going to go into the musd contract and collect the interest um that's been accruing there and distribute it to the benefit of the existing savers in the safe contract so um after i deposit then the interest will start being uh credited to the to the uh the gift google than stable at the mercy of the robson network here we've got a question on youtube if now is a good time sure yep do the save m stable implementations on the test nets produce incremental interest yes they do yeah so um well as i said um it happens uh with that it the the interest is um distributed every time a deposit is made into save so um if you want to simulate some activity um a good idea might be to uh to do some swaps um and to generate some fees and then you would see that interest realized the next time you deposit there should be a decent amount being a crude anyway because there's such a large quantity of assets i think there's like four million um assets lender on ave and compounds so it should be accruing a steady amount um i think we'll see here in a second just how much has been uh accrued so the first gift was deposited um and staked and um now i am gifting a second one um at which point the interest will be credited to the to the benefit of the first sticker basically so hopefully when we when we withdraw the gift at the end here we'll have um some dust that uh that gets credited to the beneficiary um i can actually call that directly another question from youtube is uh any way to know where the yield came from just curious from one [Music] um i mean i mean you could tell off off-chain yeah sure you can you can track the transactions that have happened and see how much has been coming from swap versus uh basically you would need to find the total and then deduce how much came from swap um and then you would be able to tell how much came from the landing protocols on yeah i think it's difficult but off-chain you could definitely find out okay so yeah we've just um withdrawn the interest to the beneficiary here and there was sort of 306 base units of musd that were credited so we successfully harvested yield for um as a gift to a beneficiary um which i think is quite a neat um application although possibly not economically practical um on mainnet but regardless um the concept is is uh is nice so um so yeah just to summarize um we came in here we uh added the m stable protocol as a package we imported the core contracts and then we wrapped the staking contract um and collected the interest that we can generate so i'll go ahead and um put this online on our github and uh link it on the um link it on our medium post as well um yeah and then all other information is kind of kind of in the docs so that's that's all i wanted to touch on today um and but yeah i'm happy to field some more questions if anyone's if anyone's got any we um we're good on the youtube stream but perhaps we could if any of you in this zoom call want to post questions i'm you are free to unmute yourselves and pose them directly to james and alex so if you have a question jump in sounds like the presentation really landed oh this one just came in from youtube um oh no it's a guy saying that he meant off-chain so that's all good and then someone's saying that they should build an m-stable vault yes you should you should build a watt sorry an unstable vault vault sorry it's nice cool oh someone else plans to add new protocols um you mean someone's asked are there plans to add new protocols i assume that means lending protocols and there we have a few more questions in the zoom chat as well um uh the answer is yes and they'll all go through the community uh through our recently recently launched snapshot page where you can stake well you have to stake meta and then you can vote with your uh with your stake matter so there'll be proposals to add new new lending platforms uh at some point um currently we're connected to are they in compound um yeah cool thanks for thanks for joining everyone awesome um yeah so where's the best place to reach you guys on the discord channel um and then by your git book i guess people could access yeah we're um 20 24 7 available on our discord channel just pop in just whatever you want to talk about it's all good um yeah someone will be online in there and uh yeah we're more than happy to field questions we're also in the east global discord channel so um yeah awesome ethereum hackers thank you so much you guys really exciting stuff thanks guys appreciate your time 