foreign and welcome to the op Labs Workshop launching an OP stack chain in 30 minutes or I shave my head live on camera joining us today is Kelvin Victor who will be taking us through this session and with that I will pass it over to Kelvin to get the session started all right hello everybody I'm sitting on the floor right now which is very bad for my back but what can you do so such is life when you don't have a desk uh this is uh running an OP station in 30 minutes where I shave my headline on camera unfortunately I don't have a razor with me so if I can't make it in 30 minutes I'll have to do the Shaving at another time but I will do it live on camera so I'm going to start a stopwatch oh God okay let's go so essentially what I'm doing is I went to stack.optimism.io and sorry I even forgot to introduce myself I'm Kelvin I work for op Labs doing a lot of different things but today I'll be running over the process of running into a piece section which is really really easy now so essentially what we're going to do is launch our own roll up in 30 minutes and be super super easy and then later on go and modify it um if you go to the openstack docs so stack.optimism.io and scroll down to building op stack rollups and go to the getting started you can follow along but I'm basically just going to follow this tutorial and show you what I'm doing uh so let's get a move on I've opened up a new folder called demo for the sake of this and I'm just going to start running the tutorial so first thing you do is launch the launch clone the optimism that's where a lot of the code lives pretty much everything except for gift lives in the mono repo and we're just going to go ahead and install dependencies and then we're going to build a whole bunch of packages installing dependencies and building packages takes a little bit of time so once we start building the packages we can go ahead and move on to cloning and building op get which is the execution client the default execution client for the op stack so if you are familiar with the architecture of uh the ethereum node ecosystem these days there are two components there's a consensus client and an execution client and the op stack the optimism and all the Roll-Ups like base that are based on the op stack also use the same split so we will be running both of those components as part of this tutorial first thing first I'm going to start building the options of the mono repo in the meantime I'm going to go ahead and clone yes and building Ops at the same time so yeah like I was saying there's this two components uh the consensus client and the execution client the execution client is called opget it's a very minimal diff on top of Upstream Gap represented right now it's a single permit here you go I'm just building get this is how you would build get if you were building normal GIF you just run maybe guess and this is usually pretty fast so this is just going to take a second and then once that's done we're going to go back to the mono repo so the back of the mono repo is still building a whole bunch of things uh building a whole bunch of different components but again the most important thing that we're going to build is this thing called the op node which is our consensus client so in the meantime you know look ahead of what we're going to do we're going to generate some private keys so as part of this tutorial uh there are four key actors in the system that we want to generate keys for there's an admin account which has the ability to upgrade contracts within the system a bachelor account which will published into sequencer transaction data and retake statements are trans activated and publishes it to our L1 there is the proposer account which publishes transaction results to the L1 and the sequencer account which is going to sign blocks on the L2 so that if we wanted to run more than one node we can run that and it will connect over peer-to-peer Network and distribute blocks uh quickly over the peer-to-peer Network so the first thing that we're going to do in a second once this builds is we're going to create a whole bunch of these Keys using the read key command um because I'm gonna keep these Keys private I'm just going to go over to uh my other window here and where are we there we are and in a window that you can't see I'm going to run this command so all this is going to do is it's going to do exactly what you can see on the screen it's going to generate these keys and that's also going to generate a mnemonic oh my start beeping okay um so give that a second to finish building if I can't make it in 30 minutes I blame I blame girly I almost learned my lesson and didn't do this on girly this time but then I got lazy and I decided to do it on early again so my guess is that the most annoying thing will be deploying the smart contracts to group but we'll find out so give me a second it's almost done building on either that or the build process is going to kill me okay good we're done so in another terminal which you can't see probably if you can oops I'm going to run the npx hard hat and the key command uh which is a custom task that we have added and it's just going to generate these keys so you can't see this I can see this but I I now have an output that looks like this and in a minute I'm going to fund some of these keys with some of these now I'm going to where are we I'm going to go and configure the network so right now network configuration happens inside of the contracts Bedrock package so there's this folder called deploy config inside of packages contract Bedrock deployment conflict within the optimism and there's this network called getting started that is sort of set up for you to fill in so that you can go and run your own chain so it's got these things that you need to fill in here and what I'm going to do now is I'm going to run this command down here that will give me some information about who recently finalized girly block which I can then use to uh to set the starting blog for my rollout so the roll up can start at any point temporary passion number you can start at any point so it can start syncing from any point but we really really just want to find some block that we can use as our starting point so I'm just using the latest finalized block on girly as the starting point you can see I got the half the number and the time stamp next I'm going to fill out the free the remainder of the pre-populated config so I'm going to take the hash that I just generated I'm going to paste that in where it says L1 starting the block tag that's where the network is going to start and I'm going to take my time stamp and I'm going to insert that as the starting timestamp up here then the rest of this is just filling out some addresses so I'm going to copy paste from my other terminal where I generated those addresses and I'm basically just wherever it says admin and building my admin that's that's not what we're supposed to say admin I need to make it case sensitive there we go so wherever it's an admin I'm filling in the admin address so did I do that right yes and come on uh wherever it says proposer oops I'm going to fill in my proposer address that's the second one wherever it says Batcher I'm going to insert mine oh that's not my that's your address I don't even need to find a replace it's only one and wherever it says sequencer I'm going to insert my sequencer address boom so that was really easy and that's the whole thing so the next thing I'm going to do is I'm going to deploy the L1 smart contract so I've just configured the network I need to deploy the other one smart contracts so the very next thing to do is to go into contracts bedrock and create a DOT EnV file so there's this example.env file I'm going to copy and I'm going to paste it rename that to just dot EnV and I'm going to fill in my L1 RPC which I'm just getting from Alchemy and I'm going to fill in my deployer private key I'm going to hide the deployer private key part so you don't steal all my girly now that Curly if it's so so expensive um and I'm also going to get rid of this tenderly stuff so you only really need those two first things the next thing I'm going to do is I'm going to send some girly eth over to my e or to my deployer address so that I can actually pay for this if it ever decides to load see this is going to be the deputy it's going to be the part where I can't send girlies come on frame yes okay so I'm going to send my girly if I'm going to send myself why not 20 20 whole gurbies what's that like three thousand dollars now who knows all right sending that boom okay so my account should now have 20 girly Eve that's great oh did I just send I just sent it to myself oh no okay now I need to send it again I just sent myself 20 early that doesn't make any sense come on now I'm sweating it might be because my heater is on too high but I'm sweating oh boy oh no okay I got 20 minutes left oh no okay well in the meantime uh I'm gonna start deploying the smart contract so we are going to all you need to do is npx cardhead Boy network started so now my account should have enough beef in it and I'm just going to start deploying so this is the slow part of the whole process the basically just deploying these contracts takes a while look early girly curling is usually fine but it's uh it's not the fastest Network to deploy to it looks like all right it looks like we're going I'm going to keep an eye on my girly Eep account to make sure that I'm not running out of money because you never know when your account is going to run out of money but it looks like it's going so this is just going to go and deploy a whole bunch of smart contracts that make up the L1 side of the system uh those smart contracts are things like the bridge smart contracts uh the contracts that configure the network so there's something called the system config contract that is sort of a way to manage the L2 system on L1 so if you make a change to that contract on a one the system will actually upgrade sort of automatically or it'll detect the change and change automatically [Music] there's there's a core Bridge contracts there's like user land bridge contracts and then there's the erc20 and uh ERC 721 Bridge contracts which sit on top of all of that and so a lot of these things sit behind proxies so that they can be upgraded and so as a result you can see that we're deploying a whole bunch of proxies first then we're going to go ahead and deploy a whole bunch of uh implementations and then we use this cool contract called the system dictator which handles upgrading all of the smart contracts at the same time and initializing the system in a series of steps so yeah so at this point all we need to do is wait it's pretty uh pretty obtained luckily it looks like girly Eve is cheap right now or girly gas is cheap right now so I'm not burning through Eve but I can show you what we're about to do next so once all these smart contracts deploy I mean at this point it's going to look identical to the system that runs optimism from base so everyone gets the same smart contracts there's some Legacy stuff in there as well uh but the point is that by making the system uniform everybody gets the same box to play with so okay what's next well like I said we need to generate person we need to run these two components the op node and the uh and op GIF so the first thing that's necessary is to run a whole bunch of or not a whole bunch of things just a couple scripts here to generate some config files and those config files are based on the deployments that we generate so we're going to need to wait before we can do that once we generate the config files we also need to generate a Json web token that is used to interact between okay GIF and the op node this is the exact same system that's used uh for the consensus client and execution client then we're going to take some of those config files and we're going to copy them over to Okie get where we're going to create a data directory and we're going to load the sequencer key and we're going to import the sequencer key and initialize get like I said we're going to run a we're going to try to run a full roll up here so we need we need a sequencer so that's why we generated that sequencer P2P key earlier but essentially you only need one sequencer node per Network so we're just going to run one I'm not going to have time to run a second node but you could also just run a second node and connect to the sequencer over the peer-to-peer Network and receive blocks right away so we're almost ready here still deploying a whole bunch of contracts this is the unfortunate thing about the way that we do our deployments right now is it takes quite a bit of time to deploy everything but what can you do it's just how it goes but luckily this time we are not running at it cool in the meantime I'll talk about what you can do with all this so right now we're going to be running a standard roll-up right we're going to be running a uh a thing that looks exactly like Optimus and Main net and it's got these all these default configurations but you can tweak the configuration quite a bit so if we take a look at the getting started we can tweak things like the block time right so if you wanted one second blocks on on your roll up or if you wanted 10 second box on your roll up you can tweak that there and there's also stuff like the finalization period just for the safety of the example we set this to 12 seconds which is one L one block but you could set that to pretty much any number then there's things like the block gas limit that you can modify and uh and stuff just these parameters for essentially how much time a sequencer has in order to get data onto L1 almost done here so the other thing that we can talk about later a little bit if we have time is that you can also modify the the node software itself to do some really cool things so inside of this example or inside of the docs if you head over to the op stack packs uh sample hack so the adding attributes to derivation function you're adding that pre-compile you can actually see example hacks of how to modify the op node or the L2 to or like the the op gef node to do things like the example that we give for modifying videos is automatically tracking the L1 burn the cast burn on L2 you can do all sorts of stuff we just track all sorts of things about different smart contracts you can pull data you can put things into L2 whenever there's a specific event on L1 you can do all sorts of things and then of course you can do things like add a pre-compile to get which lets you you know take expensive common computations and make them cheaper so now we're near the end of the deployment process uh you can see here that we have basically transferred control over to the migration system dictator and it's essentially just executing a series of steps preparing the system getting everything ready for deploying a real Network and then we're going to be able to run our blockchain so hopefully nobody has broken anything on develop and this deployment is going to work with no problems otherwise I will be shaving my head but I guess we'll find out okay come on finalizing deployment uh oh my early whale account is visible is my girly whale account visible now oh how do I make it hide I just wanted to go away so I can see the screen all right frame what are you doing oh oh no I didn't oh my gosh my screen is Frozen I didn't expect that the death of me would be that my computer would crash oh my God oh no oh no oh no oh this is bad okay um hello I think frame did this to me no I think Zoom did it to me uh oh laughs no not like this not like this oh my God oh not like this please please just start working no no all right all right I don't know what to do I don't know what to do I'm gonna have to restart my computer wait oh my God I'm back everything is flashing it's frame I'm blaming frame quit please no no okay oh God this is terrible I need to I need to find I need to get a terminal come on let me have a terminal okay wait what's I I need someone in the chat my my screen is just Frozen Can anyone hear me am I just talking to myself I'm very confused um I think my wallet software just broke oh God hey Calvin yeah I'm here I don't know what's happening oh man I'm just trying to open up one terminal so I can kill the my wallet uh away everything is dead okay what's the command to open up a terminal I need someone in the chat to tell me the command to open up a terminal without without any control over the rest of my screen hey can anybody help him there is a command for this that I never remember take screenshot whatever I don't know okay wait a minute let's figure this out hey coach you can hear me I've typed in something in the chat um I'm wondering how quickly I can restart my computer all right be right back let's do the speed run oh God oh you know what I have an idea what if I what if I kill one of my monitors no still nothing all right this is bad I need to restart bye all right we'll see you in a bit all right folks well he has five minutes to come back and finish this otherwise as he said he is shaving uh his head foreign if anybody has any questions feel free to type them leave them in the chat when uh Kelvin returns hey how's it going I can't hear you you're still commuted maybe or different audio source can't hear you can you not type in the chat either um oh there you go I can hear you yeah all right we're good maybe you know all right you've got two minutes let's go okay let's run let's run a sequencer in two minutes come on desktop two chair we could do it two minutes all right all right all right run the sequencer in two minutes okay so we gotta go to the OT node okay we're in the op node we have to make the Genesis config come on make the Genesis config I'm just gonna paste it in here so we can uh uh where's my key all right we're almost there okay we're gonna do this oops no come on go generate the thing oh I needed to put this in quotes I guess oh boy this is not going very well I'm gonna end up having to shave my head okay what is this what's going on I don't understand this should work this is bad I don't know why it's not working now I blame whoever wrote this code no what is happening oh it's probably because it's in gear and it's using the config LOL that explains it okay come on come on generate the JWT token top of the Genesis file copy the JWT token it was so close all right yeah created data directory no don't do this to me now all right put a password in the data directory put a private key in the data directory whereas my other page and all right put a private key in the data directory import it come on import the key initialize yourself properly all right it's initialized uh run get run again come on come on come on run properly it's running okay Captain's running depth is running we're almost done we're so close um now we just gotta run the op node that's it that's it copy this thing in the sequencer key in here and the L1 RPC and one RPC and it's an Alchemy key and come on run it's running okay we're running it it's running okay so essentially all that's happening here is that it's it's catching up to Gurley to the L1 uh greely.etherscan.io and uh it is a couple hundred blocks behind so it'll take a minute to catch up but essentially this is just running the sequencer now so the sequencer is running and the only thing left is to start posting transaction data to L1 uh which we could do but I don't know if we have much time to do that I mean why not we can give it a shot who cares let's see so I'm just gonna why not why not why not just do this run this and uh you know what for the sake of time I'm gonna use the same key as the sequencer key I don't know if that's going to break anything but to be honest I don't have time to do anything else put in that run the Batcher get the private key for the sequencer put that in there and start running the Batcher okay so we started running the bad term and essentially now if we go over to early we should start to see as soon as the Badger decides to start producing blocks which is going to happen in a second because we're almost at the tip of the chains you can see the tip of the chain is that block early block 435 this is at 425 so in just a second the sequencer is going to start producing blocks and then we're going to start sending those blocks off to L1 so Boom the sequences started producing blocks because it got to the tip it's right now it's filling in the blocks with the empty empty blocks because if you didn't produce any transactions so it's going to start doing that and then after it's done it's going to start producing one block every two seconds like clockwork you can see here the Batcher is starting to add those L2 blocks to its local state Boom the battery is starting to submit transactions and so if we head over to the batch address which is FF for 2069 you can see that three seconds ago the batch submitter started submitting addresses and we now have a fully functional roll up uh I don't know how much time that took in total I hope it was less than 30 minutes in total otherwise I have to shave my head but even even in a chaotic situation you see that don't be stack is so good that either even under pressure in the chaotic situation you can restart your computer through and still do it in 30 minutes so there you have it that's a roll-up I can expose this thing to the internet um and people can start transacting on it but I probably won't do that yet but if you know I don't know if you're interested in doing that let me know and I can I can send you some tests but this is a fully functional rollout we have this node and I can start sending transactions to it and I'll start doing stuff so um yeah so there we are that's that's basically it that's the whole thing hopefully that was 30 minutes I don't know who knows all right I'm not sure we'll see we'll see who knows we are um we did it we had a question though um okay uh does this process work on supplier Network as well what changes need to be done if so um this process does work on every single Network the only thing that you you will need to change is in the config just what the L1 chain ID is and you'll also need to because it's not in here yet actually yeah so you'll see that there's this getting started Network so you'll just have to edit the chain ID so either but otherwise it'll work exactly the same and you could do this on any network you can even run it on another rollover if you want to and do an L3 okay cool that was the only question um yeah I I don't know I think well since you said you don't have a razor I think you should you need to shave it the next next presentation all right thank you everybody we kind of made it I'll blame I blame frame uh for all my problems I'll have to shave the frame logo into my head and DM me if you need help cheers thank you Kelvin and thanks to everybody for attending uh I posted the Discord link to the optimism uh Channel as well in the chat if you have any other questions um but yeah this was this was fun Kelvin definitely appreciate it thank you thank you and thanks for everybody for sticking in there I appreciate it 