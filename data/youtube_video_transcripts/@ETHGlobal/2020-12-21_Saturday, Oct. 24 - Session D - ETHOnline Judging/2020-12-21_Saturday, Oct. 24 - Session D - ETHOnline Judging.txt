and yeah well we've got the first team here so are we ready to get started yes sweet uh let's have you guys you should be able to share your video um who which one of the actual people here uh has the video if you could raise your hand and then we can give you permissions anybody uh sorry about the silence stan i thought i was oh yeah i know just stand by one moment as i finish um promoting the the full team and then okay there we go cool yeah it looks like we're set up here so uh as long as you've enabled audio i think we're ready to start hi there my name is chris i'm going to introduce you to batwa a wallet concept for india designed for a world where everyone is making everyday payments using crypto this is running on a layer 2 with gasless meta transactions for nice user experience and an indian rupee stablecoin but this introduces rupesa the basis for all payments in india qr codes are already commonplace there are almost 700 million smartphone users this would be deployed on layer 1 for security this would be on layer 2 for scalability so i'm now going to hand over to aditi who's going to talk about ux research and ui design regarding the ux and ui we started off with some detailed user personas from diverse indian cultures ranging from a team maker who's a complete beginner to this entire concept to a crypto node stepping into the user's shoes we realized we have to keep the app super simple to optimize it for a beginner like a screen maker who can easily accept payments through the batwa app our user research suggested that 9 out of 10 users in india do not use english they use many regional languages very much a part of the indian culture so we decided to keep the app multilingual that supports 11 languages we built some super simple onboarding flows making the user choose their language pleasing them about followed by really simple interaction with the wallet and yes we did work out both the light and the dark modes here really dive into making the payments flow very easy for the user to make hassle free payments we try to keep a beginner's mindset across a simple user journey while sticking to the indian roots at a branch i'd now like to hand over to bo all right my name is bo and i'm going to talk about the stable coin so this is going to look quite a bit like maker dow the core is the exact same as maker dow when maker doubt launched they didn't really have too many oracle options so they rolled their own these days we have chain link and uniswap are both really nice modern oracles that are hard to manipulate we pulled from crypto compare went through a chain link node to supply the peg price and this governs how much of this rupee stable coin you can get for your eth collateral and then uniswap is where you go to pay the fee and cow unit swap oracle is kind of nice because it gives us a real price for a stable coin that we can compare to the peg and then auto adjust the stability fee without needing a governance vote so now i'm going to hand it off to siobhani hi my name is shiv and i'll talk about layer 2 payments layer 1 is pretty expensive and it doesn't make sense to do small payments layer 2 matic to the rescue we can use their peers bridge to deposit our rsas from layer 1. our layer 2 child tokens already have native meta transactions built into them so once we have our funds on layer 2 our app that talks to bi-economies re-layers and help us to send transactions gaslessly alright so let's see app in action yeah i've got a lot of money okay [Music] a bitcoin maximal is promoting ethereum [Music] applications pretty cool uh now we're gonna move on to the questions and judging and the next part yeah great job guys i mean this is this looks really good um uh what was the hardest thing that you ran into i mean there's a lot of moving parts here and what was the most difficult thing you ran into like i think for me it was it was keeping all those moving parts working end to end like like all the different pieces that need to get pulled together to link sort of a price oracle governing a whole heap of different moving parts all the way through to like making sure the user experience was good for a chai wallah like trying to manage that whole thing anyone else got something to say well the hardest thing about the price oracle is that we didn't have one to start with so we kind of had to go from like the roots to get the price off chain onto on chain a lot of the other currencies have price oracles already on chain and i just spin our own yeah i'm really impressed by the scope of what you built that's that's it's really cool uh chris nice to see you by the way good to see you again hey hey brandon yeah um so i one one thing one question i had though is what is the connection with bi economy what what uh i didn't under fully understand that integration that particularly do you want to talk about that so uh my economy has built this meta transaction standard based on eip712 and that allows us to they have and they have the relayers so we can submit a signed transaction to their relayers which can then submit the transaction on chain and since the native transaction part is built into the erc20 you can do that guest list transaction i see so they support they provide the better transaction layer for mac then in that case yeah this is what will allow the ux to be like no gas no settings just straight payment and gas gets handled in the background right now um did you did you because i know you have chris on your team and he's a ux fan did you test this with users did you what did you have any experience actually putting in the hands of people yeah like yeah yeah you talk to you well uh yeah i did ask my parents and then we were like this video was shot at cocoon and um they're only three pages so a lot of people were kind of blown away by how simple it was yeah okay so it's just a website so is it is it even safe how's it safe and then showed them the magic word back up and they kind of amazed by you know it had full full payment functionality with just a few screens of yeah the one question was like well there's no login there's no username password like how does this work like it's magic so yeah we did get it in the hands of some some real users who are kind of curious to see how it worked um and the guy in the video was also kind of someone who who was one of our first user testers and he was a bitcoin maximalist apparently yeah it's something i joke about with him now and again so now i have it on camera him admitting that he's a maxi so there you go so converting one at a time okay this is good slowly slowly what do you guys think about uh next steps what what's what's what's next for your team what what are you guys thinking about you know on-ramping off-ramping anything about that like i think from our perspective it's it's all about getting stable oracles to govern some of these stable coin systems so that's kind of like where i'm putting a lot of my focus like getting an eath inr feed bow do you want to talk yeah this because for the hackathon we just had one api endpoint put it on chain in one spot but you know when we you know when we deploy this for real we got to get more than five data sources aggregate and medianize it properly and for on-ramp off-ramp we are like planning to connect it with india's ups system which already like lets users to make peer-to-peer like transactions because we have like open source api for all banking information here and so that would be easy for super smooth on-ramp from upi onto a stable coin all right it's amazing i hate to cut everyone off here because yes this seems very cool next time i'm going to give you a heads up uh one minute before the timer ends but uh we are out of time for questions we gotta move along sounds good thank you guys thanks everyone thanks guys it was great that's very cool uh the next team will be sight finance and if they could uh join here and share their video that would be great and i'll sound like a broken record by the end of this but yeah make sure you enable audio so we're skipping ipdb for now we are we have we have created five finance which is a money market protocol while also supporting a financial model driven by the token site so to understand how it works uh the first thing is that cytokinesis inflationary and it will have a one percent inflation rate for the initial 96 days and then it will keep yeah is there a video i don't see a video sorry yes we just see your we just see your desktop right now there's a screen screen i think and also jumping in we will get to ipdb but they're just not here at the moment visible hey there we go yeah uh hi everyone so as a part of this hackathon we are we have we have created finance which is a money market protocol while also supporting a financial model driven by the token site so to understand how it works uh the first thing is that cytokines are inflationary and it will have a one percent inflation rate for the initial 96 days and then it will keep getting halved uh every year for next 10 years it also has a lowest minimizing distribution mechanism uh what we mean by that is that we are distributing these tokens among the market participants based on the losses suffered by the by their supported market over the past 24 hours and this the speed is adjusted every hour and it is a and it is the distribution is being done on a per block basis uh another thing is that we have a value aggregation mechanism what we mean by that is uh that we have a treasury model uh where we regularly purchase bitcoin and the overall idea is that the bitcoin purchase in 2022 2021 that will be kept within the treasury and sold back in around like 2027 or 2028 to purchase our tokens back from the market and burn them so the inherent idea is that the initial uh initial total supply which will be five million uh site tokens should be equal to the final supply after ten years this will be achieved by uh uh capturing the value from bitcoin and other crypto assets and then driving it back uh within the protocol by by purchasing our tokens back uh after we get some sufficient uh sufficient profits from the from the treasury reserves so this is the overall distribution mechanics efficiently catching data and better business and it it's add them to markets based on the losses made by that market over the uh past 24 hour basis so what it inherently achieves is that as you can see here the blue line is the actual actual graph of a crypto set for example bitcoin and the red line is a value adjusted uh graph uh which will be experienced by the protocol participants so inherently whenever the market goes down we are providing them our tokens so uh implying that we are resolving the crypto volatility issue uh pertaining to the money market uh money market use case for example if you deposit bitcoin worth twelve thousand dollars today and although you are earning interest but if the bitcoins value itself goes down so then you will still be in losses we are inherently trying to resolve that and over time we are planning to take it forward by adding the custodial infrastructure and trading tools over our treasury and adding digital investment assets to the uh as a markets which will be supported by our protocol so the website is live as you can see here it is still being uh in active development and we are constantly adding and uh developing uh it every day we are planning to take it live on common test net in terms of uh allowing every everyone to basically uh use it and interact with it which we actually plan to achieve by next week so as you can see here you can supply us at borrow asset id method and this is the treasury model uh it uses a 0x api for getting the data and executing the transactions so here you can see the sell amount the purchase amount that will be bought and the price and the guaranteed price we can execute the trade although this is currently not uh working on common test net uh so yeah so that the the trading part itself for 0x api that needs to be tested and for the uh getting the data we are using our sub graph uh and the marlin protocol to reduce the latency basically yeah so this is our submission for this hacker thank you very cool moving on to questions and i will remind you when you have one minute left yeah hi all right finance team here open to questions yeah roll thank you uh for that uh presentation it's interesting you covered a lot of ground i have to say so i would i would love to just pitch it back to you so for like an explain like in five so um so basically people deposit their assets in and there's a basket of assets that are supported right due to you know the oracle uh necessity and um a governance token is being distributed governance over this treasury and it will go to the worst performing asset in the basket right right another thing is it is actually not a governance token so it won't be basically used for voting because uh like if we look at the comp distribution that is based on liquidity that is being provided but we are what we have created is kind of a financial model which is trying to address a certain use case so we don't think that it should be used for governance because it is not kind of uh capturing the actual uh you can say liquidity or uh the participation value that the individual lender is providing to the protocol what we are kind of uh trying to do is uh minimize the losses and the another thing which is different from comp or r is that uh although during launch we will be having like cryptocurrencies basically like bitcoin and ethereum and all that but going forward we basically plan to add you can say uh financially and generate products so basket of tokens so it won't be like individual cryptocurrencies it will be like market and texas like the the thing like tokens that stats is doing or the kind of world based strategies which are being introduced but that will be tokenized and that will be supported so inherently what it means is that you can buy a like a market index and if the market itself goes down we are trying to uh cover that losses basically and the uh since the like the governance tokens the initial value is basically decided by the market but uh going forward let's say once we have a certain value let's say uh we capture we get 10 million uh market cap basically then we'll buy a certain bitcoin and like then basically we're kind of like capturing permanent value basically and uh like 2025 onwards we'll be uh starting to sell that purchase our tokens back because we think uh this basically were kind of uh going along on this market and uh late at a later point of time we are uh like supplying that uh value back to the protocol the buy back and burn made sense to me yeah in terms of increasing the value of that the token i guess right so now so now that you're saying that this token is issued to the entire basket it sounds of all these different assets then how is the distribution differed based on the ones that have dropped is that still basically uh we are we are capturing like uh price snapshots so every hour we take a price snapshot what is the current price and uh uh to adjust the speed we compare it with with its price which was 24 hours back and if it is reduced only then uh they are provided the other tokens so if you are making profits then you are not getting any token so it's kind of like uh the distribution is kind of taking a short view of the market and uh capturing the losses while treasury is going long over the market yeah this is really interesting um so what's like your plan for this project uh i plan to basically take it live the thing is uh i am not i want to uh get it audited uh so currently i am kind of you know testing it and developing it and integrating it uh so uh after this is done uh in terms of financial modeling uh that is completely often so that will be like ai based you know like we can have python libraries and all that so i'll be also doing that and then looking forward to like getting some audits because i think i i want to do it properly so you know i don't want to launch an audited kind of thing yeah right yeah yeah i have two questions really quickly so number one um when you say that you uh let people create indexes is that anyone can create their own index like i'm allowed to create my you know top 50 cryptocurrencies or like top three non-bullshit protocols is that something i'm allowed to do or like how does that how does that work uh i think uh uh like we will provide that service but in terms of adding that to the lending protocol like uh like allowing your created market to be provided site tokens that would be based on governance okay and then second question uh when you say you're gonna go you're gonna take profits and keep it long on the underlying asset you said you're gonna do it in bitcoin uh is there a reason why you chose bitcoin over ethereum uh because i think currently like institutional money is starting to come in and it is currently three percent like thirty percent of total bitcoin is uh within the institutional uh uh treasuries basically so uh i think over the next five to seven years it will move to fifty percent and another thing is that uh uh the this is kind of a bootstrapping model uh i kind of pitched the private equity based token hit to my company which is an investment bank and they are kind of slow you know uh so during this week time i kind of just created it and i think it can help me bootstrap my overall idea and the treasury thing is over time i want to uh make it blockchain agnostic and add the custodian infrastructure so we can also add security token and all that so like uh like it's not limited to cryptocurrencies initially we are beginning from cryptocurrencies but it's basically tokenized uh tokenizing okay so you actually want to have like a diversified portfolio in underlying assets to take profits in so that you're holding it all in okay that makes sense okay we are a little bit over time so we're going to have to cut it there thank you very much rahul and we're going to move on which is onboarding mto emito i hope i got it right uh if you could share your screen and make sure that audio is on that would be great hello guys i'll be sharing the screen oh i'm sorry i need to share my audio with the screen sharing so that there is better boarding emitter that is trying to make ethereum simpler to use so we're working on mito there is a separate project and we're tokenizing containers and we want normal people without prior knowledge of ethereum to use it so we have to simplify the user experience for them so we're trying to make web 3 in this case ethereum intuitive and familiar basically we need to make the creation of quotes and transactions simply so the requirements were removed management no signing transactions no prior knowledge and to make three filas web 2. so how does it work we've got on the back end on board money api that handles the ethereum it's a wrapper that generates an abstraction so we can manipulate the elements in a much more simpler way so a private keys are stored on on their servers and we only have a node.js server the handle of users and on the front end we've got bootstrap and a es j for for the presentation so the app is up and running on simple a dot x y c so here i'm gonna log into an already existing account so go to screen three test so we're in our home we've got some f balance and we have our address here this is our token so we're gonna have a destination address that will be my goalie destinate wallet here you can see i got points zero six f and i'm gonna sim some of it so i'm going to send this one away to my address i'm gonna send so it won't prompt me for any signing transaction nor do i need to know anything about gas prices so all this is handled in the onboard modding api so we can see there i got i just received a third into my account and i send it from here cool so we can check the battery nice also we can create accounts so i'm gonna create a test one oh account i'm gonna do a password i'm gonna create an account this is also handled by the onboard money so the bad thing it's also it also takes a few seconds for everything to transact that could be fixed by um saving the requested intention of the user on the server or server and then requesting from our server to onboard money in a later time update everything so yeah there we go this time so there there you go ethereum made it simple questions i have a question uh you had you had dot xyz for your website was that chosen for the ens benefits or is that just coincidence no chosen uh really because it was i think the cheapest uh the cheapest one right.xyz things are but we're planning to use a because using um what's ens is it it's much simpler for users also so they don't have to use the hexadecimal address we were also thinking of using it in a later stage but it would be great full disclosure i work for ens that's why i'm bringing it up but i support you adding ens to this project how was uh i was using onboard money didn't yeah how was that it was a pretty easy after getting the handle of it because it's a very new project and being developed there are some bugs still but after we got it up and running it's it's pretty good it doesn't fail much and we can get good um [Music] information of the errors that happened and so we can talk to the team and get feedback and solve the problems we're having on on the run okay so so the team was available you spoke to them yeah very cool who do you envision using this oh sorry brandon i was just gonna say um i just want a little bit of clarification i didn't follow exactly um so you basically created a docker uh i guess container for an evm kind of thing is that right yes uh actually we're tokenizing containers that are going to be exported from brazil onto venezuela and it's an investment opportunity for people because they the content is crowdfunded so people can buy very small amounts of the enterprise so people that will be using uh this will have no knowledge of ethereum we are only using it as a register basically so users are normal people that are trying to invest in importing exporting of elements so are you are these docker containers effectively their wallets then from what it is no how does it work is um on permanent provides uh an umbrella wallet that lets us create and i call it smaller wallets so the wallet let us handles the request of the messy contouring so we got this wallet address and got the user's wallets what onboard money laid that's do is send transactions on behalf of the of the users using or wallet address so um that allow us to to handle gas requests we use the gas in our main wallet so users don't have to own any ether to to create transactions and it is indeed in a docker onboard uses a docker we have a server that talks to our main wallet and we send our intentions to their server and transactions are sent to infuria i believe okay i see makes sense and so the idea would be would be that uh you cover the cost of gas just in a direct transaction costs the end users then yeah we are subsidizing the transactions of for users so they don't have to own any prior gas all right that is our four minutes thank you so much santiago and very next very good work next team will be share my rpc and when you join in here make sure you turn on audio for the video using damage channels from braid hello and welcome to my talk on share my rpc decentralize infuria using payment channels from rain next to the problem running an ethereum node is costly providing the json rpc interface is voluntary and it does put a strain on both bandwidth and computation the json rpc does things like estimate gas for you you can send transactions to it and you can also subscribe or filter for events uh currently most steps rely on infuria for their rpc calls which means there's a big risk of centralization now my solution is to use to send money with each json rpc request to incentivize people sharing their json rpc servers now my contribution is the golang package for the easy interaction with raiden a wrapper around go ethereum's eth client which is the default way in golang to interact with ethereum and it can be used as a drop-in replacement for each client and what it does is it basically sends a payment attached to each json rpc request over the payment channel and i also added some small changes to go ethereum so that the rpc server waits for rate and payment on incoming rpc requests and i create this little demo app that executes some commands now to the demo app on the left top side you can see the raiden node and on the bottom left side you can see a guest node running it's connected to gurley and on the top right side you can see uh the raiden wizard which contains our current balance and with and on the top on the bottom right side you can see share my rpc and i'm now going to start a little demo and what this demo does it sends some rpc queries to the cath node and pays for them using raiden so for example here we query for the highest block number and send for this to the raid note here for we estimate gas we ask for the pending loans for some account or we send a transaction the next test we send some money to another node so not the raid node and see if it the raid node still listens to our requests serves our requests and as you can see here we send money to the zero node which is not in the raid network so the payment is not executed and you can see on the left side the gath node says that no payment was received for a call so it received the json rpc call but no payment over the network so it returns an eof and the rpc call failed the raiden package the raiden package uses the raiden rest api on the right side you can see an outline of all the functions available to interact with the raid network can be easily imported and used by other golan projects and it makes working with raiden really easy thank you for your attention i hope you liked my talk i'll share my rpc let's decentralize infiro fabulous we got four minutes for questions thank you yeah so this is what i mean go ahead go ahead sorry i was going to ask to say um so pull together hits millions of requests per uh per day with uh inferior so we do definitely feel this pain of needing to distribute this this workload a lot so it's interesting to see this project um in your mind i kind of have two questions i guess one who who have you optimized the payment from like either the users of the dapps or the dapps themselves and do you to do you envision any kind of uh discovery like a marketplace for discovery for these nodes so regarding your first question um i don't know i just developed it as a drop-in replacement for the for the current uh eth client package so um i'm not sure whether like in the end this cost will will be paid by the dep developers or the users so probably it will be in the end paid by the the users but uh maybe not not in the beginning um and i already forgot your second question sorry the second question was just is there gonna be like a no discovery like a marketplace of sorts um well i think you could build something like this yeah that would be really nice um i'm like to be really honest i just needed something to work on and this was like the nicest project in the uh in the list and i'm not really planning to continue it but if someone is interested in it i would love to provide some feedback and provide some pointers how to spin this out and move this forward well somebody needs to continue it because we do need to decentralize infuria yeah and fear is great i'm not against inferior but we do need other options i mean the inferior people would probably agree um and this is right this is an interesting way of doing it uh it's too bad though that you said you don't plan on working on it necessarily further um what was the i mean but now that you're somebody who's like attempt to do this what would you say is the hardest part of decentralizing fiora like since now you've thought about it um well the hardest part in the project definitely was working with raiden because like their documentation is a bit outdated and creating like a wrapper around their api was a bit hard um i think in general yeah uh from the programming side it's not that hard i think the the like the biggest problems would be around incentivization like how to um how to uh like because most apps use infuria and most smaller depths also use infurial for free um so uh there's not a not much incentive for them to move to a paid model only for centralization so i think um yeah that's one of the one of the biggest issues i would envision with this project in the long term just to get people actually to pay for the ap i request or to accept that they should pay for the apo requests what was the 30 second hardest thing you came into so again what was the biggest problem that you came that you ran into working on this um uh yeah the biggest problem was that um it's not easy to get your balance from uh from raiden well it's easy to get your balance but it's not easy to like subscribe to a new event so you don't get notified with when someone sends you some money this was base uh this was a pretty big challenge so you always have to poll for new updates but this is uh like i abstracted everything away so that you can you can just call a function and if something changed in the last whenever then you basically then you get the payment back the last payment back all right and that's our time thank you so much thanks bye and your next next team will be ether realm you could share your screen and make sure you turn on audio hi guys just a second sorry hi everyone my name is david and i'm here to present you my project named ether realm so basically the purpose of this whole idea is to create a nft games from scratch which means basically to enable a website where you could enter all the rules and the conditions of your game and it will be created uh on a blockchain with smart contracts generated automatically so i just prepared here a little slide to to show you how i wanted to divide the website so basically when i think like of of a game which is nft based i thought about three different things the first one obviously is the collectibles this will be basically modeled by an erc 721 smart contract and then the tokens and in the end what are the rules that that that define the game so i want to show you a demo of the website so here you can see you can create a new game mean collectibles or a great game contract we will focus on create a new game so here you can choose a category so let's say cd for example and then you get basically from wikidata all the available cities that are registers in in wikipedia so that's pretty awesome stuff basically you can create any game that you want with any collectibles and it will be like ready here let's take for example i don't know character from star wars let's say just random id so here you have all the characters um we will take an example with less items so let's say planet of the solar system there are only eight yeah i might say makes sense so these are basically this will be my my nfts if there is some item that i don't want in my collection i can remove it and that and that will define my first step which is the collectibles and then i can define tokens so here let's define gold will supply 1 million and silver will supply 10 million let's say i don't know this will create basically for each line here it will create an erc20 contract and then here in the last step we can choose our set of rules let's say i don't know we we mint a new nft so we transfer to the address automatically a thousand thousand gold and that's it once this wizard is done uh basically uh the purpose is to deploy a smart contract for each part of the flow so collectibles token and rules and then you can start playing and deploying your game to wherever you want and it's like made so easily so that was my idea uh of course i'm available for all questions and thank you guys for listening pretty cool we got four minutes for questions and i'll remind you one minute hi man that was super cool how did you come up with the motivation behind this what were you thinking like because for when i when i look at this the person comes to my mind is like dungeons and dragons like i would love to have this and like i don't know like sunday nights me and the homies yeah exactly so that's an awesome question basically you're totally right like i'm building this platform so i can build a game that that i personally want to build and i thought if i'm building this game why not building like some layer on top of it that would basically be the factory for other games like this so i have an idea like uh i have an idea of taking like the all the living people in wikipedia and like do some game out of it with some conditions like stuff that would be like uh you know taken from oracles as well like if some external event happens in the real life then it can have consequences also in the game and that's like that's an idea that i i didn't choose to show in the hackathon because it's not defined yet hundred percent so i prefer to show this layer of like how to build games like this that's super cool yeah david good job i think it's really interesting um so uh you've now built this wizard for nfts and erc20s um what would the next step be do you want these games to start interacting with each other or do you want to instead blow out the sort of individual game kind of maker aspect of it what do you kind of envision this thing going so i i don't think i i would want to interact between games i think the purpose of this wizard is basically to enable some people with like great imagination and you know like i i'm sure that there's a lot of people who have like billion ideas of the games they're interacting on the on the blockchain with with nfts and tokens so the purpose is simply to enable them to do that without touching the code without touching likes without the writing solubility contracts and simply using this potentially i would like monetize it by like adding some token that will be like the the the the use of the for the use of the website but i'm not sure like maybe i will just keep it open source i don't know we'll see be careful about adding a token because once you do then you're like locked into having that token you know what i mean let's be careful about that um no this is really cool so you plan on further developing this and you know having this in production and everything yeah yeah there's still a lot of stuff to do and i i mean the contracts are not generated from a to z there's a lot of work yet so i cannot continue working on this like so i i showed you only the the ui but like all the back end is not done yet totally oh so do we watch something that's entirely fake or is there a smart contract no no it's not fair it's not fake it's it's not like there is some stuff but it's not done like all the all the third steps with the rules like i think there is some complex stuff on this side like further than only mint when you mint an nft getting some erc token i want to enable different kind of rules and and that's not yet like i i didn't program it yet i didn't have the time okay whose help do you need in order to take it to the next level like saying you know this is now an open source rapper or open source like you know platform to just build lots of games what yeah who who do you need to make this you know something that we all kind of engage with i think i need basically more time and more resources i'm not sure yet i don't think i could answer you uh with like an exact thing that i that that was missing um i i will think about it if you want and get back to you yeah that'd be that'd be awesome all right that's for four minutes thank you so much david it's a very cool project thanks thanks man cool yeah the next team will be mainstream crypto if you could share your video and share your audio hi i'm viraj anjan for eat online hackathon i worked on mainstream crypto what is the purpose the purpose is to make crypto mainstream by improving user experience and abstracting out complex terms i want to create useful products for daily use what are the features it will include fiat on ramp for crypto dollars that is usdc you can easily send receive or stream crypto dollars that is usdc using in-stream crypto sending or receiving your htc does not require eth since it uses meta transactions how it works meta transactions is powered using bi-economy api it uses transfer with authorization for sending usdc and permit for stream usdc approval usdc stream is powered using sampler so let me show a demo once you are logged in on the home page then you will be redirected to this ui over here you will see a buy button when you click on this then you will be redirected to fiat on ram where you can buy usdc and then your account balance will increase now since i already have balance therefore i'll try to send one uhdc to this address i'll click on send here it uses transfer its authorization so here i'll generate a signature and then it will use bi-economy api to send the transaction using a relay and the thing to note is it won't be required for sending usdc hence i successfully sent one uhdc to the recipient without using it using meta transactions similarly i can create a satellite stream where i stream the usdc to the recipient from the start time to the end time and here for the usdc token approval i'll use meta transactions again using the permit method and finally the recipient can then enter the stream id and the amount to claim the stream amount later what are the future use cases one product that i want to build is streaming funds this will be a venture fund powered by smart contracts using a stream multiple verified liquidity providers can stream usdc to fund manager here the idle funds will be deposited to a protocol to earn interest periodically stream funds can be claimed by fund manager liquidity provider can stop this stream anytime by paying penalty all compliance and fund allocation will be recorded using smart contracts this concludes the demo for mainstream crypto thanks all right fabulous we've got four minutes for questions and i'll warn you at one minute yeah so i've got a question uh this is great good good job so we've seen um uh you know there have been other pro projects out there attempting to do something like this or like how do we make it as simple as possible there's one kind of high profile one unilogin which actually shut down because they just kind of ran into lots of problems yeah in your opinion what would you say is the hardest problem to solve making uh crypto payments easy for the mainstream uh so one thing uh would definitely be login and the other thing would be to solve for uh high value transaction cases you know where uh say you could charge a transaction fee you know for cashless transactions and uh creating uh similar products on the top of them like so my focus would be high value transactions like say remittances like say from abroad you're uh sending it back to your country or say for example a one venture fund uh on the top of this you know where you use a stream to where the investors use teams and a fund manager manager so these are the high value transactions so where you can uh definitely charge your fee you know if you make the experience more easy and if you improve the ux thanks um yeah that was interesting so you've enabled um essentially meta transactions but it sounds like your intent is to have the cost of those covered uh based on the uh them supplying those that money to essentially a fund is that right yeah okay that's interesting so that's what you're getting at in terms of having sort of the minimum uh sort of transaction size to sort of justify the cost of the mediterranean yeah all right yeah okay interesting and so what do you have any plans for that hedge fund kind of portion of it of that sort of uh you know the i guess the investment vehicle or is that sort of external to your system so so i plan to write a smart contract for that and you know whoever wants uh those you know they can they can partner with me for that feature like say if a fund manager wants to start so consider something like a rolling fund you know similar to that and but but in crypto okay so it's just it's actually sent to a person who can then go and invest it yeah yeah so so basically there'll be a fund manager who loses this platform and he will then have his own investors and he'll do the verification and then he said only kyc permitted users would be able to uh stream to him i see well that's a complex problem that's a lot of bureaucracy i think if you're not doing it in smart contracts yeah it will use smart contacts but definitely uh there will be some layer of uh kyc involved you know because these will be high value transactions okay right makes sense how do you plan on doing the kyc are you planning on automate that or do you plan on doing like individual kind of like sign-ons and you know write down considering different options so one thing we could also consider bloom if it's ready for production if they have any features or maybe some other option but i haven't gone in deep you know with that aspect as of now there's also like everest i think everest has a tokenized um uh kyc and i think back in the uh maybe like one or two years ago uh people working on like tcr kyc so you know there's obfuscation there so you don't actually know that would be interesting okay very cool yeah we got 10 more seconds any final comments i think this is awesome yeah very cool thank you for the presentation super thank you so much and the next team will be i ipdb i almost said ipfs but that's not the name thank you so let's start the presentation did i hit the one second did it hit the audio button no one second here we go hi everyone my name is singh today we're going to talk about this project ipdb at a high level it is a database protocol for webfree what do you mean we already have decentralized database like uh tesla fast and open db so why do we need this let's talk about two use cases let's say we want to build a huge decentralized social level for everyone and different teams want to focus on different dabs and functionalities of the social network instead of asking every team to use one specific database implementation so they can share the data it will be not easy if we have a standard protocol for saturated data another case during this critical time of cover 19 we want to have real-time information about news and confirm the case from all sorts and channels some teams basically put together a detailed website and make it available to the public for free the problem is that the traffic is so huge that the team adam has to pay a large build for the infrastructure and data flow out of his own pocket so what if we have a public database that every hospital and government agency can publish its data to from the first phase so how should we implement this luckily we already have ipfs and we can extend its concept and apply it to database analog to content addressing in ipfs the key concept of ipdb is schema adjustings so a schema id is basically generated by hashing the schema and which means the application no longer need to know which particular database server or endpoint that you need to connect to it only need to know a schema id that we want to use and then we will able to connect to the cogus ipdb service this is the proposed architecture we have ipfs as the call stack and a iptp load built on top of lib p2p and tess effects to provide the database service then we can extend filecon to provide the payment and access control layer such that the apps and users on the outer layer can take advantage of dropping ipdb easily and cost effectively the ultimate goal is to make the echo system organic for this hackathon a mvp of the ipdb load have been implemented and here is a quick demo of it in this tab we are running the textile fed db in the background this tab is showing a example data schema that we'll be using in this demo which represents a co2 sensor data and we have developed a multi-schema package for converting that into a you know schema id in this tab we are going to be running the ipdb service we're going to be simulating some co2 sensor data and publish it to the database in this file tab we are going to be running another insight for the ipdb client that will be subscribing to those sensor data that we just published thank you for your time this is the end of the presentation very cool we got four minutes for questions and i will hold up a little one more minute left when we have one minute left thanks for that everybody um that was uh that's interesting so it's it's sort of like the schema definitely definition layer on top of the content storage layer and do you have any opinions around what schemas would be defined or is it more of a uh like like how how much um uh sort of how many conventions do you sort of stipulate rather than kind of having an open system um so my idea is that is to support um as many schemas possible however we would like to converse down to one particular convention so we would like to consolidate onto a certain rules that how you you know put together that particular schema for example for example let's say for field names then that standard would be um let's say we want to have all upper case for your field names etc or there will be a limitation on how many characters they can use in the film naming searches so this is actually a golden opportunity to have a uniform uh conventions for everyone to use um because um we no longer will be having dictated um you know identity for the corresponding database on which server is holding too this is all about the data schemer and we would like to serve that data scheme as well in in this demo example we're talking about sensor data which is a very very typical example is that there's so many sensors being deported from for our government or from our university agency that is you know supposed to be open to the puppet but they're not in the same database because it's difficult because they don't talk to each other so now we would like to put it onto the common ground so the only thing they need to do is to you know follow some conventions and then they should be good to go for you know using the same schema interesting um it's interesting you digging into this world what would you say is the biggest thing you learned from digging into these types of systems um i would say the biggest things i learned is from the decentralized database of white paper you know there is only a few implementations like the test affair and other db um so it's actually a difficult problem however what the team are solving is not um it's it's important but then it did not make it all the way to the end user yet uh because um i would say this ipdb um protocol is one of the missing steps what was your motivation for uh spearheading this project um my motivation is that um from a previous hackathon that we are trying to put together a um have a run a social network a decentralized version of it um however we find okay you know we have so many of um um data in terms of like uh user uh follow another user they like it or not and um if we do it um with our own database then that will be very much the same as the existing um you know giant um social platform that we own all the data so how we can you know open this up and you know make it available for different kind of dfs and developers to show that um we're all for developing the social network um and i think the missing step is okay we do not have a common data platform so ipf is great but then um it's not for you know saturated data it's more for just a files so it's difficult to serve files between between um you know different applications which you want to share the data so that's why that's the motivations do you have a vision for enabling that kind of coordination around schemas on top of this layer you built now absolutely so a typical example is that we would like to [Music] um have a search index such that people would like to use this concern okay is there any existing uh you know schemer you know i want this particular topic for example i want to uh publish uh some social network um data um okay there's already certain you know um schema already doing that so well it makes sense so let's follow that so um so yes that would be another piece that we need to put together interesting very cool stuff uh i think that's all the time that we have for now but thank you for this presentation thank you very much the next team that we have is cortex hedge and after them we are going to be taking a 10-minute break so if you could share your video and make sure that you have audio on so i just gonna plan the video hi my name is markus i focused on economic modelling and smart contracts hey my name is phil i was responsible for the front end development and help with the brainstorming uh yeah marcus is going to walk you through our motivation and some basic concepts so why do you need our protocol in the current economic environment it is hard to generate interpreters on your deposits landing platforms such as eighth or compounds of attractive returns but since stablecoins used in these platforms are denominated in u.s dollar they pose a problem to investors outside of the us the interest can be easily swallowed by exchange rate movements further many different stable coins lead to a more fractured financial system so how does our system work we create a market place connecting hedgers we take on exchange rate risk and combine them with european retail investors seeking as stable savings accounts we use the other protocol to generate interest on the deposits and further use chain link as a price oracle welcome to the cortex hedge homepage marcus just walked you through the basics so we will head straight into the app okay let's enable our wallet and take a look at what we see um first off you can see this timeline let's act as we're an investor so we are here um first off we need to invest some a die into the pool to later get our tokens which we can trade on other platforms okay let's start with 100 adi into the pool here we go and now we are going to deposit it okay so we are in this first phase the pool funding phase basically we can now invest our a die into the pool where it can generate interest and now we need to wait until the mint moment okay our transaction was confirmed so our money just went into the pool as you can see here this value decreased um so let's just assume uh we reached the mid moment as an investor this is a cool this is a cool point in time um now we can get the tokens that we wanted all the time just wait a second for the transaction to get through and what will happen is we will get a euro u and a euro s transfer to our account um and we can now share the a euros aha here we go um so now we are in the trade token phase um now it is ought to our job to get this aus tokens to other people who are interested in saving euro using a without risking any exchange rate losses okay uh let's just assume we did a good trade we got rid of all our aus and the redeeming phase begins this is where we will flip the coin and get the chance to earn some money as an investor all right uh we got four minutes for questions uh yeah okay this is really interesting um and you're right that uh we need a much bigger stable coin market uh beyond uh usd um who who did you who do you envision as you're the primary users of what you've built here like if it were to go into production so i think like as you might have seen in the video we have like two important roles to play a role in our in our contract i think on the one hand these savers would probably be like just some medium size to like small retail investors based in europe who basically get their income in euros and have the expenditures in euros so it makes a lot of sense to have their savings uh quite stable in the currency they use for every day basically and not speculate with their savings accounts which like most people like even i basically do when i use a adi or a cdi or like some other interest bearing save a coin and on the other hand they're like this hatchers who basically take on these uh exchange at risk and we imagine these to be more financially sophisticated individuals who first of all like can take on some risk on the other hand might even be able to hedge this risk using some legacy financial system using options using swaps like on some big exchanges and so on and would basically like earn some additional income out of that by selling their products basically for premium very cool so you're saying you actually see like average people in europe using this uh yes this was that's cool yeah so you've integrated with ave it looks like um so you do have some exposure across uh you know to a protocol um what would you say was the hardest part about building the system and so i think like both of us like just started consolidating programming so i think in the end everything's kind of hard but in general i think yeah so like actually like the integrating the changing oracles was quite easy i think in general it was quite hard to create a economic system which makes sure that both sides of the bed will always get paid out uh i think we were like thinking a lot about like some more like flexible arrangement where people can just join in the pool and leave the pool again but then we realize that this might this might result in just people leaving the pool once they are in profit and like just staying in it like like for the whole time like otherwise so i think like in the end we kind of came up with some quite a widget system where it's actually like just some time restrictions and at some point everybody needs to leave i think this was like one thing we discussed about a lot this is your your first time building on solidity or using solidity uh yeah so like we so like i had like say i used some of these amazing resources that are available in the community but yes i think this was like the best first like pet product i guess yeah wow great job that's yeah that's amazing do you plan on taking this you know to the next level people are actually because i think fx trading on crypto is is very similar in some extents and i think you know when talking about the djinn community right i think there's like a very fine line between what an fx trader is and what a degen defy trader is on the other hand like it's quite hard to like convince the degen of using a interest savings protocol which like catches your exchange rate risk and they're like five percent and they do some crazy yield farming but uh yeah so i think we like we were thinking about continuing that uh like maybe modulizing a little like decentralizing the control because like until now like the admin key the admin basically starts like a lot of functionality but yeah i think this would be the angle what what's stopping you from from committing to it and being like okay i'm going to keep continuing on this project i think there's like nothing stopping us i think like first of all we need to like create a more robust technic uh like testing environment because like while we are like trading the contract they're all like some bugs coming on sometimes and i think like currently we don't have like the systems in place to check that properly but yeah this would be like the next steps all right that was a very cool intro to solidity project so yeah very nice um that's our time for questions and we're going to take a short 10-minute break after we come back we are going to have croco finance croco finance i don't know it's one of those um feel free to turn off your cameras and we will meet back here i guess two minutes after the hour wherever you're located all right we're almost ready to return here great and so now i think we're ready to start our next video if you could uh share your screen make sure the audio is open hi i'm robert from kroger finance and let me show you who we are and what we have built for each online hackathon we are team of two people i was responsible for the front end and my friend jan was responsible for back-end and the goal of our project was to help liquidity providers understand their money flow we came up with this idea when we realized that we don't know if we are profitable or not on our own liquidity pool positions because of the high transaction fees and relative price changes so let me show you the demo this is our landing page where we ask the user to give us this ethereum address the address is the only input we need from the user so i will do that and this will redirect me to our dashboard right now we are fetching data about pools that belong to user's address we see there are three pools associated with this address let me just keep it poor on bar answer i see how much fees i earned what were my yield farming gains what were my transaction expenses and what was my impermanent loss compared to buy and hold strategy if i sum up all of these numbers together i get negative numbers which mean which means that i am not profitable compared to final strategy of this particular pool so this was dashboard the place where we show the user his current balances in tools but we have another feature called simulator so let me go there in simulator the user can try how changes in assets prices affect this portfolio value so right now i am in my keep heath pool and i wonder i want to know what happens if price of keep doubles so let me double the price of keep and i see that my loss on the right increased by one thousand and five hundred dollars so and i want to see what happens if price of keep goes to 50 of his current price yeah i see that i will be profitable compared by an old strategy if price of keep goes to 50 percent and user can place with the user can play with these values however he wants and see we can do this for units map and balancer and in case of balancer we can do this for arbitrary amount of tokens in pool and arbitrary weights so that was it and let me tell you how we made it so the first we had to do the math we had to derive formulas to compute impermanent loss and fear of ours only miss weapon balancer and once we had it we could build it and on backhand we use the graph and python and on the front end we use react and typescript and our future plans so the first step is to improve current state of the app to to brush all the things we didn't manage to finish until the hackathon deadline and the next step is to support more interactions with the user we want to tell the user for example what is his impermanent loss and notify him that his impermanent loss is very low and maybe it's a good time to withdraw his funds another step is to show more insights and support more decentralized exchanges in another step is of course follow the breakthroughs and defy and adapt to the situations and to look for new opportunities that was it thank you for your attention yeah this looks great i mean highly practical and uh you're right i mean it's like automating all the math that you know people are trying to do very useful uh do you plan on putting this out in production or is it already out in production or yeah it's already out you can go to code.finance and try it on your own unders like we have we have used few things we want to sort out like the instability of graph so currently we are just loading it from the graph directly and we would like to create our own database and put it in it so that it's more stable and we also want to like show users historical data but it's useful now very good yeah really excited about this this is something that's really valuable that i could use in my toolbox as well um in terms of understanding what you're doing with these different investment strategies i think that's really valuable it's interesting though that you uh it sounds like instead of using the contracts directly you've actually mirrored a lot of the calculations in kind of like a simulation um do you have any plans to sort of like either fork mainnet or just utilize the smart contracts themselves to do the calculations to kind of do your simulations uh so do you mean that we would replace our own calculation in typescript and use the use the real one yeah use the smart contracts to calculate oh actually we have not yet thought about it but i think that we will definitely verify the data more like what we have now seen what is coming out of our calculations it is aligned with what we see in like cumulative stuff statistics on unislab.info so we have not yet felt the need but it's definitely something we will keep on our minds interesting yeah because i feel like you could add so many protocols if you could generalize it and that's then you could just like pull all the historical data run the engine and just see what happens in the numbers but but regardless what we have seen is amazing you know regardless of where you've got the numbers from so thank you it's a really good idea we have just not thought about it this way yeah and i like your ui i can't remember whoever was talking said he did the front end and i thought it was good robert robert designed it yeah yeah good job yeah thank you just like a lot of projects don't necessarily you know because it's a hackathon don't have good uis and you guys did have a good ui it's a good job yeah thank you so much because i feel like this you could this is this is very valuable if you have any plan on pursuing this in some some way after the hackathon we definitely want to like create it as our like we definitely want to pursue it we would like to also maybe commercialize it in the future and we want to like put our own like whole white behind it that's that's why we've played with the ui so much because that's something we definitely want to continue on doing yeah i can see this being valuable as making a lot of these you know lp scenarios uh trackable to people to actually know what they're doing with their money um so i'm very cool very cool yeah yeah there is a there is a huge amount of features we would like to explore but this is what we have now well where would you like to go what's part of your uh vision what are some future features well i know that like some some volatility predictions are difficult but we definitely want to work more on on like user insight like from from the fee point of view so for example we would like to do some fee estimation into the future and like what the user can expect basically we wouldn't do we want to answer the to user whether it is worth it to be an lp in that particular pool and like at this point we are just showing him basic data from the blockchain but we definitely want to continue on doing like more more sophisticated estimation of how do we might develop into the future and such like we both of course we have studied machine learning as on as our main education so we would like to go this way interesting why not all right i think that'd be super cool uh sorry just one really quick question how how easy is it to snoop on someone else like say i want to like i mean i do this personally when i i'm looking at other people how other people trade um i i sort of just you know make my strategies around around what other people do how easy is it for me to just pull different things and kind of aggravate my data set to see how you know if i were to hypothetically like collude a bunch of pools together or like have you know big whales coming together and create a giant kind of uh i guess moving okay so so so on the input is just an ethereum address so we are afraid to put in whatever address you want so if for example you manage to like stalk someone on twitter and determine like what what his address is it will definitely like show you all about his about his positions is there enough support yes yes all right i think that's our time uh it's a very cool project thank you so much guys okay thank you guys next presenter is xerox mons you please share your screen with audio oh you seem to be muted hey there we go oh hi can i all right let's get going hello everyone today i'd like to introduce our project xerox mons neural net generated pixelmonster nfts so the two people behind this project are me owen shen and zephimlo so i was responsible for the front end machine learning algorithms smart contracts and the back end and saffrom was responsible for the front end and the smart contracts um so we worked jointly on those uh so what xerox mons is is it's an nft project so it's got the smart contracts up on the blockchain it's got a front end to interact with it and a server which serves up the images to other services like openc and what's cool about our nfts is every monster is unique and ai generated so that includes the image the animation and the name um so i'm going to bring up our application which is now live on mainnet so this is our home page you can see samples of different monsters that our neural net spits out and users will be able to go to summon where they can either purchase a monster directly or they can burn a gem which is nft from a previous project once that transaction goes through they can then go to their b theory and view all of their available monsters so in this case you know i have four of them set up um sirius is a value that updates as we add new monsters to be minted by the smart contract and bits here are some unsafe pseudorandom values that we get when the monster is minted these also come with a direct link to the openc page so users can view their monster and zelda if we go to the openc page for all the monsters you can see all the different monsters that have invented and their wide variety of names colors animations and so forth so our zero xbones project overall is broken up into four pieces we have the front end which we've just seen that's built in angular with web3 we have the back end which actually serves up the images acts as the api for the token uris that's written in node and it's hosted on heroku we have the smart contracts which are written in solidity testing is done with truffle and the pixel art which is one of the thing that ties it all together is done in python and we use pytorch for the actual machine learning models so talk a little bit more about how that actually works we have a generative adversarial network which we've trained on thousands of pixel art images once that's done we can essentially feed in input noise and get out things that look more like shapes so we feed it in 64 by 64 input noise and if it looks like something good we'll keep it then we'll perturb the noise um so that means adding a little bit of additional randomness to it and that'll give us extra frames that are perturbed slightly in the output then we roll the images and then we stitch them together and upscale to 128 by 128 and that gives us something like this so if we go to this jupiter notebook here you can see an example of one of these images being selected being saved and then all the frames being outputted and stitched together so that's the overview of our project um what we'd like to do next the biggest feature we'd like to add is merging so this is already enabled in the smart contract we just have to figure out how to do this at scale server side but users can essentially merge two of their monsters to get something that has attributes from both we'd also like to find a better way of storing the actual seeds you know input noise which produces the monster on chain probably in a separate contract and of course battling that's like the most exciting bit when people talk about monsters uh we're probably a ways away um but having some game that actually utilizes these tokens would be very exciting um that's our project and thank you very much for your time interesting so just so i understand uh because these are generated if you have the seed you can regenerate the same things correct as long as you also have the model parameters okay so if you have the model parameters you have to see you can auto generate okay so that's that uh means that you're less dependent on storing like the file on a server somewhere on ipfs or something okay that's interesting um thanks owen that was really interesting um i'm curious to know a little bit more about the the token model so what does the is the burning of these tokens is that kind of like payment in that sense this sort of like you know you're summoning this demon burning these tokens is that value imbued in this nft at all yeah um so i i didn't do the previous thing so i didn't talk much about it for this project because that was something separate from the ethon line um so the idea is that there was a previous project where users can get staking rewards as an nft and this is an extension to this to sort of reward users so they can either burn the nft they get from staking to get the monster or they can purchase directly so there's not a lot of additional sort of economic like good incentive to holding the monsters at this point there might end up being some rewards once we get battling fixed but right now it's mostly just like experimental novelty um like most nfts generally have like some combinational approach with like 10 choices for heads or tails um but now we have like very unique uh monsters for each nft yeah it's really interesting i actually have a follow-on question to what brantley asked um so it sounded like so we have a seed and then we have some model parameters and using that you can regenerate the model um but out of curiosity once they're minted and once you you want to merge them and kind of combine them um where does it pull that data from yes so i there's current my current solution for doing the merging is now the model parameters um or they're currently just being like store to s3 but um we like find some linear combination between them and then we run the model again and then i have to upload that again to s3 um the smart contract handles the actual merging of the nfts so like the on-chain records keep track of which the parents and like what the randomness looks like once it gets like added together but the actual image generation that stuff is still happening off-chain okay okay do you have any ideas for battling what do you want to do first yeah so i yeah like what does battling of these things mean yeah so um there's the way that i've been thinking about this is right now every monster is getting some like unsafe random bits but like money's not on the line so that's not an issue so much it's just like the block hash of the previous block number um thinking of like interpreting that as some sort of stat distribution um going for like some simple one-on-one battling uh that's like pokemon ask interesting yeah i really like i i really like the machine learning and kind of mutation aspect of it like maybe if even if in a battle you could burn both but then they get regenerated but with a slight mutation you know of what they were before because the battle affected them in some way or something like that i feel like there's a lot you could do there i think this i really like where you guys are going with this um yeah i think the dynamism aspect is probably like the underexplored bit that we can uh keep iterating on yeah exactly wait sorry i didn't catch that oh um sorry we asked the same question um what do you plan on doing next do you plan on continuing the project yeah so merging's all set up in smart contract i'll probably be working on the scripts to get it working offline this weekend um i hardcapped it to 90 monsters and they've all been distributed so hopefully we can get everyone who has them the chance to like start merging them and we can see what sort of new combinations pop up and then i'll be thinking about uh probably the game dev aspect and like which parts are good for on and off chain um resolution which will probably be in a separate contract what's your what's your roadmap look like like are you planning on doing this as like a like a pet project side monster project yeah um i think it'll be side project until i can think of a good funding model i mean right now it's just like direct sale or like do the staking thing and some people did buy them directly so um there could be something there um but uh but yeah probably like more part-time than full-time for now yeah this is better thank you so much owen that's a super cool project very cool next presenters will be instrip go and share your screen with audio hi i am this is my project called a instructor nfd marketplace in which a a in which if you want to take part the other day this is my project called instagram script is a automated nfp marketplace in which a a in which if you want to take part in script so you you first need to start with the board system so support is something like pull together you can you can understand so where user comes with the stable coin diode usbc and uh and in return uh smart contact will give a stable coin back to nfps okay and that nfc with user uh we will keep with user [Music] and it automatically calls the generic vrf function to declare the winner among the participant so once the winner is decided so oh interest will calculate it and on the basis of interest one nfp in interest and ftv generated which is backed by interest all the interest of our all the participants and they can have to be sent to the uh winner okay and once the board is finished then all the nfts of the participants and the interesting active also uh will send to the piggy bank contract so piggy bank contract is like a sushi swag okay so where in the farming is generated so so so whoever the nft's stakeholders or like participants all the participants will eligible for the piggy and fps okay so in return of ages and fps they will get piggy and f3 so so even if the any participant doesn't win any board winner so then he can he he can on the interest from piggy bank contract also and big bank contract will uh use that uh stable coin in some other ways like compound and away the landing protocol or orion okay so let's get back to the demo okay let me open the demo so so this is our uh no project okay so here you can create any uh port like this away compounding and total winner like multiple windows you can also select a board and join amount total is how how many days so i already created the board okay now let me join this post with ten dollar okay because for this board i will set the ten die minimum so [Music] let me join first so as you can see over here so that board yield 45 this much of a generator from two address and this is the winner address it is declared by automatically generic vrs so actually we are called by chennai okay and this is the new port created by of 15 minutes and that over the last four details comes here so software uh so on i can disperse this amount okay i will show and then it will be dispersed automatically okay so once it's disabled uh then all the nfts and interesting ft comes to the piggy bank contract okay so here you can see all the participants here i already take parting for the board like this is the token id of nfp and this is the worth of the uh nft's 10 dollar candle so i can say and and this currently this all uh nfts are uh stays in piggy bank so piggy piggy bank gives me a pe and fps so here you can see i i already on uh 1200 uh pv and and this is my claimable pe uh so once i disclaim it will be zero and the microtubule and piggy will be increased and this is a total supply okay uh and this is the total supply and once the i i will claim it will be total supply will be also increased so this was the project and so it is like nfc's market okay and this is the winning energy i already showed you yeah so i hope you guys like this uh my nfp entrepreneur and after marketplace thank you all right we got four minutes for questions hey uh can you hear me yep hey can you hear us hello um so quick question why why nfts yeah so why so i was thinking like a nft so each nmts is uh defined by a different different amount of uh like in different different amount of tokens so each nft has a different amount right right and so second point is like it's like by nfc we can we can decide that what is the engagement like how is the engagement of the user with the platform so we can be so we can uh measure the uh so we can measure the decision in future so like user has this type of uh like uh engagement with platforms so in the future distribution plan we can uh we can distribute the uh some other tokens like uh some other uh yield on the basis of that like uniqueness in price and also for distribution in future some of the plants come in platforms so we can disarm the basis of i was thinking like that okay all right so then i don't know apparently go i was gonna ask a different question okay so really quickly just um in terms of i guess liquidity and being able to like i guess eventually you'd want to not just claim your nft but also have some you know take your take the money from the nfts right so how how do you have like who who is going to provide the um i guess the man's side who's going to do like who is going to catch you out of your your nft uh okay okay so like after the uh pod session there is uh the the interest nft and party seven and he goes to piggy bank right automatically so that piggy bank from piggy bank uh the user has the feature like reading redeem single nfp or reading uh all nfp so using that so if the user press this ready mode so interest nft which is our winning nft and all the partition will be or reading and if the single then especially so you actually redeem your funds redeem your piggy into an nft is that what you're saying yes uh like uh i want to make like uh i want to introduce nft like uh i want to make the bridge between nfc and fungible token so uh using that and and after that we can create nfp marketplace so each industry will be unique by price and and the like after we can uh decide the interest nft marketplace also only into what those are the only interesting at least okay so the nfts are earning interest then is that right yes yeah uh when user will deposit the tokens they will get the participant nfp and when the winner is declared by the chain link vrf at the time uh one interest nft uh automatically generated and that interest energy goes to the uh winner and and that uh so it's sort of like pull together but you attach the winnings to an nft and then give the nft to the winner yeah i want to integrate the pool together but uh i i laid i joined late this hackathon so i i tried to pull together but i i didn't so i uh make my logic and instead the use of pull together so and then i i i saw some youtube videos like a nft is going very boom so i thought i should integrate it and then i saw sushi drive also so for the extra fund like if if any user doesn't win any polled uh winner so they can even on the interest using piggy bank contract where uh if if a user collect the mass of nf is like 10 participant nfp then he will also able to uh on the interest of piggy bank if he doesn't want the interest from a port like pull together interesting right on what was the uh the most complicated part of building this yeah uh in starting phase i i want i want to make two things important like automate the overall process and uh uh so automate for like a winning automation so uh so currently platform is or winning automation is uh winning things are automation using challenge alarm clock and chain like we are so starting like we are i don't know how to integrate both things together so after like uh like some time i i i'm i'm able to integrate chain link alarm clock and challenge wherever so i can automate all things and the second is multiple windows strategy it's difficult for me so eventually i indeed but yeah it's a takeaway interesting all right well with that i think we're going to move on to the final team for today thank you so much thank you very much the final team will be transparent uh yep i don't think we have audio for the video you may have to rescreen share oh sorry uh yeah is it okay now out that way so this is the presentation of the project transparency which is the french for the project transparency which is a french for transparency what i am to do with this project was to bring more transparency to the ethereum ecosystem because we have a new project we add new complexity to the ecosystem as we have seen htfi and it's important to for the user to be able to get the actual data that we have on the blockchain since it's on blockchain between two very high so what transparency does is uh bring give give a tool for user to to check some interesting data and get some sense some guarantee from the blockchain the project i focused on was tbtc which is the idea of minting and having an erc20 that represents bitcoins on the block the ethereum blockchain so there's a transparency for that is fairly simple is to check that the bitcoin is actually locked like find the transaction was that the bitcoin is actually locked on the bitcoin blockchain and then check that everything happened and everything is fine on the ethereum blockchain due to the time of the hackathon i only focused on the on the bitcoin side so that means interacting with the rpc server and getting the data that are of interest so what um so of course that means first you have to have a full node and so the idea to have both full ethereum and block and bitcoin and be able to interact with that so um and that's done uh i developed some function to be able to uh get some the actual data the idea being uh at the final uh the final function would be to send a timestamp and a transaction and an address we want to to to uh to study and retrieve the actual transaction where the mint origin parts are happening on the bitcoin side um so yeah and to do that i had to uh to develop some function to uh front and get get uh the transaction we need the hash and especially the timestamp because as when you give a timestamp on the bitcoin doesn't give you the exact block that that's matched that timestamp but so i develop a function to be able to get a range of uh range of of the blocks and then from there on i can i can i can explore that that transaction also have some function to extract the input and output to be able to filter later on so from there on i can show you uh what time i should do so here um we have a just a quick uh execution i'd like to see quick call of those functions and uh we can see um another transaction but then what is interesting i fix one transaction and i just look at what are the inputs and outputs but mainly the address so we see like all the addresses that are uh available on that and to another execution and then the find the block that is uh relevant uh fountain here i tried the to compute the range from the block so we have this block and then we find a range of block to explore so a little bit before and after so we can just check if everything is if then now we can check if you have the transaction of interest in there so yeah thank you so this is the presentation of the project yep great you got four minutes for questions and i'm sorry for butchering your name earlier because it's transparent and not transparent yeah it's fine uh very cool man so question what was the i guess what is the general motivation here and i think what uh i guess what i'm trying to get at is is you know who is the target demographic for this and why is this important for them yeah i think um the target people are user who cares about having actual data and things onto the blockchain and be able to verify them with the full note so the idea is someone who will have a bitcoin load and ethereum fuel nut and be able to check you know a lot of different projects so the idea was you know seeing yield farming and things like that um to get some measurements of uh which i call transparency uh it's like measurement of health or stuff like that so the one idea was fountain like you see you look at compounds uh people are taking loads and everything but you might want to see one um there's a liquidation price that my ticket will network so it's kind of that's kind of the idea to just build a lot of metrics all around the place with a lot of protocols and to be able to uh show it to the user and so they can also measure them on their own uh so for tbtc i like it because it's a cross-chain and and during my pc i had some experience with working with multi-channels and uh i like like um for apps and stuff like that so it was very interesting to go check on both blockchain but for now i just did the bitcoin side and i need to introduce the smart contact for the next steps okay being a really technically focused project um what was your hardest hurdle i believe that you had to overcome oh uh definitely understanding the structure the actual structures data inside the bitcoin uh blockchain it's like i've done a lot on the ethereum site so i know how to interact and create the network and stuff like that but once you start to get like uh data directly from the blockchain you have to understand the format and the weights structure and for instance i still have one issue uh with coinbase transaction because on bitcoin blocks is that the first transaction is in there and you might uh when i explore it i have to uh i it's a bit tricky to get the input output like with a kind of a fake transaction so it's a so i still need to work on that part of the code and the reason why i didn't do the ethereum side is just like the binding i like the binding of the smart contact but then i had to understand the whole uh solidity part and then translate that so that would be a next step so yeah generally it's just like it's complicated to just interact with mini blockchain at the same time are there features that you wish you would have been able to add but you just ran out of time yeah i think just basically just the basic stuff where i could actually carry ethereum blockchain and bitcoin like both of them and also i didn't make the final function where i just send a timestamp and an address and get the the transactions like everything is pretty much there but i still have to use a coinbase transaction and i still uh need to filter it and like you know just go through like a thousand of transactions per block and and most likely we need to parallelize a bit the work because now it's just sequential it just takes too long so yeah but it'll be so much faster when lightning network comes right [Laughter] let's start bashing bitcoin here let's let's go this is this is really cool though i think i think when we actually do have a lot more cross protocol swaps and we when we bridge everything to ethereum things will be uh yeah yeah i think i think i think i like this vision of in internet of blockchain in general uh beyond just one project and stuff so i agree very cool with that we're about out of time and we're all finished all of them so thank you so much thanks bye guys uh we got a couple more days of judging for the remaining projects so i'm told to mention the hackathon finale and summit next friday october 30th and with that thank you very much kenneth brendan and brantley and we'll see you all next time thanks for hosting henry okay thank you have a great day everybody 