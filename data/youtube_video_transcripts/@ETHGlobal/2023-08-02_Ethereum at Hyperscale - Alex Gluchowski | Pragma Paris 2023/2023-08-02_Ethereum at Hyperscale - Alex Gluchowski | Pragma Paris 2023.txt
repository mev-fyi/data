foreign [Music] so I want to bring on our very first interview for today and that is Alex Alex is the co-founder CEO of matter Labs you may know more frequently it has ZK sync and we're gonna have a chat conversation around how we can scale all of this even better so welcome Alex [Applause] thank you Patrick it's an honor to be here and we're really excited to for listen to it I am equally excited to uh to talk to you officially on stage we've had a lot of these when nobody was listening so let's uh let's change that a little bit you've been working on scaling ethereum for nearly five years uh I want to start off by just kind of having people know about what you're working on how we got started and sort of what was the actual Insight that made you sort of go all in on this being the problem that you needed to solve um so you guys probably know as you can Sync It's a layer 2 on ethereum using zero knowledge Pros it's been the first Zeke roll up on ethereum where we actually built the very first working ZK roll up so it's always been in the ZK space um my motivation for doing this was um solving problems that we need to solve to get ethereum to the mass adoption so I came into crypto space out of convictions that freedom is the most important thing you can improve in in the world and it was a kind of the intersection of uh the technological uh really challenging interesting technological things and and this um the the passion for Freedom that I had and it was clear that we need to solve scalability we need to solve a few other things but scalability seemed like a really really hard problem and it was not until zero knowledge proofs appeared on my radar that I had an idea like how can we do it fully preserving the properties that made ethereum and Bitcoin before that really valuable and if you think about this properties it's yeah that's my question um the the story of building matter Labs actually illustrates what they are so when I was first talking to investors and I remember talking to you five years ago in San Francisco and and two others and trying to to sell this thing um ZK was a very little-known term very little known concept it was actually the cash has just came out and kept figuring it out what to do yeah but like most people perceived it as just the Privacy thing and something weird and and Far From Reality and very complex and and inexpensive but it was very clear to me that this is a breakthrough technology that will transform the world completely like it was it was clear that we we don't have the protocols right now that uh are capable of doing this at their production already but the base of the scientific progress in this space was so fast that it was clear like maybe in in two years maybe in three year and five years but we will get the product we will get there it's like the curve is is conversing so um I was and and then like once we get there the properties that the this technology give you uh were really feeling like magic and people were referring to their knowledge proves that this magic Moon math and not without a reason and so I was trying to to convince people and everyone was like meh I don't know I could say yeah where's confirmation you know like it's hard like if you're not a scientist it's very hard to understand this concept and see beyond uh so the great thing about capitalism and ethereum blockchain specifically and the the digital world is we have very little regulation there is a very low barrier of entry and we have this amazing world of VCS who are willing to take risks like you don't have to convince them to 100 you just have to convince them that there is a slight chance that this can can become big and then they are willing to support you and this is very different from a political world where you have to go and convince some powerful Mighty party that this is absolutely the right way to go forward you have to provide evidence and like you you can't talk in probabilities Innovation doesn't happen when it's masses yeah it's convincing but Innovation is the most important thing that drives wealth progress Prosperity happiness for for for us as a species and Innovation requires experiments and so like we need to lower this barriers of energy we need to get like and this is why they uh we all always like my conviction was that the most important properties of blockchain systems are permissionlessness like this absolute inclusivity anyone can come and start building things just deploy a contract or download the wallet and start using it without asking anyone for permission and you can start innovating you can just build products and like people can instantly access it and it's all an open system just like the internet in fact for me the web 3 is just a continuation of the Internet it's the this next wave that brings value on the on on internet like blockchain is the value layer of the internet and so like and I I'm absolutely convinced that will all of the value transactions of the world will come uh to blockchain with the magic power of zero knowledge proofs because it just gives you something very unique that that you don't get from other Technologies so let's contextualize this a little bit so so what uh there's an argument for okay well we kind of saw as a as a mathematician that this is what's possible and then it's now an efficiency game or sometimes just some better enhancements around it but concretely what does it let you do uh better that helps you actually set any blockchain up for success in the future so there is I'm I'm not so good in the information Theory to give you an exact definition of of this property but like I intuitively feel it and maybe I'll try to explain um it's kind of like compression of the Integrity of computation like you you you compress certain information that you pass over um and like from there you get two properties essentially one one is um uh scale or even the higher press scale as we call it now in ZK sync so you can extend the computation indefinitely you can like process all of the world's value transactions in parallel merge them in parallel in one 16 proof and this proof can be verified by any like mobile phone any clock any Raspberry Pi in world and like if just a few milliseconds right this is really powerful except the scale is one thing the other thing is um the protocols are called zero knowledge proofs meaning that you don't disclose any additional information about the the fact of the computation and the fact that the computation is correct but in fact the systems that we can build on top of the uh with your knowledge Pros I would call them like partial knowledge systems so maybe an analogy that that will help you understand this is um when you get a payment let's say like you have your banking app or or a venmo or PayPal or whatever and someone makes a payment to you uh and you see on on the display of your app that I received this payment right and you know how much you received and you know you know your new balance and you can see all the payments on your account uh what matters to you is to know that this payment really happened that it's like there is a world consensus that now you have much more money you can go and use your credit card and buy some goods and people will actually take this money from you but you don't have to know anything about all the other worlds accounts on in this bank or or elsewhere right so you only care about this computational fact but you you need the partial knowledge of the entire system because with the if you had to know all of the world's accounts that would not be scalable all right so this is like practically speaking if you if you like if we now go back to like in Practical playing on like speaking about Zeke Roll-Ups specifically uh we solve computation completely like we can process infinite number of trends like not infinite like unlimited number of transactions but we still have the data availability problem all of the ZK roll ups how many of you guys are familiar with the VK Roll-Ups and how they work okay most of you are but so you know that all the rollups ZK and optimistic combined are using the same fixed throughput of ethereum data availability layer so we can have like today we can process up to I think like around 1000 transactions cumulatively across all roll ups if one roll-up does more others have to do less or the price will will go up and the price will go up and even with uh after product sharding and even after dunk sharding we won't get to an infinite throughput we'll talk about that but with zero knowledge proofs you can build systems that use hybrid data availability models such as volition in in DK sync we have an implementation called zika porter for this where a single roll up can have accounts that are like ZK rollup accounts that inherit 100 security from ethereum so you have theoretically like if there is no bargain implementation you have exactly the same security properties as as though you are on the contract and ethereum but in addition to that yeah you can have this ziki Porter accounts that are elastic you can grow them like much higher than than the the roll-up accounts and uh you don't have to publish them on to ethereum but you still have access to all the other roll-up accounts and you can still like each of the system can talk to any other system and you don't have like you the the systems can trust each other because they have this Integrity from your knowledge probes and on top of that you also get privacy and privacy in ZK Roll-Ups in implemented in the right way something like dickiesync is doing is going to be in extremely cheap like it's gonna be like if on ethereum now you have to pay like dozens of dollars for a single snark to verify once you kissing it will cost you like 0.1 Cent like under one cent extremely cheap so like all the Privacy applications are coming to blockchain with this okay that was a an awesome primer because it actually sets up us for the next 15 to 20 minutes of other questions so so uh let's kind of dig into some of the things that you've said um of course that the magic here for for this uh this Moon math is that uh you can do all these things and they're guaranteed to be correct because if they're not then the rest of the system doesn't kind of proceed um so it's All or Nothing uh kind of actions and the best thing here is that all these proofs like to contextualize what a proof is at the end of the day you're coming with a string which is like a hash of all that data and in most cases that hash stays constant um that's kind of the recursion that's coming in I can have a million transactions or two transactions or a thousand and the size of that proof for any of those will still be the same thing which means it's quick to verify it's quick to store anywhere and you just have the ability to construct the same proof later if you want to really verify and do the math again all of that is now in a way anywhere from benefit of hindsight to things that we've learned so my question to you is kind of for forwarding and going back and forth within the last five years what were some of the things that you had to anywhere from invens to figure out to to improve um to get to where you are now uh can we talk about some of the advancements you've made can we talk about some of the the breakthroughs or the actual uh benchmarks to things that you've built and uh and kind of what was the state of the art before and what's happened since um so we are uh I'm incredibly proud to have a really really strong team uh at no matter Labs the the core team of CK sync uh it's not going to be the only thing working on zika Singh but um uh it's it's the the original one and we we made a number of things for the first time on ethereum like as I said we've built a very first zika roll up and uh we have brought the very first implementation of recursion to um to ethereum we built the very first uh like we came up with idea of ZK VM that you can actually do it and we built the first um working version of the KVM uh it's been a work on the shoulders of giants of a lot of researchers and other developers and other uh contributors to the space who are like I have extremely high respect for like it's like our team's contribution is is Tiny compared to all the body of knowledge that was created before us um but like from like maybe I can focus on on the most recent things that that I'm most excited about like this week we announced a new proof system called bujam uh which is an implementation of the proof proof scheme called redshift which our team came up with as a byproduct of the work like we did I remember that from we didn't actually intend like we were always very practical very applied to research but uh we we saw a plan coming out and liquids of fry system and then uh my co-founder was like oh like this is interesting like we can like if we combine this and that we can get some new properties so the uh the combination of Planck and Fry uh we called it uh redshift it was not practical until uh uh the mirror protocols and all that polygon team came up with plonky two they were they applied the the smaller field to it uh and the plonky2 is actually an implementation of redshift and now we came up with another implementation of thread shift where we made in a number of things completely differently and made a lot of improvements and now it's the we made the Benchmark with seller um we made them somewhat incorrectly so like we like it's it's now like in the like almost as fast as star came slightly behind Starkey and in the benchmarks but we use the wrong hash function so we actually we are slightly above starting so it's like fastest from all the Benchmark systems in the world we will update some benchmarks soon um and it's like it's or it's uh more than an order of magnesium faster than plankey two orders have magnitude more uh uh um performance than than the existing probe system we use and this is going to push the boundaries of what's possible computationally on ZK roll ups like very far what's a better way to understand what this order of magnitude actually looks like is it are we talking about something becomes from a few seconds a few hundred milliseconds or is like we've reduced the requirements like how do we actually to think about performance of proof systems uh we we have to remember that the computation is always done in parallel the zero knowledge proofs are really well paralyzable so we what matters is like your performance come down comes down to the to the matter of cost uh the another important cost of Hardware or cost of computation yes so like we which boils down to the cost of Hardware that you can rent somewhere or you own but you you probably want to rent it you want it to be elastic you want like if there is higher demand you want more instances of your approver if there is lower demand you want to roll it down uh you probably want to use very efficient very efficiently parallelizable hardware for this which currently uh the best choice is the gpus so we actually have also an implementation of GPU approver for uh boot jump uh which is uh only requiring six gigabyte of ram so it's it's like compared to all the previous uh to to the to the best of my knowledge to the existing provers out there it's a massive Improvement like I I I know like some of the competitors were running as recently as like a few months ago approver of uh 500 gigabytes of RAM which you can normally run and it's about and so you you become heavily dependent on this cloud this is not what you want you want to decentralize the proofs you want to decentralize the sequencer that's that's the core of our ethers Suzuki sync then we're working on both but the the key enabler to decentralizing the approver is getting it on a GPU uh Hardware that that is like consumer grade that can be run in the cloud on any GPU instance that is used for machine learning or whatnot or on GPU mining rigs or even on home gaming gaming rigs yeah yeah so like the uh so this is the the really interesting thing it's it's already live on mainnet in Shadow proving mode so we're currently testing it with around the proofs for the on the all-proof system and in parallel we're on the proof for the exact same blocks because they were designed to be future proof with the choice of the hash function and the architecture of the storage so we can easily switch the proof system we can easily switch the field used in this probe system and uh once it's like after a month we we can we will complete the security Audits and we will just switch to only to only the new Pro system so so the end user doesn't notice any difference because you've just improved the internals or the users will notice the difference like the as in in terms of they don't have to do anything new to the sales oh yeah so the users don't have to do anything like it's it's completely transparent like nothing changes for uh from the user perspective except for the cost like well the new proof system will be able to make the uh the the blocks essentially unlimited they will only be limited by the throughput of the sequencer we like the the new construction and the construction we use in the virtual machine now not in the proof system but the universal machine design enables us to do arbitrary long execution trays so we we don't have a concept of a block limit in ethereum we have a block limit of like 15 million gas in ziki Singh you don't have it you can you can like have 100 million like 150 million gas in the single block in a single transaction whatever like we can this is just a proof that matters doesn't matter how yeah well again the proofs are paralyzable so like once we close the block we can just spin off number of instances to prove this block and and we don't have to worry about it what we have to worry about is the sequencer because it's evm compatible so we are on the sequencer in the evm Paradigm like sequentially every transaction is given after another every block axis is uh or sorry storage access is executed after another so sequencer throughput matters we knew this and this is why we were building we we do not reuse get for example because we know it has um existing limitations that other teams struggle with we built a sequencer node completely from scratch in Rust and our current sequencer node enables uh something like over north of 100 TPS of average transactions like you know you like what we see in the mix of like different D5 and ft projects like if you take an average transaction it's something around I think 200k gas I'm not sure exactly I don't know why here but uh like an average transaction we can do like over 100 130 or something like that this per second today and we're still working on improving the the uh the sequencer and at some point we can paralyze it like we have a really high buffer right now as you can sync is doing around 10 TPS on average for the past months that's the current user usage that's the actual demand and the capacity is like 10x 13x more than that and and this usage actually makes the key sync the one of the most battle tested uh I'll do is like we are actually the most used L2 over the last 30 days uh average like we're just above our bedroom and like far above everyone else so that's an interesting one interesting all right yeah I highly recommend L2 beat as a dot info as the resource for all this metrics for tvl like we're a third uh L2 by tvl and first all to buy usage that's an interesting point so let's talk about this um we're obviously seeing multiple approaches to solve scalability you have we just talked about ZK Roll-Ups here and that's what you're working on there's also optimistic roll up so we have some other kind of brand new ways to think about things like like start wear um in the same kind of field but we kind of are seeing a lot more people experiment with optimistic Roll-Ups or you kind of see anywhere from base to recently cello I'm going to kind of do a version of this for future speakers too but how do you kind of perceive what it means to kind of use optimistic rollups here and what's kind of the the framework around when somebody should consider zika revelops versus optimistic roll-ups I think one advantage optimistic rollups have today is that you don't have to wait for the proof generation so your latency could be kind of synced with ethereum and you can do like every block you can you can do some checkpoint on ethereum and uh and kind of like make it harder to revert this checkpoint it's not impossible but it's harder right we can use this in their knowledge in ZK Roll-Ups as well it's just not been been used so far but like it's easy to add this property apart from that optimistic roll ups are currently cheaper well not optimistic roll-ups or like the optimistic execution if you want uh would be can you clarify what optimistic execution is here that's that's a really good question like and maybe maybe like like optimistic Roll-Ups cannot be detached from the problem of data availability so like we see a rise of this optimistic chains so-called optimistic chains which is essentially your Reincarnation of plasma and protocol we've been dealing with like we're experimenting with uh five years ago uh but it's the same like the security assumptions come down to basically a uh the same properties as a side chain so it's probably probably not um not really good term but like if if you look at the optimistic roll-ups systems that publish data availability on ethereum and derive security from ethereum because anyone can challenge the invalid states that the sequencers would be publishing uh which by the way we don't we don't I don't think we have uh optimistic Roll-Ups that actually have permissions fraud proofs but apart from that um the um optimistic Roll-Ups are fundamentally going to be more expensive than the zika Roll-Ups right now they're cheaper just because they had a few uh like a few years had time to implement data compression this is coming soon to iziki sync and I know that other zika Roll-Ups are also working on this this will lower the costs by 50 60 70 but just like simple compression like instead of the address you put the ID of the address that you use dictionaries you compress the numbers like you don't have to publish 32 zeros you just publish one zero because it's you know like some number some are more compressible but um once we have that we'll be roughly equivalent but after that we had um compression uniquely enabled by their knowledge proofs for example reusing of the state so easy casings recursion or different um like easy sync and starknet are the only 12 tools that publish State divs instead of call data we have an architectural choice where we don't publish every single transaction on chain we are at the end of the block we only publish what has changed in this block so like if if you have like one million or like one one thousand like nft um transfers uh then you will have like like 1000 uh updates and optimistic Roll-Ups will have 1 000 inputs for all these transactions but for different transaction types like let's say Oracle updates thousand updates will end up like they constantly update the same storage slots in the same contract over and over again they just adjust the price so at the end of the block if you do 1000 Oracle updates you'll only have to pay for one if you're using like ARP approach for optimistic Roll-Ups they will have to pay a thousand times so for applications like this same with amm access like if if you're doing an Arbitrage from a single trading account to the same amm pair at the end of the block no matter how many transactions you do you will only pay for one and we can nicely amortize this across all users so if some some like let's say unisol trading pairs are more popular they will become cheaper the more people use them in in the batches and the batches can be large like 20 minutes which is like thousands of transactions right so this will enable a completely unique uh cost lowering for for ziki Roll-Ups versus optimistic Roll-Ups and on top of that we have volition where the access to retail users will be like flatted under one cent no matter what what the gas prices on ethereum are how does that work well you split the state into like ZK or roll-up accounts and ziki Porter accounts it's it's all part of the same state so you can instantly access like easy portal users can go on trade on Union swap in a seamless way exactly the same way the Carol of users would do but for them we don't publish these state divs for these accounts on ethereum which means we publish them to some other data availability so it's cheaper you don't have the same security as ethereum it's a trade-off like your security rule is going to be lower because now your data availability committee could theoretically freeze the state for everyone like they can the Quorum or controlling this committee can say like we don't we're not going to publish data so you need some economic incentives for them not to do this which is going to be like probably some some form of stake you have to stick something so um like if you freeze the state your state will kind of burn or or become like not valuable but nice this will not affect zika roller Builders so all the like LPS with a lot of capital will be using ZK roll up accounts and all the retail users who are opting into this slightly lower security but still enforced by zero knowledge proves like you like we like the operators the sequencer cannot steal funds cannot invalidate Mass with the state they can only execute what the users promised them it's just like the state is is like not 100 secured by ethereum um but it's you have access to the best liquidity in the world because you you're you're working with like the uh this is such a secure counterpart interesting um maybe maybe kind of on that similar topic let's let's talk about what developing on top of zika Roll-Ups is like so you introduce something called the ZK stack what is it kind of what was your focus around ZK EVMS and why did you choose that route which requires a lot more work um and what you gonna think that was necessary well the kvms were was like a necessary choice at the end once we could implement it because uh we are scaling ethereum and there are massive Network effects around the uh solidity as the language libraries existing code bases existing projects with all the code bases for them and the tooling you want to reuse all of that and uh if if we had to introduce a new language or even use something like rust we would have to create an entire ecosystem around that it's difficult like we see it with stock where Cairo is doing that it's it kind of takes time like you need to invest a lot in this uh and and then like you you okay like we wanted to reuse the these Open Standards open uh you know just have a continuation of ethereum we just wanted to be a layer extension of ethereum and not something entirely different so the it was not a choice like the moment we could do it we we did it and uh seems like it's working well it's working quite well yes so what was the the second stack is important so ZK stack is um is a framework you can use to build your own Sovereign Roll-Ups or hyper chains more generically because like CK stack is a modular framework based on the code base of era zika sync blockchain so it's it's a really bottle tested code base with half a billion tvl and like lots of transaction lots of usage of high throughput it's very stable we invested a lot in security we spent over four million dollars in security audit contest we learned different defense in depth like several other measures in addition to the correctness by construction but ZK stack now enables you to like deploy to to create your own blockchain deploy it and modularize like customize the modules so you can say like I want to use my own sequencer or I want to take this decentralized sequencer based on Hot Stuff consensus that that matter Labs is developing or I want to connect some other like maybe I want tendermint because it I'm already using it from the cosmos ecosystem um you can Define your own data availability mode you want to be a ZK roll up you want to be Evolution with the extension of uh Valium accounts or um you want to be um a validium because your Enterprise chain or maybe a banking chain and you want full control of this data you don't want to disclose it but you still want to inherit validity and integrity from ethereum so this is why we're not calling it like it's not only physical Ops it's for this different chains like various aspects can be customizable but the most important property of the ZK stack apart from from this interesting thing is it enables you to deploy your hyper chain not in an isolated way like completely siled on implying that you need a whole new set of sequencers validators or users or like what does separation mean I'll explain now like so like one option for you would be to like just deploy your own role upon ethereum and have all the bridging from and two other Roll-Ups through ethereum the other option is to deploy it as a part of this ziki sync hyperchain ecosystem if you do it on ethereum so the the analogy I'm thinking of is like Roll-Ups are almost like cities you have differences like you live in Paris like users will always pick one place where they live all of their assets will live in one place maybe not all but like you one wallet lives in one one chain one wallet cannot simultaneously live in multiple chains right it's like it's like you you're you live in New York I live in Paris it's you live in Berlin and uh in your home place where you live you have some interesting things around you have some restaurants some shops some like you have job to to go to earn money you know like you can build your businesses there local banks yeah local whatever like infrastructure in this place and and some local infrastructure like to get there like it's some places more efficient some some places less efficient some places you get traffic jams every day you cannot move some places you have really good traffic so like blockchains are like this some of them sometimes they become congested and everything is slow and expensive uh some of them are really fast and and reliable so um the problem is you cannot easily go from one city to another it creates some friction even if you're on in the same country like you are all of the Roll-Ups are in ethereum which is one land right one continent connected by roads through ethereum it's kind of more expensive like you don't casually go from like Berlin to I don't know Warsaw for dinner or like follow maybe like for lunch right you don't just go oh I'm gonna jump on the train go four hours there pay a lot of money just to go for like this simple lunch and then go back to Berlin you don't do this you maybe do this when you kind of have something special like you want like maybe you live in Paris or you live in even in Berlin but you want to go to Disneyland so you fly over there you spend an entire day you go on all the auction attractions and so on and then you go back so this this justifies the trip right but you don't do it casually I Roll-Ups are like the cities and if you are building a popular generic purpose roll-up with some like you know like you have something special there maybe people will will come and start living there if you give them like a lot of this generic infrastructure uh if you're building an application specific Roll-Up then you need the good reason for this like Disneyland right so what hyper chains enable you to do is instead of building your own City far from everything else you kind of build your own District in an existing City You're Building micro District which is well connected so like you go and like build on outskirts of Paris like a hub for Innovation or like hub for like luxury dining or something like this and so like the uh the the the Primitive that enables this is called a hyper bridge this is something that is only enabled with your knowledge proofs because of this partial knowledge and succinctness and computational integrity properties we don't have time to go in depth here but I'm happy to make maybe after that this discuss a lot we have enough documentation on our web page and how this exactly works just trust me like we you it's the the way you can imagine hyper chains and Hyper bridging is you have in the internet your email at some domain right and like Alex at gmail or Alexa apps cutter get um is global and I can send email from any address on any domain to any other address on any other domain at like one click or you can go from any any web page on the internet to any other webpage on any other like domain in one click through a hyperlink so the cost is always one like all of one just like the single transaction on one chain single transaction on another chain no trust assumptions no complexity like really fast seamless and and transparent and this is how this bridging is going to work between hyper chains because they will be sharing the same Bridge the same information about the whole system on ethereum and the the zero knowledge proves that enforce Integrity of messaging between them and so like everything is seamless like you're at the assets and burnt on one side minted on the other side and it's actually real native assets so this is why you you might want ZK stack as opposed to other Stacks that only give you this isolated technology interesting so it looks like we'll have to do another one on just the stack in the future um maybe Switching gears a bit what what have you been wrong about in the last couple of years oh lots of things uh in in various ways uh the building like building a startup building some technology and projects is always a series of experiments which you have to run you have to take risks and and you will fail a lot of time but you just have to be right enough to not die and just continue building uh one thing in particular uh uh I can think of is um we thought that the progress in zero knowledge proves will be slower than it actually happened I thought it will take like three four five years for the protocols to mature so we and because of this we started building a custom application specific language a DSL for for snarks because we thought it was called zinc yes we thought the generic purpose programming languages like during complete ones like solidity or rust will be too expensive to implement in near future so we started with uh with zinc which is which was known during complete you had to Define your programs in fixed size but then we quickly saw that it's actually doable to build something like zkvm and switch to it but as a byproduct we got a really smart uh and Powerful compiler team like world-class compiler team building on lvm compiler base so now we can integrate uh rust for example or other like a C plus plus code base although I I don't think anyone will be using C plus plus they have rust to build contracts that will work alongside uh contract sensility on zkc that's a pretty good side effect um I want to close off with with a question uh that I think is a bit more philosophical but maybe also uh we can quantify it but um how do we actually know we've successfully scaled ethereum like do you have any predictions or Frameworks to think about this for what the next couple years would look like this is an amazing question we actually like we had this criteria of like what is what success looks like for all the time of existence of the kissing but we just recently like two or three weeks ago we decided to articulate them precisely in a very positive like very unambiguous way and we published something called the ZK credit which is a Manifesto of values and Mission and philosophy of GK Singh it's open on GitHub for Community comments so please take a look and please engage conversation and submit prso yes perfect just Google ZK credit you'll find it uh where um we like the we defined properties that you have to achieve like I think there are eight properties including trustness permissionlessness and so on and two of them are called accessibility and hyperscalability what is accessibility it means like everyone in the world has an option has an ability to go and transact on a blockchain in an affordable manner in affordable accessible like accessible means like the the ux is not prohibitively complex if you have to deal with seed phrases people not gonna do it I'm not gonna make it or even start interacting uh if you if you have to pay like more than you know like your daily earning because a lot of people live on like really really small amount of dollars per day and you have to pay like this amount or like 10 one tenth of this amount for a transaction not gonna make it it's not accessible so we need to get the transactions like under one cent or even lower consistently at arbitrary scale so like hyperscale means uh we wanted to use the word superscale that it found sounded weirdly like just like you have conductors in physics and you have superconductors the conductors are materials that that have low friction um superconductors some materials that they have exactly zero friction so you can like heighten the energy to like current can go forever in in those circuits um this is the property of the internet like you can add you can grow internet indefinitely you can just add more servers more routers more connections more users and it can absorb like one five ten billion users arbitrary number of transactions like you don't have any inherent limits to it this is what we call hyperscalability and this is going to be completely solved within two years like this is about prediction we'll be back in two years in a little kind of contrast well Alex thank you so much for taking the time and uh thank you guys everything else 