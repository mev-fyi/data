excited to welcome abby who's going to be talking about radical and for those of you don't know uh she works at radical and uh she will be covering a history of kind of how collaboration has evolved and what a decentralized version of that feature would look like so uh without further ado please welcome abby thanks so much for the introduction excited to be here share my screen cool um yeah so again hey everybody thank you for having me here uh today i'm going to be talking about uh radical um and how we're building towards a vision of a decentralized code collaboration uh so first my name is abby uh i work on all things community uh radical so i've been around the ethereum communities and space for a bit um so i'm really excited to finally start talking to the community about radical and all the exciting things that we're building um so i think we'll have some time for questions at the end um but if you have any during the presentation my colleague elle is actually in the chat so feel free to just you know ping him and uh you can get any questions answered because we're gonna be covering a lot of ground um so today we're talking about ethereum's impact um you know if we start off with why i think ethereum is impactful i think uh it's impactful because ethereum is a platform for the decentralized internet and it's also become a really big part of this thing that we call you know web3 you could call web3 a framework a concept a religion you know whatever you want to call it but in my opinion i think web3 represents the transition from an internet controlled by centralized platforms to an internet powered by decentralized protocols now in the journey towards web 3 things are still early but we've been building and have built a lot we have really strong infrastructure developer tooling financial primitives and user interfaces i mean looking back to my first devcon to where we are now it's wild to you know see how far the space has come sure there's always room for improvement um but i think we should all give ourselves a pat on the back the vision of web3 is something that's like very real um that we are building today but i think that the thing that i find most powerful and exciting about this space is that it's an industry that is entirely online values total decentralization and is completely open source like at its core um you know we're building software in a decentralized way in an open source way um that is also going to power the decentralized internet like it's a it's a really interesting paradigm and i think it's really cool however with this in mind i think that there is this really big elephant in the room uh and i think that elephant is code collaboration you know the hosting sharing collaboration and distribution of the software that we're all building to bring around the web three vision uh and like that makes up web3's very existence is very centralized uh so before we tackle that elephant i think maybe you're wondering you know what is the problem with centralized code collaboration um to answer that i want to give a brief very brief history uh on you know the evolution of code collaboration and i've done a talk that took an hour to talk through all of this so we'll just get the highlights um but so everything in regards to code collaboration actually starts with version control right and the evolution of version control is really quite an interesting story over the years you know we've seen version control evolve actually from proprietary uh systems to open source systems but we've also seen them evolve away from these more local systems to more centralized client server models but of course everything j changed when a git was created by linus and made free and open source distributed aka decentralized version control the thing and it just took off from there and with the rise of git of course came you know the creation of github which is created as a web-based git repository hosting service you know github made collaborating on git just better right workflows around code collaboration evolved from like these mailing lists this is from the linux kernel mailing list which are eyesores so hard to understand to rich web interfaces with all of these new features and workflows that made building software together just a better experience so i feel like i have to say it before i get into you know everything that we're doing with radical um but github is really great um and we everybody on our team believes this you know github has played such a big role in all of our lives um and and and for a good reason right i mean it's like a global social network of developers working on this rich platform that's defined you know the way that we collaborate on code and it's built by nerds who care about open source and that's always kind of been at the core of the github ethos you know which is the main centralized hosting platform right now but at the end of the day it's still owned by microsoft a huge u.s corporation so that means that github is a walled garden built on open soil very similar to all the other platforms we web 3 pioneers are trying to dismantle and divest away from and so we're starting to see the side effects of these walled gardens as of recently we've seen the corporate influence of microsoft start creeping into the public eye into our everyday news whether it's from entirely banning developers from u.s sanctioned countries buckling under government pressure to shut down disruptive or challenging software like a protest application or most recently straight-up censoring repositories due to for example the recording industry association of america's most recent attack on the open source software repository youtube downloader would highly recommend everybody go check out the hacker news thread regarding this but we're seeing a lot of censorship and a lot of you know the corporate influence that microsoft has on a platform like github starts showing itself and so despite all of these examples um which are important in themselves i think that the call to decentralized code collaboration isn't just based on web3 values like the decentralize everything ethos um because again github works for a lot of people and and proposing an alternative base purely off of an ideology alone disregards uh you know the reason that these platforms like github became so important in the first place again they just made it easier and better uh to collaborate on you know some open protocols but there are real problems with centralized hosting platforms that we need to be um you know including in the conversation um you know first there's an inherent platform risk with any corporate owned platform you know as they're because they're vulnerable to censorship and usually will be continuously subjected to um and usually overtaken by capitalist means which specifically in like the co-collaboration sense uh you know these capitalist ends are often totally misaligned with the goals of free and open source communities second there's a real security risk uh central platforms as we know are single points of failure um and provide many real attack factors you know when people look at github you know you could hack the ui of github there's tons of different ways that someone could compromise you know repositories on github finally vendor lock-in is kind of this important problem that i think is more of like a latent thing that bubbles under the surface is that it's vendor lock-in uh you know all non-git native features on code collaboration platforms like issues comments reviews prs are entirely hosted on github yeah of course they're based in code but the workflows have been defined and are unique to the platform that they are on so everybody says well git is decentralized so that's my backup but what do you do if you lost all of your issues your prs your conversations you know most of the collaboration layer would be stripped away leaving only the change history of the code and also the social network on github is entirely unique to and hosted by github as well this is the same with other social platforms you know our developer identity our stars our contribution graphs um is defined by the social connection through us and other github profiles um it's not sovereign to us all of our social relationships exist solely within these platforms so these issues are real um and they're bubbling under the surface and as we see software development continue growing at the rapid pace that it is today and the nature of the digital ecosystem shifting and turning as it like eats the world um i think we're going to see these problems become even more critical points of failure if not solved and addressed um so in a world this is kind of the thesis right that i think that defines you know our journey towards decentralized code collaboration that in a world where nearly all software relies on open source code in our space our vision of web3 relies on open source code maintaining the resilience and the health of the free and open source ecosystem is more important than ever the issues with hosted platforms cannot be ignored um and so i believe that our dependence on centrally hosted platforms and corporations for the distribution of critical open source infrastructure is inherently unsustainable uh and there needs to be like a shift in narrative to prioritize adoption of decentralized alternatives um that abide by the principles of free and open source software um and web three you know foss and web3 need resilient infrastructure because we're going to be building challenging systems um that people will try to take down so this is where radical comes in uh if anybody doesn't know what radical is it's kind of like the first start of a plant so we say tis the root um so radical is a completely open garden it's a peer-to-peer network for code collaboration that's built on open protocols and it all starts with radical link which is a peer-to-peer gossip protocol built on top of git so radical link basically extends git with peer-to-peer network discovery participants in the network share and spread data that they're interested in by keeping local copies and sharing the changes of that data with peers that they track so with radical we replicate the data across uh repositories so connected repositories according to kind of like a social graph of contributors and maintainers who um you know checks out and works and contributes to projects uh so this enables source code and change sets to be disseminated according to the use and the value of the repository um so it means that more peers who are interested in a certain project or who are working on a certain project the more available that this project is made throughout the network and so this gives us the baseline of having you know a way to share and host code without relying on any intermediary since we're gossiping it through peers so with these protocols our team developed a truly decentralized desktop client for code collaboration that we call upstream uh you know we believe that building functional usable and beautiful experiences for developers is really essential and is one of the main pain points i think in the web3 space is how do we build great experiences that help people get it um and when challenging the status quo i think that that's just even more important so while we envision this application to be the main way that users interact with the radical network uh it will not be the only way you know upstream as with the radical protocols whether it be git or ethereum integration or you know radical link will be completely open source and forkable giving anybody the space to develop in their own code collaboration experience so what does this app mean for us as developers well radical uh gives people the ability to collaborate in the way that they do now on github completely peer-to-peer so this means that there's no central servers there's no corporations nobody owns radical and no censorship it'll be a truly free and open network so in comparison to other decentralized code collab alternatives like self-hosted git lab instances or something there also will be no hassle setting up you know these isolated instances that aren't connected to each other um because everything will be based on this one peer-to-peer network this uh collaborating peer-to-peer also means uh we'll be able to work securely offline so with radical everything will be local first this means that all the non-git native artifacts like issues comments and pr's that i said were locked into these centralized platforms will always be available on your machine you'll be able to use them and work on them offline and have control over them secondly everything is built on public key cryptography so this means that in addition to peer identities which will be linked to your device your code will be backed by cryptographic signatures so adding another layer of security uh more than just commit signatures onto your day-to-day code collaboration interactions finally you can own your own infrastructure you know radical as i said will be free and completely open source forever it will be technically politically and economically resilient and it will be that resilient network for code collaboration that is available everywhere for anybody no matter where you are and since it's open source it's forkable customizable people can build on it people can extend it um which means that down the line you know you'll be able to extend radical to fit your needs um instead of being locked into another corporate agenda but where does ethereum come in because you know this is a ethereum online and this is really fun to talk about so i think i want to take this section to kind of talk about what our ethereum integration is doing for radical and how we're enhancing decentralized code collaboration um with this decentralized platform this platform for the decentralized internet so it kind of all starts uh with this idea that we want to start transitioning from d5 to device so we want to design radical for sustainability because we believe that sustainability goes beyond just technical resilience as in a peer-to-peer network we think that to truly free developers from centralized code collaboration we need to build better solutions for empowering the financial freedom of open source maintainers and developers um and so when we look at ethereum we see defy and and we see how powerful d5 really is so d5 is building an entire alternative financial system in the form of like these very hyper specific primitives um that we all play games with and watch people play games with and so when we're uh building and when we started building with ethereum we asked ourselves how can we harness the power of defy and use it to empower its own maintainers and developers so by building an opt-in integration layer with ethereum we can start moving d5 to devfi or decentralized finance that supports sustainable and regenerative funding of open source software so defy kind of applies itself to any financial primitives that empower developers to control the production and distribution of their code and it's very broad but it's kind of trying to open up the conversation of what is open source and how can we truly create sustainable infrastructure that is resilient as we keep developing towards the web3 vision so let's walk through some of the things that we're going to be able to build with our ethereum integration and so the start is uh being able to have global names and attestations within our peer-to-peer network so the ethereum integration gives us a global consensus layer that kind of makes peer-to-peer just work peer-to-peer has issues um with maintaining a global identity a seamlessness layer that connects the network to one another because you are working from again peer-to-peer so by integrating with ens uh we're going to be able to empower users to claim global names and use them to be identified and discovered on the radical peer-to-peer network so this gives us the ability to connect identities through separate networks ethereum and radical um and it will empower us to be able to attach wallets and ethereum addresses to our radical profiles and whether it be users or projects um so radical will be able to access the global network effects that are so easily come by by centralized platforms when you just create a profile and you're added to another you know server um you get without the platform risk and it also empowers some really cool things when you're able to add the power of digital money through wallets and ethereum addresses and bake that into you know the code collaboration experience secondly we'll be able to experiment with organs and teams radical when paired with ethereum will create the space um for uh sovereign digital collectives which are you know basically dows uh by but with radical you'll be able to create on-chain orgs on ethereum that can be linked and connected to sets of repositories on radical this will give developers the ability to experiment with decentralized admin control and collectively govern code bases and also give them the opportunity to maintain an audible transparent history of project state on chain through a process that we call checkpointing so this is basically instead of just saying this is you know the view of the project trust the ui we're adding another layer of security into you know what it means to actually securely collaborate on a very high value project um by giving people a way to see who's contributed what is the history and how this all lines up and have that be validated on chain so with orgs through radical and ethereum we actually think that daos can access a new superpower where everything membership admin control governance canonical project state source code and just the day-to-day code collaboration is truly decentralized and finally we have radical funding which is you know our kind of catch-all term for how we're experimenting with devfi uh so radical funding will actually be these open source generalized smart contracts for experiences that empower developers to control the production and distribution of their work and this can span so far we have a bunch of different things that we're building that fall under this umbrella that we're excited to test and ship to the ecosystem but this can go from creating and distributing a monthly free and open source support fund to projects and users that you're interested in that you want to support pooling money behind issues um to pre-fund work that you want maintainers to do so giving maintainers the ability to understand what um their community members want them to work on uh subscribing by to creators to projects and users treating them like creators giving them the the freedom um that platforms like patreon do um over you know what they can offer through their code base um or even you know creating software licenses that's and ft's you know the ethereum integration kind of opens up this whole space for again how we can bake in value networks into the code collaboration experience ultimately giving radical users access to recurring and sustainable revenue streams without a reliance on intermediaries with platforms who currently gate keep access and do so actively um you know this is a very important important part of the sustainability value proposition is how can we empower you know the financial sustainability of developers with radical and with ethereum and this radical funding uh features that we think we'll be able to so um that's kind of the big picture for radical and and what comes next as we wrap up this talk is that we're actually um pushing out our beta very soon um and we really want to get people using it so if you are running a project working on a project uh or just want to try the product out i'd really really reach out to me on twitter um because i'm going to be onboarding folks throughout the next couple of weeks as we start to push something public um but if not you know stay tuned because uh i think that decentralized code collaboration is definitely here and ready and we're really excited to you know put this out into uh uh the world and specifically into the ethereum ecosystem cool thank you thank you so much abby for uh for that amazing talk we got a lot of comments on how uh well put together everything was on the presentation side so i just definitely want to relay that to you um we we have a 30 second delay between people hearing this on youtube versus me saying this now so for anybody who's going to hear this in a few seconds let me know if there's any questions and i'll reload them to uh to this call um i have a couple questions that we had in mind uh just from uh kind of hearing everything and now what i kind of want to understand is uh you mentioned that the beta is coming soon um kind of is there is there any sort of problems that still need to be figured out or is it more about just kind of focusing on the protocol level and then the ui and the desktop app but like are there any open challenges is this an extension of git entirely and you're trying to move the data and kind of separate those out to be a bit more decentralized or is it more about uh there's still some open problems that will prevent this from kind of being true and they're being worked out kind of where do things stack on that level yeah i'm definitely tons of things to figure out i think that um the beta is the first step towards getting to you know the vision of a decentralized code collaboration experience that could you know replace a centralized experience and so it will be a progressive um you know journey uh our beta will be the bare bones of sharing and hosting and creating identities um but will give us the space to start testing stress testing the protocol and the network um with real data and real users and start having their input um inform where our roadmap goes next and so we plan on doing um sequential releases post beta that start introducing more of those collaboration features um and and using the feedback that we're getting from that initial usage with these early adopters to inform that but definitely tons of stuff i mean this is um we talk about this a lot is that radical link is very much so a research project uh you know our our we're building this amazing beautiful experience but behind it is like a very intense research project that is going to take a lot of maintenance and a lot of work to become you know the resilient um network that we envision it to be um and so everything is a journey towards you know that absolutely i think it's one of those things where the the effects of all that initial work uh compounds really efficiently and really well so you're gonna have to figure that out just once and then uh you can reap the benefits uh in perpetuity um that's amazing uh the i guess the other kind of question i have is um kind of as as you are building um the protocol the desktop app and sort of talking about the risks of the current models that we have in this space um i'm curious like what the reaction has been from uh the people you've talked to who would be ideal users here and uh and just generally like a kind of what point do they prefer convenience over other principles like and kind of how do you think about trade-offs on that or like how that can be extended um it's a very opening question i can have some specifics there too but uh we're not just going to start the conversation there yeah absolutely um so i think that oh there's i think two answers that i have to that question first is that um in our conversations and and in our approach in general to radical i think the point isn't to replace it is to enhance it is to provide an alternative um and so i think that whenever we have conversations although we do frame uh in in contrast to centralized platforms it's all about how we can build a great experience in the space that we're given right um github for example as a platform is a huge company a huge brand i don't think that a direct competitive approach to you know radical versus github will be productive for our users and for us so you know our goal is to um tap into who understands his problem who experiences this problem and start building an experience for them and start understanding you know where does decentralized code collaboration lack right now and how can we be solving those problems um because ultimately if we do that we will be creating an an alternative to centralized code collaboration but in a more directed way so i think directing our energy towards that instead of um pitching it again as you know in an operation exactly and then the second um answer that i have about how people react i think it's been really interesting to see how the is it the sentiment around um the centralization of co-collaboration is uh has been um developing throughout even since i started that radical honestly the more news that comes out the more you start to see people waking up and and recognizing um the reality of the situation and specifically just recently with this youtube downloader attack it's it's wild because it starts getting people who didn't think about it before saying why is the riaa allowed to do that um why is this direct attack on source code able to happen and why is github standing by it um and so i think we're just going to be seeing more of these situations um that start getting people you know you don't you don't really care until something happens to you that's usually kind of uh so i think that now in these conversations it's been interesting to see how people have been evolving who maybe i talked to before and you know just brush it off who are now kind of you know starting to understand it and who are interested in exploring alternatives no absolutely and it's also one of those things where if you work towards um a model where they don't have to think about what's happening in the background and from the screenshot it does seem like they will not have to think about what's happening behind the scenes uh they won't notice and they still get the benefit so seems like everything seems to be on the right track um one more question from the chat uh and that is uh has radical considered making a doubt mode package for an easy deployment on the platform and uh so that others can uh also do this thing although it feels like an advertising i like it i always advertise that node whoever asset should reach out to me and we can talk about it we haven't explicitly thought about it but it could be super cool to explore that um i think that getting people using it but then also getting people in the ecosystem building on it is uh number one definitely on things that i want to do so open call reach out to me dm me um we also have a discourse which is radical.community um feel free to chime in there um you know we can talk through it well we'll tell jeff to uh to definitely do that um and i think the last question i had for you which i feel like you sort of already addressed but uh how can people sort of get involved what are some of the things you need help with or uh or anywhere from data testers to feedback to uh contributors how can they kind of find you and the project yeah so um you can follow us at radical i think it's underscore xyz uh yeah it's definitely at radical it's in my profile and my uh handle is on the presentation at abby underscore tickle reach out on twitter follow us our beta when it comes out try it and let us know what you think this will definitely be something that's a collective journey that a shift in a narrative something that we all need to build together so we're going to be looking for as much feedback and as much users as we can you know as we start going into our you know release timeline there's already excitement on the chat that people want to use this thing immediately so uh with that i want to thank you for uh 