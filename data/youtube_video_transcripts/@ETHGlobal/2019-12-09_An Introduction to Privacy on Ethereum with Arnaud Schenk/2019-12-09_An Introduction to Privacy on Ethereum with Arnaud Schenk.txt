and cool my name is arnaud I'm tech lead at Aztec Aztec is a privacy protocol in aetherium and we're really focusing on making hopefully privacy as easy as possible to integrate and to add to adapt and exchanges and all these kinds of things before we get started we have a discord on which you can ask any questions we also have a channel on the eath Waterloo discord so if you're free to join either our own discord or just post on e to our lure on on either and we are going to be giving out prizes so we're gonna give a thousand USD for the best overall use of a stack and and we're gonna give another 500 USD for the most surprising you've use of a stack there's a full disclaimer that we may at any point choose to divvy up these prizes differently depending on the number of submissions and and we may choose to give up more money than we already or then we planned so yeah um yeah like I said I'm Arno this is Leila and that is Charlie we're gonna be our around all weekend if you have questions about Aztecs specifically or about privacy in general where these were coming we just we've just started and yeah please do please do come and talk to us we're very happy to chat about everything privacy the most the most important question I guess that we we start with initially when we were starting a stack is you know why why is previously important because I think as a space it's not really a question that most people worry about too much and I like to think about it as hypotheticals so does the cashier at your local supermarket know how much money you make every month does your boss know how much money you're putting away every month and might they use that to reduce your salary because if you're paid in crypto they certainly do and and I think that's what most people underestimates with mass adoption of crypto is it's not only state surveillance warns privacy it's it's just surveillance of any kind it's your colleagues being able to say I'm paid less than my colleague for the same work it's your cashier being able to say that you're you know you're not paid a lot in your current role or whatever it is it's really it's really just surveillance of any kinds that I think is is a is going to be a big hamper to mass adoption the problem though is previously it's pretty hard for users and for developers and for users previously usually means weirds you X flows usually means keeping track of Secrets like if you've ever used tornado cache or any kind of mixer and you have to kind of keep track of this long string of characters that you can't lose otherwise you lose your money and it means for it means waiting for zero knowledge proves to be constructed and sometimes it means waiting like half an hour to an hour for these your and Oscar's to be constructed for developers it means something pretty hard to build and pretty error-prone and if you mess up basically your users can lose all their funds and it's has pretty high overheads if anyone has heard of trusted set ups or even just the the complexity of auditing is your knowledge code it's not it's not the nicest thing to go through feel free to come in or not his loss and we think that privacy should be pretty easy and we think that a lot of these costs so trusted setups and complex audits should be something that the previously protocols take on for developers what we're building and what we're producing is an audited protocol no application-specific trust is set up and I can go into what that means a bit more at the end of it and pretty high level API so make common flow pretty easy and so we're building a toolbox of plugin plays your knowledge proofs you can build it straight into taps you can build apps around these are not groups and these your knowledge proofs are made to be usable in the apps in an interoperable way so something again people don't really or haven't really thought about is if you build something with traditional is a case narcs just by their very nature two circuits that are ever so slightly different or very hard to make compatible with each other so if you build anniversary 20 replication in zero knowledge and then the RC 721 replication in zero knowledge those two things are pretty difficult to make work together and we think interoperability is is a pretty fundamental thing in the space and gas efficient so after Istanbul to make a private transaction it's about 200k gas and we have to make that cheaper over time so we've been working pretty hard on making using a stack as easy as possible for developers and I'm just gonna take you through yeah just a quick show and tell of what you've been building and how you can use it this weekend and something that we've been working on over the past couple of weeks is our SDK and which you can add to your DAP with just one line of JavaScript it's literally that that gives you everything you need for client sides use of zero knowledge and with that you can basically make any RC 20 into a zero knowledge asset you can send that asset around you can make that back into public again and and you can use slightly more complex proofs for example creating proofs that some zero knowledge notes are larger or smaller than either public amounts or private amounts you can mint burn on Zach assets like you can on the IRC 20s and you can prove that in a sec notes or zero-knowledge notes is a percentage of some other notes and the kind of flows that you can build with this is for example with the last one proofs of collateralization all ins your knowledge you can build a adapt which is just a payment app but so you can say for example I'm going to pay you for taking me from Toronto to Waterloo but before I accept your proposal of this this right you're gonna have to prove to me that you have enough funds to pay me when the ride is over but of course you don't want the person which is going to be who's going to be driving you just have access to all your financial data so you can very easily prove that you have $100 without having to prove to just show the world how much money it total you have on chain again we've worked pretty hard to make this as easy as possible you don't have to use a domain-specific language like socratis or anything like that to use a spec it's literally a smart contract call you pass in the proof data that our client side code gives you that gives you back an instruction objects which is pretty easy to deal with in your smart contracts directly so if you have a proof which says for example I'm gonna transfer you a couple of zero-knowledge assets the instruction said they're going to get back is create these notes destroy these notes give them to these addresses on which you can add your own custom logic for example whitelisting for users there's no particular secrets to keep track of that's all abstracted by the SDK proof construction is in the order of 10 milliseconds which is basically instant and again the low gas costs after after Istanbul mean that for the first time these kinds of private transaction on a theorem are in the realm of doable for for users and yeah so it's pretty easy to get started the SDK that I spoke about comes with Doc's that take you through a starter kits which show you basically everything you need to actually get started with your and all transactions on a theorem and that QR code takes you to it that Tiny's CC URL as well and we also have a full spec for our protocol and that you can go through to create your own smart contracts to create your own client-side codes to create your knowledge that's the kinds of things that we've seen built in the past to give you an idea and is everything from as you say K Dow where every vote is in to your knowledge which helps with both both corruption protection and and just just collusion and to things like proving in all knowledge at the stations of identity so the idea being you can prove that you went to a particular University you can prove you have a certain age you have a certain net worth to institutions on chain those people can give you services only if you can prove such facts but they don't get access to any of the underlying data and as a last bit and this is an alpha demo so I'm just going to show you basically what a user interaction with the SDK is from account creation all the way through to sending money it's going to be on ring B so no promises on speed and just because of the during the network and then I'll open it up to questions actually while I get set up is there any questions about privacy on a theorem or privacy in general cool okay and zero knowledge in general is the idea of being able to prove a statements without revealing any of the inputs to that statement so you can say for example I'm going to transfer you I'm going to create a transaction which is in our world a you TXO transaction so very similar to Bitcoin where you have input notes and output notes and the thing that you wants that transaction to enact is your input notes or equal to your notes so you can you can't double spend and all that kind of stuff so your inputs to transactions are equal to your outputs and to do that you need to be able to prove that every the value of every notes sums on the input side and the output side are equal to the same thing and on Bitcoin for example that's really easy because everything is just an integer right so you can just say ten plus four is equal to 8 plus 6 right it's the same thing in when you're trying to do things ends your knowledge you want to be able to say this encrypted number plus this encrypted number is equal to that encrypted number Plus this that pose that other cryptid number and zero knowledge proof SAR basically that they're basically the idea of being able to create statements or creates well proofs that you know some kind of private information and that that private information abides by either a certain program or abides by a certain equation on all without revealing the actual inputs to those things does that answer your question and so yeah you can basically get for example privacy without compromising on consensus so you can have every transaction on Bitcoin or every transaction on if there are all the inputs be completely private but still have the strong guarantees of the blockchain yep correct correct yeah exactly so you textures have quite a few benefits when it comes to privacy and when you transfer so you can you can basically make an e rc 20 into an asset zero knowledge asset and and in that world yeah the main difference is basically your balance instead of being a balance is a bunch of you Texas where is all right so part of that very thing is effectively your your balance is not given that it's not an accounts an account based model and given that it's a UT exobase model you actually have quite a few different objects that you need to keep track of when you're dealing with a stack and our SDK the purpose of the SDK is to abstract that all the way from both the developer and the user so sorry I may need to I was giving demos and that ended up messing with the demo script and and so the SDK I'll show you through the the methods but basically allows you to do deposits to do sends and all that kind of stuff without the developer without the user worrying about you TX oh and because we think that fundamentally we need like I said at the beginning we need to make previously as easy as possible and that also means that we need to get rid of things that are technically very advantageous but that fundamentally diminish the usability of privacy so hopefully sorry this is loading a JavaScript mmm bundle on the conference Wi-Fi so I'm not sure if the demo gods are going to be with me later do you have one running on Ganesh otherwise what do you mean yeah so the spending key of these UT EXO objects is always you're a theorem private key so you don't have a different account for a stack transactions we do have though is for every notes you have what's called a viewing key that viewing key allows you to see the value of the notes and it's an input to prove construction and these kinds of things and that is generated through some kind of not some kind is it's through defeat diffie-hellman key exchange so you can always basically generate it if you know the recipients of the note and the sender of the note yeah so basically this the way to think about in in this first version of a stack can you yeah the effectively underneath it all this secret this shared secret this viewing key and that is just that just needs to be quite a large random number and that adds randomness to something called bunny boy and signatures and so we we don't use a case narcs which is where before Universal say ZK snarks came along we can have basically a jernard system with only one show setup where everything is compatible with each other you can easily trade assets with each other etc but to do that we needed yeah we built these signature objects component by own signatures and to and effectively make the use of these bona billion signatures without revealing which one in a list it is you need to add randomness to each one and that's where the viewing key comes in you probably need to install some things are gonna pop up and you're gonna have to install it yeah correct so the SDK basically there's a there's a bunch of proofs so we have seven proofs in total that allow you to do custom flows there's quite a few of them which we think most users are probably not going to interact with the SDK gives you kind of four most use cases or really really easy API where you don't have to be deal with you text so you didn't don't have to deal with notes or anything like that and then gives you access to more advanced proofs if you so if you need them but fundamentally the SDK is about abstracting away the hxo model more than anything else and and then you can you can kind of break out of that model if you want to do custom proofs yeah so if I go back actually I'm not I'm not showing the presentation anymore but for example and in the SDK deposits and withdrawal we were able because the the parameters are pretty standards in those proofs we were able to I think we're about to get help we were able to basically abstract away a lot of the of the options that you typically go that typically go into proof construction and you need to click allow I think sorry for having to switch laptops with you and so you you basically have simplified parameters in and like deposits and withdraw if you want to do something like range proof there you break out of the SDK a tiny bit you go into some advanced proofs and the SDK will still help you get access to notes for example that you need to use within this range proof but the parameters are a slightly more advanced cool and so this is part of the demos demo scripts that we that are including in the docs so it's a basically two line run that you can have to get access to SDK as it stands and like I said it is it is alpha software so don't deploy this in production if you even have the inkling - but if we give the Wi-Fi a bit of a bit of patience so what Lela is doing right now is some some set up so it's just the starter kit it will deploy in the RC 20 which you can mint on that's just a standard DRC 20 will then deploy as a key assets which is zero knowledge version of the ERC 20 it has confidential approved confidence transfer confidential trust from and once that is set up you'll basically see [Music] different proofs being so it deposit withdraw and sends being available so right now there's a balance of two hundreds in the ERC 20 in the public token and the first thing we're gonna do is just make some of that balance into private assets so if we it's say but 50 in there that will create five notes basically that's some 250 total and you'll see the right so from a user's perspective a deposit into the zero knowledge world is just this small pop up SDK this doesn't have custody of your public assets this is just again abstracting away these notes so meta mask is still your custody provider you still have all your assets and now you still have your private key in there you didn't never have to export it and as you sew in in that flow I should have highlighted it but it was it was fast enough to miss it is you create as you're an arch proof you send that proof to ganache and that gets validated by what we call ace and then those in the instruction said that I talked about gets sent back to the Z key asset and this aks it decides what to do so now that address as your X e 207 has in private a balance of 50 if you go on the network this occurs on you will know that 50 has been deposited and because this is the first transaction that 50 can now be sent to any aetherium address but you won't know what each note is worth basically that person can then withdraw whatever notes they gets in back into public if they if they so desire but again the the transaction themselves will be you won't know the amounts being a sense unless there's a conversion back into public correct yeah so the first version of mass spec is just amounts something that we released a month or so ago is something called Punk so one of the big kind of design constraints that we had when we started is one proof construction needed to be fast enough for a user to basically not notice it and seconds there had to be this interoperability so everything from grass 16 basically just was out of the window and it's what led us to not use snarks in the first place but with universal now basically the next version of the proofs that we deploy it'll be the same protocol just new proofs we'll add a non MIDI so in that world you basically have full privacy right now it's it's really just the amounts being being headed so yeah hopefully the docs will speak to to you about like how to do this better than I could but effectively this what what just happened is you adding privacy to your app so if you want to build adapt with a private flow it's literally one line of JavaScript and a couple of deployed contracts on ganache which are just handled by the starter kit and you can you can effectively just have privacy available to you cool and I said at the beginning that my talk was shorten sweets and I meant it it was a short and sweet talk and this is the kind of stuff because it's ever so slightly difference to the things that you've dealt with if you've built on a theorem before like so it's not an account based model it's in zero knowledge or like kind of stuff the best way to get familiar with it is just to play around with it and I think we have hopefully made it as easy as possible for you to just tinker with it as possible but if you get any questions if you're not sure how to proceed we're gonna be hanging around the whole weekend we're gonna try to wear the same hoodies along the weekends but they might get dirty so try and memorize our faces somewhat otherwise just hit us up on discord cool [Applause] any last questions before I leave the the next person on I'll take it as a compliment to my clarity then have a good mind guys 