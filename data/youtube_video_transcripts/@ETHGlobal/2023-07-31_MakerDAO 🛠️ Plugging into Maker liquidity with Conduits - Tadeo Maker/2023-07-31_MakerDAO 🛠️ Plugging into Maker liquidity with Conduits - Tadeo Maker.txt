foreign [Music] today I'm going to tell you a bit about conduits I'll do a brief overview and then I'll have Lucas protocol engineering and the team I go over a more like the details for any questions you have please just raise your hands anytime great um so uh from maker we've always had predictable rates something I don't think we've really pushed this narrative that much so instead of having variable rates that change on a block by block basis or fixed term rates that we're seeing now coming from other companies like element and sense makers always had governance the defined rates that change uh not often but they do actually change the nice thing is when they do change it's through a governance process fully open and transparent you get to see that process and also once that is voted on there's also time delay so you always know exactly when they'll change and actually what will the new value would be so before you could only access the those rates through megavault or the what we call then cdps uh nowadays we've kind of evolved to be able to offer those rates for by our different users so if you're a borrower nowadays you can go to smartland say our new Landing Market uh we're able to deposit your crypto collateral and actually get uh that predictable rate um you can also be a depositor and that case you'll be depositing your die in the die savings rate um where you'll be actually earning that that yield um and we also have a ERC for his 4626 representation of the DSR called as die and then finally the one I really do want to talk to you guys today about is the conduits so conduits are a the converted as like an adapter between maker and the rest of the in of the ecosystem a way for Builders to actually deploy make your Capital directly into the protocols whether they're fully on chain or a mixture of of chain with wheel asset protocols for example so just a little overview of the change of maker rather than just being a single entity or single protocol now we kind of have like two levels we have maker on the top and then we have sub-dials the sub-dials are the entities um the on-chain entities that will essentially be providing this uh liquidity to your underlying protocol as you can see here on the on the middle layer you we have spark land um we have univ3 LP token as um positions uh as well as any other protocol they may want so how do sub-dials actually pushes liquidity into the market um this you can see in green we have on the left hand side of that which is the core accounting model from maker this is the old school system that is still pretty much still there um and then we have all this new infrastructure created to be able to support this uh delegated Capital location we really want to talk about though is the on the on the right uh the actual conduits these are contracts are actually fairly simple um that will they will be able to like standardize the way that maker provides liquidity to any broker on chain so you can think about as adapters I quite like to think it's very similar to how Unison was developing hooks makers developing conduits so let me show you this is the main interface as you can see it's extremely simple and really the most important thing that you need to really care about is inheriting this and it as you can see it shows the depositing withdrawal function um specifically for the hackathon there's other stuff that we're not really needing to demonstrate effectiveness of your projects including in the different permissions that we have let me show you all the different permissions that we have coming from the roll Singleton and also from the buffer contract now you can you can have any variety you can plug it into anything pretty much um one of the most complex things you can apply it to is wearable assets because you have that off-chain component in that case here's an example uh interface that basically inherits from the the previous one where you can see that I want to show you really the request funds function essentially a way of asking uh the the external entity uh basically saying hey can I please have my money back and then because they they'll do their own off chain stuff and then actually basically pay back the money they own um I just want to finish before uh Lucas gets on top and saying conduit Builders are part of this ecosystem it's not just sub-dials and external Brokers uh this middle layer in the middle is um it's a group of Villas that we actually care about a lot and we want incentivize feature building so now I'm just going to bring Lucas up and it's going to walk you through a couple examples um and if you have any questions please raise your hands actually before you do that any questions on the overview well good awesome I will stay away all right hi everybody my name is Lucas I work as a smart contracts engineer at Phoenix Labs I'm currently working on uh one of the conduits um so just before I go into that I'm actually just going to bring this up again really quickly so one of the really exciting things about uh maker Dow where we're headed is this introduction of sub-dos um and the ability for them to allocate die into D5 into real world assets and to expand the supply of dye and earn a yield on it in a really conservative and scalable way and what I find really exciting about this is the introduction of conduits so there's many different ways to deploy dye into the defy ecosystem you can Market make the peg you can add liquidity to a Lighting Market such as spark you can deploy into real world assets there's many different ways to earn yields and what's really cool about this architecture is that individual developers can develop these conduits themselves and propose them to maker governance and if they are deemed to be scalable safe and reliable they could be integrated into the core maker system so what I'm going to do now is I'm going to bring up some code that I'm currently working on so you can see this is my Ranger conduit which I'll turn off my coverage monitoring for and also bring up the interface so um yeah yeah is this I'll probably do one more actually yeah there you go um okay so what sodeo brought up was the allocator conduit base interface and so this is what matters for any new developer working on a conduit so essentially you have just a deposit and withdrawal function in terms of adding funds and removing funds from the conduit and then you have two view functions the maximum amount that you can deposit and the maximum amount that you can withdraw at any given time So within that um the bounds are pretty open uh anyone who's working on a conduit can develop any kind of strategy that they want as long as it adheres to this interface and it's important to note that I can deal in any asset that you like so a common use case like for example what I'm currently working on is um like usdc is typically what's deployed into real world assets because it's easily convertible to Fiat so um you can deal with multiple assets within a single conduit which is important to note um so for my example I'll just open the interface keep it simple so um my conduit that I'm currently working on is dealing with real world assets so the key difference there's two sort of approaches that you can take to a conduit you can either take the deposit in and then move it straight into a protocol or strategy or whatever it is a good example of that is a spark conduit so if we want to Mint die move it through a conduit deposit it the deposit function will actually atomically perform the deposit into the sparkland protocol and so the die will just move through the conduit into that external protocol and live there and the positions will be tracked within the conduit um however for real world assets it makes more sense to actually temporarily hold the custody of the funds within the conduit and allow for the arrangers the real world asset entities that are deploying the capital into into treasuries or whatever it is to be able to come in and have a common place where they can just draw funds and allocate them um and what's interesting about the arranger conduit is that it tracks positions for multiple um entities using the same contract so what this means is that for multiple allocated hours they can all use the same conduit and the real world asset arranger that's dealing with this conduit just sees the aggregated available cache to be deployed they can withdraw that deploy it into treasuries and then add the funds back as they're requested by each of the individual allocators and they can just come in and take their funds so all of the position tracking all of the current outstanding positions all of the relevant information to easily parse out all these transactions into dashboards or whatever it might be is all going to be available on chain through these condiments which is a huge improvement over the existing real world asset system where a lot of this stuff is is done off chain so that's that's one of the big benefits of using conduits um I'll stop there before I go into my testing Suite to see if anyone has any questions any questions about related to the hackathon building a conduit how to get started sorry can you speak oh there we go just around like some practical stuff work and we find your repo and um those type of things yeah so today you have some links that will be provided I think yeah um no don't worry this but yeah um everything is in the each little dashboard uh there you should see a link uh to an um to basic hackathon bounties and you have like a in-depth description of all the different assets that you might need for congress as well as the example uh that actually that Lucas is showing now on screen yeah so you can come on in so I want to stress as a like from a hacker's perspective this is genuinely one of the most exciting opportunities to write code that could potentially manage very large sums of funds uh very quickly um the maker system won't you know discriminate between any sort of developers as long as there's good code that is well tested and has gone through the proper due diligence process has been proven out has been audited whatever it is um it will be considered to be integrated into the core maker system and it's a pretty rare opportunity to come in as a as an external developer and contribute to such a substantial um you know system and which we'll be allocating massive amounts of capital um so if I if I was a hacker in this hackathon I would most definitely be working on conduits because I think they're extremely exciting um so regarding the testing I am working on like production level integration testing currently so I've done more than what's necessary for the hackathon the scope of what we're defining in the hackathon is going to be to deploy a conduit um and then create you can just deploy your own erc20 asset in fact that's what we actually recommend doing um in place of dye or usdc or whatever and um regard like permissioning um we all we want to for the scope of the hackathon eliminate all of that dependency just so that we can focus on the core logic of what is actually happening within the conduit realistically all of that um Access Control logic is going to be relatively similar across all the different conduits so it's not necessarily like Innovative to be implementing that during the hackathon so we want to we want to remove that from the scope and just make sure that um what you guys are working on is what's important which is the the novel um deployments of funds so just a really quick example of a test here is uh coming in minting some funds pranking as the operator this is Foundry if you guys are familiar uh approving asserting some balances asserting some State performing a deposit and then making sure that everything is uh being updated both within the asset and the conduit contract state um and what I would recommend if you're doing any sort of like protocol like an example is deploying into spark like I would recommend warping through time to demonstrate the accrual of yields through the protocol protocols that have time basio components any demonstration that you can prove out that yield is indeed being generated if you're using D5 protocols I think it's something that I'd I'd recommend but real world assets are definitely also on the table um so it's really it's really open-ended to whatever you guys want to work on any other questions yes so I think part of the requirement of the hackathon is to deploy to gorley is that is that true oh no it's not okay so because yeah I'm working off of a local Fork of mainnet um that's totally viable if you want to do that in fact we recommend it um if if uh if you want to be testing against you know production deployed contracts I think it's a good idea to Fork mainnet it's a good idea to to get into Foundry if um if you guys haven't gotten into that yet for for testing as well it's really easy to Fork Networks okay I think we're all set unless there's anything else no all right thank you [Applause] 