hope everyone's having a good time hacking so far i know i know it's a big hackathon but uh it's one of my favorite one of my favorite personally so excited to see some fresh faces and some returners in here uh really really glad to see everybody and again i know you guys probably been to some of our sessions so far but thanks for coming back um we are joined by harsh from epns the the founder and you know the main guy i i you know i could probably give him an intro but he can probably give a better one himself so i'll let him step and do that we will be taking questions right at the end of this session so if you guys want to pop some questions down in the chat he'll get to them right afterwards but other than that man take it away the floor is yours awesome thanks luke and uh yeah this is my favorite hackathon as well i actually have a slight bite this is like the most favorite hackathon for us but hey everyone uh i'm harsh uh founder and project of epns or ethereum push notification service uh this is a 30 minute workshop uh hopefully we can get everything done in 30 minutes uh but yeah uh we will go with uh we will go very quickly about the bike uh about the water dubai of epns then how to build the notifications including your channels and everything else so that you can deliver notifications to the wallet addresses uh then it's about price and grants and of course after that it's question and answers so let's get started uh of course we always start with some good vibe video so i have that right over here awesome hope you guys like it uh back to the deck so yeah uh first first of all nostalgia time so uh the reason eat global healthy is our favorite is because we started from uh hackman 2020. uh just like you guys we just uh had an idea and we built it out and because of the love we got from ethereum community and uh of course from the global family uh here we are so yeah cycle of life for us uh but yeah uh diving in so uh exactly what uh are we solving over here well basically we are solving the missing piece of that tree uh so just think about it uh in web 2 whenever we are waking up uh we usually have a look at our mobile phones and we have notifications from everything or every app which we use in the group right so it can be about uh notifications of your important emails it can be notifications about any transaction you do any paypal or window payments uh it can be about any social networks which you go into or even when you're doing whatsapp it's like just like notifications which come in and that's how we talk uh so yeah that's that's basically that too but now when you come to that tree what we realized was like everyone went for speed scalability and security and that was really important but with that invention or innovations on that a lot of things uh started to break up because you know no one really uh paid attention to the communication there and because of that a lot of problems occurred uh for example if you are into d5 your loans were liquidated and you were not able to get to know about it if you are into ens your domains will expire you don't get to know about it if you're into governance or good proposals they come and go you don't get to know about it and the reason for that is there was no communication there for battery which means that uh there was no way for an app or a protocol or a service to reach out to a wallet address and say hey something of importance might have occurred to you and what you want to do which is exactly what apns was meant to do but yeah before that let's quickly elaborate like all the problems or where communication is needed so let's look at uh d5 first because of course it's happening so d5 uh again as i said long liquidations they occur and there's a broken interface where then uh actually for loan declarations there's no interface like there's no way you can know about that your wallet address loan will be liquidated uh right now uh and you know that that is not the norm in web 2 whenever a bank liquid liquidates so when you go on a holiday you don't return back from the holiday and the bank says oh no you were gone the house is now us but yeah in d5 that's a scary possibility uh same thing with farming like farming epochs uh the more you farm uh the less we are aware like what epochs have occurred and whether our rewards are available to claim or not uh and you can extend it uh so much more it can be interesting and it can be uh it can even be uh a new stablecoin uh attachment that has been made for the new world strategy that has been made again uh you as a very polite address uh are not able to know about these things because there's no way to communicate that to you or there was no way to communicate that to you uh same with the doubt again there are a lot of governance that comes and go and people usually put it on twitter but again that's that interface is broken because just think about it when you are on twitter you are talking to each other through twitter usernames when you are on whatsapp you are talking to each other on whatsapp usernames which are phone numbers uh when you are on web3 with your wallet address is actually your username and that's shared but yeah no one is talking to them so that's that's what the problem is again for the same thing with nft so yeah what is the solution well of course uh the solution is uh ubns the baby solved it was by creating a decentralized communication protocol that enables any lab any front end uh any protocol uh or any backend to send communications that are tied to a user wallet address uh this is done in an open gasless and multi-chain way and also platform agnostic free the idea is that this is an open communication here and any crypto front end can then tap into this network and can ask you know all the communications uh about a certain wallet address and based on that show it to you regardless of any crypto content where you are logging in from for webtree so yeah that's that's the solution very quickly uh how does it work so yeah what we have over here uh i mean epns has three ecosystem cogs uh the first is eps code that's recites on ethereum's it basically any service that wants to send notifications they have to come and register themselves over here uh this this epns code is essentially responsible for governing everything then on the right side we have something that we call as epns compares they are made of two different parts one is the gasless epns sdk so if your the idea is if you're on a back end or adapt you don't really need to pay yes what you need to do is send these notifications which you uh will be forming using eip 712 uh to our push notes and that will be picked up invalidated and everything will go on uh the second layer on this is uh something which we call as epns.com middleware smart contracts and these are deployed to all the teams that we support we of course support evm as well as non-evm chains uh but the idea is if you're the smart contract then you can basically interact with this smart contract and send those communications out i already mentioned push notes but your push notes basically form the heart of the ecosystem uh basically what they're doing is like push nodes are listening to all the communication that is coming from epns com once the communication comes it quickly validates it through epns code and if everything looks good uh it basically admits it into the network and right after that any crypto wallet and crypto content can just tap into the network and can display these notifications out so yeah that's the what and the how uh let's now quickly type in on how to get the workshop done and just for fun i am going to start the timer because i want this to be done in less than 10 minutes i know that will not be possible but let's have a go at it so yeah the first thing which we need to do is of course go to staging app or staging dash app.epns.io and we need to create our own channel uh how do we do that well the very first thing we need to do is get some ether because of course will be required to create a channel uh i want to do it like uh completely uh from the scratch so yeah this is heat build i am just creating a private key which i will just uh import in my metamask account and yeah once i've done that i can just go to any faucet and i can get uh that ethereum but uh uh you know in case you want we have uh epns uh uh uh channel the squad channel on youth global so you can just come and ask us about providing uh some common meat to you uh which is what i'm going to do i already have some coconut heat over here so what i'm going to do is i'm going to transfer 0.18 to this newly uh created account and while that's happening uh we very quickly go back and we'll see exactly what we need to do so yeah the first thing like epns code governments and any service that wants to send notification they have to create a channel uh which is exactly what we are going to do over here as well so let me just log in to the newly created account connect reload that app you just make sure everything is proper we go to create channel now we have the teeth we also need to meet some dye we basically state 50 day or so to create a channel that basically is a form of civil resistance and of course it enables some cool things but we can skip that for now right now i'm just minting free diet uh right after free diet i do need four things to create a channel uh the first thing is of course uh epns logo or you know your channel logo which is 128 px by 128 px uh hopefully the transactions will not take that long i think they're already done so yeah uh i already had a logo for you global so i'm going to use that amount state 50 right i minted that as well so i can continue uh then i do need to put in a few key things about my channel so let's say we want to name this channel uh we are multichained so polygon is something that we are already getting deployed on uh in this case because we are probably going to interact with the atm net so i can just copy paste this address and just uh use polygon as an alias uh but yeah in essence if you are creating something at polygon then the polygon address is what you are going to enter over here uh then after that i'm just going to name this this is my youtube channel uh and yeah i will have a call to action link which is a url and that's it all i have to do after that is uh now basically in the background what is happening is like your json file is generated of the channel it's getting uploaded to ipfs after that there are two transactions that we have to do the first is approving the time so that it can be deposited in the smart contract and right after that it's about contract interaction so yeah i'll confirm that and hopefully everything will go super smoothly and the channel will be created uh very very shortly so the one thing that you have to remember is like once you create the channel it might take 30 to 60 seconds before the channel is actually shown on the front end and that's because uh the ipfs period which is getting uploaded uh it also needs to be cached and by the push node so that's why it takes a little bit of time but yeah while this is getting loaded uh what we can do is uh we can uh oh it's already loaded so awesome so yeah uh let's look this this is your channel uh now we are going to look at some notifications so uh of course notifications like sending is one thing and receiving is the other thing right so uh to receive it i am going to basically go to eps dot io i'm going to go to developer docs uh developer docs sending notifications and testing send notifications so we have all the ways by which you can test your notifications out in this case we are just going to download this extension the chrome extension uh we are just going to add this to chrome it should be added all right and then i i'm going to pin this just for making sure that it's available uh after that i do need to sign into the chrome extension using my wallet address so i just pasted that and yeah that's it now i'm all set to receive notifications let's see how notifications uh can now be sent across so let's see the manual method first uh over here because now i have a channel i can basically go in the channel and send a notification out one thing to remember is like whenever you're sending a notification the wallet address needs to be updated to that channel because i've created this channel i'm automatically opted and that's why i am able to receive notifications but yeah in case you want to receive notifications from any other channel you need to open which is a gasless intent uh again on erp 712 that is getting sent to push notes and once that intent is recorded only after that uh point of time a channel can send notifications which will land in your inbox so yeah going over here let's send a notification a broadcast is a notification that gets sent to all the people or all the subscribers of that channel who have opted in a subset is just for a mini set of all the people that you want to get the notifications to and targeted is basically just one person so over here i'm going to do targeted independent as well this means that the notifications define how the content uh will show them up uh so in this case what i want to do is i want to basically send a image with my notification as well because that's cool you can also do call to action subject youtube videos or whatever you want so over here i'm sending a notification again in the background everything is getting uploaded to ipfs adjacent payload is generated which is then recorded or you know which is then uh sent to the push nodes and after that uh the notifications are sent uh i think because i'm recording so the notification uh will probably not uh be shown uh like the push notification will probably not be shown because it's a screen recording but yeah uh if i go over here you can see that the notification is already uh and they have already made its way not only that we are platform agnostic so any content can show this out which also means that uh wherever you want you can see these notifications up so yeah that's basically creating a channel and sending a manual notification but when you are building some awesome projects most of the time you will be doing the this via automated route so let's see how to uh get that done so again we'll go to docs.ppns.io we'll go to which you can send notifications you can send it for your back-end sdk you can send it via show runners you can even send it via smart contract there's an example for that as well uh and yeah now it basically is like whatever you want to define to send a notification or there's a way for that uh let's use shorteners scaffold uh just to see how quickly we can set up everything and can send everything because the demo will probably uh include the scaffold and uni swap interface you know because you know you can even embed these notifications on your dab and front end so because of that what i'm going to do first is i'm going to very quickly clone everything that is needed so for example for uni swap and cloning the uni swap interface we'll see how the content looks in a while uh for the show runners i will quickly go to show them as framework set up show the nurse and clone the shoulders framework as well and yeah i think there was one more cloning which i'm missing right now but yeah for now this will do so very quickly i'll also do one thing i will just go to uh i'll just go to the showdown as framework and of course i'll do a yarn install while it's installing i will also go to uniswap interface and i'll do a on install just to make sure that you know now everything is good to go uh we can give it some time for the installation to you know proceed smoothly but what we can also do in the meanwhile is in the show runners we basically have few things uh so shoulders is basically a scaffold which basically means it has all the tools to automate your notifications on notifications logic but because it's a scaffold we do need to essentially configure some of the things out so of course once i have done the shown others the next step is to create an enb file from enb sample uh then basically define the log level because this is a hackathon let's go with ebook and after that i do need to go to infuria or at the scan or i'll give my alchemy and get that api about it uh not all three are required but one of them is a requirement for this demo let's do a scan an alchemy apis null and let's get this boxed computer project id and secret as as a part that will run the show runners out hopefully by this point of time oh it's still taking some time so yeah uh the reason why we need inferior or kata scan or alchemy api is of course to listen to the blockchain data because that's what uh we are going to do over here so let's see if uh oh yeah it's actually slower than oh slower than us uh doing recording uh so yeah uh while lyan is doing its things uh let me just show you what showdown uh basically does so once we have set up showdown is right uh it basically gives us a framework on which we can build a channel logic so that's that's what we are going to do uh let's just hope awesome so this is done the next thing is or no it's docker compose up because we do rely on some demons to go up uh before you know uh the showrunners is getting uh before we start to show the result hopefully uh okay something is wrong let's see what is wrong okay let's remove this let's just stop this darker part oh actually it's okay so let's stop the blockers and let's rerun it hopefully this will work faster this time awesome started running then on the next terminal what i'm going to do is i'm going to do dance start because we have configured an enb file if everything works well you will have this error which is basically that shorteners doesn't have any channel channel folder uh or basically it doesn't have any channel logic on which it can basically uh rely upon for code execution so how to get that uh connected well just go to code go to src and in this you have something called chapter underscore shooters uh which are basically some sample channels which we have created for you guys do check it out for this demo let's just take hello world uh this is basically a plug and play so what you need to do is just drag hello world down to the showdown once you do that once you do that you will have a different error which is hello world has no wallets attached to them and that's where they are supported uh that is because you know a channel or a delegate of the channel can only send notifications on their behalf which basically means that you do need to uh enter your private key over here uh so of course because we just created the channel we have the private key we'll just go and uh paste that in and that's about it your showrunners is running not not only that it is basically sending notifications from hello world uh folder uh this this folder basically has every logic which you don't need to have in your channel so basically what happens is like there's a channel.ps file which has all the logic which you want to do over here it is just sending a dummy notification the jobs is basically a scheduler so you can basically call a particular function if you want now by your jobs roots basically form your postman routes and uh what they do is they enable you to manually trigger some of the notifications so right now we already have a route configured i already have a postman over here so my shoulder is running on port 5432 so i just go to that particular route and i just hit on send once i do that you can see in the ebook that the notification has been sent let me just yeah and uh again because we are screen sharing so you will not be able to see the notification uh but they are coming but uh yeah if you reload to that or if you go to the chrome extension you can see it out if it was not screen sharing it will be pushed out to your screen as well so yeah it's as easy as that to create a notification from a back-end for that app again we do support smart contracts and you can go to docs dot epm to see that so this is basically how you can send a notification out this is one more thing which i wanted to talk to you about which is basically how to include the notification on your uh interface so over here we are basically uh doing uh we basically put unit swap interface and we are going to use that to uh basically bootstrap everything from our front end sdk ah one more thing which i wanted to point out was uh that in case you don't want to to show the nurse then you do have back end sdk which again is the thing you can use to trigger the notification out the back end is the a uh you know in your gs logic all you need to do is import the back end sdk we call sdk dot send notification again you can find the entire thing like how to do it right uh right over here you can go to back end as you can you can set up the back end doesn't speak and even understand like what is happening so yeah moving on to the front-end sdk so let's go for installation first so while unit swap is loading i do want to add our uh front-end sdk into the unit swap interface i can do that by the same in the swap and uh content sdk so yeah this is basically a fork unit now i'm adding the front end sdk front and receiver basically allows you to do two things first thing is it allows you to embed these notifications for your user for exam that basic massively massively improves the ux for the battery user because webtree users are shared so when they come to your tab and they see all the notifications which they have opted and right inside your tab you basically make sure that you know uh their entire experience is massively uh improved and the other thing content sdk allows you to do is basically eliminate users going to app.epns.io and opting into your channel instead of that what you can do is just place that logic code right in your content so the user can just go ahead and opt in uh to your channel and start receiving the notification so so yeah i think the content that sdk is almost ready to be installed i can open code as well just to get started so couple of things which we'll do because unit swap interface is uh a little funky uh so yeah the first thing we'll do is uh we'll try we'll turn prettier off just because we don't want to be slowed down uh by missing our tab or missing your entry the next thing we'll do is we will turn off the strict null checks this is something which we are doing because uh yeah ah this is something which we are doing because again we don't want uh strict null checks to stop or come in rv and then one more added thing we'll do is uh because you know in the epms trend and sdk it doesn't have a restricted uh right now so we are going to basically go and turn that off uh in the address section because that's where we are going to give our opt-in and opt-out button so i'm just going to declare the module as a star uh just to make sure that you know it works well awesome uh hopefully everything is done right now so ensor this still works all right uh the next thing we need to do is we need to add our opt-in button so that and by the way we do have a channel for unit swap so whenever and that channel notifies every lp pool holder like when they are not earning the fees and that's why we chose to put the opt-in on the ad liquidity so over here i do have a hacky way which basically means that i do have a vpns opt-in file already created which i'm going to go and uh put it over here uh it is nothing but these to call the opt-in on our protocol uh you can look into it in detail we do also have this uni swap front end hosted and also available also available as an example so you can go ahead and try it out i think the example is not reflecting it right now oh there it is a bnsx uh but yeah uh coming back so what what are what are we doing over here is basically creating a opt-in button and this opt-in button is just calling uh channels dot opt-in on uh which is basically the same thing eip712 sent to the push notes uh over here let me also come to index.psx and uh yeah so we basically need to import few things over here the first thing we need to import is epns opt-in and i want to import it after dots because you know swap again has a lot of strict checking uh which also means that you know things needs to be in alphabetical order so that's why i have written it over here uh so yeah once we have imported epn is often i also need to go to yeah so because we already know where to put everything out so i can go to line number now 538 put this in in that robo so so then let me just put uh this vpn is open it's react by the way in case anyone is wondering and then says to our pro and of course we need to close it under yeah and yeah if everything is working fine then now when we go to a new position you have a opt-out or an opt-in button so an opt-in an opt-out button uh which will basically opt you in and out the reason it was opt-out was because uh we basically uh hardcoded the channel address this is not your channel address or the channel address that we just created so uh basically if i change that then the opt-in and opt-out will work in a better okay so the channel sometimes so takes i mean it takes sometimes to reflect on the front end but as long as you are the uh pulling the channel out by typing it and you are able to do it so so yeah uh my channel this is not a channel i created i i've forgotten the name of the channel uh but yeah in essence let's just put this channel only and and yeah okay okay uh all right i i think uh i think the speed run which i'm doing uh i goofed up something but i forgot to include something out so what i'll do is instead of the speed run i also have uh a depot uh on the test repo that is also public the epns unit swap front and the sdk so let's go over here and let's do a yarn start over here instead so hopefully everything is installed so it will be very fast so the last thing i wanted to show in this demo like after the opt-in button which basically improves your channel visibility after that uh the bell icon which can basically pull uh all the uh all the notifications that a channel has so to do that what we what what we simply did was uh we went to uniswap header which is under components and header we created a bell icon because uh we wanted to create our epns bell and after that we went to index.psx imported the bell icon and right after that we first uh uh we first attached a div id the dev id is very important with the bell icon so that uh when the content sdk is loaded it can attach itself to this trigger id right after that we used we basically created a use effect uh in which we imported account where unisoft is based on birthday uh react so we we had access to the account so we basically loaded that and then we just called embedded dot initialize along with the sdk trigger and what it does is like after that whenever notifications are happening you will be able to see it in the app as well just like how you can see it right now so yeah uh that is basically everything about epns again we do have the dogs to get everything done uh as he said integrating on front end we do have uh the uniswap depot which you can uh basically go and uh check it out it's actually in front and example and uh yeah happy happy coding awesome now thank you so much yeah so uh very quickly we do have hackathon boundaries we have uh 4k hackathon boundaries on the best use of epns whether you want to send notification or whether you want to receive notifications in your dab that's your call we recommend doing both uh after that we do have push dance program with a one million usd so idea is once you build cool things over here that's not the end you can start or you can carry on with the push cam program uh we also have some build ideas in the medium blog uh you can scan this and it will take you directly to the medium blog also you can go to docs dot eps dot io to start to develop a journey and uh yeah one last thing we do have office hours which will happen every day uh while you guys are up tracking it will be between five to six pm utc uh this is our discord qr code in case you guys want to go over here and yeah i can probably take questions right now so can i ask a question yes nice to see you again so i saw that you also support uh polygon right yes okay that's it already awesome so we do support polygon yeah in the back end sdk if you're using the background sdk you do need to change the gene id and that's about it as long as you have put the polygon alias in your channel the notifications will start getting delivered awesome happy hacking possible happy awesome i just wanted to look at the timer perfect not 10 minutes but you know twice that amount but yeah great job this has been an incredible session we're very glad to have you back um if there's any any last minute questions feel free to pop off of me real quick but i think we've been able to answer everyone how she done a great job today it's again a great session i'm very very excited to see what our hackers use epns for throughout um as you mentioned please continue the conversations and discord uh is a wealth of a resource for the next three or up until the next few weeks for the rest of the hackathon and we're very excited to see what you guys built for the uh for the projects um thanks again for everyone for joining us today we're gonna be closing the session here uh our next session begins in about 20 minutes so stick around there's more to come awesome thanks guys for having us and keep on hacking like this is our favorite hackathon and uh yeah i'm very excited to see every one of you building cool things right on well cheers everyone we're closing the session now um make sure to hit everyone up in discord and have a good day 