hello and welcome everybody to the other intro workshop titled ave 101 for developers joining us today is david who will be taking us through the session one quick reminder to ensure that everyone has joined or created their projects by today as we will be prompting check-in one for projects later today and with that i'll pass it on over to david to introduce himself and get the session started hey everyone thanks and then welcome to uh yeah one of the i think one of the first workshops um so i'll be going over of a uh from a developer's perspective and for those of you that have attended uh my similar workshops previously it will have some familiar content uh but also we'll run over uh some new things that are specifically for v2 um also around the new governance as well so it should have some new and interesting content for everyone uh as usual if you have any questions feel free to post the questions in the chat i'll try and keep it open to have a look um or probably by the end of this session we'll be able to answer any questions uh in the question time all right so i'm sharing the screen now yep so let's get started so for uh for those that are uh aren't already familiar with rvs protocol uh we're a liquidity protocol so that essentially means that on one side we have depositors and they deposit funds into the rfa protocol as you can see on the left and these can be various assets and they earn interest depending on certain parameters in the protocol and then on the right hand side we have borrowers and borrowers can take a loan either a stable variable interest rate loan uh really at any time as long as they have collateral in the protocol and yeah these loans are instantly given if uh if it's within uh certain uh parameters in the protocol like health factors things like that which we can go into a bit later if needed a quick update on rv as a protocol i just checked today earlier today the market size is nearly 3.5 billion dollars which is a huge amount and the total value lot as of today is about 3.36 billion which is a huge amount uh so there's a lot of integrations and dapps and uh people using it already um so we're really super keen to see what everyone starts building and uh how they can make use of everything that is already out there and available so as as uh as usual i'll go over the main protocol features uh specifically the version two um some of the obvious ones like you know depositing where you can earn uh you obviously can borrow once you've deposited some funds and some newer concepts that some of you may not be too familiar with like credit delegation flash loans especially batch flash loans in v2 and also the new government mechanisms which were also super keen to see what people build around that so as a super quick uh overview of what's new specifically in v2 so as i mentioned we have batch flash loans and i'll go over some specific examples later on but that essentially means that you can conduct multiple asset flash loans within uh the same transaction you can flash loan within the protocol in version one you could really only uh you could uh only use flashlights outside the protocol but now you can use it within the protocol in fact we use it a lot throughout the protocol for collateral swaps and debt swaps and upcoming trading type features we also have uh tokenized debt so that means now when you borrow from the system you'll receive an erc 20 token uh that that is represents your debt at the moment it's non-transferable but there's some interesting things that you can do with that potentially building derivatives on top of that and i think we've talked a bit about that in the discord chat to some people so hoping that some people will try to build something around that as well we have native credit delegation so previously the credit delegation was a separate uh a separate smart contract in volts but now throughout the protocol there is specific it's natively built into the into the protocol which is really cool and then also we have governance version 2 which i'll go into a lot more detail later on there's a lot of interesting things around that there's a token governance delegation capabilities which means you can delegate voting and proposition powers which we'll also go into of course more efficient gas usage we have with support so in version one you have to have there was there was a separate uh east asset then also there's all the erc20s now we have specifically uh it's all erc20s uh so that simplifies some of the contract interactions quite a bit uh and and something that i haven't highlighted uh much before um but i try to do in this session is that uh all a tokens now support e2612 which is which allows you to do gasless transactions or single approve and transfer in one transaction and that's the that's the permit function which we can also go through a bit later right so let's go over the basics first and then we'll get progressively more complex over time right so if i was explaining it to a five-year-old what does earning mean it means that you can let others borrow your money uh when you're not using it if i was explaining to a 15-year-old i say that you can deposit your money and you earn immediate interest on that amount and you can withdraw at any time and in a d5 sense what we actually do is we tokenize your deposit into what we call the a token or an a token the account holding the a token accrues interest immediately based on protocol parameters and demand so you'll see the the amount of tokens tick up as you refresh the screen because this happens essentially every second and for developers to firstly to interact with the protocol uh you'd set up your parameters like the asset the amount uh you'd say maybe say on behalf of that stack we'll talk about a bit later credit delegation then once we have a referral code like any other erc20 token you have to set the approve so you want to approve our landing page and one of the differences in v2 is that you only really need to interact with the lending protocol contract um in in the pre in v1 there was there's a few different contracts that you had to interact with um so so uh yeah thanks thanks for letting me know it makes sense uh yeah we'll try and make it a bit quieter uh for you guys um but so uh yes as i'm saying uh you need to approve the erc tony token as for the lending pool to be able to do withdraw it and then you simply call the deposit function on the lending pool and yeah we'll talk about the on behalf uh parameter a bit later um so the the point of this is that the last line is the most important and it's really simple to deposit uh one thing i didn't mention was here uh when you receive a tokens they're one-to-one pegged uh to the underlying assets so if you deposit a hundred die uh you also or the contract will also receive uh 100 a day in return and so for also uh when you want to withdraw your positive tokens uh in a similar way you can say set up your parameters uh and then with the amount you just need to say you if you're using you went minus one that means that you want to withdraw the maximum amount and yet see the question uh yeah i'll post the link in the discord to the to the google presentation uh after this so then anyone can go through this uh all this code as well like proper code examples also yeah on the docs as well yeah exactly like jack mentioned um so this this code here you don't necessarily copy and paste it it's more just like to give you a general uh mental model of how you should interact with the con contracts so when you withdraw from the lending pool you simply just call then input withdraw with the necessary parameters super easy to do so next with borrowing so if i was explaining borrowing in really simple terms you borrow money when you need it to a 15 year old i'd say something like you borrow money depending on how much you have deposit in the system hence it's a collateralized over collateralized protocol uh and you can pay back this uh borrowed money at any time and in the d5 cents we use the a tokens that you deposited as collateral to borrow any of our supported assets at either a stable or variable interest rate right so to borrow let's assume that you've already did the previous deposit so you've deposited funds into the protocol you set up the parameters as usual one special parameter here is the interest rate mode so essentially you choose whether you want to borrow at a stable rate or at a variable interest rate and for various different use cases some people like stable rates other people's like variable interest rates i think generally stable rates are probably a little bit higher than the spot variable interest rate but stable rates of course have the advantage of being much more stable in the long term so for a lot of yield farming type activities people uh generally like to take the stable stable rates uh and then once again on the last line you just simply call lending pool borrow and you throw on those parameters there's a referral code here and that's essentially for our integrators so later on if your project becomes you know you go on mainnet and becomes quite successful you can actually get some uh let's call it a referral bonus or referral fees uh in return for the liquidity or the activity that you provide within the rv protocol so that's that's a little uh pretty cool bonus then on behalf of i'll go through the credit delegation section and like i said so when you take out a let's say a stable uh borrow uh you can always swap up to an uh variable interest rate whenever you want and it's really simple you just go swap borrow rate mode and you say what you want to swap it to now the only thing to do anything to make note of here is that usually when you get a stable borrow interest rate hopefully you've got a really good stable rate if you swap it to variable interest rate and then try and swap it back to stable rate you're going to get the latest stable rate sometimes that stable rate you swap into maybe a lot higher than the previous stable rate you heard right uh and then of course eventually you have to repay the loan uh so just trying to look at this question can we have a very small example of real world use case with each slide uh yeah maybe we'll go through some some real world use cases uh i'm trying to mention some real world use cases but maybe once we go over all the content uh the the picture will become a lot clearer right so once you've borrowed some funds uh you have to repay the funds so similarly with the previous code you set up the parameters you approve the assets that you want to repay like any other erc20 token and you simply call lending pool repay with the interest rate mode and the other parameters so pretty simple with um actually yeah we'll move to the next session so so far i've talked about depositing which you earn earn some interest and then also borrowing and that's generally done from the same account with the same user they'll deposit they'll use use it as collateral to borrow some more funds with credit delegations quite special in that we separate uh those two it's called players so if i was explaining to a five-year-old i'd say that you let other people borrow your money if i was explaining to a 15 year old i'd say that when you deposit you can deposit to earn interest on rv and then you can also earn extra interest by managing your own loans to other people and whether you do that programmatically or through off chain legal agreements that's really up to you and in a d5 sense uh what we do is we you can give others access to your credit line by depositing funds on rv uh actually this this uh this explanation has been outdated for the v1 credit dedication but in v2 credit delegation uh you just deposit the funds uh onto ave and then you can simply approve uh approve a credit line to another account or various other accounts so it doesn't have to just be one other account and then how you enforce that repayment from them is really up to you uh depending on what what sort of product you're building so as as a way to implement it so let's say the delegator is myself and i want to i want to allow emily to have access to my credit line so what i'll do is i'd already have a deposit i'll deposit a certain amount of funds into the rv protocol and then i'll say i want emily to be able to borrow the stable the state at the stable rate of die for whatever reason so what i'll do is i need to get the the relevant addresses uh and you can do that quite easily with this method here and then i would uh pass the parameters of saying that's emily's ether dress and this is the amount i want her this is the maximum amount that i want her to be able to borrow and then because i want her to borrow a stable day i want her to be able to borrow stable day i just call the approved delegation method on the on the stable day debt token and this amount in way this is the maximum amount so it's very similar to erc 20 approvals where you're setting a maximum amount so if i go un minus one that's sort of an unlimited amount up to the amount of collateral that i've posted or that i've used that i've set as collateral in the rv protocol all right so then let's say from emily's perspective uh now that i've set uh allowed her to borrow a certain amount of die at a stable interest rate all she needs to do is simply uh talk directly to the lending pool contract so she just needs to call borrow on the leading pool and pass in you know die at a stable interest rate for an amount any amount it can be up to the amount of uh what i've approved for her to spend and then she just calls that and then she'll receive those funds uh and the debt tokens will end up in my account uh the the delegator i incur the debt and that also means that if for whatever reason emily doesn't repay back the debt or you know there's volatility in the markets uh i i will suffer the consequences of you know potential liquidations or things like that uh so it's up to me to ensure that emily either you know repays back the debt or i repay back the debt through various other ways and then so the the interest rate incurred by me the delegator will be the same as if i had just taken out a stable die rate myself but i can charge something else uh if if i needed to uh from emily uh whether we're doing an off-chain legal agreement or maybe we're doing through a on-chain contract in in various ways so just looking at some of the the questions now that's being skipped over uh so a previous question let me just go to the previous screen this one so provider get reserve token addresses so that's essentially just getting the the the stable debt token address or the variable debt token address so we've created sort of convenience methods so then you can just insert let's say the die asset erc20 address and then in return you'll receive all the associated a token address stable token address stable debt token address and a variable debt token address so that answers that question uh is there a way for emily to see max amount she can borrow uh yes there is so there there are view methods that emily can call uh on the uh it's in the docs but i think it should be probably on the the debt token but i'll have to double check that but there is a way where she can easily see see that and you can also and anyone else can also call these view methods uh i think on the debt token that says you know how much how much uh how much allowance let's say delegated allowance does this person have for this um asset so what else can you tell a bit more about referral code so referral code let's say we'll go through that a bit later but that's more more referral codes are more related to um well once you've gone to production uh and you actually have let's say traffic or you have uh liquidity and funds moving through your project uh at the moment the referral code is is still under governance uh for governance to i guess refactor um but it should become a lot better very soon and jack says you can have a single experience uh yeah so these other questions like how do you ensure a loan is repaid as i mentioned uh the protocol from the protocol perspective it it doesn't necessarily care that a credit delegation is taking place uh the the protocol will will make sure it is you know fully uh collateralized and it will you know loans will get liquidated if they if they becoming they get in danger so from your perspective as a delegator you need to ensure that either you pay back the debt that you've delegated to someone else or the credit that you've delegated to someone else or you you have some sort of agreement with them or some smart contract enforced agreement where you can you know force repayment of that how do you set a repayment period for the loan so uh so that's a good question how do you set a repayment period for the loan on on the the base core protocol rv protocol you can't do that but you can easily create a smart contract on top where essentially your users will interact with your smart contract and maybe within your smart contract you can enforce a certain repayment period right and that's where you could maybe say that you you can have a credit line for 30 days and it's going to be a certain interest rate which is always i don't know 5 above the current stable interest rate something like that so that's really up to you to design uh and another question are there react hook libraries to interact with smart contracts and stuff so there is a sub graph uh to get all the information that you need to get that is correct and there is no react hooks library at the moment but very soon we should have a typescript slash js library that you can use that makes interacting with the protocol a lot easier uh if you're coming from a javascript uh or typescript background and then another question does repayment take place offline uh no i mean repayment will always take place on chain uh it's how you enforce that repayment um if that makes sense uh rest apis no we don't have any rest apis at the moment because these are inherently blockchain or ethereum based on chain contracts um so there always needs to be some sort of on-train transaction that happens but good questions so far uh okay we got a question from youtube is there any sample implementation of credit delegation with an additional untrained interest payment to the lender there isn't any sample implementation yet but there is a sample invitation on our docs with for credit delegation and you could probably easily you know extend that that sample with just you know adding adding your uh a different interest rate on top of that um it could it could be as simple as something like uh like you can take the example that we already have on our docs and then just make the the borrower have to interact with your contract and then the borrower will just call a method like you know how much do i owe or what's my interest rate then you can just uh you can have a method in your contract that just takes the current interest rate from rv and adds on whatever extra interest rate you you need right so i think when if you're building things like uh credit delegation sort of abstractions uh or things on top of it you'd most likely have people interacting with your with your contract rather than directly with a lending pool if you want to add all these other sort of enforcement mechanisms uh so sunny has a question about that are they let's try and keep the questions to to the current content um as we move through um so with the liquidations any different in delegate so with credit delegation the liquidation calls are not any different um so in the case of me and emily i would suffer the liquidation because i uh that i have a debt tokens and i posted the collateral so that's what would happen so it's up to me as the delegator to essentially make sure that uh that the credit is re the the loan is repaid in in some mechanism all right so to talk about repayment in credit delegation so it's also rather simple you just once again call the lending pool and you call the repay method and you pass in you know the various parameters uh the important part here is you want to say the delegator address so in this case we would say this is my address because i hold the debt tokens and i delegated that credit so i'm repaying the debt that i have and so when let's say emily interacts with the contract to repay her debt uh she would pass in my ether dress or in fact anyone could like if they for whatever reason maybe it's a charity type cause other people want to crowdsource the repayment of emily's debt you can you can um use this method and then pass in you know my address in that case maybe there's some other sort of management mechanisms you need on top of that but maybe that's that's an idea for someone all right really good questions with credit delegation by the way feel free to keep posting them um i'll post them in discord and i'll go through i'm just a bit aware of time so now i go through flash loans uh previously i'd spend a lot more time on flash loans but hopefully we can go through them a bit quicker because i think by now hopefully people understand flashlights a bit better than a year ago so if i was explaining flashlights to a five-year-old it's essentially free money you have to pay back nearly immediately if i was explaining to a wall street banker type person it's essentially an unsecured fixed term loan that lasts about 14 to 15 seconds that's the ethereum block time and with a very low fixed interest rate uh currently 0.09 uh that the bank and in this case the bank would be the ethereum evm or or the rv protocol it can always collect that expiry and expiry is the end of the 15 seconds so there's essentially no risk with flashlights and in a d5 sense it's an uncollateralized loan so i forgot to mention uh with credit delegation the powerful thing that that enables is that it enables someone like emily to have an uncollaterized loan for many blocks right uh but it still needs to be enforced in some way uh flash loans allow uncollateralized loans but it's only within the same block right so uh and essentially when you take out a flashlight you need to repay back the amount you flash load plus a small fee uh by the end of the transaction and the reason why you'd want to do this is because you you can execute nearly any code in between the the giving of the flash loan and the repayment of the flash loan if the flash line's not repaid the state of the blockchain simply reverts back and it's like nothing actually happened uh yeah so just looking at these questions again so alexis says as i understand after calling the printing instruction now if i pull created something safe and transfer the funds right no not quite uh alexis so with the so when you so think of approved delegation so this is going back to the credit delegation uh methods so think of a proved delegation method that's very similar to any like the approved function in erc20 tokens so when you approve for you know some contract or some person to be able to withdraw your funds uh that that's that's essentially what approved delegation is you're approving someone else to take on debt uh on your behalf um so that's what it is and then uh that person who who's been approved they just can uh they can withdraw that credit uh whenever whenever they want so i hope that answers that questions there's no sort of creation of extra volts or safes in in v2 credit delegation all right so back to flashlights so as i saying uh it all happens in one one block so this this diagram shows uh a schematic of actually a real world flashlight how it might occur the important thing here is that everything above the purple line is what you'll see no matter what on chain so you see a transaction and the rv protocol being called and of course this is where you pay the associated guest fee of whether it succeeds or fails right everything under the purple line is sort of the arbitrary code that you can execute and if you don't repay back the flash loan debt by the end of the transaction then everything under the purple line sort of disappears and it's like it never happened but of course you still pay the gas costs right and you know if there's any other profit uh after you repay back the flash loan then you know you can send that profit elsewhere and then do with it uh whatever you want an example of sort of a flash loan happening real world on ether scan this is what it looks like one of the reasons why you use a flashlight is that you can do many different actions uh within one transaction so that saves you know some guess costs some transaction costs and also it's just much more convenient from a ux perspective for users so this is uh this transaction is essentially closing a microdial volts and opening a new one uh it's essentially a it's a collateral swap for a make a dial vault and you can also do that with rv volts and you know various other lending protocols as well and here's a dex arbitrage which is quite common with flash loans essentially you buy buy low somewhere and you sell higher somewhere else and the reason why flash loans are used here is because you don't really you don't need that capital to buy low so sometimes you can do dex arbitrage for millions of dollars and you don't need those millions of dollars to start with which is which is pretty pretty powerful uh yeah exactly a flash up as jack says and then specifically for version two uh this is we allow batch flash loans so in the previous screens it was you saw that you know you could only borrow one asset and then you do what you need to do with that asset uh with batch flash loans you could technically you could flash loan all the assets that we like all the different types of assets that we have then you could do all these multiple transactions and then of course you have to pay back all those assets that you flash loaned so another good question is there a minimum amount i can take a loan for um so so in the normal yeah so so there isn't uh necessarily um so you can take a loan for however much you want uh i guess that the rational the rational actor would only take a loan uh if it's you know more than if it's worth it if it's more than the gas costs involved um and that depends on your time of day and when you're taking those loans another question in v2 can we now use flashlights to liquidate other positions yes correct so that's exactly uh what i was saying in that yeah in v2 you can now use flash loans throughout the protocol so it's not just for liquidation calls but you can use it however you want and that's how we actually do collateral swaps on the back end within the rv front end now uh so there there are batch flash loans happening how does it make sure that the gas fees will be paid even if the transaction fails uh so so that's that that question is more related to the evm and how ethereum works which i won't necessarily go into but we don't ensure that uh gas feeds are just it's just part of interacting with with their theorem protocol okay so trying to move a bit faster here to dive in some more code flash loans so there as i mentioned you can use them throughout the rv protocol and you know into other protocols as well with the v2 the code essentially what the difference is that now you have to pass in a raise of of each parameter so here you'll see we have the receiver address we have the assets so you know if you're going to pass in two assets then make sure the amounts that you pass in and the modes that you're passing is also you know two elements uh just of course you know hopefully self-explanatory but you know asset zero index zero you know aligns with the amount and index zero and the mode at index zero if you only need to flash load one asset you still need to pass in uh an address array uh but of one element uh and then as as usual like the previous methods it's simply on lending pool you just call flash loan and you pass in the relevant parameters the the cool and interesting thing here is that you can also pass in on behalf of method and the reason why you'd want to do that is because another new thing with v2 flashlights is that you can do debt incurring flash loans and the reason why you'd want to do debt incurring flash loans is that with traditional let's say traditional v1 flash loans you you get flashlight amount up front you do whatever you want with it and then you have to pay it back by the end of the transaction with with debt incurring flash loans you still you get the amount up front uh but then if you you can choose not to repay it back by the end of the transaction which means that you incur a debt so if someone has delegated credit to you uh you can you can incur the debt on their behalf and this is a huge design space there's as many different things you could potentially do with that but i'd love to see some more people experimenting in that space because it it makes things quite interesting it's it's different from a normal loan because a normal loan you have to deposit collateral in the system and then once you have collateral in the system then you can take a normal loan the the debt incurring flash loan is essentially you get upfront the loan and then if you do some profitable action uh you can uh you know you can deposit the you can make the the collateral deposit after you've you know done the profitable action so so you can you can you can come up with some interesting use cases with that all right so once you've called uh lendingpool.flashline and passing the relevant parameters what will happen is the lending pool will do some sanity checks making sure you know there's enough liquidity for that certain assets or those assets uh it will make sure let's say if you're doing on behalf it will make sure that you have the relevant approvals necessary uh and you know you can flashlight you know millions of dollars if you really wanted to it really just depends on the available liquidity in the protocol at that time once the once the sanity checks have passed then our landing pool will call the execute operation of let's just go backslide it'll call the execute operation of this receiver address so the receiver address is the contract that has your business logic and that may be the same this same contract in the examples on the docs it's the same contract but it doesn't necessarily have to be right so in that contract you have execute operation and this is where all the parameters are passed in there's also a section here where you can encode your own parameters so that can be useful when you need to you know you want to pass through various parameters uh to decide what action you want to take there's some examples new examples on the docs as well on how to encode and decode both in salivi and in web3 in case you've had trouble with that previously and then finally towards the end of your execute operation you just have to make sure you approve the lending pool to be able to withdraw the assets uh and that means the the that's how it repays back in the loan and and the associated fees uh if you don't do that and then your transaction will fail um so make sure you do that as well all right just looking at a question do i have to enter other market call approve the version other examples of bringing other protocols within a question um i'm not sure i understand the question fully uh you you i mean so the the flashlights you can um you can integrate the whole flashlight methodology in your in your own contract however you want you don't necessarily have to use some factory pattern uh because these these contracts still live on um so i have some flashlight contracts that have been online for like a year or more um yeah so there's no need to to create factories around that but yeah post a discord if i didn't understand your question properly and we can try and answer it there all right the next big thing is governance let me just double check how i'm doing with time all right so i'll try and get through all this because this is also another big section um so with governance in a simple sense it belongs to everyone uh their protocol belongs to everyone uh to a 15 year old what that means is that anyone who owns the rv token can help govern the protocol and in a d5 sense is our path towards decentralization uh we announced it with the avonomics uh white paper last year uh and essentially now now we're going uh pretty hard with the with the governance decentralized governance because token holders can vote and govern the protocol and that includes asset listings and protocol upgrades so with the v2 governance it's quite special of course all this is in the docs in much more detail but the important parts that i'll mention here that may be interesting to the devs is that we have a short time lock and a long time lock that essentially means that certain changes to governance can happen rather quickly and other changes that may be more controversial can happen can it can take a much longer time for the vote process to happen but then also a different let's say portion of voters have to vote a certain way for those for those more controversial proposals to to pass um so that's quite a unique feature all the governance v2 code is also open source on github and would love you know if any any of the hackers wants to fork the code where they implement the rv governance uh vt framework into their own protocol uh that that will also qualify for one of the rv prizes if you simply want to you know if you have your own existing protocol and you want to integrate some sort of governance mechanism you can also use the rv v2 governance uh because we think it's pretty special and it's got some pretty pretty cool features in there so to give you a real example of governance that's happened recently so previously charlie from curve finance he posted on our governance forum he wanted to add crv because the curve token wasn't listed in the rv markets he posted there was discussions uh on the forums it ended up uh becoming a proposal julian who was also part of the curve team uh he started wanting to gather enough proposition power so in the rv2 governance to be able to propose a change uh or an addition on asset listing you need to have a certain threshold of of governance power uh with rv governance you can delegate your your proposition and also your voting power to someone else so julian was essentially advertising on twitter to say hey uh you know delegate your your proposal power to this address so then they can make the on-chain proposal and they did that and then it was a success uh the the payload got executed and now curve finance is listed on the main rv market and you can see here the reserve size at the moment is 12 million um so that's that's pretty cool that was you know done in a decentralized way with on-chain voting and all that sort of stuff the governance process in case you guys anyone wants to play with this or build tooling around it is that essentially first as an off-chain process and that usually means a submission of an arc which is a of a request for comments on the governance forum and then that turns into a more polished aip which is an rv improvement proposal once that passes certain thresholds on the governance forums and you know there's i guess rough consensus that it's a good proposal the proposal can be created with someone that has enough proposal power so a lot of let's call them protocol politicians require uh more proposal powers so they'll need people to delegate that proposal power so i see that as a as we can do that in the front end of uh the uh of the rv app at the moment but it'll also be great to see more proposal and voting delegation type tooling out there then once the proposal is up it goes to unchained voting and then we queue the proposal for execution or cancellation depending on how the the voting went so from a developer perspective it's also super simple to integrate some sort of delegation of voting or proposition power uh essentially you the are they token uh all the flavors of the ave token can be um can delegate their proposition or voting power essentially just create credit uh create you you call the delegate uh function on let's say the rba token it can also be the stake rv token and you just say i want to delegate the power uh my proposition power or my voting power or both of those powers to this address similarly with on chain voting it'd also be great to see more let's say governance dashboards you know maybe things that help automate some of these these uh creation proposals for the community would be great um so when you wanna submit a vote you simply say you wanna you call the submit vote function on the rv governance contract you pass in the proposal id and whether you support it it's true or you don't support it as false another part of a big part of governance is governance staking so the important part here is the safety module which you can see and down in this diagram so that's essentially uh that's called the the backup it's called the backstop module but another way to explain it is that it's a protection fund uh for the protocol so what the these diagrams essentially mean is that if there's ever a an incident in the rv2 protocol uh and you know funds are lost or whatever else that's where the safety module comes into play and potentially fulfills any uh obligations to to people that have deposited in the protocol and at the moment it's pretty amazing that uh currently we have more than 600 million dollars uh staked in rv so that's 600 million dollars in the safety module and the because the reason why another reason why you'd want a stake in the safety module is that you earn interest and currently a apy 6.2 percent with a max slashing of 30 so that means that if there is an incident in the v2 protocol you can uh get a maximum slashing of of what you deposited of 30 in that unlikely scenario and of course there's some other um bits and pieces around staking there's a cool down period and things like that but if you wanted to integrate staking into your project to you know maybe help help users own you know some relatively safe interest rates uh this is the way you do it uh the main things is like any uh other erc20 token you approve uh the lending pool and then this is the the stake you call this you call the stake method on the stake of a token and you say how much you want to stake when you earn the rewards you can claim them at any time which is pretty cool and then also let's say if you want to withdraw your stake you need to call the cooldown method first and then you can call the redeem after a short amount of time the the documentation on this uh staking is quite um elaborate so so make sure you read through that if you have any other questions on staking and earning interest there uh and also you can post on our discord all the the market make discord with your questions yeah and finally heading towards the end now um so keep posting your questions or get your questions ready if you have any more um as usual i'll go over some some other projects that have integrated rv uh in their projects and products and companies uh rather successfully so defy saver is one of the big ones uh they they use a lot of rv flash loans for their automations uh so you know to have like liquidation protection for their users uh to do cross protocol yields so if you want to switch from one lending protocol to another lending protocol you know you could they enable that through uh are they flashlights so that's that's really cool when they've built their whole sort of their own independent company doing that as well as a lot more um but i thought that was a really cool use case of flash loans for a combo is another uh company they were one of the first to do a graphical user interface for flash loans because flashlights are generally only for developers you need to be out of code they're one of the first to make it really easy for the general consumer to be able to get a essentially a lego block of flash loads say on a flashlight this amount and then swap it here and do these various actions um so that's very innovative you earn finance are one of the first things a great credit delegation and they actually did credit delegation in the v1 credit delegation and they integrated it in their link vault so essentially the result of doing credit the reason why they do credit delegation in in their link fault was it in it helped increase the yield that they were returning to the to the link vault uh participants which is really cool to see and of course we have avagachi uh which is you know they're doing a game uh with underlying their nfts in the game is uh a tokens so that means that as you play the game and your avogadro is running around doing things doing quests and experiences you're also earning interest uh on that nft uh just because it's a it has eight tokens uh a tokens are within the nfc so that's also a very innovative interesting use case so it doesn't necessarily have to be in a d5 sense it can be you know whatever you're interested in in this case the avogadro team creating a really cool game all right so resources you know we have our discord of course we're also a lot of our team members are on the market make discord as well um and we'll try we're generally based in eu time zone so you'll we're most active during eu time but also some of us uh midnight hours and can reply at night as well uh our developer docs we've tried to make them very very good um so hopefully they they answer a lot of your questions uh governance forum and also the docs portal uh i'd recommend if you want to get dive deep into the rv world there's a lot of bits and pieces including the risk models that may be interesting for for people that the docs portal has links to all that documentation in every aspect and not just for developers so that's that and maybe i'll answer this question emily uh how can we integrate other nfp solutions to are they so that's a super broad question that's that's really up to you so you can do whatever you want you can you can integrate it however you want it's really up to your creativity you know you can try and do something like avogadro um it's probably better if you try and think of an original idea though uh but yeah that's the design space for that is is huge so that's really up to you i think we can take more questions uh emily yeah there's um about 10 minutes left in the session so if anybody um even feels comfortable and muting themselves and asking david a question that's also totally cool or you can drop your questions in the chats uh so there's a question uh is there a governance token uh yeah so the are they token is the governance taken another question can i tokenize etf or stocks or something and put it into ave uh no i think what you're talking about is like synthetic asset assets um oh you i mean long term you could if you had some sort of asset that was already live on mainnet you could probably go through the governance process as i mentioned have it like listed on rv but there's no way to do that you know quickly enough for a hackathon euro had a question proposal power and voting power internally are the same or separate uh so they are separate uh proposal power and voting power so proposal power is you have you need to have a certain threshold to be able to propose make proposals uh to to the governance contract or to the protocol this is essentially to to ensure people that are proposing changes have enough skin in the game and then voting power is separate as well so voting power is just uh you know you're able to vote uh essentially based on how much ava you have um yeah but the voting power is equal to the proposal power so if you have one rv uh you have one rv worth of voting power and one of a worth of proposal power would it make tony has a question would it make sense using credit delegation for allowing clarionization between listed and unlisted tokens uh that would be interesting um i can't think of a use case yet maybe it's like a sort of innovation zone type thing uh it could it could definitely be interesting i guess in that case you'd need to uh have a separate pool of unlisted tokens um and then of course i mean that's that's possible as well uh the rv2 code is is uh on github so you can also play around and see how different markets are created there um but yeah it's that's a that's a fascinating idea tony i need to think a bit more about that one uh isaac has a question can you initiate credit delegation and authorize a borrower in a single transaction uh yes you will yeah also so to initiate credit delegation it's just one call it's just you approve approve delegation uh so yeah you're just doing one call maybe the the nuance with this is that to approve delegation you need to have collateral in the system right so you and you could do that in solidity in one transaction which could be rather cool uh what exactly happens when a lot of people are taking huge flashlights at the same time can we see how much of it is possible for us to learn at the time yes so there are methods where you can see the available liquidity in the lending pool and then you can you know borrow the maximum amount if you want to just keep in mind that there is the 0.09 flashlight fee so it's not much but if you decide to you know flashlight 100 million dollars the fee becomes quite a quite a large amount um robin has a question how to state collateral or back and nfc with eight tokens avogadro any resources uh so no resources off the top of my head um but but the those sort of things like backing an nft with a tokens that that's really up to your creativity so you need some i guess some basic knowledge of solidity you know you you'd um i think there's certain nft standards that you should research i forget the exact entity standard numbers um but some of them you're able to have nfts own certain things so i imagine that the gotcha team did something similar um but i'm not exactly sure you can also they also have a discord and telegram that you can reach out to them there i'm sure they they might be helpful in that sense uh i think i have actually avogadro they have their sponsors right yeah they have a channel uh yes yeah they've got a sponsor channel in under market make as well yeah exactly so you can ask that question uh to other countries directly properly they're they're better positioned to answer that okay raul has is there any open source bot to check for users which can be dictated and then execute elimination uh there's no open source spot at the moment so that's actually on one of our requests for projects is that we'd love someone to build that so that'll be cool and another question the lone daddy can be smart contract as well uh so so what what this person is referring to is fiona on twitter posted a very interesting concept a while ago using credit delegation which involved potentially uh having derivative debt tokens that are transferable and i posted that on the discord so you can search it on the on the rv channel um so yeah exactly the in that sense uh yeah the loan daddy that that's that's a smart contract any other questions okay uh dai garo says asked the frequent uses of flashlights affect aprs my supplier should have issued that since flashlights have engine block uh so the interest rate model uh is not affected long term but the depositors do get higher yield due to flash loans that's one of the reasons why ave has higher yields for depositors partly because flashlights contribute to it uh yeah and craig craig's correct avogadro they use the diamond standard which honestly i haven't really looked into much um but it seems cool i just want to hear you say hello daddy yes yes it's a cool it's a cool concept but yeah i think i think credit delegation is one of the really cool concepts and and thinking about derivatives of that tokens is also rather interesting um but complex but very interesting cool does anyone want to like unmute themselves in the last few minutes and then when we share something if they want if anyone else yeah of course there's still um four minutes left of the session so if anybody feels like i'm muting themselves and having a chat with david go for it i'm pretty excited about credit delegation um i wasn't aware of a twitter thread about derivatives from that tokens but that is kind of what i'm also planning on trying to do here um where you can like have a you know so if anyone else is interested with that um i'll post my thing in the in the chat here but yeah derivatives on credit delegation that token sounds really cool yeah yeah for sure i think there's some yeah it's a huge design space and you can build some pretty cool potentially you know um weapons of mass financial destruction type weapons but also i think you can do a lot of good with it as well um so you can do some sort of cdo type things like an unsecured lending vault where you can have like different lenders optimize your returns by lending out like having like unsecured lending strategies and stuff yeah yeah yeah i think stuff like that is really cool um yeah more options in the space for various risk profiles i think is always good cool any other questions or comments david is also always available on discord um if you want to reach out in the sponsor channel on the hack support channel you can just ping him but i see gawain um has raised his hand if you want to unmute yourself and ask your question go for it hi david um quick question around the uh the debt uh that can be occurred in in the flashlight uh the l2 on the dead tokens how does that necessary because i also seen one inch uh discussing the debt like debt tokens like how does that necessarily work with with the tokens themselves um i'm not sure about the the one-inch stuff i haven't heard that um but from from the ave protocol perspective uh the debt tokens are essentially a representation of how much debt you've incurred in the system uh so at the moment it's a tokenized version of that so it's like an easier way to keep keep a record of how much debt you have in the system at the moment they're not transferable so they just sit in your in that address um sort of just incurring the debt uh so so yeah there's not much you can do with them that's why you know isaac and other people are interested in creating debriefings out of that because that makes them a lot more flexible i'm not sure if that answers your question yes it does thank you cool hey david i think you've got two more questions in the chat if you could answer those real quick and then we'll wrap this up yeah sure uh so there's a question for are they unstaking do you have to call redeem within a certain amount of time after the cooldown ends or you can release them yeah so there's actually a uh a time that you have to call the redeem within um so you call cool down and then it's about ten days then i think uh you have two days to call the redeem and if you don't call the redeemed within those two days then it resets then you have to cool down again and wait another 10 days um so maybe there's some automation that can happen around that right that's a cool product project because i know i've missed it a few times when i tried to call cool down then i missed it by like maybe three hours so that that could be a useful tool and then there's another question we'll probably work on governance interface what do you think are the rough aspects for the existing process so for the process around governance best to look at the the docs um on the developer docs and also there's specifically a governance stocks as well uh and yeah that goes through through the entire process of exactly what needs to happen both from a developer perspective but also from a human sort of governance foreign perspective as well cool i think that was all the questions yeah thanks so much david that was a great session and a lot of great questions from everybody joining as well uh thanks for taking that and thanks everybody for joining if you've got any more questions you can catch them in the sponsor of a channel and yeah have a great day and don't forget that we will be hosting a number of workshops this week and there are in fact two more ave workshops this week as well so just keep an eye on the channels for the channel announcements on our events and thanks for joining 