and um the the uh last few people are coming in right now but i think we're ready to get started officially um thanks again to everybody who's just joining us uh we have an excellent presentation lined up for you this afternoon uh we're gonna be hanging out with discordian uh from the recall labs team and uh we're really lucky to have him in here uh i'll give him a second to introduce himself to those who just started here but we're gonna be taking questions throughout so post your questions in the zoom chat below and we'll get to them throughout the presentation this is a great opportunity to ask him whatever might be on your mind but if you don't get to it we highly recommend hitting him up in discord uh following this presentation which is a great way to talk to the whole team ask all your questions and and and get hurt but i'll let you take it away from here man awesome yeah yeah it's always a pleasure to be here um thanks a lot luke uh so hello everybody um i hope you're enjoying build quest i'm discordian a community engineer from protocol labs i'm here today to give you a quick introduction to ipfs and filecoin all right so what are we going to be doing today well today we're going to learn about the core concepts of ipfs and filecoin and why they're important we're going to talk about what tools exist today to help you get started building then we'll talk about some possibilities throw out some ideas that might be fun to build with the tech near the end i'll tell you some resources you can explore into to learn more about ipfs and filecoin as well as where you can go to find our communities and connect with fellow ipfs and filecoin enthusiasts finally if there are any unanswered questions at the end i will stay here and answer your questions however if you think of any well i'm presenting please share them it can be good to ask your questions and have it answered while it's still fresh in your mind so a key part of ipfs and filecoin is that they're distributed currently the web 2.0 model is centralization one single point can fail and entire services go down as you get further and further distributed though your service's resilience increases as the users themselves are what are powering the service first we believe that only the distributed web can address the technological challenges of the future with a planet increasingly connected with the web and data that circulates on it plays a bigger and bigger role data and knowledge are a couple of the most important assets in this connected era being critical to human development they must be safeguarded open and in the hands of the people ipfs is not the answer to all the problems but it is the answer to some and overall represents a solid building block in the web3 generation particularly when it comes to removing borders and silos for data so what exactly is ipfs ipfs is the interplanetary file system what is a file system files and folders any file with any content why interplanetary because it was conceived as a way to upgrade the web in a way that would still work when the network stretches across planets the idea being that if you're sitting on mars it may take one hour for a request to go to and come back from earth but if that content was already fetched by someone else on mars then it should not travel all the way back to earth for it and that feature should be provided transparently by the network protocol rather than by something on top as we will see ipfs is distributed by design no central authoritative servers are storing content and no central server needs to be contacted in order to obtain the content typically you would upload the content to a server a location anyone wanting to download that content will have to get it from that same location with ipfs things are slightly different in ipfs you run an application called the ipfs peer and with it you become the server you don't upload content anywhere but instead add it to your peer and make it discoverable by everyone else any content that is published on ipfs uses content addressing which is a way of referencing a piece of data by its hash i'm going to explain the key technologies making this possible in order to do this let's think of the process we follow when we put our data online as we said a couple of slides ago a file system has files and folders and the web is no different when we open a website we are just opening some files with the difference that they need to be downloaded from a remote location and we do that using a browser which will print pretty things on our screen with ipfs we're also obtaining from a remote location but the key difference here is that we don't need to know the location of that content but what we call the content identifier the content is still at one or several locations but as we will see it does not matter anymore where it is we switch from a location based identifier to content addressing by using a cid the content identifier in order to be able to have content addressing we need to obtain content identifiers for each piece of information that we want to put on the network this is effectively a cryptographic fingerprint of that piece of content every piece of content produces a different fingerprint all the fingerprints are the same size regardless of the amount of content this fingerprint which we call a cid can be reproduced anytime from the original content this means that if we obtained a piece of content after requesting a cid we can verify that we were given exactly what we asked for so when it comes to files the idea of how we content address them is clear but what about folders well folders are just special types of files which have a list of files in that folder as content that list provides the names of those files and in the case of ipfs they're cids since a folder is a type of file a cid can be obtained in exactly the same way as for any other type of file this means that we can represent a folder or even a full file system using a content address structure like this as you can see on the right our top level folder has a root c id it has two entries corresponding to two folders and those folders have other entries corresponding to files each entry has a different fingerprint see the colors as each fingerprint refers to different content this content address type of graph is what we call merkle dags the merkle dags used by ipfs allow us to move from location-based addressing to content addressing in a single step by just replacing locations with the root cid of their content the sub paths stay the same one characteristic of content addressing that i mentioned is that the fingerprints are unique for any type of content what would that mean if we want to copy file.txt to the folder of the second user it means two things first we did not really have to copy that file we just had to modify the folder to reference the content two copies of the same content have the same identifier so to ipfs they are the same thing there's no notion that the same content can be duplicated in different folders in ipfs because it is actually the same thing with the same cid we call this property deduplication secondly since we changed a folder the fingerprint of that folder also changed so we had to update the upper folder as well to reference the new fingerprint which means that the fingerprint from that folder changed resulting in a new root cid the moment something changes you get a completely different cid your previous cid still references your previous version of the content which has not been changed the fact that a cid will always represent exactly the same piece of information unlike a location unlocks the capacity of doing verification on any piece of data and makes ipfs a very good framework for append only storage like blockchains or data archives as you can see content addressing is a nice drop in replacement to location addressing as we keep having folders and paths in a very similar way as we had them on regular web addresses the first step when adding content to the ipfs network is to obtain the content identifiers for that content which we just went over this can happen offline at any moment once we have those cids the next step is to announce them onto the ipfs network so they can be retrieved by other ipfs peers but what is appear what does it do peers in peer-to-peer systems are nodes that are connected to other peers to form a network or swarm forget for a moment about ipfs peers and think about peers in general there are certain features that appear in this network must have first it needs to have a name so that other peers can identify it in practice each peer has a unique identifier this identifier is linked to a cryptographic identity which allows each peer to communicate securely through an encrypted channel secondly it needs to share at least some functionality with other peers if a peer needs to interact with other peers they will need to support the same services for example the peers and the ipfs network are peers which support a set of services or protocols one of them serves to request certain content by its cid from a different peer and download it but in order to get there it means that peers need to be able to discover each other the network transports they support tcp bluetooth and the services that they can understand this step is called content and peer routing and it is achieved through something called a distributed hash table or a dht the dht or the distributed hash table is a critical service that each peer runs dhts are the equivalent of a large database that works by storing only a small number of rows in each period in order to get the value associated to a key a peer will need to find some other peer that is storing it the process consists of asking other peers in the network who has this row but not in a random fashion remember that not every peer is connected to every other peer instead peers with certain names or peer ids are more likely to store certain rows thus a peer knows which one of the peers it is connected to is most likely to have the value for the key that it is looking for but what if it does not happen then it will request information about peers known by the other peer which are more likely to have it now that we have a database shared by all the peers in the system how does ipfs use it simple when the content is added to ipfs a peer will insert one row in the dht mapping the contents that we generated to its peer id declaring itself a provider for that content publishing this row involves finding appear similar enough to the content id to store the row in any case the content id is however a very small piece of information and the actual content stays in the original pier peers also insert routing records in this database these map their peer ids to the locations where they can be reached and the method effectively to their ip address and port any peer that wants to download some content will then have to do two things first query the dht to find which peer id is providing that content second query the dht to find information on how to contact that peer id at the end of the dht queries appear knows who has the content at once and where to get it now that we've gone over obtaining a cid advertising it on the network and locating content let's take a look at transferring content only briefly the last step to retrieve content in ipfs is to download it because we know how to contact the peer holding the content and we know what content we want we can connect receive and verify it this means that any content received through ipfs is authentic and matches the request once content is downloaded the local peer will advertise itself as a provider for that content on the dht making it available to other peers for download the protocol we use to download files is called bitswap and it also works for quick discovery by asking all neighbors whether they have the content let's say in the case where the content is not found in the dht ipfs really is useful to anyone who wants to serve or retrieve content on the web which is almost everyone as certain pieces of content get more popular the data becomes more readily available and resilient to loss you can also run your own nodes on classic infrastructures like vpss or pay pending services to hold onto your data ensuring availability but what about alternatives that are both decentralized and reliable well this is where filecoin steps in filecoin is storage designed for web3 from the ground up it's compatible with ipfs and other existing web3 technologies such as near and many others it's cryptographically verifiable so you can store cids on any blockchain really and reliably retrieve the same data every single time provided you have a storage deal made over filecoin at over eight exabytes filecoin is an absolutely massive network without any central authority it should have the capacity to handle any use case you can imagine let's take a moment to talk about verifiable storage on bilecoin you or your app make a deal with a provider to store your data or several bilecoin preps your data by transforming it into a directed acrylic graph the dag it uses the same process as ipfs so this way the resulting cids are compatible next providers generate an initial proof of replication that's part of the storage deal that they publish to the filecoin blockchain over time providers have to keep proving that they still have subsets of your data by creating proofs of space time they are paid incrementally for keeping up the storage deal finally you can get your data back by making retrieval deals with providers you can also check the chain for proof that it is being stored and stored correctly at any time ipfs and filecoin are perfect complements for each other as we've gone over ipfs is great for fast flexible retrieval over the ipfs network and can even be accessed through http gateways for users not yet equipped with ipfs themselves though ipfs needs somewhere to persist the data filecoin answers this problem by offering excellent persistence and verifiability through distributed storage deals which any storage provider can accept there are several layers to app to any application and web3 offers no exception you have storage helpers such as web3.storage nft.storage fleek estuary infura ceramic and more there are so many tools out there for storage providing that finding the perfect fit for your project should almost certainly be possible we have the logic layer as well through smart contracts they can point to cids served over ipfs stored via file coin a pending service or maybe even persisted through sheer popularity the logic layer offers endless possibilities to so many technologies including ethereum near and many many more finally we have the front end this is what you see and can include typical web 2 methods like throwing your page on a web server and having some server-side code do some work but also web3 where the website is served over the distributed web often with integrations like crypto wallets and nfts fleek is very helpful for this serving static websites over ipfs is quite easy so i hope to see more and more web3 type frontends as we move forward into the future by now you might be wondering what can i build with ipfs and filecoin well we've been brainstorming some ideas to help you get started we have quite a few so i'm going to briefly go over some here are 11 ideas of varying vagueness difficulty and complexity with three more after the slide you could create a social media website where data is shared directly peer-to-peer timelines decided organically by the data you literally receive in a stream filtered by the client maybe you'd want to build a peer-to-peer chess game where the two players stake an nft and the winner takes off distributed video streaming service could be nice users could monetize their videos through a token maybe requiring some form of payment for certain content or extras you could help cache the planet help store popular javascript libraries over the distributed universe an rss emulator could be fun users could subscribe to a pub sub topic where which is a published subscribe system which you can use through your ipfs node via lib p2p something that helps power ipfs peers could subscribe to a topic they're interested in and another peer could publish updates to it decentralized achievements could be fun create a system where web3 games can easily integrate achievements into their games adding a whole new layer of fun to new web3 games you could make an app to simply snapshot a website and provide the immutable cid representing that website build the distributed metaverse where any user can host their own planet allowing users to colonize entire new worlds in an inexpensive and distributed way you could build a decentralized service that assists you in purchasing the correct temperature of coffee based on the climate nearby a distributed get platform could be really cool bonus points if you can integrate an issue tracker into it too a wrapper for youtube to help cache videos onto the decentralized web could be absolutely invaluable in preserving certain types of content which are completely lost to time those were 11 ideas but let's take a closer look at three more here are some further game nft use cases permanent cross-platform progress storage the nft could operate as a token allowing you to track your achievement progress in a distributed way think like seems achievement progress tracking but without a centralized source of truth minting the achievements of the users could be major in the speedrunning community there's a website called speedrun.com that's quite popular users record their times to complete certain games with certain sets of rules around the competitions with nfts the users could hold an immutable and distributed record of their achievements minting in-game upgrades could be a major player in the mobile market especially you could sell upgrades to your game as an nft and the user could later give that to their friend if they'd like or sell it in a world where typically those purchases are locked onto a single centralized platform completely unable to be traded i think nfts could really bring something to the table here in a way of being able to sell those upgrades later or give them to friends well we went through 14 ideas just now so i really hope that at least one of those has sparked your imagination in some way all right i promised i'd tell you about some of the tools to help you build your app so i'm going to go over a few of those now let's take a second to talk about storing and retrieving data we highly recommend choosing a storage helper they simplify deals and workflows making it fast and easy to build they simplify deal making in general finding providers negotiating prices waiting for confirmations verifying storage storage helpers handle all that for you you can store to both ipfs and filecoin with a single call ipfs for fast flexible retrieval and filecoin for persistence and verifiability a storage provider with filecoin integration will ensure that you never need to think about any of these things so what's out there first up is fleek's ipfs hosting it's designed for fast modern censorship-proof websites and web apps on the open web and works with most modern frameworks it works by you connect up your github repository and add in some fleek build settings from there you can deploy your website to ipfs which is backed up to filecoin automatically for you you can find more information about the services that fleeq offers over at fleeq.co and i really highly recommend you check it out web3.storage is a powerful solution for hosting your data for free backed up over filecoin and available over ipfs seamlessly and immediately data is immediately uploaded to a hosted estuary node and is automatically stored with six providers around the world it can be used a variety of ways including the http api and web interface and i think it's important to point out that you get up to one terabyte for free so if you're looking for a data storage provider that will allow you to have your data available over ipfs for free and you're looking to store under a terabyte of data i recommend just sign up um i think you'll be surprised uh pleasantly by how easy it is to use all right nft.storage is a powerful solution for hosting your nfts for free backed up over filecoin available over ipfs seamlessly nft.storage is designed for nft developers who want free decentralized storage similarly to web3dot web3.storage2 you also get a terabyte for free you simply upload your data and get back an ipfs cid that can be used in on-chain nft data as a pointer to your content storage and retrieval is free so you get properly formed oh and you get properly formatted data back uh metadata back sorry if i said the wrong um immediately after uploading you can fetch it back via ipfs and it's backed up to filecoin via free storage deals um i believe similarly to web3.storage as well that is uh six six or it might be even eight deals that are made nft.storage is easily used via its javascript client library their http api and it can be even used as a remote pinning surface directly through your go ipfs mode which in my opinion is a very cool feature next up is morales morales is designed for developers looking for an all-in-one toolkit and service for web3 for ipfs it works as a simple call to save ipfs but there are other helper commands as well in the docs i highly recommend checking them out at docs.morales.io finally we have lighthouse lighthouse is designed to be the ultimate solution to your permanent data storage needs for a fee you can pay to store your data forever lighthouse is a fairly new technology to the family of storage providers so the team is looking for people to try the stackout and provide feedback and i really hope you find success with this because i think lighthouse looks really cool i've listed only five storage providers here though but from ceramic to estuary which i lightly touched on in a couple slides back there are many others to discover and i can't believe we're already at the last slide but come learn and build we have an awesome community comprised of builders who help us foster a positive and productive environment i highly encourage you to check out a resource we compiled of several tutorials currently available at tinyurl.com learn dash ipfs filecoin as well i really hope to see you around and i'll be available for the duration of the hackathon um as well as uh there should be others from uh the ipfs community um other dev rails uh for the duration of the hackathon and but still please feel free to ping me or send me a dm directly always happy to hear from other developers i'm discordian on related discord servers um or discordian 3926 and i'm also on the file coin slot which you can find at filecoin.io slack now if anyone has any questions they've been brewing now is the time to ask i'm sorry i couldn't uh figure out how to check questions if there were any uh while i was presenting but really please don't hesitate to ask the question uh yeah don't hesitate to ask the question you're thinking about might be on someone else's mind too like you benefit all of us just by asking all right um and that that is all i have so let's see um oh i i got the chat open now okay so wicked wicked okay uh so stephen you're the first question that i've seen question can you talk about access control or encryption of data on filecoin um yeah uh very quickly um so access control yeah um i guess there's a couple ways to see this so file coin itself you likely won't be interacting with that directly all that often so the thing that'll matter most i believe to you would be access control systems over something like ipfs and i guess in short there really aren't any when you make data available over ipfs um assuming you're using like a default node and you haven't set up like a a private swarm um you will your data will be available to other nodes um and you don't you can't really control that but using um a private swarm uh what happens with a private swarm is all of the nodes in your swarm have a an encryption key and everything and it's a shared encryption key um so any data between those nodes um will uh be visible to those nodes and all of that uh all of that will be encrypted of course um otherwise in terms of uh encrypting over uh or storing encrypted data on filecoin or retrieving it over ipfs you can encrypt it in any way you want with any sort of uh system you want because uh at the end of the day you can store any type of data on filecoin you can serve any type of data over ipfs so whatever uh whatever works best for you um is uh yeah that's what i'd recommend to do uh and thank you oh i really hope they're pronouncing it uh uh cheek thank you very much it was a very nice presentation yeah thank you okay let's see i see uh victor question let's say we upload a jpeg on ipfs can we access the jpeg in html with image source ipfs oh i really want to see that work oh um by default i do not think so um unfortunately uh but the only thing preventing that from working is ipfs support directly in browsers which is something we are working on so today you can't access a jpeg that way but the way i would recommend you do it is when you make your website um to post so yeah i think of a website like a directory so you have like your index.html in the root directory and then maybe you have your images folder with all your images in it just refer to the images in a relative way that way if somebody is viewing the website over ipfs it will work fine and the images will automatically load out over ipfs that way but if somebody views the website through an http gateway it still works for them um because again everything's just relative to that images directory oh i thought it was a recording oh thank you yes yes relative path and no problem let's see are there any other questions i have a question yeah i build a planet earth dao right ada is a blockchain right bitcoin and ethereum are blockchains and they are daos right i created a planet earth tao so my question is i totally believe in interplanetary system in in all the things so why cannot directly storage the data in in in the planetary in this case that i built and then uh we can exchange data between planets in the future why we cannot go directly in ipfs hmm um just i'm first i'm gonna try to make sure i understand the question correctly uh so you're talking like uh between you wanna share data between two planets like earth and mars am i correct yeah or be news or whatever yeah yeah so um you actually through ipfs you should actually be able to share uh data directly between earth and mars um if you say added a some data you wanted um on earth and you wanted to share it with mars and you've communicated that cid to mars so you have a user that wants to retrieve that data um the first time they will have to wait for whatever length of time it takes for that data transmission to happen from earth to mars but on subsequent ones let's say a second user on mars after the first user requests the data um it because of the there's another user on mars which will be significantly closer geographically um they will automatically retrieve that data from mars rather than re-retrieving it from earth if that makes sense okay perfect i understand so i i built a planet earth dao which is a blockchain for all the entire planet earth and i believe in the future we can create a dao for mars a dao for venus and we will have planet marv dao planet be news dao right and with ipfs we can exchange data between different planets so my question is i build this is not launching yet but yes i i did it i had built it in github and i allocated in an interplanetary file system at the same that i built the interplanetary id system with global planet air passports that in the future people can also have passports in mars to travel through the rockets between different planets but my question is how because i create this space to allocate all the small chains that are big coin 18 you whatever there are so many so many you're putting in coin gecko and you see 10 pages with one saws and coins so we have to unit the planet earth right so we have to allocate all the i believe in interplanetary fire system but i can i cannot understand why the things are super difficult you create all the time i am saying you no no not not talking about directly ipfs but the the uh the technological system creates all the time layers in the middle you know why we cannot go directly one planet earth one place to put the data and start moving the the civilization to the next level is yeah uh sorry yeah you got cut off but if uh if you can give me like a concise way to word your question uh in text um i will definitely take another stab at answering it um is there anybody else that has any other questions or did i miss any above in the chat when i didn't know how to open it um is the dropbox project still on or vision is like that oh i'm sorry i don't know what you're referring to as the dropbox project um but i do like the idea of a uh a dropbox over ipfs like google drive yeah yeah yeah um i when i first so a year ago when i discovered ipfs and i started diving into these technologies um i i did notice that was the first thing i noticed is that um a dropbox or like a google drive like thing seems to make the uh just seems to just make total sense on the system which uh i feel like that's that's also what you're seeing um uh right now what i've created is something called ipfsync which doesn't quite work as well as dropbox but i effectively end up using it to sync my own websites yeah yeah here i probably could just type out the whole url that's hopefully that's right all right um yeah uh but you did get it so yeah uh i lost my job now that's what i get for clicking you around but um hmm it's actually kind of surprised totally lost that oh there it is but um yeah i am working on ipfs sync whenever i can but it is a little slow right now um but as for an actual full-on dropbox replacement like i don't know off the top i had anything working on specifically that i know there are some angles you can take like a uh like a fuse driver uh some people are working on if you know fuses it effectively makes it easier to uh to mount different things onto your system and view the data directly um i think that could be uh like a really interesting path for creating a dropbox-like system um but right now uh ipfs sync is the only thing i know about the top my head but if you [Music] had anything in mind that you want to build i'd love to see it thank you oh you're welcome all right yeah loving all the uh the questions and uh let's see many names are i recognize emil oh hi emil um about pdp games chess are board games how do you prevent that one player it's using ai to win the game and the nft oh yeah that's uh i forgot that's a hot topic in the uh in the chess world right now eh um that's another really good question preventing ai will be really hard um if you did want something like that you would want some sort of reputation system where users can have which and then you'd need some other system to prevent people from gamifying the reputation system of course but uh or gaming i should say um but uh yeah the best i have is like a reputation system so as players play against other trusted users uh trusted users vote for another user being trusted maybe could be weighted more or maybe you could have some sort of stake involved um but uh yeah it just comes i i think the best thing is just some sort of trust model um would be the best you could really do but i guess uh yeah for the nft example who's to say that somebody wouldn't be honest for a hundred games and then an nft comes on the table for it's worth like just a lot of money to that user yeah okay awesome yeah and then they just decide to cheat on that one game but yeah cool i'm glad that that helped put you on it on a path and thanks for the question lots of good questions here all right now i'm scrolling back up really quickly i don't know oh it looks like everyone is helping each other that's nice all right well is there a way to make an indexer on ipfs by the way um oh i i would say absolutely um one thing um i've been wanting to see is a sort of search engine which i guess wouldn't be like a true indexer but you could think of the dht as sort of um an indexer people i believe there's been a few softwares made i'm sorry i don't know any off the top of my head um that effectively scrape the dht and try to categorize the content um so there definitely is a way there i like i can think of a couple paths um one of the ways that i like is that uh an ipfs node can store like their own index and then you you'll have trusted peers which could be like your real life friends for example um and then you could uh maybe trust the data that they give you less but really at the end of the day what's happening is you uh can you'll effectively be creating a search index on your own node um and maybe you could distribute that out in other ways it's really a pretty uh fledgling idea let's see still price is down file coin providers can handle it yeah actually uh with the full price down uh file coin providers are still going strong um the network just seems to be getting more and more powerful um but yeah i've noticed the uh same thing the price dropped but um follow coin providers are still fine uh they work uh they get their uh network reward and everything still seems to be fine so right now the way i see it is with the file coin price being lower uh storage is just cheaper which which is a good thing all right and also if anybody um has sent me dms or will be sending me dms i will likely yeah i'll be able to get back to you on monday likely at the earliest but i might be able to get earlier i'll try um and again i am discordian hashtag 3926 on discord and if that's all then i guess i will pass it back off to luke thanks again everybody and thank you discording for another epic presentation uh these are always super insightful they're always very valuable and i'm really glad that everyone had so much time to ask questions um if you can't think of any questions and you're just your mind is blank or something just came up and you know we're not going to get to it right now i highly recommend connecting in discord like you said uh he dropped his details in the chat um i know there's gonna be a million questions so use that as a resource the discord will continue to live even after these zoom calls are over so uh make sure to connect with everyone in there and uh good luck hacking we're looking forward to seeing what everyone builds uh with ipfs and and filecoin we're going to be closing the room right here but i wanted to give a quick shout out to discordian again uh we love having you we're glad that you were able to come through and uh impart some knowledge on with everyone yeah thanks so much luke i i absolutely love doing these so thanks for having me again right on right on well we do have another session in about uh 14 minutes so i look forward to seeing everyone there uh until then uh take 