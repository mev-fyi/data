foreign [Music] next up we have an arc to talk about Cello's transition to an ethereum L2 and we want to make sure this is more in depth around what you can look forward to so instead of just talking about high level what's happening we're going to actually talk about the specifics of how do we actually make affordable transactions happen so without further Ado let's welcome Mark here on on camera and we'll either get started thanks very much it's really great to be here um I'm just going to bring up my slides cool be good to go how are you guys doing today ah cool well um once again it's really great to be here um my name is one of the co-founders of cello um and um I challenged myself and this year to do all my presentations using emojis so you're going to see a lot of emojis here today and if you like the format definitely let me know on Twitter I'm at Merrick underscore uh and then likewise if you have any questions or any follow-ups definitely do not hesitate to reach out um and so um you know I just wanted to start um I don't know if there's a chat here or not but sometimes it's nice just to kind of uh start with a bit of interaction um uh I like to ask you know just how many people here um either are regularly using web3 products themselves or you know have friends who might be normies who are using them um looks like folks are watching on YouTube so it's a little hard to kind of provide feedback that's okay because you know I've asked this question in confidence in-person conferences and typically uh or actually every time the answer is very very few people are actually raising their hand um you know on the order of maybe five percent or so and that makes vitalik uh sad I would say uh shown here in the form of a sad cat Emoji um you know why not um and it's a real shame because you know I think this is the future that we want right like you want millions millions and billions of people streaming into the house of uh web3 or I don't know uh the the Best Buy of web3 uh here on a Black Friday um but it's sadly not the reality that we have today the current reality looks a little bit more like this you know there's just a few of us running around in in like a really exciting Bed Bath and Beyond you get to have all the fun um but others are sadly not um and you know luckily um you know a big part of why we don't have a lot of normies uh using uh what people platforms is around scalability and of course ethereum has a really exciting roll-up based scalability um road map and you know we're super excited uh to be part of that um with kind of the transition um from an L1 uh to an L2 which we've started talking about over the last couple of weeks um and so before we get into kind of the L2 design and what we're doing there and why we think it's super exciting um I wanted to just share a few slides about what cello is today in case you're new to it um and I think first and foremost you know and not surprisingly uh solo is a fully idiom compatible network it's currently a proof of stake Network um and it's a proof of State layer one uh it's been around for three years it's been running uh really well it's only had one um production incident um and so it's definitely be hardened I would say over those three years uh and it's a really elegant processary consensus protocol but with a lot of scalability and a lot of decentralization but I think the thing that makes sellout unique is really its focus on ease of use from the get-go we built cello thinking about what would it take for people to build daps on top of cello that were just easy to use for anyone in the world and that that meant really great Mobile support yeah seller has a really amazing ziki start base like client it has this protocol called social connect that we'll talk about a little bit at the very end which lets you send value to phone numbers it has all of these really nice mobile features and a lot of really exciting and big popular dapps on cello are in fact built in in a mobile Source manner um to be really good for ease of use I think you need things like gas abstraction and so from the beginning Stella has supported paying for gas with tokens and natively using eoa addresses so without uh the needs or even account abstraction um and and that's uh really really amazing and then to top it off uh seller was the first Network to offset its uh CO2 emissions programmatically using block rewards and so that's just a really nice cherry on top and you know because of that um first of all other networks have followed which we're really excited about but but also seller has become kind of like a home for refi projects there's just a lot of refi happening on cello which is really cool um and one of the really nice things about focusing on ease of use is that it enables a lot of real world use case type applications uh to be built on top of cello and one thing that's really nice about real world use cases is that they aren't really tied to um the crypto Cycles um so there's a lot of folks building payment products Community currencies micro lending products earning uh projects where you can earn on your phone using earned micro credits on your phone um and then also Universal basic income projects and all of these are not really tied to kind of bears and bull markets um and and so that means that you know they've been able to actually grow quite nicely um even in this in this bear market and you don't have to take kind of my word for it you know all of this is invisible now on Dune um and this is kind of what the active addresses look like on cello uh which is pretty cool to see a lot of growth since March of this year uh which is just um unusual I would say in this market um and uh nanson has a really cool table that shows kind of compares the chains that they're tracking and if you look at the last month you look at the last six months uh the active address changes on on cello are are higher than any other chain than Anson tracks and I think if you look at the current data we've also overtaken Phantom which is really cool see okay so that's just what cello is um hopefully we're now all on the same page but we're here really to talk about the the L2 roadmap for stello um and so I wanted to kind of dive into into that right now and you know one of the interesting things about uh creating or transitioning an L1 to an L2 is that you end up with some constraints that I think are are different um and you know a little challenging I would say you know compared to if you're just launching a new uh L2 from uh from scratch um and so what do those challenges look like uh I would say there's two really major ones uh the first uh is around um uh throughput and transaction costs um and this is hence the title of the talk uh on cello you know because we have a very scalable say consensus protocol we can process a lot of transactions per second uh which means that gas fees are very very low on cello and that's attracted a lot of applications that that require really low gas fees right like those payment applications where people are sending stable coins around to each other um or um the micro lending um dapps which you know are are most useful in Emerging Markets where people are more price sensitive um and then also just Community currencies any any time that people are using crypto rails for medium medium of exchange use cases um people tend to be a little bit more sensitive around fees than uh than elsewhere and so um we have a lot of those use cases on cello and it's difficult for us to transition to an L2 and then suddenly you know uh increase gas fees uh to the order of tens of cents because we need to store transaction data on on ethereum and so the solution for this problem um is to to use eigen layer um so eigenlayer for those of you if you're not familiar with it it's a really interesting restaking protocol on ethereum that effectively allows ethereum validators to opt into running additional services uh eigen there likes to talk about this uh as creating a Marketplace for trust so if you think of each ethereum validator as we have a an operator on or uh on a actor in the network that offers some degree of trust right that they're gonna you know validate uh the blockchain correctly um then eigenlayer effectively allows people to tap into that trust and purchase additional trust for their services and since there's a ton of ethereum validators right there's a lot of trust there that can be tapped into which is really really exciting um and you know one of the very first um apps or middlewares as as eigenlayer is calling them um to to um to be launched on on eigenlayer is kind of the flagship middleware that the team the eigenlayer team themselves are building which we're calling eigen Da and so eigenva is effectively bringing dank sharding to uh to ethereum um potentially one or two years ahead of when tank sharding will will actually roll out um and that's really exciting because dank sharding for those of you who have been following it effectively is a much much more bandwidth um favorable way of doing data availability it turns out that data availability even in a decentralized network is an embarrassingly parallel problem uh it's only hard if you can pair it with consensus so if you only do data availability then you can actually do it for significantly cheaper um then you know it is to for example pay uh for data availability on ethereum on the L1 today um so that's exciting it allows us to you know really dramatically lower the cost of L2 transactions um and then Challenge number two um and then of course by lowering those costs you're also able to increase the throughput of the of the L2 as well which is also really really important uh Challenge number two is you know Stella has a lot of node operators a lot of validators a lot of full nodes um and you know it'd be a real shame to um just give all that up and move towards kind of a single sequencer um it really feels like it'd be a step backwards now of course I think many uh uh uh l2s today um are looking at ways to run their sequencers across multiple nodes um but you know alas we're not there yet as as a whole industry and so one thing that we're excited to to do is contribute to the Future by effectively taking our you know production ready consensus protocol that that again I mentioned has been running live for three years and turn it into a decentralized sequencer and then really make it a public good that you know any anybody can also use to decentralize their L2 as well um and then Challenge number three um and for those of you who've been following very closely you may remember I said there were only two challenges uh that we thought of at first but you know alas nothing is that simple uh as we were looking into this we learned that there are actually um additional things that we have to worry about and this kind of additional challenge this third challenge uh really is a one-around finality um so solo has offered one block finality since the network launched three years ago um and many LTS today they um they don't offer that same uh one optionality um and it's primarily for two reasons um I think uh it's um you can have reorgs that happen on the L2 side but you can also have bjorks that can happen on the L1 side that then affect the altitude state um and so in in the design that we put together um we address both of these um the first is on the L2 front um since cello already has some economic security that guarantees this one block finality rule using slashing for equation uh it's possible for us to to reuse this and make it so that um validators today or decentralized sequencers tomorrow I won't have to um uh well we'll be punished if they ever cause a reorg and so that gives us some economic security again on the L2 front you won't have reorgs um and then the other uh idea is around uh slowing down deposits and force transactions a little bit so that they are only executed on the L2 side uh once you get finality on the L1 side um and this has you know the downside that it makes kind of bridging just a tiny bit slower but on the flip side you end up having uh this resilience uh anytime the L1 reorgs uh you won't have to reorder as well um and so what does all of this look like together um I created this little example um demo here that I wanted to run through uh I think this makes it a lot easier to kind of understand what the design of this looks like uh we have um three main actors and then the ethereum chain so we have decentralized sequencers on the left you have the eigenda node in the middle uh and then you have the L2 full nodes on the right and then we have kind of all of ethereum uh down in the bottom and so as with any chain um you know the first step is to effectively collect a bundle of transactions uh that have been gossiped throughout the network um and in this case uh the leader in the bft consensus uh that makes up kind of the consensus protocol um that these decentralized sequencers are using you know the elected leader which changes for every every slot basically proposes a set of transactions that will constitute next the transactions that go into the next block and so it will then gossip that around to all the other um sequencers and then using bft consensus which is a multi-step protocol that I'll just simplify it into one step uh eventually this leader will get back a aggregated multi-signature of all of the signatures of all of these decentralized sequencers and the bit factors so you have accountability uh that shows who who assigned that particular bundle of transactions um and once you have this you know then you know that for this slot height you know the decentralized sequencers are committed to the the set of transactions and so we're ready to kind of post that to eigen da um eigenda will then uh return an eigenva certificate which is also a multi-signature threshold based signature um and uh and then the leader uh will then have everything he needs to put um to effectively commit this transaction bundle to ethereum and it does that just by you know posting the eigenva certificate uh to ethereum um once that is on ethereum then any full node that's interested in following the LT chain it can download that certificate it can use that certificate to get the data from the data availability layer by querying eigenva that gives it the transaction bundle and multi-signature and the bit vector um and from that it had each of these fill nodes have everything they need to effectively derive the LT block um and so they can they can do that here once they derived it they can execute them and um and they're Off to the Races um and so this is really nice and elegant and pretty simple um but um you know there is some latency to having to go through ethereum in this way and one thing that op stack and optimism does that's really really nice is that they have this concept of um a network an L2 Network where you can gossip around uh what are themed unsafe blocks so that fill nodes can kind of follow the network a little bit faster with a little bit less latency um and so that uh that's something that this kind of design um is is compatible with um with the one caveat and you know this is true in in op stack in optimism as well um sometimes you may find that um what you pull from ethereum later on will not match what uh was a gossiped around before um and so in the case of in most l2s today you know that will cause a reorg and you know you have to reorg because I think the ethereum uh view of things is is the final View and it takes precedence over everything else and so the best we can do um to avoid those reorgs is to effectively make it economically very very expensive uh for um nodes to to effectively equivocate across both of these different paths and the way we do that is by um um right and so uh if you don't do that you don't have unblocked finality but bring back one block tonality the way we solve this is is by adding slashing uh for equivocation in this way and because we have the bid Vector we can also see exactly who we're convocated across these two different blocks and then we can we can slash just a just those validators and this is something that we have today already in the L1 and so it's actually quite easy for us to bring this over to the L2 design because all the code is already written and it's been in production for three years and it's really nice because it it effectively makes it very economically expensive to equivocate to the point where you know nobody on the sellout network has has done that since network has launched for three years so this is really nice and so um maybe just summarize this design gives you scalability and low gas fees by leveraging eigenva eigenda as I mentioned is kind of bringing the the design of tank shotting to ethereum um many years before dank sharding will be rolled out and it's still run by ethereum validators and so it still offers really nice trust assumptions and because it uses that um uh dank sharding like design um it's it's effectively allows you to to cut the transactional costs on the L2 Side by 95 percent uh which is which is really really nice um we of course also get to maintain the current level of decentralization um offered by cello which is just really nice for increased uptime and for better censorship resistance um and then finally um you know we worked really hard to to also keep the one block finality design that cello offers uh which you know does come at the cost of a slightly slower needed Bridge um but ends up having uh much better ux and you know we've started chatting with eigenlayer as well about how we could add additional Economic Security here this design only offers cello Economic Security uh to enforce this one luxionality but you can actually go a step further and also opt into a restaking nodes that can add additional Economic Security um and uh and ultimately I think this makes so potentially like a really nice place to to roll up to if you're building an L3 uh because you get um you know these short block times this kind of nice guarantee about not having to reorg um not to mention the the cheap data availability that you effectively inherit through the cheap transaction fee um so yeah so that's the that's the design uh you might be curious uh you know what the timing is and what's next um and so you know we just posted this um design in a very detailed proposal to sell a governance just at the start of ECC which was you know just a few weeks ago since then we've gotten you know just an incredible amount of really amazing feedback and just a lot of I would say excitement for this direction uh it's been um pretty cool to see you know other ones now also kind of following suit and uh talking about making a similar change and so I think in the future we're going to see you know ultimately this um large amount of maybe coalescing around ethereum which I think is you know really again amazing for the ethereum scalability roadmap and I think ultimately just really great for users as well um and you know we're just excited to be at the Forefront of that uh since the proposal went out we also had a temperature check governance vote on it which um uh passed with just a ridiculous amount of um um I guess um folks in favor of it uh and so that was really really cool to see as well so generally the cellular ecosystem is excited about this um and so that that means that you know now the harder work begins um and you know of course it wasn't easy coming up with that architecture and that design and we spent a lot of time uh working on it before making the proposal but but now um we're working hard to turn that into uh into an actual um deliverable that we can use to then upgrade the network um but you know when it comes to folks here you know especially developers who are participating kind of in the hackathon uh this weekend um you might be wondering what this means for you uh and there you know the good news is that um beyond all the benefits that will come from this you know the increased alignment with ethereum the um better bridging uh better security um all of those things all of those things will effectively come for free because this will be hard for into the network um again assuming that the folks running the actual solo Network are excited about the channel deliverable but it seems like that's the case based on the governance vote um you know this will ultimately be deployed through two hard Forks that will upgrade seller and transition over to to the cell too uh and hard Forks um just like on other networks um are very non-disruptive for people building the apps on top of the network and so that means that you can effectively start building on Salah today uh and start benefiting from this future design and from you know all of the amazing features that seller offers today um and uh since you know I had a lot of time for this talk um I thought maybe it would make sense to just spend a few moments talking about some of these cool features that are available today and you know what you might be able to um to do on cello both today and tomorrow but before I get into that you know I think research shows that people's attention spent and so Wayne after 25 minutes most people you know just naturally need a little bit of a break and so I just wanted to do like a one minute intermission uh and so if you've been walk watching a lot of talks and you know just needed a breather now is a good time just to yeah grab a drink maybe take a deep breaths maybe stand up um and we'll get started in just 30 seconds I'm gonna take a drink as well just look what we're doing it look little awesome um hopefully you had a moment to um just take a deep breath maybe get some water stand up and uh yeah be ready for the next part of this talk it's going to be much quicker than the first part uh it's just a few more slides to go um but you know I thought um frequently when when chatting with builders people are always very interested in learning about what what's different what what can I do that's uniquely available on Stella that I can't do elsewhere and so I thought it would be nice just to have a few slides to cover that um and so there'll be three of these um cool things there's actually many more but um it's just not too much to go through in any one talk but um I would say the very first cool thing that that you may want to experiment with um today on a lot of your building kind of a hackathon project um is kind of Cello's native gas abstraction uh that I mentioned before um so again you can pay for gas with tokens on cello these tokens have to be allowed listed through engine governance and right now there's three tokens that are available a US dollar stable coin a Euro uh stable coin and a Brazilian real stable coin I think there's about five additional uh stable coins uh and actually some non-stable kind of stat um uh currencies as well uh that are going through uh governance right now they're at various different stages of going through governance and so this list will expand pretty quickly but even just for the current assets today uh one of the really nice things about being building the apps that support paying for gas with these is you know you can build use cases like payment use cases where you can send the stablecoin to someone they can be a completely new wallet and you never have to worry about them having to figure out how to go get gas uh money to then be able to send it on to someone else and so on you'll never have that really frustrating feeling where I'm sure folks here have you know sent uscc either to themselves or to someone else you know through a new wallet and then only to realize that those funds are kind of stuck until until you're able to get some East over to the address um and so if you're interested in experimenting with this um I would say VM is probably one of the the best ways to to play around with this uh VM for those of you if you're not familiar with it it's kind of a um uh typescript focused alternative to either web3.js or to ether's JS uh it's it's created by the the folks who built wagney it's really quite elegant um and they have now native support for paying for gas with tokens on seller in their transaction objects so this is really cool uh if you're interested in playing around with this learning a little bit more uh the PM who who worked on this he gave a ACC talk a few weeks ago and he has a nice GitHub repo with the slides to his talk and with some demos of this that you can find over at I think his account is 0x Arthur XYZ and then he has this ECC presentation repo so definitely check that out second cool thing is around address abstractions this is a little different than account abstraction uh cello has since the beginning made it possible for people to send payments to phone numbers and in fact map phone numbers and other social identifiers to wallet addresses um and this enables you to create some really really cool experiences um the the current incarnation of this offering is called social connect um and um you can use social connect to effectively build apps to let you send uh cryptocurrency to phone numbers instead of to wallet uh to address sorry publicly derived addresses uh like the ones that are you know uh plaguing all of us in crypto today um and so this is really really neat um it actually does this in a privacy preserving manner which is really cool it uses some really elegant multi-party computation to do that um and so it's it's a really really cool design and you know you can build them so that you send value to phone numbers even before the recipient creates a wallet but you can also just build apps that that tap into kind of this data and effectively allow you to tap into what you know I believe is the biggest social graph in the world which is kind of the amalgamation of everyone's contact lists on everyone's mobile phone so this is arguably bigger than kind of the the Facebook social network uh so definitely check that out uh you can learn more just by going to socialconnect.dev uh it's it's really neat um of course seller also supports account abstraction with 4337 and there's a whole bunch of um API providers offer that too and so if you're excited about account abstraction definitely uh definitely check out solo as well but um and you can pair that with with address abstraction as well to build some really amazing experiences and then finally uh this is the final kind of set of slides um the third really neat thing um that that I think is pretty exciting um is something that we're calling wallet shortcuts um now it's really hard to create a series of emojis to represent shortcuts so this was the best I could do uh and um shortcuts are our feature now being offered by velora which which is kind of a flagship wallet on cello it's funded by some really incredible investors including um um Holly chain and recent and um SP Angel as well um and um you can learn more about velora at valora.xyz um think of it as kind of a wallet designed for uh for normies we try to make things as easy as possible um for for all the users leveraging all of the like awesome features that sella has to offer uh but one thing that um ballora's been doing now is um you know velor supports has an adapt browser you can you know connect your wallet yeah to dapps and interact with all of these amazing mobile apps ones along with it but a lot of Builders who are building these daps they they're excited about offering tighter Integrations with the wallet uh ways to make it possible for people to interact with their dapps without having to go and load the DAP browser and load a web page and everything and so shortcuts um and and generally hooks in velora are a nice way to do that yeah you can use hooks to help velora figure out how to price your asset you can use folks to help Laura figure out how to price dap positions so if you have an LP token position for something and you want to price that you can do that and then finally you can build these shortcuts that effectively allow your users to interact with your dapps with just one tap natively in the wallet without having to leave the wallet and go to go to your dapps web page um so you know obviously really useful for claiming rewards but generally you can use these to kind of push people through the life cycle of your product one step at a time and you know the Laura is working to also make it possible for you to send push notifications to your users to kind of guide them through through that step through those steps and so if this is interesting if you're if you built a Dap and you're trying to get more engagement with your users you're trying to find ways to make it easier for people to um go through the funnel of all the operations that you wanted to do without having to necessarily load your Dap You can just do it directly in this popular wallet shortcuts might be for you and you can learn more about that at docstop or the XYZ um slash overview um so I think that everything I had and I think that brings me pretty close to time um yeah thank you so much really really appreciate uh you guys listening and and I'm not sure if it's possible to take questions in this format but uh if so I I have five minutes left and happy to answer anything that's on anyone's mind but hey thanks again for all your time jumping for Karthik um but yeah thanks thanks for the presentation and for being a part of this um I did ask if there's anybody who has questions in the chat so if they kind of ask any questions I'll surface them here um I mean one of my questions around this presentation was just sort of understanding how you sort of made the decision and maybe just your decision Matrix around you know ethereum versus not trans transitioning to ethereum within the ethereum ecosystem like choosing um the op stack versus kind of all the other opportunities out there um there's a lot of great stuff happening all over the web 3 ecosystem um and would love to just kind of hear a little bit more power around how you're thinking about um Opie stack versus other opportunities and and uh and what you consider yeah it's a really great question um yes I think the ethereum um decision was a no-brainer for us um Stella's origin story was actually you know we tried to build um that wallet that I just shared velora and we tried to build it on top of it even five years ago we wanted to build basically a global venmo global cash app global revolute accessible to anyone in the world and not surprisingly you know back then it was it was difficult to build that on top of ethereum and make it easy enough to use for anyone in the world especially if you wanted to also make a decentralized and connect with the like client and everything um and so that took us down the path of uh working on cello but you know in our mind we we were always part of an extension of the ethereum ecosystem uh we were just kind of the mobile real world use case uh extension to the serum ecosystem and back then there was no other way to really accomplish what we wanted to do without you know launching our own EDM compatible uh layer one um but you know times have changed and you know ethereum has this incredible scalability uh road map that that uses Roll-Ups um and it just made sense for us to um to you know propose to the community to to transition into an L2 uh to be part of that road map and almost to have you know this kind of coming home moment right like uh coming back into the fold so to speak um and we were just really excited to see that you know the whole ecosystem was very very excited about about the direction and we saw the just how many people voted yes on the proposal and I think also the ethereum ecosystem um has been um you know just really amazing about about um celebrating this as well um so that's on on ethereum why op stack I think that's also a great question you know I think op stack it has a really nice modular design that I think really fits our needs really well because it um you know as we talked about there's a few things that we uh are working on that are different from other l2s that we think are important for uh seller users uh and and the op stack code base just is very uh amenable to um to um making those changes so I think that's um yeah that's that's part of it you know we're obviously very excited about uh about the the broader kind of op Network and we have developers who are actually started off on cello and have been building um uh Bedrock that we're close to and we just generally like you know I'm doing the folks in the op stack ecosystem and so uh I think that's another a big part of it um uh I will add that since making the proposal we've actually had a lot of inbound from a ton of um you know really great projects in the ethereum ecosystem that are um I think offering to collaborate and you know find uh ways to potentially speed up the deployment of of this um that was I think a surprise but um certainly you know a welcome surprise and so um it's just been really interesting having those conversations now as well amazing yeah it's been great to see how much support the proposals got overall let's see who's on what I can you can almost call it unanimous I would say uh based on the boat and um yeah and I mean I just saw that you know metallic jumped in with some questions on the proposal as well uh lots of Interest lots of support um really excited for uh the work that you are doing and the work that you presented here um and excited to see that we'll roll out um back on public with your game let's make it happen amazing well thanks so much for your time really appreciate it and uh yeah have a great rest of your day have a great weekend and uh I'm gonna move on to uh the next stop now awesome likewise it was thanks for having me everyone 