go up on youtube hi welcome to our final day of hack money workshops um we have federico here from you swap grants program doing a workshop on a fast efficient method for back testing uni swap lp strategies questions will go into the zoom chat and federico will answer them all at the end and with that being said i'll pass the mic along to federico hi uh welcome welcome everybody my name is uh federico landini and i'm the co-creator of defilab.xyz it is a website where we build tools to help user understand the possible risks and the rewards of using various d5 protocols one of our tools is a unisof v3 simulator and backtester it allows liquidity providers to test different strategies and comparing the impermanent loss and the potential fees that are generated for different configurations of ranges or between different pools we received a grant from the unis of grant's program to develop this tool and the grant also included a research part to investigate on ways to back test unisoft v3 strategies and i will introduce you to results of the to the results of this research in just few minutes while i was working on the grant i got more and more engaged within the uni swap community and a few months ago i also started collaborating with the unisop grants program joining the team that reviews grants proposals and supporting grantees in the process of developing their projects within the ugp i'm also helping running the community analytics program an effort we launched to incentivize the unisop community to create dashboards and analytics to showcase data about unisop and defy before and go before going to the core of this presentation and talk about back testing unicef strategies i'd like to take a few minutes to introduce you to the unisop grants program unisop as you probably know is one of the most popular dexes in the defy space and is currently deployed on ethereum polygon arbitrary and optimism in december 2020 units of governance voted to approve the creation of the units of grants program the goal of ugp is to support the growth of the unisop ecosystem funding teams working to improve governance usability tooling and community a particular attention goes to initiatives that are open source and that can com can be considered public goods uh initiatives that have an high impact for the ecosystem but might not be realized if they are not funded by the grants program in little over 10 15 months ugp founded around 100 initiatives for a total of around six million dollars we encourage all the hackers of the akmani hackathon to go visit our website and if you are working on an idea that can contribute to the growth of the unisa of unisop or its ecosystem you should consider applying for a grant we will very be very happy to talk to you and to discuss together how we can help you to bring your vision to life for the acmoni akaton the unisop grants program committed 16 000 dollars in prices for the best units of acts we identified two categories for this competition the first one is about tooling uh if your team is building tools to help other developers building on top of unisop or if you are building tools to improve the end user experience you should apply here other example of this category could be libraries or framework to help coders easily interact with unisop or tools to help end user abstracting complexity and or providing a better user experience with when interacting with unisop itself the second category is all about innovation you should apply here if your ack is using unisop as a lego block within the five processes or maybe if you are building additional functionalities on top of unisop or even if you are using unisop in a new and you know innovative way these categories are quite broad we did this on purpose because we didn't want to limit your creativity and fantasy we encourage you to building complete freedom and submit your ideas as long as they are related to unisop for each category there is a price of 4 000 dollars for the best submission and an additional budget of 4 000 that will be divided between the best runner-ups we are very excited to see what you come up with and we wish you the best of luck okay so now let's go to the core of this presentation and let's uh get started talking about back testing lp strategies uh for units of v3 in a fast and efficient way i'll do my best to keep this presentation simple and clear there is quite a lot of formulas that i will show you and i know it could be a bit over overwhelming to absorb everything in around 20 minutes and this is why at the end of the presentation i will present you some links to documentation uh where the same logic is explained so that and to our github repositories so if you will want to dig deeper into what i'm going to tell you you can refer to this documentation so the success of any units of bitter strategy depends on two fundamental elements the first element is the impermanent loss also called divergent loss the terms refers to the loss or profit that you could incur due to a divergence between the price at which you open the lp position and the price you close the lp position this impermanent loss is the deterministic as we can see in the gif that i put it in the slide we can determine the value of our lp position for each level of price this allows us to clarify to clearly understand the impact of the impermanent loss in various scenarios and quantify quantify mathematically the risks involved in each strategy the second element that determines the success of a strategy are the trading fees collected by the position that we define trading think trading fees depends on the trading volume and on the amount of liquidity locked in the pool we cannot forecast these parameters for the future however we can look into historical data to guide us in our decision making for example historical data can give us an idea of the average returns of a pool helping us to shape our positions so how can we determine historical fees the most obvious way to calculate the fees is to prove bruce force the calculation so how can we do that we can download all the swaps for a pool in a given time frame we can download all the liquidity state of the pool in the same time frame then we can merge the data and calculate the fees for a specific strategy the advantage of this method is that it can be very precise however it's very data and resource intensive the amount of trades to be downloaded for example for a popular pool like if usdc for just a couple of day is very very high making this method very slow it's also not very handy to compare different pools performances as you might know there are different pools for the same assets in unison for example if usdc can be found with different fitters or it could be found on the different networks on polygon ethereum optimism and arbitrary so if you if if we want to test the same strategy on these different variants it would be very slow and cumbersome because we have to download all the data all over again but what if there is another way so for our website we wanted a method to be fast enough to be run on screen without the need of downloading data locally and without the without the need to wait for time consuming calculations so we went on a quest to look for an alternative solution we went back to the unisoft v3 white paper to understand in detail how the unisop smart contract works reading the documentation we could see that for each pool the contracts are tracking the total amount of fees that would have been earned by one unit of unbounded liquidity that was deposited when deposited when the contract was first initialized we can define the unbound liquidity as a strategy that provides liquidity to the entire to the entire price range where the minimum limit is zero and the maximum limit is infinite if we track this value from the smart contract then we can simply calculate the amount of earned by one unit of unbounded liquidity in a certain time frame as the difference between the value fg at the end of the period and at the beginning of the period now that we know what we need so we need to get these uh unbounded fees from the smart contract we should think how we can retrieve this information one simple way to get this data is to use the graph for this the unis of v3 subgraph that is available for all implementation and on the various networks allows us to read this value either on daily or hourly base for our purpose we decided to use the hourly subgraph which allows to keep us which allows us to keep the balance between accuracy in the results and efficiency as an example if we want to backtest 30 days we only need to retrieve 30 multiplied by 24 hours so only 720 records another big advantage is that we can easily integrate the graph in our website without the need to use data and this is very advantageous for us so this is the best solution for our use case but if you want to use this back testing framework for more advanced applications uh running your own node or using infura to collect the data would be a better solution so the big big benefit in this case is uh the possibility of collecting data in smaller intervals than one hour so for example half an hour five minutes one minutes depends on your needs this will guarantee better results and accuracy in the back testing as we will see later now that we collected the fish generated by one unit of unbounded liquidity we need to calculate some additional data about the strategy that we are analyzing so for each period under consideration we need to calculate the liquidity provided using the liquidity provided using the liquidity function the liquidity function determines the quantity of liquidity provided and depends on the price at which we deposit the liquidity the mean of the range the max of the range and the amount to be invested so the mathematical details of this function are described in described in the white paper and there are some libraries available that you can use to calculate these values i will skip the details at this point for simplicity but everything is very well documented and it's easily available available if you want to look further and i have some links at the end of the presentation that i will introduce to you beside the liquidity of liquidity of our specific strategy we should also calculate the liquidity of an unbound position where the amount invested is equal to the amount invested in the strategy with these two values calculated calculated finally we can determine the concentrated liquidity multiplier as the ratio between the liquidity and the liquidity unbounded all this calculation needs to be repeated for each period within the time frame considered because the values will change since the initial price will be different for each period with all this calculation complete we can finally determine the historical fees each period in the time frame a liquidity provider has basically two different options first they can decide to provide the liquidity for the entire range and in this case the fee they would collect would be equal to the fee unbounded multiplied by the number of units of unbounded liquidity their investment could buy them otherwise option number two they can provide a concentric concentrated liquidity position specifying a custom range that they chose in this case the fees that they can collect can be calculated as the fee that they would have collected with an unbounded position multiplied by the concentrated liquidity multiplier multiplied by the time that the price spent in the selected range we should repeat this calculation for each period in the time frame and finally some all the values to determine the fees that were generated okay so we were able to calculate the fees the historical fees in an alternative way without the need to download all the data from the swaps and all the data from the liquidity the first big question is does this actually work we did some tests uh using live position on unisop on ethereum and in the chart that you can see on the screen you can see the results we obtained so we can see that the method is very precise when the price spends the majority of time in the range so on the right side of the chart the method is also very precise when the price spends no time in the range at all so on the left side and this part is quite easy because in this case the fees collected are zero so it's quite easy and finally the method is pretty accurate when the price spent sometimes in the range and sometimes outside of the range and this is shown in the center part of the chart a good thing is that even in the in this last case where our accuracy is lower we can quantify our precision we can measure the time that the price spent within the range and we can give the user an indication of the confidence of our measure so if the time of spending range is around 50 as you see here the the confidence will be lower and we can inform the person so the results that we are showing you here are good enough for our use case so um it's good enough to be shown on a website like we will see in a few minutes and to give you a good overview of your fees but if you would like to improve the precision because you have a use case that is more demanding from that point of view i would recommend you to use infura or your own node to take the data in a shorter time frame because that will greatly improve the results of the calculations okay i would like now to show you the uh our website and our the backtester works on our website so this is our website where we do uh simulation and back testing of units of b3 strategies and if we go a bit further down we can see here the part about the strategy back test so on the left side we have some input parameters where we can define our own strategy selecting the pool so in this case uh ethereum usdc in entering the investment that we want to deposit in this specific position and then defining the minimum and the maximum of the ranges of our strategy here you can see a chart a bar chart where each bar represents the fees that the strategy would have collected on a specific day so we can see that for example if i change my strategy and i change make the range larger increasing the max value the backtester is calculating online the updated results without any uh slowdown and even if i go and select a different pool so for example [Music] bitcoin ethereum after reloading for a second uh the results are shown again and again we can change our strategy and the tool will calculate our results in uh in a very quick way we can also change the interval the time frame that we want to calculate and the results are also very very fast okay so now you know everything there is to know about our methodology for backtesting unisoft strategies and i think that uh showing it how it works on our website gives you an idea of how fast at the end the results are in their calculation so there are few reasons why i decided to make this presentation that i would like to share with you first of all i think this methodology is quite interesting and could be used more could be used for more use cases we are currently use it on our website as a back test to help user pick their strategies but i could think about other uses for example i think it could be useful in data analysis to do researches on how different strategies perform in different market conditions another use case i could see is as an exploration tool for money managers defining new units units of v3 strategies and i'm sure that other people could think about other use cases so we would love to see any of the hacker building on top of this framework the second reason why i decided and i wanted to share this with you it is because i think it shows case it showcases how a non-developer individual can contribute to the space or to an academ like this one i think that going deep in understanding how a protocol works and the protocol design can uncover new ways of doing things and unlock new ideas and possibilities yes so now we are at the last slide and i'm listing here some documents and some documentation that you can refer to if you want to know more about all these so the first uh link it's a medium article where the logic that i just described is uh is described again in details so if you thought it was too fast or there are some steps that are not clear you can refer to this medium article then we have a link to our defilab github repository where you can find a python script to run the backtester so i did the code myself so it's a bit ackey but it works very well and also we have uh and also if you want to add the vector c logic to your web application there is a node module for that that you can use then i add links to the unisof b3 white paper and documentation that is the basic documentation that i used to study and to come up with this methodology and finally i linked a python library where you can find the liquidity functions that i used and that i spoke about a bit uh before that they were made by jmp that it's also a uni it's also another ugp grantee so i think it's very cool to see that we built our product using jmp work and we would be really happy if somebody would build something on top of our work i think this is a very nice example of the benefits of a grants program and of the benefit of open source codes and open source ideas i really hope you enjoyed the presentation and i think that we have still sometimes some time so i will have a look if there are some questions uh about the back testing and also if you have any question about the unisoft brands program please feel free to to write it in the chat so okay sorry uh uh the first question yes it was already answered by uh rumored i hope i didn't misspell your name but lp stands for liquidity provider in this case so what it means is in unisop you have the possibility of depositing depositing capital in the automatic market maker to um facilitate trades and doing so you earn fees for that so as a liquidity provider you can decide to deposit your liquidity define a range for which your liquidity will be active and you will be rewarded with trading fees so this methodology that i just described is helping you to determine and to estimate our strategy performed historically so i hope that this helped you to understand a bit better so will there be support to backtest on unison v2 pools so the unis of v2 pools works a bit in a different way and this methodology specific methodology doesn't work in that case using uh v2 pulse it's easier and there are easier way to do all these however you could use units of v3 as we said providing liquidity to the entire uh range uh simulating basically a b2 strategy and in this case the the backtester works and you can see how much fees you would make in this kind of scenario and finally carlos is asking if you can pick a custom date range and the answer is not in our tool in our tool you can only test back to the last 30 days but the framework allows you to test whatever you want and even using our um using the sub graph you can query the date range that you want so you can look into the documentation and you can look in our logic and with a bit of hacking i think you could you could adapt our code or making it even better as i said using uh infura or running a node and you could uh you could backtest the the the that range that you would like so i don't know if there is any other question maybe about the units of grants program otherwise i think that uh well thank you very much for your attention um i think that just rated it if you have any question about the back testing methodology you can go to our website and you can contact me through our telegram group or through our twitter while if you have a questions or anything about unicef grants program you can either go to our website and there are contacts information there or you can go to the discord of unisop and there is a specific channel that is dedicated to unisop grants program awesome thank you so much federico for taking the time to do this workshop um for hack money uh yeah super useful super interesting um as federico said the team is reachable on discord um and so definitely feel free to reach out if you have any questions whether it's about the tech or about um uni swap grants program in general um and thank you to the rest of you for tuning into this workshop uh and with that being said i hope everyone has a great rest of their day evening morning depending on where you are thanks everyone thank you 