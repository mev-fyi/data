[Music] [Applause] [Music] all right next up as you've already guessed is our speaker vitalik who's always going to be talking about upgrading infrastructure for role of centric ethereum whenever you're ready feel free to uh kick it off great thank you um i'm going to i just share this screen and then i'll use the magic trick that you taught me to only share a portion of the screen um and then okay there we go do you see it okay uh yeah okay perfect okay um so great so today um what i will talk about is uh basically yeah thinking about this uh concept of a roll-up-centric ethereum something which is uh was a vision uh one year ago and is i think on the cusp of uh becoming a reality um or even is beginning to become a reality today and kind of think through uh some of the kind of side issues various pieces of infrastructure that we sometimes don't think about in order to make a roll-up centric ethereum world uh something that actually is a pleasant environment for uh for people to live in um so just um to uh kind of recap a bit um the the concept of role roll-up-centric ethereum started uh to be introduced around the end of last year um i guess of this post literally from october 2020 so 12 months ago and this was this came from an observation that basically showed that if you look at our current roadmap no any way that we could realistically do the roadmap we have a proof of stake first then data sharding um and then only after that possibly other kinds of sharding and so in the ethereum base layer roadmap there's only room for a relatively small amount of scalability like with virgo trees maybe 2x or 3x but can't really go far beyond that right um and the problem is that we need much more scalability like even today we think we need at least a 10x in the long term we need 100 to 1000x um so what what the only technology that is available and that was actually making a huge amount of progress even back then is roll ups for the layer 2 scaling solution so this was a kind of brainstorm of well given that roll-ups are ethereum's best hope what would a road map that's designed around that fact actually look like um and i mean the answer basically is well we have a lot of technology that we can already do to make roll-ups work and that to make roll-ups work better um so we have uh obviously roll-ups themselves um a lot of work being done on fraud proving a lot of work now being done on the cke vm to make evm capable as vk roll-ups possible um a lot some work being done on wallets the projects themselves have been making huge progress over the last year um and sharding itself right the first step of sharding is the data sharding and data sharding by itself is enough to increase the amount of data space available to these roll-ups by a factor of close to 100. um so there's um a lot basically a lot of things are already happening to make roll-up centric ethereum actually be a reality and uh today roll-ups are kind you know sort of kind of here right um so there is our real optimism you can do things on optimism there is arbitrarium you can do things on arbitrary there's rubric and ck sync you can make payments on we'll bring in zika zig there's polygon which is not a rollup and it's a trusted side chain at present but they bought hermes and uh they seem to be on on the track that will uh get them to being as uk roll up at some points in the future um so uh roll ups are kind of underway some and you can use some of them but it's not quite there yet right like the scalability of a lot of them is far from obstacles so like for example the when i wrote my blog post on rollups one of the things that i talked about was how to get the really big scalability gains you have to do a bunch of compression work and then get the transaction size down to 16 bytes and optimism in arbitrary yet have not done this um but but you know they're on their way to doing it there is uh um but until then right while transactions still take more than a hundred bytes um you know fees are not quite as low as they can be blueberry and zkc are at that level already right so their fees are you know sometimes like 20 sometimes 40 times lower than ethereum itself and you know once um these roll ups do add proper compression and they do add better signature schemes then they'll be able to get down to these row levels as well um so scalability is still a work in progress um evm roll-ups still have training wheels um so they still have centralized back doors um just because the fraud provers are either not quite finished or they're still in beta and that people are not quite comfortable fully interested thanks to them yet um so it's uh you know it's sort of come kind of on the way um but we're getting there right like the roll-up centric ethereum is not just a division now it's something where there's a very clear path to it and people are already starting to use projects that are either rollups or that are kind of well on their way to becoming rollups so so far roll-up centric ethereum is um i would say uh i would say just still a success um obviously a work in progress but everything is a work in progress so even the merge is a work in progress but we've had a successful test that two weeks ago um so it's happening but there are still things that are missing to make a roll-up-centric ethereum actually easy to use right um so you but there is you can talk about roll-ups being available in theory and then you can talk about well roll-up centric ethereum actually being in a blockchain environments that you as a user would want to live in um so what is the gap between those two things um so first like a kind of motivating question right why can't i use the lubricant to pay for coffee right like uh you know we want what blockchains you know we want the our big application of them is cryptocurrencies and we want cryptocurrencies to actually be useful as currencies right and um like what's the point of a currency if you you know if you can't use it to also pay for the small things right um so obviously you can't use the base layer to pay for coffee because the base layer is expensive and the base layer is meant for big and important things like way or two commitments but you know we have layered twos then we have lubricant and blueberry is already quite efficient um and but and we bring dust payments so why can't you use a blue brain to pay for coffee today right like like i think there's a lot of uh reasons for this like one is just there hasn't really been a serious effort toward making it happen but i think another big part of the answer is that blueprint today is kind of like a bit of an island right like if you're you're within uber and you're within if you're not within blue bring then like it's kind of hard to move funds to being within lubric right like you have to do a layer one transaction layer one transactions are expensive um then on top of that you have to wait so the ux of getting into lubricant if you're outside of wolverine is not very good and if you're inside of bluebring there's not that much that you can do inside of blueprint right like you can exchange you can trade you can have tokens uh there might be an nft feature but like you can't have your fancy d5 stuff like you can't have fancy nft auctions um you know you can't uh you know make a cdp and then borrow some points from that cd and then stick those coins into another magic divi thing um like there's a lot of fun stuff that you can do in a full evm environment that you just cannot do in lubricant because we'll bring doesn't yet support that functionality right so there's basically two ways of solving this one way of solving this is for blueprint itself to turn into a zk edm rollup and that's technology which is in progress but another part of the uh another possible solution is to make it easy to get into laboring if you're not yet in lubricant so cross roll of bridges right and so the this is a uh the sort of thing that i've been thinking about for a while that other people have been thinking about for a while so here on the left i have this post underneath the research where i give some ideas for how you could make um nft wrappers where the nfc could be issued in one roll up and then the nfc could be moved to another rollup and you can have nfts jump between rollups and you don't need that main chain transactions for this now there's a project called hop which is trying to make a trussless or scalable uh bridge to go between roll uh one roll of pants and other roll-up um there's uh i had another post on azure research that tries to do a roll up the roll bridge that only requires one side of the bridge to actually be evm capable so you'd be able to have a decentralized bridge between say optimism and blueprint um so cross roll bridges are important and i think we want crossroad bridges to be trustless so to have trustless safety and stressless aliveness to be infrastructure that we can count on to just exist um but this is still something that is in progress right um so the more work can happen on crossroad bridges the more we can make it very easy to move between any one of these ethereum layer two domains to any other ethereum layer to demand the better um but this is something unless there has been some work right there are already somewhat like limited cases where you can hop from one world to another but it's still something that needs to be worked on a bit more so crossroads bridges is uh what is one uh problem that needs some work other problems uh so let's take ems um ens probably this is the single most uh popular or most successful non-financial ethereum application right and it's a use case where it actually makes sense to use a blockchain for it um and uh so lots of people have each names um i have a donnie's name vitalik.e um you know lots of other people listening to this probably haven't done each name um status of the ethereum chat application um status users have uh like use.east names and as usernames inside of status um blogs can have values names so if you go to vitalik.east and try to like access it as a website uh then you you can find a copy of my blog um so lots of different applications of ens and the ens seems to be doing great right but there's a problem which is that it takes like more than ten dollars to update a dns record right so if you want to buy an ens name if you want to update a record um if you want to um like do anything on through ens then you need to pay more than ten dollars right so like for example if i want to update um the ens record for vitalik.e of the blog um so uh to update the ipfs content hash then that's something that i have to pay like more than ten dollars and so it basically costs me like i forgot some number of dollars somewhere between 10 and 30 i forget um every time i wants to update my blog if i want to keep it updated with the ns um so can layer 2 fix this right and the answer is it should right um layer 2 should be able to fix this and we should be able to move ens over to layer 2. um in order to make it so that these record updates instead of costing 10 they can move to go down to costing two dollars today i'm 25 cents tomorrow and two cents uh two years from now once a shorting is stabilized but we need to have a standard for how to resolve ens domains stored inside of layer 2's right so there's two ways of doing this one way of doing this is to say we're just going to socially coordinate ens as a whole moving over to one particular roll-up right so we might say oh e s we're going to choose um arbitrary right and ens is going to live inside of arbitrary and uh every ens will just work the same way it works today but um instead of talking to the ethereum blockchain they'll talk to the arbitral up so i think this is not a great solution and the reason why it's not a great solution is that first of all it creates a long-term dependency on one specific roll-up and uh so far we're not yet sure which particular roll-ups will prosper which particular ropes google actually wants to use um and second um people might have other reasons why they wants to live inside of some other roll-up and so it would be nice if edm can live where they live right like people are not necessarily going to have an account on every roll-up um and you know if one particular person just likes optimism they want to live inside optimism then you know you should be able to have their ens domain inside of optimism um so what would be nice is to have some kind of cross roll-up standard right so ens should stay rooted in the ethereum chain but there should be a standard where if [Music] if from the point of view of the ethereum chain you move an ens domain over to a roll-up contract then you would be able to manipulate and do things to that ens domain inside of the roll-up um so good news is that there's this protocol called during erc3668 secure off-chain data retrieval which is trying to serve a bunch of use cases but where this is one of the use cases right so basically the idea of duran is that you would be able to set your ens record to be set to an address where that address defines an offshoring record keeping system um and that offshore record keeping system it would basically have a smart contract where it would point you to a place where someone trying to get in the data would be able to grab the uh um basically state inside of either the optimism world or the arbitrary role versus whatever role you choose i'd be able to grab the state the the state that shows what is the current state of that particular record and then the contract would also have a merkle prover and so you would be able to fetch a miracle proof and verify the mortal proof and that you would basically still be able to actually get like what the current state of that record is automatically right so basically from a client's point of view the client's point of view would be like step one it would it would think that you have an ens record on ethereum and so it would call the ens contract who would try to access your record on it on the ethereum base layer then it would realize that your record is stored in this particular contract which is an off chain data retrieval contract it would call it the contract would return a off chain data look up error then you wrote um that error would contain instructions about where you would go and get the verbal proof um like it could be a list of urls than you would and it could be a huge number of urls so you have a lot of redundancy um and then you as a user would just try pinging all these locations and you would ask for like coin proof and then you of the state associated with that record you would get that litecoin proof um and then so that's step two and then step three is that you would locally do an eth call and you would call a proof verifying function um on this sponsor that same contract and uh that proof your applying contract would verify the proof um and it would also tell you what basically what is the the state that just got verified um so that would actually tell you that like hey that function was actually supposed to return like some particular value now in order to update this state you or this internal state like you would not have to send ethereum transactions right because these are all state updates that would happen inside of a rollup and the only things that would happen on chain is that merkle roots of the roll-up state would continuously uh be getting updated on chain right so on chain you will just be merkel routes that get updated um and then all of the actual operations that happen inside of the roll-up would be happening off-chain um so this is a nice solution right because it allows you to basically extend um your in um a kind of ens infrastructure um so that it automatically i can go and fetch this kind of integr your the state of your ens records inside of a roll-up so if i have metallic dot ether i would could move the tower division to a roll-up and then if i want to make any record updates i could do those inside of a roll-up or potentially if he wants to handle the use case of people registering new sub domains then like we someone could make an entire subdomain move it inside of a rollup um and then all domains um that are subdomains of that domain could then be registered and everything could be done with them inside of a roll-up right um so like for someone like status if they want to make it possible for people to register new names at the cost of a few cents instead of ten dollars then like they could register a sub sub-domain um and move that sub-domain to inside of a roll-up um and or they could even have different sub-domains inside of different roll-ups and the users would be able to register a new domain uh and that new domain would be would be a subdomain of of that domain but they would be able to do the entire process purely inside of a rollup and the infrastructure that actually yeah like gets ens record data client-side would just be able to do all that it will be able to fetch the data from the right roll-up automatically right so um you would not the use the client client-side software would not even needs to update um to be um to be able to handle new roll-ups so europe's would just be able to add themselves into the system automatically very versatile so it can work with optimistic ropes you can work with ct roll-ups it can even work with polygon for now um so that's uh definitely something that i am uh very excited about and hopefully with this sort of thing and we can finally have an enf world where um janesville means are cheap to register again light clients so this is a third piece of uh infrastructure that um we're making a lot of progress on today right so in the world of just ethereum um after all after the altair fork we're going to have this concept of sync committees right a sync committee is basically this committee i mean gets committed to inside of the beacon chain bullet headers and then the community that committee is going to uh basically sign uh messages attesting to a block header i mean and then that block header can be there uh a signature can be verified against that block header and against the sync committee and so this provides this very cheap algorithm where a client will be able to keep up with the beacon chain at a very low cost right at a minimum cost of something like 40 kilobytes a day um plus like maybe 500 to 1000 bytes for every single header that we want to verify uh plus merkel bruce um so with altear you're going to have these the same committee inside the beacon chain and with the merge the beacon chain um and the execution chain are going to merge um and so you're finally going to have a path um where you're going to have these thing committees that will actually verify um like ethereum blocks uh and we're going to be able to have trustless flight plans right so today um wallets like infuria and like basically every one or while it's like metamask and every wall that exists today either talks to the interfero or they talk to some centralized system in this light client world instead of talking to a single server they could talk to end servers right so they could have collection of end servers that they talked to for redundancy they could receive and they could validate merkel groups from each one and whichever one is off as online they could get proofs from it and that they'd be able to validate merkel bruce locally right so you would not have to trust the servers to be honest and because you would have n of them um instead of one you would not even you would not have to trust them for liveness right for what is you would just have a one event rest assumption um so there's a big opportunity here with the merge and with the light clients to finally move away from this kind of centralized inferior world and move toward a world where we actually do everything much more trustlessly with a proof verification but there's a question right which is does a move to layer two protocols risk reversing these gains like in so this is a like client of ethereum but now if we're going to be talking about a world where you don't just have ethereum but you also have people using optimism people using large chrome people using polygon people using blueprint and then some next year people are going to create three more roll-ups like how are my clients going to be able to handle that world right and uh this is a like the risk is that if we don't provide a good way for them to handle that world then what's going to happen is that they're just like if these inferior is going to be the one that creates nodes for all of these systems and they're just going to end up trusting in europe right so how can we move away from like centralized trust dystopia and make sure that these gains and decentralization actually apply not just to the base ethereum chain but also applied to layer twos so there's a good news right the good news is basically that we can use ideas very similar to durham to create a generic a layer 2 like client system right basically he had the ideas that systems like optimism and arbitrary and with these layer 2s they could return a list of urls or they could return but basically return some kind of mechanism by which the clients can act get proofs for a particular piece of state that they want to access and they can provide a function for verifying groups right so the function could be a merkle proof verifier could be a polynomial commitment verifier could be whatever um and clients they would first um poke the layer two contract the wr2 contract would provide a list of locations where they can try to get proofs the it doesn't have to be like the url standard is like very extensible right so eventually this could be an address of a peer-to-peer network um as well right um so they could provi they would provide a list of just kind of ways of getting proofs the clients would get groups the l2 contracts would provide a function for verifying proofs and then clients would verify these proofs automatically and so any software which is a light client of ethereum would then automatically be a life client of every l2 that supports this standard right so if you have a any light client which is which supports ethereum then it would also be a light client of all of these l2 verticals now this is amazing right and it's amazing uh because uh basically would be able to keep these really nice trustless properties not just for ethereum the way that it works today but also for this kind of earlier two expanded universe of of ethereum of the future that's going to have much higher scalability much lower fees and greater decentralization uh compared to today so those are like three of the examples of uh very big and important situations uh where if we we need a way or two um like we need other infrastructure in order to make way or two ethereum a world which is uh as usable and as a decentralized uh that um as we want it to be there's also plenty of other examples today right so like wallets needs to be able to jump between a way or two sufficiently uh we need to make sure that security for l2 is uh works well um we need to make sure that um you know exchanges on all of these uh systems that work efficiently we need to um just to figure out like every individual d5 platform needs to work figure out like is it going to live inside of a single l2 is it going to cross l2fi itself and so there's a lot of these pieces that need to be worked on but the good news is that like in general well your two-centric ethereum is not just a vision layer 2-centric ethereum is a reality which we are in the process of building today um still a lot of rough edges but these rough edges are continually being worked on continually being improved as we speak um a lot of really impressive work happening on zk evms both the hermes team and barry's team doing a lot of good work i have a lot of amazing work happening on off-road groups for optimistic roll-ups um i saw like both optimism and arbitrary doing some really amazing stuff um there's uh um optimism and then there's a george haws and all of his uh amazing work on a canon and i'm basically literally compiling deaf into an environment where you can then compile it into a truebit-like system um then there's uh arbitrary which is doing i think recently now um had a blog post where they're taking a similar path um so a lot of really amazing work happening on layer twos um compression is something that i personally have kind of been pushing really hard and i think i expect this is one of the things that's uh going to start happening pretty soon so i expect we're going to just see continual decreases in the transaction fees on optimism and arbitrary um but no we have to make these rollups not just work well as individual rollups but we have to make the layer 2 ethereum as a system easy to use right it's not just a matter of scaling up from ethereum being a city to ethereum being a country we also need high speed tree uh high-speed trains between the cities right um and uh you know we need high-speed rail to go from one city to another city without having to pass everyone pass through downtown um so at the same time though you know we these these are things that we actually can't do the tools are there we can build these things um there's a lot of opportunity for building these things um there's uh an optimism retroactive public goods funding gadget which should be well retroactively fund you if you help to build these things um so there's a lot of opportunity there's some but there's also a lot of work to be done right um so and you know i hope that people listening to this and then you know i hope that anyone can kind of be part of the solution and help kind of actually build out this world so um so that we can actually have this uh amazing uh way or two with the um ethereum of the future so thank you [Music] thanks for telling those awesome um got a few things to dig into uh yeah [Music] so you just talked about this interesting project jihad is doing with the optimism go to mips um can you just walk into uh so tell us more about what that is what's happening and how does that work and uh sort of um what's gonna get some a little bit of overview on that and then what do you think your opinion is sure yeah yeah so canon is really fun right it's basically this edm fraud prover um and the way that it works right is that instead of creating a new evm implementation that's um and then worrying about whether or not it's compatible with the existing ones but basically what it does is it takes like an existing ethereum client so in this case def and it compiles gef into uh or it compiles like basically a version of guess that is i guess you can think of it as a stateless client um and then he compiles that like so you know it takes a block and it takes uh proofs and then it verifies that it's correct um it then um compiles that into um this um architecture called mips which is basically a very simple virtual machine and then separately there is a project which is basically building a true bit for that virtual machine right so basically a kind of interactive fraud prover um so you know it'll take like a billion computational steps of this virtual machine to actually run but then you would have this game where if someone challenges the results they have to provide 100 intermediate values and then the original creator will then decide what which of those intermediate values they disagree with and then the yeah the the challenger has to provide 100 intermediate values beside those of intermediate values and you kind of start narrowing down where the actual disagreement is and then finally if you just execute one step of nips on chin and we figure out whether the challenger or the original approver is correct um so same technology as truvit right um except you just like apply this directly to this kind of like evm verifier that you basically took by get just directly compiling an ethereum client into it um this i mean this is this mechanism is really nice because it's also very general right so um it's very easy to update so if ethereum has a hard fork very easy to update like you don't need there's no separate implementation that needs to be updated you just updated existing implementations um you could even extend it to do things that are fancier so like one um idea that you could have if you want to be clever and you want to be really robust against like um software bugs is you could do the same thing for gef and never mind um and uh basu um and you have three fraud provers and then you have a separate fraud proving process where if someone proves that a particular block is valid under one client but not valid under another client then you raise an alarm um and um you know you could then you like for what happens to that roll up you can delegate it to governance um but then like you raise an alarm and i mean potentially like that that's something that you couldn't even create an automated bounty for right so there's a lot of really fun things that you could do there um i was going to say uh maybe just to uh get a little bit clarity on one of those things so because of this uh proof of style arbitrary complication model do you think this is an extension to roll up in this case where you can now do more with roll-ups that we couldn't do before or is this more of a decent thing i think it's like allowing us to do what we've known was possible all along right like there's no one who ever i think ever doubted that you can make an evm roll up i think it's just like a whole bunch of details right i mean this is just a way of making those details happen much more quickly and easily gotcha um yeah because all you have to do is you have to just create a true bit for a very simple virtual machine and then the rest is just compiling existing software into it and then which is something that you have to change to a as well interesting okay no that makes sense um [Music] we're going to be slightly off topic on this one but i know this whole thing was focused about roll up sanjik world but uh maybe you'll be good to contrast this with state channels um what do you kind of think about that uh i i can't go into specific but let's say there's any thoughts on that when i just set that question and i have two specific questions around state channels that we can dig into right i mean i think like what we've learned over the last few years is that state channels are a very specialized technology they're amazingly good at a particular set of things but users don't just want to do a particular set of things right usually just users just want like dumb evms um so i think there is this really big and important central place for dumb evms but at the same time state channels have really important roles and like i don't think it's state channels versus evm's uh edm roll-ups i think it's just the channels and dvm roll-ups i think speed channels can form a big part of creating efficient uh bridges and decentralized exchanges between different roll-ups um state channels can still be useful for create for kind of like micropayments and kind of multi-payments individual parties um rule of centuries ethereum and shorted ethereum and all of these four scalable ethereums also imply moving toward a world where no single node is going to have all of the data to figure out what's going on locally and so nodes are going to have to talk to other nodes and like i talked today about how when a node talks to another node when it receives responses how we can use miracle proofs to verify those responses but we haven't talked about yet is like how those nodes get compensated right and what you could consider a client node having a long-running relationship with a provider node um and that long-running relationship could be paid for with estate channels um so that like that's just like a very simple um way of paying for requests right like i pay you for a bid and then you send me an answer i pay you a bit you send me an and he sends me an answer um and so like the amount by which either party can cheat the other is extremely low um so that's another example of a use case for student channels so i think like between like clients and data provision and across role of bridging there's lots of stuff for state channels to do within the uh the roll-up verse that makes sense and i think why and sort of uh one thing we've seen in the past is that for state channels um wallet integration has sort of become challenging because you the wallets have to manage the state um but given the success of what we've seen with the world of roll-ups ck or opt-in was taking the last year we've also kind of seen in parallel state channel projects like connects or seller kind of pivot into multi-chain approaches where they connect with other adults is that still a possible future for an alternative to the roll-up strategy or or do you think rolex i mean my my personal view is that roll-ups are just like better than sidechains um and because uh roll-ups like they benefit from the full security of ethereum and uh like like basically there's this kind of nice tight coupling property right like where um you can trust that the roll-up state is kind of like in an application on ethereum can unconditionally trust that a role of state is correct right whereas if you have a bridge between two kind of chains that are both quote sovereign and they're separately sovereign then like if one of those chains gets 51 attacks then the then the bridge stops telling the truth right or if the bridge gets attacked and the bridge stops telling the truth whereas i see like a lot of the bridges do they do or still rely on multi-six or whatever uh but whereas with roll-ups like the roll-up bridges have 100 percent accuracy from the point of view of inside of the chain right now obviously it's possible there's a 51 attack on ethereum and then optimism gets a reorg but if that happens then like then whatever thing you did that depends on optimism is also going to get reworked right so you're actually 100 safe so i think like those uh like there it like there is that really important kind of side coupling property that you get from being inside of a common secure uh security layer which the uh kind of which the roll-up ethereum verse is um so i view that as being a benefit of uh of doing roll-ups but at the same time there's going to be other applications that are very low value per transaction um and so it might not make sense to pay the fees even for roll-ups and like okay fine with those applications could still be in a side chain in the short term and then in the long term like once the zika starts are good enough then everything should be either a zika roll-up or a volition um so yeah um what do you think of i guess monolithic changes versus like multi-roll up uh features or just choices there [Music] i think realistically multi-roll up is inevitable um and like there's just i mean like first of all there's just like already multiple roll-ups and there's these uh different approaches um there's uh i mean even like if we assume that there's like trade-offs between zika roll-ups and heliums and some people want to be one and some people want to be another you're gonna need bridges between them um so and it's just a multi-role up world just like it feels more scalable because you just naturally have much more parallelization um right like you know different roles to use different shards and um the different robes have different computers that are creating the proofs for them um so right now like the multi-role world feels more likely um obviously it's like it's definitely possible that i'm wrong here and we do just get like one zk roll up that ends up dominating the whole thing um but you know we'll see what happens do you think uh uh bitcoin could be a roll up one day oh fun um i mean if well for bitcoin to be a rollup of ethereum like it's gonna the the community is gonna have to accept proof of stake which uh you know i guess uh yeah wait a minute yeah well we'll see so kind of coming back to the role of centric world [Music] as you kind of just talked about there's a lot of things where inevitably you can have anywhere from um one will be more popular to just kind of having some specific features that are valued more from one or valid or offered by one rule than the other um what should change or what changes for a developer when they're thinking about deploying an application like you obviously there's some tradeoffs on compatibility or posability um yes you may have different parallel worlds but it also i think at some point makes development not as easy would you agree with that or kind of what this makes like with the question is like what are the challenges for developers when moving their applications to roleplant yes um i think i think the main challenge is that an application has to decide whether it lives inside of one roll-up or whether it's natively cross-roll-up if it'll and um if it's a natively cross roll up then like you have to actually think more about the infrastructure of like what being natively cross roll-up actually looks like um and like even if it lives inside of a roll-up then like there might be cases where people just like once that like kind of like bite off some portion of the activity of your application and like move it over and do it inside of another roll up right so you do have to kind of think about cross roll up on in nuances but even if you don't um then you're if you don't then i guess the challenge is that you lose composability with applications that live inside of other roll-ups right like if uh you know you have unit swap inside of optimism and uh some d5 thing inside of arbitrarium then like you can't do synchronous operations between the human swap and id5 thing but i think like realistically there's going to be a copy of you to do the swap with always some liquidity on inside of every domain um so like inside of every roll up inside of every side chain and um obviously on the base chain as well um but um [Music] that's like basically how to kind of interact with the the newly found kind of ability to move between domains is something that application developers need to think about like what's uh that like the thinking around dns and thinking around nfts might be yeah would be one example of that um like how would like say loot um work if uh we assume that we want wood to be accessible to people that don't aren't willing to burn forty dollars on doing every operation and what happens if like some wood is inside of optimism in other words inside of arbitrary like how do you recognize um with that's in different roll-ups um i mean very similar challenges to ens right i mean well for for a good reason like a loot is an nfc and ens is an nfc um for more experimentation if you have cost transacting um yeah that makes a lot of sense another question um which is i think indirectly related to one of your slides from the talk uh waltz are the first interaction and barrier um for an end user and kind of writing mnemonic key phrase every time one scale for an average user or or hard drives so i'm just repeating what do you think about the current state of wallets and which solution do you think we should implement make that smooth especially with layer two in mind sure um so i mean for wallets and keys like i'm as i've said many times i'm a huge fan of uh like social recovery wallets and uh i think uh social recovery wallets for like for your hot wallet for like your assets that you need in it and to be for everything you do that's convenience oriented and multi-sig wallets for everything that's not convenience oriented and i think the same wallet can manage both um right um so but then in order for that to happen we need account abstraction and like recently myself and the yeah i guess and uh gsm people and and and other mind people have been collaborating on erc 4337 which tries to make um account abstraction work without any protocol changes by kind of doing this overlay i'm using a user operations so very much encourage people to look into that as well and like that's something that i think people should very much be starting to hack around at this point um and i guess the idea like the nice the good thing that's happening now right is that all of these roll-ups are moving toward being uh just evms and so if you have one wallet like you should be able to take that wallet software and just deploy it on every domain um so you know if you can have like one wallet probably same address on every domain maybe um and you just like you have the same wallet software that you could actually manage your well and your uh kind of wallet and your funds inside of each one of them and then i think that could be really convenient and really amazing um and then like basically i think the fewer wall like wallet applications that users need um the the the more effort they can put into a kind of the backup and key management for each one um and so the the less the risk of uh unfortunate security accidents happening um and the the better the experience for people no that's absolutely fair um do you think there are any other well actually i think the answer is yes but what are some i guess open problems for uh the worlds of roll-ups to still figure out uh in order to sort of achieve that goal um are they still open questions or considerations [Music] i guess like the the sequencers need to speak this um i can't abstract um like they need to speak gearc's four three three seven um if they do natively that would be amazing um i think that realistically like i think roll-ups are a better experimentation ground than the main net because they're cheaper and so i could easily see a construction while it takes while it's taking off in layer twos before they take off in layer one got it okay so it's just still uh on kind of the the sequencers managing account instruction right yeah yeah like sequencers should like i'll take uh you know the optimism and arbitrary sequence should ideally just like speak erc43337 natively and that should be like one of the priorities for them well i i know a couple of uh l2 projects watching this so hopefully uh hopefully we get to work on that too um all right well i don't think i have any other questions um so i thank you so much for taking the time today thank you too awesome all right everybody we are running a little bit ahead of schedule so what we'll do is we'll take a quick five-minute break and we'll do our last talk of the day which is going to be an ama with gucci from the ethereum foundation so uh sit tight enjoy uh the next five minutes as i break and now we'll be back [Music] [Applause] [Music] 