uh feel free to throw your local time in the chat let's see who's up latest for this hopefully not too late okay stream is up trent cool [Music] and maybe this is just a personal preference but i always love seeing video on um so if you can uh throw on your video it's always nice to see faces of the hackers we're gonna be working with for the next few weeks if not that's totally fine if you prefer to just be audio or just kind of passive observer that's cool or if you have you know sometimes my internet cuts out and i gotta turn off my video that that's totally understandable [Music] cool jack welcome bob what else we got here john max maximilian jayden micah thanks for the video everybody looks like maximilian you're the latest 1900 you win congrats all right uh i think we've got a good number of people who are ready to go austin you ready cool i'll just do a quick intro uh this is the scaffold eat workshop as part of market make if you don't know we are having a series of workshops all throughout this week to get people situated with sponsor stacks and you know various tools that you can build uh ethereum applications and ethereum projects with and this is one of the ones that's going to be really helpful if you are new to ethereum if you are experienced all of the above scaffold eat is an amazing tool or uh you know it's a the way we summarize it is it's like a dab template that's really perfect for hackathons like this so austin's gonna give a pretty pretty open session um he'll go over what the structure is gonna be but i will let him introduce himself and thank you again for everybody showing up uh the final bit of housekeeping is check-ins start today so if you're not familiar we do um weekly check-ins just to make sure we are aware of what you're working on and we can help you connect with various sponsors as needed so we'll you should be able to access that with your hacker dashboard uh i think a little bit later today so make sure to do that today and it's just one per team so if if you fill it out the rest of your team doesn't have to do it um just make sure to check out your dashboard a little bit later today okay that's enough for me austin why don't you tell people who you are uh and what you're gonna be going over what's up i'm austin griffith thank you trent thank you ethglobal thank you hackers uh happy monday no no bow tie today uh just uh doing doing it normal so uh like trent said uh scaffold eath is like a hackathon stack i've i've taken kind of state-of-the-art tools i've put them into one big repo i've glued them all together and then the same stuff that i found myself building at every hackathon i put into this repo so then you have all these components that you don't have to you don't have to build an address input component it'll be right there for you out of the box and then i think a key piece is it starts you out with a contract and like lets you just like make small changes to the contract like oh maybe i don't know a ton about hooks it'll make you let you make small changes to the front end kind of figure out how those hooks work and get you sort of situated and confident with your local environment but really you should be able to just like spew out decentralized applications using this template so so i'm gonna just dive right in i'm gonna share my screen and give you a look at scaffold eath but let's let's do this very very open i i'm totally open to questions all along the way if there's something in particular you would like to learn or see how to build within the next hour uh go ahead and post it to chat let me see if i can figure out how to get chat somewhere where i can see it there we go okay cool so uh scaffold eth if you i mean uh let's just let's go let's not etherscan let's go to ethereum.org just like if you're getting started or you're looking for information there's always something uh for for you on ethereum.org uh let's see so if we want to set up our local environment so learn by coding check out each build boop slide shield okay so uh scaffold eat is right here on uh ethereum.org and let's see where it takes you cool it takes you right to the repo if you were to google for scaffolding i think scaffolding.io may show up but it just links you to the repo so it's all right here in the repo the repo is the kind of the key piece um there's there's a lot of packages here there's hard hat and react and the sub graph there's docker for the sub graph you you the the important files that you'll need we'll get right to but let's uh let's dive into it so i have cloned down scaffold eth i have cd into the directory and i've done the yarn install it takes some time to do that so i would i would suggest like if you're on a mentorship session with me bang that out first just so we're not sitting here for 10 minutes waiting for all these packages to uh install but once you get it installed you've got a few commands to run you run a yarn start and that's going to fire up your react dev server that's going to fire up your front end and that's going to give you kind of a local host here but it's going to fail unless you do a yarn chain and fire up your hard hat node previously biddler you've got your own local chain and it also generates a bunch of wallets for you so we've got our react front end and we've got our back end right which will be our our ethereum chain now let's go ahead and deploy it so just a yarn deploy is going to uh compile our contract ship it to our local chain and then inject that into our front end if you want to see let's see that again if you watch over here you'll see this this is a contract component for our contract that's going to change a new address every time we deploy our contract and in fact we can even come over here and change something with our contract and do a yarn deploy and now instead of programming unstoppable money our purpose should change to programming decentralized money cool awesome and if we you know add i do this like for every demo but if we add some counter in here and set it equal to one and we create some decrement function that makes it uh so we can do counter minus minus like stupid simple programming here but just showing you that you can kind of iterate on your solidity you can go to things like a really great extent watch watch this load in real quick let's make sure it's there cool there we've got a counter and uh solidity by example so let's see hey i yeah yes please uh could you zoom in on your terminal a little bit ooh is the terminal 2 yeah i think we had a request on youtube just a little bit um oh i'm not even looking at the youtube chat there's a youtube chat too holy moly okay sorry i've only got the zoom chat yeah so i'll i'll monitor okay you got it you got it okay anything i'll relay and there is okay here here is the hard hat node and yeah i think the difference between yeah no uh i think the hard hats hackathon boilerplate i'm not sure if it has a front end but uh this this has a front end and then a bunch of components on top of it and it kind of wires it together so i don't know exactly the difference between my boilerplate and hard hat spoiler plate they're probably both worth checking out i don't know exactly what components they have with theirs so just zooming in so there's our chain here's our dev server here's our deployer uh hopefully that's big enough yeah i can make it a little bit bigger there we go but uh then we've we've added some stuff to our contract okay so uh the you should be able to just grab solidity examples like if you want to bring in some mapping right you can just go here find an example copy and paste it into your contract and start tinkering and that's kind of like the the goal with setting up this repo is you have you have an app that's ready to go but you can tinker with your solidity you can tinker with your front end and kind of build up a prototype so let's let's see um if we oh accounts one other thing is if you go to your local host 3000 from a different so this is an incognito window we see how we get a different address here 7339 that's actually a burner wallet you can even go here and generate more burner wallets we'll see another one come up we'll see another one come up if i do this there we go so i'm just like generating these accounts and we can see them over here and then i can go select those anytime i want in my private key section and by the way if you have your phone open and you point it at that you would like just straight up get that account on your phone uh but let's let's keep that there so scaffolding is going to generate a burner wallet for you on page load but you can also also you can connect your meta mask or wallet connect or whatever so so your users in the long run will be able to log in but stay away from metamask locally at first let's just iterate using a burner wallet and so i'm just going to copy my address there see this nice address component where it has a blocky display shows the address gives you a little copy button that's that's the address component within scaffolding so every time you want to display an address you just bring in the address component you send it the address and you get that nice oh does it link to yes it does it links out to ether skin even cool so i'm gonna head to the faucet in the bottom left this faucet is just the first account of the hard hat node and i'm gonna give myself some some eath and then let's just try setting this purpose it's just some random string that we're storing for now and i should be able to set that purpose to hello world and spend some gas one neat thing i want to show off is let's see i'm going to clear this and run that one more time boop there we go so you get a nice console log right in your hard hat node so that's another good reason to be using hard hat here is we get stack traces and console logs and that's coming in from that line there and that line there cool okay so let's we set up a counter look what happens when we decrement it we can see that underflow happens was that was one thing i wanted to show uh and then let's see if we uh set this to uh what 0.8.0 right and then we go into our hard hat config and we set this to 0 8 0. what we're going to do is bring in the latest hard hat compiler and hopefully it will oh what doesn't it like uh that's bad bad uh oops bad live demo wait what's wrong with that uh i have no idea all i want to do is show the counter let's see okay i don't know maybe i wasn't allowed to do that with that string something with with eight doesn't allow me to do that but now we're now we have eight and now if i decrement zero and one it's going to throw an error right so with with solidity 8.0 i was able to double check that that underflow is not going to happen anymore and that's just kind of kind of a nice little tinker thing right like you you hear them say solidity 8 doesn't allow for underflow but using scaffold ether you can dive in here and you can just try it out real quick and see uh see for yourself if it works i wonder what that string error was i'm still wondering about this i wonder if it won't are they not allowing me to have emojis let's let's see let's see it's the emoji put it back in there let's see it again really who's breaking breaking austin's heart who knew that solidity 8 would not let you put in an emoji okay whatever whatever all right no emojis no more emojis all right so every time i'm running this deploy by the way i'm like shoving a new contract out to my local chain and there we go okay and yep what happens if i send an emoji here this still works right okay just double checking it's just the solidity compiler okay cool so let's see oh it doesn't like oh we don't say public anymore for our constructor i learned so much from compiler errors and something about a license right we would want to stick mit at the top of that or something look at this cleaning up the code how about that no more warnings no more warnings yes all right so we're cleanly compiling with eight except for there's something else happening over oh that was something else okay awesome let's let's iterate a little bit and build something interesting yeah unicode yep i think that's what it is something with uh okay any any questions from youtube yet are we are we jamming trent how are we doing awesome okay so so you you should be able to sit down clone this mess around with solidity see it change in the front end kind of figure out how you want your app to work now eventually you're going to carve out this component so let's see we've got we've got our your contract from hard hat we've got our front end over here and if i let's let's go through it real quick so your front end is going to have a couple uh important providers mainnet provider is the first one and why do we need mainnet here well if i go to an address input field and i type in vitalik.eth if i spell it right oh man there we go it resolves to his address and i can send him one test net dollar okay so so we have a main net connection to give us ens and main net balances then we have our local connection which hooks us up to our local contracts then there's just a bunch of handy hooks in here something like getting getting the current price of eth which is displayed here getting uh the best gas price to go on main net to go fast like if you're building a mainnet app you're gonna have to figure out how to get the gas price to make sure your transactions go through quickly like this is all built for you and it's all here your user provider is is this up here using that fallback burner wallet um use balance that's a that's a really common hook right so a nice react hook that you give it your provider you give it the address that's currently logged in and it's just gonna keep your balance uh in in the react state for you uh scrolling down there's there's a bunch of contracts here but then there's uh here's here's reading so if you wanna read a value from your smart contract and keep it in your front end right there if you want to listen for all your events right there and those uh those are eventually going to feed into an example ui so i created this example another thing awesome yes yep ready uh unfortunately zoom puts your face over your top right corner so if you can slide things over a little bit got it got it cool i think that should be good good just stay away from the top right corner cool yeah so by the way top right corner we were showing this this is my address here and then with with the bur oh man what have i done let's pull those up here with the burner address it it's going to show up so see this this was an incognito window we have a different address here and this is my window here so just like by opening up an account or a browser you get a new address hopefully that's not too covered up okay uh so example ui so you you think that the hardest part of building a decentralized app is the smart contract and it's probably true you probably should spend your most most of your time there but uh kind of in reality it seems like i get my smart contract put together and then i spend 10 times longer like getting the ui right getting it in someone's hands having someone use it so scaffolding is also trying to help with that right it wants to get you to the point where you have an app that you can share with people after after just one session and and so what you do is you can kind of like play around like okay hello world i figure out how to kind of talk to my contract i get it working the way i want and then we can kind of move over to building a ui instead of instead of having this ugly thing and having to convert from way to eth you have this nice example ui and then i can say hey hey hey and just kind of use this ui and and it does things like keeping track of a purpose here right and then we have an input box and when the input box changes we update that state simple react stuff but then here's how we trigger a transaction right so we go right contracts your contract set purpose we set it to whatever purpose we were tracking let me wrap it all in this tx function which oh i could probably zoom in a little bit more on that we wrap it all on this tx func wrap it in this tx function to kind of notify the front end so when i fire off a transaction here we see that go uh that little notification but if you're on a public network that's going to be block natives notify that's just there to show you that it's going to work but when you go to any other public network that's going to be a much nicer dialogue let's see and that's what that tx wrapper is for however you can also send see we've got like a nice address component we've got a nice balanced component just things that you find yourself needing uh you can also send an object right to that tx wrapper so if you wanted to send just like a raw transaction it's there and i get like increasingly harder here's here's here's setting a purpose and sending value and then here's like super hard mode like crafting a raw transaction crafting the raw call data so this this is going to let's let's have it not send any value okay and let me hit yeah yes please okay question um yeah for sure what are the dependencies for this because like i was looking at the readme um but there wasn't like any clear list of packages i had to install for this so so i mean you just do a yarn install and everything should work i think i think what you mean is like you're going to need yarn yeah i mean i just i just tried to grab it through the packet uh package manager but it's just giving me an error so i'm figuring i probably installed the wrong thing oh yarn is giving you an error yes if his yarn is giving you some error about like timing or something like that you've got the wrong yarn if you have npm if you have npm do uh do mpm install dash g and then uh yarn i think okay so that should yeah you want to have like node i think i have node 12 working the best but node 10 node 12 maybe node 14 yeah so you'll need node you'll need npm uh and then once you have node you can do an mpm install of yarn and then once you have yarn let's make sure i have yarn version here have the right one yes so your yarn version should give you something like this not some weird timing output and if you get timing it means you've got the wrong yarn that happens to be on my ubuntu boxes now and then okay that's it cool yeah so yep no problem yep so you'll need to grab get you'll clone this down npm install globally yarn and then you'll be set to do the yard install okay gotcha it's cool thank you cool good luck man and and also uh i'm i'm at austin griffith on twitter so uh reach out anytime my dms are open so if you have questions or you get stuck hit me up and i can help you out there's also uh sort of i'm in like too many discords okay yeah but but yeah i mean like hit me up link be there's not a specific discord channel for scaffold eat there is a telegram channel so when you get when you get your scaffold eat up there's like this support link right here and this takes you to a telegram channel i think okay so so feel free to ask questions there or just dm me directly cool great thank you awesome awesome okay so let's see uh where where where were we we were talking about you you kind of tweak your contract you get it looking right but then eventually you'll build uh some kind of example ui and you'll build that you can probably find examples in this example ui like the point the point is you should be able to like copy and paste a lot of this stuff and focus on just the stuff that you're innovating on like what what product are you building and how are you focusing on that product and all the other stuff hopefully is kind of here and available for you to kind of copy and paste and pattern match and figure it out by the way how's uh how's bandwidth go in print i didn't even ask i've got my eth2 node running here and sometimes the bandwidth is a little choppy and are we pixelated or are we good i mean it actually only started doing that right when you asked so just don't ask about it and it should be okay okay that's true yeah i can i could shut it down if it starts if we get a lot of choppiness but it seems like man you got a yeah that's right i got now you can i can let it bleed a little bit it's fine okay so events are here too right event map once you once you kind of like start building your front end you start putting events into your smart contract you're going to want that event parser right and we found that on in the app we've got this event parser where is it right here you you throw in this hook and you tell it what the name of your event is and it's just going to keep all your events loaded up in this array for you and you can list them out what's cool is you can just dump this object right into a list object where is that list right here we're dumping it right in here so there's just this nice list so so i put my event in my contract i deploy my contract i do some stuff with it like interact with it then i take that uh then i set up an event listener and i feed that into a list and then i just have that in my front end and anytime anybody sets the purpose we see a new event come in there and and just to prepare you once you go to production and you have a production level app like parsing events in the front end is probably not going to be the way you go if you're building something simple uh like the bank right the bill gail bank still operates on uh stream on events right this is okay it's like there's like six of them right i can get away with that but then over like a nifty inc we had to take we couldn't parse event anymore because there were just so many of them if i go here hopefully there aren't too many d's drawn today oh just the word penis that's nice so if when we were reading these events we we saw that it was too slow so we had to set up something else and so scaffolded will be ready for you when you're ready to go and set up a sub graph i think adam might be on the call adam set all this stuff up but it's like when you're ready you can fire up a fourth command out of all these commands that we're running here you can fire up a graph node locally using docker and then that will parse your events and then you can query that using graphql something a lot easier than parse all my events and find how they're mapped together and display them in the front end so so knowing that this is there for you just use your events set them up use a list for now and then when you're ready to go to production you can move over to the sub graph and it will all be there for you you'll have to edit some files in here some config files for the sub graph but again that's not until you've got lots of events firing and you need a better method around that okay any questions before i sort of dive in and start building something a little just to show off an example anybody want to oh events how do you go from events to sub graph so it you you basically you stop displaying your events you uh you'll set up some config for the subgraph like you'll have to set up your schemas uh and then you fire up that other node and then you'll you just basically follow these instructions and then you'll you'll start being able to and there's an example right in here in the subgraph of how to display those just how to take that list of events and turn it into a list that's being pulled from the sub graph all happens here on this page so i think that's the the let's see redux uh i'm not using redux uh we we probably do need to figure out some kind of context like we're getting to the point where we could use some kind of context and react like you you end up uh like that let's see that event listener is here right and then it's getting passed into the you the the example ui so i think that we could use some some uh uh let's see but probably not redux yeah i i don't have anything with redux yet cool cool cool oh and react router just while we're here is is here so these tabs that you have across the top are kind of here's the links to them and then here's what they display i think i was running to this contract component earlier but this is kind of a magical component this is the component that your contract is set up here just speaking of that let's just create a second contract right so i'm going to duplicate this and call it second so what are the steps of adding a second contract right we'll just call this guy give him another purpose i don't know why i'm doing purposes but we'll make a second one and so what are you going to need to change once you've got your contract added to your contract folder you'll need to add another line to your deploy file where we say this will be our second you would think i'd get better at typing second all right and then boy it doesn't work we're in the directory for um yarn because um i think uh even though i uninstalled it it's still on there what's the directory for it like yeah it's wherever you installed it on your operating system it's probably like in uh yeah well i can tell you where is yarn on my machine nope nothing uh let me go into the pinner real quick there it is so user ben yarn or user share yarn check those out yeah i did that too i did that too on mine i'm not sure try where is yarn and you might be able to find it okay here we go so adding a second contract we've got second here we've we've added it to our deploy and then we add it to the front end where we add another contract called second those are the three places you have to add it now if i do a yarn deploy we should get a second contract in our front end so now we're gonna compile them we're going to deploy both of them we get them in the front end and now we have there we go so we have two different contracts now so if as you add new contracts you can have this cool scaffolding uh i just wanted to show that i don't think we will let's see let's see if we can use our second contract okay so we've seen underflow you should be able to just poke around at on solidity by example if you if you need some uh solidity help or or inspiration check this out like reentrancy multi-sig wall this multisig wallet is so cool like this is a great way to learn structs and arrays of structs build your own multisig wallet okay uh so so let's say you're iterating you're kind of getting there you're building out your contract the way you want you can kind of poke at it from the front end get it to kind of work the way you want so eventually you're going to get to uh wanting to inherit some something from open zeppelin and that comes i think it comes with hard hab or maybe it's installed in scaffold eth into the hard hat folder but let's go look at the open zeppelin contracts one thing especially specifically for defy we probably want to dive into is looking at tokens so there's a lot of different tokens here but erc20 is like the the most famous and so instead of us having to write our own token we can just inherit that in i'm gonna grab that right there okay so we're gonna make a token here there we go and uh since i'm gonna eventually deploy this i'm gonna pull out my console log stuff let's see oh i haven't done this uh in in version 8 yet either we may find some weird things here too so this is going to be an erc20 we're going to inherit that and then uh on on deploy we're going to say this is our this is going to be your token we're going to give it a symbol of yt we're going to go ahead and mint some to let's just mint some to our front end account at first close all this stuff out all right let's make some to this guy and we paste that right in let's just mint him 10 ether worth all right let's see if this compiles oh nope oh man yeah okay let's let's switch back let's switch back to six seven uh i guess uh maybe that opens up when stuff isn't version yet for uh eight let's see and then we'll change what's that they don't they don't do safe math or they have safe math yeah yep okay back to back to six seven here uh and probably this needs to be a six seven too where where underflow will still occur for us but oh what i do public so so they got it okay so they force us to write public in six seven but they tell us to remove it in eight here we go here we go oh wait they're still uh nope we're good okay awesome now we have deployed our token and we can see that the your contract kind of scaffolding auto adjusts to that and we can even now grab our address and check our balance and there we go so we've got 10 ether what i like to do a lot on mentorship sessions is show off like a vendor contract maybe we could turn this into a vendor and we could sell like we could bring in an interface probably not a ton of time for that but i would suggest suggest if you're looking for a good like little quest uh you can always uh just dive into scaffolding create a token like i just did create a vendor have that vendor put it on sale uh we'll we'll get to that like i'm going to leave it here and we'll attack it uh maybe but uh for now i just want to kind of cover as much as i can uh without writing too much but eventually maybe we'll have a vendor here maybe we will uh let's see vendor and we'll have it here yeah i mean like i'm already i'm already halfway to having a vendor we might as well just have it in here right okay cool all right so we've got our vendor we've got our contract uh what i want to do is instead of minting to myself i want to mint to the vendor so here's what we'll do we'll mint to the message.sender okay and then in our deploy script we'll mint the vendor and the vendor is going to need to take in the contract address get to that but then we're going to need to await let's see the your contract which is our token i should have just named it your token dot transfer and we're gonna send uh all of it [Music] to uh the vendor yeah this dude awesome and so i need what do i need uh wait oh man what am i doing here we go here we go there we go so so i'll mint a token i'll mint a vendor that that takes in some token address and that'll take in our address token address and we'll bring in [Music] contracts token erc 20 urc 20 our ierc20 right we'll bring in the interface for the erc20 you probably just bring in the erc20 i think bring the whole thing in yeah what about i mean like that it would be heavier right because i would be i would have to have all right you're gonna be loading all the uh you know the functions of the interface you don't use but that's that'll be all right let's hook a pile rolling it this'll work let's see let's see if this works what did i do wrong here hi uh it's still coming through there we go got it this is it this is it okay so so we have a token and then we're minting that token to ourselves and sending it into the vendor we're minting a vendor and setting that up with our token what we need is a buy token function and really if we have time we should do something neat with this and make it more d5-ish but right now it's not going to d let's see it'll just be a payable function and i'll sell it to you one for one right so i'm going to token.transfer to the message.sender whatever the message.value so they they put in one eth they get one uh one token back and uh for non-standard i learned this from the open zeppelin guys non-standard tokens you want to require that let's see how we doing do we have a buy tokens function can we mint and sell our token oh i feel like i messed something up in that there we go there we go there we go okay cool awesome so we've got uh our vendor we've got our token and right now our vendor probably has the full 10 balance yep so our our vendor holds all of them and then if we go in here and so this is an example of i'm gonna buy point zero zero one each worth actually point zero one e do i have that much yep so i'm gonna buy point zero one eth worth this is an example of what a developer is gonna do you you have to take it times ten to the eighteen so the the scaffolding kind of sets you up with a lot of raw inputs you have to hit this little button to take this time to the 18 that's what the the contract needs it in but that's that's not what you want your end user to do so eventually you'll carve this out but uh just showing you there we go so we were able to spin point one eath now if we go check our balance we should see that we have some tokens there we go awesome okay so if we wanted to make this more defy ish we would probably put in some kind of pricing function we could make it more of an amm we can make it on a curve uh the the the reason why i like to show this as contract to contract interaction uh is if we set up a cell token function and i'll let you kind of just like take that on your own but a sell token needs to set up and approve right so you you get used to the pattern of first i have to approve the vendor to take my tokens then i have to tell the vendor how many tokens they want so there's a two transaction kind of thing that you have to set up but that's a good side quest for anybody who's who's looking for building uh the last thing i want to do is just put this out on a network and then we'll go through all the different uh uh the different branches that we have so scaffolding has a ton of different branches let's see this will take a second once i point it because it needs to build okay what network should i deploy this to anybody any choices here uh maybe just ring could be coven okay let's go let's go coven i like it let's see coven so if i put in so uh your hard hat config is here your default network is here so i'm going to put in coven as my default network now if i just do a yarn deploy it's not going to work i need to generate so i'm going to do a yarn generate and generate an account then if i do yarn account this is going to be my deployment account let's see hopefully i have some coven if anybody has any coven you should shoot it to that address uh let's see i was i was planning on using an instant wallet but i don't know if i have any coven in my instant wallet let's find out oh i do i do dope check it check it instant wallet built with scaffold eth i'm going to hit scan i'm going to scan that address there we go got a nice little blocky 0.01 point is that hopefully .01 is enough point zero three point zero three covan getting sent right now maybe wow i just went away i didn't get a i wonder if lock native doesn't have covan i bet that's what it is let's do a yarn account it should take like five seconds right covan blocks there we go all right we've got coven we've got a deployer account now let's do a yarn deploy same thing but this time it's going to be pointed at covan right so instead of deploying locally we're deploying to covant and we can see that this is going to take some time to update while that's running i'm going to jump over to our front end because our front end is still pointed at localhost what we need to do is bring in this and we need to point our front end at coven hopefully it's that easy but i i'm not sure if it will be let's see so our vendor's getting deployed there's our last transaction that gets injected to into our front end and now if i do a reload now our vendor is here and this app is here and ready let's see if i check the balance of this there we go so there's 10 tokens how do we prove that it's on covan is there is there a covan ether scan i don't think there is oh there is oh okay so let's let's just go look at this contract to make sure let's go talk to a disinterested third party and sure enough our contract was created we could even go contracts oh not not similar we go and you probably should right if you're deploying a token in a vendor you should definitely go get your contracts verified and if you do a yarn flatten into a flat.txt file you can go grab that flat.txt file gotta trim some stuff and go verify and publish it here as a flat file and then everyone will be able to see it on in they can see your contract code publicly so they know it's not like inflationary or something weird okay so we've set up a token contract we've set up a vendor to sell that token contract we've deployed it all to coven uh and now someone can come along with some covent eth i gotta send some coven eth to my actually i probably let's see let's do it with metamask right okay i bet oh look how much coal van atg has look at that i am a test net whale check it okay so let's see i'm going to go buy one eth worth of this token please sir uh man that is scary that is ethereum main net do not fire that transaction okay that would have been that would have that would have not been fun let's make sure this is on covant there we go probably should have a network warning there all right one of those purchase there we go so we're on the coven network we're sending one eth to uh this five a b e okay there we go glad i didn't burn one eighth live in front of everyone that would have been embarrassing yeah that would be real yeah welcome welcome to web3 okay so now let's check austin griffith's balance on kovan he has won could we even check it from the uh the contract's already closed okay so the last thing you want to do is you want to do a yarn build right we want to ship this and obviously we would not ship an app with this junky scaffolding but you would you would kind of go this example ui route and build out your ui but for now i'm going to do a yarn build and that's going to build a static website and then i'm going to yarn surge and we'll have this token on covan and the app live and you guys can get in with your coven and buy some of my  coin that i just minted okay cool so that's going to take a bit and that's kind of closing the loop on you you should be able to get scaffold eth down you should be able to tinker with your contracts add in some ui then you should be able to push that out to a test net or even a public network right we could have totally put in mainnet right here and we would have paid for it but we could have deployed this token to mainnet just as easily and my one main net eth would have actually been a buy so that would have worked okay but what i want to dive into now is just all the cool branches on scaffolding so we found that it's a really kind of like a cool tutorial format to to just make a a fork of scaffolding and build it out and build the tutorial right in the readme so this is market make so i'm thinking uh my old school knowledge of market make makes me think of like an order book like a make it take it kind of or order book and so if you want to build something that uses an order book you're going to need to know how to do signature recovery so if we go to signature recovery here or signature recover there's there's a scaffold eth read me and you basically just clone this and switch over to this branch and it's all of scaffolding everything is in the same place that you would normally expect it but then it's it's going to deploy uh uh your contract that shows you how to do ec recover in the in the contract so let's see it sets you up with yeah it basically walks you through this and you can once this deploys i'll check out some of these branches but you can you can see how we we generate a hash we sign that hash then we open up a second browser and we make sure that that signature works and then this leads you to uh like a meta multi-sig so if i go meta multi there's a whoops there's a meta multi-sig branch same thing it talks you through how to build now that you know how to do signature recovery here's how you would build a multi-sig wallet using that signature recovery and and by the way this is what runs like the build guild bank right there's this this code is deployed live this is on mainnet here's a bunch of people getting streamed uh streamed funds from the wallet that uh we built with scaffolding uh so uh oh whoa oh our app is done here we go we are all over the place here but i'm gonna search this what are we gonna call our taunt our our token anybody how about gusty cats all right gusty gusty i'm just going to call it gusty token i don't know why it's windy i've been windy on this call there we go we've got gusty dot token.surge.sh you can now be very very careful not to make a mainnet transaction there is not a warning on that if you connect your meta mask you should know what you're doing but there is gusty token dot surge and if you want you can just kind of pull up one of these addresses and send it some covan and then just use your burner to buy some tokens for some reason just showing you that we can kind of close the loop and make a uh fully a fully pushed dap in one sitting gustytoken.search.sh okay now what i want to do is check out a couple repos what do we go to the hour do we go to do i only have four minutes where are we at here i got a lot of stuff a lot of extra stuff to show here what do you think you can keep going let me double check the calendar but i think the next one is at 4 30 eastern so you've got quite a bit of time okay well i'm not i'm definitely not gonna go that long i got i got sushi waiting for me in the fridge i'm gonna go eat it real soon but let's how about let's go for 15 more minutes and i'll just show off all the branches i'm i'm wondering if adam is around eventually i'd like to have adam show off the hot the new hot hot he has a branch that is all ave oh yeah i don't know if i see him here though he he may not be here i i have a screenshot that he sent me okay let's let's talk let's look at um let's look at branches right okay so let's check out uh let's look at what branches are good here oh wait was that adam just talking adam are you there yeah there he is hey how's it going do you want to do this now at the end uh yeah we'll do this in a second i feel like we'll finish with the ave let's say let's say in five minutes we'll go all ave for the rest of the call give me five minutes to jam through all the other tokens and then i'll hand it off to adam to show off uh if that's good there are a few other questions in the chat okay those are the end let's see let's see uh okay cool cool oh i see a question about typescript and javascript i ask the same question to a lot of people uh i've asked it on calls we've done before right trent like ask the this guy's a lot smarter than me and it seems like if you're prototyping you're just dogging something out like that's probably javascript if once you have like an established product that is now going to start getting used and more more people than just you are going to use it uh you probably do want to start using typescript typescript is just so frustrating to me i just start shouting cuss words whenever i'm writing typescript so i usually just like switch to javascript because i can get stuff done yeah maybe maybe that's it the key is use the thing that gets the product out the door but uh if it's a long-running product you're gonna probably want to start looking at typescript and type chain i maybe i just never build any long-running products everything i do is just dogging it and and whatever ends up ends up okay what do we got for branches there's there's so many cool branches here and there's so many things that it's not just the code but it's it's a it's a walkthrough and it tells you how to ooh ooh uh emoji support this is a good one here we go emoji support i don't know if if it's oh look at this it's a nice tutorial okay so let's say you want to run your own quadratic funding round you would like to have let's see what do these contracts look like do we have some some square root math oh it's still old biddler by the way contracts there we go mvpclr we've got to have a square root in here somewhere yeah whatever but if you want to build your own oh i just closed it bring it back bring it back okay if you want to build your own quadratic round with a full front end with you know like the contracts and the app uh it's right here you just clone this repo and kind of go through these instructions and it will show you how by the way bear market lickers come on bear market liquors that's that's the best name for a company ever right trent we're we're not in the bear market anymore i don't think but we were when i made this so you can uh and we can tell by that right there uh you can fork a lot of these different branches and kind of have a working dap and then make those small tweaks and and kind of work toward whatever product you're thinking of building uh the bank the build guild bank the multi-sigs that i was talking about are there for some reason we did an allow list example a while ago i don't remember exactly what this is but it's like i don't i don't remember it's an allow list and a contract or something but there's just tons of branches and also you can jump into the scaffold eath chat and just ask and someone might be able to point you at the right uh the right branch uh we got to clean this up there's a lot of bonding here's a good one uh so this one talks you through how to build a bancore style bonding curve with a scaffold eath and kind of just like what the ui is going to look like how you you mint and burn uh let's see what else we have bites.land do i have this this this is a fun little game that i built that looks at the block hash and then generates these nfts and you can claim them and there's an interesting thing that the block you can only read the block hash back like 256 blocks so you have this window within the last hour to mine these nfts from the deterministic block hash before they disappear forever fun fun little game fun little something to play with there let's see starting from the bottom what else do we have so the uniswapper is a big one we'll get to that uh in in a minute let me see if i can find ooh token allocator this is a fun one we were looking at could we build like this credibly neutral token allocator well people send tokens and it splits it to different people uh i know there's a commit reveal let me just search commit reveal there's a couple commit reveal tutorials and if you're if you're like thinking of something to build build a commit reveal tutorial in scatter leap just to like go through it build a decentralized bank build a multi-sig wallet build a staking app where you can stake funds and make sure you have the date time stamp right lots of like little things that sound dumb simple but by building them you'll kind of find your your your blind spots and you can fill them in uh okay what what do we got what do we got what do we got oh a dex so uh yeah this is like old school like minimum viable decks how to basically building that pricing function that makes an amm work uh there's so many cool ones what else what else i think it's time for for uh ooh haiku exchange this is cool so we're selling so you get in and you mentions on and they're erc721s and you mint them on a bonding curve so look for the haiku exchange coming out soon uh let's see roll some dice that sounds that sounds interesting not much there uh okay let's go look at the swapper it's time oh wait wait instant wallet is the instant wallet here there we go there's a couple of them uh an instant wallet is just instantwallet.io darn it there's not a good one how about 8bit does it eight bit wallet adams adam built an instant wallet but gave it the nes css feel now uh very cool stuff though lots lots and lots of cool branches all right the uniswapper this is the one uh so the uniswapper is uh it brings in a couple things so first of all i'm gonna kill my local let's see can i just check it out the uniswapper is built by adam and he took uh kind of a similar uniswap ui and built it into scaffold eth oh oh no uh yarn install probably and set it up so you can create uh a uniswap like front end for your backend or for whatever you want you can just like off the shelf you can bring in a dex ui so if you have to swap between tokens or swap between eth you could just go to the unit swap or branch and clone that in let's see let me this is going to be a wild one if i can pull all of this off but let's see we'll do a yarn start and that's going to bring up our front end then i'm going to do a yarn fork and yarn fork is going to give us a mainnet fork of ethereum right let's kill that and say yes let's see if this works so so we're going to fork main net and then we're going to build uh we're going to bring in an exchange component that lets us do like uniswap-like stuff but all within our own app okay let's see if this comes up cool there it is okay so i'm on a mainnet fork so this is going to be weird but i'm going to bring in my metamask yes localhost make sure you're on localhost even though it's going to show my my normal mainnet i wish that was my main net balance let's see let's connect let's connect metamask make sure we're on localhost 8545. uh hmm i am weird okay i guess this isn't going to work maybe it's oh you know what i know i know i have a shoot i changed my chain id for my local host so i need to get in and edit that and i don't want to navigate meta mask when we only have five minutes left but look at this you have this nice component where we can swap from each to die uh i think i can switch that around yeah so or i could do die up here right basically you can swap between tokens within your own ui uh and there is a medium article that goes with this uh wow i'm not doing a very good demo here sorry guys um i think it will be about time to hand this off to adam to show us the ave stuff uh but you do have a uniswap like interface in scaffold eath you just need to be careful when you do this yarn fork that your chain id is correct and that's what i need to go fix to be able to pull this off so i won't be able to do a live demo uh but you do have a uniswap component built into scaffolding to pull it off uh let me see so can we can adam can you share your screen what do you think is the best way to do this yeah i would love to see the ave let me let me let me stop sharing you see if you can share we might have to make you a host we may have to have some magical i'm going to look through questions too um awesome you got it logan yep oh look at you got the uniswapper too yes the um do a better demo than i did yeah yes so i guess this is um like like austin said um essentially using scaffolding um but starting to pull in some more things from defy so um i don't actually have 25 000 24 000 um dollars worth in here like like the nice thing when you're running on a fork um is that you can effectively uh give yourself um as much as you like so i'll pull open the faucet and give myself let's get myself whatever it is another fifty thousand um and that should hopefully land 74 000 that's quite nice to give you a sense of the um uni swapper how that works you can see essentially it's got my that balance 61 die uh 661 eth i can switch that out for die you can set the amount in each so i could have at 50 there and give it a second it sometimes takes a little while to get going um yeah that'll give me 50 uh 62 000 let's swap that it clicks up confirming it's going to see the the slippage on that yeah not too bad so that that gives me sort of 83 000 dime so like you get a sense where firstly you feel like an absolute baller um but then then secondly like it's a good good example of how you can um like extend the components to be um yeah actually interacting with d4 which is what you can do when you're on a main network um are they obviously um so like the same idea this is sort of a lender component and um like the key thing here i'm just showing this window rather than the whole screen but like all the all you do here is you basically pull in the component um and then pass in like a local provider which has got a signer um and then that that's pretty much all this needs to render like this so um this essentially is again taking this account here um this like i deposited a bit earlier um but it shows your sort of collateral your debt your allowance um you can like show that in the native amount or you can show in u.s u.s dollars um uh and effectively um this may maybe if i hide this this guy um yeah effectively um shows you all the different markets the different deposit rates and so this is like pulling um on chain to get this information just my local chain um but then yeah you can so you can deposit you can borrow um so i've got a bit deposit already maybe if i wanted to borrow some uni or maybe some wi-fi uh we've just got some little helpers here which tell you what you've deposited what your maximum borrow is based on your um the amount you deposited this kind of stuff so again it's like just taking a load of the components um uh and like hopefully getting like like also showing like how to do a bunch of stuff like interact with contracts that have already been deployed that you haven't deployed um and i like it like as well as some of the stuff like if i wanted to deploy i if i wanted to deposit a load of um die starting to handle some of the like if you give a second um like approvals and those kind of things and essentially like uh it's a bit more complex than uni swapper but um but it uh like hopefully yeah like austin said it's getting closer to d5 um so yeah so that's the lender component which is on the lender the lender branch of scaffolding right now um yeah so good so we've got we've got yarn fork so so on top of just like the usual scaffold stuff you can learn commit reveal you can learn uh like kind of how to get your solidity in your local environment building tokens building vendors building amms but then it's like integrating with existing protocols right we've got the unis flopper where you can swap stuff you can bring in component swap stuff you can fork mainnet and then this is this is super cool i haven't even played with this yet but i'm excited to mess around with some some ave and it's like you could do it on a mainnet fork right you could set up your ui to kind of like okay let's make sure this is going to work but then you can deploy it and actually switch it to real mainnet and and run through it live also this is really awesome adam great work man this is cool any so i let's just open it up right uh-oh i don't know if i can hear you let's just open it up for questions anybody out there have any questions anybody want to see us hack on something like i've got some extra time we can we can stop the recording whatever whatever anybody wants like i'm open for whatever if there's a specific question you want to see something built uh you want me to talk through something i'm up for whatever open it up to the world anybody have any questions the immaculate workshop sounds like so one question trent that you talked about was i i kind of have a hint in there that you can upgrade or you can uh graduate to create ethap and create eth app is also on uh ethereum.org it's built by paul berg it's a little bit different it's more like he's he's done the work of taking create react app and then adding kind of d5 protocol interfaces to it so so if if you need to build your own contract and you want to kind of iterate on the contract use scaffolding if you just want to go talk to one of the contracts that's already deployed try try paul's create ethab my my instinct is eventually these things are going to kind of come together and all of this stuff will just be one big or or maybe it's it's a bunch of like maybe we take our hooks library maybe we take our components library and and make them more reusable in something like create ethab but uh yeah check it take a look at his stuff also just making sure that is on everyone radar too like use the best tool for you to get the job done uh link for cree for paul's create youth app uh let's see if you just go to ethereum.org and do local environment so ethereum.org developers local environment and then create ethab is there i can post it i got it cool um what else oh have i shielded each build yet i should show that real quick just to you know you you've got a chill when you got got it around so if you go to let's see learn by coding go to ethbuild uh this will help you just kind of like cover a lot of the fundamentals hashes key pairs transactions encryption kind of goes through like how how consensus comes together and then and then we get smart contracts but it also just can set you up i think there's oh yeah it can set you up with just this nice sandbox right where you can go let's go talk to i don't even know uh here let's bring in some random chain let's go see let's go see what what block covan is on since we have that uh there we go then it'll run a query and it's on that that's the block that coven's on for some reason if we wanted to make a transaction or we wanted to bring in a key pair and sign some message and then send it across ipfs and then store it as a file drop and display it as a qr code and input a file upload okay i'm i'm all over the place but you get it this this will help you even like uh ooh what if you had like a you had like a number that was just like and you're like whoa what is that in oh look at that that's a thousand way that's pretty cool or if i add a couple more will it do way instead no it's not going to uh but you could do two way right so just a handy little uh that's not even gonna i don't know what i'm doing wrong here okay uh handy little tools that you can use to uh kind of build stuff out that's eath build getting the fundamentals and then switch over to scaffolding build out your app uh lots of branches on scaffold teeth lots of people helping out building new cool things if you're interested hit me up like straight up in the dms i'm at austin griffith join our scaffolding channel open open to any more questions but it's i feel like we're wrapping up anybody got anything hit us hit us if you got something i don't have twitter yeah yeah oh uh how about telegram can i can i just post a link to the telegram chat right now you can't telegram either what do you uh you might want to get one of the yeah it might be it might be time to get get telegram i think let me send you uh or twitter like twitter is pretty awesome for getting crypto twitter news like like i i feel like i've learned a lot from having twitter and following smart people on twitter like smart crypto twitter people i i won't get twitter even if you just create some anon account that's just some cartoon character go follow like the top 20 awesome people in ethereum and you will find like you will learn so much there's there's so much neat stuff going on there's a lot of stuff that you can ignore right like yeah there's a lot of good stuff too so i would say get twitter i'm gonna i'm gonna post austin griffith this will be your first follow follow me number one oh sorry so so it's not like people that are like eth is going to one million dollars in two weeks does not just feel like that oh no oh you you know during there was two years of a bear market where we didn't even talk about price it was it was fantastic yeah i i recall i bag helped let me let me grab the chat just so we have uh the scaffold eath chat i'm gonna paste that in here too anybody who wants to join the telegram channel for scaffold eath if you just have random scaffold eat questions post them post them in there uh anybody else there are a few questions i think uh maybe a sticker for them this is a cool question just making a list of my favorite twitter people that's a that's a cool like we could do that like not live right now but i will like i feel like maybe i need to do a follow friday i'm putting it on my list right wasn't that the thing back in the day you would do follow friday and you tag a bunch of people yeah there's still some people do that you just you can make you can make a list yourself of like ethereum devs for new people to follow ooh ethereum devs for new people to follow and you can make a list and share it in your uh your scaffold channel i love that i feel like that that's that's gonna be a thing that's like a starter starter pack a starter pack yeah that's great the crypto twitter starter pack i like that a lot let's see one question is was the benefit of hard hard hat over truffle that's a great question so so like truffle got the job done right like so many great apps have been built or great contracts used or truffle so i don't want to like riff on crumple or say anything i i would just say that like there were issues that i had with truffle that just like mentally it was hard to understand like why is there a migration contract there's nothing to do with migrations at first but you have to learn why why there's a migration contract there's just a lot of junk that you learn that you don't need to learn or the the mental model isn't quite quite right and i think my my intuition is that truffle was built to get the job done and hard hat was built to with a developer in mind and it's like and they're both great they're both on ethereum.org you can use both of them i think a key difference is you'll get console logs and you'll get some more stack traces and stuff like that so you get a little bit more introspection into what's going on but on top of that i think there's just there's a growing developer community around hard hat and there's more community and there's more plug-ins uh but use both going back to i feel like a star over everything is use what gets you to the finish line right like whatever tool you need that gets you done like go for that but i would recommend using hard hat just by using both of them one of them being kind of aggravating and frustrating and the other one being slightly less frustrating and i can get work done i i would just lean toward hard hat the next one i see is would it be hard to replace uh the react and scaffold with angular ooh that's a good one i i would i would love to see that like angular is about fifth on my list but i would love to see other front ends like schvelt and vue right like some some some popular front ends maybe maybe angular is the second most popular i don't know but uh it it's not going to be super super hard in terms of uh you you compile and deploy the hard hat and then it injects into the react so you would just whatever front end you want you would just set up that published script to make sure it injects correctly but there's a ton of like components that we built right like that contract component is probably some real custom react stuff so there's going to be some nice things that i have that you won't have if you go with a new front end but if you've got a couple weeks and you want to work on that hit me in the dms and i will turn on a stream from the build guild to you of eth to build a view version to build an angular version to build this felt version so i'm always for people to contribute to the repo and sometimes contributing to the repo just means building something awesome with it and creating one of those like tutorial how to's so if you are building something awesome with it also slide into the dms and let's figure something out there too maximilian did i get that right okay cool uh there's a question about scaffold eath has a direct connect with xdi chain is there a medic configuration oh there totally is uh i i'm surprised that let's see is it it's not okay if i had a matic one so i was giving igor some because i couldn't deploy two contracts at like i deploy i so i was on dap university the other day and we did kind of a okay i'm gonna deploy a token and i'm gonna deploy a vendor just showing that stuff off and the vendor wouldn't deploy because dark forest was happening and like uh all all of x die was just so like it was the third most active chain in the world right so like he he uh igor had to set up probably some web 2 defenses to try to like combat all the noise on the network and so i couldn't deploy like two contracts in a row so i gave i sent him some like i'm deploying to matic right now and it's fine because they're i mean they're like kind of competitors i think they're they're there are two side chains of choice they they're the same to me like basically i point the satellite at x die and it works and it's fast and it's cheap i point the satellite at matic and it's fast and it's cheap i think that there isn't an endpoint but uh i'm putting that on my list by the end of today there will be a matic option in scaffolding are there any more questions thanks everybody for sticking around this was yeah but uh no no no that's fine i think we wrapped within a reasonable amount of time um yeah so we're gonna wrap here uh we're gonna let austin go eat his sushi uh it's from a grocery store too grocery store sushi hey man no no shade i've done that everybody has um yeah so thanks again austin for that if you haven't joined the telegram channel uh do that i'll i'll link it in the discord as well for anybody who misses the link or wants other people to join um austin is like what's that huge thanks to adam oh yeah adam thank you jumping in good job uh jumping in unprompted and filling in some of the stuff uh it's gonna be perfect for people who are trying to integrate with ave and hopefully it'll it'll help them get a little bit more out the door you know over these next few weeks so thank you adam what's the ave branch called sorry let me let me go find i feel like is it called ave and slender lender oh that could yeah that let me i'm just gonna paste that into the chat right now since it's such a hot topic here comes the lender branch in the chat bam thanks sorry for the interruption trends no no i'm gonna go through the chat really quick and pull all this stuff out um oh okay yeah i think that's it maybe i'll go over the logistics again so uh later today we have one more tutorial or one more workshop with chain links so if you're interested in pursuing some of their bounties or integrating oracles into your project definitely check that out with patrick collins and then like i said there's workshops this entire week a couple more tomorrow wednesday and i believe thursday and then friday we haven't chosen the time yet but that's going to be the idea validation session so that's going to be me and the ave team you're going to have a few minutes to pitch what you're working on and we'll be like awesome that sounds good or you know we think you should trim your scope a little um here are some ideas uh here's something to look at it'll be a pretty pretty high level thing but we want to we want to hear what you've come up with over this past week and give you feedback on it so that will be friday um hopefully we'll have two sessions for people in different time zones but at a minimum there will be one on friday for idea validation so um i think that's it uh oh the last thing is check-ins should be fixed now we had a few little um quirks in the on your dashboard but you should be able to check in um with your team so just just head to your dashboard there's a couple questions uh it shouldn't take more than five minutes and then put that response into your cohort channel in the discord uh okay i'm done thank you austin thank you adam thank you everybody for sticking around so long and we're gonna wrap here 