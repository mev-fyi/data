all right we're good great welcome all heck of us hackers in this session and anybody watching along on YouTube to another session focused on Lotus today or rather this afternoon for this session we have I use a file for an engineer and why the technical leap for file calling they are going to be walking us through workshop specifically focused on how to use Lotus in your own personal project so we're very excited to have them and it's building off of some of the other sessions we had today which was pooja earlier talking about developing a file coin and then we had Vasa just a few hours ago talking on other ways to build with Lotus so if you missed any of those sessions and you want to look at them in context with this one we're in right now definitely go check them out in the 8th global YouTube channel and we'll keep going with the awesome photo logistics I'm sure most of you heard this already done your check-ins but go to your cohort channel we're running the first week or rather the first check-in for week 2 which is something that we're going to be doing throughout the entire event for the next few weeks we do just a simple text-based check-in so you go to your hacker dashboard and write some a few small details about what you're working on any issues you're having any specific sponsors that you plan to integrate things like that it's helpful for us to help you resolve any issues and it's helpful for the rest of the hacker fest community as they're building things they can see you our progress and you can help other people so make sure to do your check-ins within the next few hours we hope to have all of them done within 24 hours and then we can kind of start building and helping people with different resources karate says I don't see a checking channel I would hit me up on slack and we'll figure out which one you're supposed to be in there are different ones I think that's it for logistics I'll let I you should start and share a screen well yeah thank you very much Trent thank you everyone who's participating in hack offense and attending this workshop in particular very excited to be to be doing this today is very much intended to be kind of like an interactive follow along process so definitely try to try to keep up with what we're doing feel free to ask questions on chat or just unmute especially if you're running into trouble following little steps sorry I forgot to mention and we try to do this every session but if you are blocked or you have an issue or a quick question don't be afraid to unmute this is meant to be an interactive workshop where you can learn and you know be able to follow along so if you do get stuck just jump in quick and we're more than happy to help you alright so I can be heard well right by the name Jeff Jeff excellent yes so we've got this very quick intro tech but and after that why we'll be taking it away and kind of just doing a live demo of how to get set up with Lotus I'm assuming familiarity with file coined by this point where the people that are attending so today's focus is definitely on Lotus which is the reference implementation of file Coyne the website for docs as well as just most of your resources will be low to dot F H Lelouch as we like to say so if you haven't already please go there let me also quickly drop a link to this gist that you may already have it was sent out in the prep materials but that's the rough outline of what we'll be trying to follow along today so keep an eye on that as well very quickly what is Lotus what is a lotus node what does a lot of snow do kind of like these are the six big points Lotus is what will help you find everyone else on the file core network and connect to them based on those connections figure out where the blockchain is at and then sync the chain as required and then it provides a bunch of tools to interact with the blockchain itself this is kind of your standard aetherium things to you know send messages query chain height all of that fun stuff Lotus provides an internal wallet for key management so you have an easy way to manage your keys sign messages and so on in there and then obviously specific to file coin Lotus provides interfaces to actually store and retrieve files from the network itself kind of a subset of Lotus is the Minor itself which can be run as a separate process it's designed to the the Minor talks to a Lotus node it to submit L'Occitane minds but it is not a core part of a lotus node itself so if you just spin up your Lotus node there's no mining related stuff that's going to start automatically which is good for people that aren't miners so today this is kind of what we have in the gist as well basically y is going to be sharing a screen how do you install Lotus if you haven't already how do you get it up and running we'll be using the neural net chain which is a hack if s network that we have and then we'll essentially just be playing around with Lotus so that people can get a feel of of what it's like to work with leather so we'll use the CLI maybe we'll use the API if there are specific things that people would like demoed we're more than happy to do it if not we have some kind of key features to highlight last thing I'll say is this is intended to be very interactive and flexible so like I said feel free to ask questions feel free to direct this yourselves I'll try to keep an eye on questions coming in on the chat but as Trent said feel free to unmute and ask questions as well because that's kind of what we want to do today but that's about all I have to say why if you want to take it away oh cool you know that screen share yeah I can't steal it from you all right so I am just going to be sharing a terminal here for a bit um can you all see this good great cool so Lotus is in itself a CLI you know program ah the entire interface is really just through the CLI where you have separate things that are you know GUI is on top of it and other things that build on top of this but for the purpose of this workshop we're just gonna be hanging out the terminal for a bit looking at some cool text so first thing once you have Lotus clone so I I did a git clone github.com are in this already because I've slow internet and I don't want to bother doing that live so you're on that it'll clone download us and then you know CD into it and you can just run make Lotus and this is just gonna go through and it's it does the build process is actually like a little more complicated than a normal go project because we're binding in a bunch of rust code Lotus is mostly ko except for all of the proofs and crypto stuff is in rest so our BLS signatures are snark verification that's not proving all of that's in rust so it has to do a bit of downloading some rest and stuff and then binding that in the go and so on so from here you know kind of a team axe come on team ox are you kidding me sorry top this is you know embarrassing here that's fighting myself quick interruption to say that folks following along should check out the the NT WK - ignore for branch on owner pi write that list make sure that you automatically connect to the neural networks just test Network I don't I make it Elias is on this computer this is a all right so I'm gonna have to run make Lotus again yeah so the the with Lotus we tend to bake in the Genesis block and the bootstrap network configuration into the code so when you check out a branch and you build the code for that branch it's going to have the network to connect to pre-configured so now we have Lotus and we have a binary you can just run dot slash Lotus or equivalently Lotus - - help to see the sets of commands we have the way we design applications here we tried to make sure that ever you can explore the set of a full set of capabilities from the command line so for example of a state - - help gives you all the load of state commands and so it from here you can see a lot of state power - - help and you can go through and explore like well what are the set of things I can do with Lotus node and we have a lot in here because we use this tool to debug and diagnose the network in general so like all of our debugging and all of our like to figure out what's wrong with the network work tends to result and features being added to the CLI interface to help with that so the first thing you'll want to do is run Lotus daemon this is just like any block to network going to kick off the daemon and start syncing the chain actually I need to get in a tea box first so have the daemon running and so while it's running it's you know you can't do anything else in that terminal so you have to open up a new terminal to do other things but we can check a few things so we can check Lotus sync status and this is this is going to tell you that we have one of our sync workers doing a header sync it the height that it's syncing at is to twenty three thousand six hundred eighty five so that's how many blocks are on this network and we're syncing the header chain from the tip that it's discovered all the way back to Genesis once we've synced the header chain all the way back you can see that this number of height is going down um well maybe seems like their networks maybe a little slow or my Internet's kind of slow actually once we make it back to Genesis then we're gonna sink the messages and validate the chain the reason for syncing the header first is so that you don't you verified that the chain actually links properly so that people can't dossie you by creating fake chains that you then try to sync it and download massive amounts of data and resources to verify so a few things to check here while you're syncing your chain head is not gonna update so when I run Lotus chain list which is a command you can use to list the chain you're just gonna see the Genesis block so this is you know block 0 created on July 6th that's CID it was mined by 0 0 which is just meaning that it was created by luck in the Genesis system itself so nothing here is really gonna change and so for a while because well seeking seeking network at least on this code is probably gonna take about half an hour to 35 minutes I don't really feel like sitting around waiting for that to happen in front of everybody so I have another node my password no live live soon here but so I have another node and I think it's synced let's make sure yep so this node is synced so when you run Lotus chain list on a sync node it's gonna you're gonna see a lot more information you can see each line which gets wrapped on my screen it's gonna show you the chain height of a block its creation date and in the set of blocks the see IDs and minors of each walk in that tip set so it'll show us I think about 30 by default and then we can check a few other things Lotus sync status is gonna tell us it's gonna so sync status kind of gives you an idea more the inner workings of what Lotus is doing so the Lotus sinker has three workers that are just open to any tasks so as blocks come in it'll schedule one of those workers to work on sinking this block this is more Diagnostics information but it can be useful if you're wondering why isn't things sinking so we can see these are all complete so onto some fun stuff so the lotus state command is where a lot of the interesting like what's going on in the network stuff is happening so one thing we can do is just run load of state power and see that this network has sixteen point seven terabytes of power on it so it's not a huge amount this is a small def net so fairly normal we can do load of state list miners there's looks like there's about 15 20 miners in here and then so this is like the set of miners that you have that could be creating blocks here and are just generally on the network you can check the power of any individual miner how much storage they're providing to the network and so like for example if you're building an application that wants to like select a miner for building a store for making their storage deal with well you could list all the miners and then go through and see which one has the most power it's potentially a useful heuristic probably not the only one what you want to use what else do we have oops so you have Lotus wallet so the Lotus wallet command is basically your in node key management set of commands so I can you know I can list my existing addresses I have this pls address here the very long addresses to start with t3 our BLS address I can create a new POS address and so now and I list them it's two of them I can also create a sec DK my second p25 six k1 address which are much shorter but so the reason we have each of these BLS addresses or be less keys when you sign messages with them their signatures can be aggregated so the actual cost to the chain of using a BLS address is much less because we just aggregate all the signatures and you save like 90 bytes per message signature data and actually a simple VLS message to just send funds from one account to another can be as small as 20 bytes which is really cool like you know if you think about how Bitcoin has like a block size limit of like one megabyte if you fill one megabyte with 20 byte transactions you know that's a whole lot of transactions it's like five hundred thousand or no fifty thousand think up that map something like that no no no it's more than that I can't I used it math okay yeah so Lotus Wallet balance allows you to check how what the balance of your default account is you can also check the balance of any anything on the network here like I can pick this new thing oh that's my same addresses this new address I made here at zero the sec p address I made at zero so just some other simple commands Lotus send lets you use as it says just send funds from one account to another so let's say I want to send this account by file coin great sent that and it's gonna tell us the CID the hash of the message that it's sent off so now most most Lotus commands instead of waiting for something syrup essence land on chain it's just gonna tell you what the hash of the message is that you can wait on it yourself so what we can do is we can do Lotus State wait message and give it that and so this is gonna scan the chain to see if it's argue made it on chain and then if it hasn't found that on chaining that's gonna wait for new blocks to arrive is how long is this gonna wait but he thought it'd be like four minutes is now I don't feel like waiting that mom gonna live you know workshop call but that's how you do that it also exists as an API call it's like most of these commands map near they want to Wan with API calls so you just call wait message in your app and wait for the callback to fire yeah how quickly add that there's a whole bunch of for those who prefer visualizations of things there's a whole bunch of community to run dashboards that you can look up things like your message the ID or your address on and it will just provide that information there aren't any foreigner Pinet which is the hack FS Network but the kind of bigger Stabler test at the big one with 25 of bytes of data supports all of those so when you kind of graduate onto that network you'll be able to visualize it as well yeah it's not yeah because it's in a wait for like for four or five confirmations cool so that's some basic commands you you know create a wallet send some money check your balances but you know final coin is really about storing data so let's sound let's make a file to store so I'm just gonna type in this file and I'm gonna copy and paste a few times just to make it above a hundred and twenty eight hundred bytes there's a minimum file size and falcone right now I don't think we don't necessarily had it Pat it out for you so if you try to store file under 128 bytes it's gonna tell you actually that's too small like that's basically smaller than a you know the hash that you're using to talk about the file so you might as well just you know put your data in a message and throw it on chain or something so we have our file make sure it's there look I used to you have a minor idea that's good I think we have a minor running yeah yeah give me one second so the Lotus client sub-command is what you're gonna use for interacting with the markets both retrieval and storage markets and so the flow of making a deal on file coyness learning - in fact - first you need to import the data so Lotus client import will let you take the path of the file and it's gonna take it do some processing on it and give you back its hash now this is very this is almost identical to an IPS ad so if you're familiar with that give us this is basically ipfs add your file which is kind of cool because you know coin stores ipfs data and like our default native format is just ipfs datas packed into a car file but you know so we grab this and then now we are going to well first I should probably query Cleary the minor so I use did you find in minor address yes I sent it to you on slack but zero one zero two three should be good good well so here's here's our minor zero one zero two three so this this is very short address here every account on file Quinn gets what's called an ID address ID addresses are assigned a number and that's basically the order account creation globally on file point so the cool thing about blockchain is you have a total global ordering of everything that has happened on the chain obviously you have to you know wait for some number of confirmations before you can be sure there won't be a reorg but you do get a total global ordering and so what we're doing is every account has a normal address like you know your long hash address or something along those lines but it also gets assigned at the short ID address and so with with your accounts instead of using you know passing around like your giant long etherion hex address or whatever you can just say oh yeah i am i'm 10:47 right or something along those lines and that's much easy to remember much easier to you know pass around and like share but it also takes a much less space on Shane so instead of being you know 30 bytes on Shane for an address it's five six even when you have millions of addresses so really really space efficient here and also like the medically easy to remember so we have queried the asked which is the storage like storage information I like basically what this miners willing to accept in pay for payment of storage deal or this minor tease 0 1 0 23 and so they're saying their price per gigabyte is this their Max piece size is 512 megabytes that's because there are 512 Meg miner miners are able to set both minimum and maximum key sizes so they can say they don't except files smaller than X or bigger than Y and there's a few other parameters that they can advertise but really a miner gets to decide them selves if they accept your file or not so there's it's really there's no there's nothing obliging the minor to actually accept your deal even if you pay them like infinite amounts of money so with that we're gonna make a deal so the deal command has a few extra flags around here most of these you don't usually care about but for example you can you can manually specify some hashes of things so that we can pass so instead of transferring the data over the network you can for example nail somebody you know a miner a hard drive with your data because moving terabytes of data is hard say the least so Lotus client deal we're going to grab our data CID from here and put that there and then the miner is t0 10:23 the price is this price that we got from here and then the duration let's say that we want to store it for a thousand blocks I think I have enough money for this yeah so there is our deal and this is the CID of the deal so now Lotus client list deals is going to give me oh wow my scrapping there but yeah so Lotus client list deals is gonna show me it's just gonna make it ugly if I move it out here oh uh so the deal CID the deal ID is zero provider is ten twenty three this is currently in deal client funding which means that deal is waiting for us as the client to put money on chain in order for the deal to actually be funded so the miner actually hasn't accepted the deal yet the miner is waiting for us to commit money to the chain so that the miner knows we have the funds to actually pay them so this means this is not on chain yet obviously hasn't been slashed yet if it's not on chain yet the piece CID is another hash I'll explain in a second this is two kilobytes of data and that's the price and duration actually oh sorry it's not duration actually that's like ending ending block ID I believe so you're proposing it at the miners ask exactly I'm just proposing it right at what the miner is asking for okay so you could try to set a lower price but I think the default logic says reject miners are definitely able to write their own you know logic for accepting things so like if they have a sector that's just about to be sealed and it you know has a little bit of space left over they might accept data at a lower price you know just to fill out that deal so they can have a nice you know perfectly packed sector or you know depending on the size of the file like if you want to store one whole sector size data they might give you a bit of a discount just because that's logistically easier for them so there's number of different things that could happen here so very quickly I guess everyone was wondering the obvious Jeremy Jeremy made the deal the price with zero point zero with many zeros fault followed by five because that was in file coin kind of the big the higher level unit what's being displayed under storage price there is an auto-fill which is just 10 to the 18 we have some UI work here to do around we use the same amount denomination as aetherium so if you're familiar with the theorems what did they call their tiniest unit I think the way yeah so this this number down here is effectively in way we're using metric SI units so we just call it autofill is that's no end of the negative 18 and yeah ideally we would have liked a little units attached to that I think we should make a note I used pretty things and nicer we have a workshop scheduled for the whole like mining process and ceiling setting out you know starting up and all these you're gonna be a workshop planned um not that I know of but we could do one you know I can also switch to showing some minor commands not setting up a miner necessarily but the Machine this is running on is is a mining machine oh that's all with respect it's it's a thread Ripper with a bunch of RAM you got like you got the nvme for like the swap and all that yeah yeah that's awesome it's a it's it's got all the things but uh back towards a deal so it said storage deal validating um so now the miner sort of do validating means the miner has received our data and now they're validating that deals correct actually I wouldn't expect to see it stay very long in this also everything each step right now has a confirmation I think of like five to ten blocks so between each of these phases it's like two or three minutes just because things are being waited for it to land on chain a lot of this is because I haven't actually made deals with this client before so once you already have money locked up in this in the market that first step of like waiting for a client funding would have gone through immediately because I would already have funds in the market and likely this miner is just waiting - waiting to see a bunch of these things that's a good point maybe just ask for questions people are confused about anything or want elaboration on anything feel free to post in the chat or just unmute well cool so um yeah so while we wait for that I can go through some other interesting commands here I found one like one of my favorite commands in on Lotus is a more of a Diagnostics command so Lotus state compute state what it does is it allows you to compute the state root for any given tip set which on its own seems pretty boring and it is kind of boring on its own but what you can do is you can specify any tip set at any height so I wanna go back to subset 2000 and compute the state for that you just type in at 2000 there and it's gonna give you the state like Wow well that's cool but what the hell do I do with state route um great question the fun thing here is that you can show the execution trace in this super gnar organ anomic format here which okay so this is slightly more interesting there's a bunch of numbers and a bunch of addresses what's what's really going on what's really going on is this is every message that is being sent and in every invocation trace that's happening on chain a much more interesting way of viewing this because we have an HTML format here oops yeah some HTML format there that is I'm gonna share that because I think it's pretty cool have to share my browser okay so this is I think actually really interesting sort of stuff to look at because it kind of helps you understand what's going on in the walk this block itself actually has no contains no messages but there's still a bunch of stuff that happens every every every block so even if there's no messages you're still going to award the blocker world in file coin the block reward is awarded by the miner in their block they include a transaction that calls a ward block reward on the reward actor so there is a specific actor like smart contract in file coin that holds all of the funds that will ever be paid out to miners and every time you might a block you get to call redeem and so that goes through so we call reward actor award block reward with some parameters saying this miner is this miner is claiming a block reward that's going to go call a blocked funds and it's gonna lock up this amount of money which right now on this network the block award is 1.8 file coin per per Gwynn um this is just a weird kind of random number just because the crypto economic stuff is not yet finalized on this network so 1.8 file Quinn is not the actual block reward that would be absurdly low and then so there's a few so we can see that this upper level method is calling down to a bot funds is calling in to update pledge total and that goes back and then it sends 0 well actually this might be it's kind of a bug we shouldn't call this that there's no fire point of burn but it burns any account fees so if there's there are fees that happen potentially in each block and if there are fees we burn them I think we missed a check for if there are zero fees don't bother sending a message I usually want to write that one down as they cool so we can see that there are several award block Awards this tip set contains one - looks like three blocks so I'd expect to see three different block reward Awards this one for minor 1000 - this one for minor 1000 and then we have a cron tick so who's familiar with like cron in a Linux system so Kron in the Linux system is like it's it's a daemon that you can tell to do something at some certain time of the day so you can say like we run this command at 5:00 p.m. every night and it will just do that and so in final coin we we have a chronicler which allows things to be scheduled to happen at certain points in time right now we're only we have this closed so that only system actors can register events but in the future this will be open up to user program full contracts to be able to register stuff to happen in the future which is a really nice feature because being able to say I want this to happen you know in a week and just run this run this code in a week on chain have an autonomous computer being running that for you it's really cool so the the built-in cron ticks kind of do a few things to maintain like Network API as we track we tracked like how much blocker what's given out every round so that we can adjust to pledge collateral and so on and then there's a few other things that happen but the main point of this is if you're ever curious to see like I sent a transaction on file coin and it didn't work for some reason you can pull up the tips that that that transaction ran and pull up the trace and look and see in depth every single step that happened to try and figure out why that command failed so for example you know if you're running a minor and some minor operation failed you like why did this happen well you can dye them and go see what happened with Lotus compute state sharing what got right about it and you just gave me a trace of the specific tips tip set a certain block okay what does that actually mean if you don't mind me asking yeah of course that's a great question um so most block chains you have one block for every epoch right so a Bitcoin you have one block in mines on top of its parent which might on top its parent so on and so forth and final coin at every round there are a number of blocks that get created and all of them are included so they're all like valid blocks at that height so we target this to be about five so we try to have a round on average five five blocks per round and this is a result of expected consensus which is a are like our proof of stake ish algorithm that we're using for storage based instances and so a tip set refers to the set of blocks that occurred it's certainly round that were you know mind entered the chain so a tip set at high 2000 is the set of blocks that were mined at high 2000 and were included in the main chain yet the content of the tips that also has one interesting consequence for how messages are included and executed which is in say something like Bitcoin if a message is included in the block its executed in that same block because you can just do that and the result of that execution happens immediately because you have multiple blocks and a chipset it's possible that multiple blocks at the same level will include the same message so you can't actually execute the blocks right away so instead what happens this message is are broken into two stages inclusion and execution so messages getting getting cluded in blocks at a certain type side and maybe they're included in three out of five blocks in that chip said they'll actually get executed and blocks are built on top of that chip sets of child blocks at that chip set and only get executed once because of that stage you can duplicate based on you have yeah so the actual concept of a state route and file coin is always referencing the parent state route so for a given block you know that blocks a parent state route and that's because when you create that block you take your selecting the set of parents that you're mining that block on top of and then you serialize all the messages in that block and order do you duplicate any messages that are you know duplicates and then run through that execution and that's that this'll this is allows us actually to have a fairly high level of throughput because you can actually if if miner is properly coordinated and properly included like set of different sets of messages if every block in a tip set includes a completely different set of messages you can have you know 5x to the number of messages they could get executed and a given epoch and so this is ya ready so yeah you said there was multiple you have multiple parent blocks after performing is gonna be on each of the ones where their messages in each of those parent blocks as though you said I just wanna get the general idea yeah so the this every block includes some messages right right and so when you're mining your block you pick a set of parents that you're mining on top of which are blocks from the previous round it has to be those blocks have to be all at the same height and so you include those and then when you're computing the state route to base your block off of it's going to be the result of computing all the messages and the parents that you chose I'm just repeating that in my head it makes sense and so I'm just imagining the math that was required to take the messages computed from each of the multiple parent blocks and then trading it combined it's the result root state yeah yes the parent state route yep yeah you also know we're not talking to minors right now because Yeldon asked the question miners immediately do which is does every block in the chipset earn a reward and the answer is yes every block in attempts that earns the same reward it's not that I've across the miners just in case you were wondering if we do our job right the point value it should get cheaper and cheaper right if we if I coming you know spreads to the entire world right it should get cheaper and cheaper like that's our goal right like we're not looking for coin appreciation never mind like this is we're gonna get it like this is good like it tastes great less filling are you probably yeah something like that oh yeah our deal is now sealing so we need to deal with minor it was accepted and now it says sorted deal sealing so what this means is that that minor is taking our deal they've packed it into a sector and now they are stealing the sector which is the process of proving it so that the network can guarantee my data what that is in that sector is guaranteed to stick around overtime for the time that we agreed to so the minor now is like working computing that proof they'll post it to the chain once it's done and then at that point really at this point from this point onwards I can know that my data is pretty safe but once it actually once the sector is actually sealed the minor will be severely punished if they drop that data severely punished ISM they lose all the pledge of collateral all the deals for that sector so this is basically I have certainty that my data is there and I can walk away and be fine and eventually this will change to storage deal I don't think it says complete active-active yes or deal active so that just means the my dear data is being actively stored by this miner yeah so I use what else should we what else is interesting to go over we start files that's I'll coin channels oh yeah 50 tools yeah let's let's talk about multi six so people there are people who are not familiar multi-sig wallet is an account that requires multiple different people to approve transactions in order to send so you can have some number of people that are allowed as signers and then some number of required signers various different systems implement this different ways Bitcoin implements multi SIG's as a like a threshold signature they uh where are you with your message you include multiple different signature there's even trickier systems that use like BLS aggregate threshold signatures which just Inc require one signature for your whole setup or there's the more aetherium style where you have a contract where you send the signatures to the to the actor or smart contract in the theorem to propose and approve transactions so far Quinn's multi-sig operates similar to how a theory and multi SIG's work where you have your account you one person proposes a transaction that shows up on chain and then approvers can then send their approvals to the chain so for example you could have a multi sig that has three like three signers and say two are required so like if that's me I use and Trent then I could say I proposed this transaction and either I use for Trent could look at that and say alright I approve that once they approve it the transaction goes through and then you know the spend happens whatever it is that you want it to do happens so this allows you to do better custody of funds so we have this command that allows you to control those somewhat easily where we can you know create a multi-sig this has basically you can pass how many signers are required a default of 0 is really bad we should probably change that because that just won't work the value so this is how much is the initial funds that you're gonna give this multi-sig and then you can specify a center which is like what account of mine am i using to create this but that's not necessarily an account that will be a signer so let's grab some addresses from my wallet here and then we'll do Lotus and say get create required equals to and then we'll pass on these three addresses from my wallet and oh this is one of those fun commands that actually waits for the multi-sig to be created before returning so this is sent a message to the chain it's going to basically create this multi-sig it's gonna get the output of creating it and that's gonna tell me the address that was created instead of giving me the instead of getting me the transaction hash that was so so yes create an address on chain that requires a transaction signed by both dos private keys there yeah so this creates a multi-sig on chain that requires signatures from two out of these three addresses so any any two of these addresses can spend money from this account on their own so two in a van so yeah yeah it's ten of them yeah so it's 203 in this case where the three is implied by the number of addresses I put down did you could you have done - look - oh yeah you can do - of - you can do one of one one of ten yeah blockchain confirmations are exciting we did get some requests for payment channels so if you want to switch to that okay so just like everything in Lotus we have a nice command for interacting with whatever feature falcone we want so Lotus page for a payment channel allows you to get which gets or creates a payment channel - to a certain person from a certain person actually let me let me go back what is the payment channel what is the famous channel yeah so payment channel is a effectively a way for you to pay people in a way that they can trust that they were see the money without hitting chin so at a high level what you do is for example if I wanna pay I use a bunch of different times say you know we have a certain agreement where I'm gonna pay him you know money for every time he does a thing but I don't want to pay transaction fees for each of those thousand things so I'll lock up a hundred file coin - I use in a payment channel I used to can see on chain that that money is locked up so that only so I can only send it to him I can't double spend it to anybody else and then what I can do is I can create vouchers that are signed by me and sent to him that say I owe you one file point and then I can I could make another one that says I owe you to file coin or I owe a three file coin and I can just keep sitting in the new voucher every time I want to send him more funds and as long as he holds that he can cash it in on chain at any time but he doesn't have to you can wait until like he's certain that he's not gonna receive any more and then cash it out so that you know he doesn't waste transaction fees and space on shame by cashing this out every single time so this this allows you to do nice off chain payments with while you can still trust that you know the phones are gonna be there because you could just send somebody you could create a transaction sign it and send it to somebody and they'd be like oh good I couldn't spend this transaction I'm Shane but the problem in there is that it doesn't prevent me from sending that money to somebody else and so the whole the nice thing around a payment channel here is that you can guarantee that the money can't be double spent so the commands for it are pretty straightforward we have we have the payment channel debt which allows you to specify from address a to address an amount so let's just go ahead and create one of these real quick which if my accounts has money in it that one no it's this one and then we'll make it to this animal put or file coin in it when did that return empty I use I haven't used this command in like three weeks so maybe something's and we should investigate it okay so well Louis payment channel list lets you list the payment channels you have registered here so since I'm a minor this this is like my minor node these payment channels are going to be payment channels that are made to me likely let's see let us state get actor yeah so this is just a payment channel that's to me from somebody else and it has a little bit of file coin in it likely this is somebody who has stored data with my minor and is trying to retrieve it so when you retrieve data we pay you use payment channels to pay for dare retrieval so that you can pay somebody a little bit of money it can send you a little bit of file and you can go back and forth sending them a little bits of money in exchange for a little bits of file as a way to avoid the problem of like sending you all the money upfront and then not giving you the file or vice versa and so you payment channels to make a more fair retrieval market so all these channels are likely just people retrieving from my minor god we should have another command lets you just inspect we don't have an inspect payment channel command but yeah channels are the at least in the the COI the the more lesser used things so we haven't been paying as much attention to them so this is kind of good UI feedback that we're just walking through this and being a little oh no there's not that much to show here yeah the concept of payment channels make sense to people though because it is a little subtle but I feel like it for me personally even like when I first got it I was like with this really cool doesn't have any questions so so they are designed to use in any way a developer can think of it's not just to be used internally for retrieval view yeah good okay materials can be used for anything um there's actually a number of different things that we have set up so one of the cool things we have available the the payment channel has a lot of functionality built in so one example you can have create a hash lock payment channel where I can send you a voucher that you can cash in only if you know a secret and so with that functionality what you can do is I can send you money I can send you say a voucher for ten file coin that's locked on some secret and then you can send me for example a similar payment channel of etherium for say you know twenty ether that's locked on the same secret and you since you can make that you can since it's a a hash of a secret you're saying if you know the any of value that hashes to this you can spend this you can create that payment channel to me with the same secret and then if I want to spend the money that I got from you I have to reveal the secret on Shane which reveals it to you so we can have a trustless way to exchange tokens between any two networks so I could send you ten final coin locked like this you can send me a twenty ether lock like that and then we can reveal the secret in both cash out which is a really cool thing we also have the ability to have the payment channel when you try to cash it in call some other actor on chain to check something and the one notable use case we have for this right now is you can create a payment channel that is the voucher that is valid if a particular minors sector is proven and then from there you can say okay I usually I'm gonna give you ten file coin once the sect is proven and then I'm gonna give you everything you need to generate the snark for it to prove it so I'm basically I can pay I use to to compute a snark proof for me and submit it through the chain in a truss las' way that he knows he's gonna get paid if he does that work which i think is really cool it allows us to build like off chain markets for you know various mining operations and things and obviously like a whole number of other you know potential things that are there yeah we're at the five minute mark so we're probably good to just take last minute questions but also I have an update from Travis that I believe your deal has sealed Jeremy if you want a class of the intro person by the way that I keep it nice towards deal active so we can we can go over a little bit that's alright I'm not sure if we had an hour or an hour and a half set for this maybe I scheduled a little short but if people still questions are there additional features you guys like to go and continue that's totally fine if you have a hard stop that's also fine as well but I think it's important for people who aren't able to attend to view it afterwards is super helpful for them so carry on if you have to retrieve the file she says you have to retrieve the file you to retrieve the file yeah okay but otherwise it's not a complete test there's no problem all right so I'm gonna delete this file I just deleted the file it's sealed into a sector I should be able to trust a file coin you know has my data oh and the other thing when you import it when we do the client import it imports it into your local block store just like an IPS ad so I think we look here we can see that the file is if I'll still here so we have to do oh did that command not landing us not in Norco not yet you can just retrieve it from a different note though if you have like you can retrieve it from the one that you have thinking do I still have a node sinking no I killed that oh well let me show you what it would look like it's gonna pull it locally and it's not gonna be actually impressive we might have commented at the local people oh wow so we did comment out the local retrievals I didn't commented yeah all right so let's let's uh so now what's happening is it's contacting the other minor um the other minor is going to have to unseal the data I believe so when packing right now the way that the replication works is that the time to seal the sector and the time to unseal are about the same future proofs of replication will not have this trait but this was the most secure part we could come up with in the time we have other constructions that are better than this but this is you know provably secure where the others are questionably secure and we don't want to have to delay maenette anymore but to wait on a new proof that may or may not be right yet so right now unsealing a sector takes as long as sealing a sector so we're waiting for the sector to be unsealed that's gonna be a long time yeah so these are 512 megs sectors and I think okay Travis was saying yeah sure I think I think Travis was saying it was about 8 minutes right now but in a newer in the latest Lotus code we have miners by default we'll just keep an extra unsealed copy around if you ask them to so you can tell a matter hey I'm gonna pay you a little bit extra please keep a copy of this file unsealed or at least you know keep it readily available so that you can retrieve it to me so if your if you want to go to retrieve your files quickly you can pay a little bit extra so that they can keep an extra copy if not you have to wait you know glacier style for the data to be taken out of the archives which is the default in this particular version is my perception of this correct that there's not yet kind of like a market around retrievals like there's no way to browse like retrieval prices in choose who you want to retreat from it's just kind of happening black box right now all right yeah right now it's happening kind of black box there's not a good market for it yet so this is the yeah the retrieval client that's built into Lotus is the worst possible retrieval client uh-huh it basically only you either have to tell it exactly what mine are to retrieve from or it just retrieves from oh well that that's angry Phil look seeds yeah failure to one that we have an open issue for yeah anyways as I was saying Hilo does the retrieval client built into Lotus is the worst possible one as evidenced by this area here the the protocol itself is very very flexible and just supports paying arbitrary people for arbitrary data it's really really just a protocol for paying people for giving you data and so with that there's a lot of more interesting things that can be built we can build like you know aggregator services that track like you know bittorrent tracker type setups where people keep track of who has what data and how much the pricing information is you can have clients broadcasting data they're looking for and have people compete to offer that climate low price and you know any number of these things can be built it's just not in the Lotus client at this point so better retrieval clients are in progress by various different groups in the community too so yeah the fullest implementation is not a good showing yeah I think the general philosophy of things are designed to be actively you know built improved on and innovated upon applies to large chunks of file coin this is a particularly good example of it and we're really hoping that a lot of that kind of X like layer one type improvements will happen potentially from folks on this call or participating in hi professor well anybody else have any more questions I'm just kind of open the floor for anybody who's curious to just ask away anything you're curious about just let me know you look so quiet that means you covered all their questions we have answered every possible question oh yeah yeah now there's definitely ask questions here I think you also have black channels and other venues I'm sure once you're up and running with Lotus you'll run into all kinds of problems or just things you're not certain about definitely bring them to us because we want to get those questions answered those improvements made just improve the overall experience definitely there's any anything you run into any troubles feel free to just ping us and slack the fill Lotus channel or you know fill help we watch a lot of the different channels so and feel free to also take us in discussions if you want our input we had a question from someone named Joanne Bennett in the chat axis I think many applications people are making will be best built with famous channels how can we get demos of all the different ways of using them good question we can we can put together some you know different use cases and examples and maybe build like a a showcase sort of idea one did you want to say anything about this yeah I think it would be pretty it's very important to to show I mean you started demoing it but then you stopped halfway through it I think it's pretty important to give people a view into how those actually work because most of the I think most applications people are writing are gonna require them or at least a lot of it well yeah I think I'm putting together a little tutorial like text tutorial and adding a bit more UX support around this will be helpful I think people are gonna need them like this week so can we get any key and when we could go back yeah well work on that like to learn more about how payment channels are written to the main chain Doc's yes yeah so we'll work on some Doc's hopefully today or tomorrow obviously is time allows but yeah yeah okay so there's also payment channel excitement great I usually ever work cut out for us yeah sounds good no definitely carry them glad to see glad to see the response and as Jeremy I already said they've kind of gone under used or under interacted with so far yeah awesome if there are no final questions comments clarifications we can probably wrap up there and it seems like we're good thanks so much both of you for demoing all this very useful resource thanks for attending everyone have fun stay safe these are crazy times feel free to ask questions yeah and we'll see everybody in the slack be sure to bring your questions or clarifications there happy hacking week too 