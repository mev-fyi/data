started it give me a second looks like Twitter is good we're streaming on Twitter we are streaming on you go cool all right welcome everybody to what feels like the third or fourth event this week even though it's Tuesday we're happy to have you well this is part of the workshop series for hack FS which is the file coin and eath global we're sorry protocol labs in eath global hackathon we're glad to have you here let's see if there's any housekeeping how to get to get out of the way before we start this Thursday at midnight EST or eastern is the staking deadline so if you haven't staked already please make sure to do that that's how we make sure people are gonna be engaged throughout the entire event and you know are gonna submit something at at the end so it's a small thing but just make sure you get on that ahead of time so you just get it out of the way and you can start hacking we've got a bunch more events starting Wednesday and then more into Thursday and Friday so keep track of the schedule in the PAC efest schedule Channel hopefully you've seen it used it it's useful Channel and today we have a the second textile workshop with Carson farmer leading this time and Andrew Hill they're both from textile they're going to be diving a little bit deeper into what textile is and how you can use it in your hack so we're super excited that they're back again I think the first session was really helpful for a lot of people and just to note if anybody is in the chat and or they've missed previous sessions they're all recorded and we put them right on the ether over YouTube directly or so have no fear if you've missed other ones just check their and they should be ready to go just after each event let's see before we start we're gonna loosen it up a little bit and play a quick game it's not a very hard game it requires some participation and your camera so let's see you reach around your desk you don't have to get up for this game and pick up a writing utensil let's see I'm I'm team highlighter oh wait there we go wasn't gonna show up on the green screen team highlighter where you at we've got some pens okay I should have a construction pencil I think that counts as a highlighter though it's pretty yellow yeah my teeth both are yeah unfortunately it looks like depends are gonna take this one Josefa josh is that a mechanical pencil or a pen that's a it's a pen good question all right looks like depends win I can't win them all I was actually yeah I didn't really have your writing utensil on my desk this was actually you know tool bill are you are you building something building something are we all building something that's true we ran it we ran a hackathon all right enough enough with the games I'll let you guys start talking and educating us take it away okay cool I'm just gonna share my screen over here and [Music] cool alright thanks to everybody for joining I've got a little bit of time here about an hour I think today to talk a little bit about getting started with textile we're gonna cover a little bit about what is textile and but mostly I'm gonna be talking about a couple of different textile technologies that you can use in your hacks to blow everybody's mind and win this thing so I'm Carson I'm from the textile team and for those of you who don't know much about textile yet we are a company focused on building developer tools on top of decentralized web technologies specifically ipfs file coin and lid p2p and a lot of those other fancy schmancy terms for the D Web technologies and so our team focuses a lot on trying to build tools that feel like existing web development workflows for developers coming from the web to or more traditional web development background into a web 3 space and so hopefully today you'll see some of that technology in action so today we're gonna learn a little bit about building some JavaScript apps that use textiles kind of three three of the four flagship tools that textile supports the hub threads and buckets which I'll talk a little bit about over the next couple slides and we'll use those to push data to ipfs and beyond we're also going to walk through a series of setup options to actually get you going and using some of the textile infrastructure and then we're gonna use some examples in a repo that we already have online so that you can kind of copypasta bits and pieces and components into your hacks to kind of bootstrap what you're working on so we'll show you how to get started a little bit with some basic identities and you can mix and match your own user identities in there if you'd like and we'll just start building you know potentially real apps for the decentralized web and so let's jump into that there we go that's me and that's what we're doing so when I say relapse I'm talking about hopefully engaging apps with real users that are dealing with real user data and by the way while I'm going along here if you do have any questions feel free to ask along the way I'm going to ignore you but we have Andrew and Aaron on the call here who should be able to answer your questions as we go in the chat and on slack as well so please you know feel free to interrupt me as we go along and Andrew if there's any big question you want me to answer in person ping me in the community channel and we can I can address it live ok so let's start with a pretty you know common set of requirements for some kind of a like web or even a mobile app so like say you're you're creating a document signing service like something like DocuSign where your users might be uploading documents they want to share links to those documents they want to have you know folks interact with those documents or even just a simple photo sharing app which we're gonna touch on a little bit later today or at least a photo viewing app or you know any number of sort of like standard web to experiences where you've got a user that wants to do things and potentially interact with other users so you know one thing is you're gonna need users I can't help you with that although I might be able to help we might be able to help you make it easier to onboard those you're gonna need some storage and some level of persistence for your users data and you're probably gonna want some form of authentication so you can actually you know ensure a nice smooth user experience you know just get you know spammy things and all that you'll you'll also want some things that we've kind of come to expect out of web 2 and web 3 technologies which are things like standard encryption tooling and best practices there you'll want a way to scale without having to have your users install some thing and download it on their desktop you probably don't want your dev team to have to learn a whole new language just to kind of get started and you probably don't want your users to have to learn a whole new language just to get started as well so you know there's a lot of things we'd want as developers and a lot of this stuff exists already to some degree but now we want all this stuff to run on the decentralized web or the IP FS network we want all the nice content addressable features we want p2p networking we want all those goodies and we want it to be easy to use so things are starting to get a little bit more technical from or complicated from a technology point of view but we'll add another constraint which is that we want the users to have control of their own data as well and our team has talked about this a bit in the past but the sort of long and the short is you know if we're going to be changing the way people interact with data on the web we might as well do it the right way and and make sure that users have sort of interoperable data that they can actually own and bring to the apps that they engage with and so here's you know we want all these nice things we want an encryption we want it to be familiar we want users to have control and I've talked about this in a previous event if Denver where these jazzy hands are sort of suggesting we should put the control back into the hands of the user so there's I'm not going to show this or anything but there's a link in the slides to some of our thinking around how that might look but okay back to the task at hand we've got this impossible set of constraints that we want to build apps on the D web that's where text out comes in you can kind of think of text islands in the set of technologies that I'm going to talk about here today as something like a firebase for the D web or an iCloud sort of framework for the D web now I'm not going to talk much about power gate here today because Andrews already covered that really well in some previous sessions so definitely check out those videos if you want I'll allude to what you can do there in a little bit and Andrews going to give us a little demo at the end hopefully that is going to touch on some of those concepts but what we are going to talk about here today is thread DB buckets and the hub okay and these are some of the core style technologies that I'm gonna dig into here so let's start start there so thread DB that's what we have is a it's a p2p database peer-to-peer database we call it thread DB and it's been designed and built pretty much from the ground up to leverage some of the best features of flip p2p and ipfs for creating and storing and syncing dynamic data focus on dynamic data across a network of potentially trustless appears and so I'm not gonna spend ton of time talking about you know the nitty gritty details of thread DB because we're gonna actually leverage it a little bit sort of under the hood and some of the examples and things we'll talk about later but if you really want you can read our white paper we wrote a white paper so you know it's you know good science and you know because everybody likes reading academic research papers but you can also check out our Doc's online to find a little bit more about what's going on under the hood they're essentially what we're talking about is a peer-to-peer decentralized document store with a familiar MongoDB like API it's got offline first storage and remote peer sinking so you can sync your peers across the network it has user and developer authentication and cloud support so you can actually run a thread DB daemon or peer in the cloud with which we'll talk about a little bit later it supports encryption and con custom conflict resolution out of the box so you know data and files are encrypted by default and one of the things we'll mention later today is it has a flexible idea of a user identity so that if you are coming in building an app and you've already got you know your users using three box profiles or you're using meta masks or whatever that's cool threads can support that and yeah check out the way paper if you like that kind of thing and get past it if you don't but the long and the short of it is it's a protocol so threads is a protocol for synchronizing database updates among the network of these peers potentially trustless peers and thread DB is a document style database built on top of the threads protocol so we've got threads the protocol and threads the database and the cool thing about this is it gives us some pretty slick database superpowers in terms of things like being able to defer conflict resolution until such a time is that the data is actually accessed by a user plus a whole slew of other pretty pluggable and powerful features so if that sounds interesting to you read the white paper check out the docs and we'll mention a little bit more about it later all right so thread DB is really great for managing things like documents and you know even structuring potentially so someone mentioned in the slack channel today how you might you know index and query files and data on ipfs well thread DB is one way that you might do that where you can sync actual mutable it's essentially a mutable database that takes advantage of the immutability of the underlying IP ifs and IP FS and and uses Lib p2p to actually communicate those updates among peers so for things like JSON documents you know structured data all that sort of thing user data it's perfect for that but one thing we learned along the way is a lot of time when you're dealing with very large data sets or you're dealing with you know whole folders of files and things like that you don't necessarily want to stick those things into a database it's things start to blow up pretty quick often what you want to do is you want to reference files within your database you want to reference that binary data within your database but store those files elsewhere and in the case of a decentralized web system you want to store those files on ipfs so while thread DB is great for JSON like documents and that sort of thing for large data images etc you kind of want to take advantage of some of the core features of ipfs things like data deduplication chunking IPL DD eggs or like highly nested folder structures but you might also want things like persistent identifiers so that if you modify that folder in any way it's still the same reference in your database you might want date you know dynamic data management you might want to build collaboration tools and that's where buckets comes into play so basically with buckets for talking about dynamic folders built on top of thread DB an IP FS so this is really useful for things like you know collaborative multi-user folder syncing so you could have like team projects that you sync in a folder you could build a Dropbox like app s3 style api's all sorts of really cool things and in fact buckets has kind of moved beyond just a protocol that we use for these types of things to a whole sort of application that you can run locally and we'll talk a little bit about that as well but essentially buckets are a cross protocol format built on IP LD and thread DB with some pretty nice design constraints or features that we kind of focused on buckets are already being used by teams like fleek which who by the way you should totally check out for your hacks by the way in fact they have a bounty for the best app that uses their space daemon and that you know could actually be used as a buckets team a buckets gateway for actually rendering and interacting with buckets data so that's really cool I encourage you to check that out I encourage you to check out all the projects but I think in particularly doing some really cool stuff but you know if you've used a cloud storage kind of provided before you'll find buckets pretty easy to understand except unlike a cloud storage service buckets are built on you know ipfs live p2p in textile so you can serve websites data and apps right from buckets but here's something I think is super cool and for anybody who's like even remotely familiar with ipfs this is pretty magic I think so buckets are actually a folder on an IP FS similar to like how you might add a immutable folder on ipfs except so buckets are simultaneously an actual thread DB document instance so you can actually query the folder as if it was like an entry in a database an HTTP available domain so you can actually like host and render websites on a pocket and an actual working IP NS address on the ipfs network so the the bucket ID is itself an actual IP NS address so this is pretty cool because it means that every time you update a bucket in the background textile buckets is actually automatically updating the IP NS address so that you get this dynamic data on ipfs dynamic folders and so you can imagine things like you can start to you know render up folders of images that are updated as your you know or blog posts or like however you want to start to think about data so this is a pretty powerful thing but sometimes things don't work sometimes things break so another really cool feature of buckets is and a huge parts of part of the textile philosophy around peer-to-peer systems is there needs to be multiple paths to access any particular resource because your phone's gonna go in your pocket your laptop's gonna be closed you know things happen so with threads we have multiple ways to access thread data or thread DB data we have pub/sub we have direct peer-to-peer sharing we have G RPC web-enabled push and pull' api's we have raw ipfs all that stuff is available in ipfs so if you've got an IP fest daemon you can access that stuff with buckets you have all that stuff plus you have IP NS you have custom and vanilla ipfs gateways and you have all these slew of different ways that you can access you and your users can access their data so the whole idea here is basically users should be able to find you and their data no matter what and at the end of the day like I said if they've got ipfs then they can you know get it at the sort of fairly low level as well so what we have is dynamic data and storage on ipfs at our fingertips we go to a database we got large data store and then we have the hub to wrap this all up in a nice pretty with a nice pretty bow so the textile team we're pretty much all developers we have some of our best friends or developers and our philosophy is that as we if we want to see this shift over to the D Web happen it's not gonna happen until developers start building better experiences more interesting experiences and new experiences on web 3 tech and the way we get there is we build tools and then people build tools on top on top of those tools another build people built up tools on top of that and so on and so forth until we all win and so that's pretty much what the hub is about it's so trying to make it as easy as possible for developers to start exploring web 3 tech without having to fully commit to running you know file KO'ing nodes and my PFS peers and you know all these different things you can defer some of that technical stuff to the hub you can start exploring that stuff and then as your project matures you can shift on to the hub you can shift off to the hub you can move to a more production ready or developer framework whatever you want and then the hub is designed to be there for you at all those different stages so it's essentially cloud tooling for developers that are designed around user controlled data so that's part of our sort of underlying philosophy with trustless data management a bunch of new models for decentralized data access and at the most basic level we're talking about remote IP FS and thread DB peers that developers can use to test out build stuff manage teams deploy their apps and then you know potentially even connect up with the file point network so it's a nice way for developers to dip their toes in without having to commit fully and then right now all these things are free for developers with some reasonable limits and hopefully you saw the announcements that Andrew mentioned about hosted power gate instances for teams that are hacking as well so if any of that stuff sounds like I'll just use the hub great you know we will talk about that today and if any of that sounds like goo I'd really like a custom version of something around that then you know get in touch as well we may say no way that sounds like a lot of work but we might also say hey awesome let's do that so get in touch anyway the long and the short is we want you to build stuff and the hub's is gonna make that a little bit easier so let's just do some of that I'd like to today basically start to on board some folks to the hub and threads and a few other things so that after today you know if you have any questions or you want to figure out how to how do I do this with thread DB or how do I push this kind of data to a bucket or what can I use a bucket for at least we'll have all the groundwork to say okay do you have an app that's got you know the bucket client working great cool let's dig in and figure out API keys and that sort of thing so my goal here today is kind of open your eyes to some of the tools that textile provides point you to as much documentation as I possibly can and I got to say Andrew who's on the call here has done an amazing job with our doc updates lately so dig in it's it's it's pretty nice and in fact we're pretty much gonna just go through some of the documentation that we've put up there but that's my goal here today is basically get you on boarded to you know at the at the minimum and then point you in all the right directions and I think that if we do that that'll be a success so on that front I'm gonna kind of treat the rest of the session as a tutorial walkthrough kind of thing just to keep us on time and avoid getting bogged down what's like you know NPM issues or you know do you have the right node version and all that stuff but I do encourage you to follow along at least with the first part because I want to make sure everybody's got like their accounts and command-line tools working and then you know as with all these sessions all of these materials are already and they will be available after the session so you can tinker around at your own pace but today if you stick it out with me you're gonna learn how to generate some API credentials that you can share with your web apps so that your app can actually leverage the hub directly and the reason we want to do that is this is kind of a neat feature of the hub it's it's solving a problem that you know we potentially didn't really need it wasn't a problem until we started to focus on peer-to-peer and decentralized you know compute and tooling but basically what we're gonna do is we're gonna generate some hub credentials and with those hub credentials your users will actually be able to access things like thread Phoebe and some of the thread services like buckets they'll be able to create buckets push push to buckets pull from buckets etc and use ipfs persistence and all those nice things right from the browser which is great okay that's pretty neat but the really cool thing is they'll actually you will be able to build your apps so that your users will take advantage of your you the developers resources so your API access while still maintaining their ownership over the data that they create so it's basically like you the developer are gonna carve out some space for your users on the hub without you or anyone that they don't want being able to look over their shoulder and this is pretty powerful kind of concept because what we get out of that is we get the ability for different developers to create data on behalf of users and users potentially have that data transferable or interoperable among different apps or at least that's the idea you know and what would be really cool is if we get multiple teams doing this and then potentially explore the idea of actually you know cross data out of collaboration but we'll see anyway this this you know you know can kind of help to answer the question of like who's responsible for your app data it's you the developer but only insofar as your users actually want to trust you and I think that's a pretty neat idea okay so that's what we're just we're gonna cover today what we are actually doing today is we're going to be following some of the docs that we already have online on our Doc's site that way you can follow along afterwards so if the top link here the tiny URL that is a just a github gist with a bunch of the actual command command line things that we're going to cover today so I highly recommend you grab that URL and go there and get ready took copypasta some stuff but what that really is going through is that is that is that tutorial there so Doc's text although IO / tutorial slash slash web app so that's we're gonna go through today or at least we're gonna get to the point we're going to do that and we're also going to play around and this is in the gist as well with this examples repo and I'm mentioning this bucket photo gallery example specifically but there are multiple examples in that jeaious examples repo that you can pick apart and play with as you're exploring textile as part of your hack and then so that's we're gonna do two here today and then tomorrow during the our office hours which I will have to confirm the time towards the end of our session today but during the office hours I'm going to actually also depending on how many questions there are we'll address the questions first but if there's a lull I'll actually go from building from like an empty folder to a working thread spaced gap our app if anybody's interested in I'll do that live so that you know you will actually see kind of the nitty-gritty of how that might work and we'll just do that as I create react app quick one and I think that'll be kind of fun as well so stay tuned for that if you're interested okay so with that let's follow along with the gist and I want to get everybody on board it a little bit here so I've got the gist open here and hopefully everybody can still see that I think I'm sharing this whole screen so I'm gonna move that over to the side so this that's the URL that we had in the slides there and hopefully everybody is able to find that and probably someone can share it in the chat it's not okay so here's some you know some description of what what's going on here but I want to jump us down to getting started with the hub so like I mentioned before the hub is basically cloud infrastructure for getting started with threads and buckets and various textile infrastructure we have a command line tool that allows you to kind of explore just about all of the api's that are available in our JavaScript clients from the command line and I encourage you once we get this downloaded and going to explore some of that because what I find is super handy is if you want to test out like you know something that you're gonna do in your app you want users to push a photo to a bucket or something like that you can test that on the command line using your own account first as a really nice kind of way to say oh okay here's the you know here's the call these are the different flags that I might want to use in order to turn on encryption or turn it off and mate you know what are those things what translates over to the API clients and I'll point you to all the documentation for the clients as well but the other reason we need the the hub command line tool is because we need to create a developer account for everybody on the hub we can't really use hub infrastructure if we don't know who you are you can't allocate that space for your users if we don't know who to allocate that space with so let's get the CLI tool right here and so you can grab the latest releases from our release page so if you go to releases you'll probably see something kind of like this so here's the tech the main textile github and their new links for the releases around right there so you can go and grab the latest release for your platform and we just released a version about five days ago so it's pretty hot off the press presses and just grab though the hub not buck that was for a different session the hub tool for your platform so I'm on Mac OS so that would be the star one one but you might get on Linux Windows where we just enable it we just added the Windows builds back so that's pretty exciting okay so you're gonna want to grab that and download the gzip or the tar gzip or whatever zip file if you're on Windows unarchive it and then go you know change into that directory so if you're on Mac here's a step here's a couple of steps you might want to follow if you're on Windows you know open up the zip file and put that executable somewhere that is handy for calling tools from your terminal we do actually have an install script in there so if you're on a Knicks like system you should be able to use that don't worry about it if that doesn't work if you don't have permissions or something like that it's a self-contained executable so you could stick that that hub binary pretty much anywhere and as long as you can call that how binary then you can you have all the tooling that you need so yeah hopefully that's good and someone can ping me if that's not working but I'll give everybody a couple seconds to download that and get it installed put it somewhere that's handy now if you're on Mac your operating system is trying to protect you from textile we just haven't signed our binary releases yet so you may end up getting an a warning that looks something like this hope cannot be open because the developer cannot be verified so the way to check that is download the hub command line tool and install it put it wherever you want and then if you just run hub help chances are you'll get this popup on Mac OS the first time you do it so go ahead and click cancel don't move it to the trash obviously that wouldn't be great although you can always just extract it and install it again but click cancel and then just go up to your little Apple guy System Preferences security and privacy and you should see a little thing towards the bottom of that dialog that allows you to click allow anyway trust me it's fine don't worry about it we wouldn't do anything untoward we just haven't signed our releases which we'll do in the near future but you can click allow anyway and then if you run hub you know - - help again you might see another warning but this time you should be able to click open and and it should run so hopefully that's the case for everybody and then you can start to play around with the command line tools so you know if you open up a terminal here and you type - - help you should get some output that looks something like this and yeah there's a bunch of tools in here that we can use and we're gonna go through a couple of them now and then I encourage you to kind of play around and explore some other ones as you go I always like to try all of the different commands on a new tool I find just in case I can break something or do something fun so I encourage that but I will wait a second and I've been blabbering on for a while so hopefully everybody has got that downloaded so now to actually use the hub you know we're gonna actually initialize an account and and create an account so the hub is where you know there's a there's a whole blurb here you can read it about what the hub is for but basically what you're gonna need to do is you're going to need to create an account on the hub and you can actually create teams and collaborate with team members via the hub as well so you can have team based buckets and you can manage threads and things as a team and we recommend you know that if you're you know just starting off as a developer you might as well use your own account and create keys and blah blah blah but once you maybe are actually form formalized your hacking team and you want to think about deploying assets to buckets or you want to use buckets in your own app or you want to generate keys for you know a production app that you might do that as a team and so there are various tools to help you manage keys and orgs I've been saying teams but orgs and organizations similar to the concept of like orgs on github versus users on github so there you go anyway we're gonna create an account and you can do that using the hub init command which I've got over here you're going to choose a very clever user name and you're gonna enter your email and then what you're gonna get is the the tool is gonna sit there and wait for a little bit and you're gonna get an email and there'll be a link in it that you can click to authorize now I've already initialized an account but I can I can log back in so I'll do that and you'll see you should see something similar to this if you're going hub in it for the right now and then you'll get an email and I've got an email right in front of me but I did not gonna show you my inbox and I will click a link in that email and you should get this beautiful starry eyed smiley face and then you should see that your email has been confirmed and you're now logged in and so hopefully something like that happens for you as well I can't believe that just worked live it was almost guaranteed not to work email came through so that's great so you can go ahead and do as the little smiley faces and close that and you're logged in and like I said you can log in again any time you need to and you can always check to see who you are to see if you've got a valid hub session going by typing Who am I and so if you you know forget what's going on or you aren't sure if you're still logged in or something like that you can always check that so there you go alright so that's pretty cool you basically now have a developer account on textiles hub and now you can start to do a bunch of cool things like create developer tokens and developer keys that you can use in your apps to actually interact with the hub so to allow your users to interact with the hub and so we're gonna jump into that today but there's a bunch of other tools that Andrews gonna mention a few of them in his demo later that uses some hub tooling as well but anyway we're gonna jump straight down to creating some keys now for development we have kind of you vet to effectively have four different ways that you can interact with the hub using developer keys we have two different main types of keys which are account keys and user group keys you can see over here and the gist that I mentioned them and there's a little blurb about that you can also our docks online where it's pretty extensively covered what these keys are used for so take a look at that documentation the keys are pretty similar to standard web to developer key tokens where you've got like a public component and a private component you don't want to share the private component with your app a pretty standard stuff there but there are a few interesting quirks that you need to consider when you're building as quasi trustless apps for you know decentralized web because effectively what you're doing is you're using the hub resources or your users are using your hub resources on your own beat your behalf so you need some way to say like yeah it's okay that this particular user is going to use my hub credentials and that's what the this the user group keys are for so like many keys is a public speaker component you never want to share the secret component and what you can do for to simplify things when you're developing is you can create an insecure key and basically this insecure key only has a public component there's no secret component and so you can create one of these keys as a developer you can actually embed that key in your app as you're developing it you can share it with your team makes it a lot easier to essentially take advantage of hub infrastructure without having to have an authentication flow all hooked up and ready to go and then when you're ready you can switch over to a production a production flow where you actually have a full authentication flow in the docs online actually there's a whole entry on ok now you're ready to upgrade to production how do you do that so I highly recommend especially for the hackers in the crowd that you start by creating some insecure keys and then obviously don't just like post that stuff on the internet because it means that people can use your hub credentials without authenticating but it'll be great for collaborating as teams so that's what we've enabled this just recently and I think it's going to be a really great way to bootstrap your apps so with that in mind let's generate some let's see how easy it is to generate some so I'm just gonna call hub keys and if you do that and you say is you know hub keys help or just hub keys oops it tells you what you can do here you can list some and I've already created some or you can create new ones [Music] create and then it will ask you a couple questions first question is going to ask you is do you want to create an account key or a user group key an account key provides access to your developer account so you do not want to use that in an app right you don't want your users to have access to your developer account so you're gonna want to use a user group key and we call them user group keys because they're effectively like keys for a group of users using your app and then you get this question do you want to require signature ization in a production app you would say yes and then you'd have to use the auth flow to essentially authenticate a user before allowing them to use your hub credentials but for development and that sort of thing if you hit no which is not the default and hit enter then we sort of say not you don't need to reject that and or we don't need to require that and you get this little printout okay so now we have [Music] it's gonna generate a secret anyway but it's just not gonna worry about it when you actually access the api's so we've got this new I got the super cool key that starts with DC jam that worked out great and we can use that in our in our apps okay so we got that that's great so the next thing you want to do is we've got an account on the hub we've got our token that we need access might as well start building an app so what we're gonna do is you know normally you'd want to create a new you know react app or view j/s or whatever you know your favorite framework is and we recommend using typescript because who doesn't want type safety but also you know what textile we released everything with full typescript types so if any API is change or anything like that you're gonna catch that before anything happens and it's you know like a lot of web 3 projects it's fast moving so it's not a bad idea to keep an eye out for API changes we try very hard to be semver compliant but you know things sneak in we get you know we're all Cowboys around here so sometimes it's good to have those types anyway so you know you can bootstrap an app from nothing and that's what I'll touch on a little bit tomorrow during our office hours but for today we're just going to get clone an existing app ok so I am perfect I'm just going to ZD I think I have a demos folder yep and so I am going to I want to do this with you live so I'm going to just get rid of my existing J's demos folder oops [Music] right so let's go ahead and clone that in a CD into jeaious examples and today I want us to play around with this bucket photo gallery app so go ahead and CD into there as well and this is an odious app it was bootstrap using create react app Andrew did it so all of the mistakes in there are his fault and you can just npm install that right now and as we download all the money off of your computer just sit back and watch just kidding it's just installing the web app so you can deploy that and we'll be good to go no more jokes it's to matrix okay so while that's downloading and installing all of those NPM modules that we need we can kind of focus on the anatomy of the apps that we're going to play around so there's a key a few key points that I want to cover and I'm going to do it live during the session and I'll just open up a text editor and we can play around with it but the two main things you need for any textile app are your hub credentials which we've kind of already covered and yours an identity for your users so that they can take advantage of those hub credentials so we already talked about the hub credentials a little bit but I'm gonna briefly outline how they're used in the app in a second here and apologies have you in here a tiny dog barking in the background his name is Lucas and that's all you need to do ok so I'm going to open up Kooyong Co diem which by the way is a fun open-source version of vs code which I can highly recommend anyway here it is so it'll look very familiar to you but it's actually the the open source release of yes code so if you can see this hopefully that's big enough for everybody we've just got a pretty bog standard react app here ok so you've got your everything's was bootstrap using create react app with the typescript flag on it and the main thing in here you want to look at is the app TSX file here and Andrew has set it up so that essentially everything is kind of in here and linear it may not be the way that you would design an app but it's a great pedagogical tool so that's how we're going to kind of look through it here's almost everything all the logic is actually in the app TSX file and so you can play around with that and take a look and we've got a couple of nice you know UI things in here but the main libraries that you're gonna use for any textile app and the way that you're gonna want to access things is using the @ textile / hub library and tomorrow I'll have a little script like that it's like a bootstrapping script essentially for starting from scratch with a create react app but these are the two textile libraries that you're probably going to end up importing in any textile threads buckets based project so textile hub and textile threads core and then the rest are just fun things to make it a little bit more easy to interact with the UI and render things but the two things I wanted to point you point you out first things first when we're developing and we've used the insecure app keys you can actually just embed that directly in your app so let's just do that it'll save us a bunch of hassle later especially when we're interacting with team members and your get checking things and out in and out it's totally safe to share this you can revoke this key later and it makes it easier for your teams to just kind of you know NPM run start an app so this is there's one in here already but what I'm gonna do is I'm gonna go back to my command line and you know what I totally flooded my screen so I'll just list it again keys list and I'm gonna use my bc jam key here so i'm just gonna copy that and paste it in here alright now i'm good to go that's pretty much all i needs to do to get my hub credentials working in my web app in fact you can already fire this app up I'm just going to use the terminal that's embedded in my text editor here npm run start let's load this up it's going live let's see let's see if it works oh it's still starting to development server building things is the first time running there we go boom okay so that already works and it's using your developer credentials on the hub already andrew has already got this beautiful app arguably all bootstrapped up and ready to go and there a fun there's a couple of fun things here but I want to point out some kind of critical underlying pieces so that's the first thing you go to specify your key alright and that's specified in what we call a key info object here's the type information for is the key in the secret the secret is optional because we're using insecure keys okay and this key info if I copy gets used in a bunch of places including when we initialize our our buckets clients and actually that's pretty much it okay now I'll touch on that in a second the next thing that I mentioned we need if we go back to here we need our hub credentials okay check and then the next thing we need is our user's identity we need some way to represent our users in our app so that we can effectively allocate resources to those users on the hub so oh this should be like a little heading but anyway so you're you need some some concept of what a user is if you remember from before depending on how we set up our hub credentials you can essentially allocate resources on behalf of your you and the users the concept of uses is pretty generic it's just something that can sign things basically so you know this is the this is the flow that needs to happen in order to actually authenticate a user your user is gonna attempt to sign in using their public key your app is gonna create a challenge for them to authenticate with the user will then sign that challenge with the private key to generate the credentials and then the app uses those credentials to move on so it's a sort of standard call and response Chan challenge based authentication scheme of course all of this gets abstracted away from you as the developer so that you don't have to deal with all that stuff but it's useful to know what's happening so in our app here we're just going to develop generate a random user identity nothing fancy but in our documentation which I encourage you to go read there's a mention of you could do this with meta masks you could do this with a three box identity you can do other things and we're gonna be rolling out of examples with other identity providers as they come along or as we can you know as fast as we can develop them so you know if you don't want to create random ones you've your users already have identities you can take advantage of those and you can use those all right but let's just for the purposes of this demo we're gonna jump in and we're going to look for this function called get identity okay so we're gonna create a new identity when the app loads and we're gonna call this function called get identity and it's pretty straightforward it's pretty simple and Andrew in this example is also baked in some local storage caching so that your users don't have to you know create a new random identity every time but here I'll just pull this down so this is what we're gonna do we're gonna create a random identity based on the Lib p2p j/s crypto library it's just a sort of fairly generic implementation of a public private key infrastructure pk I set up all right so first we're gonna try to pull the identity from local storage and if we find it we'll just generate one from the string and we're good to go you know whether or not this is how you want to cash keep user identities or not is totally up to you but this is one way you could do it if they don't have one already we'll just create a random one we'll convert it to a string we'll add it to local storage and then we'll just return that identity so this is just a random private key basically now you can imagine the same thing if they've already got meta masks installed and you use the web 3 extension you know then you can get them you can use the sine function there to do any signing that you have to do it's sometimes a pain in the butt if like your app is going to be like generating tons of data to have to sign every piece but if it's something really secure important that you want the user to be aware of every time then great otherwise you may want to use an identity provider which essentially you could use to sign the key like sign one key at the start of the session and then use that key multiple times and then that identity provider could revoke permission to use that key later if they wanted to there's lots of different ways anyway that's basically what we needed we needed our hub authentication and we need an identity for our user and now we're pretty much good to go in terms of interacting with hub infrastructure and api's and I'm on I'm almost out of time and I do want to leave some time for Andrew to give a mind-bending demo so just one last thing that I wanted to highlight is once we've got the identity and we've got those hub authentication keys then in order to create a bucket client so a client that allows us to interact with the buckets API for example here is what we have to do so this this ketta key info that's our key info that we specified with our developer key and you just call this static method bucket start with key info and blammo you have a bucket client that is ready to interact with the AP is then what you want to do is you want to associate this bucket client session with a particular user so you call buckets get token and you pass in that user identity blammo now you're good to go all of your bucket interactions with the hub are now scoped to that user and this get token actually does that it abstracts a way that that signing challenge handshake but if you're you know for the paranoid in the crowd you could put it you could alternatively use are you can I don't want to type it out because I'll probably get the API call wrong but check out the docs you can also call get token challenge and it will use a callback based framework so that you don't you don't have to feel like you're passing your users keys you know off to some API which you're not but at least with the callback you can physically see that you're not as well and a good example of why you might want to do that is the meta mask based key signing where you would just call out to the web 3 provider in your callback to do the signing step so multiple ways to do that mostly abstract it away to make it easy just to use your key info get a token for your users and then blast away on the api's and in this case we're just initializing a new bucket and then we're off to the races so I encourage you to download that get it started I want to just show you really quickly that we have this react app going is created a random identity for me and it even created a cool pretend little icon for me here and now let's see I'm gonna see if I can find a nice file that I can share with everybody ok here is a here is my background this background image that I have which is a background image of a office space drag and drop that on to the app here and let go and it was a fairly large image but there you go so what happened in the background is the hub was used to upload this photo to a bucket it was added to this gallery here that scoped fully to me the user and it's created this brand new bucket in the background there's a couple really cool things I want to highlight here one this is also an IP NS address if I click on IP NS and I look at this URL there's the bucket ID right there dot IP NS hub textile we have a we have a textile or the textile hub is running a gateway there that renders IP NS links but you could similarly access this though over any of the ipfs gateways and what you see is you've got this folder and the app is automatically added a bunch of things to it including some different sized images so that your app can take advantage of like thumbnails and full-size ones and blah blah blah it also has the index.html which if I click on it will render this as a website that's all over IP NS that's pretty cool if I go back to the app click on this [Music] that something didn't work there so let's just move on and I can also click on this bucket link and it actually takes me to the raw bucket folder that also has a default rendering mode oh there those works now and then I can add more folders and level it's all very fun and it's a folder and ipfs I don't know how to stress the coolness of the dynamic IP NS folders except it's very cool and you should check it out all right so without further ado please do jump in and play around with this app break it fix it ask questions on our slack and I really hope that you all do great you can't all win but we can win some stuff and don't forget that textile has some bounties everybody had there's lots of bounties and you know even adding something like this to your hack flow would put you in the running for some of those bounties so you know check them out and don't forget to try try some of those so let's get back to our presentation which is oh yes demo by Andrew so Andrew you ready to blow everybody's mind let's we'll start a notch down from that and see what happens okay uh alright yeah I will relinquish my screen-sharing to you Colette stake it away okay cool so I'm gonna move pretty quick I think this should take less than 10 minutes thanks for sticking around I'm gonna show you something really cool that we are preparing just for hackers this month which is linking you you might have seen our my workshop last week and some of the some of things we've been talking about with the power gate and making it easy for you to build things on top of file coin the textile hub is one of the first users of power gate and so we're integrating it behind the scenes on on the textile hub so that it manages these this pinning for you so when you push buckets to the textile hub to persist them on ipfs when people close their browser or put their phone away we can keep them persisted there for you so by putting the power gate there that means that we can also let you push things to file point and so that's what we want to give you this month is kind of a few different ways that you can get to file coin depending on what you're building and what is easiest we have power gate the full open source stack we definitely recommend you go try that and run it and see if you just want to run that thing and use that as a resource for your app we have offered for teams we have hosted power are gay instances so if you need the full power gate API but don't necessarily have the machinery to keep a node connected to test net this could be a really good resource for you I should mention in that first one we have we have the local net so you can do things really fast without having to sync the whole the whole network but we also have these management since which consists instances which were we're working to get teams on-boarded to now so if you end up building with the power gate and really need that get in touch it's got some restrictions to it but should be released 'fl and then now i want to show you the third option which is to use basically an experimental version of the textile hub that already has the power gate enabled behind the scenes and will let you fire off these archive commands on your buckets and every time you fire off an archive command it will create a new deal behind the scenes to to move that bucket and the contents of that bucket to file point so let me just show you a little bit about that really quick I'm just gonna blast through this so you get a sense we'll we'll do our best to get details about this out this week to you we're shooting for tomorrow but we may actually also just wait until the staking is complete and we know everybody is taking part in the hackathon and then get the details to you on how to use this but the the idea is simple basically you you're going to use everything that carson already showed you today so you could use the hubs command line tool but instead of just creating the buckets and ending there you can also run these archive commands on buckets additionally the same if you use this experimental version of the hub you can also connect all these javascript libraries to it and use it the exact same way but now you'll get an additional set of commands on buckets that let you create archives so that means start pushing them to file coin that can take time so or that will take time to create deals on the test net and confirm those deals and get all the information back so there's these other commands to monitor the status of that deal give feedback to your users and all that good stuff and this this came up in the zoom chat a little bit about the hub being some centralized service services around the decentralized network and a textile were pretty strong believers that services are going to exist for a long time but what we need to do is move services to to sort of a better idea of what the internet is and one key component of that is to make services that don't have lock-in for you and your data and your users data and buckets connected with file coin is one of the ideas that we have to help you stay keep from getting locked into our API so you can push buckets for example to file coin leave textile never come back again and go get that data directly from the file point network and Ignacio on our team put together a really cool little video demo for a technical post he wrote the other week and so definitely go review the technical post to give some great details on buckets in general but then the video will show you what I mean by pushing a bucket to a service like the hub but then also creating a deal on file coins so you can leave the hub if you never want to come back so okay so these are these are just some warnings about using this experimental service so just when we share this with you and we make it available to everybody these warnings will stand true it's it's basically we're building this stuff on test net and test net may reset or we may have issues with what we've built over the next month so this service isn't meant to be a state staple service at all it's really meant for you hackers to go and try to build and and try the newest stuff with us everything Carson article showed you with the account setup will be the exact same but we're going to give you a URL that you'll just connect you'll connect your instance to instead and that that's what we're going the next hub and so when you when you before you did hub in it to create an account and you verified your email you're going to do hub in it against this new endpoint and then everything else will work exactly the same as it did in the tutorial today so let me just show you what this looks like so if I let me blast this so let me create this bucket actually let me I'll just show you it just has an image in here and kind of file I think this is from the previous workshop that I gave actually so if I do hug buck in it I can I can do all the same things as before so a lot of people have asked this like what it would be a good flow for encrypting data before it goes to file coin that's one thing that buckets has in it already is so I can I can just go ahead and say I want this to be an encrypted bucket and then all the same things again so let me go ahead and toss this into a thread and I'll get all the links I did before you haven't seen this before this is also pretty interesting to check out is the links when you have an archived bucket so that you so that you can see that this data is encrypted so it's still on the ipfs network but you but you won't be able to you want me to see the contents unless you have the key so all right so I've created my bucket I'm gonna hit this problem right now out well first actually let me push these files so now I basically added these files to the bucket and push them to a remote node for persistence on the ipfs network so if you've paid attention to the power gate architecture there now in the hot layer essentially so they exist on ipfs now I want to issue a command that tells the power gate to move them or keep them on the hot layer actually but create a deal archive them on file coin and so the really cool thing about this experimental end point since it's running on test net you're gonna get a bunch of free fake file coin and so every time you create a bucket that bucket actually has its own wallet address on the network with its own balance and everything and so but during test net you're not gonna have to worry about that too much the power gates gonna Auto fund that for you so that you can start creating deals and testing this out there's a little caveat here and that's why I'm talking so much is that funding takes a moment so I just created this bucket for the first time and it's going through transferring funding to the wallet address for the bucket so that can take about 30 seconds but as long as that's done now I should be able to go an issue an archive command and so it's going to give me another warning just to make sure I'm aware that this data even though I'm archiving it and I'm doing it on file point we're still only on test net and so this data will actually disappear whether it disappears in the next couple weeks it doesn't matter at the end of test net whenever they reset a test net before main net it's going to go away so don't don't build anything production here but if I go ahead and archive that it's going to add it to the deal queue on the power gate and start trying to create some deals for this so this takes a while but you can you can check in on it and see the status of it and so if you made it to the file the power gate presentation last week you would have seen a lot of this stuff already but here I'm just checking on the status of archiving my bucket and you can see that I've if you again if you followed that presentation at all I'm pushing a new configuration to the power gate that defines how many deals I want to create for it and now it's going and trying to create different deals with different miners here's here's a miner that's asking for a way too much money so we can't afford it and I think that's what's happening there but a bunch of other miners that it's starting to negotiate the deal with and it's going to figure out where it can it can store it if I come back and check on this later I should see a bunch of these deals closing and I can get the deal information about this archive which is really sweet and so once you have that you can go and and do do anything with that deal since this is running on the real test net you can go check other services look at the information about this deal see what's happening on the network so that's that's pretty cool and a kind of good resource and another cool thing is you can also recover this data later so I could do hub in it and if I pass the 'flag I can pull it back out of the network and so if you're going to call that one I guess I called all my experiments the same what doesn't matter we'll just go and pull the data back down I think actually I pulled the wrong one let me try that again let's try this one yeah there we go okay so I can just I can just go and pull that data back out of the network and so this should help you get kind of that full flow of data moving through ipfs moving through file coin in like a matter of seconds and so if you're interested in using this just let us know we're gonna get details out about it as soon as possible here and hopefully all this stuff is exciting and got you inspired to build some stuff on buckets or threads but definitely on ipfs and file point cool Carson do we have any questions before we wrap it up yeah you do have some questions but I think Aaron managed to answer them already cool we had some people in the YouTube chat asking about was it parison between threads TV in orbit TV and I thought I have thing been to something but maybe I grabbed the wrong link do you guys want to just go over that verbally or drop a link and I can pass it along yeah I mean there's a lot of we get you know if we get that question pretty frequently I think it's just better but uh no there's a lot of differences right and a lot of similarities and in fact we are pretty confident that they could be interoperable over the longer term depending on if someone wants to write a custom codec for textile or threads TV that speaks the update' types that orbit DB generates so you might think of threads DB as a is more like a generic more generic implementation of a append-only log based database but there are a couple of pretty key differences some of them like at the technical level that allow threads DB to handle different types of data so for instance thread DB is based on every writer to the database has their own log so we have this concept of single writer logs what this buys us among other things is a bit more fault tolerant in terms of if you don't receive certain updates for the database over the peer-to-peer network that's okay it also buys us the ability to defer conflict resolution until such a point that the data is actually rendered on the client that means that you can do things like custom codecs for managing different data and things like that and some of these concepts are covered in our white paper for those who really care about those nitty-gritty details a couple other features of thread DB include just some of the api's that are available select a push and pull based syncing across peers so instead of using pub/sub while pub/sub is available as well as one medium for sharing and syncing data peers can also call G RPC calls directly on one another to pull and push data and so in a like collaborative environment that means that I'm my peers or if their online are always getting direct pushes and if they're offline and come back online they can do direct polls and a few sort of features like that it's designed to be offline first so syncing can happen in the background that's a feature that or btv also supports so there are a lot of similarities a lot of differences and a lot of the differences are sort of low level optimizations things that we learned having come from I like mobile firsts and browser driven environment when building when building threads we should probably put together a sort of like document that outlines that more clearly over the longer term in our documentation but yeah in the interest of keeping it brief I think that's a pretty good little snippet I don't yet anything to add Andrew that's really good I shared the go threads refo has a table of some of the some of the things that are unique some of the things that are unique enough you covered a lot of them and more so it was great awesome well the same buddy else in the chat have any lingering questions that they want answered while we've got everybody here I wouldn't I'd say one thing because in zooms some people are asking about how buckets encryption works but it's the the original implementation of buckets is written in go and has a lot of work behind what's happening with encryption and the use of the use of the dag to do syncing and state management and it's definitely worth checking out but we have a really good thread about that and so this is for people watching on YouTube that don't see that conversation happening but over on our sponsor Channel in the file point slack there's a really good thread started earlier today asking some of the similar questions and I think it'd be really great place for people that are just interested in what for the mechanics behind there and how is key sharing and things how are those working to go check that out and join that and ask any more questions you have the price of the deal is determined right now is determined by the power gate settings I I think that will do work more work to let you configure that per bucket but right now it's just early stage for that API but if you go check out my workshop on the way the power gate works every deal is attached to a config and that config can make some decisions about you know what your max price is what kind of miners you want to do a deal with right now the buckets API that I showed that will give you it's just going to use the default CID config which you can go check in the documentation is what that is it'll just try to find you the best price with the fastest responding deals deal makers and things like that and it's actually doing I don't actually know the number of replicas it's doing but in that conflict you can set how many times you want the file to be stored and so it's doing replicated storage of that bucket just because we're on test net and some miners are gonna actually turn down deals midway through things aren't complete there so we actually we kind of like caps it out to the network to a few different places to see who comes back the fastest and how many replicas we can get out there for you yeah so we're we're kind of glossing over a lot of that stuff today just cuz sorry the question is that also from what I understand there are two markets Val coin archiving plus retreat and so yeah writing deals plus versus retrieving deals how does the deal handle both the same time well they're they're just kind of fundamentally different things so definitely go check out that workshop that I gave last week it goes through the full flow of how the deal the deal or sorry the the configuration file is used to structure that deal and then how that how that config is used to determine how your data is pulled back out of the cold layer so definitely check that out and then see what questions you still have left there is so then there's a question are there any examples using react native in that same repo that Carson showed there's another folder in there that's for a react native app so the answer is yes absolutely and yeah I think that's good if thanks for sticking through a little long with us folks yeah let's see as we wrap up yeah we got it clapping Jeremy as we wrap just a reminder if you missed any of if any of the other sessions just check the eath global youtube channel we have all these recordings and tomorrow we have four events I believe let me see if I can go through them in the morning I'm sorry the afternoon we have a 12 p.m. unstoppable domains giving their intro workshops so if you're unfamiliar with that project or you want to learn more about it go check out unstoppable domains so maybe a similar format to this will they'll be just going over what the project is and some of the details to it at 1:30 to 3 we have a team formation workshop how many people on the call well we had some people drop but anybody's still looking for a team Yes No maybe karate is gonna use although I feel gonna be honest out yeah alright so if you do need a team or if you're if you watch this video before tomorrow make sure to jump into that and there'll be just an open system where people can try and find other hack assess people who are interested in working together definitely gonna be a good session and then in the afternoon Eastern we have two more workshops the first is a graph protocol going over there some of their details about their protocol and how you can actually integrate it into your hacks as well as the final one for tomorrow is Juan Bonet is going to be giving another in-depth system overview for a file point definitely if you're not super familiar with the file point ecosystem or some of the specifics on on how the system works I would highly recommend you check this out is going to be going over the concepts behind how file coin works a ton of different topics and then QA specifically if you want to build on file point so I highly recommend you check that out or if you're new to this this area I think that's it definitely check out the schedule channel we're going to be updating stuff as we get them scheduled and then sending out email links there's a fleek workshop on Thursday and then and then more after that so it's packed there's tons of content I hope nobody is bored I'm definitely not I've gotta go think of some more games for the beginning of these events thank you everybody Carson Andrews really appreciate your time and insurance for that knowledge see everybody in the slack if you have any questions and tomorrow for any of the sessions yeah 