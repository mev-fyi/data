i'm sorry um yeah we can get started now so i am just uh getting set up on one end so i know i i assume we are going to be good on the tracking time yeah so uh with that um matter uh whenever you are ready you can start sharing your video uh make sure you uh check the sound button and open our very first demo and welcome yeah thank you yeah excited to be here uh so i built podcast pools which is essentially a no-loss lottery system that allows for podcast to monetize uh off the interest of people entering into the lottery so i'll go ahead and share my screen um so let me go here and share so without further ado hello my project is podcast pools when nft episodes from your favorite podcasts so what podcast pools is is a no-loss lottery where the prize is an nft episode of the podcast and the interest goes to fund the creator so in my project i built on top of into the ether's podcast rss feed and you can think of this project similar to patreon but instead of people directly donating money to a creator they are donating the interest from their money to the creator in order to potentially win an nft prize and this expands beyond podcasts it's really for any content creation on the internet so youtube instagram any kind of public good that can allow for people to monetize it so summary of how this works is that there's primarily two main smart contracts there's a pool contract which is where users deposit die in order to get tickets and then that die is then locked in a compound to earn interest the strategy contract is determines who is the winner and who gets what so in this case the nft is awarded to whatever user is selected and the interest is awarded to the podcast creator as a way to fund the podcast so looking at how this system is kind of architectured the first thing is i have a server that's running in the background and it's listening to the into the ether podcast feed and an rss feed is basically just a list of all the current episodes that a podcast has so whenever the server sees that there's a new episode that's been added to the feed it takes that data and then uploads it to ipfs it gets the content hash and then mints a new nft token with that content hash to the pool contract the server then calls the strategy contract to let it know to add that nft to the next prize so let's go ahead and demo hopping over the ui i'm going to go ahead and connect my portis wallet here and now that we're logged in we can see that there's an option to deposit and withdraw a die we can also see that there's a current price that says new prize coming soon we're actually going to mint this with the server in a couple seconds here but let me show you a little bit more data down here so we can see the total number of tickets that have been created when the next prize drawing is going to be the current balance that this account has for tickets and then the diet balance as well so let's go ahead and pop over to our server so i'm going to start this up so it's listening to the end of the ether podcast rss feed and it's grabbed the most recent episode it's now uploaded to ipfs and we've gotten the content hash back it's minted the token and then it's now added that to that token to the next prize strategy round so hopping back to our ui we can now see that the current prize is ethub weekly 135 with a description and release date if we look back over on our server we can see that the name of the podcast that we uploaded to ipfs was ethup weekly 135. so let's go ahead and deposit some dye this is the first time we deposited so i'm going to go ahead and approve die click confirm and now that we've submitted that transaction i'm going to go ahead and enter an amount i'm going to say let's use 50 die to get some tickets and it's a one-to-one ratio so one die is one ticket so the transaction's been submitted for this we can actually view it on etherscan here so you see the transactions pending and now we can see the transaction is successful scrolling down we can now see that the total number of tickets has gone up by 50 as well as our ticket balance has gone up by 50. withdraw is a very similar process to deposit so i'm not going to show it but this has been podcast bulls and thank you very much awesome no thanks for uh i'll turn my video i talk thanks for that uh amazing demo and being the first to present today um super well done i i got a preview of this thing uh last week so i will let our judges kick off with the first set of questions and comments yeah um yeah it's a latency neter that was um first of all good job and like super clear presentation um i think like really well done really like really um just very clear which was awesome um i assume some of the no loss lottery stuff uh was inspired by pool together or some of the thoughts behind them um i'm actually just quite curious it pulled together and their infrastructure isn't used in this you built all that kind of logic yourself right so so they recently released v3 which allows you to build any strategy you want on top of their their prize pool contract so i actually use pool together v3 for this thank you that's a good that's a good clarifying question cool and you just build it by yourself right yep i'm a solo hack it's just me what was like the most difficult part about that um it is actually so rss feed stands for really simple syndicate they're a pretty commonly used kind of like web infrastructure most commonly used in podcasts and the format that they use to part to send data is an xml i've never worked with smxml so i needed to get my server to parse the x incoming xml to json um you know luckily there was a bunch of libraries out there that i could use and shout out to whoever maintains those because you know you're doing you're doing good work out there but it was definitely the hardest part was parsing xml to json all right so it wasn't even the web 3 infrastructure it was really web 2 legacy pic well that's good to hear used to be always the other way around um that was awesome i'm glad you used uh compound obviously and the pull together uh v3 contracts i guess um atlantic hart said really well packaged like for uh for sort of a multi-week hackathon to get to a real working product that shows like a lot of uh potential for the future i guess i'm curious what your motivation was like how did you come up with this idea do you listen to a lot of podcasts like what do you what do you think would would you be a listener or a podcast creator or an nft collector mm-hmm uh definitely all the above yeah like i'm a huge fan of into the ether and shout outs to eric and anthony for letting me use their podcast feed for this um yeah the idea was inspired by vitalik he was on a certain podcast and they were just talking about like you know what is a way that i could use cryptocurrency to kind of monetize this podcast without having to run ads and i like thought that idea was really interesting and so i just kind of want to expand upon it and build upon it and i think kind of the underlying premise of this is it's an incentive because you can have a one-of-one unique part of the podcast right it's like it's a public good right anyone can listen to podcasts anyone can learn from the podcast but you own that one nft of the podcast right and that's the prize and it's totally transferable you can sell it on secondary markets you could have special meetups for people that own these nfts so i think there's like a whole community aspect around it and it also it's a no-loss lottery so like you as a contributor you're not directly donating money you're just donating your interest to fund this podcast what's hashed on ipfs is a link to the episode hosted on a server somewhere so not the episode itself so yeah so i actually didn't know much about how erc721s work before this and the way it works is there's a thing called a token uri which stands for uniform resource indicator which basically is a pointer to some resource out on the internet that holds data about that token so a good example is like cryptokitties like there's an image and there's like a bunch of data about it right but that doesn't live natively in the smart contract because it's too expensive to store so what they store is a link to somewhere else to a server but instead this case i used ipfs an ipfs hash so when you create that token when you want to get the data about that token you pass in the id and the id returns this link or in this case a content hash to ipfs where you can go get the data so the name and the image and all the data about the episode cool that's all the time we have for questions today thank you so much podcast tools thank you very cool yeah thank you very much have a good one awesome so uh next up we have lucidity and i think they've raised their hands so we'll just promote them and uh as soon as you're here uh feel free to kick off with your demo video hey can everyone hear us or hear me yes uh we can andrew all right awesome um so let me share my screen real quick so our team's product was lucidity and it's focused on public procurement projects bidding and funds management i'll let the video explain the rest angel i think uh you forgot to click the audio button we're not getting audio oh my bad can hear now hey everyone today i'm here to talk about our project lucidity the problem that lucidity is trying to tackle is the problem of public procurement and public project corruption right which leads to an estimated 1.3 trillion dollars of misused funds every year a lot of this is due to lengthy bidding periods that lead to more opportunities for bribery or price collusion as well as how little room there is for public opinion on how the funds are used as well as their management over here we've broken down the public project process into four parts the planning phase bidding phase bid evaluation and implementation of monitoring most notably there are two common issues that lead to corruption the first is bribery and the second is a mismanagement of thoughts and here i've listed two examples what we're offering to bring to the table is a public project bidding and funds management platform built on the blockchain ethereum we have two main focus areas from this hackathon the first was in bidding where we wanted to make sure bids were anonymized and permanent to make it harder to clude or change prices the second focus area is implementation of monitoring where we use milestones that can be made fairly complex and combined into unions or split into sub-milestones and allow for more granular monitoring of funds use think something like covenants right now milestones are reported on through oracles which can be an auditor or group of auditors but in the future we want to be able to use iot sensors as well here you can see the basic flow of our project and next i'm going to move into our tech demo this example we're going to submit through here so i'm going to submit a new project as a project owner now i'm going to become a bidder and i'm going to see the milestones that were entered and price it myself [Music] after this has been sent in the owner can pull up all the bidder proposals and click on the one that they think best matches their budget and after this they can start the funding period so now that will send everything to a textile ipfs threaddb for us to pull later on this demo i'm going to connect to the project here the project data is pulled from the ipfs server if i'm the funder i can choose to fund it for 500 let's say and this will give me an nft token basically saying i've funded it and we'll see here my balance is now 9 500. so as an auditor i can see what the targets are i can set a milestone using gnosis conditional tokens and once it goes into there it's now managing the escrow contract all right and if a milestone is met i can confirm milestone was met and now as bitter i can redeem the pal from that milestone and i can see my funds here ultimately here we also using the graph to track all new projects and all new funders i can see the project as well as fun data here so for the rest of the year we're planning on adding account authentication a scored auction that's more transparent the ability to choose the milestone you fund based on risk tolerance as well as data tied from real sensors or public voting into milestone reporting all right that is our demo video thank you so much i'll let the judges ask questions so it seems how many how many are you in the hacker in the hack team like seems like you've built a lot of stuff we had five um i think three three dropped off and then somewhat came back um but is is i feel like it's mostly oscar me and nick kind of handling the development um probably six hours a night for the last 20 days very cool idea i mean i like you you're basically pretty much going straight for one of the biggest problems society has yep i love the yeah i really love the scope of the ambition i wish i wish it could be implemented you know obviously it's a hackathon so it's it's really good yes so we actually oscar's talking to the unicef innovation team um i'm trying to work with some people in south africa and also trying to talk to some ngos so we can try to have someone actually give feedback and pilot this project nice yeah andrew i think um i think this is exactly what uh ethereum is useful for it's like programming and senate structures right it's it's an amazing concept and so it's i think i live with like less i said using the ambition of this is massive um i guess uh which is which is awesome so like well done to you and your team thank you um i guess i'd ask what was um did anything in particular drive your team towards this idea uh you know obviously a huge problem but like how did you guys what was the uh inspiration or what was the source of where you kind of came up with this yeah i think one of the biggest sources is the world economic forum did a presentation earlier in june where they did a test run with um i forget which school but in colombia in particular where they built out a bidding process and talked about how there was a lot of push from different countries uh in latin america to try to put their procurement process on the blockchain because there's been a lot of history there so i think as soon as we saw like their rfp from the world economic forum as well as the interest from countries and governments we thought this would be a good idea to try to tackle sorry my dog's in the background whining hey um great work i think really well done i'm i'm excited to hopefully get a chance to look at that um that diagram that you showed before going to the demo it's pretty complicated we just gotta yeah yeah but um i think like uh like heart and lastly i've said uh it's super innovative in the sense of if you think about the current flow of funds for how people run this process it's sort of insanely non-transparent and unable to be like audited uh in a way that your your system starts to solve i also noticed uh kind of like it's really cool how composable the pieces have become like you're using those conditional tokens ipfs that probably helps bootstrap the system a lot so it's amazing how much you can get done in a few weeks um what do you think about is kind of an mv mvp application of this like i don't think you're gonna go straight away to colombia and build a school maybe you are like what no that means we'll definitely try but i think we're looking for like at the start something like agriculture projects because that leans itself easily from like the bidding and documentation side as well as like the data side um it's pretty i'm also easy to track but easier to track and there's a lot of kind of low risk projects in that area um eventually i'm also looking to see if this can be done in like renewable energy and solar projects because there's a lot of that that's trying to be built out in africa where they're looking for more risk sharing and kind of interoperability of systems so but yeah government projects is probably going to be hard to push as a first ending so awesome well if uh there are no more questions uh andrew and team i i hope that i continue working on this uh hopefully uh get some sleep instead of six hours a night uh but this was awesome thanks for putting in the last few weeks on making this work rack of eat online thank you all for the support great so uh thanks again and now we are ready to move on to our next team and that is uh project uh prana so uh we will be playing the video for them so uh the team is here but uh we'll play the video on our side and we'll just uh let them kind of come in for the q a part so i believe anna is going to be writing up the video and i'll let her cue that up i don't think it's playing i think you gotta hit play one more time so are you just having some technical difficulties um there was uh let me let me just do that on my end if that's i got it yep want with their copy of the ebook on a platform every user can interact either as an order or as a reader on the reader page there are two tabs my library and grab a book a user can grab a book in three ways buy from author buy from other readers or the user can rent a book from other readers on the my library tab you can see the books owned by the user on the reader page you can see the box published by that user and the user can access the content as well if a user decides to publish a book here she can do that by filling up this form giving details like title ispn price uploading the cover picture the book content and the creator's cut which is nothing but the transaction card that the author gets for every subsequent transaction on each individual copy of the book once the book is published the user can see the published work on my published works tab here in this case the work that he has published is treasure island you can access the content as well now that a new book is published onto the platform and another user wants to buy that book let's say from account number two the second user can buy that book by going to the buy from order tab this is like buying directly from the order so in the background what really happens is a token is minted at this point once the transaction gets confirmed the second user can see the treasure island book under the my library tab along with the copy number as an owner of an e-book the user can also decide to add annotations which gets attached to this particular copy only so here in this case the treasure island copy number one has the annotation called treasure island which is unique for this particular copy no other copy will have this particular notation now with the first copy of the treasure island the user can decide to put it for resale at a price that the user wants now if a third user wants to get that book which is put for resale let's say from account number three the user can get that book from the tab buy from other readers once the transaction gets confirmed the new book gets added under the my library tab also the user will be able to see the annotations given by the previous owner of the book now the third user can also decide to put the same book for rent at any price that he wants to if you have another user who wants to get the same book for rent let's say account number one the user can get that book from the tab rent from other readers once the transaction gets confirmed the user can see that book under the tab rented books and start accessing the content our user also owns the second copy of a modus proposal let's say our user wants to gift this particular copy to a friend so the user adds an annotation which is very unique to this particular copy and the user gets the account address of the person whom he wishes to gift now he can give away the same book by just mentioning the account number now if you go back and check the account of the user who got the gift here in this case which is account number two we can see the book and we can access the content and see the annotation as well awesome so uh i think the team is here we just saw a demo of your ebook platform maybe i think will be helpful if you're able to kind of kick us off with uh sort of what made you decide to work on this and then i'll let the judges ask any other questions uh yeah so the primary inspiration was that you know digital content even though you buy ebooks or any sort of digital content you don't really own that particular copy uh in in the same way that you might own a physical copy of the book uh so if you buy like you there are used bookstores out there right those exist out there in the real world and no one's asking any questions about that but as soon as it's digital content uh you can buy it but you can't do anything else with it like you can just read it but you can gift it to someone or something like that um part of the reason was that like there's no way to distinguish different copies because of the very fact that these are distal properties so we want to like make them unique so that you know there's a kind of a digital scarcity uh attached to them and then see whether or not you know you can give the users the kind of freedom that they want so yeah yeah guys this concept of uh used digital content is like pretty fascinating it never occurred to me before you know like for example i want like i want vitalik's copy of the ethereum white paper right like i paid extra for that right yeah exactly and uh yeah go ahead no yeah yeah so it's the same thing right i mean people stand in queues for days to buy the very first iphone right uh but like you don't have that kind of behavior for let's say harry potter book coming out in a kindle store or something so yeah i i think you know people might be like they'll be ready to pay a premium for the first copy or the 10th copy of something or like you said you know something that's already used by a celebrity like you know emma watson's uh harry potter copy let's say so and methodix white pepper yeah yeah it's it's really crazy if you think about it how restricted there's no economic activity around content right now enabled it's all these crappy silos of like ibooks i can't do anything there and yeah yeah so i think it definitely can go way beyond books uh but this is a really really good first kind of like focus area and it looks oh yeah i like found and yeah yeah i mean we want like it's it's the whole display kind of an ecosystem but then we want like focus on ebooks in this particular case because i mean we believe that you know even netflix if you think about it like you subscribe to the content but then you know you get a whole lot of thing and then you are incentivized to binge watch the whole thing rather than you know watch in your own pace like you can't just buy the canon and then watch it let's say you know five months later or something like that so yeah what was the hardest part about building this um the uh well the nft part was a bit hard and plus uh designing the ui because we none of us were ui designers and it looked pretty crappy in the first round so we went like we had like really signed the whole ui uh from the ground up again uh but yeah i guess that's that's what the hardest part was what this made me think of is uh i don't think anything has really come along and replaced napster and sort of that like sharing ecosystem but something like this could be a pretty interesting evolution of basically like file sharing networks um what is the rest of the stack really quickly so there's each of the ebooks is implemented as an nft that refers to a file somewhere or is it yeah yeah so like whenever the publisher comes and publishes his content that's represented by an ipf is hashed and then like whenever a user buys from the author like a publisher or an author that's when the nfts are minted and then once the end of these are minted then you can like track the use strike ownership and everything right and there's all those annotations and cover picks and everything those are all ipf's hashes uh but uh like the cover picks or a or the general method of a particular title those are all single ipv but those adaptations are all individual to each of those copies so those are all different active sketches running along cool okay well that's all the time we have for uh for this project so uh thank you so much uh prana and i hope that you continue working on this uh this is a really cool concept i'd love to uh get with all this copy of the white paper awesome well thanks again and uh we are ready to move on to our next team and that is uh my vote by indigo theory so ron and team you're here feel free to kick it off i'm ron with indigo theory we're an ethical hacker team that's based in empathy and we're going to start our project we face is that there's a ton of rejected ballots out there and they're rejected for a whole bunch of different reasons and one of the big ones that is uh causing a validation is that the signatures don't match ballots arrive late people forget how to do the ballot process there's a lot of failures inherent in the system right now today that we think we can solve and we can solve that with blockchain technology so we have a flow here on basically how the process works and a user receives a ballot they scan the qr code or it could even be nfc depending on the scale and the size of the system and then they have some options to help solve the issues that we identified in the beginning so there's a physical ballot help center there's a ballot acceptance check and then if they really want to they can vote online which gives us some more benefits from the blockchain side for users that just want to track their ballot we're going to append a qr code onto the envelope and they're going to scan that and this could be scanned in a lot of different points in the lifetime of the ballot it could be the electoral office it could be while it's in transit to the voter and then they want to track it after they actually vote and as we see here on the right these readers could even be built into things like mailboxes or ballot boxes where the qr code or the nfc code is being scanned automatically as the votes being put into the system these qr codes are going to be encompassed of a lot of the personal information but also a uuid a unique identifier that we're assigning to them and this qr code is going to be scanned by the mobile app by different readers throughout the lifetime of the ballot and what this provides to us is a physical ballot history so we get a ballot timeline associated to the etherdress that we're generating off of the pii data and the unique identifier we show our derivation path and a final address here and then we can start to see the different checkpoints that the ballot's gone through so we can see it has it been tampered with or did it go to another location before it got to us did it actually get to its intended destination we've also built in some mobile notifications to let people know that you know they still need to vote and they want to give themselves enough lead time to get it through the mail system the education component is a big piece that we've added to kind of help users through the ambiguous process of voting and going through the form and these are videos and gifts that we film that are part of the application itself it's providing locations and dates and reminders and all the good things people need to vote during the process we've added some understand easy to understand videos that could be hosted on file coin or ipfs if we really want to decentralize it further and this is just a very small example of a lot of the videos that we're including in the application showing the process of ripping the stub off the ballot the correct way to do it for our more tech savvy users we're actually giving them a way to use the form here on the right and do voting through the app and this gives us all the capabilities we're writing the data on chain but we're removing the pii and leaving things like the unique identifier so a governmental agency or a boat tracking system could actually still recreate the ethereum address and track which votes are happening on chain and that gives us some really really interesting possibilities to verifying elections and certifying them and then at the very end the user is going to get a cute little nft token here showing that they voted in the united states and that could be done through a bunch of different frameworks or systems but it's basically an erc 1155 token that's rewarded per uuid once the ballot has been tracked and counted and now we're going to jump into a prototype of what the actual app looks like so you should see on my screen here we have the mygod application and we're going to go ahead and trace the ballot so we scan our qr code and once it does the calculations we can now check each of the events that are on chain and track the lifetime of the ballot we have another flow in the app here where we can authorize a ballot so when we receive the physical ballot in the mail we can either scan it or type it in we authorize it and now we have the option to vote by mail with the guided education components or we could vote online if we wanted to and now this is going to take us through the form that we showed earlier where we're going to select our candidates and we're going to submit this this information does get encapsulated on chain so it's really starting to bring up some interesting things on how we can approach elections a little bit better in the future using blockchain technology we're indigo theory and this is our project amazing thank you so much and uh it's definitely a very timely hack so i'll let our judges uh ask some questions um yeah that was awesome i mean uh i'm here in san francisco in the u.s uh and i have my ballot right next to me so i am able to verify that your uh your workflow kind of works for for this ballot um but obviously super important problem uh that's something people have talked about for a long time i think like applying blockchain to voting so it's super cool to see it um actually done is there does this work for is it is this able to be generalized to like non i don't know presidential elections or like it works for any type of qr code i guess yeah so we could we built the system in a way that it's modularized so if we wanted to separate pieces out of the technology stack we could do that but we can also change the way the qr codes work what information we're encapsulating and now that we have a system and a flow it's very easy to backfill all the information for other elections and work with different agencies that are running those types of elections do you have any thoughts on sort of privacy um i think a lot of concerns about sort of you know online voting voting on the blockchain is you know that the privacy infrastructure isn't quite there yet and then you know imagine trump having access to the public database of everyone who voted not for him right he's kind of yeah there's there's definitely some security and privacy concerns there and i think that's why we're appending uuids and things like that so when we go to actually write the data on chain we're removing the pii so when we're encapsulating the data in the tx uh data field it's only going to be the vote results and i think we're doing that so it's still tied to an ethereum address and if other systems or backend databases wanted to tie that to identity just for verification or to say that people didn't double vote they could do that but i think the goal was to get the vote information on chain decouple it from the pii and then that way you know we envision a system where if we're doing all voting on chain we can hit the certify button and it'll do the full audit of all the transactions and spit out the results um obviously with limited usage you're only going to be able to certify a part of that but looking forward that's kind of our utopia vision yeah ron and ron and team like um obviously i think you found a target audience here where everybody in the ethereum community cares a lot about validating voting like this makes a lot of sense um i have two questions for you first of all um i'm not american so i don't actually know this voting process but right now is there any way for me to validate if my ballot was received and my vote was processed yes sorry go ahead okay so yes so that actually is currently happening it does depend on what state that you're in so all three of us are located in colorado and so one of the awesome things that colorado does is it lets you know when your ballot's on your way and it lets you know when it's been received but one of the problems that we saw even when tracking is provided at the state level is that if you're taking a manual route when you turn on your ballot the number one reason that a ballot gets rejected is because a human being has deemed that your signature is not your signature and therefore your ballot is being discounted and so one of the problems that we're seeing is even if you were to turn your ballot in it gets all the way to the end of the line it's like yes we've received it but by the time it actually goes through the manual judging process by a human being if they're deeming that your signature doesn't match the one that they have on file and you have no idea what signature they have on file and then they reject it by the time you find that out the affidavit that you have to sign the paperwork that you have to put through it's too late so yes there's tracking but it's not solving for the issue of ballots being denied it's also not very granular telling you each stop along the way like i want to know did somebody intercept my ballot before it got to me and if the post office is scanning now the electoral office is scanning that we're tracking that on chain i can now check and see well my ballot was at two locations we could even tie goip information to that if we really wanted to and map apis and really build that out so that i can verify not just trust that my ballot made there without being intercepted by someone else amazing guys um kartik i don't know if we have time left but yeah amazing um well done yeah we are actually exactly on time so uh if if there are any other pressing questions we were going to ask them but if not we're uh we'll move on to our next demo but this is uh really cool uh i i kind of it's kind of been surface already but i want to definitely see a lot more uh privacy applications kind of integrated into this and uh and you already kind of talked about it being generalized enough to uh to not be specific to just presidential elections so i'll uh i look forward to kind of more applications here for this tech so uh thanks again i hope you continue working on this and uh we are going to move on to our next demo thank you so um just a note for all of the attendees here we are coordinating who's next and uh getting that set up on the chat so please monitor the chat for your project name and that's when we'll know that you are there and you're ready for us to promote so uh please keep that in mind uh as we can look at it uh we are moving to haciendas now but the next team is going to be compound app so if compound app is is here please raise your hand and monitor the chat to be ready to be promoted so xavier i know you're here i'll let you uh take it from here and just play your uh video so feel free to start whenever you're ready could you play the video oh it's on us okay we i did not have that notice um if you're not i've seen you've done before so i didn't prepare but i can but it was only for teams that requested this uh because we were assuming uh this would be uh okay i can if you want yeah if you're able to do that let's let's do that but if you don't have any issues on your end then we can do it for for you i'm fine so i will try make sure you check the audio box and now we are good to go um so yeah so do you see we do not i don't think it's uh it's sharing but uh okay i will just play it for for you here yep i'll just do it on myself all right hello my name is xavier and it is my pleasure to present to you a decentralized game to interact with digital assets and blockchains so i've been teaching those technologies over the years and i found it useful to give concrete examples to make it more tangible and this is the purpose of this game it looks like a game but it's actually mostly an interface to eat interact with various smart contracts so you can start to set up your your wallet and then interact with the distance rise exchange and so on so let's dive in when we arrived we can choose between three characters this is a fully static website so it can be hosted anywhere and of course it's already deployed on ipfs so let's say we are a girl and we arrive to this word so there is a quest first we have to find four five transactions so can i do that i'm probably gonna speed it up here we have five transactions and now we can go and mine a block so this is to introduce some concepts and also to earn the first cryptocurrency we get so here we go and we have it at the first time so now we can directly claim those assets so this is the most interesting parts so we interact with this fox and he is gonna set up an account on portis we already have an account here and now we are gonna receive our first assets we have to sign the transaction and here they are we have all we are coins here so the cryptocurrency of this game we have 12 of them and now that we have these we can start playing with these and interact with other smart contracts so there are two interesting one so first we have a small decent transaction so we can just buy um usdc in exchange for our reals so that's what we're gonna do see now i've received my three uh usd c in exchange for um one real now can buy a coffee with this so this is a coffee place and here i can buy a coffee so again it's a transaction i'm losing espcc of course because i'm paying for my coffee this game can be expanded and this is a plan so there is already a prepared chats and other options the idea is that that would be a place where you could hang out and interact with different smart contracts um for instance there is already a halls rather unicorn over there so thank you very much for listening i hope to see you soon awesome that was a really creative uh game and a demo uh i have a bunch of questions myself but i'll let the judges jump in first that was super fun i mean i want to play it uh i think it's uh amazing to be to see an interface implemented that way um i guess so the implementation is um like what smart contracts exist you you i guess you have like some proxy smart contract that controls players contracts or you just hold the keys of players contracts and run transactions for them so actually it's pretty simple um you have your account is for party so you don't have to so your keys are stored with them and um and then you just interact directly with smart contracts as you would do uh through a web interface i did also you could do it with metamask the same way but i find it part this is perfect for users i spend a lot of time uh integrating against the gestation network so when you start because if you have an empty account you would start and you would be blocked because you can't send the transaction so that's the purpose so it's absolutely seamless you start playing you have just one smart contract that's the rc20 so it's a pure um typical erc20 that means uh the first units when you sign up and actually verifies that you already are not a participant so you have a participant array to check that you just join once and it's a kind of a gift when you arrived but i don't care too much about the currency to me the most interesting part is when you you set up to have 10 other smart contracts so the decentralized exchange is a really tiny and dumb smart contract at the moment but my purpose i didn't have the time to is to integrate actual smart contracts i feel like i would have to separate two parts one would be more tutorial that's about which you've seen so mostly for newcomers that want to discover how that works and the second part and i'm excited excited about that and i hope to to find some help to continue on this would be to make a full city where you have uh definitely uh different protocols where you could hang out and for instance um for the governance process of a particular portal you would have a room where you can go and as a character start talking so i don't feel like i'm too far from that i spend a lot of time in the in the creating the interface and now it's pretty easy to add new new things um yeah sorry kevin um so first of all like kelvin said this makes me smile it's like super fun watching you play around on this thing um uh i guess i i have two questions for you so the artwork um where did all the artwork come from and then secondly um what's next like where do you want to take this what would be the the next step um if you could put more time into this sure so the artwork uh i've mostly used uh open source uh digital arts so you have a few websites where you have uh assets and actually i've spent way too much time looking at different uh tile sets and trying to pick uh things that were querent together that looked nice but actually they come from various sources and i tried to pick but i had fun doing it also um well you did a great job too thank you thank you and where i want to take it it's definitely uh the part where i feel like i'm just uh starting is um i i want to really have a full uh city with uh many uh different uh diff d5 protocol where you could um yeah inter have the various interaction there's probably a lot of question of design on how you can represent like like i did with the markets how you can present almost as a physical object an operation on the blockchain because it's very abstract for people when when you do these kind of things so if you could make it look like really you see the coin going and coming back and so on uh that's fun and and the social aspect so the multiplayer part will uh could be a very it's a light approach to a decentralized uh digital world as we have seen already but a lightweight approach that that would allow you to hang out and and interact at the same time so yeah is the idea to develop this further as a standalone game or do you want to sort of make it more like an infrastructure for all other games to implement these components i'm not sure yes as a standalone game to me to me though it would be a mostly an entry point so you have somebody that wants to discover this you point them here and they can start playing and discover uh lightly and maybe even people more veteran can hang out just because they like the social aspect of it so yeah i think that would be the the design and have you been developing games before or was it just the first time no and that was a painful part so i've heard the other team have worked a lot also but i've definitely spent uh i can't count how many hours uh discovering the framework and how to to create that so it's been really hard but now it's done it's it's uh um not so complicated to add then the integration with uh with with a smart contract awesome um that was a really cool demo yeah i think uh the website is under submission so if anybody wants to play just click on the the project name and uh you can try it out too so uh with that please continue building it i think it's really cool thank you and and please send me feedback absolutely mini city for each uh each of our default apps will be awesome um and we get real governance with the with the actual town halls and uh with that to our next team uh so uh we have uh the project compound dap and uh dave is already here so david whenever you're ready feel free to share uh your video hey hi guys here this is our first uh d5 app uh we built something we don't have supportable ideas so just build something very simple um let me just get right into it um just share my video make sure you check the audio box oh wait i think i need to computer song this is medicine i've worked on this project with another team member by the name of david and we built our first stify [Music] app using compound there are three options here and as you can see if you don't connect the wallet then all the buttons are disabled so you gotta have to connect and once you connect it shows you different supply tokens borrow tokens the amounts and the interest and total battle you click supply then you're gonna be shown the supply tab where you've got the supply token apy cloud factor and total supply you can enter the number supply token yeah and then borrow market or i can just go here i mean it's slower but it's quicker if you start from the top anyhow uh there's a list of borrowed tokens here api cloud factor again all that good stuff and there's these options here you know enter market borrow vp bar exit market and then if you go back up here if you click on faq it should bring you to this tab where there are faqs and then now if you take a look at the code you can see that there's some javascript and html of course and an example of a javascript function is over here enable buttons like like shown earlier if you don't connect a wallet then it's not going to be enabled so that's what this whole thing does over here and there's a lot of functions like these in here there's all the way down here and the html is all right here and you can see all of this code of course in the github website make sure you check it out and as for the demo say you want to borrow i'm not borrow supply some tokens just start supply first 0.1 for example supply confirm and then you wait for the confirmation and there it is and for the borrow market i'm already entered into the market so i don't need to do it again and let's say you want to borrow some die and enter a tent or a 10 dime all right and confirm the transaction wait a bit any moment now there it is rss and yeah that's about it so that's it it's very simple app i mean this is first time we build something like this the compound js just looks so simple to use so we decided to go for it and uh yeah cool so it's it's basically an alternative ui for compound right yeah pretty much yeah which is actually good because you know okay i still cannot get a liquidation price on compound when i interact like the ui is beautiful compound but for this heaven's sake man it's impossible to figure out what my liquidation price is so you know i really encourage like a lot of different ui's to come online and then you know some of them will will you know nail all the different functionalities cool thank you you got to respond to that kelvin yeah yeah um well first of all welcome to the compound developer community i'm sure the community is excited to have you here uh you're part of you're part of the gang now but uh to really what last is talking about is that is ideal for compound that there are many interfaces to the protocol and that some of these interfaces are the ones that the next several thousand or one day millions of users uh what they go through to access compound so it's really exciting to see uh you building that type of interface i guess what i'm curious about is uh compound.js is pretty new i'm glad you were able to use it but what was the most difficult part for you in putting this together i think there's some um there's some issue with the one protocol we actually found the bot and then we tried to get certain things that say how many how many either that is there and then also we try to get to like always expecting something the menu will pop up will allow you to choose different wallet just now you go to compound i thought it would be available on on through the api which you can just you know clip it will come up it doesn't make sense to create frost grass so yeah that's uh that's pretty much it and there's a couple bucks there and then i think um they fixed one of the books music one of the books and then and then the other one is and the other one that we uh have the issue with but it's it's not a big deal but it's pretty cool actually yeah awesome yeah i think it's clear to see like uh every interface is a little bit different and there's there's definitely things yeah honestly we did not spend a lot of time on this maybe like once a day for the last two weeks that's pretty much it so we can build it something from scratch so it it it means a lot i mean this means that this is api is really good so yeah it's pretty cool awesome thank you yeah david you guys must be compound experts at this point which is pretty cool um um that's awesome um i was also gonna well i'll make the comment too that i think what you're showing is something that i think all these d5 protocols really want to have happen which like the protocol is one thing but you want multiple interfaces you want this to be like decentralized in terms of how you access this protocol so it's pretty cool to see you guys do that and also execute on the strategy that i know uh calhoun and compound are trying to try to put out so it's cool to see that working um are you are you new to um to ethereum development um and if so like what would be just kind of expanding on calvin's point um what were the the weirdest what were the oddities about building with this sdk or about like writing on the uh in kind of web 3. um this is first time building this yes and this is for our first the app um the most difficult part is just um understanding connection between this uh browser to the metamask and we try to understand that how i can connect to metamask and get a balance like not just a balance for the compound token but all the tokens so and then we can automatically list it on a site so you can see all the tokens there and then what's all the balance invisible to you so i think that's probably one of um take some time to find out exactly how to do that yeah it's the documentation is not there for this car yeah and i think the next one probably want to build uma as well so i we want to try out something different yeah it's cool cool it's nice experience though thank you so much guys no it's really great to hear man great job especially with uh your first time and this is an amazing accomplishment where uh you've offered an alternate ui two compounds so i hope uh the compound keeps keep supporting you and you can actually make this kind of publish this so others can use it too and uh congrats again on this demo okay it is online let's put we're gonna just put out a link so you guys can check it out awesome i'm sure a few people here will be uh very interested in retweeting this thank you uh great so uh with that we will take a quick uh two minute break we're at the halfway point uh tokenira.org is the link for those who are curious on this video after um we'll just kind of have all of our judges turn video off and uh we'll come back in two minutes and uh that's when we'll resume with the next team uh the next team is going to be uh sign chain so uh sign chain if you are here uh just raise your hands we see two of them but if they're more than two members from your team on this call we will promote you shortly we'll resume in a minute or two when calvin and lassa come back all right we are ready to resume so uh sign chain you are here and whenever you're ready you can start sharing your demo hey hi everyone oh shall i share the screen yeah make sure you check the audio box yes hey everyone this is koshig we build sign chain a digital signing platform for legal documents we are a team of four from consensus labs taking part in this hackathon so we all know that legal documents that are signed physically or electronically has delays verification issues and are not tamper proof so we build sign chain uh which manages the tamper from digitally signed documents with the help of contracts dids and decentralized storage so we have a very simple flow where user uploads the documents adds the party stores the document in a secure way in a confidential way and time stamps it and anchors the proof to the contract so user can access update and sign and verify these documents at any time sunshine makes sure that the proofs and did credentials are accessible across any platform it provides privacy with the help of end-to-end encryption and dids lesser delay and lower cost the workflow is pretty much efficient we use flick and file coins slate for decent light storage and ceramic idx for decentralized identity so let's do a demo so user has to connect the wallet just like any other decentralized application has to provide few details even the notary can uh sign up in this application so once uh sign up is clicked it will create an idx section and the profile information will be fed into it the user can just use the password login user can check out the profile information we have even created two other files do other browser so we have even created or the other counterparty so that other party can also sign in this demo so let's upload a document so before that we can select any decentralized storage let's select slate and upload a simple employee agreement so one transaction will ask for 0.1 ether which is a notary fee which will be locked in the contract until the note notary notarizes the document so let's now go to the note notary part so where the node we can view the document uh look at the document if he is happy with the document uh he can come back to the document and then uh notarize it so immediately after the transaction is confirmed so you will notice that the notary will immediately get credited with point one so even the counterparty can go and sign the document the counterparty has signed a document anyone can look into the same document details uh where they can look into all the timestamp of each and every event that are not really event as well as all the document details so let's say a particular document a confidential document finally or you can check out our application which is currently in rinkeby and ceramic test net or any contribution to our open source repo is also welcome thank you hey everyone this is kaushik we built awesome thank you so much for the really cool and interactive uh video um so i think i'll let our judges gonna ask any questions or we're not digging with any feedback and we can uh take it from there [Music] all right i'll i'll go first um so i um yeah this is obviously i mean this is a really big problem to solve and like very inefficient just to verify that uh people sign things i mean i think docusign in the us and some more like advanced jurisdictions they accept digital signatures i'm from germany where you have to go literally to the notary and the guy reads the contract and then takes the other and then he gets a percentage of the value of the contract that's being signed absolutely mind-blowing and um and so i think this would be really good that obviously you need like a uniform identity solution right that is actually widely accepted uh but i think that's not your job right that's the job of whatever identity solution you're implementing um right my question is why why do we still have a notary in your process when the early function of the notary was to verify that yes this is actually that person's finding and this is that person yeah so the thing is that uh so note 3 is kind of like a optional uh you know entity in our platform so basically uh you know if you want for your documents we know that notarize for example there will be some legal document where you need expertise opinions those people will become notarized and let's say you want the third party as your witness you can ask them to be a witness are not necessarily a notary so it's up to the you know people to add different kinds of party that's why we are implementing identity solution and we want to you know establish different kind of you know profile or different kind of entities so currently we added only two parties uh in our platform so i would say yeah so as you mentioned identity is actually uh you know big part of our project so we kind of implemented so that as you mentioned docusign there are so many other electronic uh signature platforms but the what the what the problem they what they face easier that so they have integration with all the different you know email services or maybe you know google or all these authentication services but if you integrate there's still not an interoperability what we're trying to do is with the help of identity solution we want to have that in trouble operability bring into our platforms so yeah so we can have different kind of parties in our platform and we're kind of trying to solve that along with that our platform what we're going to solve is not only that so we want to standardize the process as you know you know the docusign has this different kinds of regulation uh where you know this signature has to be regulated by the standards and all those things so we are also providing confidentiality along with that like if you're looking to document our sign chain so they don't have that confidentiality that we you still have to trust those people to keep your data saved so we are providing that along with the did so we're linking the documents to the did so that used even you store it in a decentralized uh storage devices uh it's a completely encrypted platform you sign up yeah mechanical question are you signing things with your public key uh no we are signing with the private key sorry uh i mean i mean yeah but a key not not an actual signature you're using an ethereum address to sign a document uh currently yes uh so the thing is that we kind of integrate our identity currently at the ceramic idx for the profile part and the credential part but we are still using the ethereum or to sign or in our current platform as you can see though you know we still had the signature thing pop up in the metamask but eventually we wanted to move everything to the identity part because ceramic is still a stage where they don't have all the things in place but we are trying to integrate because currently if you see in our platform we have three different wallet integrations uh so the you know one we maintain for the end-to-end encryption part one we have to do all the smart contract integration and one we have for identity thing so we want to eventually merge that into just the identity part and how that yeah just a single uh login thing i think like uh identity is important for humans but like contracts and machines don't necessarily care about human identities and even just being able to do like two key or basically multi-say like key signatures is really interesting it's a lot of applications uh you know like this project audience just launched with uh like musicians and basically listeners and you could think about like licensing being done in a way where contracts are signed by people with ethereum keys i think it's a really promising building block for you know legal agreements of the future so uh the main thing that we are we were pretty much motivated was about legal contracts because we are working on an arbitration platform in enterprise ethereum but we saw that it's not only a problem in enterprise ethereum it's there everywhere uh we still are facing even in this remote world of corona uh thing happening we still have to travel to actually to put a stamp for any kind of organization work so we still that has we still that see that happening in india in a lot of places uh for all the government work and all so we thought that we can also put this in the public not only put it just or use it for the arbitration platform where we have to deal with the legal things uh so where we are actually trying to implement the statement you know science part and everything but we thought that we can do this in public platforms so um we are unfortunately out of time but i know hart has a comment he's been trying to make so i'll let him just quickly do that thanks kurt dick yeah i know we're out of time but koshek i just want to say i love the name a lot i love the interface um and i think the use case here is real like even if we just think about like dows right now there's a lot of use case where a dow might want to actually sign something even if it's anonymous who it is but something something with various use cases and i think something like this could be extremely useful so i actually i do think you guys i would encourage you to consider developing this um because i think there it could be a useful primitive um for for a lot of the emerging stuff yeah so what is right the thing is that uh we cannot directly move into the you know completely digital thing we still have to have the physical document to be assigned that's what we are exactly trying to solve awesome so uh thanks again for uh presenting i hope you continue working on it and uh yeah let's uh let's make a world that lets uh anonymous organizations sign uh legal contracts um so thanks again and now we are ready to move on to our next demo and that is team pressed nft so i know rob and feature rob are here i'll i'll let them uh figure out who should be linearly presenting this hello um let me get my screen share computer sound all right hello for eth online 2020 hackathon dark labs has built a procedural pipeline for visualizing erc 721 tokens nfts or non-fungible tokens are a standard for putting data on the blockchain these tokens are verifiable proof of ownership created by smart contracts each contract has a unique hash and each token has a unique id this gives the token designer the task of making order of the randomness and building a language which can procedurally generate a token analog though there is no practical reason to further represent nfts beyond their own purpose it is an interesting side effect which does not alter or add to the system we chose to keep things simple in our prototype by assigning each number in the token id to a basic shape the interpreter then combines the objects in order to make a basic yet slightly post-modern ornament this system is also able to go beyond digital representation and into rapid manufacturing since web 3d relies on blender we can often reuse it to reinterpret and output 3d printable objects we believe that crypto's future holds exciting challenges for designers we might find that this type of representation is totally superficial or it could become an enriching aspect of digital ownership historically the designer's job has been to make skins for machinery so people don't get sucked into the gears but now we find ourselves with objects that don't have gears that suck you in through mental manipulation building tools for abstract constructs such as random numbers can help people recognize complex systems and items which might just be the new job of the designer in web 3. all right cool so i'll uh that's a very interesting unique uh use case of visualizing nft so i'll see if some of our judges have any comments and feedback yeah this is super cool and like so it's so different then i'm just uh we're probably all a little stunned right now because it doesn't usually it's like you know even just the way technicality practicality originality like you know it's almost none of these like categories fit this because it's so um yeah it's just a very cool thing basically um and and so i don't know if i have any like really on point pressing questions right now um i just think it's very cool thank you i feel the same way so you i guess go ahead sorry sorry calvin i'm sorry about my internet here uh future rob um versus rob which i'm curious about to you guys but um i i guess like first of all so what shapes did you choose to watch numbers is it as simple as like you see a number nine and it's the shape of x or like give me more about like i'm quite just curious about how you constructed these things and then secondly you guys also sort of talked about like 3d printing then have you actually 3d printed any of these i would like do you have an example of a 3d printed erc721 not yet i mean what i'm really trying to show here is that uh you know you can kind of give it this random language and it's really just arbitrary i think it's like one as a cube um but you know i could imagine if this was really explored more and had an actual brand attached to it you would have a lot more logos and a lot more items and uh yeah i mean you can essentially just cloud 3d print now so if you have a mesh like this you can always translate it into kind of a keepsake and kind of the the name is like you know when you go to a attraction and they have the penny machine that squishes it out and it kind of turns your money into something memorable yeah that's what i thought about the name by the way so that that's that that was what was in my head when you with the name so so that part worked um i love that so i i i think there's like a ton of interesting ideas in here i'm thinking it's like sort of a meta nft there's like a bunch of like generative art aspects to it um i'm a big like you could think about attaching audio i like you said any arbitrary sort of rule that you could generate off of whatever code is part of an nft um there's a platform called asynchronous art that does like programmable art based on uh nfts you i i think you need to talk to them like this is an implementation of um that i'm sure they would be really interested in in looking at or working with or letting their users uh play with so i think it's it's really cool yeah yeah i mean i think that the idea is quite simple but like just being able to give the owner a little bit of something that they can be like oh i recognize that object might have more power in security even because numbers aren't exactly like i mean you kind of get an idea of your address but if like five letters down it was different i wouldn't really be able to tell like a key like if i owned an nft that was a digital key but i wanted a physical representation of that key that i could use in a door or something that i could print from something like this yeah yeah and i guess the one thing i was kind of unclear about is like i'm driving mine off of uh token ids but i could imagine like everyone kind of handles token ids differently and i ended up using the chain link random vfr but once you actually had like a series of numbers it would be really interesting because you could actually read it yeah cool well thank you guys awesome well thanks so much and uh yeah i hope to hope to see like a service that lets me uh get a physical copy of my nfts uh we'll finally find a loophole in making more copies that are not fundable exactly great thanks again and now we are ready to move on to our next team and that is uh project spring up and i'll ask tim to uh kick off with uh the video for one second so we're building an application that allows you to support creators and rewards from it can you increase the volume of the video spread your content and expand your reach the motive behind this was to enforce transparency behind supporters and creators and benefit both parties it is a wrapper behind rated network and ave protocol it uses rated payment channels which enables parties to exchange tokens off chain without requiring layer 1 for every transaction it uses interest in earning ave tokens to generate more incentive allowing supporters to earn rewards for their subscription on the other hand the creators can share exclusive content to their supporters talking about the implementation creators can create different subscription models for different rates and share them publicly supporters can deposit dye tokens into the ave protocol using the application and get away tokens in return these can be transferred to the rated account and can be used to pay the creators directly now here's the demo for the application so this is the landing page for the app i already have my rated node running locally in my metacount account metamask account linked to the app firstly moving to the creator section the creator gets a ui which can be shared with other supporters this section shows the number of supporters in the funds freeze currently as we are running locally the data is done also the section below shows the content which is delivered by the creator based on different levels of support now i will be copying the url and opening it this allows me to support the creator this takes the user to the support section where one can see the balance of eath die and ave tokens for metamask as well as the raiden account [Music] using the application one can deposit their diet tokens and get abe tickets in return for instance i will be depositing 100 tokens now as seen here the corresponding ave tokens are added into the account now i can directly transfer those ave tokens into my reading account as displayed here i have given the 50 away tokens into my raiden account similarly the user can transfer other tokens into his or her account now the supporter can create a payment channel with the corresponding creator and make the payment directly given below are the three levels of the payment which the supporter can subscribe to we are currently facing some issues creating payment channels with other users and hence they're not able to demonstrate by transferring tokens these these are our future plans for implementation involving deploying to me net we really had a great time learning and building this hackathon thank you awesome uh thank you so much team and team i uh yeah this is super exciting first of all thank you uh for uh still presenting even though you were not able to finish everything you wanted to do that's uh it's really great to see people continuing to still build and showcase what they have accomplished um i'll kind of kick off with one question i'll let the judges come in uh sort of um when you were exploring this thing what other ways did you kind of see people were trying for subscriptions um or doing any recurring payments on on ethereum and i'm just curious like what what you actually had to do a trade-off between before you decided to sort of tackle that problem yourself um so i would defer this to manov because uh he had more that was more of his specialty opinion are you there i think he's here yeah yeah hello yeah we can hear you uh yeah so basically uh we weren't uh aware of us any other subscription thing so we didn't uh knew anything like that before and so we were aware of that those things in web too but so we thought this is uh which i think this would something so doing that it using blockchain would make some i think impact and would be beneficial for both the parties awesome no thanks uh thanks for sharing that yeah there's a is a big missing piece that uh that we kind of need to still figure out and uh we can second recurring payments here i think i unlocked a whole new potential of applications in use cases what led you guys just curious like uh you care about this topic or like how did you decide to build on this or like build this particular thing like uh so it was mostly just a response to uh censorship that's uh becoming popular um on a bunch of platforms and um also it's just a smarter way of incentivizing creators to uh create uh the alternatives right now obviously patreon is the biggest one but um there's a lot of flaws uh on their model that i think blockchain sells better like i said center censorship's a big one also lower lower fees required um and then also there's just smarter ways to reward creators especially one way is rewarding them by if you stake them early on versus if you're sticking them when they're already popular makes a huge difference and you should be as a supporter you should be rewarded for that yeah that's great because that also gives it makes it easier to bootstrap a content creator when they're young right it gives more incentives uh to support someone when they don't have momentum yet and we've seen this very powerful already in d5 protocols you just it's they take off very quickly because there's usually a strong incentive to be the first one of the early supporters and it really works and before it was just absolutely impossible to bootstrap a network yeah agreed i'd go uh uh guys first of all like it's very cool to see you build um built a lot it looks like you learned a lot um and uh again it's a like kartik said it's a piece of infrastructure recurring payments and this and figuring out better incentive structures for creators is like a big big goal um so what's next what do you what do you want to do next with this uh where you want to take it so yeah i'd say definitely making the written payment channels uh work more effectively would be the first step um and then obviously deploying to mainnet would be the one of the final steps um in addition to that i would want to build out more of the creator functionality i think a cool feature would be having a giveaway where uh the entries would be based on your level of support uh so people with that are paying more and supported earlier have a higher percentage chance of winning winning that possible uh giveaway awesome uh yeah this is awesome i think it's uh it's an important problem and i uh i like that you framed us like anti-sensor ship as well as one of the key advantages um which is an important value one feature i've often wanted to see from platforms similar to this it's like the ability for the fan to sort of call in the creator like the creator doesn't have to be the one to sign up for the platform and say like fans you can come now it would be cool to be a fan and say like hey i want to give ten dollars to this person per month or something like that and leave it there in a in like an escrow bucket where it can be claimed somehow through some sort of proof uh just an idea but yeah that's a really cool suggestion actually uh well go for it i'm sorry i'm going to interrupt let's see oh sorry i felt like you were going to say something oh no okay okay well if there are no more questions then i want to thank uh mom and tim for uh doing their demo and i hope we get to uh finish off uh where you kind of left off with the state channel integrations and uh continue building thank you sure thank you awesome so uh we are almost at the end of this so we have three more projects to go um and uh next up we have uh team durple so uh i know justin will and ben are here so whenever you're ready feel free to share your video all right sharing my screen now you see my screen yes we can alright durple the future of forums hey guys i'm justin and i worked on the front end i'm will and i did full stack development i'm ben and i worked on the back end so durable is a decentralized social media similar to reddit with community owned subdurals how it works users can lurk comment post and update their favorite content anyone can create a sub durple contract as long as it implements the durable interface and every community is independently owned all right this is durple this is the front page here's some featured subtriples i'm going to visit d funny right now and i can view some funny posts like and i can click them to view them this one looks funny to me so um in order to comment on this i'm gonna have to connect my metamask wallet and it's connected and i can up up it like this wait for the transaction to go through and it's up derp and i can leave a comment wow this is hilarious and press submit wow that was pretty funny will thanks justin i could also go back view a different subdirl like d slash gaming i can look at these posts here these are pretty funny but i'm gonna make my own post and i'm actually gonna do the poo emoji picture because um i think it's funny it's not really related to gaming but it also sort of is i just wait for it to appear and there's my post right there so how did we make durple the react front end interacts with smart contracts using ethers.js and uh we made our smart contracts through solidity all right so some of our future plans we're going to deploy it on a matic network for low block times we're going to create a subdurple store for users to create custom subterples and we're going to get the community involved we're going to make them create custom sub-durables they're going to be malletable all right so check it out at durable.xyz we have a demo running on the gourley network right now all right um just a couple things to point out um we managed to play automatic uh test net so we do have it running on matic so right now it's it's really cheap to use so every single post only costs like a 10 000 of a cent and we use ipfs to store our data awesome well uh congrats on getting in on unmatic in the last 24 hours um that was a really cool and uh entertaining and uh just uh attention grabbing demo um my first question is how'd you come up with the name is this that play on words quadruple or something else um well the color for ethereum is purple and it's decentralized so durable that's great that's wonderful uh i'll i'll let a hard kind of calvin him unless i ask questions yeah guys i'll start by just saying um awesome like use of technologies here just technically getting it running on matic ipfs and just like building the whole thing out is really cool um i am very curious uh well and again it fits all the things like decentralization censorship resistance it's like it's fun it's a it's a great project um i'm also really interested in how uh you could have some of these subdurals um create their own like communities or would they have their own tokens or what are your some of your guys's ideas of what a subdural could be or could look like yeah so uh the implementation is pretty open there's only a few um like functions that you actually have to have in your smart contract the rest of it can be however you want so you can you can have your own um like token attached to your contract you can make your contract do funny things like you can make of votes down votes or something you can um you can add like moderation features to it if you want uh it's really open because durple doesn't really care what the smart contract does as long as it follows the interface cool okay interesting so uh that a subdural is a contract correct and anyone could build an interface on top of it to like recreate the content of the subdural yeah without requiring durable.xyz yeah correct that's pretty cool reddit doesn't have anything like that like a reddit api uh they do um but actually what we were going with with dirtball is actually the other way around so it um you'd use the same durable interface but you can switch out the contracts in the back because uh you're actually not limited to our contracts you can actually put in any contract address in the url and you can visit that contract however it wants to display itself interesting what was the process of of porting this to matic uh it's pretty similar to putting it on any network um originally we had problems because um the endpoints didn't support some of the methods that we were calling but then we worked it out with the matic team and we managed to just deploy it um using we used ethers js to deploy it and you can support any file type that you can host on ipfs uh yeah right now um what we've got is just showing images and stuff and text but um in the future we could definitely add support for more things in the front end so do you guys have any wild ideas for like uh subdural like anything to back your minds about like some crazy idea of what what what one might look like um i was thinking like um a post battle royale where you have to keep all the posts alive by up derping them and like they fight to the death by voting and whichever one remains the longest on the subtriple wins or something that's a really creative idea you can literally ddos by throwing money at the problem here yep amazing well i i hope i hope to see uh this more uh in the hands of other people here dude just uh make sure you share this on on the attendee channel so all other hackers can look at that and check this out too but uh this is really creative and super cool so thanks again team durple and now we are ready to move on to our second last demo so uh raphael i know you're here can i just get an audio confirmation that you can hear us and you're ready to talk and i'll share your video from my side perfect so i'll i'll present your video here and we can move on to the q a after great drained external adapter is being presented for f1 these are the i think you need to you might have not selected audio sharing because i don't think we can hear it we just hear it from your speaker's microphone no i did i think the uh the audio is uh a little bit low on on this one unfortunately uh i'll try this one more time but uh if you want i can't try to comment on the video also if the audio is better you know is it is it okay if i just mute it and then you just talk over it yes sure okay let's let's just do that yes so this is the nda and it's a external adapter from chinese and it gets data from randalov and drink love uh it gives us randomness it's a randomness beacon and you get the current signature of the randomness and the previous one so you can verify this is the setup for the external adapter it is a serverless framework it was built with and it's and there is the tests phase and then we deployed it on kovan this is a a solidity smart contract to get the randomness from this external adapter so you request it and in the order and you get the in the variable randomness you get this data and well the idea is that the external adapter can you can get different sorts of data from it and you you get to get a reliable source of data it's you can it have it can have a reputation and oracle's right and you can also add other sorts of offline of chain computation you can interact with other blockchains with client libraries and the idea of this project is to to be a data provider we uploaded this external adapter on market link on kovan and you can use it on your smart contract also in solidity and build something with it and the idea is to bring this to marketplace possibly to mainland and this is the results you can get it as a a a integer a number or you can also like bring other like the bytes that were provided by the random by the rendezvous so the future updates i was thinking also of getting this data with pubsub and build these bridges to possibly other blockchains to fetch this data but that's pretty much it awesome so i i want to kind of just see if i understood that myself because this is super cool so drand is an api that lets you offer sure randomness as a service and you have integrated that as an oracle service right now on test nets and you want that to be a bit more publicly accessible and available on mainnet soon did i miss anything yes there are other sources of randomness like vrf and some other ones but with drained it's this external that adapter makes possible to bring this to solidity and also there are other possibilities from this awesome raphael thing yeah sorry about my delay my internet guys um raphael awesome project um what what drew you to wanting to like pursue randomness i think it's an important thing very important thing for uh the blockchain space for so for a bunch of reasons but what what what drew you here like why did you uh want to focus on this yes it's a curious question uh i i mean and drained is used by fire coin uh for possibly some uh some governance uh between nodes and miners but it's a sort of you research things and they appear and you go you go after more information it's not a it's a research topic actually and i researched many of these sources of randomness and looking at their differences in their methods but it's a continuous research actually and i believe that it can be used like with nifits it's a obvious use case but for example with rand i believe they give a lot of uh useful information that you can build uh also other infrastructures from it on top of it other systems um some consensus indeed it's possible so i was trying to bring this infrastructure it's a small infrastructure but it's interesting to bring together those infrastructures very cool got uh two quick questions one is uh i i'm not i wasn't familiar with duran i'm sort of looking at the website but is is drint itself decentralized i believe that they have uh those rashes they can be verified from the beginning so the source of randomness is it is from this and you can't alter this source of randomness okay it's verifiable from the signatures from this chain of signatures okay really cool and then um i i googled what hezykasm means so how does this this this access to randomness tie to this inner prayer uh concept i was thinking about this concept and it i started developing a project related to ipfs and powergate and i kind of changed it and he named it a bit more objectively uh for trends and went with this path during the racquet it was like in the last days and it's a sort of confusion but it's an interesting project also is it causing its own it's open source it uploads ipfs files like address and it's a external adapter it is i was trying to make experiment with powergate as a connection in uh except with external adapters but it's a fusion of concepts maybe you think you're going to continue working on this yes it is on market link uh on testnet but i'm thinking of building a bridge and subtezus possibly or to polka dots and but it is available already to access this random number from solidity on coban and but i think you are going to on this direction of bridges i believe for now and trying to use oracles trying to use chaining for that because it's an interesting thing also i believe on this interoperability with chains like it's a synchronous but it is it's also a difficult topic for research awesome well rafael thanks again for uh for showing us what you built for this hackathon and i hope that uh you give a chance for others to try this out and uh also uh give give the fall coin team a heads up on this thing i'm sure they'll be super interested in uh in this being um awesome so um we have our last team that's uh going to be presenting now but before eric kind of jumps on i want to just give a quick note to our judges we forgot to add this last project on the sheet so what you have to do is just refresh your page and you'll see raw files project there it was not there before so just make sure you click somewhere and set autosaves and refresh so you can see it and with that we are ready for our last demo for the day and uh eric feel free to start off with the video great to see you again in this hackathon introducing reach ide i'm eric lao and this is my project for ethonline first let's look at the problem statement which is adapt programming language that comes with a compiler while this is extremely powerful there are some things that make this non-optimal for developments it is entirely command line based you can power through the command line and see results on the command line there is no ide support for the rich language model which has a lot of nuances that you will need to know about for your dap to compile properly and while reach can compile to ethereum contracts how you integrate with ethereum in your development process is not obvious to solve this problem i wrote a vs code extension to provide ide support when developing decentralized applications with reach this gives you live highlighting for reach compile errors quick fix suggestions that come directly from the reach compiler hover documentation for all reach statements and deployment support for ethereum contracts let's take a look this is a sample project from the reach tutorials let's say you pasted this code into your editor and you have no idea how to get started since there is no ide support simply go to the vs code marketplace and search for the reach ide extension click install and this lets you get started with reach development right away without any additional setup when you go back to the project you can see that the reach program now has syntax highlighted by installing the extension the reach compiler is set up automatically if you make some mistakes in your code that violate the rules of the reach language you'll see those errors highlighted without even needing to save the file for example alice has a field that is meant to be public if you forget to declassify it you see an error with all of the relevant information if you try to fix it but you type the wrong thing the compiler tells you about it and gives you some suggestions that you can use to quick fix all of these errors and suggestions come directly from the reach compiler and are presented in a way that is convenient to the developer additionally the ide extension provides hover documentation for every restatement see all these statements here if you're wondering what special meaning they haven't reached hover over each of them to view their documentation they even have links that you can click on to bring you to the relevant sections of the reach website if you're starting from scratch simply insert the read snippets to get a properly compiling template when you're done right click anywhere to bring up the reach menu options for example you can actually compile your breach program or run it which triggers the end to end test including the front end now that's all great for testing but how do you deploy it from the menu simply choose the option to copy the ethereum contract bytecode to your clipboard this gives you the entire compiled bytecode that you can paste into any wallet to deploy onto ethereum then copy the contract api to your clipboard to interact with the contract however you want now let's talk about how this was made this solution makes use of the reach compiler in the background for live compilation results quick fix suggestions and ethereum contract generation it provides hover documentation sourced from the reach reference website and the language features are implemented using the language server protocol which makes the solution easily extensible to other code editors as you can see in the image below this project implements a vs code extension and language server and the server makes use of the reach compiler directly if the reach compiler is updated for example for syntax changes or to provide better suggestions the ide will make use of these automatically check out my blog post on medium for more details on how this project was developed the next steps for this project are to make use of additional language features such as code completion and context awareness for even better developer support and deeper ethereum integration such as automatic contract deployment to minimize manual steps this project is available right now on the vs code marketplace all you need to do is search for reach ide and click install then you can use it right away to speed up your developments of decentralized applications thank you for your time amazing thanks so much for uh for that video and the demo eric um i do want to give the judges a chance to kind of ask questions but before that maybe i think uh for those who are going to watch this video later maybe you can just sort of level set this thing by just talking a little bit about what reach is and sort of what it enables versus solidity and we can just kind of go into questions from there yeah so so reach is a is a that programming language and and some of its features are like safety guarantees it when you do a compilation it checks a lot of a number of theorems and it does some form of verification to make sure that it does that your program doesn't break those theorems so so for example solidity is is an intermediary intermediate step so when you do the compilation it actually compiles it to solidity in the background and then compiles to buy code afterwards but in between it checks a number of things to to make sure for example if you don't lock up funds accidentally into the contract and things like that yeah amazing eric i actually didn't know much about reach at all and kartik asked the question i was going to ask you too which is to give a little bit more background on rage um back to the project though um the vs code extension and just the general like slickness of how you implemented this is really impressive and it does seem like a really great service like you know we all know that the ethereum ecospace needs ecosystem needs more development tools so it's like awesome to see stuff like this uh come into existence um do you think that reach is like the future of uh of ethereum programming and like what do you have a relationship with them or like what how did you draw how did you get so focused or become such an evangelist for uh the reach uh reach approach well actually actually i just heard of through this hackathon but i i i checked out what they have currently and they didn't have any ide support so i thought might as well build an ide for it um but yeah um i think on your question for example i think there are some things that reach can do but for example i'm interacting with some other existing contracts at least from the tutorials that i that i've seen um that's not something that's that's not part of the intention so it it's to build some program or contract that you know has everything defined there at least from my understanding so there are certain use cases for it cool the question does reach compile to anything besides solidity um it supports ethereum and algorithm i think um okay yeah cool yeah i mean this is uh well done in in using the sacramento to build something that i'm sure is critical to to reaches a community it really highlights what's like awesome about open source development um is there a lot more to do is this ready to use are you going to try to use it yourself to develop something or how do you roll it out to users so so it's available right now and it is usable um so it is for example you can use it instead of just relying on the compiler for for checking your program and so on um certainly there are a lot more features that can be added more from language specific things like more context awareness and so on and those are kind of certainly those are certainly something that can be added as we move forward yeah i would definitely encourage you to continue working on this it seems seems great thanks have you developed uh and solidity uh directly insulin yeah well i've done some soda development before yeah what do you think like uh would you use your own id now with reach like what advantages would it bring be faster more secure yeah i think if i had a a program that made sense with um what reach provides i think you know i would i would do that okay really interesting amazing well um yeah i think that the reach team will be uh definitely happy to learn more about this uh and uh and especially when it's uh it's a really small team kind of working on the language specifications uh this would definitely help them get reaching the hands of a lot more people so uh thanks again eric um i hope to see this on i think it's already in the visual studio uh store so uh marketplace so uh i hope that other people will try it out and give you a lot more feedback and uh thanks for demoing today so uh with that that was our last demo for the day i want to kind of just thank everybody who stayed around for watching the rest of the demos from the attendees side as well this will be up as a video recording on youtube shortly so our sponsors can also check these videos out with the comments and i want to thank all of our judges heart lassa and calvin for kind of giving us their saturday afternoon and morning to uh to kind of talk to a lot of people from so many different parts of the world and then uh lastly mo ana for helping run this thing super smoothly on our side uh this was our first attempt coordinating four events in parallel so uh we kind of got to see a bunch of things around uh the good and the bad and uh we have finally a good rhythm so we're ready for tomorrow and the day after for the rest of the judging so thanks everybody uh we'll see you uh tomorrow uh for the remaining uh projects and i hope you have a great rest of the day thank thank you thank you 