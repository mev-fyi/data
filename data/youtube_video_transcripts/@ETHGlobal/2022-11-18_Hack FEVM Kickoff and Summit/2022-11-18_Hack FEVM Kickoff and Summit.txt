good morning good afternoon and good evening everybody my name is kartik I'm one of the co-founders of eth global and I am super excited to welcome all of you to hack fevum thank you so much for joining us on eveglobal.tv this is what we're going to be using this entire weekend for all the talks workshops and all of our demos at the end on Sunday so if you are using this for the first time I really encourage all of you to sign in and say hi and you can chat with us we are monitoring this chat if you ask a question I'll be able to look at everything and answer this stuff directly on the live stream and for everybody that's going to be participating on equal dot TV on this chat we'll also be receiving a Pro app for being part of this event all right let's get right into it this event is brought to you by Eve Global and for those of you who are joining any Global event for the first time we're an organization with a very simple Mission our goal is to onboard thousands of developers into the web3 ecosystem and we do this by running hackathons and Summits and today and this weekend is going to be no different so let's talk about what the next 48 hours are going to include we have an incredible Summit of talking about all things filecoin virtual machine we're going to bring on a lot of people who have been behind the scenes making sure that this runtime and this whole new innovation is is ready for all of you to use and make really amazing things and also to get feedback so they can improve things and we're going to bring on all these speakers to talk about what is possible and where things are going and then in the same time we're going to be kicking off our first ever sevum hackathon so let's go right into all the details about this hackathon this is the world's first ever fathom hackathon we're gonna be giving everybody an early release on how things are going you'll be able to chat with everybody uh to understand how to best use this runtime and build amazing things and the best part about this thing is that this event's already huge there's over 400 Hackers from 70 different countries participating spanning 19 different time zones this is a online weekend event by youth Global which means that all of us will be pretty pretty involved in staying up for the next two days and we kind of put everybody on a map to see where they were all coming from and it's super exciting to see representation from six different continents so thank you so much for joining us for this incredible weekend and I can't wait to see what all of you build and meet all of you and say hi to all of you on Discord all right let's go right into it not only do we have 400 plus amazing developers trying to build things on fvm we have 22 amazing mentors who are going to be here all weekend making sure that you get all of your questions answered and help to really do anything that you want to do as part of building your project and to top it all off we're going to be giving fifty thousand dollars in prizes and again I'm going to be sharing all those details with you shortly I want to really thank the ipfs and filecoin teams we're making this event possible they're going to be here making sure that you have the right support and you all have a really positive and amazing experience in building incredible web 3 projects so let's talk about this weekend lots of things to cover from from our end uh we're going to talk about how team formation Works how you can get help all the prizes you can win uh impact by judging a submission and also after all of that we're going to run into the summit piece and kick off with our first set of talks so the most important thing here is that everything that we're going to be doing over the next two days is going to be on Discord so please make sure if you are a hacker that you have gone to your dashboard on eighthglobal.com and connected Discord connecting Discord will give you access to all the fathom private channels these channels are only available to people that are participating at the hackathon so if you are hackered you will have access to these if you are a mentor you will be able to see this as well and you get to ask questions here and see everything that's happening on Discord if you know if you want to just confirm if everything is right you should see that hack fathom category on your left sidebar so just quickly check if you can see this and this is where everything will be happening we'll be making all the announcements covering everything around judging and all of the prize info and mentorship is right here there's also a dedicated channel for getting help so you can just click on the mentorship help Channel and ask any questions and we'll be there to answer all these things for you and clarify anything that you may be confused about and also we'll be giving and sharing a lot of calendar invites for some important toxic workshops and things like judging and submission deadlines so don't worry even if you are currently sleeping which you want to get to hear this uh you'll know exactly when things are happening and they'll be normalized for your own time zone and the website is our source of Truth which means everything that's happening here this weekend is listed on the website down to the minute and whatever the website says is what's happening so if things are running behind or something changes uh which it won't uh you can check out all of that directly by heading over to the website we really want this thing to be asynchronous and as as different as possible we have 70 countries in 19 different time zones so we're going to try to make sure that you are at your best setup to take advantage of this entire weekend and the only synchronous part here will be Sunday judging which I'll talk about to make sure that we can all see and enjoy what everybody builds and as a reminder the website is fedam.eth global.com or fbm.edu google.com also works all right so how does the hackathon work so this is a unique event for us because this event is a large introduction to hundreds of you to really explore what this virtual machine can do and as part of that the most kind of question I got was what can I do here and how is this different than all the other events we've done I'm going to cover all of that in a second so officially the hackathon has kicked off which means you can start working on your projects now and you have 48 hours to build anything that you are interested in and get to demo and present that to our judges on Sunday uh you can work on a project with a team if you're working with somebody on X team your team can have up to five members and it is also totally okay to work on your own you don't necessarily have to have a team you can have one person on the team or two three four or five uh the submission deadline is 12 p.m Eastern Sunday November the 20th in relative time that is 47 hours and 40 minutes from me saying this sentence so we'll be giving Apple reminders just to make sure nobody has any confusion around the time zone normalization but you have 48 hours before everything is due from a submission standpoint now let's get to the question that we've been asked the most what can I build this event is to highlight that the most important thing piece here is that for this event fvm is evm compatible you get to use everything from tooling to libraries to your Dev tools to existing code all out of the box and really deploy things that take advantage of storage as a primitive now with solidity and smart contracts and that gives you access to a lot more new things that were previously not possible before you have a lot of new unique interesting applications on decentralized compute you can do a lot more interesting Integrations with ethereum uh you have a lot of stuff that you can do that is specifically native to follow coin on retrieval markets and storage derivatives uh or replication workers and data availability or just renewing contracts based on conditional logic you can automatically now make cross-chain applications as possible that take advantage of the filecoin virtual machine and different chains and there's a lot of stuff around data dials and integrating with content and data to be now programmable there's a lot of room here for really really creative and impressive and interesting ideas especially that now that you have evm compatibility and you get to use a lot of things that you already know to how to do on on solidity and on ethereum and the big most important thing to remember is that experimentation is okay this is a 48 hour event we we know that you can't do too much in in the short time and that is totally expected and known and we really want to encourage all of you to start small this is okay for you to have a large idea and only gets halfway through uh implementing some of those pieces that you wanted to do on Sunday or by Sunday so don't try to finish too much and compromise on anything from sleep to rest to just making sure that you are well suited to really function and do things that you're excited about and because you're also going to be trying this thing for the first time the goal is to really explore the possibilities of ideas and really make sure that you can see what can be possible and used now after Sunday to really continue building those projects so starting small is also okay if you have a grand idea you can just aim to finish a few features for it over the next 48 hours and one another important thing here is that we really want to make sure that fvm gets better and fathom is an exciting runtime for people to build cool Integrations leveraging storage so one of the other highlights that we want to bring up here and make sure that we get to prioritize is that if you think something could be better you get to actually actively improve the protocol and the runtime and the feedback that we're going to get here helps everything get really even better for the next set of Builders and if you are interested in doing something more than just playing with this over the weekend there's also a early Builders program you can see that on the fbm.falcon.io website so if you're interested in taking a project further there's direct support and a next batch of Builders program cohort that you get to be part of to get direct feedback advice and Integrations and just work with amazing people that are building similar things on the same platform all right so let's go into some of the key other pieces rules and criteria so this event is going to be slightly different uh as part of being in a global event the rules and criterias are fairly straightforward for for all of our events which is everything that we're going to be doing must be done from scratch and you cannot build on a pre-existing personal project we want to make sure things are fair to everybody that's participating from across the world so adding things to something you've been doing for months or or weeks or even days in in your own free time on a personal project makes things kind of hard to really assess um and keeps things a bit unfair however we are going to be making one exception here for this this hackathon and that exception is that if you are are trying to Port one of your existing civility projects to be compatible with and run on fem or fathom uh you get to do that and that is allowed and that means we get to really see how compatibility works here we get to explore how we can do interesting Integrations between two blockchains or two or more blockchains and uh that piece is allowed so if you are interested in importing something that you've done before two entirely this new runtime that will be allowed and there may be some education nuances here so if you are in this category uh just send us a ping and we'll be able to clarify this for you the other piece I want to be really uh cognizant of is that only RSVP attendees can win prizes which means that if you are working on a team please make sure that your team members are listed under your teams section on your dashboard if they do not show up and if you will win a prize then we will not be giving prizes to anybody who is not listed as a team member so you have today to just really make sure that all that is ironed out and that all of your team members show up on your dashboard and if you have any other questions that we haven't addressed you can ask them directly here on this on Nate global.tv chat and I'm going to look at this right now or ask us this on Discord or email or any other way you can contact us we'll be monitoring all those channels all right let's talk about judging how is all of this going to be set up so the most important thing here is that submissions are due on Sunday 12 p.m Eastern that is in relative time 47 hours and 30 minutes from now this will all be done through your hacker dashboard so if you just go to 8th global.com you will be logged in and you'll be able to see what is cement you'll see all the information that you need to do and once a submission is done from your side you will have to go through the main judging process the main judging kicks off immediately after the summations are due which means that as you are submitting you will be told what the next steps are and we'll do a first come first serve basis for assigning a judging room to all the teams you will get to present what you built to an amazing set of judges and then in parallel all the prizes will be judged asynchronously from the protocol labs and the ipfs team and if they have any questions they'll be able to pay you directly on Discord but project judging for any prizes is going to be asynchronous and in the background while domain judging is going on now here is how the judging works after you set up in your project you'll be told to get to a zoom room where you will be assigned a room for a judges who you'll be presenting to you will get seven minutes in total to present to one of our judges and that is broken down into three minutes for questions and four minutes for a demo uh you are allowed to make a live demo happen which means you get to share your screen directly uh on zoom and demo what you built you will still get four minutes I will cut everybody off on the four minute mark because there's a lot of projects that we have to do in a really short amount of time and then the next remaining time will be moved over for Q a we really recommend that you record a video of your demo instead of trying to do everything live if you get the time try to just quickly record a screen share of your demo up to four minutes and submit that as part of your submission process because if something goes wrong or something takes time or if you're trying to do some main transactions on a blockchain that's going to take a little bit longer uh you want to be cognizant of the fact that you still have four minutes in total and if something goes wrong at least this backup works really well for everybody else to also see what you did and spend all this weekend working on so really don't do this last minute if you're listening here I really really encourage you to at least take one hour in total to make sure you have all the stuff for submission in the form worked out as well as a demo recorded as a backup in case the live demo doesn't work last minute all these details are going to be on your dashboard so you don't have to worry too much about remembering any of this will be prompting with a lot of this thing from calendaring advice to Discord messages to just your dashboard really telling you what the next step is the other important piece is that there's a lot of prizes that uh we're giving and I'm going to cover a lot of them in in a couple minutes and when you are trying to win any of these prizes make sure you select that you are trying to win those prizes as well and uh in that submission form and only if you select that is when the ipfs and Falcon maintained will know that we have to evaluate your prizes so if you forget that there's no other way for somebody to know that you wanted to be eligible for a particular category of prize so make sure that you do forget don't forget to check that box and do remember to check it all right and of course there's a lot of you here who are joining us for the first time there's a lot of you here who are joining us from web 2 for the first time as a season engineer so I want to welcome all of you here and really kind of talk about what happens if this is your first time uh participating in in this event uh this event is designed to be friendly for everybody with any skill set uh this has an intentional goal around onboarding a lot of existing developers into web3 and we have amazing content and plans for how do we onboard a lot of beginners and also make this equally interesting for anybody who's been in this space for a long time that means there's a lot of talks and workshops some of this has already happened some of you already joined us on a lot of these workshops and brainstorming sessions everything is on the website from the schedule we're going to kick off a summit in about 10-15 minutes right now directly and uh uh our goal is to make sure that you are as informed as possible and you get to learn about all the exciting things that are happening on The Cutting Edge so don't be afraid to just jump in learn about what's happening or join any of these toxic workshops or just simply ask questions there's a lot of people here who want to make sure that you are successful and you are able to learn and get your questions answered and also all this information is recorded which means that if you are in a different time zone and if you want to sleep in 10 minutes but you want to really catch the talk that's in two hours uh you'll be able to watch that immediately on YouTube the second it finishes and uh that means you have a 60 second delay in catching up on something after it ends and all these things will also go be reflected directly on the website for this event fevm.e global.com and you can just head over to our YouTube channel to watch anything that comes out of this weekend directly on demand and if you are still looking for a team you can head over to find a team channel on Discord and reach out to all others that are looking to also meet other potential teammates and really work on exciting projects and of course there's so many of you from so many parts of the world so don't forget to introduce yourself into the hack Venom chat Channel um we're really excited to meet you and see what you're excited about and where you're coming from and again just to remember if you can't find a team that's totally okay if you want to work on a project on your own and use this as an opportunity to learn something or learn how to deploy something on feather for the first time that is totally okay you don't need a team to submit a project you get to work on your own as well and in case you haven't seen this yet you also have access to a tool on your hacker dashboard to find potential teammates from this event you can look for people who are experiencing certain skill set if you're looking for a front-end engineer or a designer or a back-end engineer or somebody who really know smart contracts you get to use this on your hacker dashboard to find other team members that can contact them and see if they are also interested in working with uh you this is a double opt-in so if you are looking to be found on this database you have to go on to your hacker dashboard and check the box saying I would like to be contacted by others who are also looking for a team so give that a shot and we're also doing a information session shortly later today so just check out all of those details on the website now the other couple things are that this is a really tight weekend and there's a lot of things going on so to make sure that you have opportunities to get feedback on anything that you are either stuck on or want to know more about or anything that you are trying to understand better so we're going to be hosting a feedback session with the the filecoin team uh this is tomorrow 3 P.M to 4 30 PM in relative time this is going to be man this is hard 29 hours from now uh 20 28.5 hours from now and uh you get to uh come in get feedback on what you're building if you are trying to get some questions answered you get to just hop in and this worked kind of like an office hour still be the people there to make sure that you are unblocked on anything you're excited about and if you want to just show off what you've been building and just get feedback on how to make this even cooler you get to do that right now so check check this out and you will be seeing all this stuff on your infocenter and all of our schedule websites too and lastly we want to talk about the code of conduct even though this is an online event all of our rules and code of conduct still applies to this event and in short please be respectful and harassment and abuse in any form will not be tolerated all the rules are listed on e-global.com rules and one quick thing to Just note is that anything that you build is going to be solely owned by you so all intellectual property belongs to you as a hacker and we want to make sure that you get to maintain the full rights to everything that you're building and if you have any other questions or anything that we can clarify just ping us on email or Discord or anywhere else you can find us and we'll be happy to answer those questions for you and as a reminder the website is fathom.global.com that has everything for we're going to be doing the next 48 hours all right before we kick off with the summit I want to quickly talk about all the amazing prizes that we have and then I'll stop talking and get to listen to a lot of more amazing people talking about all the things that they've been working on so a total of thirty five thousand dollars will be awarded for this event from the ipfs and falcoins team and to quickly talk about what these things are let's go right into this so there's a lot of prizes that you can win for just building cool things on fathom uh the grand prize for the best and the most interesting project will be taking in six thousand dollars and there will be two runner-ups for the same category for the best and most Innovative use taking in three thousand dollars each and then there are going to be 10 recipients who will be winning 500 who are also going to be qualifying for the most Innovative use of having then there are subcategories for how you can best check out what is possible and extend the use cases here so the best use case for landing and D5 will be receiving three thousand dollars there's going to be two winners here and you'll have bonus points for also integrating any storage retrieval Market use cases as part of uh this this category we also want to make sure that we get to do some cool experiments with data dials and the best you use of famine within a data dial will have two recipients winning three thousand dollars each then there's also a category for the best building blocks such as building native taxes or amms or other Primitives that will be useful for others to build on in the future and there's going to be two three thousand dollar recipients for this category as well so these are all the amazing prizes and we're going to disclose some more later on the website and on Sunday so check out all this information on either your hacker dashboard or if you want to find out specifics about these prizes on how you qualify the documentation over the specific nuances on what is and isn't allowed you can go to the event website and click on the prizes section and you'll be able to see all those details immediately and finally just before we kick off the summit as a reminder we really want you to pace yourself I know this is a week in hackathon but do not work on something at the cost of your health or sleep we really don't want this thing to be exhausting for you and we really want you to have fun we're going to be here making sure that you have all of your questions answered and at the end of the day this whole event is about experimentation and learning this is the first large-scale Global event on fathom we have no idea what's going to happen in terms of the cool things that we're going to see and that's the best part and and we want to make sure that you get to try out these new things instead of treating this as a competition this is not a competition at all so with that happy hacking everybody I will thank you so much for listening in we're gonna see all of you on our Discord and if you have any questions about the hackathons specifically you get to ask these questions on Discord or on inflow.tv but I'm gonna stop talking now and get right into our incredible summit we're gonna have the next few hours jam-packed with amazing technical things that you get to do on the fbm runtime and this kicks off the fathom Summit so an amazing set of talks here today we have six talks we're gonna go into uh we're gonna bring on Molly to give a keynote on what VM is then we're going to have Sarah talk about the compatibility or pieces of evm and fevm we're going to talk about glyph and zondex on just how do you make tooling even better to make sure you are able to really build cool things and and quickly with John and and Noah and Zach's going to talk about just what it looks like to program on febum and now you get to just go get started quickly and then we're going to bring on a lot more people to talk about Glacier dialogue garage style and the boot camp that we're doing to get all of you more involved into this ecosystem with Puja closing off today's Summit so with that I want to welcome our first amazing incredible speaker Molly on stage I'll ask Molly to turn on her camera and kick us off with this amazing event hi Molly how's it going good hi Karthik excited to be here excited to have you this is this is going to be exciting 400 people amazing well welcome everyone uh I know this is you know an exciting kickoff to um to the day and the weekend um and so pumped to share a little bit more about uh Falcon Virtual Machine what it is um what you can do with it I'm gonna share a lot of uh my my favorite ideas the things I'm most excited about people potentially building maybe maybe in this Summit actually so I'm really really excited to to share that with you um but you have an awesome lineup for the rest of the day as well to dive into even more depth in how to get started I know we have some folks who are coming from the existing kind of fvm community we have other folks who are brand new to this um so I'll try and uh fit both audiences um but you'll be getting even more layers of depth from from other people kind of throughout the course of the day um so give me a second I'll share my screen and we'll get started all right anyone tell me if that looks terrible otherwise we're jumping into it um so for context my name is Molly I lead the pl engineering and research team uh at critical Labs which is building the Falcon Virtual Machine so the core of all of the technology that then enables all of you amazing Builders to write your own amazing smart contracts or new layers of programmability and that's really what we're most excited for with fvm is bringing all of this on-chain programmability being able to act with filecoin actors or bring any existing uh you know defy or lending or other contract over to the falcoin network this has not been available in filecoin so there's lots of latent demand for people to be able to kind of access and and bring their own programs into filecoin there's a lot of opportunity as well to kind of use everything about Computing that we know and love to improve filecoin in all sorts of great ways um automating repetitive tasks making sure that when people are wanting to store data that they can do so persistently over time without having to get re-involved in the network to renew their deals after five years um and making sure that that as we we generate new contracts they're solving real problems for people um we sit in in falcoin world at this really exciting intersection um where people are both building um you know kind of core infrastructure tools but also combining them with the new really exciting kind of like blockchain Financial Primitives that exist out there and so this is you know I'll tell you a little bit more about some of the the areas that I'm most excited about um but but this is kind of like a whole new horizon of what's ever existed before and we're really excited for you to Trail Blaze um for others to follow and others to see you are the Lewis and Clarks of uh of going into this and we're really excited to uh to see what you uncover um this is a super big deal for us because there's now all of these new applications that can possibly exist and it enables developers like you uh to customize what the filecoin network can do for us besides storage and retrieval there's all sorts of exciting things like data Dows liquid staking lending decentralized compute um and a lot of other ones um being able to like replicate and repair deals over time nfts with you know built-in long-term persistent and verifiable storage just all sorts of exciting things become possible um and this is you know you you are becoming the Builders of what all of what filecoin can do for the world and we're really really excited to have you um and I want to dive into a couple of these more detail because some people are probably thinking like data Dows what's that what does that mean so maybe to to explain a couple of the the potential things that become possible here um first um and most obviously is staking and Loans this is a super huge opportunity we we have not had a you know a set of available VM Primitives that allow people to build contracts like connecting our Falcon token holders with storage providers who are offering core Services into the filecoin network and so this can kind of you know bridge that Gap help token holders put their resources to work within the Falcon economy and similarly help those storage providers get access to Falcon liquidity so that they can make you know more and more storage deals to store useful data because in the Falcon Network that requires them to put up collateral so that the network can ensure that they're offering those Services really effectively and this is a really exciting option as well because those are testing their resources in a useful for all that an opportunity for share in there you know yield uh coming from from that allocation and so um that's super super exciting another really exciting thing that becomes possible with fvm is all of that information on how a storage provider has been behaving in the network in Falco and over time what has been their success rate in deals how much data have they stored how reliable are they as a participant in this network all of that information is available on chain and so you can actually generate reputation scores for these storage providers and use that on-chain data to Power Smart contracts that are making much smarter allocation decisions for how a loan should you know what what interest rate should be required what sort of collateral should be required from Storage providers all of those things you're informed with all of this Rich on-chain data to make really you know good decisions about how to allocate those resources and you can even do these you know of course as as like you know collectives and Dows and Mining pools and all sorts of really exciting things things um and so we're we're super excited about people who are you know building in this space and also building Primitives that others can build upon um as you as kartik mentioned there's lots of bounties specifically for people who who dive into this area um and uh super uh oh actually one other thing to to mention here that's a useful primitive to hold on to um there's a a way for storage providers to set the multi-sig of their um kind of like the wallet that we call it an owner address but it's the wallet in which they get Block rewards from the network which is separate from some of the other wallets they have for their workers who are doing work within the network and so that like um owner address can be a multi-cig which can then be shared between multiple different parties and that can you know increasingly secure um you know lender assets with other third parties to make sure that um you know the storage provider is kind of guaranteed to to behave correctly within that system um another area that's super exciting there's already a couple of groups that have started building in this space but still a lot more opportunity to push forward is around Perpetual storage deals we know that lots of people when when engaging with um you know blockchain search networks or even in hackathons like this they really want to just store data long term they want to write once and not have to worry about it um right now falcoin Network optimizes for about one and a half year storage deals which is already pretty long compared to something like AWS where you have a monthly bill you have to keep paying um but when we're thinking about you know long-term assets like all of the neutrino data that CERN has put on the Falcon Network or the internet archive which is storing data on the Falcon Network they kind of would really like you know 10 50 maybe even 100 Year terms for for the data that they're putting on and they'd be willing to put up a lot more collateral as kind of an endowment for making making those deals over the long term and we really you know Falcon as a network really wants to put users in control of how they're replicating and also you know the the longevity of the data they put in the network um and so a whole new plethora of applications can exist here that are building on top of filecoin's verifiable storage Primitives but offering all sorts of long-term deals Lighthouse is a good example that's already started um doing this this long-term storage uh and you know Auto renewing of deals and making sure that you can kind of store once but I think a lot more kind of like continued innovation in this space is super super welcome especially on groups that are taking different strategies around how to um kind of do long-term endowments and things like that um and you know there's also the core building blocks that make this even easier for other people to build around you know repair Bots that monitor a specific CID a specific Content ID for data and then automatically repair and make new deals with storage providers if they ever see the number of replicas drop or folks that are doing kind of data bounties where all you have to do is give it a CID and then anyone who stores that Cid in a deal in the network can unlock the Bounty um kind of locked up within that that contract these are you know super useful and super exciting and building on top of proofs of storage that allow you to verifiably check falcoin network does this for you automatically every 24 hours making sure that all of the data that's been stored in the I think we have over I think it's 250 maybe 280 at this point I I'm having a hard time keeping track but that's the number of petabytes of data that are stored in the falcoin network today and all of that is being verified and checked every single day to make sure that the exact data that users decide to store is being stored persistently um and so this this gives you you know a lot of benefits and also solves kind of a critical user problem say for other web 3 networks for nft holders for archivists for anyone who wants to like hold around data for the long term and so really excited for people to push in this area and make sure that um you know Falcon's mission to make sure that we have a robust foundation for humanities information is is achieved next area is programmable storage tools this is super exciting and there's a couple of groups who have been pushing in this area um but the example here is the on chain dot storage solution so you can go and look up that website and see see what they've been building but these are things like multi-protocol storage retrieval Assurance contracts where you could for example put up a um uh a you know amount of collateral when a storage provider makes a deal guaranteeing that they are going to serve retrieval requests for that deal over time which then allows you to um you know have have very high even in this you know fully decentralized distributed Network have have a guarantee and a pot of collateral that you can slash it and and remove resources from if that storage provider ever doesn't behave correctly to actually go ahead and start making those um those like reliable retrieval requests you can do data bounties now with filecoin and a ton of other things and so we're really excited for people to program directly in with Falcon's actors to start making these things possible there's also all sorts of interesting things in the the kind of like Financial D5 space so you know because the fvm is designed to be fully evm um compatible the the fem design is actually a hypervisor so we are running literally an entire evm um in in the falcoin network you can bring erc20 tokens directly into the sefum network here and you can Bridge those to token pools and other chains you can write L2 networks that are plugging into filecoin to benefit from Storage power or security there's all sorts of things that are super common in the ethereum ecosystem which you can you know use those exact same bones and and connect that over here to the fem Network and so hopefully you know there's a lot of evm compatible chains out there this makes um writing smart contracts that move between chains or kind of have intersections much much easier because you can write exactly in the languages you're familiar with and the same contract work in in both places another Super exciting area for falcoin which is you know Falcon is this large distributed storage Network and maybe one of the things that people are excited about is decentralized access controls um you know we we definitely know about the centralized model of the world but how do you do this when you have many parties who are all collaboratively adding data to a a kind of pool of data together um things like Medusa which is a threshold encryption Network where you have a whole group of parties and they have to all kind of uh cryptographically agree before say access to a piece of data is um is unlocked um that that's a way of just in a decentralized way governing access programmatically for who can access some sort of data collection without even those parties needing to be able to see the um the thing that they're governing access to itself and so um you know this is one of those you split up many different shard words of a key and then if you combine together X many shards you actually you know unlock a key and all of those shards only get sent to the the person who's requesting and has proved that they deserve access um to that next chunk of data so this is super exciting and groups that make use of that can then do all sorts of exciting stuff an example of that is data Dows and so this might be the thing where you're like what is this I'm I I've heard of dows maybe but what are data Dows and I don't think this has been possible ever before in any other blockchain network so this is a super exciting new area for folks to be building in um and the the idea here the concept is you have some decentralized group of people maybe this is you know all of the editors of a Wikipedia page or maybe this is you know all of the people who are collectively adding um new works to some kind of like uh archival you know Gutenberg Berg Library thing and so collectively they gather use and curate useful data into a collection um together maybe they um they govern and and persist that data over time so that's involves pooling some resources to make sure that that data stays available collectively across their group but then they can also do really interesting things where they have kind of this Collective Dao structure where they can govern that data set govern what data gets added govern its long-term persistence but also governance access controls where you can potentially pay into that multi-sig in order to then get access to kind of the next chunk of data so that's super super exciting and then you know great you have that that shared treasury of all of the data that you're earning and you get to like hop into um you know using that for the long-term preservation and growth or for incentivizing you know even better data to be added to this system um so we're super excited about that um you know this whole cycle can very much be be automated by smart contracts to actually uh kind of like hone at the the growth and monetization of data collections as well um you know the the maybe last but not least one of the really really exciting things is actually being able to do compute over this Falcon data that's step three of our Falcon master plan which starts by building the world's largest storage Network um which we have already you know achieved by far the largest centralized storage Network um onboarding and safeguarding Humanities data which is work in progress as we mentioned something like 280 plus petabytes of useful data and then bringing compute to that data and enabling all sorts of exciting applications and this is a super exciting area to unlock um you know now this is one of the most valuable collections of Open Source data we have kind of like an amazing set of data sets already stored on falcoin that are already available and accessible here there's landsat there's all you know I don't even know 100 million nfts the million song data set uh Flickr Commons internet archives so there's a lot of useful data sets that are already be stored on Falcon and many more that are coming and so this is a really awesome opportunity for compute networks that want to kind of like interact or or compute over these large-scale pieces of data and where you want to send the compute to the data itself instead of having the kind of like retrieval and bandwidth requirements of fetching all that data and centralizing it um and so this this is already a really exciting area in web3 where you have um multiple other chains storing the chain history of their blockchains in filecoin obviously filecoin is a decentralized verifiable storage layer that fits really well with what other blockchain needs for long-term storage and so I know Solana for example is already storing um and backing up their chain state to filecoin which is really exciting but a great opportunity for more other blockchains to to do similarly and and find ways to to do this um kind of like more scalably and in ways that make that chain State accessible to other blockchains so you can use filecoin as a data availability layer as well which is a huge need for for especially Layer Two blockchains with um you know validator size requirements right now um we also expect that many layer 2 compute networks are going to optimize for different parts some are going to maybe be very privacy focused some very verifiability focused some really focused on performance and this is using all sorts of kind of exciting new tools zkps um fully homomorphic encryption all sorts of things like that to help power things like machine learning pipelines and other things that are interacting with data stored in filecoin and we want to use this really to help power the entire DSi movement especially around large-scale data science where scientists can better collaborate you know using data Dows on shared data sets they can publish those and earn rewards for you know valuably processing this data and making it more and more useful for different groups and just in general accelerate this whole data analytics industry which is uh you know a huge a huge huge community and a lot of value to be created there for the entire world um and so one of the things we're working on really in support of all of this is making sure that we're we're scaling the file coin chain as well hopefully all of the amazing smart contracts that you hear are are creating um are going to add a lot of um kind of like additional activity to the falcoin network um and we have a next-gen scalability solution called interplanetary consensus which is actually launching their test net in like a couple of weeks um but that's uh aimed to to come in uh kind of post fem launch which will then uh kind of enable seamless transferring of state and just scaling the Falcon chain massively um so really all of these things together help us build a scalable blockchain that really helps unlock um kind of like web scale applications um hopefully the next uh set of dapps that need large scale storage fast processing um and you know also computation over that storage um we'll see a great great home uh in Falcon and the tools you guys are building um and so quick quick rundown I know I'm probably at time and should hop but about how fem has been designed to kind of unlock some of these really really exciting use cases um fvm is seen as a hypervisor and this allows us to plug in multiple second layer VMS on top of kind of this uh virtual hypervisor layer and so what this looks like is that you can have both Falcon's built-in actors but you can also have you know entire other VMS things like the kind of like evm which is the first one that we have brought in creating fevm but also additional entire networks as well you could add say the agoric VM or you could add the cosmos VM and get access to IBC and um that's a really exciting direction that we think um uh this whole this whole area is going to gonna move right now we've really focused on bringing evm on top of fem but the the Milestone after that is focusing on kind of native wasm actors that are going to be running in bare metal fem mode um which can give you even more access to kind of the the core functioning of the system um so here's our quick roadmap um this is where we are today on East Global um as you as you can see from my background um we've already had a ton of Milestones related to building the fvm um the first one was in February of 2022 fem is actually already powering the falcoin network we launched fem into Falcon mainnet in July 2022 but we have not yet enabled that programmability layer or brought all of the amazing Tools around evm into Falcon yet and that is what is coming in our uh February release Here for Milestone 2.1 and so we already have our testnet up which many of you guys are going to be working with later today we're doing amazing hackathon songs like this one and really this is helping us build kind of like all of that great momentum into our main net launch date um and then coming after that we have additional releases m2.2 and M3 which are adding uh both access to those you know um you know bare metal wasm actors but also deeper protocol improvements that are going to unlock additional parts of fvm um we've been running an fbm early Builders program for the past you know number of months with this amazing group of participants um and I think we have over 100 people that have participated and they've created all sorts of useful tools for you to learn from build on top of um and synthesize into your applications and so there's an awesome fvm actor playground which is an amazing place to get started go check out this video from Jim pick there's um assembly script rust and Tiny go sdks and there's a lot of reusable components in here that you can you know build on top of in your hacks you know you only have a weekend so we want to make you super productive um and there they've also started building kind of early contracts in a number of areas um some of the groups thinking about nfts Perpetual storage liquid staking data Dows and so likely have some some early things for you to harness learn from iterate on collaborate with um really really exciting thing there but we also will have a lot of new open opportunities that no one's dived deeply into yet that are super super exciting around cross chain bridging or thinking about data discoverability or cross chain liquidity or all sorts of other really really exciting things and so we're we're pumped for people to to dive into those areas as well when it comes to resources definitely check out the fem developer Forum there's a lot of great questions documentation answers in here there's some great blog posts already for how to deploy your first smart contract to fvm and definitely all of the videos from The fvm Foundry program are a great place to to learn more but you are going to be meeting a lot of these wonderful humans this is the um the team that's building kind of the the core layer of the fem um you're going to be hearing from Sarah in just a second but all of these faces are going to be uh popping in and out of these sessions and there to help you and and help you find amazing opportunity communities and we're really excited to see what you build feel free to if you want you know to gut check your idea you can message me on Twitter I'm omomec28 or if you're in the the Falcon slack um I'm momak maybe just momak 2 there and feel free to get in touch I'm super excited to hear what you're building and give you any advice that might be useful awesome thanks a lot Molly this is uh this is incredible this was a whole uh massive overview that I got a lot of people excited and thanks for clarifying what data Dows are those are the most common question we got and this uh this is a good overview so uh well thank you so much and uh this gets us right into our next talk which is you know you learned about the surface area but let's go directly deep into what is the evm compatibility piece means here so to talk about that I want to welcome Sarah uh here and uh I'll let her take over welcome Sarah hey hi Karthik thanks for welcoming me um thanks Molly for that great introduction to the vision of um fvm as a whole um I'm just going to start sharing my slides in a second hang on cool yeah so um yeah I think Molly has painted a really good vision of what we hope to achieve with fbm and where we're at right now on the fevm so what I'll do for my talk is kind of go a little bit deeper into um the architecture of how the fvm is set up and also specifically um the evm compatibility piece of the fbm which then constitutes the word fevm uh yeah so and then for the rest of the day we'll have all my other teammates coming on as well as some of our partners to share a little bit about some tutorials on how you can build certain scenarios these are just ideas that you can have so Zach's gonna come on and talk a little bit about that and then we're going to have Zandex glyph come on to talk about the really important important tooling that you can use to build in your project as well so I hope my session kind of gives you a sense of the underlying concepts of what you'll be building on Okay cool so a little bit about myself um nice to meet all of you my name is Sarah I'm an fem deaf Advocate I'm on the developer experience team I've been at protocol labs for a few months now um I am supported by a really amazing team um you know we have a few faces here that are not on the board um they are still joining our team and so on um but these are like product engineering um strategy DX ecosystem yeah so we all work really well together and a lot of the content I'm sharing today is just me sharing of what what's been built but you know it's really owing to a lot of good work that has been done with my team before this so yeah we'll all be on the chats answering questions um I think we're all kind of on standby through this through this weekend just to kind of be able to support your projects so really looking forward to getting all the questions from all of you and and that's already started right I've seen some of you on the brainstorming on the Twitter spaces so that's been great um also a few of our partners that we work really closely with we operate in a very open source way and there's also no way that we could build um to the point that we've built at without the help of all these great Partners yeah and definitely more that are not featured here so I'll get a little bit into I know you've seen this slide a little bit earlier on but let me touch um a little bit deeper on it so um this one talks a little bit about how the fbm itself was inspired this was of course um started way before I joined the team um the the founding engineering team for the fvm they were really inspired by hypervisors the active model and the Unix kernel um I think what we envisioned was a system that host multiple runtimes and serve as a seamless connector between them this was really important as well because blockchain runtimes are developing really rapidly and harboring many different developer communities and so we want to make sure that we're able to accommodate them as they come in and I think it is the general ethos of the pl the protocol Labs Network to be able to build things that complement the ecosystem and allow people to build on top of that whichever tooling or systems or preference preference or languages that they have and I'll talk a little bit more about that and you'll understand the features of that with the fvm and how we've really worked towards implementing that um so we uh for the fall hypervisors piece um it is the underlying machine that allows multiple machines to run on top of it and so we're thinking you know today might be evm but in the future it might be other user-defined VMS as well um for the active model it acts very much as the interaction Paradigm between runtimes and the contracts or the workloads that they interact with um so you can so that's also why we call um the smart contract equivalent but not exactly an equivalent I'll talk about that in a second we refer to them as actors so you'll see the world appear a lot in our documentation and that's what we're really referring to over here um the unit's kernel itself was was a point of inspiration because of the isolation memory environment storage abstractions and so on um all of which are really accessible through a system calls or assist calls um so to kind of explain the difference between smart contracts and actors um the way you can think about it is that on the Falcon Network the fvm and fevm functionality is carried out by actors so when you deploy an evm smart contract to the filecoin network an actor is created that contains the ethereum byte code and executes that code on the evm yeah so right now it's more on the evm deploying to the Falcon Network through the fvm we hope that in the future we can think a little bit more about our Engineers right now thinking about things like parallelism how can we use you know I'll talk about the architecture later on but the way that we've built it allows us to see um to maybe be able to build um parallel ways of functioning across foreign runtime as well as the fvm itself so that these do like um you know title coordination things can move faster it's more performant so these are things that we're thinking about right now um you've also seen this slide but let me go into each of the points because I know Molly was was like going through the paint Division and so let me explain a little bit about each of these points um so these are different features that we considered when we were building out the fvm um I'll talk about the architecture in a second but let me also talk about um some of the features here and what we've considered so first of all it's based off on webassembly um using wasn't wasn't time under the hood in its reference implementation uh you can think of what I'm running at the hypervisor level which we talked about a hypervisor layer which talked a little bit about earlier on um as I mentioned it can power multiple runtimes like evm secure agma script and so on and because it compiles the native bytecode it really leads to great performance so for those of you who have used webassembly you know how efficient it is maybe in a web browser but here we're trying to use it within a VM instead and you know as you can see like it has really led to um the outcomes that we wanted um Watson gives a high-level language as a compilation Target so then devs will be able to use their preferred language to write their actors um so you could use languages that you're comfortable with such as like python JavaScript assembly script well we actually have a few sdks out um for Native actors and I'll talk about that a little bit later but you can see on the on the architecture diagram over here you have native actors in your foreign runtimes and so for Native actors we actually have developed sdks such as technical assembly script high-level rest and these are developed by our partners so yeah we look forward to the community building out more sdks for the languages that they prefer all the communities that they are part of um and so it wasn't also support uh also imparts this calls and declares them which makes it easy to order and start to analyze in the fvm so especially if it's the wrong sys call that you are able to you are then able to identify and isolate it whereas in other VMS typically you kind of have to like scan the code and identify that yourself so we think that that allows a lot more control for us um Watson also provides a Sandbox environment that assumes zero trust that again makes it easy to analyze an instrument so what that allows is that the fvm will then you know we can then have things like built-in resource metering for guest estimation and accounting and we and each Act also runs in isolation and can escape its sandbox through this course which is once again very much inspired by the Linux model um around low level system calls that's also a feature that we've considered again that gives a lot more control around this course that we want to make ipld Native so for those of you who are new to ipld it stands for um I think it's interplanetary link data um but it's then uh might be wrong on that but it basically links to like content addressable data structures that are linked through hashing so why we've chosen to make this make the fvm ipld native is because all data is managed in exchange for ibld which means that our content is addressed and linked through hashing and that makes us free it makes it really efficient in building fem or for devs like yourself to build on top of it because it makes it really easy to snap Local 3 data structures for historical State checks for example and so this allows you to build much more efficiently you will also be able to account for state of not just the accounts itself but also state of the actors within it really getting to like more Atomic pieces that you can then account for which then makes it easier for you to have control over what you want to build and better coordination amongst actors for example and lastly you also get to Define your data layout so if you want to choose you know having this piece of data to sit next to another piece of data um that's up to you to choose if you think that's more efficient for what you're trying to build so yeah we're trying to give as much control as possible to the developer and so that's a lot of the thought that has gone into building the fvm um it also supports foreign addressing and foreign signature schemes and we'll get to that a bit in the next section uh where I talk about how the evm is is made compatible for the fbm this really very much ties into it and so let me touch a little bit on the on the diagram over here you can see on so as a whole you can see that at fvm to be clear for those that are new to the fvm um the fem sits on top of a filecoin node and so everything I just described sits within uh what the fem is able to execute and then on top of that you have two categories of actors so you have native actors in your foreign runtime actors I normally talked a little bit around the foreign run times there right now we're talking about evm and in the future we hope to build for other um other VMS as well or have the community build that out um for the native actors two subcategories in here one is the building system actors and one is the user-defined wasm actors so for built-in system actors um that's something that is hard coded into the network and in the fvm and then onto the network itself so these are actors that you will interact with like a market actor or minor actor that then allows you to do all the storage and retrieval capabilities and Primitives that you want to do and on the other subcategory you have to use the Define wasm actors um I think if you were to write native actors within the fvm it would usually be um you know writing in rest C plus C plus plus and also we are developing either sdks as well but those three languages are the most recommended but then that's for you to Define you can write your actors and it should run within the fvm itself so as a whole that is how the FM architecture works and so right now we'll jump into the foreign active piece which is around the you know the evm phase that we're at right now um we talked a little bit about the roadmap earlier um earlier in July this year we actually so fbm is actually live on the the filecoin network as of today um the portion here the subcategory around building system actors is what's available on the main net so you might not see it or experience it and you also can't program it as of today but where we're at right now is around fevm and so when that launches in February next year you will be when it goes live to the mainnet main filecoin Network you would then be able to program actors there and then later on probably mid-year 2023 is what we're looking at um always subject to change but it's something that we're focusing on is to then allow for that subcategory of user-defined native actors to be um to be launched into mainnet so for developers to use and so I think that's the point where it will really unlock a lot of the capabilities not just for the ethereum ecosystem but for many developers out there as well so yeah so this is the question around how does the evm deploy to fvm out of the box we talk a big game about making sure that it is seamless and it's a seamless deployment for EPM developers again you all are like one of the first you know early Builders first few early Builders to be touching this piece of technology it is um we have not launched yet we are pre-launched so a lot of this I think as of probably two days ago our Json our ethereum Json RPC API is now fully feature complete so you have a lot of new capabilities really hot fresh out of the oven for you to use so we really look forward to testing and all the feedback that's going to come but let me talk a little bit about how that is achieved so um so I'll run through a few of these considerations um no considerations these are more like factors or or ways in which the evm condensed seamlessly deployed to fvm First up is around how evm runtimes compatible so the fvm supports evm smart contracts out of the box um the evm runtime is always compiled to wasm as I mentioned earlier with the fvm architecture and so the fbm emulates evm by code at a low level supporting contracts written in solidity Viper and you very much focusing focused on solidly right now um there is no special evm support per se and this once again stays to the ethos of how we hope that the fvm is something that can support um different blockchains and different VMS out there um we want to you know evm is the first one that we're building for but we want to make sure that when we build for it um it's not that we have to have a lot of bridging or um special features a special support marked out just for the evm so that it becomes a general purpose hypervisor and when other VMS are coming on it makes it much easier to accommodate and integrate them into the fvm ecosystem um we talk about familiar tooling so you know the I think right as of right now um you'll see when I want to share a little bit about it later and in the tutorials that you'll see you can use metamask you can use hard hat um we're testing for a few other Frameworks like Foundry and so on um the reason why this can happen is that we are um we actually have the we actually point the evm to link to the Lotus node um via the ethereum Json RPC API so that allows you to use the tooling that you're familiar with and deploy pretty much seamlessly to the fbm itself um and then embed at addressing was something that we talked a little bit about earlier but let me get into it because I think it's something that um not sure if other blockchains have this today um but something that was was um started like built by our engineering team and it's it's a really interesting concept um it's a concept of a new class of effort dressing um basically taking the evm addressing and embedding it within the fbm addressing um so right now there are existing but prior to this there are existing F0 to F3 address classes for building actors users and miners um the F4 address class is for foreign runtime addresses like evm itself it is intended to keep account addressing consistent to have them all operate in the same network and so F4 addressing is enabled by an address management actor so we've actually written one of the built-in actors itself to deal with this you can deploy your evm with an ethereum address into fbm and then it gets encrypted and converted into a consistent address on the Falcon Network and so the Falcon Network then be able to recognize it and then it allows it to compute overstate and you on your side continue to access your account via the ethereum address um we're also building out support for blog explorers that will be able to pass this so that when you see you technically wouldn't see all the translation of addresses and the multiple addresses that you would get you would just focus on seeing looking at your ethereum address itself so again adding to that seamless experience um yeah and so um again how it works is you can deploy your evm with an ethereum address into an fvm encrypt it it gets encrypted and converted into a consistent address um yeah and I think the way the the way that the equation looks um I didn't actually put it into this slide but it's really interesting we have a whole GitHub written about it a good a whole GitHub fit written about it and I think it's really something that you should look into but it basically it's a compilation of the transaction address and then the ethereum address as well as the Falcon address and then that makes up the FR address that is then recognized within the Falcon Network so yeah when I when I learned about the concept I was like that's really cool so something to look into um okay abstraction so iconic fraction basically allows a user program actor to be at the top level entry point um that initiates a transaction in peace fees um it allows the user to use Smart contracts while smart contract wallets containing arbitrary verification logic instead of externally owned accounts as their primary account and so what that means for you is that a transaction can start from a smart contract and not only an externally owned account which is much faster and much easier from the user's point of view um account attraction itself decouples the ownership of assets which is the wallet from the authority to transfer them into like a wallet specific via wallet specific policy you can then submit that your ethereum transaction exposing The Ether images on RPC API on Lotus and then it makes a falcon transaction and then you have an ethereum account on chain it validates the signature and then your native ethereum transaction works so that's how like this this all the thinking that has been built on the back end but then what if that means for you is that you're just you're just working on your negativity theorem transaction and it works within the falcoin network yeah and then on uh custom account types um so this one will basically allow the Falcon chain to include your ethereum transactions we talked a little bit about that as well um and then I didn't add this in but in just I think a day or two days ago we had ethereum event system now um within we've created a new fvm event system to accommodate for ethereum Event Systems um so events and lots now now works within your evm Fe VM deployment yeah um this is pretty Bare Bones because we've just created it um a lot more optimization will happen and more under the hood so you won't really see it um it's not so it can write events but it's not too much indexed yet um and yeah we're still working on tracking the Ecstasy and so on okay so I'll talk a little bit about tools that we have available um so this is wallaby you'll see in the quick start resources um this is very much where you're all going to be building your projects on the wallabies operating Edge testnet it will not be reading edge for the period of this hackathon so don't worry about it um yeah it will stay consistent your code will not disappear it is for the ethereum Json RPC compatible um again not reset on a weekly basis and we have maintainers that uh will be around so um that is the wallaby bleeding edge test net um it's pretty we have Quick Start guides on how you can get your wallet connected and I'll show you a quick demo or a short video GIF on how you can do that through chain lists just in one click later on yep so as you can see over here um you can just go to chain list it's it's really easy it's one click make sure you turn on test Nets look for the wallaby testnet at the metamask it should pop up if you click at yeah you can see the steps here but if you click add wallet and your main wallet is for example a coinbase wallet or something else it should pop up as well so once you've connected it you can then go to the wallaby faucet and get your funds it should take a minute or two for you to get some of the t-fill then you can start building your project on it um Falcon metamask um this is to show you the capabilities that are now enabled today so this is something that we've tested multiple times it works really well we're still doing testing with various other wallets um if you have a wallet of your preference that you're using and you let's say you hit a snack and you want to let us know um definitely put it in this card we'll see how we can work on that but yeah we've tested it with wallet connect Ledger metamask and these are fuel wallets that I think are good to go um so yeah open to any feedback there but for metamask itself you know you can already do value transfers you can deploy erc20 token and you can do contract calls and these are all the things all the capabilities that are available today with Minima so it's pretty much seamless at this point um and yeah for wallets um and then remix ID I'm sure all of you are familiar with this this works really well um as well um as you can see we've we've tried it out a few template contracts we have early Builders also testing it out and it seems to work so far um so yeah I think pretty good on remix as well so another another tool that you know you should all really be familiar with to be to be able to build a project on really quickly and deploy to the fvm um for the hard hat itself um if I had something that you use this is a very popular tool for development um again we have hard hat starter kits that are actually ready today um you can see in the link below but it's also included within your quick start resources so you should be able to go in and build your project via hard hat as well if that's your preference um the other framework that we're trying right now is Foundry so looking for feedback on that it's worked for a few users we haven't hit a snack but yes that's something that we're looking on building out for as well so falcon.sol is a library that we're looking to build um right now we're still prototyping and building out the library but for the hack itself we've created a mock version so let me talk a little bit about falcon.solve first um what we're trying to build here is really um a library that makes it easier for you to access all The Primitives within the falcoin network via fvm and we want to make it as easy as possible so it will look like an open Zeppelin type kind of utilities that you can then access so be some something that you're familiar with and um so for the hack itself what I mean by the falcon.m you will also get links to this within the quick start resource we have built a few more built-in actor apis for you to play around with to build your project with and these are the two main ones around the market actor and the minor actor you will see that within the QuickStart documentation we have documentation on how you can access these and use it as well as the functional the features that have been enabled and the features that have not yet although those that have not yet are typically not so much used within the scenarios that most people will be building on but if there's anything that you really really need again reach on Discord and let us know um so talking a little bit about block explorers um these are these are a few other blog explorers that have been built out we're also working in Partners to develop them further um so you have a filming uh film and Explorer glyph sondex these are the different ways that you can use again these are in the quick start guides but if you want to check out your transactions and um all your storage deals that you have built out of your projects you can always use these explorers um yeah they're pretty actually really easy to use there's also some next also has a perks API that you can use to then um yeah to then query and find out information about your transactions um they'll be talking a little bit more about that tooling later on and also all these different explorers have docs for them as well so you can understand how to use them better and talk a little bit about evolving wallabies or things you can look forward to um really soon is that um so I said evolving wallaby because wallaby is like a young kangaroo I think um we've played around many names the name is not decided obviously it's not going to be kangaroo um but we'll have a much more stable test net um around that is not beating Edge and reset every single week um I think what what we're thinking of some activities to come on top of this things like build-a-thons hackathons um acceleration programs things to support Builders to actually build out a lot of these projects it will roughly run between early early December and to mainnet launch in February 2023 so if you're starting on this hike today and you think that your project is something that can go further um look forward to this we're going to have a lot of programs coming out here and a lot more resources to support your project all the way into main launch so the moment it launches you can immediately deploy your project onto it and I wanted to do a quick shout out to other quick start resources that you should not snooze on um we have the team has prepared a few cookbooks and idea forums for you um so if you're looking for ideas around data dials lending pools um what the specific bounties are for as well you can check out these um these links on the quick start that will bring you the discussions around how you can think about designing your projects built on top of it adapt it use it up to you we also have two cookbooks that we've built out one for landing pools and one for data dials um it's not just a forum article that actually links up to GitHub and then you can use use it as a guide to then build your project during the weekend and of course again always looking for feedback on all these cookbooks and yeah um lastly again Sharing The fbm Foundry early Builders program um I know some of you here might be in the early Builders program itself I run it on a weekly basis so you'll see me every single week um but I promise it'll be fun um but yeah what we talk about mostly is like technical support for the project You're Building um resources updates we do work really closely with our Builders um in a two-way relationship so they do a lot of testing as well for us and gives us feedback on what we should be focusing on and what we should be building the fvm out for the Fe VM out for um so if you want to have a scene how it's built out sign up for the early Builders we're looking for developers who are um solidity devs ready to build and yeah being able to build together with them or to create content out of it as well so yeah um that's mostly it for me I know it's a mouthful um I hope it was useful and we'll see you on the discard foreign thanks Sarah that was that was an awesome and comprehensive overview and I know a lot of people will have questions that they'll be able to ask so uh we'll redirect all of them to the Discord and up next I want to welcome our next speaker I know what to talk about boyfriend zonex and and then John will be coming on shortly after to do the rest of the the talk so without further Ado let's welcome my Noah hi hi thank you Karthik thank you so much um Let me show my screen uh okay do you see that everything is good all right okay so we're here to hack and we are super excited um I'm really happy to represent today the context team and the great work we have been building during the past week to really enable uh hackers and build on on top of of epvm and um very briefly we are a team of really passionate people um building a lot of tech solutions for the blockchain ecosystem in multiple areas and um like Sarah was saying we are also contributing to fvn Foundry program and building on top of a VM things like assembly scrub SDK and many other great tools like well we are also the team behind things like Ledger many Ledger apps and but today here we are here to talk about AVM tools and how you can use them in the hackathon so um I want to talk about the devtool suite we are building in on top of AVM this is conceived to be like something holistic like tools to enable you to build tests explore and interact with the blockchain as well as with the smart contracts you are deploying there's still a lot of work to be done in in and a lot of iterations but we're really happy to present you today the the following three tools uh the first one has been already introduced by Sarah she was talking about the ficon.soul library or more precisely the solidity mocks library because there will be very soon but still work in progress a file consolidity library that will enable solidity smart contracts to call methods on Falcon built-in actors and access Falcon specific CIS calls but this is since this is still a work in progress what we have created for the hackathon is a falcon.m library containing basically mocks for two actors the minor actor dealing with storage mining operations and collecting improves and the market actor that manages storage and retrieval deals and we have built um two smart contracts this uh the smart contract um that hopefully help you to to to yeah to to perform these these like high quality calls to um to them yeah um to the yeah to interact with the the fbm um we have uh we will put all the links later at the end of the of the call so don't worry about that uh we have a repository uh we have created also an npm package so you can easily uh import that and use that in your project but it's very important to note that these mugs are not really performing real close contract calls or Cisco's but we'll enable uh to work with your smart contract we kind of like are hard-coded some um some some Market deals for example and the second tool I want to present you is the verix public API um this is an API that indexes the whole Falcon blockchain historical data and provides you a very simple easy way to to interact and ask for transaction account and Keepsake data and um I will present make a quick demo in a moment it's very easy to use the only thing you need is your GitHub login account and the operations that we support are account tips and transaction you can query by balance by info based in accounts tips it like by hate and latest tip set and transaction by Haas hate and address and we're really happy to to announce that we have also included a support for wallaby so that you can also use it in in this test net um I will show you very quickly how to access go to it so you can go to our documentation and go here to Barracks API and the only thing you have to do by scrolling here is to ask for a token you get your token after accepting the terms and conditions oops okay here okay but here so do upset the terms and conditions and you get an API token and automatically with this API token you can you can query it let's wait a second um work yeah okay so here we are uh so here we have our token we can just copy it and add it into our code and um we this token has already been introduced here so we can also interact directly here and play around we can select between the Falcon minute Network and the wallaby Network so um here we are recording for example by balance and we can just try and get a response and the same for all these operations we have also developed um a client tool so that it's for you even easier to to use it you have an npm package here so that you can build on top of it um the next um coming back to my slides so the next tool I or I want to present you is the brics Explorer um we are also building a block explorer that interacts with the Falcon blockchain and also have recently had wallaby support um yeah I will show you how a bit um so um okay I will copy here uh so it's very easy you just have to go to verdicts.sundex.ch and um here we can paste for example uh we are here in okay so this is a wallaby address sort address and we can search and hopefully works um okay I will reverse just in case okay let's see um okay so it works so here we um we see the response and by for data address we have here all the transactions um in in hey um by by hash from Etc um here if we click into for example one specific hash transaction we see here the data we have conceived this really to be uh useful for the for the developers so you can easily save the response and Export it in either a Json XML file or text and example I will export here in Json file you can also hear a very easily filter um for example here all the same you can filter by type by any of these columns you can also move the columns As You Wish um and um yeah so that's pretty it and similarly to mainnet for example um yeah similar to many I can do the same we'll go back I can do for example this is for five the short address so now we are recording okay this is my net yeah so this is in mainnet and yeah we don't have any transactions here okay and um and the last thing I want to show you is a way to interact with your smart contract so let me copy here I have uh contract so [Music] um okay sure so if I go to this section I can insert a smart contract this is a human address that I have deployed and um it will decode it and um you can check here the API the information by byte code by operation and the methods okay this is not recorded yeah okay um yeah um well that's pretty it yeah um and um well I think yeah um and yeah that's that's pretty it and yeah I just want to thank you and say that um there's still a lot of work to be done and uh we hope you can you can use these tools during the hackathon and here is the QR code with the link to to all these tools and um we hope you enjoyed the building and yeah happy happy hacking and um yeah you can contact us in in will be mentoring also during the hackathon and we'll be available in Discord and you can also contact us here at hellosonx.ch and thank you so much awesome thank you so much I'm just jumping in for Karthik here um John I think uh is it possible that he had something else to to jump in on for the rest of this session yeah yeah welcome to the stage thank you thank you um what's up everyone uh I'm John and Jonathan I work on glyph and um in case you haven't heard of glyph glyph is basically like an umbrella brand for a suite of filecoin apps and tools uh similar design that was also an awesome presentation always very impressed with zondax's work um so yeah I guess today um I was going to just share with you uh I've I've definitely done my fair share of hackathons and so I was going to share with you I think some tools that I would use if I was participating this weekend um just to kind of help people get up to speed so I'll just share my screen as well um and I have a few things yeah so um hopefully everyone can see Chrome here I think it looks right to me so the first and and sorry if any of this is already uh repeat information but um the first is called chainlist.org um and chainless.org just makes it much easier for us to add in um a network into metamask so I've actually already done this but the idea is um you want to search for filecoin make sure that test Nets are enabled and then you can easily add the wallaby testnet URL um and so if you click add to metamask I don't know what will happen if it's already added but my metamask is connected to wallaby and I have a little bounce here I don't know if you can see that because my tab yeah that might not go across screen share but um now basically if I'm building any sort of front end application that needs to interact with the chain and write any transactions um I'm just kind of like already set up there so that's one helpful tool another helpful tool um for kind of exploring the Json RPC is this open RPC playground and this should be on one of the hacker links uh that is made available to you but I'll put it in the chat here too I don't know if this chat is going to make it all the way around but it's basically this open RPC playground where you just point the RPC to our wallaby node and so the the really cool thing about this is you can look through all the message the all the method excuse me all the methods that are supported by the glyph wallaby API so this is a mixture of filecoin specific calls as well as ethereum Json RPC calls as well and so if you if you click into any of these calls let me find a good one um that hopefully will work well here let's see like chain head okay so this file coin chain head call um you see it doesn't take any real arguments here this is like a back end implementation thing um and it will tell you like what types I'm supposed to get back from this response and then actually down here there's uh an easy way for me to actually go ahead and try it out um and so if I use control space oops that didn't work if I click the play button I should get back um a sample request response here um to help me design the architecture of my application and so um this is a really really helpful tool kind of like Postman but everything is just generated for you um and I actually learned about this like very early this morning so I would have saved myself a lot of time in the past had I known about this okay so that's two tools so far there's chain list for just making it easier to uh import wallaby into metamask which you've probably already done there's this open RPC playground which is another really helpful tool just for experimenting with the um the glyph apis and just generally like the file coin API and what is possible there the next tool to show you is the glyph Explorer um and here so I have this um this wrapped file coin erc20 implementation here which I'll also put in the chat um and anyone can afford this or deploy it uh this is if you're working on any sort of defy protocol you know sometimes it's good to have a wrapped erc20 I'm not I'm not going to go into like the details over why uh what benefits this can give you um but if if you do want to use an erc20 version of filecoin on wallaby you can go ahead and follow the instructions in this readme uh and so I've actually already done that right before this demo and I sent a couple test transactions so this is an example of a transfer just like a simple token transfer from one account to another um and that is an interaction with my wrapped fill contract so I'm actually sending my like some tote some wrapped fill tokens from one account to another so if you were if you if you have a transaction that you've um submitted to wallaby you'll either get back a CID which looks like this b-a-f-y string or you'll get back like an evm transaction hash which might look much more familiar and so in the glyph Explorer you can go ahead and search by either one of these so I can plug in this transaction hash and I get back the transaction I can plug in the CID which is a filecoin specific content hash and I'll get this transaction detail View and if I scroll down you'll see there's a lot of meaningless um data here or not meaningless but hard to make meaning from so to make meaning from this data you can go ahead and upload an ethereum smart contract API which if you're using a tool like hard hat or Foundry you should have no problem finding these um they've they've most likely been pre-generated for you if your contract is already deployed and so um here you can't really see this part of my screen but I just clicked on the ABI box and I'm uploading the ABI of wrapped fill which I got from my wrapped fill repo that I shared a second ago and once I upload that now I can make meaning from this transfer event so I know it now no longer says unknown um I can see you know the event logs that fired and and those are parsed so we can make some more meaning from those and these were the actual params of what I said so of what I sent so I sent this address some funds and now like a thing that's awfully confusing about filecoin is that um addresses look potentially a little bit different than what you might be used to in the ethereum development world so if I let's inspect um let's inspect this smart contract um so this is an evm contract um and you'll notice I have like three different addresses here um for the purpose of this hackathon uh these you can kind of think of these as all equivalent um this is the the eth address that we see on like etherscan or on like an ethereum specific uh you know developer tooling environment like hard hat or Foundry um this address is the file coin equivalent of an ethereum address so any address that you see that starts with like t410 um this is an ethereum address and so we literally just like do some different encoding to this address and we just plop it on right here so this is basically just the final Point equivalent of this and now the id address is basically just like a sequential number like a not that's assigned to your smart contract so the next the next um smart contract that gets deployed to filecoin after this one would be 1068. um and so this might be confusing if you have trouble understanding this which a lot of people probably should because it's quite complicated um I'll be in the Discord I haven't joined yet but I will um you can also like tweet at me or whatever I'll post my links in here [Music] um that's my Twitter my Discord I'll just hop in the chat so feel free to ping me um and I'll get back to you and there's one other thing that I want to share um which is that at glyph our um our application that we're building and launching alongside the launch of the fevm is called glyph pools and it's a staking protocol um kind of like rocket pool uh mixed with you're in finance in a way um and so if you are building I'll show you a little teaser screenshot hang on if you are building a uh an app that needs yield like a native source of yield uh through solidity apis definitely hit me up um we will be providing mock contracts probably not this weekend unfortunately so um those won't be ready in time for the hackathon but if you're serious about building um an idea on the fevm that requires native sources of yield definitely hit me up I can help point you in the right direction for how things will look and um and then you know we can we're also still learning about the needs of Builders so it would be really helpful for for me and for the glyph team to learn more about what your use cases so definitely reach out and I think that was the time that I had um but yeah I guess that's all I have still have about 10 more minutes actually so um I'm gonna try to fill a little bit of that Gap um and just kind of curious like uh well first of all it seems like an amazing tool and something super helpful for everybody building this weekend so glad that uh we got that those resources and I was kind of throwing everything over to the hackers as we were posting them in here too um I guess kind of curious like you had your head in this for a while um what are you excited to see built this this upcoming weekend or just in general and and what are some of the kind of cool tools that are out there you know you mentioned what you're working on but also like other stuff that uh that you you encourage people to take a look at yeah that's a really good question um so I think well a couple thoughts on this one is that there is I think uh sort of a natural competition among layer one blockchains um and I think it's important to ground filecoin in the right context um filecoin I see as a very complementary layer to other layer one blockchains uh in the sense that filecoin is a really good place for storing data and so while I think you know we've seen other evm compatible blockchains come to Market especially in like 2021 and there's a large appeal to just Fork protocols from other evm networks into new evm networks the ones that worked well um but I I challenged the hackers who are aiming to do something like that to think I think that there is value in that and I don't think that it would be a bad idea to do um but I think there's some interesting New Primitives that are becoming available that if you if you get them right it becomes a a really interesting environment to build storage Primitives and storage applications that simply aren't possible today um and so some some things from the ethereum world and the um you know the evm world I think will be awfully important like we do need native sources of yield so building a D5 product in um in the fvm is important but that D5 product like is is it looks different than just like uh an Ave or a compound because the needs of filecoin are much different and when you take that kind of like nuanced look into filecoin and the fact that like the miners that are running this network are actually producing real world work there's some new things that can't be done on other chains um that position filecoin and just like a separate Place uh and so I would urge you as a hacker to start thinking in that area like what can I do on filecoin that's simply not possible in other places because I think that's where you'll find some really interesting value and some really Innovative use cases amazing um very cool uh and then one question that came in from the audience actually as we're kind of chatting about this um somebody's asking if there's actually an API available for glyph yet where they can grab the CID or or grab any other info that uh that that you guys are making available on uh on the UI and I guess a programmatic way um if you're talking about transaction history I'd actually recommend I think the the berry API is probably more stable so I'd recommend going with zondax's route for that um and our API would pretty much do the same thing that theirs is um for like an equivalent of etherscan's verified contract API uh that's not something that we have like when you store a contract with an ABI in the uh in the glyph Explorer UI it's just stored in local storage for now so um yeah and if you find bugs too definitely reach out and let me know because this stuff is all bleeding edge totally makes a lot of sense um awesome okay great well uh thank you both for for being here and then being a part of this I'm really excited to see all the new things that are being built on top of the fem um and yeah really exciting to uh to have I guess yeah exactly the people who are working on the bleeding edge of this as part of this event so uh really excited to see uh what gets built um awesome okay great so we're gonna go right in to our next uh conversation which is going to be um an actual Workshop so um this is going to be the longest Talk of the day it's going to be kind of a full end-to-end Workshop of how to program on the fevm um so we're really excited to have Zach here um from the fbm team uh to kind of walk through this workshop with us uh so yeah I'll turn it over to Zach to share his screen and and jump and jump in from here but yeah really nice to have you here and uh thank you for being here awesome thanks Jacob excited to be here and hey everyone um excited to see what everyone Builds on the fvm and the F evm specifically and that is what my Talk's going to be on so let me go ahead and share my screen all right so yep today I'm going to be going over a demo on programming on the fevm and if you're familiar at all with the evm um programming on the f evm is almost exactly the same so this is a note I've been including at the beginning of my presentations um and I see a lot going around but when you're programming in the web 3 space there's a lot of terminology and a lot of new projects and a lot of new technology and information can get really overwhelming and it can really feel like you don't know a lot or you don't know what you're doing this jargon here was some notes I was taking just a couple of weeks ago in Lisbon so I went there for a bunch of protocol labs and file coin you know conferences and uh this was me trying to understand the like addressing schemes and uh file coin from my co-workers right so I'm over here I'm learning this all with y'all um so you know don't feel lost um don't feel bad to ask questions uh We're All in This Together all right so I'm gonna try to focus this on um just a straight demo uh we'll do a little bit of work and remakes um a little bit of work and hard hat and I'll point out some resources you can go to and um if you didn't know uh the first metamask transaction was actually tested just about a month ago um right before uh Phil Lisbon uh so the engineering team has been working at a Breakneck Pace to get all of the evm features that you're used to working with in um the ethereum world and um yeah so we just had the first minute match transaction and um just got some events uh added in keep on the lookout for more features being added in all right so we're gonna go through remix um if you're not familiar remix is a online IDE for developing uh evm smart contracts specifically in uh solidity um and yeah this is kind of a great first place to test test out like any ideas you have just to get used to evm development if you're not used to it um so let's go ahead and first thing you're going to want to have do is add in a uh metamask extension to your browser right so I already have it downloaded but you can go to you know type in metamask no click on here and follow the instructions to download metamask um the the walkthrough here is pretty clear and once you have metamask installed um I know they were kind of talking about this in the last talk but just to walk you through it you can go to chainlist.org which already have up right here and we're going to be doing everything on testnet mainnet is not yet ready so we're going to go ahead and click here test Nets we're going to type in wallaby so that's the name of the filecoin test net and you can click connect wallet and it will add in the information straight into metamask I already have it added in since I've been working with it but just so you can see what that flow is like okay so once we've got um you know uh we've got wallaby added into our metamask you're going to want to get some tea fill in there right so I already have uh some tea fill but again to show you how that's done step by step the first thing you're going to want to do is um get your uh T4 address right so in the ethereum world all addressing is done with 0x you know and then yada yada your hex but in file coin the addressing scheme is different and you know every runtime that eventually is added on to the uh fvm could have its own addressing scheme right so this is why the F4 addressing scheme was created right so if you go to explore.gift glyph.io slash ethereum you'll have this handy little screen here um that kind of automatically connects to your metamask and converts your um ethereum address to the equivalent F4 address which is just kind of an abstracted away address where we can add any other addressing scheme too right and if we switch it to wallaby net you'll see the only difference is it's a T4 right for testnet address so this T4 address corresponds to this ethereum address that will basically be only important for the next step because now we are going to get test now funds so if I copy the T4 address I got here we go to wallaby.network paste it in got to go through the captcha these captures are always really interesting you can get some funny ones today we got cupcakes of course they try to trick Us by putting regular cakes in so I think I can select all that yep and just select send and that should send 5000 t-fill straight to your uh metamask wallet again this is test net currency so unfortunately not re real fill we're not just printing real money here but that would be awesome okay so now we've got uh metamask we've got the network added on metamask and we've got funds to pay for transaction fees in our wallet uh we will go ahead and go to remix all right so um here's kind of a layout on remix um the main things that you will need here are the file um the file uh sub tab here if you go down um you'll see a compiler a deploy Tab and a debugger so we're going to start over here in the file explorer and we're just going to go ahead and click on the storage contract so remix has a bunch of built-in simple contracts just used as an example you'll see a storage outsole is a simple read write contract um you know it has a single variable number a function store which will set that variable to a value and retrieve will get its latest value so if we go into the compiler tab hit compile we need to make sure everything is good it's compiling storage.soul it says all right it's fine and now we need to deploy our compiled code to the filecoin wallaby testnet so one of the most important things you need to do here is Click injected provider metamask this will tell um remix hey I want to communicate with metamask metamask is going to be the Gateway I send transactions through and um you know otherwise if you stay on remix VM that's just like a local copy of the blockchain of uh like an ethereum blockchain in remix right so I selected an injected provider and if we look at that account it indeed matches the account in my metamask wallet all right so we'll select storage make sure that's selected hit deploy right now metamask is going to come up with a transaction saying hey this is going to cost gasps bees any transaction that you write to the wallaby test net just like a regular Network calls transaction fees right so this is why we filled up our wallet with t-fill earlier so I'm going to go ahead and click confirm and this will probably take a minute so it takes 30 seconds for the wallaby test net to include the transaction and then there's this whole design pattern that the team implemented called delayed delayed execution so it'll then get executed and 30 seconds later uh give us a transaction receipt so it actually takes a whole minute to get this transaction in um so while we're waiting for this to go through and we'll we'll come back and interact with it um I'll go ahead and move on and talk a little bit about the mock file coin apis right um so you know we we have the zondax team present earlier about these but these are extremely useful tool uh going forward um these will kind of enable you to test uh what it would be like to develop with all these file coin native features that you don't have on other blockchains right these apis are still being worked on to like fully open that's what we're mocking them for now um so this will kind of give you the tools to really uh really build interesting new applications like data dials our storage lending markets because you'll have the storage deals which are already native to follow coin uh available to you in solidity so yep still taking its time and uh well we'll go after this after uh remix is done deploying is we'll talk about the harder hat starter kit right so remix again is great for um grade four kind of just getting your feet wet and testing out smart contract development but not uh the best for when you want to get into a professional workflow and actually develop um smart contracts that you want users to use and you want to make sure are secure right um so hard hat is a kind of a local development environment you can install on your computer and use it to automate all your deployments and tests it doesn't have the GUI but gives you a lot more power okay so remix is still taking its time they may just have to move on if the transaction is getting stuck we can try reloading it and give it another shot sometimes remix kind of airs out so I'll go to storage we'll compile it switch to injected provider metamask and deploy confirm and hopefully this transaction goes through if not we may need to speed it up all right but for now uh we'll go ahead and move on to hard hat right so you can find the hard hat and the file the hard hat starter kit and the uh file coin uh GitHub right here so we'll go ahead and click on this so file coin Dash project slash fevm starter kit and okay so here you'll have like kind of a base project set up uh with a bunch of instructions in the reading me on how to get it started we're going to go ahead and follow these instructions and get going with the hard hat starter kit all right so um here I have a terminal open I'm running Mac Mac OS let's see I'll try to get this text bigger so everyone can see just got a test folder here and I'm going to type in the command git clone and we can come here to code copy the URL paste it in right so that that clones are uh repo into the test folder I will CD into it tab to auto complete and we'll go ahead and open this in vs code right so I have the vs code shortcut installed code Dot and we've opened up that folder in vs code of course you can just go into your you know file folders and open it that way but I prefer to do as much from the terminal as possible and um yeah yeah well so you'll kind of see the structure of a hard hat project we have uh contracts where you'll put the smart contracts you want to actually deploy onto the blockchain you have the deploy uh script right here which will you can kind of go in and customize and tell it uh what contracts you want to Target to deploy to the blockchain and how you want to deploy them and tasks where you know you get a lot of uh where hard hat really shines is where you can write these customizable scripts to do just about anything you want interact with smart contracts you know write data read data um you know test some things um you know tasks uh is a very powerful uh kind of feature of hard hat right so we'll open a terminal Within hard hat here and we're just going to type in yarn in the terminal right so this will install all of our download and install all of our packages right and again all of these instructions are in the readme and you know on the GitHub so while this is going let me just double check on that remix see if it's gone through nope someone's holding up my transactions they may not have enough gas fee so I'll try speeding them up right here bump them up and see if that goes okay so back to the starter kit right um so our yarn install has completed um and from here what you're going to want to do is again in order to interact with the blockchain you need a wallet like metamask you need a private key that's stored in that wallet right and this is very important that uh you never share this private key right so uh the private key basically is your wallet it gives you the right to make transactions for that account um and so what we're going to do is we're going to make a file here we don't want it there we want it in the main repo you can type dot EMV right and we're going to type in private key all caps equals and uh quotes here and we'll go back to our meta mask really doesn't want to deploy we'll go back to our metamask we'll go to Account Details export private key and you're going to have to type in your metamask password and again I'll never show this to anyone I'm kind of live streaming this because it's on testnet and I never use this for anything else other than test net development this is kind of a dummy account for me but we'll copy the private key and we'll throw it in here and save right so now Hard Hat Knows okay this is the account I'm going to assign all of my transactions with all right so hey Zach hey how's it going good uh do you want to just zoom in a little bit on the font size for some of these these two windows here just so that people can see on the stream a little bit better oh sure yeah you can do command plus yeah exactly perfect yeah I've got an I've got an ultra wide over here so it's easy for me to forget on streams appreciate that no problem okay yeah so hopefully everyone can see that a bit better um yeah so we've saved our private key on in our in our project so now the now Hard Hat Knows uh what wallet we're going to use to transact with the blockchain um and we can actually run our first hard hat task so if I type in yarn hard hat get address I believe this address is no just address yep get address enter but typed in get addresses yarn hard to get a dress not addresses right it'll kind of do what that glyph tool was doing in the background in the browser only this time it'll do it in a hard hat so it'll calculate the F4 address which we used with the faucet right here and our actual ethereum address for the most part um you're going to be using this you know as you act uh interact with the fevm everything works just like the evm so other than sending test net fill you can use this ethereum address here for the kind of the remainder of the tutorial right and if you want to check out the logic for that task we can open the task folder click get address and you'll see here you know the logic we're doing when we're actually running this command all right so let's like use this and actually deploy a smart contract and interact with it so if we click here on uh simplecoin.soul we have a very simple contract right a very simple contract simple coin and this is kind of like a very basic form of like an erc20 contract right an erc20 token um you know just for demonstration purposes so I wouldn't actually make a token this way but um you know it has a mapping which a maps maps any addresses to balance a Constructor which sets our initial balance to ten thousand so there'll only ever be ten thousand of uh simple coin in existence and two functions or three functions send coin give balance and eth and get balance um we're really going to be using get balance and uh you know send coin so let's go ahead and deploy this contract if you yarn hard hat deploy now there is a bug in a hard hat kit at the moment um with the deploy script that is being worked on as we speak but um it sends the deploy transaction the contract does get deployed but then it returns an error so you actually have to run it um run it it'll error out you know it's going to compile it successfully and say it's going to say deploying simple coin um this will return an error and then you just run it again and click resume transaction and it will uh it'll actually return the receipt of the deployment um but to save us some time I actually have another vs code open right here so after you actually deploy all the contracts um you'll get this deployments tab right here right this shows that you have successful deployments right so if I click on simplecoin.json this shows me the address at which it's deployed and a bunch of the metadata all the Json API data we need for that contract it also deployed so there's a folder here with the mock apis so I copied over the mock apis from zondex and put in the put them in here so anyone can kind of interact with them and um you know start building with them immediately uh the main two ones are the minor API and Market API these again mock all of the internal file coin Logic for getting any kind of Market data any kind of storage deal data and data on specific storage providers who are the miners right but we're going to be messing with a simple coin in this demo right so um we have a simple coin deployment at an address right right here in the Json right and we're going to interact with it so again remember when we deployed this simple coin contract The Constructor assigned 10 000 simple coin um to my address right so I should have ten thousand there if we go to task you'll see there is a simple coin folder and we have a get balance task right so this is basically going to go in and it's going to read our um read our smart contract and call that method get balanced um and you know show us a balance for a given address that we push in we just need to give it two parameters contract and account contract the contract we're interacting with where it's located its address and the address of the account we want to balance for just type it in from scratch so if we do yarn hard hat and then you're gonna do Double Dash for the first parameter and we'll type in contract and we'll go to our deployments uh again we'll go to simplecoin.json and we'll copy this uh in and actually I forget to put I need to put quotes around here all right and then we'll do account and again that's the account of uh which I have it right here um but the account of the wallet we deployed the con uh the contract with that's our wallet since it's the one with ten thousand you know again almost forgot my quotes and quote enter it's cool darn hard hat get balance oh I didn't actually type in get balance okay so yeah yarn hard hat get balance contract you know put your contract in account put your account in and quotes enter so I was saying re reading simple coin owned by our account on network wallaby and we have ten thousand right and um the task is in here right now but you can make a a simple task for sending the sending the simple coin as well all right so that's just kind of like a basic overview of the the hard hat you know starter kit and what you can do in hard hat you can write tests and put those in there and have a whole test directory um you know all this has kind of be developed on the fly so if feel free to open up any issues on the actual GitHub um and we'll try to we'll be uh kind of looking over them and being in the Discord helping people out with any issues they may that may occur and again trying to fix that uh deployment issue we're getting at the moment um but yeah you know very very powerful tool um if you're going to actually kind of get serious and want to speed up your development I would highly suggest learning this um especially since it has the mock apis built in if you want to take advantage of those you can kind of go through them and use them again to mock those solidity calls uh we also have the forums I'm sure they've been called out earlier but um there you'll find some tutorials some high level sketches of things like how to make uh basic designs for data dials and lending markets please go ask questions there um we'll try to be monitoring them and answering questions over the weekend if you have any and yeah thank you um you know the fevm is a kind of an exciting development in the fvm life cycle as it allows fem to take advantage of all this evm tooling that already exists and that you may or may not be familiar with um and um yeah it just allows a new paradigm of applications to be built uh with these file coin native uh Primitives that are the storage deals right this off-chain storage that's such an important component in web3 applications if we really want a decentralized web um and with that that's that's what I got for the for the demo um I hope you enjoyed it and I'll I'll see you around in the in the forums and in the Discord um trying to help out answer any questions so thanks again amazing thank you Zach uh we do still have a little bit more time in case there's anything else we wanted to kind of Deep dive a little bit deeper into I also just asked the chat to see if they have any questions on their end um as they were going through this although it looks like um sort of most people got their questions answered as he went through the demos um yeah I mean if there's nothing else you want to dive into I think the default fun question to ask is just you know what would you like to see built this week and or this weekend and you know what are you most excited about um seeing as an outcome from this this upcoming weekend yeah you know I think a couple of the the speakers have kind of mentioned it before me but um you know anything kind of using those mock apis I think would be awesome because those are the unique features that are on filecoin um when the fevm was created it wasn't kind of created as a thought of hey we want this to have all the same like applications as the evm or compete with the evm we want unique applications that can be built to take advantage of these storage deals right um all these off-chain storage miners they have this native primitive storage deals that has all the metadata of those deals and make cool applications like data dials or lending markets right um you know I think data dials are extremely interesting um you know there's a lot of problems in the world where people just need data right like a lot of scientific um researchers need large sets of data to run their models on and you know if people can kind of come together and create Primitives that allow people to crowdsource and crowdfund this data in a decentralized way I think that'd be that would be really awesome right and then the lending markets as well like lending markets like hey you know for the first time instead of just having um kind of like an Ave an over collateralized lending platform instead you can have a miner who comes in and posts their future earnings as uh kind of collateral right so it will require some underwriting on the behalf of the the lender to like say hey do I trust this Miner to make my money back but you know if there's this Earnest Miner who wants to come in and provide storage to the network but they don't have the fill up front to stake you know someone can lend them that fill it can be stake trustlessly and uh you know all future Revenue up to a point can be given to the to the person to help you know jump start that that miners uh career basically amazing okay well very cool um thank you Zach and thanks for watching datados is a very natural segue into uh the next part of the the summit anyway um so yeah of course anybody who has any questions I I think Zach you're probably going to be around all weekend I'm guessing um probably Google build um so thank you for that um and uh and and yeah looking forward to seeing what everybody builds and thanks again for for helping us out with this sec yep yep no problem thank you okay awesome so um we are running a little bit ahead schedule which is great um so thanks again Zach on on for the programming with DVM um and then yeah up next we're gonna have actually as as just mentioned a sort of panel uh on unlocking data tabs so we're going to hear about Glacier dial and and the LaGrange style um but also we're going to just hear about people who are you know actively feeling the the pain points in the industry that uh that the fem is set up to uniquely basically satisfy so we're going to take about a 15 minute break um so everybody feel free to get up stretch your legs grab a new cup of coffee or tea um and we'll be right back with you at 2 45 Eastern um for the upcoming panel thanks everybody hey everybody welcome back to the fevm summit uh we're excited to have everybody here um and excited for this next set of talks so we're going to be learning about um basically unlocking data Dows uh with the femm and and being able to hear a little bit more from the teams behind Glacier dial and LaGrange style um and yeah we're really excited to uh yeah obviously hear a little bit more about this use case you know um we just had Zach point to this is being a pretty interesting base layer uh situation that can be improved by uh by the fdm and and yeah and that kind of great to hear firsthand um from and yes and from Joel about uh first of all I think for Glacier Dow and then we'll also hear a little bit later from from Charles from uh the LaGrange style so um yeah when you're ready feel free to turn on your cameras and unmute um and I will stop sharing screen I'll turn it over to you both hey welcome to the stage hello awesome okay cool um and uh yeah there we go great so I'll let you take it from here and uh yeah feel free to take your time and uh I think a lot of people have a lot of questions about these so I'll try to relay those questions to you uh after the presentation okay excellent so you can see my screen all is good you can see the slides yeah everything looks good Perfect all right yep well um first of all hello everyone my name is inish and uh together with Juan we are here to tell you a little bit about Glacier down do you remember this when GitHub created Cold Storage repository using an archival facility that was placed 250 meters deep in the permafrost of an Arctic Mountain what about this when the same entity GitHub decided to ban tornado tornado cash code and suspend its developers from their platform we believe that code like data should be preserved in a censorship resistant way and this is where Glacier dial comes in so glaciudel is a decentralized autonomous organization that preserves code as a public good and Glacier dials life cycle evolves into a series of stages each epoch starts with a call for funds at stage zero followed by a call for votes afterwards storage providers are allowed to make submissions which are then validated by dial members stage four is considered to be more of a buffer in the epoch so it's essentially a time where users and storage providers can chill and at the end of the epoch at stage five is when storage providers can correct can collect their rewards but let's go through each stage in more detail at stage zero users are invited to commit funds to the current epoch currently this is done by committing fall point but it will be possible to commit funds using any erc20 token in the future in stage one users who have committed funds are also attributed than voting power and this is done in the form of one vote per fell they can either vote for a submitted repository or they can submit their own repository for its code to be preserved so right now users are only able to vote for one single repo but in the future we want to allow people to vote for multiple repositories and we also want to um evolve into other forms of voting uh potentially quadratic voting all right enter stage two and enter storage providers and these make file coin storage deals free Falcon storage deals with themselves and what they do is that they then submit the deal IDs and the PC IDs to the Dow smart contract these are then validated that is Dell members verify that the deal is legitimate and that the stored data corresponds to the submitted Repository since the epochs have a fixed duration if everything from the previous stages is done then the epoch will just continue to run and it's time like I said before for everyone to just chill both users and storage providers finally at stage five so at the end of the epoch storage providers can claim their rewards and what happens is that the smart contract then verifies that the storage deal is healthy um and that there was no breach of the deal so that there was no if there was no breach of the deal then the storage providers are able to collect their Rewards all right um let's go for a demo now I'll pass on to Juan for this thank you so let me just share my screen uh everything good can can you see my screen the website yep okay so nice so now this is uh we're now in the questionna website uh I encourage you to view it we have a video that really shows our smart contract interaction uh in more depth uh there's also some other information and we've set up like a little demo here um so essentially our application is not live yet because as we're going to discuss later there are still some technical limitations as to what we can do with solidity and fevm but we were like for we've been working on this for less less than a month so things are still uh like fresh uh so I thought that for for this presentation to be nice to show you what the app will look like when everything is connected um and then uh we are also going to show you our roadmap to how we're going to replace the pieces to make it more and more decentralized over time so let's assume uh we are now here on our app we created a we created two users so we can switch between user one user two assert our storage provider um so let's assume that's user one wants to join the dial and it's going to commit like 250 fill um for this this uh this ebook of storage so it commits range 50 fill then we have user number two and maybe it just commits 100 because he has a little less uh so so far like this Epoch on the OS 350 feel committed so if you're a storage provider you know that okay uh the the cake is 350 feel big for this Epoch which will help you make a decision of do I want to participate in this is there enough incentive for me uh or not then as we go into the next stage uh users can vote on which repos they want to keep preserved so you can either submit to repo or you can just vote for one that exists uh so let's say for instance that user one wants to vote for the ipfs repo he comes here and he clicks votes um now all of these votes were cast for this repo right now we are only allowing uh you to vote once and all your votes are cast just for Simplicity in creating the contracts um later we definitely want to evolve in the direction of for sure being able to vote for multiple by splitting your votes uh possibly even using quadratic voting uh it might make sense in this case it's really cool we just didn't do it for simplicity's sake um so now let's say user number two uh instead of voting for an existing repo they prefer to vote for the JS apfs repo so you can now come and cast is 100 votes um the search provider can only see that these are the proposals that are ongoing uh the vote button is just a bug here and to remove it because the storage provider is obviously not able to vote um but they can say they can see like okay there are 250 uh fill in price for idfs and there's 100 in price for jsip for JS ipfs um so now on the next stage the the storage provider is probably going to be like okay this one has a bigger price so I'm going to go for this deal uh so they go on Falcon off band they create a deal with themselves for zero uh the reason why they create the deal for zero is because the rewards for storing this data are expected to come from the Dow right not from filecoins uh Native rewards mechanism so in this case what you're doing is like um thinking well it's okay for me to do a deal uh for xero uh through falcoin because I'm going to get more rewards from the Dow on some native if token from the Dow or even from field directly from the top so they can for instance come here and apply for the ibfs one and then they put the deal ID and the PC ID so these are two identifiers that you get from Falcon deals if you go to fieldfox which is like the blockchain Explorer for falcoin uh you can see this data there but for now we can just put some some gibberish just to make sure that it stays here so the submitter application and at this point um users don't do anything it's just a source providers once they have done their applications uh time goes on we move to the next stage and what they see here is that their application is now waiting approval uh this is because this is the time where the Dow members get to vote and why are they voting um so one of the limitations that we currently have um is that it's very hard um I'm not going to say impossible because I'm sure someone might be able to do it would actually be a pretty cool hackathon project if you could but it's really hard uh to verify that um a falcoin deal contains uh like exactly the file like the zip file from the GitHub repo uh like to start with you would need an article to know what the like guitar brl actually means but I guess eventually the submissions for repost could includes the repo hash as well uh but still on chain you would need to Hash the entire repo which is an insane memory requirement obviously uh uh and you would need to Hash essentially the data available ipfs and then compare it to the hash of the GitHub repo um that's tricky so what we are doing is we are calling on the Dow members to go on Falcon uh verify if I go on filecoin get the data from falcoin so from the deal ID and the pcid get it from Falcon hashtag data compare that against the hash of the GitHub repo and if they are satisfied that the storage provider is indeed maintaining the data that they say they are then they vote Yes meaning yeah I checked it looks legit um once the vote reaches 50 like if 50 of the dial members vote that the deal is legitimate uh it's considered to be approved um meaning that the dollar is voted and they have approved this so in this case user one has more than 50 of the votes uh so it becomes automatically approved to steal so when we go to the next stage uh the search providers can see uh that their deal was approved so um the dollar is voted it has approved this deal the potential reward here is 250 field for this deal the cell is is incorrect here we have to fix it you can see that the potential Awards is 2050 fuel so uh at the last stage they can click they can collect their rewards uh the way the reward collection works is the there is a method on an actor on Falcon uh actors on Falcon are like smart contracts we're going to go over this after on the architecture but essentially the smart contract can verify that a falcon deal is healthy what this means is that for the whole period uh of the deal duration the search provider was able to provide the necessary groups of space-time um however if they have not done that the deal is not healthy then they are not able to collect the rewards because obviously they did not keep the promise to the dog uh so they would not be able to collect anything but in this case assuming that they did they'd be able to collect here 99 um second the wrong number they'll be able to collect 250 fill uh and get that money sent to their wallets so now um let's look at the architecture of this and where we are going from here so the way we want this to work is we have our little front end which is what we just saw in this demo um this front end is connected to a Smart contract which is written in solidity uh the data may be like it gets data through some indexing server or like maybe we Implement uh we deploy a graph on the Falcon Network to get this data from a recipe or from a graphql API instead of going directly to RPC calls but doesn't matter so there's a solidity smart contract that handles the voting the dial funding the storage provider rewards the deal making and the deal verification uh the key pieces here is that the deal making and the deal verification need to talk with fvm actors which like I said are like smart contracts on Falcon but unfortunately this part is still under construction so it's not ready yet um there is no solidity library for um so whether it is smart contracts to interact with Falco and Primitives there is a mock Library available uh you should search the docs or search uh discourse for that or maybe I can send you the link later so you can see what the interfaces will look like but it's not actually working yet so there is that limitation there so we are Keen to get this off the ground and get it working soon so what we're thinking of doing right now oh sorry uh so just to summarize the current roadblocks that we have is that there are no solidity libraries and also uh if you want to call uh actors on the fvm from solidity you have to encode the parameters in seabor and that is a tricky encoding to do in solidity I heard that there's already a library for that but I couldn't I couldn't find it yet but that's also a tricky part um so right now it's just hard to make those calls so what we thought we would do is um to make the deal making and deal verification work for now is we would use web3. storage uh which is also a product of protocol labs and essentially it is um an abstraction on top of Falcon and ipfs where you can go uh you can store files very easily I think they have a rest API as well so you can do it programmatically from some server so our goal is to have the Dao uh like some Dow members the administrators something like that replace the storage providers for this intermediate period before the solidity libraries are ready and what would happen is uh the dial goes on is normal but the proofs are submitted by Dow members who have stored this deal on web3 storage so they would save they would just um put some pointer to that data on the verification stage and the Dow would still vote if the deal is valid or not and that's very easy to do because on web3 storage you get not only the pcid and the storage ID but also a an ipf scid which makes it much easier to retrieve the file because it's pinned by their servers um so that's what we're thinking of doing right now so right now we have our demo app we also have some smart contracts which work except for the parts of talking to the fvm so even though they work they're not very useful at the moment so what we're going to do is replace some of those components with web3. storage and then once the solidity libraries are available we are going to swap where three dot storage for Native Falcon Primitives in solidity so yeah uh this is extremely exciting though I'm not sure if anyone here has experienced developing uh solidity but it's really cool that you can just take all of your solidity knowledge and write a smart contract and deploy it on Falcon uh and even though the storage Primitives are not there yet you can still start playing around with it you can go on the wallaby Network get some test net falcoin uh and just deploy it and see things running on Falcon I was blown away when I tried it because it was super easy um I I wrote a little uh blog post on how to do like a hello world on Falcon so like if you want a link for that you can just send me a message on Discord um but yeah there's a lot of cool stuff to do um so yeah thank you for your time uh you can see my name is Twitter handlers uh here at the bottom uh maybe hurry up we don't know for how long Twitter will be running I'm just kidding uh um there's also a link to the website uh and yeah let us know if you have any questions I think we have some time for each minute so that's it awesome thank you so much for that and yeah if anybody has any questions feel free to drop them in the the equivalent TV chat um in the meantime I had a couple that kind of came to mind as you were going through this um one is you know you mentioned that uh the storage provider at one point would have to sort of open a a uh like a storage contract for like zero fill and then sort of count on the Dow to pay them out that that stream down the road um I think it makes sense to some degree like why that's the case like is the reason why we can't do that under the the file coin like default kind of reward thing just because that missing library or is there kind of something else to it that uh that the data kind of enables that is is more interesting than doing it just with the the base layer reward scheme so it's about I mean there are probably more reasons to it a reason that I think is compelling is that it makes it very easy for a group of people to come together and fund one specific thing while I'm sure you can somehow do it on Falcon now but it should be harder you know as in like some does exist and they solve problems that could be solved before but they make the cost of um what's the words um Corporation that's lower uh so that's kind of the idea here uh you can come together with a bunch of friends if you feel very strongly about a certain piece of Open Source software we like everyone chip in five bucks uh and maybe we can start this for a long time and I think that's pretty cool gotcha yeah I do too um I was thinking about even extending that like I wonder if you've thought of like ways where like you could actually do sort of like what GitHub that done and sort of like actually incentivize like storage of like large amounts of like different repositories even if they don't have like backers specifically um like you know the ipfs one for instance feels like a really natural one to like want to back up especially using Cloud coin um but like you know my like random repo that I care about but maybe I don't have the funding to back up like it would be cool to see if there was a way where we could kind of have a kind of community pool that could go out and like identify other repos that uh that maybe don't have direct funding but I could use a pool of funding to do so I don't know if you've got any thoughts into that area as well um we've with in this and I were discussing a few days ago uh so if you participate in ital often uh you could maybe get like some loyalty points for being an active member of the community uh so maybe let's say if you have participated for a 5V box which might be I don't know three months six months whatever maybe you got some tokens uh which for the next Epoch gives you like um a vote with a higher weight right so even though you're not committing funds on that one you're like you're a value member of our community so you can like signal that this one really should be stored guys I mean I'm seeing the issue here um so maybe that should be a way to do that but I mean like there are so many it does with so many amazing mechanisms nowadays I don't know most of them obviously um but I'm sure there are some very bright people that thought about like really cool ways to coordinate and do those things cool yeah awesome yeah I mean that feels like almost like building in like more of like a yeah in that case kind of feels a little bit more quadratic funding you where it's like one vote means a little bit more because of the the actions that person had taken or like a civil resistant thing yeah very cool um yeah just type of thoughts is really um is really important for us as well so maybe just a shout out to the people who are also listening if you have any ideas uh things that you would like to discuss I mean we're on Discord so feel free to reach out we're more than happy to talk more about Glacier now amazing and then I think I saw right at the beginning of the presentation uh you mentioned this you've been working on this for a couple weeks but I think I also saw that this might have been a hackathon project at some point um yeah so two weeks ago amazing so there you go so for everybody watching uh here here's where you could be in two weeks uh which is on the youth Global stage there you go yeah uh I I think I would like to incentivize so there's this open problem right now I see that we're always in the chats he can he can also attest to this there's this like before the selected celebrities already uh you can do this thing in um you can write assembly code uh in a young file not inline assembly it's had to be your file uh and call the verbatim which means you can just run arbitrarily like uh bytecode that you write by hand like a maniac uh sounds safe and yeah but what I'm saying is like there is currently an actor said there is an actor on Falcon on some test net that allows you to interact with the storage layer but it's super hard to access it because you have to build like the bicycle by hand so you have to push all the arguments to the stack then you have to manually encode the the data in cboard from rust if you can make that work that should be amazing uh we haven't been able to make it work yet but if you go to our GitHub repo you can see all my failed attempts with commented codes of like manual byte code but if someone wants to pick that up uh that would be amazing geez well it's I mean it's possible at the end of the day somebody did make Roller Coaster Tycoon and assembly so I'm sure we can do storage deals and assembly too but uh yeah I think you need to be a special kind of developer to to really want to put yourself through that so if there's any of you out there I feel free to give these guys out a hand all right well thank you very much I think we're gonna just move on to um Charles's chalk next um so uh Charles is working on another data dial side which is uh the LaGrange style so Charles when you're ready I'll feel free to yeah welcome to the stage um and uh yeah feel free to jump into your presentation when you have a second yeah great yeah so one minute yeah oh yeah so I'm dropped so I'm from the first one so um we haven't been working on the fried corn storage and um development ecosystem for quite a while and um I felt exciting recently because we've won the we have a new opportunity for New Opportunities under our new journey to work intervals is the 100 doll for the data sharing and analystick space for decentralized scientists basically like we see that there was a lot of interesting significant data in the world they need a really better services so we see like there's a lot of good public data search people on the world of site wide access they want a lower cost to computing power so you wanted to have a contribution and a social impact because when they do the data uploading the one people know that they actually do something good for the uh Society and also the there was a lot of things on the data but it's not really on chain so it means that sometimes the blink laws the space loss has work loss which is uh really important for those precious data and the versioning now is basically is all based on the centralized system and and there was also like um sharing the data is based on Google Cloud AWS Cloud so this is really a huge Market from the graph you see there will be more than 250 petal byte storage of a few years that means that it will be covered 10 percent or even to fifty percent of private storage so which is really means a lot but if I could have over 18 gigabyte storage on the other side there's a different scientific data they're still holding on some Central storage places looking for storage space so we really want to build into a place and for decentralized science without the borders there were a couple of different places people needed through each and they need um decent incentives so we see like a Enterprise have their data stay in the hard drive we see like a story provider working hard on better storage proven technology we see like developers working hard on the retrievals and there's the token holders they have a firepoint token in hand the real one to encourage the ecosystem because they don't really know how to do that so we need the better places to edit different people in the same cycle so they can contribute to the bigger system a better opportunity to get everybody together so first of all we have we can make the which there was a lot of data sets um you can convert into the data style become data schema store on ipfs and also on the farico network purposely like we can without fvm we can only do one and a half a year which is 18 months storage but now it's possible to make a extendable long-term contract to satisfy the needs of storage for long term for example 75 data in University maybe you don't even need more than five years 10 years storage so it might be really good opportunity for them to store on Freckle now compared to what happened in the past few years on the workspace side we can create a place for people to sharing their data and models and on the payment side the the key proof can be aggregated on the fvm to reduce the gas cost and then increase the volume of the transactions cross-train payment with fom integration it'll give you more possibilities to make a payment not just in fairy coin but the other blockchain users like a polygon and the balance changes can also make a payment using the cross chain defray Bridges to enable the storage on fire Network we've already done some work on that but now it's become more easy foreign modeling and Computing kind of working together as well we already noticed that there's a lot of computing power existing in the frag Network for selling storage but I'm not 100 dedicated ceiling after the storage is onboarded they can also share some of the computing power for the cross chain Computing and it can if we can create a workspace put the data set and the model together and add a paragraph in the same places it can be there was a token economics we needed to be done to sharing the revenue from data provider storage provider data consumer and Computing consumers then we need a effort on the data onboarding and allocate as the dedicated funds for people willing to provide the storage and willing to use the data this is the technical part of the stack so in in order to make a very stronger system we needed to use in the smart contract and core services to make the payment uh where you upload the data to the frag Network you need a different people to swap the tokens so the external ecosystem they can use in smart contract based on D5 cross chain to using the same storage services at the end you need to give people the capability to Mint their data asset as an nft it might be great if it's one click experience instead of writing a whole bunch of a code and at the end all the resources in the fragment Network can be contributed to different systems the critical part is about the data governance under the Computing validation so we need a data article um to help proving the data on chain data availability availability and also the data Computing capability so this part is by a dial organization you need a multi-seek wallet to assign the proof on chain so we have done some work on top of that under the help of retaining external adapter and also find quantitative fee ebm this is the data and payment flow so we found that in the new Dow model there are actually new business opportunities um because for existing far plus system uh there was a couple of things like the data provider so the data set owner and the model Creator they are data provider with the frequent path project they become uh become fair plus deal which will be 10 times more power than 60 sectors the storage provided willing to store them for free even they're willing to give them some Revenue sharing and then the general is something confusing why storage the provider sometimes willing to pay for stored kind data it seems like a very um not common in traditional business this is because when storage provider started using the data to earn for extra fire coins it becomes a data consumer in business side I actually data consumers pay for everything he needs to pay for the storage he needs to pay pay for the Computing and he needed to pay for the boundaries so when student provider trying to get the fireplace Dia for storage is downloading data from the data provider that's why he needed to share the revenue to the data provider it is for the data downloading data is a value that is how the works for today but there's no clear way and a clear Market about how we can do this process automatically and in smart contract away and this is a data schema and yeah so this is the data schema and the model storage so we'll have a bigger data set for example more than 400 terabytes it will become a attracted to 32 gigabyte data PCS the indexed data should store in your safe place as a data schema and the distributor can be stored on ipfs because people need the index to easily fetch it over the data relationships at the end of the day those data included the data schema needed to backup to particle it should be the backup up to five nodes or even more to provide enough redundancy and availability the data space is also stored on private point because it's a huge amount of size and you can treating the data set Minted as an nft on the data market to show that you are actually data owner of it and you want to provide the opportunity for others mix the funds together this is one example about from the community using the same methodology to Mint the Five Point snippet shot as a data set so basically like the type of frequently back have the Franklin snapshot put it storage on Frank Network and the create um CSV format Json format data set schema and as it means the schema as the unlocked key with the smart contract and put it on Open Z so everybody can fetch the data schema from the smart contract and because this is really important so it will be the key pointer in the smart contract with the ipfs hash you get the data C3 persistent in the network for long term and in order to make the Computing become Mountain easy we needed to create a space which can join the data provider and the model provided together with the computing power and then the communicate Computing result the back Capital Striker Network we haven't done lots of work in the past few years and we have a website switch to whatever and worldwide searching all the available storage provider and it gives them very patient points so we know that who is good for the community to store who is reliable we have a cross-chestra story previously already working with the polygon Network and we are planning to migrate to every event evm Franklin work it's really solidly compatible and it can automatically back out the story to five nodes on fried coin ecosystem they also have age Computing nodes can doing the Computing based on the ipfs container hash so now we have codes for participants to join the ecosystem doing the revenue sharing so we are as many about 12 to 10 percent Revenue were shared with all the data set uploaders and well we have been contributed in the system for a long time since 2020 and we participated in the solution one seminar B2 and the firehouse thing we manage the data hex so you can see we already have lots of ecosystems projects working on the data and the religious building work now we are going to show some work we have been done already so this is the system because using um but as a V1 draft version so we already be able to connect with the fried Point assistant and you can log in with the meta mask to sign saying and you will see yeah your wallet address and your balance of the frycoin and you can create your data set here according to uh to your need if you want to create a new one you can just add the data set and you can you have your wallet as the owner you can give the name about data set of for example B is hello yeah and for the data schema and you can choose the data schema for example I have a data streamer here already you can put the data side yeah so in future we can catch it and you see here you create a new data so ID with the content here uh we're still working on the model and the space and the Computing we managed to get as a Computing work here from the tensorflow running all everything yeah and doing all the Computing works here and get as a result from all the systems foreign so the next step of the work is really like to make every piece is working together Computing Hashi machine learning uh ipf pass integration and create the workers phrase for everybody under the token sharing model with this multigen storage we are working on provide people of filling of 30 gigabit bytes of free storage so result storage is can be connected with the data dial you can use this as a AWS compatible failure in storage and the storage data are used stored on the data Tower will be used backup to ipfs and then back on five nodes and those three providers will share their revenue with you and as a data provider you get a income because your data value when data models start and the computing power slot you again extreme mod value from your machine learning models yeah so that's pretty much about what we are now and we're working towards the next Milestone to bring the computing power online and please follow our us later and if you have any questions you're also welcome to talk to me on telegram thank you awesome thank you Charles for the presentation and and also for those demos at the end on what's actually being built um I think really awesome to see and um I mean just this concept of being able to take um just kind of underlying infrastructure and actually make it really easy for for end users to to you know store files or then eventually do compute and these things it seems like you know really really valuable um effort that that's that's being put into this so uh thank you for that um just see if there's any questions from the the chat uh but it doesn't seem like any of coming through so far so um maybe just curious on your end like uh if you were you know you yourself you say you've been in the community for a long time and I saw a lot of the hackathons and stuff there if you were uh gonna be building this weekend at this hackathon um what would you be thinking about and what are some of the projects that come to mind that you'd like to see built this weekend yeah so I'm willing to I'm really interesting about the project here like make a usage of the data for example we say in last uh um hackathons we see people like using the data for the decentralized routing because the city and network building on top of the data they're trying to share using the revenue sharing from the data storage and redistributed to other services become a cycle we're also interesting to see like people how to do in the governance part for example votings um sharing openings proposals submissions and the central party is something like um we really like to see like people can using apis please firecoin provide value for Access like um mirror we know that mirror is already using the ipfs and the Fire Control storage but how can make them use more and eventually pay more in the future so that will be very interesting topic for us amazing um cool well it totally makes sense um okay great I didn't see uh uh oh there's actually um okay cool somebody asked is there really a connection in between ipfs and nfts um I I guess it might be worth kind of dipping in a little bit closer into how you can kind of use ipfs to be that storage layer behind um nfts yeah I'd really like uh we see like an empty stored on ipfs is a variable because but it's the only issues like lots of nfts have IP address content but they don't really tie together and we are just stored right that's just one ipf ads how about the ipfs content is you know we know that ipf is not incentive to store for long time yet so have ipfs through each back and foreign like yes Mac storage is on ipfs and nft so prime minister wage that is how it works right right yeah exactly the kind of nfts right now a lot of them have the content hashes but of course if somebody stops serving that file or the network stops serving that or whatever even Gateway a lot of people use gateways instead which is even more fragile um then then you know you're nft that at least the content behind it goes away um but then yeah actually having that defined relationship between um falcoin and ipfs and kind of having that guarantee that uh you know Perpetual storage uh is is sort of Uhm we don't really relaxing Solutions we can have a vvm native Solutions get everything in one system which means vaccines optionally much easier than the cross Chain Solutions definitely very cool um awesome okay well that's all the time we have on our end Charles thank you so much for uh your time and your presentation on the LaGrange style and uh looking forward to uh having you back on the show at some point and and also feel free to join the Discord and chat with people as they build over the weekend so um yeah thanks for being thank you awesome okay cool and then uh we're gonna go to our last but certainly not least talk um so thank you again to our last panelists um and uh yeah gonna invite Pooja up to the stage uh Hey pujo feel free to uh share or share your camera unmute yourself um and welcome to the stage uh excited to hear about the fem boot camp from Puja and always wonderful to have uh Puja be a part of uh anything we're doing basically so welcome to the show thank you super excited to chat about this um today and also very excited to be participating in the hackathon this time so that's been fun um yeah I will share screen and this is like okay Jacob yeah it was great okay great thank you um awesome well yes as Jacob mentioned I'm here today to talk about the fem bootcamp also formerly known as the radius Fellowship um fvm Edition um and so uh for those of you who who may not know me I work with Tepper labs and radius is a project that from tephra Labs it's a decentralized talent Marketplace um and so for the radius Fellowship this is a program we recently launched and it's um we basically saw that there was a need for people within the web3 space um to have more like protocol specific training if they were interested in finding future like opportunities within uh within web3 and maybe in that particular protocol ecosystem and because we know and love the filecoin team so much and also our have been watching the progress of fbm and febum uh really closely over the last few months we thought we would take a run the first version of this protocol specific training program with fem so the radius Fellowship more broadly um is an advanced training program for folks who are interested in learning how to build with new protocols we are really excited to kind of introduce a community element to it so this is a cohort based program and it's um you know folks apply to be part of the fellowship we go through a little selection process so that we can make sure that the cohort will have really great connections and really start to build that sense of the network and Community amongst itself and then we're also working with the various protocol ecosystems to identify grant opportunities for the folks who participate in this cohort so they get an opportunity to build something that's real um sort of like Get You know we all love hackathon prizes so it's sort of a similar vibe in the sense of um getting some funding to work on something that's meaningful within this ecosystem building a community getting the training um to know how to like really confidently build within that ecosystem and then seeing what that sort of opens up in terms of future opportunities after the program is done uh the first cohort as I mentioned is focused on fbm and we're starting this program in early January next year the applications are closing next week but they're still live now so if you do want to take a peek at that um the website I think was on the previous slide but that's at fellowship.radius dot space um and we are looking for folks who you know especially for this first cohort we want to make sure that everyone is really set up for Success so looking for folks who do have a few years of engineering experience but it doesn't have to be in web3 so I think a lot of the folks who are maybe participating in this hackathon could be a really great fit for the first version of this program and then we are currently charging a fee for the course but there are fee waivers that are available as well and that's something that we are planning to be like fairly generous with so ultimately you know if you are interested in participating in this program and you would be really excited to complete all the um the assigned work and participate in projects with other people in the cohort and really just do the work of um you know going through this boot camp because it will probably be a fairly intense experience for the folks who are participating um we for this first version would be happy to wake the feed it's mostly just about making sure we have people who are like really excited about this and willing to put in the effort um it takes to be successful um so just to give a little bit of an overview of how we're thinking of structuring um this program the there's it's a four-week program officially but there are a couple of um pre like precursor weeks I would say or kind of Preparatory weeks for folks who are newer to web3 um the first week or week negative one as we're calling it is kind of a more General introduction to web3 broadly sort of like the ideology of the space um and especially how that ideology and so that ethos translates into how we think about building projects in web3 um I think it's like a very unique space largely because of just how strong um how how many shared values and principles there are and how that does translate to how people think about um building software and and projects more generally so we I think it's always important to start with that um and then we'll also be doing a little bit of a deep dive into solidity um this the first version of the fbm boot camp is going to be focused on fathom because also just because of the timing it's early 2023 and so um Feb will be like pretty robust and sure by that standpoint by that time but I believe at the the timing of the fem um itself is scheduled for like later in in q1 2023 so that's why we're sort of focusing on febim for the first version but we will be doing a little bit of a deep dive into solidity uh for folks who this may be like their first time kind of experiencing it or um they're sort of like newer to working with celebrity and then the full program which everyone will be participating in who's accepted into the cohort um is the four-week program and the first week of that will be focused on biocon protocol fundamentals and also some of the architecture of fem starting to do some introductory content on on that front the second week will be more of a deep dive into how fem itself is structured and some of the tooling that folks can use if they're looking to deploy projects we'll also this week talk about use cases and start to like brainstorm and ideate on really valuable opportunities that might exist um in the Falcon ecosystem to build high impact projects in on fbm um and then the third week will sort of kick off formally working on bigger projects there will kind of be like um you know smaller projects that everyone is kind of doing the same thing the first couple weeks and then week three will be more like uh Choose Your Own Adventure type of projects with teams that will help you form um and then if you're interested in that it could also work solo and then week four is kind of like wrapping up those projects um or deciding what the next steps would look like if they are going to be longer term um helping to construct portfolios and so on if that's interesting and then the uh the last piece of it would be thinking about how to set Folks up in this cohort for whatever future opportunities might be interesting to to you so whether that's looking for Grants to continue the work that you were sort of doing during the program or like finding new brand opportunities whether it's looking for full-time opportunities in the fbm or you know like sort of that General ecosystem or other ecosystems or like finding teammates to continue working on exciting projects with uh this is a little bit of just today how we are Imagining the weekly structure will um what kind of look so there's we've planned basically a live session uh every weekday and there will be some amount of async work as well um pretty much every every day although a lot of this will kind of be at your own pace um the non-life sessions at least every week we'll sort of have a project assignment as I mentioned and then you know we're trying to introduce other other sessions um to make this like you know like fun and Expanding Horizons in terms of thinking about opportunities inventory more broadly so we're planning on doing weekly guest speakers who are all gonna like all amazing humans and also giving cohort members sort of like private AMA sessions and so on with those speakers um also doing like small group sessions so that we can really start to build um that like Network and Community within cohort mates um some of the types of live sessions that we are planning on organizing include live coding sessions lectures on many different topics sort of government by the theme of the week and then a number of different like deep Dives which we will we'll you know be happy to sort of organize and schedule based on interest but these are some of the topics that folks have already mentioned being interested in that we're planning on covering um and then also just throughout you know the program we are really here to basically support we're doing this because we want to see how we can help set people up for really amazing careers in mod 3. um and so there will be numerous opportunities to kind of uh get feedback and mentorship from uh from the folks who are running this program and also others within uh the ecosystem and as I mentioned you know we're working to identify projects and grant opportunities for folks to kind of pick up during the program as well so you sort of get that like real life experience a little bit um this is the current uh group of folks that is organizing the fellowship um and it's myself Rohan and Steph um all really friendly people and um yeah excited for you to meet them if you decide to participate in the program and that's pretty much it if you have any questions feel free to email us or you know DM us on Twitter and the website is fellowship.redust.space and you can check take a look and apply if you're interested thank you amazing thank you Pooja um it sounds really exciting and I mean also like a perfect segue from like if you hack this weekend I'd really like what you see and want to keep going and um this seems like an awesome way to sort of take that that deep dive and go through like a really rigorous experience and maybe at the end of it it probably will be life-changing for some of these people so I'm really excited to uh to hear that and I'm glad that we talked about this with hackathon um I think it's perfect perfect timing cool all right well thank you again uh Puja and thank you everybody for tuning in today um really appreciate you all being here um and of course uh with that uh this is the end of the hack fathom Summit uh but of course it's only the beginning of Act five of them um so everybody uh if it's not already obvious you can start hacking um and really excited to see what everybody builds um in your submissions on Sunday uh after this weekend um so happy hacking from all of us at East Global and from the protocol Labs team uh and everybody here really excited to see what everybody builds and hope you all have a great weekend and we'll catch you on the Discord cheers 