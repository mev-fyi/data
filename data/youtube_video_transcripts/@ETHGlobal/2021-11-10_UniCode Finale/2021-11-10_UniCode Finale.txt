good morning good afternoon and good evening everybody my name is kartik one of the co-founders of each global i want to welcome all of you to the unicode finale you're all watching this on youthglobal.tv and for those of you who are watching this for the first time i really encourage all of you to log in and say hi and customize your avatar and if you have any questions or anything about the event you can ask them on the channel we could relay those questions and answer them directly so this event is organized by global and for those of you who don't know if global is an organization with a very simple mission our goal is to bring on thousands of developers into the web3 ecosystem and we do this thing by running hackathons and summits uh and this brings us to unicode unicode is a very special event for us uh for this event we had over 340 uh people from 40 different countries spain spanning 17 different times i was working on really interesting projects on top of the unesco ecosystem and on top of that we had such an amazing representation from so many different parts of the world this is just a map of where everybody was coming from you see the the immense diversity number of cities being represented and we're super excited to share that and tell you about all that happened over the last two weeks for unicode in addition to the hackers we also had 20 ecosystem mentors and six technical mentors and seven ecosystem partners that were here all along helping all these hackers with their projects and all in all this event has been absolutely incredible we can't wait to share what came out of it in the next few minutes and after submissions uh finished we had over 61 we had exactly 61 projects come out and now we're going to be looking at 10 of our finalists on this live stream so with that said i want to get into these 10 teams i want to congratulate no particular order syndromes uni strategy uniram skyfire dao super fluidity airlift finance unit swap api explorer cross cash hero swap and caravan for being our 10 finalists uh we'll be bringing them on one by one today they'll be demoing live what they built over the course of the last 10 days for this hackathon and from there we'll go into the prizes which i'm sure all of you are waiting for um as hackers and as you were looking at these 10 teams we noticed some really great and kind of common themes a lot of them are tackling education about this ecosystem especially with what's happening in d5 and the pace it moves and changes we have projects that are tackling liquidity management and just strategizing for how you can take advantage of a lot of these protocols and on top of that we have some really fun and useful utilities and tools to help you manage anything from liquidity to integrations to just understanding and making your developer life easier so we'll be going into that and you'll see all these 10 projects highlight good and bad of each of these categories and before i bring on the very first team i want to quickly take a second and thank all these amazing 51 projects for participating at the hackathon and really taking the time to learn and explore and experiment with what is possible in this ecosystem just because you were not one of these 10 teams does not mean you were not good enough or something was like not great about what you did um the goal is for us to highlight some really cool things that everybody's excited about and for all of you i really encourage all of you to work and continue building what you were aiming to do for this hackathon uh given that this was a 10-day event i'm sure there's so many things that you couldn't implement and would like to implement so if you need any help after this ends and if you need any support whether it's on the technical side or understanding or talking to people that you would like to get some feedback from please find us on the ebola discord or on email we'll be happy to help each of you so with that let's jump right into our first of 10 demos we're going to bring on three different teams at the same time here we're going to start off with you swap api explorer then we're going to bring on sand drones and then sky fire down so without further ado let's welcome our very first demo finalist for the day and have been able to talk about what he built welcome hi everyone uh thanks so much for the opportunity to uh uh to present today um so my name is evan jacobs i'm a software developer based in seattle washington and i'm one of the uh i'm one of the folks at cardig uh talked about i'm brand new to to web3 this is actually my very first uh project building uh with web3 or crypto or d5 i don't have a background in any of those or even in traditional finance so this was a very much of a a big learning uh experience for me but it but it was really great um so but one of the first things i noticed when i when i started to get into this um using the uniswap app for example was that it seemed like it's a great app like it almost seems you know too easy uh it feels like it feels like magic and i i kind of wanted to understand a little bit more like what was going on uh you know under the covers behind the scenes and so um i built this app uh called uh uniswap api explorer it's just a it's just a javascript app um it's built on top of the polywrap api and also uses skynet is deployed as a skynet home screen application and so yep you can see it here uh you know my uniswap primer uh on my home screen and um so yeah let's just jump right into it so again my goal here was to uh help myself learn uh learn about uniswap um document what i discovered along the way and maybe you know build an app that could helpful be helpful to to other people like myself who are new to this this world so i'm just going to one run through some basic concepts and and explore them uh by making api calls and see what seeing what we get back so uh obviously the first element we want to look at is this uh this idea of a token um uh tokens are you know kind of the basic the basic element so with this uh there's a list of list of tokens you can a representative list of tokens that you can look at so if we look at something like ave we're going to make a couple of api requests and get back some token data and um this uh total supply so we're calling a couple of different apis um one of the things that was interesting to me i didn't i didn't really realize this until i started looking uh deeper and what's noted here in this observed section is that uh yeah some tokens have this nice round number for the amount of total supply but but others don't if you you know look at uh ether for example it's kind of this you know ever-changing uh number um so i thought that was that was interesting interesting observation so um once we understand a little bit about tokens i think the next thing to look at of course is is pairs so these are just a a combination of two tokens so let's look at again maybe something like ether and uniswap so we fetch the it gets the same data about those tokens but we now we have this new concept called called a pair and again the observation here is that and which is highlighted over here is that um these numbers now represent um the number of tokens that are in this uh liquidity pool for for the pair um in some cases this you know there's a lot of a lot of liquidity in some cases there's there's not for example i think if you do something like some of these lesser-known uh tokens maybe like uniswap to chili's for example there isn't there isn't actually a pair that gets returned for this and i think that i think that's that's a result of the fact that there isn't a liquidity pool for that pair so um again that's just an interesting observation um so once we have a pair now we can start to uh again kind of layer on this uh layer on some additional complexity we want to talk about this concept of a route um and so we can create a route for the pair above and now um you know the observation here is that now this unordered pair that we had has been transformed to a a path so it's a it's an ordered list now going from you know from ether to unit swap in this case um and then if we see look down further below we see there's there's an input token an output token okay this is this starts this is starting to look like a you know like a transaction that we're gonna we're gonna conduct and then uh finally or at least as far as i got during the uh during the hackathon was uh this concept of a trade so that this even moves it even closer to to the idea of actually generating a swap and so we can create a trade based on the route above and the observation here now is um so i've hard coded um a thousand of the input token but assuming that we put in a thousand of the input token we can see down here um in this output amount so for a thousand uh of the input token ether we can expect to receive about 170 000 uh of the output token so uh of uniswap so um that that's as far as i got during the hackathon um i think for next steps what i'd love to do is just keep going just keep going deeper there's there's obviously a lot uh a lot to uh to continue to investigate and explore here um i think i think what's really interesting like i noted above with about pairs to even some of like the air cases where hey there's not a pair yet for this uh for these two tokens maybe that could be a jumping off point for learning about liquidity pools for example and so we can start to go down that direction um i'd also like to uh this is like i mentioned this is built on on uh on polywrap um on the polywrap v2 a uniswap v2 um and i know i believe the team the polygraph team is working on v3 so we'd love to you know port this over to that when that's available maybe even describe some of the um some of the differences between v2 and v3 so i think there's a lot of a lot of a lot of room to keep going here um and uh yeah just wanted to wrap up by saying you know thanks to the the organizers of the hackathon it was i thought it was really really well organized um great communication uh throughout the you know throughout the 10 days and then also thanks to the sponsors um uh i thought the the information uh sessions were were awesome i learned a ton and then you know whenever i got stuck or had a question i could just drop a uh drop a note into discord and someone was always there to help me out so yeah thanks very much thanks for the opportunity to present today thank you so much evan this was an awesome demo i know you continue building this uh for all future releases and possible apis so uh thanks again thanks kartik next up we have syndrome so uh whenever you're ready let's get right into the demo hello hello everyone uh let me share my screen and get started so hello everyone and welcome to sunderland's team project uh together me and simone are going to present a novel idea regarding on-chain uniswap v3 oracles but what is the problem until now protocols that needed to reliably get unchained price data had to rely on off-chain solutions like the official unit swap v3 lens quarter or to use to store prices in their own smart contracts which means to pay high gas fees we iterated on the existing design of the uniswap oracle library to create a quarter that fits into a solidity view function so that's easy to call and doesn't cost any gas and it gives a quite a reliable instant price so this is how we do it the solution uh first we check how much is the watt and the swap and if the price impact the price input related to it um if the price impact is greater than the nearest thick we skip to it and we perform another simulated swap we rinse and repeat the process until all liquidity has been swapped and that that is how we get the final price uh possible applications uh well of course now protocols can access the quarter using a view function uh it means that that anybody can integrate the quarter on chain in your own contract without using unesco official front end without paying other external providers etc or to reinvent the wheel with exotic designs that may be subject to attacks so now let's go to the demo you can follow the link uh just remember to switch on corban we will be using mainnet fork for easier pricing okay so let's get started i have a uniswap interface and our coder interface i will start with a simple swap swapping wrapped ether versus link and i will use just one as as the token okay we just implemented a few um just remember one of the things is uh uniswap is routed so i will use uh just one drought and as always the nice thing of live streaming um yeah okay you can see a small difference in this price because of the mainnet fork is quite old but the on-chain the lens quarter is giving the exact same price so what it's right it's routed this is routed yes yes yeah so that try one not trusted okay like this one let's try a bigger swap uh with uh 1000 drops eater and uh 0.3 percent quote 1000. yeah 1000 thousand yeah but that we have one there oh yeah that's right sorry it's okay yeah and then the quarter was quite incorrect it's the good of life yeah as always yeah obviously it's running in the back is yeah it's running an integration so it takes some time but it always gives a good result as long as the pool exists uh if it's not okay so pretty consistent you can see one two three five eight three uh finally just to conclude we are going to test uh by which is the if you know the difference it's a exact output single um unit swap quarter and that's a die versus uni to try another pair of tokens so i will try one die one unit sorry and see how many zi's i get for swapping one unit so 0.3 i get why i ask for one destination talking so um okay it's 26 80 60. okay it's 1868. so perfect uh we believe just to conclude and wrap up um such a tool is really needed for the wide spread of unit swap v3 in existing protocols like liquidity aggregators and for the future we first see to turn at this quarter which now is a bit clunky but gives good results into a fully fledged time weighted solution so that it's reliable even when you need to withstand flash loans and mine extractable values and other price manipulation attacks uh i want to thank um uh the organizers and the sponsors for their support through the throughout the academ and for all viewers uh even if if you want to drop a feedback just uh put on the chat of ath global thanks everybody and see you thank you so much it was an awesome demo and uh of course a lot of demos can be tricky so let this all work out really well exactly congrats and uh next we have team skyfi now so i'll let uh everybody turn on their cameras and kick off with your demo hello everyone i'm b wolf and i'm talking to you guys directly from minas gerais brazil we are skyfire dao team and our our project is a way of gamify liquidity mining events so liquidity mining is the event by which projects airdrop tokens in exchange for users providing liquidity for their token pairs we hope to make this process more fun and more intuitive by gamifying it by using unit swap merkle distributor we make a fair game using the hash saved in america tree we integrate the unit swaps taking contracts we provide a variety of integration options additional challenges via skyfire down tokens customization on this project is a possibility we support adding more custom game features for payment in skyfield tokens so how does it work users can play the game to get a score in the letterboard every epoch uh the oracle converts leaderboard scores into token distribution claims via uniswap merco distributor contract the claims are verifiable per epoch using a single contract so partners can integrate uniswap's taking contract and skyfire down distributor additionally conditions such as pay lp tokens to play can be enabled so for example let's say that bob has a dao and he wants to get more people to participate in his community so he runs a liquidity mining event using uniswap stake contracts in order to increase participation he buys skyfire dow tokens and integrates the game as an option for his users by connecting the stake contract to the miracle distributor so let me show you guys how the actual game for the the project is so you play as an olympian hero and the gameplay is a little bit similar to angry birds you pull the character and you drop it after you've beat all the little minions the boss appears and you can get your score by collecting coins and making combos after you finish the boss you will be taken to this screen where you see your score and you will be able to claim the rewards here to your account so for the next steps we hope to make this game live by january the next year we're looking for partners and users to use it and you can try it by yourself on the link that i will be dropping on the chat and on the discord so if you guys want a game for your liquidity event just contact us thank you thank you so much for that awesome demo this is a really cool way to think about community engagement so i'm really glad that you were able to uh present this live there you go thank you all right so with that we are ready for our next uh three teams so i'm going to invite uni strategy cross cache from uniramp here on stage and without further ado let's uh get into the demo for uni strategy whenever you're ready yes i'm ready hi everyone future screen all right so our project is called uni strategy and this is the team eyes on me as loving okay so our idea is to build a simple strategy to manage university position on optimism and in this first implementation we just placed this order centered around the price using a rebalance function that do swaps to keep us at 50 15. um so with respect to current available solutions um like uh visor and charm we implemented the swaps inside this strategy regarding architecture straightforward user can deposits and withdraw shares from the vault uh the other important smart contract is the strategy smart contracts that sets their base order length and the swap parameters then there is a trick a keeper that can trigger the strategy at a balance the vault communicates with unit swap and do all the swaps and minting and boarding necessary to provide the strategy let's look at the product so this is the fountain which can be possible to interact with the vault um so let's try to deposit meet and die all right fast of course i can deposit an equal amount of width and die as the the process of rebalance will take care of keeping the values 50 50 in order to have a balanced strategy so once the deposit happens then the vault would mean shares now room drops in slow and then the user can see the balance of the same all right worked bus is updated can withdraw as well so this would according to the put the amounts in the vault to swaps and give the user back its initial tokens um so the other the other part we built is a rebalance function so the one that is activated by external account and takes care of computing the amounts to swap in order to keep the strategy 50 50. um we we we think to build these this product on layer tools in order to be able to provide higher frequency strategies so here you see that the balance worked we have zero if and zero die left in the vault and this means that all liquidity is being employed in a 50 50 proportion in the universe order um we conducted some back tests of the strategy you can see here which was the summer period and these are all the balances which happens must be more frequent than other currency solutions this is also because gas fees or layer twos allow us to do so we are able to keep 50 50 composition as well and also like regarding performance we are very close to holding so for being our first try we are rather happy regarding next steps we want to refine the strategy and then do more testing again as i said we we want to be focused on the year twos as these expand a lot the the scope and the reach that these such strategies can have and we already live on optimist testnet if you want to try then provide the link and of course then we would add more pairs and rebalance options for instance user could maybe choose other proportion than 5050 who according to impermanent loss preferences if you're interested you can contact us again as i said there is a demolish so give it a try and that's it thanks for organizing zuckerton it was very helpful to meet these people and we'll learn a lot amazing thank you so much for that awesome demo and yeah it's really great to see the f5 on l2 becoming more of a priority for everybody so this is awesome and with that we are ready for our next demo and we're going to invite team crosscash and cuba is going to talk about what they built welcome thanks carter and we're gonna have mark handle the presentation okay so one thing we were doing we were thinking about as we were thinking about how to build this hackathon is that there were a lot of great l2 chains out there that could make some great de-apps possible but they're not used the problem is that it's expensive to transfer money to those chains and also why would you move money to a chain with no d-apps and why would you write dx for a chain with no users it's a catch-22 what if you could put money in one place and spend it anywhere call any contract from any blockchain well that's us we are crosscash we're across network bridge for instant liquidity well so the next thing we're going to show you is a ui demo uh we forked metamask to show you what it looks like to have for you for the user experience first you go to your favorite diy mine's unit swap and i'm not just saying that because it's the hackathon uh you make the swap and then when you go to your metamask window you will see two options one to trade ethereum on mainnet and one to trade ethereum on optimism now you can notice that with the transaction fees the transaction difference is way way lower on optimism and if you go into the transaction cost um even though there are more things if you go to the l one minute cost it's just gas fees on when you trade to l2 you have to do the transaction cost of doing the swapping and then there's a lending fee which we'll talk about later this is the magic of how this works so pretend you hit confirm here's what happens on the back end before you have money on mainnet and a lender has money on optimism as soon as you hit submit one you create a bond and you deposit money into it this bond only opens under conditions that you set here it's when a swap is made two the lender does the swap and deposit it into account of your choosing this earns them a claim key this key is an nft and it can be bought and sold however the lender wants it to be now in between two and three the claim key will move to mainnet this takes a week for optimism and then finally three whenever a bond and a claim key are on the same blockchain the bond can be settled and money inside can be withdrawn [Music] but now you may notice that your money is right now stuck in l2 to get your money back into l1 you can do the whole thing all over again with another lender who has liquidity in l1 so one you create the bond two the lender sends you money on l1 three between two and three the claim key moves to optimism and three finally the lender can take money out of the bond inside of optimism but the beauty of this system is that you don't actually have to do that unless you want to call a contract in l1 this whole thing is invisible to the user wherever your money is doesn't matter because with a system of borrowers and with the system of lenders everywhere you just call contracts you don't have to think about how it works and it's even cooler than that in order to implement this we use zero knowledge proofs so that all con all amounts are confidential in addition to the ui demo we have written contracts in our repo we've done this with and without ck proofs the way a zk blockchain works is pretty simple the same way you would submit transactions to a blockchain to change the state you submit proofs to a zk blockchain to change its state here on the left you see the direct version doing a direct transfer and on the right you can see the zk version where you would first generate a proof and then submit it to the zk blockchain to be verified now full disclosure this is done on aztec 1.0 asic 2.0 is out but the code on the right would actually cost you about 2 million gas so you're really not saving any money here but in asic 2 you can roll up your transactions into a single transaction this amortizes the cost of gas per transaction on mainnet down to about two thousand gas per transaction this is now direct transactions cost about forty thousand gas and that's basically how we can we can get our cost savings spending money on l1 okay and that's us my name is qualcon i worked in the back end on the contracts mark controlling the presentation worked on the ui demo and there's one last thing on the next slide the next thing i think that we want to do with this is that well this system if you recall the system of bonds and claims there's nothing really about payments and transactions anything that you can verify by software you can use to unlock the bond which means you you can buy things that don't even exist yet imagine imagine if you've ever hired a plumber or a software engineer and you thought man am i gonna get what i paid for well on the blockchain you can you can guarantee that you'll get what you paid for i think that's really powerful and i hope you're excited about it as i am thank you thank you so much for that awesome demo and uh what a great way to stitch together potential new technologies and what's out there right now so this was really great congrats thank you all right and next up which is our last project for this category and it's chris from uniram so chris whenever you're ready feel free to demo what you built all right give me one second here all right can everyone see what i see my screen uh yeah okay uh so some of you might be familiar with uh the uniswap dashboard um and i think uh for folks new to the unit swap community uh you might not necessarily know what pools are what trading pairs are and what liquidity even means or what sort of implication there is um so i put together an app called uh uniramp which on boards users into the uniswap ecosystem in a more gentle manner uh leveraging folks that might already be familiar with ethereum or using web3 metamask so the core functionality is to log in with your existing metamask account uh you can find share and create liquidity pools on the unit swap platform and then lastly learn and earn rewards uh in the uniram project for completing tutorials or contributing to a liquidity pool and understanding risk so let's uh let's show how this works so first of all you connect uh with your metamask enabled wallet or any sort of uh ethereum enabled wallet uh and you're taken to the home page where you can do a couple core actions uh in particular around understanding what unit swap is and how to find potentially the best pools to contribute to uh and uh potentially deploy your own pool um so the tabs on the top i'll go through each of these uh you can discover pools and i'll talk about that in a minute you can swap directly from this product uh you can learn about core unit swap concepts and also understand risk and in particular uh this project ties in visor finance and some of the hypervisor concepts to show what happens when you act as a liquidity provider on those pools and what sort of benefit or risk are you assuming uh when you do that so from the learn tab we already leverage a lot of the existing documentation and you know unicode put together a lot of really great uh material but how do we get it down to like a very condensed view on each core concept so we have like the the high level things here like swab what's a pool um but we also have more advanced concepts like automated market maker uh what's a hypervisor and impermanent loss um so these are some more of the higher level concepts that this product onboards you into and then hopefully tries to get you more comfortable with so you can actually act as a liquidity provider and earn rewards the swap page is uh as simple as it sounds so you can do it directly from this product so you know if i want to swap between usd and w eth just go ahead and click trade and it plugs directly into the technology that uh uniswap already created i'm not trying to reinvent the wheel here or use existing functionality but many people might not necessarily know about how to do that or how to initiate that uniram just ties directly into that existing interface to do that discovering pools is the core functionality of this product and for every sort of pair and this is using the unit swap graph api we pull down the latest transaction info about what the most popular pools are because anyone can create a pool um but which ones present certain fees which ones are getting the most volume how can we present that in a different way or give them more insight directly off the graph api and these are all the white listed sort of uh pools that exist and be able to find which ones are the most popular as well as dig into any sort of hypervisors that might be related to those pairs or pools so in this case i clicked the random one and it just so happened to have a hypervisor associated with it um right now this is just a rendering of what's coming back from visor finance but you could click into that hypervisor see what that contract potentially offers or extend and build your own hypervisors based on uh these particular pre-existing pools lastly understanding risk um so i actually didn't know what impermanent loss meant when i started this project um and it's a very important concept when you act as liquidity provider because the the the position you're actually taking the underlying assets whether it's ether or or or die or any sort of erc20 token fluctuates in value and i have an example here where let's say wrapped ether changed 100 while you're acting as a liquidity provider which is not unheard of in this environment uh what sort of loss would you be taking or impermanent loss would you be taking on that position over a given time frame uh if you actually took uh acted as a query provider um and that's actually very well defined and there's a formula on the web that corresponds to that but this is a visualization of where you possibly lie on that curve based on the projected change for a given currency if you're involved in the pool lastly all the code is on my github so i encourage you to check it out but that's pretty much the uniran project and thanks for your time thank you so much chris that was a really awesome demo and again like it's not just about cool deeply integrations education is such an important piece here because that's what really brings more people in and this is a really amazing project that gives you the technical and non-technical interview overview of what's possible uh this is great so thank you so much and next up we're going to bring on our remaining four projects for the demos we're going to start off with caravan then early finance and your swap and then our last demo of the day will be super fluidity so without further ado let's welcome andrew and juan from caravan whenever you're ready feel free to get started hi we're caravan a new market for liquidity positions uh my name is jual and i'm a fourth year studying computer science at uc berkeley i fell in love with web 3 over the summer and i'm super excited to be working in the space hey guys i'm andrew i'm a junior at uc berkeley studying eecs and i got into crypto in 2017 when i started mining ethereum in high school so we're basically a secondary market for liquidity positions we originally started this product project at calhax where we implemented the renting mechanism basically we allowed people to rent out liquidity positions and receive an upfront payment whoever is renting the position could then collect fees earned by the position for the duration of the rental since then we've implemented buying selling an option so let's talk about buying and selling this is pretty straightforward a seller someone who owns a position puts it up for sale on the market for a certain price and the buyer can then buy it at that price the main use case we see here is when a liquidity provider pulls out their liquidity right the position still exists it still keeps track of the ticks so if someone else wants to have a position within that tick range they can simply go and buy it instead of minting a new one this will allow users to save about 60 on gas fees when creating new positions the second thing that we've implemented that we're very excited about is options so for buyers options allow you to fix your cost basis when buying into a token and they allow sellers who are liquidity providers to lock in profits on their liquidity positions let's talk about how they work the owner of a position sells a covered call using a percentage of their liquidity position they also pick a token in the pool which they want to long the strike price of the option is set by the upper or lower tick of the position depending on how the pool is configured the buyer can then exercise the option when it becomes in the money basically when the exchange rate crosses the upper or lower tick boundary of the position to purchase the longed token at the strike price um so for example if you want to long eat you can uh you can buy an option with a strike price that's like 4 000 die per each and when the option becomes in the money for example the exchange rate goes to something like 5000 diaper eat you can earn that eat you can exchange uh four thousand died for the for the one eat so you would gain a one thousand uh diet profit um now andrew is going to go over the demo all right so this is caravan the first thing we're going to do in our demo is go to the create tab and this is where you can create all the different kinds of listings um i want to create an option listing i want to sell a call on ethereum so going to my uni swap i have some dye eat positions um so this one is 9339 so let's just put that in let's put in whatever price we want to sell it for the day the amount of time that we want this option to until it expires and the percentage of the ethereum within our liquidity position that i want to use to sell the covered call in this case i want 100 and finally the long token address here i'm going to put the address of wrapped ethereum because this is the address of the token that the buyer of this call will be long so the buyer of this call will be long wrapped ethereum and i will be selling a covered call on practice theory and so i will confirm this transaction and what this does is i'm approving the contract to take my liquidity position and put it into escrow so that i can do all the things related to exercising and show it on the listings page looking at the listings page here it is so this is where you can see all of the liquidity that's available for rent and also available to be bought and as well as all the options that are available so you can press buy to buy compress details and this opens up a new page where you can see more details and a nice graph of the daily volume of the pairing and the recent swaps and what prices they occurred at um going back to the listings page let's see if that option appears now yep so here it is this is the option that i just sold 9339 and so now if i switch accounts i should be able to purchase this option so let's refresh the page and then i'll be able to purchase this option and then it should appear in my my nfts tab after i purchase it so now going to the last tab which is my nfts this is where you can see all things related to liquidity position so this this first section here is all of the liquidity positions that you own or that you put up for sale or put up for rental and all the options that you own and then down here is the rented liquidity this is any liquidity that you've rented and you have the option to harvest which it just collects any fees that you've accrued during the duration of the rental and if we refresh we should the transaction is probably confirmed and we should be able to see our option 9339 and here it is our w each call that we just purchased with a strike price of however many billion died expiring on thursday and you have the option to exercise it here as well and so that's all for the demo let's go back to dwollen for the next steps so um by the end of november 2021 we plan to launch our v1 on the mainnet we also plan to implement swapping of liquidity positions re-renting of liquidity positions and the auctioning of liquidity positions in december 2021 we want to implement the options pricing model so liquidity providers know how best to price their premiums we also want to explore using our percentage of liquidity positions as collateral for loans and by february 2022 we want to implement automated market making protocol for options so we can cover the bid ask spread and provide liquidity to the liquidity market using this automated market making protocol we want to implement caravan vaults later in 2022 which will allow users to deposit money into the automated market maker and earn returns and that is all for our present day presentation thank you so much for your time thank you so much for that awesome general i'm super excited to hear that you want to continue uh building this into a real final robust protocol congrats um with that we are ready for our next team and that is going to be airlift finance and now mark whenever you're ready feel free to get started thank you my name is mark carey um i'm from toronto canada i'm here to present airlift finance airlift finance is leveraged exposure made easy and basically it's vaults and strategies although it's only one vault so far and more more can be added in the future but the goal of the current strategy is to provide leveraged exposure in an easy and risk mitigated manner the initial strategy is basically two times weak so it aims to provide double the exposure to each and what happens is wheat is deposited in ave where it earns yield and rewards automatically us dollar stable coins are borrowed against that and then they're swapped for more wreath which is also deposited in ave the rewards are harvested swapped for weak and compounded now we'll do a quick demo and i'll come back and explain what happens behind the scenes so here we are in the interface i'm already connected and we look down at the bottom here we can see what's in the vault currently there's uh the tvl is basically five weave and that's basically the net asset value we can see in the vault there's actually 10 weak right now but there's also debt of 24 000 die so i'm going to basically double this so i'm going to uh approve five five leaf and this is running against a fork main net right now so if you go to airlift.finance you'll see the ui but you won't be able to actually interact with it the uh the price oracles between ave and uh uniswap or on testnet don't really agree so it didn't really work well on on test net not sure why it's not proven here try this again try it again with two just in case there's an issue here hard to say why this is not working cause i did test it earlier and it was working [Music] who failed switch back to this other user maybe it'll work better all right let's try that again five five approved there we go looks like it's working so while this is waiting the key thing here to realize is that we're trying to double our eat exposure and ave won't let you borrow 100 of of your balance what you have of your collateral so the way we solve that there we go it's deposited so now we can see at the bottom uh even though i deposited five each the vault assets went up 10 each 10 weeks here and now the vault debt of course has also doubled to 48 000 die so what's happening behind the scenes is using unit swap flash swaps so what happened there in this example is that a flash swap for about 24 000 k of dye for five weeks was initiated but the contract doesn't have any dye at all but because it's a flash swap unis what provides the five wheat up front which the contract then deposits on ave which increases the collateral levels enough to borrow the 24k die to send back to uniswap to complete the swap which happens all in one transaction on a withdrawal the same thing basically happens in reverse you're swapping the weak for dye which is used to repay some of the dye on ave and so on another a third type of uniswap flash swaps is used to swap debt the interest rates on usd stable cones like dye or usdc can vary a lot sometimes one is much better than the other so what's possible here is a debt swap which is the same kind of thing except you're swapping die debt for usdc debt and you don't have to withdraw the collateral at all to make this happen because unit squat provides the diet the diet gets repaid and and that increases the loan to value ratio which enables you to borrow enough usdc to to complete the flash swap so mitigating risk this is a risky strategy but the out of a health factor can be monitored to assess the risk a strategy manager can call a rebalance function to adjust the risk profile the minimum health factor can also be adjusted and monitored by off chain keeper bots could constantly monitor and adjust the risk profile especially to guard against a flash crash flash crash scenario in summary airlift finances leveraged exposure made easy as an investor you only have to deposit and withdraw you don't need to borrow anything you don't need to worry about margin calls you receive 2x weak tokens which represent shares in a vault it's a lot riskier than a sort of a yield maximization strategy where you're just trying to maximize the interest rate and compound awards but it's intended for those who are bullish on east who are willing to take risk but don't want to manage the risk that's the goal here next steps considering a polygon first launch also you know more vaults and strategies you can imagine a btc bullish strategy that's very similar for those that might be interested in that um and that is basically it if you're interested uh i'm at emptyhacks on twitter and you can also see my discord handle there if you want to reach out and uh that is airlift finance uh lifting you up thanks so much mark uh it was tricky moment there where you weren't sure if it's going to work out or not live but it did and we're safe so congrats this is really cool and i hope you uh deploy this thing to mainnet congrats um so next up we have hero swap and calvin are ready to present what they built so welcome thank you katie hi um we are here swap so what is hero swap hero swap is a compliant municipal and i'm caroline i'm based in las vegas united states and my teammate ashmore is based in calico in india so first question most people would ask why bankers want to be compliant if you've been following the news you realize um there are a lot of pressure coming from the regulators to the d5 wall so how do we make a unit swap compliant i we implemented this using the molecule protocol molecule was another hackathon project last year um with global the concept is very simple we implemented a middleware protocol basically um inject between any kind of sender and recipient transfers and we check for the compliance if it's approved then we'll we'll let the transaction go through otherwise we'll stop the transaction and we use both energies and oracles so how does that work um if you have an ethereum wallet you can submit kyc through a service provider such as boom and then you receive a erc 721 the nft token representing your kyc and then you can um go to a hero swap or any swap that implements a molecule protocol so um the reason that we want to do this centralized changes already have the compliance in place but they are more expensive into custodial and decentralized exchanges are not compliant so um with the hero as well we can combine the best scenario for both worlds so it's not custodial and compliant and i'm going to pass to ashmore to do a technical demo thank you calvin so the heroesof project mainly consists of four smart contracts we have the uni unicef v2 factory unisa v2 router molecule proxy contract and molecule nft contract first we will check the nft balance for account 2 in the molecule nft contract so the account 2 has nfd balance in the molecular energy contract now we'll switch to account 3 and we'll check the balance so the account three has no nfd balance which is not white listed and the account two is white listed so we can try adding liquidity using these accounts we can try adding liquidity so the front end has been deployed to the cia sky and we have the skyline for interacting with the project i'll try to add liquidity so the account selected is a country which is not right listed address so the transaction should fail we will select the token a token repair will try to deploy we are trying to approve the toggle so it's taking time i'll just try it once again we are approving tokeni and token b for spending so we will get a reward message from the evm stating it is not quite listed addressed now we can just switch the account to account 2 and we can try to add the liquidity so the transaction would be successfully done because it is white listed address with the molecule nft we'll try with that and try the token it can be pair itself we are proving transactions the transaction is enterprised so we have to try it again same pair is selected so since the account two is selected uh the transaction should go correctly because it has the nft balance in the molecule contract so the transaction is successfully done and we can see this transaction in the range of beta so i'll just hand over to the kelvin for the rest of the part thank you thank you small um so i want to summarize um the reason we want to do a compliance um from going unbanked going to the bank um the mainstream the liquidity and market size is tremendously bigger and then also we want to be preemptive about regulation so that um we want to be the legal operator and uh there are a couple questions um if if anyone is interested uh feel free to reach out to us on how the next steps are and thank you so much calvin thank you so much for that demo and what a cool concept and not only that you're solving a problem that's been already surfaced in this space but the thing that i'm most excited about is that uh you use your own projects from the past hackathons and the composability on top of it to me that's just awesome great to see uh you're thinking ahead uh in so many different levels and making something super useful so congrats and i hope you continue building this thank you all right with that we are ready for our 10th and our last demo so without further ado let's welcome kyle from superfluidity to showcase what he built and team hello everyone my name is kyle i'm part of the team that worked on super fluidity along with my teammates jacob antonio and newmar for this hackathon we focused on creating a new way to manage and optimize concentrated liquidity pools and deliver higher returns to liquid providers superfluity tools allow users to deposit liquidity which is then streamed in real time between concentrated liquidity positions which follow the price of an asset this means that our users maintain a higher proportional ownership of active liquidity earning them higher returns and fees for those of you unfamiliar liquidity pools are the backbone of uniswap they provide the assets that their automated market maker needs to make sure that when you purchase a token it's there waiting for you so i'm going to show you on our demo here how this works in the user perspective and give you a bit of insight into how we're approaching this on the back end so first off we're going to sign in using metamask we built our front end using spelt and right now we're running off of a fork of the main net using ganache we've got nice fast transactions here you can see our dashboard where the user can view and manage their positions so we're going to start off by heading over to pool rankings which sends us to unisoft analytics which gives us a good idea of what's in demand right now based on that we're going to come on back and set a new position up here so looks like wrapped ether and usdc look good so we're going to put those in we're going to deposit 5 ethereum 15 000 usdc and down here is where the user can define their range so even though superfluidity pools keep up with the price we still want the user to be able to define their own exit characteristics so for example if i want to remove liquidity once ethereum is above 5000 i can do that here so you can see the position come up down below wrapped ether usdc our position value over here and over here is where you're going to see these fees begin to accumulate and the profit percentage once the user is done they can go over here to remove liquidity which closes the position right now this function is unfinished in the future we want the user to be able to determine how much liquidity to withdraw for now that's everything with the front end so we're going to log out and we're going to discuss our approach so what's going on in the back end well once the user sets their position they deposit liquidity to a custody smart contract which manages funds for them inside of the superfluidity pool it does this by defining a flow rate using uniswap's oracle by comparing the time weighted average price from one moment to the next letting us know how quickly the price is moving and how quickly our streams need to flow to keep up it also defines a capital distribution curve around the current price which sets targets for the percentage of liquidity that needs to be streamed to any open position statistically it's relatively unlikely for the price to move more than a certain amount in a given time period which is why we taper off this curve as it gets further away those of you familiar with bollinger bands may recognize a strategy which uses some of the same principles biggest challenge we faced was in optimizing our gas efficiency so our main approach was to aggregate and batch interposition transactions using that central custody smart contract driving down the relative cost to an individual user similarly superfluid relies on a fixed gas cost for the distribution contracts which also benefit from this kind of scaling in terms of our next steps as i mentioned we want to finish integrating our back end and front end by completing the remove liquidity function we want to finish integrating super fluid protocol and we're considering our layer two solutions such as a bridge to optimism for certain asset types which function well with delayed custody for now that's everything we've got so thank you for listening we've got exciting things coming soon so we hope to see you again thank you so much that was amazing thanks for uh trying out all these new ways to look at liquidity and this is just cool i just i love new uh feature of our technologies being intermediate and tested out so this is great um congrats once again and uh i want to thank all 10 of our projects for coming on and demoing to everybody here live um definitely not easy to do this thing live but also it's incredible that we saw so many amazing things come out from just nine days of i'm hacking and for those of you i know some of you have already talked about how do i learn more about these projects or can you see the source code or demos and the websites um you can check out all the projects not just these 10 but all 61 of them by heading over to showcase.eatglobal.com you'll be able to see everything that came out of this hackathon and um anywhere from the demos to the source code you can check all that out there directly so congrats to all the teams and again if you're really i really encourage you to all continue building what you started i know the they're anywhere from time constraints to a lot of features you want to add so if you're ever stuck uh you want help on any of these things um please reach out to us on discord and we'll be able to help you with any next steps so this concludes our 10 demos for this event we're going to do is just cover some of the next steps which is mostly prices that i know a lot of you have been waiting for but before that i want to quickly thank a few of our teams and our partners that made this event possible so uniform grants program aztec visor polywrap on the analytics skynet enos and optimus and they were here supporting all of uh us hackers so i really give them a big shout out and a round of applause for making this event happen so let's get into sponsor prizes i'm going to list all the prizes and i'm going to talk about who won them and for the teams if you are one of the recipients of these prizes we'll be following up with you over email and connecting with anyone from the sponsors themselves directly or um we'll be dispersing them um directly through our on our end and uh just give that a couple days and we'll see everything in your inbox so first up is the uniswap grants program so the best innovation category prize winners are cross cash and reit cross cash receives six thousand dollars and we will receive four thousand the best hack for the government's category will go to gate burn for six thousand dollar price and regulus for four thousand the best grantees category uh beauty box wins six thousand dollars and blm2 wins four thousand the best hack for the trading category um four thousand goes to tx strip and then as unit swap receives six thousand the best tax in the swapping category um if the finance will get six thousand dollars there and caravan will get four thousand and we'll get into the rest of the details in a minute next up is aztec so the winners of aztec's prizes are actually a four-way tie so cross cash as you can swap and credit swap and we will all receive five hundred dollars in zk die plus aspect swag congratulations then we have visor finance and we have a lot of projects we've won the visor finance prize so the best use of runner up and run art for the strategy uh category are robust over 1500 and as you just swapped the best use and the runner-up for the tooling category are universal 1500 and focus for a thousand cargo wins 1500 for the most novel use case and uni swatching receives a thousand dollars for being the runner up in that category and then cargo and any ramp will be spending 250 each from the pool prize category then we have polywrap and for the polygraph winners uh potter vs vs code wins the best improvement of the pool chain award for twenty five hundred dollars and units well ppx four wins the best in swap rapper award for fifteen hundred dollars congratulations then we have optimism and the best use of e3 and optimism goes to uni strategy for two thousand dollar price and then tx script receives will receive two thousand dollars for the breast uh best cross chain application then we have omni analytics and unibox will receive the one thousand dollar prize for the most innovative use case of omni then we have skynet and we have a lot of incredible teams uh winning the skynet prize so we have stable coins converter alert finances sending the alarm education swap hacking nft union swap api explorer uniflash mini ramp hero swap that smart and unicode discord bot that are all going to share four thousand dollars equally so four thousand dollars will be divided twelve way from scan and once again uh if you missed any of these names or you were near the caches you're watching this thing later on from the recording you can just head over to showcase.edcooper.com and if you go to the project name on the right side you will see the prize you won as yourself but also any other prizes any of the t1 is going to be associated starting now to the project profile on the showcase all right so before we wrap this up i want to say a few thank you uh to some really important people that made all this happen i want to quickly start off by giving a big thanks to the eunice pop grants program where boris and ken have been incredibly helpful in making all this happen uh this wouldn't be possible without their support and help and coordination so a big shout out to the unisoft grants team from for for making this a reality one also thank all of our judges they were the ones who looked at all the project submissions uh over a really tight window right after submissions were due and they kind of were there to get feedback encourage people to work more uh give them more comments on how they can add new things or they can make their lives easier or add just a lot more new stuff and encourage them to keep working so thank you to all of our our judges i also thank all the amazing speakers there here that spent all of the two weeks of this event uh doing anything from workshops to technical talks to answer questions to do office hours um they made all this possible by giving a lot of their knowledge and just know how of how everything works here um in this ecosystem and encouraging more and more people to come in and learn and contribute so thank you to all of our speakers then i also want to thank all of our partners there's so many people behind the scenes that were anywhere from helping you get unblocked from uh using some sdk or protocol to just helping you understand what will be possible and what is possible and without uh these amazing partners uh you would not have uh the 24 7 support that you needed to kind of get unlocked and finish and get to the finish line for your project so thank you to all these amazing people from all different parts of the world um helping out everybody undiscord and i also want to thank our technical mentors for being there running office hours doing workshops and really just getting into the weeds of technical errors that everybody was experiencing and without their help whether it's front end or uni swap specific or just absolutely they were there to make sure that you understand how something works under the hood and really get people involved in making something really cool and also i want to thank our volunteers so a lot of this stuff happens online with hundreds of people behind the scenes and doing and coordinating all these things judging or this very live stream requires a lot of people and you may not always notice them on the camera but these amazing people were there to coordinate everything um in the background to make the experience really ideal for all of you and lastly i want to quickly give a shout out to the global team i want to thank nmrs luke emily andrew jacob heather and liam for kind of doing all the work behind the scenes to make this experience really memorable for all of you and making sure that all of your needs are addressed and you have the best experience actually getting more comfortable and getting into the web through ecosystem so thank you so much to everybody that made this event possible and before we conclude um we're going to talk about the finalists so we had 10 teams present today in the showcase what they built over the last 10 days and they really did a lot of amazing work on the live demos and the goals for what they wanted to do and we call them finalists because we don't want these events to be competitions uh there's no notion that for second third we want the people to kind of come and build something that they're interested in learning even if there is no continuation or even if they want to just do it for for fun for just that one time and our hope is to get more people to experiment and really do things that they're excited about and that's what we call the finalists because when we call somebody a finalist we uh want them all to be uh equal in terms of being some of the key and really interesting pauses coming out of this event and as part of that all these 10 teams are officially our winners for this hackathon and that means they're all coming in first from a pricing standpoint and what that means in practice is that each team will be receiving five thousand dollars from the uni strong grants program and in addition the global team will be giving a thousand dollars to every member on each of these projects uh for being our our finalists i want to congratulate all of these teams for really working on really cool projects and demoning them here today so congrats to all of you uh just one more time and one more and just i'll say this again a few more times but uh for all of you uh who participate in the civilian we really want you to keep working on these things and whether that's continuing uh your project for the next hackathon to just asking those questions on here i'm stuck but i'm going to continue adding features if you need any help please don't hesitate to ping us so congratulations to everybody and this concludes unicode today i want to just thank one everybody one more time for being with us for the last couple of weeks and being here on this live stream and uh really making this uh event memorable and special for all of us and of course this wouldn't be any global event if we don't talk about what's next so without further ado i'd like to announce that our final event of this year is going to be kicking off uh this friday we're super excited to be on the web 3d jam partnership with protocol labs so we'll be kicking this off this friday it's going to go on for another two weeks and uh this will be the last beat global event for 2021 and right after that we're gonna give some uh really cool hints and talk about what's next for equal one 2022 so if you're interested in continuing to uh build your project or if you are catching this right now and you were not able to hack the unicode i encourage all of you to head over to jam.eglobal.com and sign up for web3 jam so with that i want to wish everybody a great rest of the week i will all see you this friday for the kickoff for web3 jam and uh thanks again for tuning in and we'll see you online take care you 