live excellent thank you thank you to everyone joining us today i'm going to give it probably one more minute see if some people filter in and then we'll get underway i'll see a few people pointing right now right on i guess uh without further ado i'd like to welcome uh yusuf and and alan from the protocol labs team uh you know i'll let them introduce themselves and get started here but thank you thank you for joining us we're really really looking forward to seeing this presentation today cool thank you hold on a sec here we go right uh if if you don't see my screen then shout um hello uh so i'm alan i'm a engineer at protocol labs uh i'm just gonna give a real quick intro and then sort of hand it over to ucf to do like a really uh really awesome in-depth demo of what what this thing is but um that's a good question what is this thing well um so i'm excited to be able to tell you about this incredible new service that is called web3.story and it's live as of yesterday um at web3.storage.storage is a top level domain name who knew that um and uh and so this thing is designed for developers developers like you um to give them a real easy way to store data on filecoin and ipfs um and in case you don't know ipfs is a peer-to-peer distributed file system it addresses files based on their content not their location and filecoin uh adds that incentive layer to ipfs it's the cryptocurrency based decentralized storage network and so web3.storage aims to make the process of storing data on filecoin um simple just simple um and so for our initial launch um we've we've kind of focused on providing a really awesome experience for developers um web developers specifically so what we've done is we've built a really nice javascript client to the http api and it's been lovingly tailored to make web developers happy so um we hope you enjoy it we have docs um we have an incredible documentation site we've got uh how to's tutorials concepts and like a complete api reference for the js client um it's actually kind of truly amazing that this has come together considering it was built at exactly the same time as we were building web free dot storage and um it it it's just incredible that such useful and useful information has come together so coherently because as we were building it nothing was stable nothing was finished and yet we've come up with this lovely website which will help you use the thing anyway so this this here uh after you've logged in and maybe uploaded some files this is the files listing page uh this shows you uh all the things you've uploaded to web3.storage um and it's super basic right now um for launch but it will get better um so first up you can actually upload direct in the ui so you can click on that upload more files button um and so you don't even need to be a developer to get stuff stored on filecoin network on that this decentralized network you can just log in and upload a file and bang it's on file and that's rad um there's so there's a whole bunch of columns here but the cid column um this kind of links out to an ipfs gateway where you can actually retrieve or view like the files that have already been stored and and what happens is when you upload files to web free dot storage is that we upload them to our own ipfs cluster and that's just a whole bunch of ipfs nodes that are kind of kind of grouped together um but the the data is replicated to at least three of those nodes um so we've got some good um redundancy going on there um pin status uh that's like the overall pinning status of the data that was uploaded and if you don't know what pinning is it pinning in ipfs is this way of you telling ipfs not to garbage collect the data once it's been stored on the node so like just keep it around indefinitely please um so obviously uh you kind of want to know the status of pins like when they first go up um you know it will be queued it will then uh will be pinning and then it will be pinned um so we have status but this column is not showing like anywhere near as much information as we have that we have a status api which you can use programmatically to grab hold of a whole load more information and what we have is um for each node that data is pinned on we have like the peer id uh like its name its geographic region um as well as the status obviously so um yeah we'll have a look at the the status api in just a sec um storage providers are um actual addresses of um of of storage providers operating on the file coin network that are currently storing the data and so we aim to get um at least three deals active um in uh three separate providers um for any given cid um and so that together with the three nodes of uh our in our ipfs cluster as well as free fargo miners is pretty darn awesome like data redundancy thing that we've got going on uh so that's cool and the links link out to uh actual deal information so you can look on chain at the deal that has been made uh and the the the miner the miners also should say storage provider is currently uh continually proving that they are still um still storing so um yes what else um so yeah we'll talk a little bit about like that process of deals and how we have this concept of like a storage broker and how it works in just a second um we have uh a uh this yes the status api this is what i talked about a second ago this is just some because i took this screenshot like before we went live so it's just some example data but you can kind of get the idea of what you'd see you can query any cid of any uh like rootsy id of any upload that you've um that you've done or anyone else has done for that matter and you can see uh the the kind of information that you'd get back so you can see the the like when it was created when like how big it is um and uh we've got pins and deals array and pins has each of the nodes that this thing is pinned on and deals have has each of the storage providers that are storing or are about to be storing uh the data so we've got um for example here we've got a deal id this is the actual identifier for the deal that's stored on chain um the storage providers the address of the storage provider that is storing the deal the status it can be like huge published and active i believe and then we've got pcd cid data cid and data model selector so this is this these two things data cid and data model selector are really interesting because what we do behind the scenes is like we aggregate together loads of data so you know you'll store like kind of small files potentially other people store big files but either way we aggregate it together into one big um glob of data and then send that off to a miner uh to to be stored um and and what happens with that is that there will be a root c id for all of that data that we've aggregated together and if you want to retrieve your piece of data from that aggregate then you're going to need something called the data model selector and that allows you to pass through that data structure and extract uh the data that you're interested in so that's the status api this was one of the the kind of useful things that that we have along with obviously putting data and retrieving it um cool this is this is kind of uh high-level architecture this is going this is kind of fun um uh i'm not going to go into too much detail here but just to say if you start at the little black glob at the bottom left there um the users they're actually interacting with just a http api they send car files and car cars in this world are not automobiles they are content addressed archives like like tars but for dags and dags dags are directed to their cyclic graphs this is all ipfs stuff but what it means is the clients send car files they create a dag on the client so they create that graph of data and the root c id on the client and and what that means is that they've they've got that dag and that's cid before it's sent up to this up to webfree.storage um and in this kind of trustless peer-to-peer world that we're trying to accommodate that's a really good thing um it also means we can do you can do other stuff with that cid uh today cid stands for content identifier by the way i'm pretty sure i said that um anyway it means you can do other stuff with the cid whilst that date is uploading so um you might want to store that in like your um app database somewhere whilst a big upload's happening or in the case of like nfts you might want to mint an nft on the etherium chain using that cid and linking the token uri to to that cid so that's why that's useful um so what we do is when we receive that data we put it straight in our ipfs cluster and we also back everything up to uh opinion after you might have heard of pinata they're a popular kind of pinning service for um ipfs um allows you to put content in there um and so we we have like we have so much redundancy of this data it's unbelievable but um but yeah we're partnering with them to to uh to store your data as well um now the storage broker a bit this is where the interesting stuff happens what it does is it grabs all of the cds for new uploads from our database um we use the database called fauna and it's something that um cloudflare which is where we host the service the api um recommends so we started using them it's been fun um and so what happens is it batches up all of those cids into little presents little presents for the storage providers uh they're actually car files and then the storage providers come along and say have you got a deal for me and then the broker service would be like yeah here's the deal here's the deal then i'll take it and they'll do an offline deal and then it will be stored on filecoin right and the storage broker is the is the the really interesting part because that's where a lot of the innovation for in other projects is um is happening we're trying to build indexer nodes for um filecoin uh storage providers and um and we're gonna also be building like retrieval directly from storage providers so so we won't necessarily need to have ipfs uh ifs nodes um as a kind of caching layer and and it'll eventually allow the web free storage gateway to fetch data directly from storage providers all right the one thing i didn't mention yet is it's free it's completely free um and it's free and when i say free people often ask why and here is why well um the the the cool thing about it is that um storage providers commit their hard disk space to the file coin network and they earn significant block rewards for doing so so um and doing so actually translates into real-world profits for them you can see the little cash bags at the bottom there that's how much profit this uh particular storage provider is making and obviously they are incentivized to onboard more storage continue committing additional hard disk space to the network saying i've got this capacity please store data on me and they'll get rewards for it so they're pretty incentivized to keep doing that so they get more profit at the end of the day now when storage providers are storing data from users on the network their likelihood of winning block rewards goes up by a big factor like 10 times so boom wow look at those profits so like um you can see the potential profits to be made by storing real user data and this this is such a powerful incentive for filecoin storage providers to store user data such as the data that they're getting from web3d storage that they're they're willing to offer free storage um in order to get this block reward multiple and in some cases storage providers want to store this data so badly that they're even willing to pay users to for them to store it um and so as long as these block rewards continue to be a really powerful incentive for firecoin storage providers which will be true for a long long time for example in bitcoin block rewards still continue to incentivize incentivize bitcoin miners uh today um so as long as there's still this powerful incentive then storage should be free for all verified users on a filecoin network and if it's free for us to store the data on filecoin then it's going to be free for you as a web3.storage user to store your data with us and so if you want to learn a bit more about the mechanics of being a verified user and getting um capacity to store data for free then um head on over to filecoin docs it's docs.filecoin.io and click on filecoin plus all right my bit is nearly over um but this is some of the things we haven't even really uh started planning uh for the next iteration but these are some of the things that are uh that are in my head for um for the next next next next stuff um we want to have a fully documented http api so that anyone can use it at the moment we've just got a js client and no docs for the http api um but we want that documented so that other people can build or us can build uh clients to that api we have an open api schema so that we can just generate clients we'll have some raw file uploads to make it really even more stupidly easier uh for people to to use it we'll have i don't know if you've heard of the pinning services api and ipfs but it's a way of if you've got a data on an ipfs node then you can tell maybe tell web3.storage to you just send them the cid and wait for that data transfer to happen over the peer-to-peer network so that would kind of be useful we might build a graphql api our database has a graphql interface to it so why not um and obviously the big the big part would be like retrieval from storage providers implementing those indexer nodes for storage providers and and then stuff with authentication like scoped authentication tokens wallet authentications and stuff like that and and basically mostly if you have uh like feature requests that you come across then um please tell us uh because we'd like to know um and build like something really good that is helpful for people to store data decentralized on file coin all right cool um so that's about all uh i have to say and so i'm going to hand it over to yousef to delve a little bit deeper into the api and how you might get started with web3.storage and store some store some things maybe retrieve them and do do whatever but thank you for listening awesome thanks so that was awesome this is so exciting i'd like i've been bubbling over because they're finally getting to show this thing off like you guys have been watching it in the development department let me share my screen here and through using the thing stepping ahead to the code over here um i just have a couple things to say um that's what alan said before we get started coding and stuff and one thing is that we still are running nft.storage web3ds.org does not replace it so if you have nfps specifically why not head over to nmp.storage um it just has some helpful stuff for you for metadata and things like this and it's like going to be our place where we continue to do nft things going forward so uh that's cool um but i'm here mostly to talk through like the developer experience like how do you use this thing um i've been working on this doc site so i would love it if you go and regret the docs while you're here it's docs.web 3d.story and we're going to in a second just walk through this quick start guide we'll you know make a tiny little javascript app that puts the file into web3.storage and then we can poke at it and see see what happens back over here i have an empty directory and now i'm going to go play with the website here's the site itself it is yeah it's pretty in my opinion uh if we want to get started i've already signed up for an account so i'm going to log into yeah but it's about the same amount of time either way you just if you have a github account you can connect it otherwise put in your email you'll get a nice little login link and you'll end up here so now i do not have any files yet i could totally upload one through the website but instead i'm going to get all nerdy with the javascript and i'm going to go to my account and get 80 likes this is interesting but first explore the docs um i want to know how to get running so i'm saying okay i need node.js for this quick start and i have that already logged in and it says i need an api token api token where are we updated all right now i have something uh keep it private so don't tell anybody you guys um and now it wants me to make an upload script so guys this thing which we're really focused on the javascript api right now because we think it's like the least friction that you can have as you're building a web app um obviously more will come soon so stay tuned as we uh both of them but right now we're making a little javascript the app and i own an empty directory which i already have and then here is a file called put files gis and it's giving me some code to paste in so let's do that over here i can't write this myself okay so now let's see if we can make this big okay so i'm pasting things in and i like to read code before i run it on my computer so what are we doing here now we're importing some stuff and then we have uh where it looks like we're going to have a token like passed in on the command line that must be our api token we've copied it from the site and then it wants us to also pass in the path to a file that we want to store then we get a new storage alliance that looks like and for each of those files we're going to get all the file data and read it in now we have something we can all our put method on so okay this all looks pretty straightforward i'm going to go just see what the site is telling you to do next uh it's saying make a package.json okay so i've done a few npm projects before so this seems like pretty standard javascripty things um i'm gonna take this and paste it in so back to my thing here i have too many code windows open apparently there we go it's gonna make a new file for the package.json you can also do npm in it or there's other ways to do this but this is opens faster than good old copy and paste i guess click start it is and we yeah obviously you can put your own things in there if you have fancy front-end dependencies or whatever else um but we're gonna now back to our docs it says we need to npm install i'm going to go back here and do that so this is going to pull down all of the library dependencies and all that so that we can use web3.storage in our little project and yeah once that's done we say okay great we got all this stuff now we have our node modules folder that's where all that stuff lives and we can now run the script i think let's let's see yeah run the script so it says we need to basically do this little song and dance here we're just invoking the script as a command line thingy and we have to paste in our tokens i'm going to go back here so now i should be able to say node flip files token and then i'm going to paste it in here and then it wants me also to give it a file name or do you give it a file so i'm going to do that let's see let's do i've stolen all my best gifts from alan or gifts if that's your girl that's uh you might find this one familiar though yeah and this is going to take it and upload it to web3.storage so all right it seems to have worked i'm going to go look you know double check things here what do we have back on the site it looks like something happened i have an entry in here now and things are queued up looks like for storage on the pinning services and i can pick this already and now i can get it right away on ipfs through the gateway link so it looks like i can just check it out and sweet so now my stuff is immediately available on ipfs but in a minute let's see if we can find out a little bit more about it and i'm going to go live code the um status endpoint so we can see what it's what the thing is actually telling us right now so yeah we're gonna back and slash away at this thing instead of um file pass all right i'm just going to say that first argument i want it to be a c id which is a content identifier for the thing that we just stored now i'm going to say storage dot status uh let's just say args underscore which is where all the arguments live and then yeah i will just say um yeah well why don't i just pop the first one off all right i'm just gonna do one right now so we'll say okay give me one cid and i will tell you everything i know about it so log that out to the console and see what happens right now so i changed my program now i'm going to go grab the cid it was over here it also got logged out earlier but yeah i got my cid now we're going to ask the service what what do you know really files anymore but broken i have that over here and then i want the cid which is back to my clipboard here and there we go boom it's telling us in more detail about the pinning status so it's saying this is in fact no longer cute those pins have gone through now so it's stored on these three providers and it tells us the file size when it first got the file you can also add a little bit of metadata add name to each upload so you can keep track of them in the storage ui and you can also through the api list all the things you've ever stored so it's a pretty flexible little api we try to keep it as simple as we can uh while still exposing everything you would need to go and just grab things straight from ips so i think i'm going to wrap up there since that will leave us a little minute or two for a q a because people have questions thanks very much excellent that was a great great presentation is there any like rate limiting or throttling if uploading a lot of files or is that just is the constraint just uh your upload speed it it'll be so it's it's currently hurted by cloudflare so it will be um throttled to whatever if they think you're abusing their uh their terms of usage then um it will you'll be locked down in that in that respect so will the api like uh just respond with please wait or how will the api you'll get for 49 responses i think it is um gotcha thanks the client by default will retry a couple times for you also but it so you might be able to you know have a temporary limit and not notice but if you're do if you're really pounding the service maybe you'll hit something it's pretty cool behind the scenes that the client will because it chunks up this dag if it's if the dag is more than um 10 megs then it will split it up into multiple um they're like partial partial dags where each um each chunk is a kind of subset of the tree but they all start at the same same route uh so it will then upload each chunk kind of in in parallel and it knows which they all relate to each other because they all have the same same cid and the client will actually if any one of those chunks fails for whatever reason then the client will retry them um i think it's like five times or so with with a backup with a back off um so it will really try and try and get everything up there and even then um even if it does fail for whatever reason because you you know you close your laptop or whatever then you can you can come back to it and upload it again and it will it will just fill in the remaining parts of the the dag that it that it hasn't yet filled in yet so there's there's like you can retry there's no ordering because of the the cool the the subgraph that it that it sends um yeah it's pretty cool and it obviously allows like parallel uploads in the browser we limit it to i think free maximum at a time because i think browser can only make like five or six total requests concurrently anyway uh so yeah uh it's fun times really cool is there a file size limit it's quite large i think 32 gigabytes per total request like the whole car file that you're uploading should be less than that all right correct me if i'm wrong ellen that's i'm pulling that from the about page on the side yeah then that's mostly because right now it's hard to get a single uh dag that's bigger than 32 gig in a in a deal uh for far coin because that is the the size of the uh the biggest or the current kind of size of the sectors i think um or something to that effect uh but in the future it will be possible to serve to send even bigger things awesome thank you very much for all of this got a question in the chat um is there a max number of api tokens per account no not at the moment if anyone has any questions feel free to to ask i know they're really excited to release this project so yeah this is all kind of brand new so um any feedback you have on this or any concerns you have or whatever then please let us know so we can we'd love to make it better want to make it really easy obviously as we said for people to use and get stuff you know the whole thing for us is to get people actually using far core and it's got so much so much capacity so much storage so many so many storage providers that don't have data yet that they really want to have data like they're hungry to chomp up all of your data because like i said they get those like extra multipliers and block rewards so um yeah just uh try it out let us know how you get on um let us know if there's bugs because that could definitely happen oh speaking of letting us know uh let me share my screen real quick again and i'll pop up our uh how to find us and uh if you're at hfs then you can just go to the packetfest discord and we have a protocol labs um sponsor panel there so there'll be labradors hanging out there all week get there you know throughout the event and if you're not attending the event or if you find this video recording later just hang out in file coin slack or in the ipfs discord or matrix they're all kind of like the web3 storage channel is bridged together so wherever you end up entering you will end up in the same place there so and we'll be hanging out there answering questions and helping you guys out well thank you i'm sorry go for it are these slides available via email or uh we can probably make them available i don't know right now i think they're just sitting in my mind or in my google account um questions it's possible yeah well thank you thank you to both of you and uh thank you to our audience for joining us uh as they said you know go into the uh filecoin slack and you know join the discord we also have the sponsor channel here for immediate questions as you're participating in the hackathon i know there's a lot of stuff to be tested there's a lot of things to be troubleshooted so they'll be there to help out and we all look forward to talking more about this in the future we'll be closing out the session right now thank you again to everyone for joining and take care thanks everyone thank 