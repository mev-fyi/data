[Applause] [Music] we are ready for our next talk so you cannot get a preview of all the building blocks that we think are are needed or we need to in a way perfect but uh that doesn't leave still a lot of room open for what we think we can do with the world of streaming money so without further ado i'd like to welcome meow what's going to talk about what is upcoming in the superflip protocol so welcome to uh stage and uh feel free to get started whenever you're ready yeah thank you carter to start show the screen yeah thanks everyone to join our first superfluid reactor summit so uh i'm meow um on my github it's uh hellwolf and uh i'm cto and co-founder of uh superfluo super fully financed so today i'm going to talk about what's next to the superfluid protocol right so maybe let's first look at the super floating rearview mirror so uh how it was started so exactly 440 days ago probably 441 now after a few hours um we deployed to polygon um that was a transaction and then we had two packages for builders to start with and deployed then also to xdi uh both of network i changed the name if you if you remember it was called matic and uh now it's called polygon and it was extine now it's got a gnosis chain so that's how we got started so how is it today let's look uh now we have a vibrant development activities in the mono ripple so we have a lot of forks on 27 we have a lot of stars and we have uh quite consistent commits to our uh dev branch so and uh our smart contracts project is also evolving so we have we have just added the access control list to our cfa constant flow agreement and uh we also switched to hardhat for functional testing we also integrated with foundry for additional fuzzing testing uh we recently actually yesterday also introduced hot fast a new prod a new test framework for super fluid applications that means your super apps also so you can now use something called hot files which uses echidna from trail bits for even more sophisticated uh fuzzing testing right so now we have more than two packages we have uh new and better packages right jssdk is being deprecated we should really switch to sdk core and we have also a redux flavor of the sdk we now put all the network support on subgraph we have a quite good uh um support out there and hot files recently and we also have some something called spec haskell i'll talk about that later now we have also more much more many many more examples right so there is even an archive folder now because there's just too many which is good um there are more docs so if you haven't visited our docks go docs.spooflie.finance you'll see the protocol overview uh developer section things about sentinel and all the peripheral resources you could find and we also have continued contributions from our community right so uh here are the badges for our uh contributors some of them actually join you in our team full-time um we're always committed to contributing back to the community right so we have pull requests to the truffles suit for example we have pull requests to the truffle plugin verify we have issue reports and technical feedback to the graph and uh we have also pulled requests to uh for example uh many many more actually and we adhere to the open collaboration and free and open source philosophy so that's our part of our way of working as a result we have continued the usage from builders um so now if according to github we have 298 almost 300 repository depending on our ethereum contracts projects and there's also continued download from our npm of our npm packages from npm.js and uh also we are live on many more chains now right so we're just recently launched on avalanche uh a while ago we also launched on layer two's arbitrary optimism uh morticon um also we have a cumulative flows going up so that's so far a figure that i can share so what's coming next to superfluid uh more networks of course so uh but first in order to do that we're gonna enable uh minimum deposit so that's only for networks with high fees we're talking about things like ethereum a net and some of the layer twos also have relatively high fees comparing to polygon and agnosis chain for example we're trying to make it more profitable for sending out closing the micro streams meaning that those streams are have really really small value and deposit and with minimum deposit that will make it a slight more profitable um we're also targeting for more community engagement so we have now a framework deployment guide updated many times and each time we go to new network it's always our community member deploy to the new network we also make i have made the deployment of erc20 wrapper uh easy uh uh most uh for most of my network you just need to go to uh one of the ether scan like scanner and uh click the view button then there is our c20 wrapper of super token um we're gonna create more we're gonna do more work on the custom super token templates for the for you to create your own pure super tokens and if you need more custom features you should also look into it and i will do more work on that to make your custom super token creation process more smooth and sleek um we're going to also support a token lists standard one of the frequently asked questions how can i know how can we know uh the list of super tokens that i use so we're gonna work on a bit more making that available on the token lists [Music] the next big thing for us is to do some formalizations so there will be a yellow paper um so we'll be citing existing papers right so things like existing eips things like existing research on the theory of money and payment system and it will keep a fairly high standard of intellectual honesty so we'll be reusing existing terminologies by trying to generalize existing framework if possible not just a flag just for the sake of it right it's not about your idea or versus my idea right and uh as a highlighter original but at the same time won't also want to highlight the original idea and contribution from superfluid money in the process so um the yellow people also use a technique called uh embedding the specification where it will be written in literal literate high school this is one example we're defining something called a decaying flow agreement and the benefit of doing so is that we have well-defined terminologies which basically equivalent of saying we are defined types and we also define some of the language in a more rigor definitions which is also equivalent to say have testable properties and uh the idea of super super fluid protocol we actually become a pascal program even right so the whole process will make it a sound platform for research topics so what are the research topics so we'll we'll be experimenting a bit more exotic agreements things like uh decaying flow uh general distribution step flow this kind of thing uh we'll also explore it a bit more regarding different uh solvency models currently our system is uh so-called uh using so-called buffer-based associacy uh you might be familiar with uh the concept of buffer if you have a programmed on our vertical but there are other techniques such as syncing the time as opposed to using the buffer etcetera so money units models can be also a topic to be explored we're all familiar with the current token model uh that's quite widely used on evm i'm in fact a defector one um there might be also a chance for we to make a utxo model right so that's our research topic and composibility models right so we use we use extensively callbacks to implement uh super apps but there are other techniques to do composibility perhaps using state syncing as opposed to uh synchronous callbacks right all those can be uh good research targets so we're also so the work done in the in the formalization uh will provide a very solid reference for additional super fluid mining implementations but what it can be evm superfluid v2 a non-evm system or superfluid enabled blockchain itself right so this is our open question um so additionally we're also going to develop a protocol validator so it will become a simulation environment for new ideas and concepts and with that it can also provide a very good functional specification testing tool for your implementations right so you can visualize the account uh account balances during the test period test case for example but at the same time we also need to do some deep refactoring of our existing evm implementation we'll deliver the functional style agreement refactoring so split to the pure code from the side effects side effects were talking about things like reading protocol parameters from governance evm storage operations callbacks to super apps this kind of thing um in doing so to make it also easier for formal verifications of each component especially each agreement and it will make ways for more feature development right so um another thing we'll be doing is called a token centric interface we're phasing out the usage of a core agreement you might be familiar with if you have done some development on superfluid so that means you'll be using more idiomatic token dot kind of interface right so for example it'll be token.createflow will be token dot update flow token dot delete flow and uh the idea the instant distribution framework you might be familiar with will become a multi-purpose index right so you'll be using token.createindex instead as a subscriber to the index you do like token.subscribe to index talking about approve index and you might be familiar with ida that it does distribution instantly right so it then become token.distribute to index what about something called token dot update distribution flow rate of index right very wordy mouthful but it's something called the gda i will introduce shortly and uh something about uh decaying flow agreement right token.update decaying flow rate of index right so i think that's really become a multipurpose uh instrument for publisher to uh influence balances of all its subscribers providing more design service for your super fluid applications so all we are doing here is trying to complete the jigsaw a jigsaw puzzle so that's so called uh super fluid payment modalities matrix what does this mean so uh payment before super fluid money well there's only one that's one to one and instant for example erc training everyone familiar with right so sending from our account to the other instantly payment with superfluid money right so we have a matrix here so we have one two one and we're bound to n from one dimension uh from the other dimension we have instant versus streaming so one to one instant we have also a name now called a transferable balance agreement um one-to-one streaming that's basically constant flow agreement or the decaying flow agreement one to an instant that would be the idea so it will be gda with instant distribution aka ida we are familiar with and one to end streaming that would be gda with constant or decaying flow but it's not there yet but we'll be there at some point so so-called gda is general distribution agreement it is a multi-purpose index with instant distribution with constant flow with the game flow or something else so beyond the corporate code was there's also many things ongoing one of the objects one of the uh the goal is to make the sentinel more profitable right so we'll make the center more that more than just for solvency production from hostile actors add some civilian services to the sentinels so for example uh closing stream for you by uh end late right i mentioned that we have a feature now called the uh access control list so basically you allow a third party uh to close a stream for you or even update stream uh how about the wrap wrap up more underlying token for you when your balance is running low right so these are the civilian services we can add to sentinel in a decentralized manner also we want to add more power to our subgraph implementation to the protocol so the problem we tried uh we're facing at the moment is that superfluid distribution index is too powerful because an index can change balances of all subscribers a subgraph indexer unfortunately cannot scale as much as its current in its current architecture so we are working with the graph team to find a solution to tame it uh we're also adding more features to the sdks right that's that means the sdk call the sdk redux so i would call for everyone to be part of it um so you know to join this uh journey we have a bi-weekly protocol public forum uh it's everywhere um it's on wednesday 2 30 gmt if you join if you're interested join our discord and ask for invitations and also check out our bounties on moon repo there's a tag called bounty also can check out our bug bounty uh for smart contracts only unify a shout out to them and if you want to join us full time there's also jobs available on jobs.superfluit.finance so well that's it uh thank you and uh the slide source code you can also find from our wiki page so that's it thank you amazing well thank you so much for uh kind of going through basically the i think uh early look in that roadmap of roadmap of how we think uh money will change um maybe just a couple of questions i have on uh sort of how you're kind of thinking about this thing and also what at the learning span over the last 40 days my kind of first one is like have you like how do you kind of decide to focus on a new uh chain like is that just like we we can just deploy the same code there or do you think you see like a different demand coming in from those users and that have different needs on different kind of destinations like what kind of goes on and what are some like observations that you've had from uh using different chains yeah so currently we are we don't have evm implementation right so and we don't necessarily decide uh it's uh we will call for deployment and we'll wait for it for the committee member deploy first so it's more of a community driven at the moment for evms and online evm is more more of a research side so it's uh it's not nowhere near the deployment okay awesome well um that clarifies the question i was gonna ask but i think one question from the audience is uh yeah if you can send us a link to the slides we'll share that with the chat and everybody there and then we'll also uh kind of explore that put that on our discord for anybody who's hacking and wants to see that same thing so uh thank you so much and i really appreciate you giving us her lulucon next version release of superfluid thank you 