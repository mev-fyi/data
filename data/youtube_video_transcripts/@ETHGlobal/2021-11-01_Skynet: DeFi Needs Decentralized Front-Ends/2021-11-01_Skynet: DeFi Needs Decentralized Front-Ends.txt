youtube so there's some people watching us on youtube my name is andre i'm with eath global and um we're in the middle of our unicode hackathon and the workshop we're about to start is daniel helm skynet he's going to talk about the if i needs decentralized front ends there'll be an opportunity to ask questions around the middle point and maybe a little bit later once the demo starts and you can also put your questions in the zoom chat and we can try to get to them at various points and if not we'll hold to the end but with that i'll let daniel take it away all right thank you so much andrew um and also thanks to eth global and the whole unicode hackathon we're really excited at skynet to be a part of it um because we think that d5 needs decentralized front ends which is the name of my little workshop today we're going to be talking about getting started with skynet and home screen kind of talking about what skynet is what home screen is what problems they solve for decentralized front ends um but first i am daniel helm i'm the developer evangelist at skynet labs and um let's just hop right into it so you know we're aware that there's this big complex evolving defy ecosystem um and this is a d5 hackathon and you know there's a lot of exciting stuff happening right we have decentralized finance that's just revolutionizing how we interact with digital assets and we're giving users full control and ownership over all these things and all these protocols um and all you have to do is pull up the protocols webpage and boom you're trading their tokens you're providing liquidity doing all the rest of it but there's still this big question and problem right what if the project gets hacked and the front end gets compromised what if the project goes broke introduces a paywall or ads what if the project is required by its local government to remove your favorite token or your favorite feature these are all issues of centralized front ends and why we believe the ds5 needs decentralized front ends we think that skynet is the best positioned decentralized storage provider to provide a proper decentralized front-end experience for users and that we can really fill this gap so that users can have easy access to these websites without having to worry about uh any additional software any cryptocurrency any specialized wallets anything like that so underpinning skynet is the saya blockchain network we're not going to get into it in this talk because i want to focus on some other things but check out scia.tech if you're interested the main gist of it is that you have a decentralized marketplace for storage between renters and hosts and skynet leverages this network so that users are able to interact with portals to upload files that get stored on the cyan network and then they get back a link that they can share with their friends uh from any other portal on the skynet network when they download that file it will be pulling it from the cya network so this decentralized storage has lots of use cases we see people building fully decentralized web apps uh we see it used for persistent storage for decentralized and peer-to-peer applications so um you know two clients have an exchange going on but if both clients go offline maybe you need something to be persisted uh elsewhere we see it used for off-chain storage for blockchains think nfts censorship resistant website hosting and even people that set up servers to do kind of scraping and they can use skynet for backing up data or publishing data to users in a decentralized way at the end of the day our goal is that any developer can build a d web app that anyone can use that's really important this accessibility both for the end user but also for developers that the burden for getting on to the platform is just super simple all right so what does it look like to use well uh let's just use it you can look at my screenshot here but let's go to scissky.net let me refresh it because i've been uploading some files this morning and i can click here to upload a file live demo time i shouldn't have probably refreshed it there we go all right so i can then select uh an image of myself here from my computer it uploads to skynet i get back a link and there is my photo sitting on skynet i am currently accessing it at scisky.net which is the portal that skynet labs runs but i could also replace this with skyportal.xyz which is a community run portal and my image loads from that portal just as quickly okay if you are familiar with decentralized storage i hope you are impressed by the speed of both the upload and download there okay so that is accessing files and skylinks let's get back into the presentation here all right so we got back this thing that we call a skylink uh it's kind of like a fingerprint it's a or a hash it's technically a miracle root that signifies that this is the file that we want and that if that file changes this skylink will change so this is immutable you can think of it like a constant or something else like that where it is not going to change and we have a cryptographic guarantee that the file that we get from the server is the same file that was uploaded by the original creator of the content and again we can use any portal to access this same data so this is kind of how the decentralized structure of skynet works in its most basic form and so the big thing we can do now is we can upload folders of content with the index.html file so now we have a website that has been deployed to skynet actually before i even do this let me just show what that looks like so i can go to do you want to upload a web app or directory um i'm kind of preempting my own demo here but let me go ahead and just open up a build of unit swap and i will just upload the build directory that we can see has an index.html file it's probably too small for you to see but that file right there is our index.html file and so what happens is that this folder can then upload and when i access the skylink i'll actually be accessing the index.html file and all those other files and assets will load off of skynet so let me go ahead and upload that and i can click on it and here i have a skylink that i can access uniswap on okay so this is what we're getting towards we're trying to decentralize a front end here um but we have this crazy url so what are we gonna do about that let's take a look at the slideshow okay so we have this constant immutable url but that's not how websites work right we want to adjust our css we want to update how we interact with the protocol we don't have immutable web pages so how are users supposed to keep up to date well let's look at a little lesson here we've got our friendly user here who has a link to a wonderful build of a website that comes out every single day it's daily builds it's got these immutable skylinks tuesday's build of the app is right here and we see it has skylink jacw etc and the user has that skylink and they're happy but now wednesday's build comes out the developers have created their dark mode update and our user has no idea how to access wednesday's build right they're gonna have to like go scour the internet uh keep track on a discord server or something else they don't have this link and that's not a user friendly way to get users to a web page so luckily our developers are smart and they're using the skynet feature called resolver skylinks and they're also using a github action so that every time they have a new build it points to the latest build and so what resolver skylinks do is they let a user have a single sky link and then the developer is the only one with the permission to update this skylink to a new immutable skylink so this is our mutable or kind of changeable updatable version of skylinks and so on tuesday our user uses the resolver skylink for tuesday's build on wednesday our developers push an update to maine the github action you know builds wednesday's builds uploads it to skynet and then updates the resolver skylink and our users instantly have access to wednesday's build and in actuality this is still not very user friendly so what we'd probably do is instead of having users access the resolver skylink we would have users access something like dailybuilds.com or dailybuilds.edu that actually points to that resolver skylink so our users just have to remember one human readable name and can always access the latest build of our website on decentralized storage okay so that's great um i have this question now uh that is gonna preempt why i'm talking about home screen and it is is decentralized hosting good enough um so let's take a look and see in this diagram so we're going to assume that thursday's build comes along and it's bad it's got tons of malware the developers have gone rogue and worst of all dark mode is gone our user is not going to be happy because it somehow made it through the github pipeline the resolver skylink still updates to this build and the user only has access to this right the user no longer has any sort of reference or knowledge of the previous skylinks and they're never able to go back to those versions even though those versions were immutable and even though those things are still living on the decentralized storage platform still living on skynet so it seems like we need to not only decentralize our front ends but we also need to make sure that we have upgrades be something that's kind of voluntary we need version history to just be part of the flow for users or else they're still going to be subjected to things like censorship or you know bad decisions by developers so maybe we can re set our old adage from d5 needs decentralized front ends to defy needs decentralized front ends on home screen so home screen is our product that we've made it's a web app where you are able to log in with the fully decentralized identity and add applications to your home screen that exists in a way where all the assets all the code are saved to your personalized decentralized cloud and so that way whenever you download that version you can always update using that resolver skylink i showed but you always have your own version history of all the files and all the web builds that you've ever used and at any point you are free to download and kind of almost soft fork from the front end that the developers have pushed out um or maybe not the developers push up maybe a malicious attacker has pushed out okay so i'm going to show how to build an app for skynet get it deployed using skynet and on home screen using the github actions but let's talk real quickly about the skynet prize for this hackathon that's why everyone is here we have a four thousand dollar cya coin prize pool that we're going to distribute amongst the hackers that deploy their front end on skynet with home screen support so if you do that you'll get four shares of the prize pool and then we kind of have maybe like stretch goals beyond that so if you deploy to skynet with a github action and you set up the github action you'll get two more shares if you add a working save to home screen link in your repo you'll get another share and i'll show what that looks like and then lastly if you set up a decentralized domain name using ens or h s to point at your app you'll get a one more share and i think ens is also putting on a prize where if you use an e and stone main domain for your application um you are eligible to maybe be one of their top prizes which has you know some reward with it as well okay so i am going to check real fast on the questions here before we jump into what i call a little speed run how does the decentralized auth work is it open for developers to use it yes it is the decentralized auth is using something called my sky we're not going to get too much into it but i'll show how you kind of like log in and use it actually let's just see what it looks like to use um so i will open an incognito window and go to homescreen.hns.cisguy.net this is what we're going to be kind of like building our application to use and we're going to click authenticate with my sky and what this is is this is actually just like an in-browser authentication where you're gonna have a seed phrase um you know in theory i'd wanna remember that and not share it with anyone and the mutable layer of skynet lets you create uh you know resolver skylinks and other types of mutable data where you sign it with that private key um and so that off you know that off is just living inside of your browser window and you are connecting actually through an iframe so the home screen doesn't have access to that private key um it's a whole it's a whole setup if you want to learn more uh check out docs.cysky.net and check out my sky and data access controllers um [Music] but yeah it is uh fully decentralized and open for developers to use happy to answer any additional questions on it um maybe at the end okay so let's kind of like look at this idea of a run i'm going to kind of really quickly show what it looks like to deploy to skynet and for doing this we're going to need a front end to deploy and believe it or not we're going to use uniswap's front end would have guessed at the unicode thing here um oh i've already forked this because i've been using uh dx swaps app fun i'm actually gonna i should have prepped this okay so all right i'm just gonna delete a live repo that i probably shouldn't delete but that's okay that's what's fun about live demos right okay let's do delete this repo show folks my password here sorry about that and one last little bit here nothing like doing two-factor authentication in the middle of a live demo okay thank you for your patience all right so let's try that again we're going to go to the uniswap interface they fully open source their front end and i'm going to fork this into my personal account here and then i am going to clone this so i can say get clone and then run that locally while it's doing that i know that i'm also going to want to enable github actions so i'm going to come up to the actions and say i understand all right and so if you are familiar with using react at all you the first thing you're going to probably do whenever you are using a react app is you're going to want to install your dependencies using something like yarn and i'm going to oops i can type in yarn to install my dependencies just kidding i need to be in the uniswap interface folder first and then i can that can just change the screen sorry what was that uh can you show you the screen i think that you are you you are on the terminal right but we we see we see the browser do you see my browser and the terminal or just the browser uh no both no it's good okay great thanks for checking in okay so um oh i need to be this is a rough okay so sorry i need to get clone what is going on [Music] okay i see here so i need to go to interface thank you all right so yarn to install my dependencies and then after that i would run yarn build to build my application right so because that takes a long time normally even when you don't make a lot of mess-ups i'm going to cheat here and i already have created my build folder here that i will show uploading again and that is actually what we did here i went to upload a web app or directory and i drag and dropped my build directory so if we look in build i have an index.html file and a website that is a react website ready to deploy to skynet um so static deployments on skynet are fully supported so that includes gatsby anything with like react router if you're interested in this i want to again point out docs.cysguy.net and when we go to the kind of home screen documentation we step through every piece that's required for deploying the skynet but one of the things that you can take a look at is something called um [Music] it's inside of our deploy to skynet action there it is sorry and it allows us to uh set customized details for how our web app is going to respond to different requests this is kind of advanced usage uh if you are interested in using gatsby or advanced routing for react router or vue um this is the place to start but also just hit me up in the discord i'm happy to drop you some links and documentation but for our speed run that is feeling not so speedy um we have installed things we've built them and i showed earlier what it looks like to drag and drop that to deploy it um but that's not the best way to deploy things to skynet right every time you want to update your web app you're not going to want to drag and drop using your web browser so let's automate these things using github so the first thing that we want to do is come back to that documentation and we can create a using this deploy to skynet github action we can come down to the bottom and we will see a fully set up template for how to deploy an app to skynet so it says where to create this file and i'm going to go ahead and do that if i go here and say code in our github folder under workflows i can create a new file we can call this anything but i'm going to call it deploy to skynet.yaml and then i will copy paste what we pulled from the documentation and super quickly if you have not seen github actions before we are saying this is called deploy to skynet and on every push that we make to the main branch we're going to run a job that's going to run on ubuntu it's going to check out our code these are the steps it's going to check out our code it's going to set up node it's going to run yarn just like we did up here it's going to run yarn build like we did to create the application and then it's going to run this action called deploy to skynet which is hosted here and what it is going to do is it's going to look for the upload directory called build which we showed uploading earlier and lastly it's going to create a resolver skylink by using our skynet registry seed and so like i mentioned earlier we have mutable storage that kind of uses a private key and so this is a thing that we're going to have to set up in our repo as a secret so let's go ahead and do that i'm going to go ahead and save this real fast and i will open up our repo here probably need to make it a little bit bigger go to settings and then i can go to secrets new repo secret i will call it skynet registry seed and i am not going to share this with everyone but i could put something in there and now i have added that secret to my repo right here great so that's going to get pulled when this action runs okay so let's see what that looks like so now if i click you know get status i have this new file so i can say git add oh sorry get at all get commit you can say github action and then i can say get push to origin main and when i do that now we will see that in our github repo under our actions it triggered a bunch of actions but the one that we are interested in is deployed to skynet which is happening right here and so it will go through every single one of those steps finally deploying to skynet where it will do a few things um one of which is print out the resolver skylink that is going to get updated every single time we push out a new build okay i'm going extra slow on my speed run here so i'm going to keep it moving um key points here yeah that resolver sky link is going to be where we update the skylink and our repo is going to take care of that um and that way users or an ens name will only ever need the one url the one sky link and we can point our e s h names or traditional domain names to that sky link and all of that info is also available in docs.cysky.net developer documentation all right the last thing for kind of getting our prize pool is adding a home screen button and so we like to have these in our repos um so that way a user can click add to home screen and have access to this thing and that connects also to our resolver skylink so that our users always know what is like the private key that you know that there was a private key owned by the creators of the repo that kept signing this thing to push out updates okay so let's take a look at what that is i think we can come back to our documentation here and this step is right here add the home screen button on your projects readme and we're also going to configure the manifest file so i'll show what that looks like as well so we can go to readme.markdown and i'll just put it here at the top because we are obviously the most important i'll paste that there and you'll see there's a point right here where we're going to need to drop in that sky link okay and so do we have that sky link yet no we don't um okay i will go ahead and cheat and act like we have a resolver skylink because um [Music] we have a kind of public build of this that should have a similar skyline so i'm just going to go ahead and access that for now and this is what it will look like you'll have an add to skylink button but let me go ahead and grab the skylink from that and so after the build it will show you what your resolver skylink is this is what this one happens to be i can click save for that and there's one other file that you'll have to update called the manifest and so what the manifest does is it lets home screen know you know basic information about your app and so this could be things like the name the description the icon um but the other thing we want to add for home screen is the skylink and so what this will do is say you know i'm installing this version that's released right now but this is the resolver skylink where i'm always going to know that i can find updates to this application okay so i have saved that and now i can also just kind of so say manifest and get pushed to origin main and so that will actually kick off a whole another round of actions um but let's go ahead and take a look at where those are still building still building okay but our readme has been updated with our add to home screen button um and so this is a little bit cheating we're using a different resolver skylink than the one that will actually exist for this repo but if i click on it we'll see skylink open or sorry home screen will open and it'll ask us if we want to save this uniswap build to our home screen i've actually already installed this so it's asking me if i want to update and i'll click update when i do that it will pin this dap to our own personalized storage that we have with our my sky identity and then after doing that it will um update our kind of application data and we can also see under uniswap we have this fully decentralized build that we will always have access to as users okay i am well running over time so um lastly if you want to get started with a decentralized domain name you can go to ens.domains and you just update the content url to your resolver skylink kind of like that again documentation is in the skynet developer guide which you can access here we also have sdks and lots of languages that you can also read about at scisky.net docs and if you're just interested in using skynet support.psysky.net is a good place to start um of course there's the hackathon discord but art own discord is a great place to find help and learn more from skynet developers and lastly let's get some more questions and thank you so much for your time i apologize for going over time as well that was great daniel thanks appreciate it um really does anyone have any questions now's your chance we have a few minutes often people think of their questions about 20 minutes after the talk ends but as daniel put his contact information here and then discord is a great way to reach the skynet team and also there's the like daniel said there's the unicode discord also oh there's a question from jose how do we deploy to skynet github actions yeah so if you want to use the github actions the place to start is just going to be going to the documentation and kind of reading through here but really the crux of it will be um maybe you can watch a demo that's gone even smoothly more smoothly like the last global hackathon but if you copy paste um this info right here into your uh this file in your project when you push to main uh your project will try to build and deploy to skynet and so if you're not using a react framework maybe some of these parameters will need changed but seriously just ping me on the discord and i'm happy to walk through whatever that looks like for your application so i think that answers it okay good awesome anyone anyone else all right okay well don't be shy as the hackathon continues and daniel alluded like you can go to the youtube global youtube this will be uploaded shortly and then his previous talks also they're all there so um if you want to just check it all out it's on the youtube and with that uh i want to thank daniel um from skynet for doing this cool workshop for everyone um happy hacking out there thank you daniel see everyone in discord 