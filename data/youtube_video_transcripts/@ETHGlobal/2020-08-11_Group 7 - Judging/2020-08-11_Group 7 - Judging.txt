all right we're uh we're gonna get started hey everybody my name is kartik one of the co-founders of youth global and uh welcome to hack fest for those of you who don't know hack fest is a month-long hackathon that equal and protocol labs have done and today is our day four of judging we'll be going through a lot of the projects that we've seen uh come out of this event so over the past month we've had 470 hackers from 50 different countries and working across 19 different time zones come together to uh to experiment and play with what is possible uh with the worlds of ethereum and falcoin and we've had a lot of these teams spend the last few weeks learning about what is available to them to understanding the basics of a lot of these protocols and in blockchains and worked on a project that they submitted over last thursday to us and we're taking this entire week to demo what everybody's done and showcasing them to the rest of the world so we're super excited to announce that we've had 132 projects that have come out of this event and we're showcasing them in groups every day for the rest of this week and today makes day four for these demos so before we go into uh these demos directly i want to quickly walk through the logistics of how this call is going to be set up uh we're going to have about 13 teams that are going to be presenting today and each team will have four minutes for their demos and four minutes for a q a and to minimize any av issues we've asked all of our teams to pre-record uh their videos and uh we'll be playing with them playing them and we'll have the teams come on for the live q and a part so quick overview of how the event itself was set up uh each team could have up to five uh team members uh but they were also allowed and it was okay to work on your projects individually and all code you're going to see today was written at the hackathon so everything we are going to see was done over the past four weeks and the only criteria for uh them to be eligible for submitting and presenting here was that their project should incorporate the tools and technologies from the protocol labs and ethereum ecosystem and that's great for us because we're seeing a lot of creative mashups of what's possible between decentralized storage and smart contracts so our judges will be looking at our projects from these few categories every project will be rated on how technical regional practical and usable it is and uh and we understand that this may not be a full criteria for a lot of these teams so we also like to have a category that we kind of call a catch-all call the wow factor for us to help uh understand and make sure that we haven't missed anything so before we kind of go into our very first demo i want to really emphasize that this is not a competition uh the hackers are very much here to learn uh and they're here to share the excitement and show you what they've been able to accomplish over the past four weeks and our judges are here to primarily give feedback uh for these projects and actually help them understand and comment on what they can do to take it to uh to the next level and not everybody is trying to become a business here so a lot of this thing uh a lot of the demos today a lot of our projects are very much the outcomes of the real creativity experimentation that we encouraged all participants to uh to uh to go on with so with all that said the schedule for today is as follows we'll have these teams come on and uh present to us one by one and doing the hard job our our three judges i want to welcome harrison heinz from fleet molly mckinley from protocol labs and muncie prakash from consensus who will be with us for the next two hours looking at and giving feedback to all of our projects so all that said i want to kick off with our very first demo for today and that is team libriscore and we'll be playing their video on their behalf and with that i'd like to uh kick off the first demo for day four so uh we'll uh get started just loading up the video anyways there's no audio a double check can you give this a shot yes let's go back welcome to this thing on my end uh apologies for this type of thing submit image is rendered by web assembly you can play it download and i say that download midi download pdf for screen restore index of ships in textile strategy refresh is shown on the home page so that was a super quick demo but um when you're you're here on this call would you mind just kind of going over a little bit telling us a little bit about what you wanted to do and and just kind of describing to our judges how it works okay okay uh so maybe maybe a question from our side is how how easy did you find it to work with all the libraries that you use for storing the data again yeah so um you said you used a lot of libraries like textile and and you also used infira for storing the information on the blockchain how easy was it to use list got it uh maybe another question from our site is uh if you had more time what would you uh do to this after and multi multiple database integration such as cbox and obvious db awesome i really liked how you um how the the song could kind of play forward um as you were viewing it within the page um i noticed when trying to view the live demo that it wanted to install some sort of extension um in the site i'm curious kind of how how you um were connecting like how you configured that so that you could do the the playback of the song at the same time i use web assembly to integrate the the school library sacha thank you awesome um so i think what we'll do is we'll uh kick off to our uh to our next demo and uh would like to uh invite falcoin pricing mechanism team up on and share their video hi thank you um that's oh i'm afraid i can i have to start again because i think i forgot to share my my audio uh let me do it again okay should be okay now uh shall i play it now oh yes i'll be great okay happened okay so now there is going to be a second part of the video which is a short demo of the of the system we have developed um so at the beginning we we initiate our private blockchain so it's in in guth just some scripts with some preceded accounts uh we have developed a simple cli um interface so we don't have time for uh for something more fancy so basically here we list all the accounts available at the node we deploy our smart contract using one of the accounts that has some money and then we can start interact with the smart contract so the smart contract is the is the platform running the auctions so here um users can just submit the items so storage nodes they have with the characteristics they they want so here we are submitting 20 gigabytes nodes we are offering 30 days of storage without any minimum price the same happens if you want to bid um so when we need storage so again here we specify our requirements so yeah i've added just two two items from the from the cli and now this just a script to make it a bit more interesting and submit more items in more more bits automatically and then any node can use the information seventh on the blockchain solve the auction and submit a solution which is an optimal assignment between the nodes and and the bidders and then uh smart contract doesn't verify it but anyone can do it uh so here you can see that uh the client downloaded the solution verified it it's perfectly correct but now if you submit this fake solution it's the same procedure and then when if we verify it uh the the verification will fail so now i can just simply submit a proof of misbehavior which allows which allows the smart contract to uh to delete the solution that was invalid so i think that's my four minutes super cool thank you so much for sharing um thank you i really like how you guys found a really useful um kind of way of connecting people from a marketplace perspective i'm curious how you guys came up with or decided on on this project in particular um so we had a mathematician in the group and um so he was working with auctions uh so i think it's kind of you know we have people from cyber security uh and from and so mathematicians and uh as you could see no one from from user interface uh so yeah i think we're discussing so that we are also researchers so that was a problem we were discussing before before multiple times um so i think auctions was something that we said okay this would be great because you can have this optimal assignment um between nodes you don't have to worry about anything the price will be optimal you will get the best note that is most suitable for you it's great but then it's very difficult to run it on top of the smart contracts because then you know every single one has to repeat it it's too it's too heavy so then we say okay how we can do it differently so we found this way uh this way with uh outsourcing so at the beginning the initial version the smart contract was verifying its solution but it was also pretty heavy and costly so that's why we came up with those proofs of misbehavior um yeah and then from the cyber security perspective he said okay so now actually in falcon can be problematic if you're a company you want to you know if you rent some storage and it's publicly available this storage node can become actually a target because if everyone knows you're storing some data on a specific node well you know that's that's the target for a potential breach so that's why we also wanted to to add this um privacy preserving um layer to prevent this kind of attacks so in in our system you don't know who actually it's not disclosed publicly who who made a deal with whom so yeah yeah thanks so much for sharing this is a really interesting project i'm curious what do you think is next for you guys as a team uh what is for now so festival user interface uh am i so okay yeah uh so first of all i think uh user interface so uh from the security perspective we've integrated bls signatures uh but um i think we need one one more mixer that would be kind of automatic for the users to make it really usable and then we are reset so actually would like to write a paper about it i think it you know can we can be interesting so yeah that's that's the plan i guess uh i had a question does the smart contract handle the payments and file tokens and well it could but for now it doesn't so we didn't really know how to implement you know file code payments with uh so you know because then we'll have to so the users uh for this uh privacy preserving layer they submit money to the deposit and then they get some crypto material saying okay you've paid this amount that they can randomize and then make privacy preserving um so then we can pay like the smart contract could potentially pay it from this deposit directly to the node after submitting the proof of um time space uh from filecoin but then we'll need to add verifying the the proofs of um timespace from filecoin onto our smart contract so it could be done but at this fashion it doesn't do it gotcha very cool thank you and did you use powergate to build this from textile or no we didn't we didn't no okay so we were we're considering a lot of uh technologies because we also were considering yeah power gate and then and then fleek to deploy it and then with that like just lack of time we gotcha we ended up with cli and okay awesome thanks team fpm thank you all right up next uh we've got team umwelt uh with raphael feel free to share your screen and take that share sound button i make some comments over the video because it only has video and it's it's a decentralized application to make semantic carries it is it has a stack it was built with ipfs type of client and you upload books and media and it will take it into a link data model which is a web intelligent language and you can make search you can make carries out of it and it is a much it is a public ontology so you can make this this sort of carries not only in this platform but you can download the this information and also search for it depending on your interests it is a an idea to decentralize the search engines that's a sample of how to upload it to you get a hash on ipfs and it will retrieve from the the ontology file every time you upload a file it to you update this ontology and uh you can follow the blocks for example of these updates also that's a sample of this the ontology is also hosted on ipfs and it wasn't the idea was to experiment with different web 3 technologies i also got really interested during this racket on over filecoin to try to to also upload this files and other medias there and also had some interests over centralized identities over this racket on it was a really interesting experience nice background music i was curious if you if there were any like um any parts in the kind of ipfs technology stack that you guys used um in order to to store um the data here were you just directly using like a go ipfs node or did you use textile or fleeq or any of these things to to store the data hey ruffa i think you're muted uh sorry when i lost this screen uh yes i was using uh i on my pfs nodes and uh uh with the client i would connect with it and insert um the the raw bytes of the file and retrieve the the hash from the pfs and then i would create a json and this json would also have a hash and i would insert them on the ontology but it is a stack with the idea is to decentralize keep decentralizing it i guess and try to you i mean the stack running ipfs notice um i don't know this architecture tends to to change i i think with more experimentation like only with js clients or something like that what would you add to it next if you were to continue building it i i probably i probably think i would go to try to experiment uh integration with fiocoin and some other medias also like um videos and and audios and to it in this example i was using only books but i don't know you can add many sort of media formats like scientific papers also ss feeds and retrieve the and the idea is to feed on this data this data structure yeah thanks so much for sharing this was this is a really cool demo i really liked learning more about it i'm curious do you think that there are any sort of features that are missing right now just piggybacking off of what harrison asked um yes i think that it would be interesting to be live on the web it's something that i'm trying to experiment and with this feeling of data i think it would be an interesting platform to be around and i i think that some identity also some identity questions would be interesting to implement for people to have more to integrate with other to make it possible this interoperability with other chains and to think of these questions i think identity identities are a good point but thank you for letting me take part of and learn about those features of the ecosystem it was an interesting experience awesome thanks for creating something great uh great thanks so much rafael up next uh we're gonna have team filecoin 123 123. i think roger's gonna take it away feel free to share your screenwriter the coin 123 website is divided into home page basic information blockchain details and note map it provides four kinds of information query the home page displays regular basic information including the latest block height network computing power network account number etc the interface is refreshed every 30 seconds the latest block table is implemented by first obtaining all blocks within a specified height range and then listing the miners within that range refresh every 30 seconds the height range is the block height generated within the last 30 minutes and the miners list fluctuates based on the number of blocks per height next is the latest news section get the latest packed block get the list of messages inside the data and then the miners ranking table a key field to explain the effective calculation occupation field every 30 minutes to go through the list of all minors update the effective force data for all minor lists from the lotus opi the formula of 24 each mining efficiency field is 20 for h mining efficiency is equal to 24 h mining efficiency in 24 hours miners accumulated block rewards miners effective calculation and finally the field of attribution team personalized definition node attribution team easy for users to view let's look at the block details page which lists all the block hash values and so on and see the single block details list all the information click on the message tab to view all messages click on the account tab to view all account information let's try the query function hey roger it looks like you uh ended your stream there maybe that was on purpose i think you're muted if you are trying to reach to us oh that's all the presentation oh okay great awesome so i will it over to questions uh yeah i can go so uh thanks so much for sharing this this is this is really great um i'm curious uh what do you think is next for you guys like what what else do you want to build or what features do you want to add to this sort of dashboard foreign based on the filecoin link data this paper provides the filecoin link data api service for community developers optimizes the data collection strategy and database table design makes the data service more efficient carries on the high order link data analysis and gives the valuable data analysis results very cool what was the biggest challenge you guys uh faced in building this were there any unique challenges to scraping the data from filecoin i think he wants you to repeat your question oh sorry i was just saying what was the biggest challenge you guys ran into or were there any unique like learnings from scraping data from the file coin network to build this difficulty and solution cannot get block rewards for a block from the data interface for lotus block rewards are sent to the lotus vm as an implicit message solution by calculating the reward state in each chipset compare the change in the reward balance between the previous tip set and the next tip set and then select a reward for each block when count count count the average block per block produced by the block reward the whole network miner data calculation is huge need to seek efficient strategy reason according to the performance of lotus test network 2 later miners data more solution take a sample every 30 minutes from the miners data in the chain and take a snapshot of the miners date with arithmetic power is more than zero this is super cool um i was curious if you guys um spent more time on it what would be the the next thing that you would do or add to it what area would you explore more based on the file coin link data this paper provides the file coin link data api service for community developers optimizes the data collection strategy and database table design makes the data service more efficient carries on the high order link data analysis and gives the valuable data analysis results thank you thank you team filecoin1123 up next we have team open poke assembly um and i think a note for the judges you may need to refresh your uh judging sheets just for this team to show up is it if we have like partially input data is that going to stay there if we refresh good question um i think it should yeah i think it auto saves cool all the judges got it on your sheet all right sweet um okay tebow feel free to take it away hi everyone i'm tibo sardone i've been working on pork assembly and open pock assembly so open poc assembly is actually an extension to make poc assembly trustless so first of all i'm going to tell you what fork assemblies the centralized platform that i've been working on in the past so it's like a forum where people can create new posts and comments so it has existing users it's already live on kusama.com.io for instance and you can see people you know posting things and commenting you can also see the on-chain proposals for polka dot for instance and um people can discuss and and vote on them so this is all nice but it's a web 2 stack and this is what we want to solve with open poc assembly we want to make it the same but trustless and censorship resistance so how does it look like well exactly like poc assembly and this is the whole point i really want the ux to be the same and web3 should be as easy and performant as what too so here you go this is a test discussion overview there's already a new post here but i'm going to create one and i'm going to have some content in there and so what i do here i'm already logged in and when i create a new post there's this little lot here that tells me the content on this page matches with this one stored on apfs and you can click on this little button to refresh it so what happens is actually when i created this post i'm creating uh on thread db a cost that is similar and i'm checking between what's on my centralized db and what's on ipfs so here i can comment as well and um you're gonna see here this little dots unchanged and it's been checking basically the the update i can also edit for instance if i save here it's actually turning red there's a little glitch i need to refresh it but then in the end it tells me it's green or good my comments and my post everything is matching with what is on ipfs now let's say i'm a malicious actor um i have access to the db so here i can see the comment for instance and i spot this one i can comment i can edit which i just wrote and i'm gonna hack this directly from the db so i had q for instance i'm going to save this and go back to my flick and just refresh and see what happens so here it's checking on ipfs and it's going to turn green or red depending on the outcome ego it's turning red and it says the comments do not match between this page and what is stored on acfs so we should not trust and you can you know you can update that's the same you can refresh it if you have a look at the console actually i'm logging some more things so i i'm just saying ihack2 is different than what i'm expecting which i can comment i can edit so this is all about hawk assembly it looks super simple yet it's a bit complex in the back um but that's that's the idea so that the users don't have to trust and can see it right away while benefiting from the super high performance of um a web 2 platform so how it's built using textiles for hdb as i said to store costs and comments it's hosted on ipfs for the front end using click and it's been pinned on pinata and archive on phyton thanks a lot for your time and see you around awesome thank you so much for building this it's super cool um i'm curious um you're talking a little bit in your in your description about um wanting to add um better better authentication on to threadsdb um i'm curious about kind of what what your next steps um were there and kind of what the hack is if you will on the the current behavior thanks for the question that's actually what frustrated me the most when i started um i started in i mean in this hackathon to you know get to know textile b and i wanted also to maybe play with three bucks and stuff like this and it turns out that the db doesn't have any icl so basically anyone that can read something can write on it so it's fine if you're playing with your own you know um checklist and stuff like this you can add stuff and remove and you don't want to share this but what if you if you want to share the read thing and but not allow anyone to write on it well you can't today so it's not really a hack it's just something that you cannot do in a decentralized manner today with 30 db and um so the same way the authentication is a bit is not awesome i would have loved to use three bucks but to be honest actually my server is actually exactly working the way three box is doing so there is a centralized category today that matches an id with an ethereum address and this is what my my server is doing my server is open source but so i can hike it if i want so i know that i don't know if i haven't been in this call for for long uh so i don't know if there is anyone from three bucks there but i know they are building uh they are building ceramic which is intending to do this it's okay for ethereum but it's not yet there for polka dots and i know they're working on it i'm talking with them actually uh in in private but it's not there so you know i know what i have to do and i know where i can um you know make it better and and really decentralize uh it's not totally yet there but it's at least a bit censorship resistant and if we have acl from straight db then we're at least okay to move a web 2 to a censorship web to web free um platform which is i think pretty cool cool thanks so much for sharing this um i'm curious what is next for you guys as a team so the team is myself and um the next part is playing with ceramic to make this so what i mentioned to make the authentication like truly decentralized without any authentication server uh in in the middle um we've spun like i've been chatting a lot with the textile people during this hack and uh they've actually kicked off a big uh refactoring of this the the api um for to basically be able to tackle this acl ability and and let's someone i mean i was in the shoes today of someone okay i have a web to stack i have users i cannot just rebuild it all in what three i want to just see if i can be you know step by step a bit uh better or yeah more decentralized at least and um so today to be totally honest it's just not possible like you cannot think okay i'm gonna take this decentralized db and just do whatever i was doing on my way to stack and do it with the web3 and this is what i wanted to check i'm pretty sure in the next six months we can make this evolve but for me i'm just going to work with the the teams from textile and from ceramic to just make this happen how long it's going to take probably more than six months to be totally transparent very cool my question um is in regard since you'd already built a version of this on a web 2 stack what was your experience then taking that and switching it to a web 3 stack was it a difficult process any learnings uh yes very very good question actually what's the hardest part to figure out what what you can do actually with these with three things because i've been in the ethereum world for like two and a half three years now building things and i've touched ipfs and everything but not really building with it and the hardest part was to actually trying to understand okay this api has been built for other people and you want to do something else with that so the api has been i've been using were actually used for you know you own your data and you do whatever you want with your data but you're not actually sharing your data so today if you want to build say uh i don't know a facebook like thing where you're gonna write things and show specific things to some people and actually allow some people maybe to you know write to you but not everyone again it's not really possible and it's just because it hasn't been thought through and maybe just because it's super early so the hardest part and the yeah what i've learned is actually that while the documentation is is also a bit lacking and and um i've actually offered my my help to to make this better because often when you're in web 3 um mindset you're like okay this is the kind of user i'm going to have for my api and and actually when you open it to hack assess people that come up with like i mean my id wasn't crazy but it sounded crazy obviously obviously because it wasn't made for it uh i guess it's super good for for the people to just realize okay actually this api should be turned this and this and make they may be a bit more um generic so that you can it can cater for other use cases so yeah the the hardest part was to turn this into my own use case and and make it work with my own use case awesome thank you tevo team one of one on open poke assembly awesome work great up next uh we have team graffiti uh so michael sammy stephanie uh feel free to share your screen with the sound button ticked on turn on your cameras and welcome to the judging ceremony this is called graffiti and it's called that because you can be drawing what looks like graffiti and the data structure for these objects are going to be directed to cyclic graphs and this will help us gossip about gossip about user generated content and also a way to crowdsource the funding of the pinning costs needed by the person who created the the wall or post in this case this demo was just created um just to give an idea of this could have been reddit this could have been messages images or whatnot uh but just more visual here is just drawings right so um in this case here i'll just have some drawings done here on this side um and you see they get gossiped immediately over each individual line is its own message but it also references two or three of the previous lines that it's drawing on top of that way not only does it maintain order locally but when this client receives it it'll also append references of where it's seen that line drawn on on its own canvas which may not be the same ones but most of the time it is in this case things sync so fast um and then it will gossip that information back across the network so all the clients will be aware not only where they drew something in reference to the lines that they see but also where other clients have seen things being drawn on top of and the idea here is that the more gossip there is the more clients that are the tighter this dag will be and the more consistent or the ordering will be in the long term um and then once a client connects to the network um they they will immediately find nearby clients in this case it connects to this one here first pull the data and then if i hit syncing on here then then he'll pull data from here too so so um this thinking is not that via gossip is done directly you find it here you see it they speak the correct protocol and then you start exchanging information for them to pull the remaining data there's a lot of content here this might be expensive so better the better thing that we do also is allow individual clients to post checkpoints of the dag to ipfs such that they can gossip that those cids around a new client can come on board find one of the cids pull the information from ipfs directly and then just have to worry about thinking that the the differences with the updates um so again we have gossiping about the data as well as gossiping about cids containing checkpoints of the data and then additionally i touched the concept of creating walls so you can create your wall and as the creator of a wall you can be expected to post pin things to ipfs if they can gain traction and by gaining traction what we mean is that um every single one of these lines here contains an additional payload of a signed ethereum payload so these payloads pretty much are intense to give tip to the creator or the of the wall and once enough of these lines that therefore enough of these payloads have been accumulated um you can the person who created the wall can post and batch all of these payloads on the ethereum blockchain will be verified against the signatures of those pillars as well to see if they're they meet a threshold of of um of interaction or a threshold of tip um and then all of that coin and it will be transferred erc20 tokens will be transferred um from the individual tippers to the tippy and and then you have to rely on someone here on good faith that the person who created the wall will use those tips in order to pin pin the content um once we get to a file coin vm this can be probably done not only atomically but trustlessly so you can have a the the file coin smart contract not only verify all those payloads but also um use them directly to pay for the pinning of some content that they've all agreed upon um so that's the overall idea here is just gossiping about about content gossiping about where everybody else saw that content pinning ipfs for checkpointing data and then the crowdfunding for pinning that data um so more eyeballs can see it and then more app will see it although you can have these runaway social media posts or or content um that we can expect from things like reddit and facebook when enough like likes get come on then enough more people see it then it goes away anyway uh thanks for for taking a look at this object demo yep sorry we're not having maximize the the screen there this is super cool um thanks for sharing thank you the i'm really curious about the the part um around tipping using my understanding of this is based on the lines that were drawn you look at all of the different parties that drew lines and then tip the creator of the wall according to the people who drew lines i'm curious a little bit how you're going to came up with that concept and then in order to draw then you have to each one of those is a ethereum transaction every time you yeah it's one additional line yeah i'll explain it so basically the idea here was um users are generating this content but really you can't have everybody individually paying for the pinning of content so how do you accumulate that coin so the way it works is every single line um i'll give an example there's a smart contracting ethereum blockchain here where um you can post in batch an array of signatures and an array of tipping intents so instead of it having to be individual transactions on the blockchain for each microtip you can post all of those as as a delegate calls so that way this checks the threshold so if you have 50 lines you will have had 50 tips that that were gossiped around that say if you find a way to collect enough tip the contract will allow you to verify true and then go ahead and send you all those coins to 50 different coins or the 50 different transactions and if the the post doesn't get enough traction then when you try to validate even if the signatures are all good uh the amount of tip that's been accumulated is not sufficient and then the contract will fail so it's just every line not only contains the payload but also contains a signed intent that is broadcastable as a batch super goal thank you no problem yeah this is a really unique idea i'm curious how did you guys come up with it yeah so the idea is we wanted to make like a decentralized reddit um and uh we didn't think that like lorem ipsum text would have been a visual enough or quick enough demo um and also having lines and drawings is a good visualization for what a dag would be useful for in terms of having lines on top of each other it's very easy to visualize you know if your line that you draw is behind or on top of something so the idea is okay well how do we make something decentralized um and that uses the dag that's visual and specifically here um like user generated content is quite ephemeral and it's promotion based right so like you don't expect it to exist for that long um you know when you when you post on something on reddit or you comment you don't go back seven days later and check it so you don't expect it to be there forever and it's also promotion based right so so as content gets more and more liked it should be seen by more people and this was very conducive with the idea of okay well we have really hot storage which is you know keeping it locally and then gossiping it you have a little bit more colder storage where you start putting things in ipfs and they might get deleted or might not because it's free and then finally pinning data which is where you where enough people have said this is worth everybody seeing it's got a thousand likes or whatnot so just the two ideas seem conducive and we want to take a look at you know decentralized user content if you were to continue working on it would you uh your plan would be to integrate it to filecoin so maybe those tips could be used to pay to store it was that is that the idea yeah so the array of things we want to do next one of them is definitely yes um right now you have to rely on good faith that the person's gonna use the coin they got an ethereum to pay for the content and if they don't then you kind of like blacklist that wall creator and you never tip them again but it's not really enforceable but yes once you get a filecoin vm if you can do this that same smart contract um then there's no there's no if ands or buts about how the tip is being used um apart from you know spam protection we have some ideas on using uh hub and spoke state channels to prevent people from like to force people to not only tip the creator the wall but give a little bit of tip uh to the person who drew the last line so that if you think about it down the road that actually helps with good faith content in that no one wants to have the last word and therefore you only want to draw something if it's worth drawing it's i can get into it but it's long yeah awesome thank you michael for your demo um and everybody else on the team awesome project thanks a lot for having us great up next uh we have cindy from team cadencia uh so cindy feel free to share your screen the sound ticked um and turn on your camera if you're willing just to let everybody know there's no audio on this demo so uh also might be helpful if you guys do a quick little explanation of what you built there too i know it's good to see the ui but a quick little high level explanation to be helpful too yeah absolutely um so cadencia aggregates data from decentralized sources um the goal was to create like an interaction of data sets on one interface and we wanted to do that because we thought that by having them all on one interface we could make insights into that data more accessible and we thought that would be important because accessing that data while it is public in nature is very difficult for non-technical users so we want to make those insights accessible for people who aren't developers or data scientists and beyond that we also wanted to kind of foster we wanted to foster a community of people who cared about high quality data and also use that data and yeah those are kind of the core features of cadencia well you mentioned in your description that um you kind of um in you had difficulty syncing to the falcoin network but that you were still able to like get the visualization and and the nodes on your uh your globe do look relatively um accurate to where i'd expect them to be so did you guys um what was your work around there um we were using mock data we were unable to sync for testnet just because we didn't have enough ram on our computers but that didn't stop us from looking at the grafana and checking it out and saying maybe we can make it look as realistic as possible to anticipate that real-time data when it's ready yeah thanks so much for sharing this um i'm curious what were some of the unique challenges that you guys had when working on on this project one of the challenges that i've had while i was while we were building this was um we're pulling data from subgraphs right now from the graph and we're using their graphql endpoints and making one apollo server consume multiple apollo clients from multiple graphql endpoints is kind of difficult also another major difficulty is the lack of standardization of data so each api is written in decided by each organization and also especially with d5 data a lot of the data is denominated in the base token currency of whatever that chain is using so that's makes it difficult to compare but likely down the road i would like to publish an npm package or a module that would standardize the data to make it more comparable is the idea to also get data from sources outside the graph in the future yes absolutely so when we're anticipating data sets from that are stored on file coin as well as oracles um it would just ensure the high quality of the data because we can cross check them to look for consensus among them so the to like verify if the data is accurate versus not the plan would be to use oracle's and judge it based on the sources of where that data is coming from yeah yeah so we would kind of be cross-checking that data um from those sources um and i guess we would just kind of be creating another layer of verification on that data and most of that data does come from um pretty very like those repeatable sources like oracle's or subgraphs that are already synced well they do have different mechanisms of verifying the data as well so there would be more investigation needed to see how we're going to create consensus when all these verification mechanisms across file coin oracles are so different gotcha very cool and um we also uh just thought that um there's some kind of natural verifier properties like in the project so that um in that file coin dash that's why we visualize um how much of the network is verified or not like we that's all mock data but um we just kind of wanted to show that um as a tool that we could kind of also provide that service awesome well thank you so much team cadencia it's a great team name as well thank you very unique awesome uh great so up next uh we have another team that judges you may need to refresh your sheet for uh team is crowdstore looks like they're all coming in um and great whoever on your team is in charge of the screen share feel free to do so and share the sound and there we go good afternoon or evening or morning depending on where you're located uh we are extremely appreciative of your time and we're looking forward to showing you what we've been working on for the last month and to getting some feedback so we are crowdstore and we are interested in an exploration into incentivized information propagation the long-term goal of our exploration is to enable digital organizations such as messaging applications forums or organizations yet to be conceived with a means to spread their information through incentivized crowd mechanisms with that being said based on our experience level we wanted to limit our scope to building a proof of concept that mints a non-fungible token for a file coin storage deal on top of this we also had the goal of learning as much as possible this is our first time working with ipfs and filecoin and we also have very minimal solidity experience with that introduction out of the way let's get into the demo as many of you may be aware the quote original hackers of the 60s and 70s had such an extensive list of jargon that they would actually post a jargon file weekly so that they could understand each other in this spirit and the spirit of hacking we created a forum for them to incentivize the spreading of the jargon file as you can see here we have a user associated by his eth address and he has zero seed nfts for spreading the jargon file we will click here to begin spreading the jargon this is the seed page where individuals in the organization can go to upload their file we design the seed page to be separate from the main application so that organizations can deploy this page to ipfs and then build their application or use case to work in tandem once the users verified this info they can go to the next step here the user can associate his f and file coin address so that once he makes the storage deal he will get paid his nft once those have been associated they can go to the next step add a file make the storage deal and boom from there they can go to the next step and view the transaction hash for the token that was minted then the user can go back to the forum and see that they have one seed nft for helping to spread the jargon file so how exactly does our application work from the front end the user associates the address using metamask from there a storage deal is made through powergate after that the deal id is sent to our back end which verifies the deal through the lotus api and then from there the token is minted onto the ethereum address where our front end polls to update the balance the two biggest flaws in our design are one that we assume the user already has the file on their drive and two that the back end is a single point of failure if it were to go down then no new nfts would be minted the inspiration behind our application besides filecoin and ethereum of course is discord for those of you unfamiliar discord has the inverse model of slack where users can boost the server to have it gain benefits and in return they gain perks and privileges within the server in this light we envision organizations creating customizable reward structures for users to redeem their nfts for while we've had fun there is still a lot we hope to do mainly we hope to add a mechanism to accept wrapped filecoin resolve our single point of failure develop reward strategies and then build a prototype p2p chat application using libpad p2p to run trials and tests thank you we'd love any questions or feedback thanks so much for sharing this i'm really curious how was it your first time building something that was like web 3 native like what was that experience like and what was what was good about it what was challenging about it uh yeah definitely was a large learning process um i would say well i mean one of the biggest things was i guess just getting like metamask our local ethnet as well as um powergate with you know the multiple instances as it runs um all working together um that probably took us like half the hackathon just to kind of get those like just to verify we were actually like talking to the right point endpoints and such um and then yeah so from there it was just kind of um working on integrating those two um well specifically like like information from the two different blockchains um that was probably the biggest um uh like that was probably the biggest takeaway i had was that you know there's a good amount of work that needs to be put into um just to like verify that a storage deal was actually made um and then communicate that information to the ethereum blockchain uh in a manner that's like secure i guess i i saw in your kind of architecture that you guys are using powergate um it kind of what was this seemed to be mostly like storage oriented but was there also kind of a a fetch side of um being able to then you know fetch this more decentralized uh version of the um the jargon file from the ipfs network or um how did that that aspect work totally yeah um unfortunately we did not get there but that was kind of what our uh our next you know one of our next steps was if uh if you were to besides that next step what else were you thinking to build into the project if you could keep going or if you do keep going yeah um so first thing would definitely be to like incorporate um i saw there was another project that did like wrapped by coins so i think it would be cool to be able to just contribute as well um but then after that um mainly focusing on um how do we kind of remove the back end because um i think it kind of in some use cases it defeats the purpose to um you know have the the organization host a back end when they're not even trying to host um their own file i guess uh so so we would like to you know we're playing around a bunch of options like you know assume every storage deal was like good and then have possibly the users vote on um you know which actual storage deals were legit um things like that we have time for one more question if anybody has anything burning i guess what inspired you guys to to take on this project um i don't know yeah uh i just i i mean i like discord's model um and i just saw like all the pieces are kind of there for a decentralized version it's just uh like how you put them together i guess um yeah i always feel like a greater sense of community kind of in like discord forums than most other places i go so yeah thank you awesome thank you team crowdsource awesome and then up next we have our last but not least team uh drizell contacts uh so it looks like josh is here ready to go he's got the right background and everything hello so i'm sharing my screen in one second is everyone let's see yep looks great cool so drazel contacts is a contact set it's meant to provide a way to keep your address book or contacts always updated by the people who have that contact information so you would enter in your phone number address all that stuff and it would automatically update everyone else's information on their phone so the problem is that traditional contacts apps are outdated always i can't count how many times my friends or family have tried to reach out to me but i've updated my email or contact information and i have they have to find some way to get the new information and so the problem is that you own their information you have a copy of their information that you're trying you're in control of and having to keep updated but wouldn't be great if they were able to do that razor contacts is a decentralized contacts app that allows you to request subscriptions to other people's contact information and whenever those people update that contact information your that contact information gets updated in your address book i'll log in with the first user here and the second user in a mobile screen a mobile size screen over here except the three box connectivity pop-up so we're using metamask and three box uh everything is running on fleeq uh underneath three box there's orbit db and other technology and of course ipfs so the first thing you see whenever you log in is your contacts list both of these users are brand new to this app so they don't have any contacts we'll go through creating one in this demo they also have access in the second tab to profile information so this is where the users will add their profiles that they can allow other people to subscribe to so i'll quickly add a user here it'll be a work profile and i'll just select that so now we have a work profile when i hit save that went through when i uh that went through and added it to a three box store for this user it's private so only that user has access to access to it for now we'll do the same thing for this user we'll go to the your info page we'll add in a profile uh we'll say lane and we'll give him first name and we'll just give him an email address of lane email.com so now they both have a profile and then the next thing that we'll look at is request to access that profile so this user on the left will hit add contact and if you remember this user had an email of lane at email.com so we'll add in lane email.com and then uh since both well since all of the application instances are connected to a thread they will be able to see the messages that are meant for that user and send that user a message so on the mobile view we see that a user named joshua purcell which is the same information that was in our default profile our only profile over here is requesting access to our information and this user only has one profile so that's the one that's showing up here and then we're able to choose to either accept or or reject that subscription request so we'll accept it and then it'll eventually pop up for this other user in their contacts app and so we see the user's name and the email and so now when ever this user updates their information it will automatically get updated for this user oh josh doesn't see me oh sorry i was on mute i was just talking about this is a quickly a diagram of the different spaces and the um the threads that we're using and and whether they're private or public and shared between people um we can talk about this a little bit more if you have questions and as well as upcoming plans um but i'll open it up to questions and we can go from there this is super cool oh sorry harrison uh thanks so much for sharing this uh i was curious on kind of the the the last piece you were showing around kind of the the uh schema that you guys had used and um kind of how you were exchanging this information to people how you kept these things in sync i'm curious if there were any any challenges or hacks you had to kind of put into to make sure that people were getting kind of the updated contact info um especially you mentioned a little bit in your how it's made like the challenge of when it when one person's online and another person's offline kind of um have a delayed propagation yeah so like the so for future plans we we plan on having a server probably uh so that we're able to offload that from the client and make sure that we have some type of mechanism to maybe retry or or something like that but for now we have this thread so if you look here at the top notifications thread that is a thread that's shared across all of the application instances and a notification will go out from a uh you know if if one person decides to request a subscription to a profile then a notification will go out there and then the instances will look at that um message and decide is it for me they filter through those and if so then they add that notification to the my notifications thread was which is a pi a private thread and that's what shows up in the activity page and then that allows the user to act upon that delete it and then they there's a time stamp that makes sure that when any new whenever the application comes back online it takes it it looks at the time stamp that's stored in this drazer activity space to make sure that when it's going back and lock and and subscribing to notifications it doesn't um get any old notifications only new ones i uh i saw in the project description you mentioned you had a lot of issues with mobile and connectivity and long term it would be your goal to to make it work as a mobile app can you just talk through like specifically what issues you ran into or any learnings you found uh in that regard yeah so um three box um doesn't run in mobile so i didn't i didn't try to create a mobile app because of time constraints i wanted to just focus on a web app because that's what i'm most familiar with but i know that some of the dependencies would have a problem running like in node or in a like a mobile app for instance um but i have a plan for i think identity wallet may be a good replacement for some things or it may be it may make it possible to have a mobile app but then also if we were to offload some of the functionality that's in the client on the mobile app to a server then then we wouldn't need to have so many dependencies on the the mobile app and it would also take advantage take into account better um you know a mobile app a mobile device going down and losing connectivity and performance issues but i i kind of sidestepped those problems and didn't really try to tackle those problems for the hackathon thanks so much for sharing this um what are sort of your your next steps or like what what are you what are you planning to do after this yeah so the the looking into well okay identity index and ceramic those are awesome things i'm most excited about i want to see how i can integrate with that and then also um like i was saying mobile app and maybe offloading some of the functionality to falling back to a server implementation those are my biggest things but i have other ideas for the same type of user-facing tools like calendar sharing or you know different ideas that i would use this as a platform to focus on other use cases for end users my goal is to create tools for end users awesome thank you so much josh and a big thank you to all the nine teams that had demoed here today um that that concludes this uh group seven judging session um massive thank you to our to our judges who of course now have to go back and do the hard work of deliberating um so big thanks to molly monsieur and harrison for for dedicating some time to us and and for walking through all these presentations with everybody um we're really excited um so much more judging still to come another kind of three days actually of judging so keep a lookout for those um and with that being said i'll leave that here and thanks so much for everybody coming up thanks so much for having us this is awesome of course thank you all right thank you and just to be clear is this the halfway point or we're done as judges yeah we're out so i'll send you a note on slack real quick okay cool okay all right thank you take care everybody 