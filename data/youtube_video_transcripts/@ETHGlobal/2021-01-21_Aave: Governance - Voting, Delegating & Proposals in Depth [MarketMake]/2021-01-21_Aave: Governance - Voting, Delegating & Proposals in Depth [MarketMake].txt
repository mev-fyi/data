everybody good morning thank you for running this for us hi yes great thanks um yeah so hello and welcome everyone to the ave workshop governance uh voting delegating and proposals in depth today joining us today is ernesto who will be taking us through this session one quick reminder just to complete your check-in ones in your cohorts if you are struggling at all feel free to reach out to me or anyone else on the east global team and with that i will pass it over to ernesto to introduce himself and get the session started okay thanks emily hello everybody i'm like like emily said i'm i'm ernesto i'm like an engineer a developer in in inaudible working mainly developing the the avalandin protocol but also in a bit of everything within the the ecosystem uh yeah and today like the objective of the of this kind of presentation slash workshop is to to give a bit of an introduction of what is the the governance um how does it work a bit of thoughts about also my own thoughts about about governance systems and if we have some time at the end i will try to do some really small like coding session live coding of those that usually go wrong to showcase a bit of what can be done with with the governance and and at the end i think we will have also times for for some questions uh i prefer to have this kind of like presentation workshops really interactive so if if you need to do any to do any questions in the middle like feel free to to stop me and and we can solve the doubts so yeah let me share the screen now i have some small presentation okay oh am i showing the the ppt yeah you're showing the ave introduction to other guys okay okay perfect yeah uh so yeah i i already said a bit about the in the introduction but yeah the top first i'm gonna start with some some quick thoughts about governance a bit of explanation of how how the the other governance works in general and with including the features the components and and especially at the end like for for builders and hackers in general how they can how they can integrate the governance or using it in in a different way you know so yeah well about me i think we can skip this already is playing core developer in ave i i participated actively in the developing of the of the of the governance itself and and all the the delegation of the tokens and so on that is associated to the governance so yeah i have decent knowledge of how how does it work uh well first question of all is that for a lot of people that may be entering the in the in this hackathon attracted by defy the centralized finance and mainly about like the economic part of of of favi is like why a governance is needed like why why we need like this system of like coordination social coordination both in a great proposal it looks like a bit not so so related with decentralized finance well there are multiple reasons i will go now through through them but first of all i want to show another slide that i did for a different kind of presentation that was more related of like the economic part the defy part and not the governance of avi and and to see that is not the like they say the panacea the the governance it can be used only for certain things so uh yeah is not the solution for everything the governance first of all um the first reason is that well social coordination and and and action be a voting system is is good uh it kind of represents the spirit of of the centralized finance of defy but a lot of times like people tend to to put a governance system everywhere and is not always the the solution it depends on the use case uh usually but this is a bit biased point of view is that i i believe that in a lot of times that if you can solve a problem that is algorithmically so with for example just logic on the smart contracts is it tends to be a bit better or at least it generates a bit less complications especially if you are like creating a new project bootstrapping on new projects sometimes if the project doesn't need a certain type of coordination it's better to avoid then a a good governance is a decently complex system this going a bit against the what i'm going to say later but but yeah i mean if you have um another system on top of your of your other system uh will there is another point of failure at that point and it looks that when you have financial applications and and complex social dependencies uh i refer to like processes of voting processing also mid proposal and so on it can be a bit of in danger sometimes because those this complexity can lead to like unexpected outcomes so this is the uh some point of view about governance that is not the solution for everything but well sometimes it's dangerous but you know we are here to talk about governance so let's forget about the this thing and and it has good things so it's a good solution a lot of times uh why it's a good solution well first of all like device is like uh the main principles are like innovation and disruption and it's pretty natural that this innovation needs to include innovation at all layers not only on the technical layer not only on the economical layer but also on the on the social coordination layer so governance is just an on-chain governance is just another tool to apply this this innovation on then sometimes when you try to solve all the problems uh let's say algorithmically be a via software and with no no human interacting with with the system it leads to really big complexity we can we can you can see basically with blockchain in general that that what it looks that it should be the best way it always boils down to groups of influences and so on and so on so it's it's quite difficult to make a system that is like completely automatic and based on software rules so yeah then yeah it's not so good for to have a system built on top of another and both being complex but it's not necessarily uh like a requirement that the the governance is a is a really complex system it's possible to write governance that are simple to understand and that are they have a simple mechanism of work you know and that is part of of what i i i hope it is the other governance and uh well partially is not true that financial applications but plus the complex social independences or interactions are not always dangerous sometimes the outcome is like really positive for for for society for innovation and and so on so yeah i hope the in our cases is that the best example of of uh of of why a governance system is is so so necessary is because special on defy is because we have a lot of different fields already within defy and and all of them are interconnected so when you have like completely automatic rules like based on smart contracts and no human interaction between them it it it leads to really good characteristics of doing experiments but at certain part is pretty clear a certain part is pretty clear that you need a bit of a human interaction and human intervention on the systems and like when you have a governance that is also built on top of for example tokens and those tokens have a certain utilities it creates like um let's say an ecosystem of incentives that makes that the the votings for example are meaningful you always and the combination of all these protocols each one having their own governance it creates a good equilibrium of like let's say human machine between what between them and protects a bit the ecosystem of like crazy failures and no way of of of of like fixing that so a i talk a bit about the governance but why the other governance in particular which are the characteristics which are the like the particular features compared with with some other systems that are out there so um about the features uh well first of all i suppose people here has some entering content a bit with with other kinds of governance and one common limitation between all them and sometimes it's not a limitation is simply that the design was was that way is that the the voting is done and the submission of proposals are done by one token so participants in the governance have uh token x if you have more than let's say five percent of token x you are able to submit proposals if you if you want to vote you can use your balance or delegation to on that token to vote no but this sometimes can be quite limiting because for example if you want to involve multiple communities at the same time usually this this each community is represented by one token so you cannot do it with one governance you will need to have two governances then maybe do another in the middle and and and combine those somehow so in our case it was like that even more for for technical reasons because we have the the other token that is the the main talking off of the other governance and then we have some other flavors of the token that is for example the stake ave that is when people deposit their other token on the safety module that is a kind of insurance from the product for the protocol so when they deposit in their their average air they receive the stakeholder representing that but they should be able to vote also with the stake up even even if he's not avid pure up anymore so for that our governance has what is called the voting strategy that basically allows us to put more more complex rules on the governance in our case i will show you later but it's as simple as uh it accepts uh as both in power and proposition power it accepts both avi and the stakeholder so if you have both on your wallet you will have the aggregated voting power or proposition then um like i was talking right now about the voting and proposition power this is an important distinction with other governments because usually uh in other governance there is only one token and that talk if you have balance or or delegation of that token you are able to to submit proposals and vote both at the center in our case we we thought that is is not completely let's say fair of doing it that way because um the the entities behind the creation of proposals and the entities behind voting usually they are different if if you make a comparison with the real world it will be like lawmakers are the entities that they propose that create proposals and then you have let's say politicians that that are the the voters on on the governance system so we try to to keep that that same analogy here so uh the token for example the token has a proposition power in one side and both empowering another so for to interact with the with the governance you need certain amount of proposition power to create a proposal but then to vote you need voting power and and you can delegate one or another to two different entities then uh something that we also have but this is already a bit more more common with other systems is the off chain voting so especially right now that the the gas the gas cost of using ethereum is quite quite high um it's really good that you can actually vote is by signing a message and then potentially uh a relayer can cancel meet your your vote to the governance contract and and and both there it can be used for other cases like for example if you have a fold wallet and a hot wallet then like the cold water you have it isolated so you you assign the messages there and then somehow you just transfer the sign already message to the your hot wallet that actually submits to the to the blockchain the vote then we also noticed that sometimes is not optimal to have all the permissions on the cover on the same governance contract on multiple systems for example our governance has control over over the other token and the stakeholder tokens but also has a control on the on the lending protocol and those entities separately are not so not so similar no and the updates on one or the other should have different requirements for example in terms of time or in terms of percentage of the token needed to to pass a proposal so what we did is to split um the execution of the proposals in the governance in what we call the executors so in our case we have two executors i will show you after and one has more relaxed conditions to of the of how the proposal needs to pass to get executed and the other is more strict in the conditions and this is this is quite useful it and then yeah we also have different mechanics of execution and this is a bit more technical i can show a bit after but it's um one of the ways is you can create a proposal in pure solidity like writing a smart contract which if you know solidity is really handy and the other way it will be that you don't need to actually know solidity you can just identify the steps that you need to execute on the proposal encode those steps somehow and and submit it to both so yeah this is also quite interesting and well in general our like the our design and what was pursuing was to be simple still as other governors from from which we took inspiration but add a bit more customization especially for our use case but thinking on other projects that could could use the same governance framework to create their their own governance here we have a diagram that is basically how it works the the other governance and more or less what i i already explained we have this this governance content in the middle that is is the core is where where all the interactions of voting submitting proposals and and executing proposals happen yeah so is the core smart contract then the governance strategy is what is what i mentioned that where we encode the rules of voting and proposing in our case that the ave and the stakeholder are taking into account the violence of obesity or the delegation and what else yeah we have the the executors that also mentioned uh the short time lock uh the executors are also time locked in our in our case because we want certain delay between when a proposal pass and when it actually gets executed but there is no limitation to no limitation to put any any other a kind of contract it should be an a a time locked contract but they could be reduced for example the time or increase the time there is no limitation in that sense yeah but yeah we have the short time look that is the less the more relaxed and then the long time look that is a bit more more strict and affects mainly the credibility of of the other token and the stick tab that are like quite critical parts of the system also this governance can be let's say out updated in the sense that the governance strategy could change in the future or even the timeline the executors could change and for that a proposal needs to be submitted that goes through the long time log and changes something on the on the governance itself that is that is a bit more or less how how the components are then yeah we have the the voters and the proposers that are two separate identities and then just in like a additional protection we have an entity that is called the the guardian that is uh a multi-sig composed by by well-known members of the of the ecosystem and basically the only power that it has is that if some malicious proposal will will be submitted and we like clearly malicious proposal and this this guardian can cancel the proposal at any at any point which especially during the early times of a system like this one like the the other governances is quite useful okay next uh next will be like what like how to use the ava garments because yeah the theory is is is nice but i'm building something what do i do with avogadro so there are three main ways of using it one will be like if you are building a new project for example then you want to have certain governance on top just for the the the rep that is open source of of the other governance and and and plug it into your project or for example if you have already a token that is compatible with the governance and some other platform the you could control it and be uh forking the governance and using it then another another mode will be just building actually an application in which goal is to interact directly with other governance this can be multiple things but mainly is what is called an integration of the of the governance could be with the tokens even in terms of delegation or submission of proposals or voting or whatever and then the third that is not directly with the the technical part of the system but of it is that anybody can create proposals anybody can get proposition power being this one like getting other tokens or asking for delegation for somebody else to to delegate a proposition or voting power and of course like voting itself like on the on the on the governance or even participating in the discussions in the in the forum for the first option uh just to put uh some simple steps um well it's about going to to this repo on the on the other github forking it and and downloading in local then a creating a governance strategy adapted to do to the token if it's a like a simple governance that only needs one token uh i can show it after but but it will be just deploy this contract that reads the the voting and proposition power from the balances of the of the token then deploy the other governance itself the contract that is the core it has some configuration but is nothing really really complex and then deploy the executors that are the the entities as i say time locked that they execute actually proposals can be won at the beginning usually it's enough but if like further requirements are needed it can be whatever because the the 0.5 is that transfer the ownership of the to one of those executors so you can have one executor that is the the one that owns the the governance and that has the biggest powers but then you can create others for like secondary executions option two should be but is the yeah participate in the in the governance itself i and i think this is the the most important that is the go to the forum there are a lot of discussions i can open uh afterwards and just participate on those because it's completely open and and that is the objective of of being like an open ecosystem a second step is that if you feel that you have like some some strong opinion about the uh certain proposal is as the or about something that you want to propose ask the community of the beholders to to give delegation of a proposition or and voting power depending if you want to create a proposal or if you just want to to vote on behalf of other guys if you go for the first route of creation of create the proposal we have some repos that they also help with that and and documentation that give resources or how a proposal needs to be written it's really simple but but it is i mean there are good examples that makes things easier and uh and of course like if if you have like a strong opinion on how the other ecosystem should progress i i encourage to just ask for both in delegation and just vote on the on the proposals that appear on the platform uh i will show some of them now but in terms of resources yeah i mean there is on the github mainly related with this is the the governance repo and the and the other token then we have the discord the documentation that is common with the with the protocol our medium twitter and then the the probably most important one that is the the governance the governance for and that's it for the for the presentation part now i think that i will show a bit more of the code but uh first of all maybe if somebody has some questions maybe about the general stuff we can answer um yeah there's a couple questions that have been dropped into the chat um i'm not sure if you can open it or if you'd like me to read them out yeah no i can i can open yeah okay um well one of them is what are the most promising use cases of great delegation um this is not so related with with governance i can i can give my opinion but uh i mean great delegation for for if somebody doesn't know is is more on the landing protocol and it's like when somebody has collateral and gives a borrowing power to another person that doesn't have collateral so uh promising use cases the main use case is that to do a off-chain agreement legal agreements for example with with a person that doesn't have like via the last collateral in abe and that person could borrow using your collateral that you you have and something depositing okay okay that uh both in power and pro and proposal power delegation okay that's different um the most promising use cases um i'm not sure if i understand about the most promising use cases the for me the most important part is a like what i explained that the separation between both like because conceptually is not the same like a profile of of a of entity let's say that creates a proposal that is like that has the knowledge to propose a change in a system compared with the ones that just bought like giving uh giving the opinion so i i think that is the the the key aspect of of the proposition power and voting power yeah and for example uh going a bit more more technical it's also interesting that you could create a smart contract that receives the proposition power and i think i can do something a bit after the it receives the proposition power but it already has uh encoded inside it the the proposal is gonna submit uh afterwards so the contract will receive people will start giving proposition power to that contra knowing what exactly is going to be submitted without any trust of a person that is saying i'm going to submit this proposal but at the end when i get the proposition power i just changed my mind but not it would be with the contract and the contract after certain blocks or whatever it could submit this proposal to the governance uh and but will not vote like then the votes will be off of every individual or of people that has the the the voting the voting power yeah uh i think that answers and then is granular conditions on execution of proposals similar to the implicit majority and explicit majority conditions for execution that cardano governance voting specifies how is the governor chosen elected i'm not fully sure if he's the same i don't think it's the same because a problem cardano is is about consensus i don't know if barat malappur on that emily yeah anyone's welcome to unmute themselves and ask questions um or if you don't feel comfortable you can just elaborate in the chats yeah if you can if you can explain a bit more about the the cardano system i can for for what i and i understand like governance in in cardano is is more related with the the operation of the network itself not at the application layer like like the other governance we don't we don't deal with the with the consensus of ethereum in the case of a hearing is different already because it's proof of work but i don't think it's exactly the same with the granular conditions on execution of proposals what i mean is that imagine that that you want to to have a control over uni swap and over sushi swap and it happens that you don't want to have proposals uh you have you want to have the minimal time of proposals on unison between 10 days but to do anything on switches of you won 20 days if you only have one executor you are only able to say uh you put the 10 or you put 20. you can you cannot program both or at least it's quite difficult in this case what you could do is you you create two executors and each one has encoded 110 days the other 20 days so when you want to is to do any change on uniswep you you just submit a proposal that interacts with the first executor if you want to interact with sources with the second execute that is like a raw example of of a of how it works um okay next one [Music] user must call a habit organs to vote uh not necessarily um that is the the concept of delegation if you have tokens you can vote but you can also delegate your voting power to a different address and and that address will be able to vote on your behalf at any point you can you can just remove this delegation from that person and um and assign it to some somebody else or you can just vote by yourself something that is important to understand is that if if i delegate my tokens to to another person and and this person votes in a current proposal uh one proportionally submitted right now um i cannot affect on that vote like that vote was done by this person and i cannot like do any kind of bet on on that on that vote the governance layer for both are related to vice versa not for consensus explicit means 51 implicit means if you know uh okay i suppose is more related with the logic of of quorum that we have uh we define uh we don't have like explicit that concept of explicit like 51 in our case we have what is called the the minimum quorum that is a percentage of the of the of the supply combined supply of all the voting tokens that needs to be passed uh for a proposal to to pay to be executed and we also have another concept that is called the bow differential that is depending on the executor apart from passing the quorum there needs to be a certain difference between for and against both for the proposal to be valid so imagine if if the quorum is temporary if the quorum is ten percent uh for sure more than ten percent the four votes need to need to be submitted but if the differential is two percent the maximum of against votes allowed for the proposal if it's 11 for example the four votes the maximum of against will be nine percent if it's 9.5 you already need 11.5 that is an important concept [Music] is it possible to adapt to a year c one one zero token in other governance um right now i don't know from the top of my head which one is the rc-114 i can do a quick search your c114c um i think better emily because this is from youtube if they could like link to the rc-114 i suppose that they should not be a problem is only a matter of having what is needed in the token is basically to have the the characteristic of voting and proposition uh power that what they are is is like a snapshots every time there is a transfer this proposition about empower a record in a new snapshot yeah so it should be possible but i i'm not fully sure how is that in the standard ones um our abbey years it token to transfer to another person and the other person able to able to vote to even without any deposit without it does the power delegation able to earn a fee or commission model um yeah basically kind of if i understand well that when you give delegation you are just you are not transferring your your rabbit tokens to the other pairs you are just saying that this person can use your tokens for a certain activity that is voting or proposing uh so yeah that is true and if there is any fee it's an interesting like uh project to do right now there is no fee like you delegate to a person and and nothing else but potentially you can you can build a system of smart contracts that manages delegations and that you incorporate some some kind of fee on the process why not i think it's a good idea can we use to 721 in these cases to represent people i'm not fully sure if i understand that seven to one i suppose is crc seven to one but uh i mean i i don't really understand why you need dlc seven to one to represent people because end of the day you you have tokens you can vote and and the your representation is is your wallet itself so not sure if is if it's so useful uh about l2 solution uh not the not an official one yet but we are we are trying almost all of them that are in the market and we are still like experimenting which is which are going to be the the more suitable for for the product and how does prevent anyone or power delegation collude um if you if you refer to if you refer to giving power to to some person and and then that person doing something that goes completely against your will if if if that is the that is the point there is with the first proposal if there is a proposal while he has the delegation power there is no way of offer of revenge because it's the concept is similar to an approval of erc20 tokens if you approve somebody to do something in with the case of the approval it's actually to take your tokens but in the other is to to vote on your behalf um the most natural thing is that you need to accept that if like the the result if they both this is a bit more conceptual but you know if if you are given permissions you you should know that that they will be able to do something with that permission if not the the permission is a bit nonsense if you can revert on after seeing what they do so but this is a bit more like deep deep question on on governance topics but yeah the answer is no once you at least once you keep once you get delegation you need to accept the outcome of what he does of course after after he he votes or whenever actually the delegator wants he can remove delegation from that person so the typical case is like i give you my delegation power but i see that after two or three votes or you are not participating or you are like doing some kind of artificial voting or going just against the majority or something like that and at that point i just cancelled the delegation from you and i i choose another person that has better criteria from my perspective for example yeah seems there are no more questions no you can go on with your coding okay and yeah what i'm gonna do now uh because i think that is decently explained already how how how it works the the governance is showing a bit specifically in in in the code uh which are the the parts that i described to make it more more real and not not so theoretic theoretical so for that i will need to share the screen again okay i i suppose this is visible so yeah [Music] well i'm opening here but let's open actually on github that way we'll give a bit better feeling that is close it's basically the same but uh yeah as is this is one of the resources i put there is the governor version 2 rep in the organization and here is all the the code of the governance same diagram i used to describe the system uh here there is a bit of how the the configuration of our governance is but is a good example if you want to deploy a new governance for example so it's the configuration of the our governors the executors and the strategy like you you see is like based on mongabi plus a stakeout for both voting and proposition and then some setup instructions here but going a bit to the to the code you go to the contracts folder on recoverance and here we have all all the pieces that i described um basically this is the the core the governance then we have the executor executed with time lock and the proposal validator that they are the three parts of an executor uh basically because an executor is a time lock but at the same time it also validates the proposal so if for example if you try to submit to the governance um a proposal which executor needs 20 days of voting but you are submitting the proposal with 10 days the executor will need to do the validation so that is the validation part and then the last part is the governance strategy a common strategy is what defines the voting and proposition power we can start for example yeah so it's a solid smart contract like you see is quite simple 100 lines with comments and everything and the only thing it does is that in this case for example we there is no particular requirement of what you do inside is only that it needs to respect the interface but what we do in this case is that they we just store in immutables the same as constants the addresses of up in the state government and then for example if we want the get prop these two functions are the ones used by the by the governance that is the to get the proposition power this function will be used when submitting a proposal to validate if the the person that is submitting has enough power and then the get voting power that is every time you vote it will use this function so if you see is really really simple like we call in both we call the get power power by type in one we use proposition in the other we use voting and this is this function and this function it just a calls the get power at block power type is is propositional robotic as you see we call them the other token plus the the the power at block of state double and basically this way we have like the aggregation of both powers really really simple and with with this with this pattern you could use whatever token you want imagine if you want to to just use one token not two it's simple just put the address here instead of it you put token x address and then it's even simpler because you don't need to do to do this you can do directly on get proposition power or get both in power called the token dot get power block for example if it's exactly the same talk even if you have a different token that has a different name for the functions for example or a different way of calculating both the voting and proposition power let's say that for example is constant and doesn't depend on on the oneness you have or whatever having the strategy allows you to abstract to that so you don't depend on how the token it is actually you don't depend even on having a token you can you could have a system where in this voting strategy you have like five addresses like kind of a multisig and you give a balance of one for each of those addresses using these functions but there is no talk so and it will be perfectly valid because then the governors will just call this strategy and if there is a return of of certain value it will use it that is the power of the of this abstraction then i can show you i can show you the executor for example the executor like i say is like the composition of two parts one is the the time lock and the other is the the validation part you know so this executor is is just the like the inheritance between those two passing the parameters so not much to to not much to to comment about it but then for example if we go to the part of the of the validation we have a multiple functions well first we have some configurations that is for example the proposition threshold that this is defined this is like the quorum that i was talking about we have the voting duration that is the one that is imposed as minimum from from this executor the differential is what i explained of the 9.5 and 11.5 if you remember and well then we have these this just safe words like we passed this configuration on creation and then this has functions that will be the ones called by the governance so for example but if a trader of the proposal that is basically checking if the proposition power is enough for this it will use the the strategy that i commented before uh we can validate also if the pro if the proposal can be cancelled for the problem cancellation of the proposal basically there is some extra condition doesn't make much sense that go i won't detain to it but it's basically if for example the the proposer um removed the tokens from his wallet during the lifetime of the of the of the proposal and that way it will make eligible to cancellation there in the world and then yeah we have uh other helps like the proposition power and off that i described that calls the strategy we have the get minimum proposition power needed if you just want to to query how much you will need so for example if you are if you are building a system that that requests proposition power to submit a proposal you should use this function like expose it somehow and see of the difference between what i have and what i should i should then if the proposal passed there are multiple helper methods in this validator if the quarantine is valid for example also and and yeah like you see is 200 lines is quite quite simple the executor with the time lock is another part is just a time look i will not stop too much on this one because it's just a time lock is basically inspired from from other projects the only difference is that is what i mentioned that there are different mechanisms of execution so mainly is this field like for example when you queue a transaction to execute you can pass this bull that is with delegate call this one more technical but basically what it means is that you can execute the proposal in the context of this time lock or you can just call other contracts to execute the proposal for example a with the all all the proposals that they that the other governments that were executing in the ava governance were were done in the with delegate code i can for example show show one example of this yeah this is the the application this one proposal so for example this one this is what is called the payload the payload is like the the code that is going to be executed with the proposal and if we open it a bit bigger for example this proposal was to increase the the emission of of a token for the safety mode so to make a higher the rewards and is this basically only only needs to have a execute function and then inside the execute function like the code with everything that is done so in this case for example there is a an upgrade of the of the state token itself now of the of the reserve that is holding double the token then there is an approval for the for the new emission to be able to transfer more tokens to the safety module and and then we do this configure configure assets from the state token that is basically update image but the main point here is that if you want to do a proposal it's basically the same it's about writing a smart contract like this one putting your logic inside an execute function you can pass parameters or not pass parameters that is completely open and nothing else so really simple yeah that is in what relates to the to the executors and then on the well this is the governance of course the governance is uh a bit longer but but not not terribly long country i think it's like 400 lines or something with the with all the comments so yeah 500 lines and and basically here like it uh it defines all the all the logic both the creation the voting the cancellation the the queuing of proposals everything so yeah great proposal kinds of reports for example i don't know like the you have here the create it does some validations it checks for example that the executor that is passed is is correct that is why listed by the governance it needs to be while listed and then if you see it calls the executor the validator part that i explained and it does a validate creator of proposal called this function that will return if the person that is submitting the proposal has you know a proposition power or not basically and after that it just it creates it creates the proposal itself like assigning to all the fields the the parameters end this includes the pillow this includes the um i don't know the ipfs hash that is description of the proposal it includes the executor of course and and everything else yeah and yeah that that's it about the governance uh what i explained that um how to deploy that for example we go here to the tasks and this is coming from this repo is configured for hard hat but if we go here actually i think it's here migrations basically this this script is the default the whole flow of of deploying governance with a strategy with execute with everything is quite simple what we are doing i can explain a bit better for if somebody wants to try them is that we deploy two to mock tokens you see deploy mock david the more deploy marked staked up then we deployed the strategy that uses us tokens the tool that we we just deployed we deploy the governance afterwards we use the same strategy that we deployed and then as a guardian well we just put an army that is just a random wallet in this case and we just put a vote in delay the voting delay is is how much time since you submit a proposal until if the proposal is open to vote so it's simple in our for example in our governance is zero zero a blocks but it could be like five blocks or ten blocks if you want a proposal to start a bit after whatever and then we just deployed the executor and once we deployed execute we just change the ownership of the of the governors to the executor because that way if the governor wants to change something on itself needs to use the executor via a proposal to then do the change that is like the circular dependency that is in the in the system and yeah i think that's all i don't know if there is any other question if not if not maybe we can we can ah there is some question okay i think okay this is just an answer yeah for the point of yeah if i understood your statement of barat is exactly that you can beat the smart contract that the that executes exactly what what is programmed in that case uh i can do something quick i think we have time you know to make ten minutes or something yeah you can um go ahead and if anybody is wanting to stay on the call for just a little bit longer they're more than welcome yeah i can do just mainly because there was a question about the doing this well basically the the thing is doing like what is calling other systems like an autonomous proposal so you submit code there and a and the code is already on chain and the creator for example just ask proposition power to this content and i think like a real basic control can be done now let me share my screen okay i hope you can see so yeah i have here on remix let's do something quick let's call it autonomous proposal so what we need we can do something really really simple we can have a function that is a submit proposal that basically will submit the proposal that we will store in advance on this country once it has a one it has proposition power of course this should do external and what we will need to do we need to and i start um would you mind zooming your screen in a little bit um okay better this way great yeah okay so here we will call the the other governance to create a propose but we will need to have the the data of the payload so we can do that in the constructor for example constructor a we will need a field to a storage field to store the the proposal content this is interesting let me check how we can store it so this is the create function of the of the governance so basically what we need is that our contract to call this function so we will need all these fields all these fields know but what do we do with these fields better is to create a struct for example let's say proposal date so we can take these fields we put it here i will need to change the format i think yeah i need to change the format i will not execute this this proposal of course because it's a bit more not so fast but what else we need we need to import this this interface as you see because i need to remove the memories we need to import this thing but this will not be used so what we can do like any function of this interface is just a requirement on compilation so what i will do is just create an interface that is this but i will not declare anything it will be an empty interface it's just for the compiler to not to not complain you can see i'm compiling now and it's working so we will store in this country in autonomous proposal then a field that is of this type no so we call it proposal date um public to have a function and then we do like proposal date okay so the idea is that when the crea when the creator creates this contract it will pass already in the constructor the proposal date so everybody after that everybody will be able to call this this public method to get the date of the proposal in advance before it was submitted to the governance and in that case it's like giving proposition power to this country so for that we just proposal data and the constructor we put in memory of called memories a proposal date and then here is the proposal data there is the state variable we make it equal to proposal date at this point after construction we already have the proposal data here it can be queried with the with the public public getter and what else do we need well basically we can do something even more interesting that we can say okay the pro this proposal will be valid if it is um before block x if it reached enough proposition power before block x if the block passed it doesn't matter if you reach proposition power this proposal inspired to make a thing things have been more interesting so we can have it here we take up some block this is not so working thing but to make it like the cons the fastener so we can put between 256 public uh and we can say that is like limit well a we constant put limit block we put this limit block but we can i don't know we change a bit more like put 1k more blocks 1000 more blocks so with this we can for example put here the condition the require that the block.number when the submit proposal is called is a less or equal but less less less than the limit block and this here is like uh if not is this can be called by anybody it doesn't matter because like the proposal is already encoded here if not what we will do is like we need another variable for the gap governance um okay let me go here as we will need to call this function we need to introduce a an interface that is this not here yeah we can just to make it quick we take this function this is the only one that we are going to call we go here and we do interface that is e of the governance it represents just the content of the corners but only including the create function that is the point so we have this interface let me do this i hate when it's not and what we do here is like okay we create another variable a constant we can have a constant no that is e a governance type it's public it's a constant and it's the avocados and will be the address basically for that we can go i think i have it around here probably hear something yeah in the documentation i can go i take the address of the other governance and here i will need to do the cast for the type and put it here so here we have the other governance what do we need to do now the only thing left is here we take our variable that is our governance and we call the create files which we with which parameters we have them here already in the proposal date in this case so okay this is a bit more painful but you can do proposal data dot execute proposal data dot times signatures latest and the chicken proportionate dot ap fs and that's basically what we have right now is that the contract where on construct construction we pass the proposal that that needs to be submitted in the future and then we're required and we and we also have a hard-coded it could be passed also and constructed this is not a big deal it could be for example that i pass here that three days in blocks and i put them here or if i don't want to use blocks i use seconds and then the only thing is that there is another function that requires that the the block is below the current block is below the the limit that is set up here and if it's below the limit it tries to create that is the point this point it tries to create a proposal if this contract doesn't have proposition power when this function is called it will just fail because the other governance will not accept the proposal but if it has proposition power it will be created by this by this contract deployed for this now you will need to like the to to write a proposal to put all these parameters and and to pass them on on construction but that it takes a bit more time and i will not not do enough but yeah i don't know if he's if there is any question related with this quick hack ah only the three yeah and that's it great thanks so much enesto that was a really great session if anybody has any last questions feel free to unmute yourself and ask or drop it quickly in the chat otherwise um you can always reach ernesto in the sponsor rv chat on discord yep okay great okay great yeah well thanks everybody for joining thanks ernesto oh wait there's a question there from bharat you can answer quick considering that governance contracts can need to be updated wouldn't it be better to create an upgradable contract do you mean the the one i created now or an upgradeable contract on the of the governance itself but the governance itself it is go it is updatable in the sense that you cannot change the whole code but you can change certain parts for example if you want to change the strategy you can change the strategy you just need to submit the proposal that then change the governance itself or if you want to change the like put more more executors and and remove the previous ones in some cases a bit more complex but you can also do it why is not so good from my perspective to have a full upgradable governance um i mean you can have full agreeable but it's quite radical because you there is the danger that you change completely the rules of how it works from our perspective when we decide we we say that okay better to change change how how the voting is calculated how the proposition is calculated which are the requirements to execute but not changing the the voting machine like because at the end the governance is like a voting machine so that's better to keep cool thanks i guess any more questions you can direct to ernesto in the sponsor rv chat on discord thanks everyone for joining thanks ernesto and have a great morning day or evening cheers 