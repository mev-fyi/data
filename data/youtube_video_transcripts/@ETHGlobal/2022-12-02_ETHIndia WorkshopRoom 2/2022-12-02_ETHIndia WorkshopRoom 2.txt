hello hello checking foreign hi guys you can hear us are you here for the workshop maybe sure let's get started let's get started okay hello hello okay okay you guys can come here and sit in the front we'll just get started so yeah so in your place there's a headset you have to wear it and once you power on the receiver change it to channel 2. Channel 2. listening okay this side let's start with this guys let's see foreign you need to put that headset on yeah you need to put that on okay anyway I think I'll just get started um sorry yeah we did a sound check sound check yeah yeah we announced that your main goal end point oh that's right so like this I can go anywhere behind right this is this one okay okay I'll just speak from here then God maybe when you're changing the okay slide okay cello guys I think we can get started I hope you guys are on channel 2 you are able to hear me and me am I Audible great so hello everyone and welcome to the Third Edition of eth India it's really great to see you everyone in person after like long three years due to the covert so here myself three lock and my teammate Shreya are here from the team instead app and we are going to show you how to build uh the defy dabs on top of instead of smart wallet so shriya I have a question for you so uh so I have a question for you so have some Idol eat lying in my wallet so I was thinking maybe to deposit that in uh Lido for some rewards they were mentioning that I'm getting almost four percent so what do you think what's your opinion on that well to look you're right Lido is offering around four percent rewards of staking on your eat but how much idly do you have around 100 100 each you're a big Mantra look oh no but although what if I tell you that not just four percent but using your 100 eat you can gain almost as high as seven to eight percent rewards wow that's really interesting but how is that even possible so to talk it's possible by using a financial strategy called as Leverage so leverages when you sort of increase your exposure to some assets so if you can see that this is how your position will look like in the first case this is you just holding your stake teeth earning the regular four percent APR and in the second case you're going almost 2x leverage earning around seven percent APR whoa that's really interesting but how is this even possible in D5 decentralized Finance so in D5 this is how you should go uh now this is you holding your 100 stake teeth now you can deposit your hundreds take deep into away now on Ave you can borrow against your stake Geet up to 72 percent so now you borrow some eat from away you swap this eat into steak deed and now you deposit it back so as you can see that your collateral has sort of increased so you can obviously borrow more against your collateral so you borrow 28 to eat more to sort of go to Wix which is 200 steak Deeds you swap it back and you deposit it again so there you have it your two Exposition oh whoa so like this I can earn up to seven percent yes that's right but here if I see it almost took like seven transactions I don't like I think it's will be a bit time taking and for me to research how like I don't think it might be feasible oh well to look you're right it is time consuming and don't just get me started this is you going just 2x let's say you want to increase your reward even more and you want to go 3x or even as high as 3.5 x leverage which is the maximum that you can go and if you see that it takes you almost 16 transactions to go 3x leverage but your APR at the same time is going to increase to 10 percent and in 3.5 x you're it's almost as high as 12 percent oh but I would like to really like to have more than 11 here but I'm not like not sure if I can do more than 16 transactions so this is where Instagram comes into play instada provides these complex strategies available to the users in just one click and such strategies are available on top of uh so many protocols like uni swap of a compound Etc and you would be shocked to know that Instagram is currently managing around 1.7 billion tvl whoa isn't that very huge guys oh well it is so now let me tell you how you can sort of achieve this transaction uh this strategy available in one click so to achieve this in one click we sort of use something called as a flash loan so now mind you guys you will be just doing one transaction but I will be breaking that down into a set of actions that will be performed sequentially so this is your action stack now again we started with 100 State now we flash borrow 100 eighth we swap this to stake teeth we deposit the 200 stake deed that I now have I bought a hundred eight and using the borrowed amount I pay back the flash loan now since this is a transaction but it has not happened on chain so it has not yet executed so we need to execute this transaction so that your balance get updated on chain so we cast this action stack and this is how your position looks like in the end oh that's real oh that's really cool so if it's really taking one transaction I think it's like doable I would love to see how is that even possible maybe I would try to go by 3.5 x to get maybe the 11th person that you are showing in the previous slide is that even possible uh well yes prologue so here's the catch now we just went 2x now even if you have to go as high as 3x or 3.5 x you can see that your APR is increasing but your number of transaction just stays the same and that is possible because now you're just taking a higher amount of flash loan so now through look I have sort of conceptually explained you how you can achieve this uh will you be able to show our fellow developers how you can code this out sure I think that would be interesting and everyone is looking forward for that so instead of offers a advanced web 3 base online editor that lets you to interact your D5 right from your browser and that we call it as playground so in the playground we have typescript and HTML supported too I guess most of you guys would be using vs code or some code like editor right but what if you had the same visualization for vs code in your browser the playground is built using the same architecture or the same libraries to give you the same vs core like feel and then have you ever wondered you can import your npm packages in your browser it's possible using the esm automated library import and not only that in your browser or in your playground you can use natively big number Library Axiom and then the await the top level of it I hope in the in blockchain or D5 you guys might have to do a lot of asynchronized calls that you can do it easily and then okay to look so I think you can get started and don't forget to log in using your GitHub or email so you can share me a link and I can cross check whether you have written the right code sure so let's get started with the demo so I'll be showing you guys how to code in just like a 10 minutes how to code a leverage strategy so before that before that I'll just give you understanding of how what's playground and how the playground is connected with our main application so this is our main application this is our uh instead of main application so in this application we have a feature called something as simulation so when you turn on the simulation you can actually do do all your work like whatever you want to try it without really spending so that means it's like a test net environment you're actually converting your main application into your test net environment so I've turned on the simulation not sure why net uh maybe try reloading just a second guys some issue with the internet let's drive its own too hope you think it's connected can you connect with metamask okay anyway so let's assume that we have turned on the simulation I've turned it on over here and in the same way once this has enabled it will show you that this model that you can do all this like all the transactions like let's assume that you want to uh before using your real funds maybe someone is like putting real money then before doing the all the real transactions you can really test it out on the simulation so now the simulation mode has been turned on and it has it gives you one hour of time to do whatever transaction you want and then this is the playground and here also I'll link the simulation I'll link the uh the main applications uh simulation with the playground so I'll connect like this so once it's connected both the playground the code over here and over here it's connected so let's see so when I go to Ave V2 so do you see any funds over here no right it's currently empty so now this is already pre like the pre-script written that whenever you kind of first time go to it you will be able to see this so what this basically does is that it tries to deposit uh eth this is the eth address that we use to have an uh proper convention and this is the connector so instead of smart wallet so instead of smart wallet can interact with the protocols using something called as a connector a connector is an intermediary contract that helps you that helps the DSA to interact with the protocol so the connector has all the logic suppose let's say you have to give the allowance and then deposit so the collector handles uh allowance and the deposit for you so you just need to call something like this and also you guys might be wondering why this is in JavaScript and why not in solid and how I'm exactly interacting so the playground is built on top of a DSA connect SDK what it does is that you can interact with your uh DSS smart wallet directly with the JavaScript so you can just write the code this is the connector that how you are gonna interact so now here I'm just gonna change the amount maybe let's take one three four I think one I think one three point four five this is the amount that when I run it you don't have balance you need to top it up okay I think I don't have a balance so on simulation we have a feature that you can get the test funds and we just called the top of function over here and then we just put 100 and once that is top up you will be getting like it's like your test tokens if you have been on a test net or anywhere you will be going to the faucet right so the same way we have our own thing called as top up where you will be able to top up 100 so once this is top up I'll call it and now is showing Caster to spells and the transaction hash so let's see what happens now I'll try to reload the DAP since the internet is a bit slow it's kind of taking time to load it so here if you see as deposited whatever the amount that I've entered over here was exactly deposited over here so you will be able to see so that's how you can connect the playground with the real app and then you have a visualization to also look into it so now I've explained you what's playground and then what's the main application how they both are connected and also one more thing just to give you a short brief of what are the components there on the playground so this is the left side is the online editor right side is the console I if you remember I've said it supports HTML too so when I click on the toggle at the bottom it shows me the HTML editor and the right side the preview of the HTML so for now I'll just turn it off this is the simulation button where you can connect the simulation with the main app and then we have we are supported on five chains here you can see the five chains then a person or owner can own multiple DSA accounts so since you can own multiple DSA accounts you can toggle between them so now for now what I'll do is that I'll create one more DSA on our main application to get started with the leverage strategy so the me so this is how I'll be creating I'll be just calling the new over here and then it will create a new DSA for me so the new DSA is this actually so this is the ID so you can see the ID over here and this is my DSA address and a DSA can have multiple authorities so this is the address that I'm currently on metamask this is my eoi address and this is my owner so my owner my metamask address controls this DSA there are different types of authorities also I'll explain you later when we when we go on to that slide so now I've created a new DSA let's see here also if it's there here if you see it's three five eight two zero and here also three five sorry it's two three at the end and it's two three at the end so now I'm on the same DSA so let's get started with the leverage transaction before starting as Shreya explained I initially had hundreds take it so let me top up hundreds take it so here it shows we have added hundreds take it so in my balance I should be seeing 100 so now we have a requirement setup let's get started with the coding so I have some uh pre-code written those are just like addresses and all the stuff you can just find it over The Ether scanner anywhere and the amount that I'm gonna start is with the hundred since you all guys know we can't directly use The Ether format of a number or a amount we have to convert it into V so we have converted this amount into V format by multiplying it with the 10 to the power of 18. and now the leverage Factor so in the leverage as we have seen in the diagrams I'm going to explain you with only the leverage factor of 2. so the leverage factor is 2 The Leverage amount so if you guys see over here in the leverage factor of 2 the amount was 200 stake it that is I need to have at the end 200 stake it so the amount that is going to be over here is going to be to uh the amount in V times this one now now svi explained first we need to take a flash loan have you ever wondered like what if there was a autocomplete where you just called take flashlight and it automatically gives you the flashlight code you just don't need to remember you can just use it directly see it gives you the auto complete and here is the where you add the Spells so in flashstone you have to mention the address that you want to take the amount and the route the flashlight and everything you can dive deep into it on our docs which is available for now those are set as constant 5 and the Flash loan phase set is to 5 basis point so the flash loan token so here in the example we have taken 100 eighth so in the same way I'm gonna take 100 eighth also we have the rapid address as autocomplete so if I just type rapid and press enter I get this or else since I've already saved at the top I can just use that one itself and the Flash loan amount so now how much amount do we need we need 100. so the amount in V would be the flash loan amount so that's it so you have the flash loan ready flashlight on spells ready you have to just add the required spells and and also once you have taken the flash loan there was a requirement to swap the eat into stake it so now again we use for the swap we use one inch so to use one inch there are like a lot of setup you have to do so we have simplified that on our DSA and also we have a auto complete for swap that's it you can see you have a swap spell also ready you have to just mention the cell token that is what we are going to sell we are going to sell the rapid to stake it and the amount would be the flash loan amount and the amount and the slippage I'm setting it to one person you can increase it according to your requirements and this is the uh swap spell here the swap the swap connector ID so all the connectors on our smart contract level are linked with an unique ID and you have to just mention that so you don't have the hustle of remembering the connector address and stuff we face that in DSA V1 so we made it easy for you so this is the ID and the the name of the action is cell I sell the byte sorry uh I'll try to buy rapid I'll sell uh sorry I'll try to buy stake it and I'll try to sell rapid and the amounts the event and everything you don't need to know right now you can go into it maybe whenever you're diving deep into the docks so now I have the Spells also ready for the swap now I just I think I have only two spells required that would be deposit and borrow so now how will I get the connector ID of our way V2 let's say in the first thing I haven't shown you so you can go to our Docs you can navigate to the connectors the main net you can go to away V2 and here you can see a deposit spell the deposit spell the connector ID and then the arguments a description for that is also available so again I'll be using a autocomplete to have the basic structure of the spells to add ready and then I'll be just entering and then after deposit what I'm gonna deposit let's take it did you guys have any question or anything why here it's 200 and why why here it's 100 you have any questions maybe we can do it in the Q a for now uh so we'll be depositing the stake and the amount so the amount would be the leverage amount so we are going to deposit 200. and then the set ID and get ID is zero you can understand them later maybe once you dive into the docs then the other spell that is required is borrow so I have to borrow 100 each so that I can pay back the flash loan so I'll be again calling add spell autocomplete I'll be writing away V2 a borrow and I'll be just mentioning the parameters so these are the parameters now we have our leverage spells ready the only thing here we have also seen ah okay so the the payback of The Flash loan was already added over here when I have used the autocomplete for the flash loan so it's already there so that I've skipped but now since we have her all the Spells ready in a sequence for the leverage strategy now I have to just cause them so executing the action stack or the Spells so here finished so this is how I cast it and I'll be getting a transaction hash so let's again jump into the away dashboard on our main application here you'll be see it's empty we have hundreds take it all the requirements looking good the next part would be just casting so I'll be calling this and now it tries to cast it and gives me a transaction hash the transaction was successful now let's see what happens what I see over here so here if you see two harness take it and 100 Heat the same thing what shriya has told you that how the position would be looking so in the 2x leverage 200 stake it 200 stake it and then 100 eat and now the API is 7.2 here you can see the net AP y also the rate is currently 7.2 and that's how you can do uh that's how you can build your own strategies or the Spells and then you can connect them or maybe create your own uh application or a defy tab also you guys might be wondering I've said that you can build your dab but there is no UI it's only the script so for now since it's kind of it might take a bit of time to explain HTML so I already have the pre-code written where if I turn on and I have a UI also ready and then I can share this link with shriya so shriya can actually just enter the amount and will automatically do the 2x leverage for her so now we have build a tap just in few minutes using playground and that's playground well through look the demo was really amazing so as you can know that Instagram also had a product also has a product which is the light instead of Light which also uses the same strategy which is the St eth leverage taking and provides around eight to nine percent of APR on the yields it is currently managing around 200 million dollars of tvl and you almost wrote that code around the 70 percent of the same code in just 15 minutes so isn't that amazing um yeah it feels so so yeah so building just on top of insta dap and DSA account is just as easy as this because of the playground and the development environment available so let's switch on to some question and answers if they have yeah if you have any q a you can ask them also um no it's fine so you guys have any questions any doubts just a second let's let us wear the headset then you cannot yeah hello can you hear me uh uh very faint noise can you hear me now uh not example here hello hello hello come but the mic that mic is not yeah I think it's working hello yeah it's working so I was wondering if uh does the SDK or the playground provide anything that the website does not provide out of the box so can you give me an example of a strategy okay so currently whatever the strategies that we have on our main application are also built using the same SDK that is a DSA connect and the SDK and the application also use the same set of sequence of the Spells so maybe if you want to have a strategy that is not available on our main dashboard could be lot it could be person to person but we have only added the topmost strategies which are which our users were looking for so that's why we have added maybe if you want to build something maybe a new strategy where let's say you want to uh do something like this you want to borrow sorry first let's say you want to deposit uh E theme to come away borrow die and then deposit into compound maybe let's say there was some strategy that was yielding you much higher yields so in this you can just combine them in the sequence of series and then you can build it and then you can share it as I've shown you how to share it I do have another question yep so does the SDK support only the platform supported by Instagram or can I go for a custom platform like uh some other lending protocol okay so that's a nice question over here so basically as I said instead app and the instead of smart wallet and uh the protocols can only interact by the whitelisted connectors that means first we need to build the connector that is written in the solidity or the smart contract and once that is written and uh that has been whitelisted once that's whitelisted and then you will be able to interact so now assume that ins instead app is like a OS so once we have added the connector to this OS platform you can create a n number of combination with the other strategies but we have to add that character because we've kind of follow some standards and some security concerns where it where it makes this uh all the things whatever I have shown you make simpler for you guys anything else okay great anyone anyone any other questions oh good okay my question is actually extension of uh like why why um DSA is controlled by an eoa right an owner so why can't owner do any arbitrary transactions from DSL sorry sorry what was the last thing any arbitrary any why can't like right now owner has to do the transactions that why can't owner do arbitrary calls to any contract okay okay so now as you all know yoa can do only one transaction per time so eoa is a external own address or the metamask address whatever you see it can only do one transaction like one action because we don't have a bachelor anyway there is no like a a standard that's been followed where you can batch all this thing so instead of has done that for you guys where we have created the standards where all the protocols as I said right the connectors follow a standard which makes you composable between different protocols so now uh uh what you say a DSA can be owned by any address any address that can do a small kind of a transaction that could call the DSA the owner can be an eoa the owner can be again also safe or any other smart contract to anything a owner can be anything and then in the authorities you can have different levels of permission this is not available on the uh on the main application yet but but currently we have only one kind of owner that is the full access owner you could have manager guardian and uh the automation the manager is now uh whatever the owner has access right he can have he can access all the connectors that means he can access the security he can access the funds and everything but the manager has only limited amount of access maybe let's say he can just interact only with the compound only with the compound he can't interact with the away so that's a manager type of authority then the Guardian guardian just helps you to recover in case you have lost the owner address let's say your metamask private key maybe the guardian can help you and then the automation automation is just like a thing like whenever the market is crashing or something the position you have seen right in in those cases if it has to save it has a limited uh fixed strategy that it can execute so automation can execute a fixed strategy so that's like an automation Authority so was your doubt clear yeah that's right I just wanted to ask that uh uh is there any way a connector can be added you can connect her uh allows arbitrary calls okay so for the security reasons we haven't added a connector that can do a arbitrary calls like you can't just call any direct or random contract that's for the security reasons so if if you want to maybe in the hackathon if you want to build you can build a connector you can add it uh to the instead app on the test net or on this on the main Network so if you want to building on top of where you need a custom connector then you can build your own connector and then you can just create like a mainnet folk environment and then you can do it but currently the adding of the connector is done by the Dow all right makes sense thank you any else question any other okay [Music] maybe after this question okay so I think uh we are running out of time uh we'll be at the booth and we'll be around so this is our Discord Channel you can just connect and ask questions there's a Twitter handle and our email address if you're building on top of instead app and if you have any questions or anything will be around or you can email us or you can come on to Discord all right guys all the best for your hack check check check that idea check check thank you uh can you guys hear me give me a thumbs up yeah you can't hear me you're not wearing it yeah uh yeah check check it's great thank you all right hey guys I'm Akshay so yeah uh just to remind you guys you have to connect your headsets to channel two so that you can listen to me not the other session uh but yeah so by the way I'm actually and I work for leifi and we have great shirts so come to oh we have great shirts come to our booth and pick up the shirts and yeah so let's start um so yeah to begin with I'm just going to give you a short intro about Levi so lifa is a bridge and Dex aggregator so we're kind of like one inch for Bridges we if you are bridging from one chain to other chain we find you the best route through various bridges that we have we currently have 15 Bridges and like countless Texas uh inside le5 so for now uh I'm gonna let you guys scan this for this presentation as well as all the links that we I I will have in the presentation so yeah after the presentation you can get the links and while you're hacking as well so you guys want to scan I'm gonna give five more seconds okay so these are the links that we're going to be using I mean you're gonna have to use uh if you're hacking with le5 so first of course the website like we have our front end as well if you if you want to bridge from any chain to any chain just like go to transfer2.xyz here and yeah we have a crazy UI through which you can Bridge from any token on any chain to any token on any chain so we also have SDK we have API docs examples I'll go with the links again so what what exactly is a problem that lifa is solving right so what is why do we even need le5 so of course you know you can go to individual Bridges individual taxes to do swaps and bridging manually and it's still gonna be fine you're still gonna make it right but uh what lifa is doing is that like we are creating all these things into a single interface so that you don't have to worry about the various dexas that are there and the face that they might have to they might be charging you and if they are secure or not like nobody knows right like everything's on the blockchain and like unless you verify unless you can verify you can't know whether um the bridge you're using or decks you're using is like right or not so I I'm gonna give you an example of like why a product like uh Levi would actually make a lot of sense so recently you know we were supposed to get merged from much for the hackathon of course and um yeah we faced a lot of issues because there were no aggregators which were aggregating t-shirts for hackathons right so what happened was that like we got designs done online of course um and like we chosen uh chose a printer in German based in Germany and they decide they told us like they're gonna print all those things to us and they're going to ship it to India to Bangalore so that we can deliver to give it to you guys but we face so many issues because like this German company they gave the contract to Latvia then to Bangladesh into us then they shipped each of the shipments through through FedEx to India and at FedEx I had to go through kycr to pay unknown fees I had to pay I had to make cash payment like FedEx I'm paying like thousands of rupees uh at when when the when they're delivering uh much to me right but I would not have cash at all like they're expecting me to pay all that money in cash and like it was a huge mess I had no idea like this would happen at all so like this whole thing can this I mean all I want is that like as a customer I just want I just have designs for t-shirts I just want to get much at 8th India right that's that's my only goal and like all these extra steps that I had to go through and like this was like very stressful in the last one week uh sorry one month and these things I as an end user I don't have to know all these things all these details so instead what you can do is that you can just like so yeah that's the same thing happens with uh swapping aspect if you have Matic on polygon and you want to get GMX on arbitrum and stake GMX you have to go to like several steps you can you have to choose a decks then get a usdc use hop to bridge tobitrum again use uni swap to swap to GMX and stack GMX all these steps and each of these tests would have various fees various security assumptions and various and bottlenecks right and as an end user like I would not know each and every detail about all the things that I'm gonna use right so what we do at least five sir we just kind of abstract everything here and all you are gonna see is that you're gonna choose Matic that you have Matic on polygon and you're gonna stake GMX on arbitrum with a single transaction that's what we do at le5 I mean that's exactly what I wanted uh for leafy merch as well but like nobody is there working on that so soon I'll be able to do it I guess some aggregate is going to be there if I we abstract away all the nuances all the steps as the steps that you have to take to swap one token on one chain to a different token on different chain as well as do another action on top uh if you wish to like staking GMX here so you guys are with me still till now thumbs up yeah great okay so uh I I'm gonna talk about so these are core protocol right like we help people swap tokens and deposit funds and we have this core protocol um we have several products which are you which is using this protocol right you can build so so many things on protocol protocols and li-fi is also a protocol that means you can build things on le5 as well so that's why we're sponsoring this hackathon and I'm also going to talk about the bounties that we have several products one is transferred to dot XYZ which is our front end uh if you are uh I mean if you're you know if you want to go to Arbiter and stake or buy something on arbitrum and nft you can use in the back end and by an nft similarly we have a widget which as a Dap um so I mean of course Euro builders on hackers right so if you are deploying your smart contracts on arbitrum then that means that you would have to all of your users would have to transfer funds from where they have funds in to orbitrum to use your dab right so it's it's a hassle for a new user who is not like very designy right so what you can do is you can just like plug le5's widget onto your website and directly like let users swap from any chain to your token on your chain and we have a widget and we also have SDK if you don't feel like you know you want to have a widget uh which is like built by us the UI is built by us you can just use our SDK and you can build your your own UI and you would have of course have a lot more you know customizability options and like a lot more linear it's a lot more learning to use your own SDK and UI we also have apis so it's like you know it's kind of going bare bone from the widget uh with the widget is where you know you just have to you can just plug it in in five minutes and start using it it's very easy right it's like the wrapped version of li-fi as a protocol and the SDK is it's kind of like in the Middle where the functions are wrapped if your developer you know the functions are wrapped and you can easily just like call functions and perform actions or perform swaps are like Bare Bones where you get apis and you would have like full freedom to do anything that you want we have like apis and uh you can just pull out we have unlimited There's No Limit right now at least so we can use our apis so I mean even if you go even down below uh the apis you can also interact directly with our smart contracts so which are li-fi smart contacts your smart contract can directly interact with Leaf as smart contract and perform actions so for example if you have our yearn and if you are an yield aggregator right and you want to move your funds to arbitrum and then deposit into a pool and then get the yield back to let's say polygon right so you can do all those things using a smart contract and you would need li-fi smart contact for that so these are our various products I'm gonna go through this things uh in this session of course each of these things so like you guys can decide what you so that you guys can decide what you want to use in this hackathon so yeah I mean uh I do want to touch upon the ideas before I dive into uh anything to build on so that like you guys have an idea of like what is Levi what can I do with Levi how can I build something cool here and Miss Levi alone enough to build something a few if you use leafy alone of course you can build with just by using lifa you can build so many cool apps right and we have bounties which supports I mean we're just gonna of course give you oh this is an updated okay so to start with uh SDK right the SDK that I spoke about which directly interacts with our apis and like get your codes if you so uh as a friend on front end if you want to swap from one token to other token you're just like passing these two tokens as parameters to our SDK and you're fetching the codes for these tokens and to show you we to show you an example of user SDK like we have built of course our front end on le5 SDK as well so this frontal that you see is built only for SDK and you are choosing a token like let's say oh I like GMX a lot so I'm choosing GMX and arbitrim and I'm gonna get eth on optimism I'm going to swap 20 tokens of course the internet is very slow here so I might not even get routes but usually you get several routes uh on the right side as you swap and as a user you can choose what route that you're comfortable with it can be you know based on your favorite bridge that you trust or it can be through like a native Bridge orbital native Bridge as well so yeah the SDK works is where you pass these two parameters GMX and orbital to Ethan optimism and 20 tokens right you can pass these three things and we're gonna fetch you like so many quotes can be 10 20 based on the chains and uh tokens that you have chosen uh yeah oh yeah we found one route [Music] uh but yeah so we usually we find so many routes to do these swaps but oh I have disabled other Bridges so yeah another cool feature about li-fi that I kind of have to show right now is that we have a feature to enable and disable Bridges at least five we have several Bridges 12 plus Bridges and I had disabled all the bridges because I trust connections Target a lot more but yeah I mean I like all the videos to be honest so now we'll get like a lot more routes so I'll come back to this so to to start with what can you build what can you as a hacker build uh with le5 using just the SDK right so on the front end you can just like build uh cross chain yield aggregator so usdc of course everybody wants to hold you or CC these days because nobody knows how down we're gonna go from here so if you're holding eocc and you want to earn some in yield on usdc uh then you can use li-fi and aggregate so I mean like you would have to like go through uh various dabs various chains various yield aggregators and find the best yield and then deposit into the deal right so instead you can just like build this interface on using leafy where uh you can aggregate yield for usdc on various chains Moon River Moonbeam which are new chains and and they're gonna offer a lot more higher yields than orbital optimism which are like old and secure right um but yeah so you can aggregate this like uh different yields on different platforms and you can just say give your users just a single button to to deposit into this walls uh through le5 so as what you can uh imagine instead like usdc on orbitrum usdc and optimism and I usually just like it's gonna select one usdc on optimism which is going to give you five percent yield unheard of uh and yeah like the users can select UCC on optimism and just click deposit and it's just gonna the li-fi is gonna Bridge the funds from wherever they have the funds in for example polygon bridge to optimism then deposit in the pools and yeah you can just do that in the single interface that you are gonna aggregate on your front end that's like one of the easiest things you can build uh on le5 and yeah so we're also partnering with partnering with etherspot ether sport is a smart contact wallet and so it is what helps you in automating these things um kind of like vaults so you can use that as well to make it much much better so you can use Levi and eat a spot together again so Levi of course uh it's also a great Standalone product but it also it works better with smart contact wallets right so you can use leaf and Andy the sport you can build a you can borrow cross chain you can borrow assets cross chain so I mean like one of the things that are in hype these days it's a cross chain borrowing where you know you can deposit you eat on ethereum and you can borrow ustc on arbitrum or optimism right so this thing is it's being built on layer 0 and like or axilla these different messaging protocols but I'm not gonna go deep into it but uh these Protocols are great but they add another security assumption to you as a user right so inside what you can do is that you can still have the exact same experience but you can build that with Lee fire and the sport with a lot less security assumptions than building on Cross chain like fully native question so yeah we also uh have partnered with go pocket wallet so you can if you wish you can just like build a wallet on your own and integrate li-fi and make it cross-chain wallet from day one uh and yeah question models are great we we have a few wallets that have integrated le5 uh they are Frontier they are Omni these wires have integrated le5 and through this like people can do a lot more caution things and deposit into different chains and do a lot more things of course so another thing is multi-hopping that's something uh you've been with li-fi SDK again which is that which means that uh if you for example uh let's say you have found some Phantom and you want to get your funds on our launch right so this is very hard because there's not much liquidity between these two chains so ideally you would have to go through I go from Phantom to eighth then to Avalanche so this is called multi-hopping you are going through a different chain to go to a different chain so this thing can be built using defy and currently we don't have that we are applying to have that so uh we are offering so I have to update this we're offering 2500 for using SDK plus widget SDK or widget 1250 and yeah you can find these like prices on it it has a global um website though so we're offering these bounties uh in this hackathon so please build on the FI and of course you're gonna get these things so I'm going to talk about contract calls as well so I gave you an example when I started this presentation which is that you know you can stake on GMX right so usually you would have to swap on GMX just swap to GMX on arbitrum and then perform another action to stake into jmx so which can be automated using extend contract calls that we have which what it does after the bridging happens after the swapping happens it calls another function which deposits once into GMX on arbitrim so like the user the end user is going to be only performing only one action which is going to be let's say like usdc on polygon you're just doing that that's it and everything is else it's going to be taken care by Bridges and Levi so that's something you can check out as well of course if you build only on Crafting contract calls which is a new feature that we have we have separate boundaries for this two thousand dollars thousand dollars five hundred dollars and we also have widget brownies which are kind of which I combined with the first bounties now so there's gonna be another fourth price here seven years okay so I don't have much time but I'll be in our booth so you can feel free to ask me you can come drop by we also have a game in the booth so come come by there booth and play the game you can earn some tokens too uh so I'll be near the booth you can ask me for any questions that you have about cross chain even if it's not related to le5 anything to Austria multi-sham bridging I'm open to answering any of the questions that you guys might have so I I want to touch upon before kick me out I'm just gonna talk about uh how we can start uh building right now so uh we have examples so of course in this presentation we have something called we have widget examples which are like very simple to start with right and of course after you are familiar with the widget you can move on to sdks apis and counter calls as well which are like a lot more complicated but which it is just like five minutes a lot more complicated I mean like five minutes to two hours to probably one day right not not too hard for a Dev so uh we have examples for example create react app you can check this out I use next year next.js and yeah so this is pretty simple because this widget is also an SDK on JavaScript it's a JavaScript on typescript SDK and you can import the widget and you can just plug it in on your UI it can be anywhere on a new UI so uh a few things that I want to touch upon since I don't have much time is that this widget is like fully customizable and you can just like do so many things with this widget because this is kind of stuck yeah so this widget you can control all the UI elements that you can see on the widget from outside the widget which is which is very useful if you are building something um like something like this so we built this recently and uh is it uses only five widget and I feel it's like very useful for sure because it Aggregates a few things okay yeah so this is like one a basic example where uh you know I have a few buttons here if you guys can see I'm not a great front-end Dev sorry so what I can do what we can do is like I can just control the wallet uh control The Witcher from outside the widget that means that you can uh you can build like a lot more things on top of uh this for example usdc can change the token eth from outside so I mean a better version of this is obviously this one yeah it's slow as far oh no decline decline always okay so this is something that I built that we built a few days back a few weeks back which is a aggregate I mean which is a way to you know store your friend's address or your centralization address on our dab and you can easily send money from any chain that you have to that centralized Exchange in a single transaction so for example if you want to add a new wallet let's say binance I trust binance and uh I will not get eaten by finance and I have some mattress uh let's say a binance main I have this address that I've just added and of course I can save this address on this website you can just like build a simple dab which is like very useful currently what we do as uh DJs when we one off ram money from one chain to binance for example we have to let's say I have optimism funds I have to bridge to BSC chain or like polygon or ethereum to deposit into Finance but instead what you can do is let's say I have funds on even like a even let's use chain like let's see our lunch right I have a wax on our lunch and I I won't eat on binance right so you can say have such a way that just like selects everything is populated oh I have to connect my wallet oh yeah that's not working because I just disconnected my frame wallet so yeah so the ideally if you have ivax on our lunch and then if you have 20 of that uh you want to get two binance on you want to get to binance you can just like build a simple app like this where I just like sends you uh to binance you can just like Bridge using in a single transaction which is I feel very cool so yeah you can you can build something like this it's like a very challenging app and you can also build a dab where you know you can add your friends as receiver addresses and send funds to your friends that's also something you can build but I think uh I'm happy to answer any of the questions that you guys might have in the booth feel free to reach out to me on Telegram at Akshay underscore le5 and it's called join our Discord and ask for support as well I can also show you a few examples that are built using le5 one is that so recently metamask integrated li-fi to support bridging inside metamask so if you go to put a portfolio.mass.io you can see le5 being used in the back end so these are these guys use API because metamask wants a lot more freedom right so metamask wanted API so like they have integrated our apis we also have dodo exchange integrate using us they are using our SDK we also have a superfluid easing us that also they're using our widget so we have like three examples of different dabs using leafy and if you are building any project and if you aim to deploy on any of the L2 chains or side chains that we support I mean currently we support evm we are going to expand to non-vm as well uh feel free to reach out to me reach out to us we're going to help you guys integrate uh li-fi into your tab so that you can help your users on board in a much much easier or seamless manner to your chain and use your dab Without You Know Much hindrance uh so yeah so I'm gonna give you guys like two a minute to scan the QR code join our Discord you can also scan this QR code instead to get this presentation and get all the Links at once so if you have any questions I am happy to answer right now yeah huh I can't hear him though it's too uh let's suppose you are saying uh supplying token from one second uh one chain to another chain let's suppose at the same time second chain got like a very high fluctuation Okay and like second transaction got failed how you are handling that yeah so of course so this happens a lot uh you would know especially in crypto right so what we have is that we have slippage parameter that we set um I mean of course you have access to set the slippage on SDK API and the smart contracts so if you set slippage like 0.5 percent the final transaction is gonna I mean the contract is going to make sure that the deviation isn't like more than 5.5 percent for the end token yeah if it does that is like okay for one chain but when we are going to another chain it is not an atomic swap yeah yeah so like how you are handling that thing oh so even even for the destination change so this slippage is actually for cross chain that means that as you can see here GMX and orbitrum to Ethan optimism this tokens right like 20 tokens is like 1000 75 right so the final amount should not actually go below 1075 dollars with 0.5 percent slippage so if it does the transaction fails and you get the money back on uh where you are right that's like any uh the slippage got it got it yeah yeah but I can play around with the slippage to make sure yeah I will get to your booths yet yeah okay one more minute uh any other questions okay let's see uh so yeah uh I have this link over there as well and uh yeah just like go through these ideas and you guys can definitely come up with something much much more creative for sure if you have any ideas and you are just like if you're still brainstorming as well and you want to build down cross chain caution is like the need for the near future right so uh people would want I mean it's ideal to build on Cross chain because there's a lot of Need For You from end users to you know bridge between chains because the chains are exploding right now right so we have all this optimistic Bridges so the optimistic uh chains roll ups like optimism Boba and we're also gonna have ZK Roll-Ups in the future so that like before the chains consolidate the chains are gonna explode in the near future in the next one year or two years so I think like it's ideal time to start building on Cross chain or building cross-chained apps solving cross-chem problems because yeah everybody's facing these problems all of us so yeah I mean I wish good luck to you all of you in this hackathon all the hackers I'm happy I'll be on in our Levi Booth we have a game and we have much really good much by the way uh yeah I'll see you guys over there thank you oh maybe oh um it's not displayed this one [Music] you just right maybe plug out and put in again which portrait where is the guy another day covalent Ed no automatically and we are that experience everybody you know [Music] foreign I think so check if this works oh yeah foreign foreign thank you yeah anyway yeah yeah you can sit down by Community together foreign foreign foreign [Music] [Music] signal is coming cable is okay [Music] [Music] yeah Humanity output things foreign foreign foreign foreign thank you foreign but the internet yeah yeah just the data limits here are very high is it like the amount of data you get here every day foreign foreign foreign foreign you can download it you can move to the internet yeah so but use me I don't know thank you I think we're going to bring in there okay let's see therefore okay now it's ready nothing so I mean no it's tight it's lightning [Music] um right I've already sent a message to get a USB adapter uh other option Bluetooth he has a downloaded but it's open in Google Slides right right with file export as yeah but oh that might take that takes time take time so the main idea he forgot his password looking forward foreign uh the Wi-Fi is just so slow okay send it to my previous is working this is it working on my laptop okay yeah it's not even loading over my date extra cross it is I want to try and download the you have it open okay just um we we actually got the slides into that window system thank you so much oh you're all set here I'll hook you guys up with the ethernet ethernet oh no it's good okay hi guys uh can you guys hear me we can switch to channel 2. 0.00 yeah hi can everyone hear me you just have to search the channel too oh this is like a silent disco but without the Disco okay sorry for the uh intense delay there was a problem with the HDMI cable but hope you guys are all fine and having a good time here at Ethan there uh so I'm part of covalent covalent is a data API service and we provide blockchain data to more than 40 blockchains close to 50 now so today I'm just going to give you a quick uh introduction to what is covalent how you can start building on it and what kind of data you can get before we begin um if you scan this QR code you receive a free covalent themed if India nft so yeah there's no reason not to do so uh you just need to sign up and register you get a free API key you can start calling and using our API and you also get this nft so please go for it toasting oh okay okay awesome so um as many of you all know the future is looking multi-chain in fact right now it's already multi-chain and we believe that by 2025 there will be uh dozens of dozens of blockchain layer one layer two app chains Etc and there will be a problem however you know from a perspective of a Dev which is that uh we're gonna have a data challenge right unless you're working purely in one ecosystem uh you will probably need multi-chain data and multi-chain data right now is difficult to access right um they are mostly stored in point query form if you host your own node obviously like that's terabytes upon terabytes of data and that's really difficult and most of the data is not aggregated the host on Smart contracts and even if you call using web3.js or ethers.js they are Point query little small Lego bricks so it's hard for you to get the high level picture right and most of the time if you are querying using some sort of a SQL database the the queries can be really really complex so we've kind of abstracted that away from you as a Dev right especially if you've already built or spent all your time and energy on ux UI on your backhand solidity code whatever and you just need a quick way to get on-chain data onto your front end or or any other kind of client covalent is solution for you right it's a single rest traditional rest API uh which allows you to get all kinds of blockchain data like balances transactions um nft data it's curable from the cloud uh you can you know use all sorts of environments to call it technically it's no code required right we even have a feature where it allows you to download everything in CSV so it's super convenient for the analyst friends if you just want to like you know download the data put it on Google Sheets or whatever and it enables you to go multi-chain in a matter of minutes how does it work so obviously the blockchains holds the data themselves and then exposed to us via RPC nodes right covalent is almost like the data layer we host the full archival notes of every single chain and then we aggregate the data package them up into a standardized model and we serve them up to you in a rest API form so it's really simple for you uh when you use it and it's used to power all sorts of applications so uh on top of the fact that it'll make your life simpler we are also used by over 40 plus developers and More Than 3 000 projects out there right now so yeah I'm sure you guys are dying to know how you can get started so um everything is our docs you can just check out how to use the API from our documentation we have an API reference which allows you to call the API directly from your browser typically I would be exploring this but because the Wi-Fi is a bit flaky right now um I would just be skipping that and maybe I'll show you a little bit about what the response looks like uh using some of the slides here and also you can we have also built out you know code templates uh that enable you to um just code along or quickly drag and drop code Snippets into uh front-end like react front end or something to see what kind of data you can get so this one for those of you who are in uh familiar with Postman right getting um all sorts of data through this lovely interface we have built out this Postman collection that enables you to sample all of our endpoints from the comfort of your Postman workspace so you just go to this URL covalent hq.postman.com and you will be able to find this collection here and it has all our endpoints with the chain ID with the wallet addresses pre-configured so all you need to do is to press the send button and you'll be able to like save the response to study in the future you'll be able to see the response structure does it have the data that you need Etc right so it's probably a bit small for you to see here but there are four categories of data that we provide in general that balances data and that includes uh nft balances as well this nft data there's also transactions data and uh what we what we call Base so that allows you to get like all log events of smart contracts for instance right and also X Y equals to K which is the Dex data so you can get all the liquidity pools you can get all the um the amount of seven day liquidity in a Time series you can get 30 day fees Etc so if you're looking for inspiration you can build nft Marketplace very easily and that's just a matter of a couple of API calls all the data is there right you don't have to um I guess make 50 or 100 queries which is what you will be doing if you're using the likes of uh Json RPC you can build uh you know a D5 portfolio trackers like Zappa right which allows you to see all your token balances and more so all these are the endpoints that allows that loading you can build the likes of wallets in fact our balances endpoint is one of the most popular endpoints that we have that allows you to very quickly get all your token balances as well as nft balances as well as the NFD metadata which is all where other images Etc stored can build sites like coin gecko which has you know the top top tokens um the amount of liquidity Etc so now for this hackathon we have also a pretty juicy price for you guys so you have uh 10 000 usdt or usdc prize pool and the top three prizes get respectively 3K 2K and 1K and uh we have uh and then we have the 4 000 price pool for the remaining projects and all you have to do to qualify for the prize pool is to make a meaningful call to our API and as long of course like um to qualify for the top prizes you have to have a good use case your use case has to be novel um the problem they are trying to solve should be a genuine and good problem of course and we also judge on the quality of your um implementation but of course given uh this to be a hackathon environment most of the time we are judging on the quality of the idea itself right so yeah and then you need to use the Covenant API uh yeah typically I would try to give a quick demo and if I'm connected okay I am connected to the internet let me just oh thank you okay hopefully um it allows me to call something without an API key here oh there we go we have the response here open it up uh I need a Json formatter I wouldn't um get you to suffer through that but if you see here this is the sample response of our balancer's endpoint all it is is you know one query the query string passes in the chain ID which in this case is one and then the address it resolves the ens which is demo.eth but you can of course put any address here and then it gets you the um token Holdings of this address and as you can see this address actually holds 122 tokens 123 including zero so um and each of these items uh all the information you need about the token you know your sdt and this is the contract address of usdt um and this is the balances in way and all you need to do to get the uh uh eth is to take 10 to the divide by take that and divide by 10 to the power of the contract decimal here and uh it also holds some Frontier token this amount of Frontier token some native token eth right fairly straightforward you can get the historical portfolio value of um any address so they'll allow you to build the chart with you know ups and downs of all the tokens that you hold um you can get all the um nft holders of a particular collection as of any block height right so that's very useful if you are doing on-chain nft analytics of let's say uh who uh the token holders of pudgy Penguins as of January this year right and compared to now maybe and so for nfts you can get all the nft transactions you pass in a contract nft contract address and it will give you all the um you know all the transfers of the nft that is made so of course get all the transactions etc etc now just one final thing before I wrap up so oh yeah another thing is you go to that I believe is this URL I need to sign in but if you go to that URL you will be able to Fork the covalent Postman collection which is a super neat tool the one that I mentioned just now so we also have built a web 3 resources which is like a starter pack for you to quickly integrate it into your app so this is like a react Library we have built out a couple of components right so for token balances you see that uh this is the simple react component that will just input in the address [Music] and it gets you all the token Holdings so it is a component here that you can plug and play this is a erc20 transverse component you see all the transfers made of all these erc20 tokens this is the token holders component and this is a transactions component you're passing the address you see all the transactions of this wallet [Music] so each of these are used are built just simply using one endpoint One Call right yep that's about all that I have uh thank you for staying through with this um I'm opening up this um this last bit of time for any questions that you may have if not for those of you who have just arrived you can still scan this to get the free covalent that eat India nft any questions anyone feel free to ask all good okay thank you guys I'll just sign out let me see okay let me just refresh and try oh yeah foreign [Music] oh that's a big screen can we resize it do you want the 4K am I gonna do it 4K God knows do we have a visual working screen Maybe nice me drag this one over there nope cool more HDMI issues what's the uh 4K yeah do you want me to tone it down to 1920 yeah how about now cool oh there we go beautiful thank you for swapping my main monitor do you want me to yeah you want me to yeah okay yeah like loud or okay cool can we see my screen we're good all right if you put on your headphones channel two sweet cool all right uh let's see we are a little behind schedule on my Audible yes awesome I'm gonna get a lot of thumbs up from you just because I'm Nerf now over it's okay um Let me refresh this and ask for chaos um and then we should be good to go all right so hi there I forgot my clicker that's my first fail um I'm Luke from ens or otherwise known at 0x225 f137 uh one two seven d nine zero six seven seven eight eight three one four bc7 okay I'll I'll cut it otherwise known as Luke dot computer and that right there or looseman's Hadith and that right there is the core premise of ens ens the thank you uh other room ens the ethereum name service is a name service on top of ethereum that simply turns human readable names like nick.adif into machine readable addresses such as Xerox B8 c2s two yeah that and backwards so your address into your EMS name as well as profile pictures so this now means that all of these dapps that in the top right corner show your zero x225 f1373 c3b5 address will simply show loop.computer as well as your profile picture we don't want to see any more Xerox addresses ever again um so before you run off here's a couple talking points that I will be covering during this talk if you're sitting there and you're going yeah I already know ens and ah this is not going to be interesting hear me out wait till the end of this don't run off wait till the end of this slide and then you can judge so I'm going to be talking about what ens is and how it works under the hood our latest DNS integration and the ability to now take your computer your.com your dot IO your dot XYZ or dot Dev or any DNS name web2 name you have and bring it on to ens and use it as your ens name while it's still a web 2 domain name records and resolvers and the ability to custom program your ens name and your avatar and all your records sub domains and the whole ton more cool stuff cross-chain interoperability the ability to have stuff on other chains off chain and have your your toaster control your computer um how to implement all of the above well not in detail because we have a limited amount of time but if you want to know more you can always ask me um and how to get your first DNS so before all of that I want to cover some Milestones these numbers are a little out of date we've gotten above and beyond after these but we've had 2.75 million ens names registered recently um 506 official in quotation marks Integrations these are Integrations that I'm in group chats with these are Integrations that are on our websites and all that cool stuff but there's a ton more sites out there using ens if you say okay you know we have a bit of a bigger project we're taking off we've got VC funding or something along those lines and you want to integrate with ens and you need help or you just need someone to hold your hand and make sure you don't blow up I don't know things um message me we'll start a group chat we'll have a good time and 593 000 individual owner addresses so let's talk about that practical example from earlier again right this is Tick Tock so a tic-tac-toe app that I built at East Paris a little while ago thank you I appreciate it up too much fun um let's not talk about the design but it works you can play Tic-tac-toe and it does ens name resolution and as you can see my other two wallets don't have EMS names um and if you check the top right corner right there you can see p3x30 which is at the time I took the screenshot my primary and s name so ens allows you to have multiple names and you can see your primary name and change it as you go so I have Luke computer I have lootments.8 and I have vcx.heath so I'm on polygon my tic-tac-toe game isn't polygon because I don't have the time I spent four hours to build this in during a hackathon um I was high hypothetically because it was Paris um and I decided that I wanted it I'm probably gone because if my Net fees for my very not gas optimized app were not gonna happen um so here's our app and now let's say you're sitting out there and you're like okay I want to try this out how do I how do I create a game you press the create game button you get this ugly screen and then right there you can either type in the address or the ens name so right here we enter nick.e you can see this profile picture and you can see his address easy in us um so big Flex I am not playing protect o against the founder of ens um it's going great above and beyond my bad tic-tac-toe skills and the fact that this ended up in a tie um I think I know the winning strategy but I keep forgetting it's okay this is a simple use case to be an apps we've got names we've got profile pictures the DAP has nothing to do with EMS if you do want to build something specific you're more than welcome to but this is just your average dap and enf integration so that's the core idea of EMS in this specific example it provided the username and Avatar but we have a whole lot more than that we have email we have uh your GitHub your Discord your whatever other things you'd like to link to it so this is me Lou smith.e or Loop dot computer or v3x.0225 fm373 blah blah blah and a profile picture as you can tell I do not like saying out loud addresses so Loop dot computer it is um and this is Nick duddy and nick.heath is composed I'm gonna use it as an example because he has a lot more records set than I do a bunch of different records so it's not just your ens address it's your eth address right your Xerox b8c Doge address because why not have Doge address your Bitcoin address because why not have a Bitcoin address your Litecoin address and like a whole bunch of other chains that we support um your website if you have a centralized website your email because email um your Discord Twitter your Reddit your telegram you GitHub your ens delegate Link in case you want to be an as delegate and you have a forum post about it your avatar and a whole bunch more um EMS names have key value storage so all of these if you lower case them except for the points have numbers but if you take websites all the way to Avatar you lower case them and you put them in your pns name and you put them in the records um they're just key value storage you can add anything you'd like uh there are proposals out there you can make proposals you can standardize these things if you chose to so there are a couple projects out there standardizing having audio in your ens name there's a couple projects out there standardizing all sorts of cool stuff drawing ayc in your ens and whatever you'd like whether then it's optional of course um so how does all of this work ens is composed of a couple core contracts and their logic is relatively simple to understand it simply stores for every name name Lucid the registrants my address when it expires and a resolver address that resolver address is just another smart contract in this case uh 0x497 I happen to know is the public resolver it's a contract that we deployed it allows you to do key value storage and it simply just checks if you're the registering of a name so it stores it for me it stores this for naked stores for metallic and sources for everybody else out there that has an EMS name and that's the whole core contract so when you have your library and um your front end and your app is like hey you know I want to invite Nick to a tic-tac-toe game I'm looking for Nick daddy it'll go over there it'll grab this Nick W from the list and right there we go look the resolver and it will reach out to that smart contract this is the public results marketing track and that smart contract will simply return all the information that were mentioned so we now have our all of our information stored in that smart contract cool this is the public resolver like I mentioned but this can be your code this can be your contract it's gonna be everything from here on outwards can be fully customized um what this means is that your contract can return to your Eep address and the naptar based on the day of the week based on your profile picture your portfolio that is your profile picture uh your your whatever you'd like to do what NFP Club you've joined or anything along the lines cool so I I get it it's cool you sit out there and you're like yeah it's cool but it Maynard is not fun spring this event polygon is so you you want to use the fancy things and get it the in-app core team wants to use the fancy things too all of these and more um and you can there's a little thing that we've released about halfway throughout last year and it's cross chain interoperability protocol ccip for short because nobody is going to say cross chain interoperability protocol every single time they want to talk about it so ccip works very simple it allows you to store your data on chain off chain roll up on a layer two which I mean these are all kind of overlapping terms um using pure knowledge using HTTP if you'd like HTC PCP to control your coffee pot using your toaster or anywhere else you would like it is ridiculously powerful so this is essentially how it works behind the scenes I'm going to give you a really quick rundown it's all done client-side um these slides as well if you want to take pictures is great but they're also up on Loop dot show it's https colon slash loop.com you'll find all the slides as well um this right here is ethers a library that most of us use in our front end in our backend and ethers will reach out to eat net it'll go I'm looking for nick.heath will have the name the registrant expires and resolver just like I mentioned before oh oops the resolver it'll go to the contract and it'll say by contract I'm looking for nick.if get me it's Avatar so that's Avatar so I get text nick.if avatar or detect Nick tariff GitHub easy the smart contract will then throw a custom error off chain data and it will say you need to go to polygon to this smart or sorry in this case optimism optimism this smart contract run this function so ether says oh shoot uh the transaction failed but I know how to handle this error code off check data so it reaches out to optimism or polygon or HTTP or an RPC endpoint or whatever chain you'd like whatever L1 L2 roll up name it optimism or BB chain or any other network that you'd like well then execute a function return some data look it up in a database God knows what it's all up to you run your code over there so if you run the Registrar on optimism or if you run uh subdomains your dab is based on polygon all of that and then it will return with oh yeah by the way this is Avatar and sent you the URL BFFs our weave regular HTTP same goes for addresses for Bitcoin for Litecoin for all of the other cool stuff so I recently built a centralized version of this which contacts a centralized API endpoint on one of my servers and it is twitter.ngo so I made sub domains of twitter.ng oh this was another 48 hour quickly coded it together because I felt like a project um and what happens is if you take anybody's Twitter username provided to have EMS in their name um twitter.ndo it'll go to the if maintenance Mark contract the midnight smart contract will say you need to go to Luke server it'll go to my server and the server will then use my Twitter API key yes you need a Twitter bi key for this but it worked um use the Twitter API key make a request get the users in its name get their user's address and then return all the information so this now means that any Twitter user provides they have an ens name or an address in their actual username or description um is also automatically an EMS name congrats you have a domain now sweet so an example is Nick Johnson or Nick's Nick SD Johnson uh Twitter NGO that's next username and because he has nick.ethe in his Twitter bio all of the fun stuff happens at the back end we've resolved it it shows see if address it shows Twitter it shows his profile picture and it shows a description cool beans so this is obviously super cool right but I understand most of you are sitting here and you're going where do I start what what is this so there's a ton of libraries out there that already supports EMS if you're building adapt you're probably using ethers or web3.js or if you're doing something in the back end you're probably using three go or with 3j for Java or anything of its sorts right or just ethers because it works the backup as well walk me uh provides react hooks wrapping ethers super nice so if you use rainbow kid if you use web3 modal if you use any of the sorts ens is already built in and it's going to be one Live code away so all you do is for any of these cool libraries and there are more than this um these are just ones I have worked with to make sure ccip DNS and all of the other cool stuff is integrated um it will automatically have a EMS name or a use EMS name use ens avatar reactbook for walk me for example I really like watch me because it makes dapps so easy um you simply just for forward resolution you simply just say use the address address v3x but in case I try and invite v3x studies to a game and it'll just outputs 0x22551373 cool um if I do it with ethers it's provided.resolve name and there's a bunch more code examples in our talks you want to do reverse resolution so showing your avatar and profile picture look up address or using an s name and it will simply just work it's that easy and there's a ton more ways to do this using Avatar etc etc etc and then I haven't even covered sub domains yet so my talk needs to be short so I've joined out these slides but there's more on the interwebs if you'd like to find some if you want to know more check out the documentation um now I see you going yeah this is cool uh ens or whatever but how do I get one of these oh on slide how do I register one so you use ens manager the instance manager is updap uh it's both available decentralized and centralized ens.domains and it allows you to register ens names but DNS is fully on chain and we are a true public good meaning all the money spent goes back into the community goes back into the ecosystem and back into other public goods I work for non-profits um but the ens manager is not the only place you can register ens names because we're fully on chain there are Community projects like ens Ferry where you can give names to other people like rainbow that literally has ens names in their wallets where you can register them set them edit your records and all that cool stuff coinbase they give out cb.id subdomains lens any lens name.xyz is a valid Mass name Argent gives out subdomain.xyz um so a little bit of alpha we're working on a new manager not to please do much to be out ideally end of this year beginning of next year it's all ens domains if you'd like check it out it's purely ungodly at the moment um but the real EMS manager Works around about like this here's what it looks like it's app ens.domains you go to the search bar you type in the name you want so I'll study if in this case and then there you go here's your registration screen so any NS name that's five characters or longer is five US dollars a year converted to ethereum so it's a chain link Oracle and we figure out um what the current price is and it's five US dollars a year plus whatever the estimated gas fee is right now so in this case you can see that Alice is going to cost about nine dollars this is on test net so it doesn't cost me anything I pressed request register and we do it in three transactions at least two transactions and three steps transaction number one is a commit transaction the reason we do this in two transactions is to prevent anybody whether that's somebody listening to your JavaScript code somebody looking at your screen somebody listening to your network connection somebody running the EMS website anybody in between will be unable to see what name you're registering until you actually own the name this means that anybody who might be spying on you might be listening to you might have booked your computer will not be able to front-run you and steal your name before you register it so the first transaction hashes the name and commits it to the chain next we wait 60 seconds this is done to prevent uh front running and for stability after those 60 seconds you make your second transaction and you send your actual five US dollars worth of eat and now you have the name easy so your profile looks around about like this um for the new Alpha it looks like this it's super cool um and you have your avatar you have all your records you can edit them the current manager allows all of this as well it just looks less fancy and you can do all sorts of cool stuff like setting your avatar which is super easy so this is the current manager all the way in the bottom right right there you'll see add an edit record so you press on that and then you scroll down right be below the text records I could show you if the internet was actually stable um it's that's your avatar so you just put URL there this could be an ifs URL if I call Falcon URL which is ipfs an RV URL HTTP URL anything of the sorts and then you have your avatar easy so I'm almost at the end of my talk don't worry the next speaker can come up here in a minute um I have one last thing I want to do and I apologize in advance to everybody here but you've been rip rolled um my name is Lisbon study Lou Smith on Twitter Luke contact has all of my contact information if you want to Whatsapp me telegram me Twitter me whatever you'd like docstudiness.domains has more of the information happy hacking thank you sweet oh thank you Linux can we both enjoy I'll check another check check my testing one good job hello check my testing one two check it's not looking really nice especially like just hold on a second here well it's not the problem what's giving some where to tint that window boom so let's see change can you change the color yeah no okay it's okay it's okay come here oh it's here okay hey guys uh can you hear me channel two everybody cool fine okay so let's look to being with you guys uh my name is Carla I'm a senior and today we're going to talk about how can we do things using our attack right so basically what we will cover is an overview of cartesi an overview of how you can develop with it and I'm going to do some comparisons on how you do web free development web to development and then how you do it with cortis array and a quick answer to Cortez rollups which is the product we use for enabling our tank so just an overview of what this stack is about is this so basically the objective is having this really rich code that you can use for decentralized applications so if you develop on solidity you probably have faced a lot of issues like the size of the transactions or lacking libraries that do stuff that you're usually doing on web2 like parsing a string or something like that access and database all this stuff and that's what we want to bring we want you to have the same power and expressiveness and computational power that you have on web2 only available on web free in the centralized fashion right so if we take a look in here this is a really simple example of depth in cartesia this is an echo depth basically what it does is whatever we throw at it it just throws back at you okay and if you are into python you can see that this code is looks just like any regular web 2 python code right that's because we wrapper the whole framework and how we interface with it in a simple HTTP interface and that has a couple of reasons because most developers they're not webview developers right you have a really steep learning curve and in order to make it easier for web 2 developers to award we made the decision of providing these nice HTTP interface you comply to it you're used to it and now you have additionalized application right this is just a preview I'll just explain stuff and go back to this layer okay so let's go from overview of Cartesian basically we're bringing this new OS and it's we think it's pretty neat so we love affirm ethereum has security it has decentralization with censorship resistance we have all these thousands of nodes validating everything anyone wants to tamper with something it's really hard because you have to lie consistently with thousands of nodes in order to do this but ifuna also has this drawbacks right because since everyone on the network is validating everything it means that all the nodes on the network are producing all the computations and that makes it very limited because if you have the Ethereal Network and you don't have tiny transactions well we just throw a yo one Loop edit you just hold to the entire network right or if you don't make it really really expensive like this well then you can just flood it with useless tiny computations and you hold the network anyway right so the idea on Cortez is can we get this really nice security guarantees of the blockchain but enable really really large computations and also bring better tooling for development and that's what we go for okay so how do we do this well basically what we do yeah what we do is have this special VM we call the cartes machine and this cartel's machine provides a Linux runtime environment and the computations that happen inside the cartels machine are secure by the blockchain right so this cortized machine is based on is based on risk 5 and what happens here is risk fives is an open Hardware specification done by the guards at Berkeley and it's really similar to what we have on our computers on our cell phones right and because of that it's compatible with Linux and another thing we do is that unlike in ethereum in which everything is running on the same VM so the AVM basically is running all the applications if some applications use more resources they're using a lot of things the other one will lose it we have a VM per application so a VM per application with a regular processor and Linux well we just enable a lot of things for you to use in there and uh the Cortez machine in order to do this needs to be deterministic so we put a lot of effort on making these risk 5 based machine that are basically like clock floating Point instructions all the stuff that could generate entropy we just had to make it deterministic and uh yeah as I was saying to reach this stage in which you have a lot of computational resources what happens is we rely on local consensus and we have a ropes Solution on top of it so what happens is that unlike an ethereum in which everyone on the network is validating everything on Cortez we have different sets of validators verification so if you're interested in an application you can validate it if you're not you just let it go you don't have to watch and validate everything that's going on the network okay and uh as I said so consensus is basically uh really strong on ethereum and others because if you want to tamper with a computation it's really hard to lie because you have a really large amount of nodes and I just told you guys that in order to scale what we do is not everyone validates everything so you can have a really small subset of the network validating a certain application so how do we keep it secure so basically when there's a dispute and you don't agree with the result it's not a matter of a local consensus with the people that are validating that application and you just pick up the majority and that's consensus no what we have is a is a dispute protocol we call it the verification game in which whenever this is dispute what we do is basically the the people that are disputing since they are running the same application on the same Cortez machine and this deterministic they should reach the same result if they didn't it means that at least one of them did something that they shouldn't so we have this interactive protocol called the verification game in which it has two parts so so the first part is it tries to use this characterizing machine on both batteries off chain and they post a signature of the state so we basically opened all the Cortez machine State We've ran disk even processor State like the instruction counter everything we map it to RAM and then we divide it in 4k pages and these 4K pages are hashed and those are the leaves of a merku tree and then this root hash of the Mercury represents the whole state and you use this to check if you agree or not with the state of someone's house Cortez machine so when there's a dispute what you pick up is you pick up the whole computation let's say we have I don't know a million for instance Cycles on that computation so we do an inner search to search what's the first instruction we don't agree on what we do is okay I'm gonna post my root hash of the Merkel of the Cortez machine at 100 million cycle sorry uh one uh 20 30 40 up to 100 and then you're gonna tell me okay so up to four four uh 40 million I agree 50 million onwards doesn't match so now we know the Divergence is between 5 million and 50 million then we drill down so 41 million 42 43 44 up to 50 and we go there and each time we divide this search Space by 10 so in logarithm number of interactions I don't know it's instruction 43 million 3007 that we don't agree cool now we know the instruction we don't agree but who did this right right because I'm claiming something or climbing something else that's the real special part so what we did and this is the second part of the the process is whenever we reach that instruction it's not my word against yours we just pick up at that instruction and we have a known chain implementation of the Cortez machine so we had this huge effort of making an unchanged set of contracts that can emulate each instruction of the critized machine and this on chain emulator is the one that actually picks up the instruction and executed so it's not me it's not you it's the thousands of nodes of on ethereum or whatever based blockchain we're using that they're gonna say who did the execution right so this way we can have a really tiny set of validators and computations real large ones but still maintain the guarantees of the strong guarantees of security blockchain right so as I said it's an optimistic Loop solution in which we built so basically we do all these computations inside our Cortez machine and from time to time we just pick up the signature of the Cortez machine and put it on chain if someone disputed okay there's the verification game if not we move on that's set on Stone and you can keep up the computation for the next step so how's the development of this so you guys are used to web2 web 2 is really simple you have a browser you use some framework like I don't know angular or react to whatever you want to the tools HTML CSS JavaScript as base Technologies I need to do these nice interfaces and then you interact with a backend right generally using HTTP or https and then you have a service this service might use a database might use someone else's API this kind of stuff right really simple now when we go to webview we still have a similar front-end but now we need a special library to interact with the blockchain generally we have something that implements the Json RPC protocol so if first webc.j has something else and then instead of talking to a backend this guy is actually talking to the blockchain like a node on ethereum or maybe a broker like in Hira or Alchemy or something like that right and as you guys know you have multiple imitations and frosting all this stuff it's hard very hard to look for data that's why we have services like the graph and stuff like this which are very popular help you on the indexing and this kind of thing and how does it look when you develop with protizing well basically you still have your front end in which you use whatever technology you want so if you have a browser you can still use angular view or react all this stuff and then you have a set of libraries to interact with the framework right and this framework there then it has a real nice machinery which takes all the abstraction of the verification game of all this this stuff from you and inside the Cortez machine we actually wrap as it as I told you guys all the framework on a HTTP interface so we have this HTTP dispatcher service which is the one that you're talking to when you're developing your application so from your development point of view you're just talking to a HTTP interface and that's it you don't have to care about the blockchain about reorgs about any of that we take care of that for you okay so just going a bit deeper on how this works so those libraries I said they basically use three different interfaces so we still need a Json RPC to talk to blockchain because whenever you're trying to reproduce computation well you need the inputs right so you have a data availability problem if you're not using blockchain let's say I'm storing my input on ipfs for instance and then you say I cannot do your computation why I don't have the inputs okay from the blockchain point of view there's no way for you to say it's me lying about it not being an rfpfs or it's you lying that you didn't put it in there so that's why we need a Json RP's interface and we provide inputs through the blockchain the second interface we use sorry the second interface we use is a HTTP rest interface and that's used for something equivalent to if ethereum calls right so we have this inspect interface that on this inspecting surface basically we allow you to directly talk to the Cortez machine without any fees anything it's just HTTP connection directly to it and you can do whatever processing you want to query for state so let's say you have a chess game for instance if you open an application on a mobile phone and you want to know if you have ongoing games and watch the state of the game you probably need your clients to go there and look at the graphql with something or an indexing or go directly to the blockchain check that you have a transaction which you started the game check all the moves that other players did until you you have the current game State and you're actually good to go right so this inspect interface is to handle things like that so instead of doing that what you do is you go through these inspect entry phase you just call it the Cortez machine you give your address and you say hey what's up and then inside the Cortez machine you can process it on whatever language you want python C plus plus regular backend and then you can check oh yeah you have an ongoing game because I started in the in the database and yeah this is the game state in a Js son and its white players turn so much easier than just going through the blockchain trying to reconstitute the data or using something like the graph to index a lot of data right and the third interfacing there which is the graph is a interface that we use to ease the outputs of the Cortez machine so the Cortez machine basically can use reports which is something you generally return when you're using this inspect interface then you have notices notices are a mechanism really really similar to what we have on the ethereum events so when you want to have a statement and it makes sense forever like I won this match or something like this notices is what you want to go for and then we have this third interface which is which is vouchers so what vouchers are is a way for you to emit a transaction to interact with the blockchain from within the Cortez machine so since the cartels machine is deterministic and doesn't have outside the interfaces like internet and stuff like this inside the cortex machine you just do your transaction and then you put it on a voucher and the voucher is a really cool mechanism because you query it on graphql anyone can enforce it because after all it's a transaction that's signed by the application itself and then we have an incentive mechanism that when you submit the voucher and you force it you go to reward a bit and we got all this nice smart contracts on the framework the check if the voucher is valid if it was submitted already and all this guarantees that we should have right okay uh so let's go back to that initial code so how does it look like so basically this is an echo application as I said it's a really simple one when I referred it it throws back at you on the left side we have an example using this front-end console that's available on our Apple so the URL is down here but you can also query me for that later also available on our side so it's a simple application then in typescript that basically implements all those freeze interfaces are shown and on the right side we have a basic Echo application written in Python so that's the actual decentralized code right so what we have in here if you take a look is first we start using this front end and sending a payload so hello there so from the blockchain point of view we don't know what it is it's just a binary output binary input but your application knows that's a string right so inside your application that's regular python code as I said so we're importing OS because after all it's a Linux machine and that service that I mentioned that that has all the wrappers in HP interfaces well basically This Server is is listening somewhere and we settle an environment variable with it so we're using OS environment to load up that variable and we also use requests so people familiar with python know it so really well known uh HTTP library right and okay using that OS now we're picking up that environment variable so we know where to connect on the Cortez HTTP servers and now we have uh this dictionary here in which we settle Advanced State and map it to a method calls handle Advanced and inspects it and map it to handle inspect so Advanced State inspect state are payload whenever you receive an input on the Cortez machine it can be from two different sources so it can be this input that came through the blockchain and is actually advancing your application state or it can be a direct query you do for example that chess in which I said so they're having a game stuff like that inspectors it will come with this metadata as inspect state so you know it's something that's going to be thrown away afterwards right and the basic structure is you have this infinite Loop and this different Loop has an iterator okay in this iterator you're doing those two things when you call that finish endpoint you're putting a payload that's saying what you did with the previous input so let's say we're playing chess and I just do a legal move with the queen well it shouldn't happen right so you refuse this input so in that payload you're going to say that the status is reject now if you provide me with a valid input I'm just going to accept it and that's the input of this endpoint now what's the response the response only comes when there's something to process so once you call this guy it just pauses the Cortez machine and the Cortez machine is woken whenever the framework has something new for each process either inspect or a new input through the blockchain right and well this response there then you parse it and as I told you you have a special header in there request type which can be either Advanced state or in Spec State and given that we're going to use that dictionary in there to map to the right method to handle it and then we just call this method so handle Advanced which is the one we call in case it's Advanced State uh it's an app application really simple so it just picks up the payload that you received it creates a new dictionary with a payload entry and put in whatever you receive in there and then once again a simple call so you do a post on this notice endpoint with the payload that you just set on that dictionary and that's it you just emitted your first Cortez event which is a notice with the payload you received from the from the blockchain itself any return accepts because well that's valid so let's go forward so on the handle inspect which is the case for for the inspect API which is uh ephemeral same stuff only that this time we're picking up this payload and we're putting on a different endpoint on report repurchase this other interface in which I told you guys that it's meant to be ephemeral so whenever you do a report it's not stored it's not there in Forever it's like an ethereum call response right and yeah that's it after you process it we just set up that finish status to accept a reject and do it again so now on the left side once we process this what happens is we emitted the notice in there right because we just sent this payload through the blockchain hello there we got in there and I noticed was emitted so we can still use this front-end application and use this really nice command yarn start to know this list and what this does is it goes to the cartels node to the graphql interface and says hey show me the notices and there it is you're going to have a notice sorry you're gonna have a notice stating the epoch input and notice index and the below this is in there hello there so Epoch is but because we are Optimus grow solution right so all these time frames in which we validate stuff and then we roll up those we call epochs so that's the index of the epoch so in a given time frame you can have multiple inputs so you have the the index of the input and then a single input can generate multiple events right so we also have the another index for the the notice there and well that's it uh so basically we have a tracking here which has a ten thousand dollar USD price and uh it's divided in three so first place takes 5K second place takes 3K and third place takes 2K uh we have multiple resources available to help you guys so first of all we're here so you can just come at our booth and talk to us we also have multiple examples of code like we have this getting started which is echoing python in JavaScript in C plus plus in luo in multiple languages we also have some nice applications using machine learning or database like sqlite and uh yeah a lot of interesting stuff in there so you can give it a look we have a special Discord channel for this hackathon so if you scan our QR code on our booth you'll get there you'll also get a special badge that no one else will ever get just people attending this event and we also have the cortezidox available so yeah once again this is hackathon so you probably want to make the most most tracks to have more more chances right so if you want to mix our project with something else let's say you want to do a slot machine and you want to do it on top of polygon calling a smart contract on on chain link for a random number generation and then you want to feed it to Cortez machine to actually do the slot machine so you want jackpot or you you didn't get anything or stuff like that you can always come and discuss with us and we can help you integrating stuff and and figures out right uh that's it hope you liked it if you have any doubts any anything just talk to me later or you can stop at your booth and yeah hope to see you guys doing something really nice on this hackathon thank you yeah sure is there a q a or no okay so yeah okay so guys it seems like we have like 10 minutes for Q a if someone has a question doubt or anything yeah under yeah sure uh can you go back to like the starting of the slideshow this one starting of the slideshow next time the flowcharts this one yeah this one okay so uh let's say for the ethereum network right it's more secure because uh you need more notes to like there are many people right so you need more than at least half of the chain to uh for the uh uh request to uh get through right yeah basically when you when you reach consensus it's true and you need most of it yeah we have a different uh for different as like dab a will have its own set dab B will have his own set right yeah so less number of members also does mean that it's more uh susceptible to like monopolizing right yeah as I said if we didn't if we just use consensus so like I'm playing poker with you and Twitter guys right if I just ask okay so what's the winner and then if we have like three people saying one guy is the winner well he's the winner and that's easy to manipulate right you just have to temper it with three people but as I explained Whenever there are disputes we don't rely on the consensus of the nodes that are involved in that computation we actually engage on this verification game and then the consensus is based on the execution of that instruction that we came together as the Divergence instruction and this is done on chain on a blockchain with thousands of nodes like ethereum so I'm playing with you and two other guys poker we have a dispute it's not us that's settling we engage on this verification game and this verification game runs on top of the theorem or another protocol with thousands of nodes and then even if the three of you are lying but I'm telling the truth I can still Force the truth so uh what's really nice on this protocol of ours is that you don't need the the security guarantees is not most of the nodes it's at least one so a single pilot can enforce the correct result so we have computation with 100 validators 99 are line but the single party can still challenge them all and enforce the correct result because in the end it's consensus of the underlying blockchain that Shadows it which in case it can be ethereum polygon hypnosis even other roll-up Solutions like optimism or Arboretum thank you yeah anyway I was once okay uh for uh uh when you're using a database that database will be public right and if you're encrypting from the Cartesian machine will be will we store the key also in the Cartesian Mission uh how does it work okay so basically the Cortez machine can have the size you want as long as the validator is willing to start right so you can think of it kind of like a kind of like a decentralized AWS right so you set your application you say that your cortex machine is I don't know two gigabytes of RAM for instance and 10 gigabytes of storage and then you say I'm willing to pay xctsi per epoc validated and then on the other side you have validators that will say okay I'm willing to start this cartel machine I have the resources and yeah I'm willing to be uh to do to validate each block for the amount that you're proposing if not then you should probably raise your your fee and actually have a group of validators uh wanting that but uh going back to the storage itself so basically the validator is holding that capitalized machine which in practice is a Docker container with this emulator inside and if he wants to store like a Cortez machine that has 10 gigabyte database so that's fine and yeah the database would be sorry inside the car test machine so off chain so you don't have to pay for a lot for for storage and stuff like this did I answer the question okay awesome anyone else this is got a question anything okay awesome it was great talking to you guys and uh well looking forward to wherever you're building have fun [Applause] okay so yeah okay gonna drink in this case yes hey guys can we have full screen over here can we have full screen over there no okay can you hear us fine I don't know foreign [Music] all right it's gonna start yep hello everyone can you hear me well can you put on the headphones now sorry for the delay yep please give me a clap if you can hear me thank you [Applause] all right so hello everyone my name is Alexandra and I'm from the even spot team uh thanks for attending our Workshop today and we are going to tell you how to improve uh and simplify the user experience of your Dev and also how to go cross chain let's start all right so um why did we decide to create easy spot well obviously we faced some issues that we would like to be able to solve for example the complex web 3 user experience for average users let's imagine that you are an average crypto user and you want to take part in some stake in program let's say of climatao and it requires to stay clean tokens which are based on polygon but you currently have only tokens and not just chain so what options do you have first of all you can go to The Exchange right and just purchase some tokens but at the same time you you already have some crypto tokens in your wallet and why do you need to purchase more so another step you can for example find some bridging Solutions and try to bridge your tokens but again it requires additional steps at the same time when you are interacted with different blockchains you have to switch RPC Network in your wallet or even edit so it's also quite annoying and at the same time um when you perform many transactions you have to sign it every time after each transaction well um I can say that like for not Advanced users it can be short stopper because you have to perform a lot of actions another example let's say that you would like to perform the cross chain swap and you need to have a gas token from the destination chain otherwise yes you can complete the cross chainsaw but then you will be stuck because without gas tokens you are not able to operate on any blockchain another thing is that on board into self-custody is hard at the moment so recently I reinstalled my Chrome browser and I realized that I need to submit seed phrases to be able to get access to my wallet but then I totally forgot where it saved them and like I lost 12 phrases I lost access to my wallet and so there is an option to recovery I lost my funds but fortunately it was just you know one of my testing wallets and I didn't I have a lot of tokens there but in any case it's quite an unpleasant situation and I think that any user can can be in the same situation and also it's generally accept that hard wallets uh are more secure than any other wallets but you know that they are not quite user friendly and at the same time not all of the users can effort to get these wallets so obviously these are not all of the issues that we faced with but I believe that they have uh most relevant moments according to the market situation next one so when we have a solution for you it's easy spot it's a spot it's an account obstructions Decay that can deliver frictionless web3 user experience so it means that users don't need to switch or add RPC networks in the wallet at the same time it enables Asset Management on multiplayer chains and also you can see here the screenshot of the tweets from an influencer and here he shows how a typical defy app works today and at the same time how he thinks it should work and actually the second picture is what if the spot can provide you with with our batch transactions if the spot can batch several transactions into one and for users it will be just one click action and um let's look back to my example with cross chain swaps well I mentioned that users have to get some gut tokens on the destination chain but with easy spot it's not needed because users can pay for transactions with any token it can be stable point or any other token all right and uh also if the sport can deliver um an easier on board into self-custody for your users so they can get access to the smart wallets where the social media accounts or for example email address and it means that they don't need to set up this seed phrase this keep them somewhere and there is a recovery option as well because they can just get access with their social media accounts as well and smart wallets are more secure than Hardwoods because you can simply lose a USB stick itself so and you will lose your funds next one well it is what uh has a lot of outstanding features like transaction batching sponsored transactions meta transactions multi-chain nft supports viaton and off-ramp support and it's without kusd for users up to 1000 Euros per day and we have quite a friendly environment for developers we have updated documentation you can find it in our website and in case you have any questions you can just simply reach out to our Dev team for example on Discord or Telegram and they will be able to help you but I will show you the links later uh at the same time if the spot supports um more than 15 FM compatible blockchains and it means that your dap will be able to capture cross-chain liquidity and you don't need to deploy your Dev on any chain separately and the star of our presentation is the Builder react component this is this is a component for Plug and Play integration so I'm passing it over to weakness yeah to present it so many thanks Alexandra for explaining the etispod SDK but then now we are going into the Builder so SDK Builder is a rear component that we have built on top of the SDK to Showcase you what the SDK can do so uh so SDK Builder is is uh actually a two step two lines of code which is required for the the SDK to I mean for the Builder to uh integrate it to your front end so as you can see you can just import our npm package and then just say ether spot that's all so all the things that we have said like smart wallet all the uh interactions will be done inside the ethersburg itself so what you need to do is just write ether's word tagline that's all so so it's very easy for the Developers for yourself so that's that's how to integrate Builder but I'm I'm going to talk about the features that they're there in the Builder itself so first is multi-call transactions multi-call transactions as you can see by the name itself it's like you know calling multiple transactions into one so uh it's a smart way to actually submit the transactions so what I did on on the uh this one a screenshot is from USD I'm I'm actually swapping to highway and it's for two usdc and uh again I'm actually starting the multi-call and the away is actually pre-selected because you are actually receiving the away and how much you're receiving is is actually on the uh this one offer that you get over here so if it is 0.03 away then 0.03 is the remaining one which is which is already there then you can actually use that point zero three on the next step itself without even executing the transaction on the blockchain so so so this one can be done via multi-call transactions so uh one of our uh testers actually did it and uh you can you can see the uh uh transaction details where he actually sent two uh usdc but at the end he received 2.7 usdc on the same chain itself so he got like 0.7 usdc more than what he sent so it's it's actually kind of you know uh if if you know uh persons in share market and all you it's it's actually uh a trading that you give and you can get profit out of it also but this is this is just and is this one um uh exist an example but then uh it's it depends on the luck and the the share markets like that time the offers was like this so he got it but then uh it it depends on the luck guys so so this is Justin this one illustration but then you can do a lot more way into this itself like in innovation um so next one is chat sessions in this uh the rear component uh when you actually sign one transaction I mean when you sign from Key base to your contract call to for deploying the smart contract you are just signing it once and you are actually accessing it for 15 different chains if if you actually kind of switch Network also it's going to access that the other chain without even asking you next sign so it's just about that um so we have actually built a claim out of example for you to illustrate Custom Contract interaction so stay into s clima from any any of the assets which are there in next time or BNB or or whatever the thing is so first what happens is you you have to select the from asset and then s clima is automatic selected because it's it's contract so the minimum amount is point zero four point four USD because the uh you need to pay the gas fees from the usdc that you are going to send you you don't have to actually have the native token on the polygon itself you can actually kind of this one execute the transaction on polygon itself without the native gas token so so it's it's on the polygon you are actually submitting meta transaction meta transaction is nothing but paying gas fees via the usdc itself so the next one is um I'm going to tell you the steps that are involved so from usdc on Genesis X die I'm actually kind of uh this one uh building a cross chain to usdc on polygon first that is the first step and then from polygon it's actually uh staked into clima to get S clima so so all these steps are actually one single click away so that's that's what is the clay model example but then I I would say this is the custom contact interaction that you have to give so for example you you would have the contact API yourself which is which is there in the blockchain itself and you would have the contract address which is also there in the blockchain itself what you need to do is just register the contract in the SDK itself so that you can actually uh call the method on under that contact execution for example uh for let's say staking or yield uh protocol or something like that so you can call the contract function using this this these steps alone so what you give what you get at the end would be the transaction request which is like 2 and data which needs to be sent that's all that's all is is the steps for the custom contact interaction so the next one is um so we are we are open for Innovation so if if you feel like you can you can do something else also you you are you are open to actually uh submit a PR under this website I mean uh this GitHub a repo itself this GitHub repo is actually open source every every thing that I've talked about before is actually available inside this git repo itself so you can just scan the QR code so get the URL and then you can actually see the source code of of the package itself which I have said before so that's that's really helpful for you for the developers and I think that you can you can actually do it pretty well so this is ether sport playground ether support playground is is something that you know I I we have built so that we will demonstrate the SDK examples um in the website itself so you can you can just go into the website and what it does is um every functionality that that it is there on the SDK has been Illustrated with the code examples itself so so you just need to create an SDK inside it and and you can test it and so it is also available on test Nets so please uh test it once and then you can do whatever you want so we are we are also running Bounties in this hackathon so the first is best full-fledged SDK implementation which is like um it should actually contain most of the uh important SDK methods that are there so that that will be um that will be served as an example for full-fledged SDK implementation the next one would be best protocol interaction best protocol interaction into Builder is something that custom contact interactions just as I said uh claim out of example it's it's already there on the repo but you need to actually build some other thing so for example so we actually have 15 different chains I mean 15 plus chains that we support So any of those chains Dao can can also be included in this itself so that's it so that price money is 2500 USD uh the first one would be 4000 USD and the last one which is best integration of the Builder which is which is all frontend guys so so if if you feel like it needs something else rather than you know cross chain uh simple syrup and uh send uh this one same functionality which is included on the Builder component then you can actually build some something else and then show it to us so that's that's included and that price money is 1500 USD uh next is we are actually combining with le5 with uh the bounty to to select the best project for that collaboration so that ideas would be so Leaf 5 is actually integrated with cross chain swaps and the single chain swaps single chain swaps is like you will have the provider inside uh just see if it is leaf 5 then that is that is actually kind of valid in this boundaries for crosstain everything is valid because Crossing we we have it leave five integrated so so that's that's all available the first place is 750 USD the second place is 450 and the third place is 300. so the next one yeah so you're here uh also I wanted to mention quite important point I guess that we are not cubists in sphere and uh we have quite a solid background and blockchain development and we've been working on uh ether Sports since 2017. so and if the spot is audited by consensus diligence and we have battled battle tested trusted and reliable smart contracts so here please feel free to scan this QR code you will get all the links that we used in this presentation also uh you will get all the links to our social media networks please feel free to join us there and also we have a booth there uh if you would like to have a chat with us or you have any questions that you'd like to discuss please feel free to come to our booth and um let's build together thank you yeah so any question guys uh just one minute uh questions yeah I think so yep go on guys yeah we just wanted to understand how comfortable is sorry yep yeah just wanted to understand like how configurable is that um volume volume excuse me can you just increase the volume that's fine yeah yeah I just wanted to understand how configurable is the entire SDK uh how comfortable is the entire Secrets sorry configurable configurable okay so uh so the thing is we are all open source so whatever the parameters that are there uh as default is is is is actually changeable right because we are open source in the first place and uh the SDK configurations are all available on the docs that if you need uh for example for crosstain you will have like from stain from asset ID and all that will be there on the docs itself so please please please just look at the uh playground and the documentation for all the details or if not please come to the booth I'll I'll settle all the doubts that are there I mean on the this one config regulations and all sure so any other questions yeah all good please press thumbs up if it's all good it's just to interact guys thank you thank you very much [Applause] so then I have things done with us because yes sorry foreign that's fine that's fine it's fine thank you what is happening what is better for audio quality audio quality is the same on both okay so I can just go and start speaking and if you want to like uh yeah yeah because the camera is also there so you can okay yeah ask them to switch to Channel 2 because they're wearing that okay and if someone asks a question to me you can hear it so I know hello check hey everyone can you hear me okay great uh everything and everyone here can you switch to Workshop too so that you would be able to hear me on the headphone uh switch your headphones to Workshop too and thanks for being here with the limited internet that we have I won't be able to play my slides in full mode but we'll make do with this yeah all right as the title suggests we are here to riddle with Dune and I've planned this Workshop to be very Hands-On plan for you guys to work along with me and write some queries on you uh I hope your internet works just enough for you to do to be able to do that but otherwise we still have some content that's stored offline and we'll have a great time so I have added uh all slides to this QR code so you can scan it and get slides you will be able to access all links that are shared in the presentation so those of you would like to do that I'll just give a moment for you to do that and so how many of you are here by the way familiar with you you have used dune uh or at least seen a dune visualization can I see a Razer fans a quick razor fans please okay so few of you so you must have come across visualizations dashboards like these uh overdune and for me the best place to start for any new programming language or a technology like this is to write a hello world program so without any further delay what I wanted to do was to just go to dune.com and start writing queries so okay I don't think that's going to work um but we can continue the presentation so basically Dune has decoded tables from all kind all all blockchains that that are mainstream right now we have data from ethereum we have data from polygon L1 z2's arbitrum optimism and now even Solana so this data is a community service in a big way uh the community Summits contracts for decoding and that's how the data gets available on june.com and everything that you see on all dashboards like these that you see on dune.com uh when you go to the Dune website you see all this trending dashboards which cover the latest in all blockchains all protocols when you when you go to this website everything that you see has been created by the community and it's open source it's available for you to use uh when you click on one of these dashboards uh if it opens with good internet you get to view the query with which the data has been fetched and you get to modify that query and you know make it work for your own use case um so I am here particularly for the API we as a demon team here are particularly at East India for the newly launched API the API is still in beta and you guys get very early access to it and what the API does is everything that I just showed you all doing queries dashboards all that data is now available on an Epi endpoint for you to consume in any medium that you like in your applications directly on your front ends if it permits or you know replace your entire data engineering Pipeline with just a simple Dune query so it's a very powerful API it's a very simple API but its capabilities make it very powerful because of the community service work that's been done on June so I have the new API documentation open with me right over here and it's as simple as you go to any query that you like would like you'd like to access on the API the data from any query that you would like to access on an API endpoint you take the query ID I'm going to zoom in a little bit so on in when whenever you are on dune.com there is a query ID associated with any query that you see on June you take that query ID and you just call or execute query endpoint execute query API endpoint with that query ID which returns an execution ID then you take that execution ID and you get your data right just like that so you pass the execution ID to our get query results endpoint and you get the data so basically with just two API calls any data available on Dune is now available on an API endpoint that's how simple and how powerful the Dune API is um so I have created a sample application as well for you to show how we can go from a dune query to Arduino very quickly now that we have API access to dual so [Applause] if the internet works just fine what I'm going to do is this GitHub repository by the way is publicly available and it is linked in the presentation as well this is the link to the GitHub repository I'm going to try to fetch this code and just show you how you can use the same code to run any query and quickly build an application on Dune so I am going to make another folder I'm going to call it eth India and I'm going to go into this folder and I'm going to clone this Repository and I'm going to give it a few seconds with the current Internet that we have and come back to the presentation so um while the code is being fetched uh or on on the terminal I'll quickly go over the steps that you need to follow to get a API key for yourself so we have specially prepared a hacker guide for youth India hackers you can again get it if you have scanned the presentation already you already have the link otherwise there's another QR code here you can scan it and you will get the hacker guide we are prepared specially for you guys and it has all the details for you to get started different ideas with which you can get started and most importantly how you can get an API key so there is a form a short form that you'll need to fill up and we'll quickly set you up you'll find the API key in your email shortly after you fill up the form and after after which you also have bounties I'm going to talk more about that so I can see the code has been fetched the code for the Dune app template that I've just prepared so I'm going to show you the steps that are needed to quickly spin up a tune application using this template that you see right in front of me I'm going to open this code in vs code so this little part over here is something that developers might be able to follow uh more more easily but any of okay sure sure yeah yeah so I'm also going to try to zoom in a little bit yeah so what I yeah you can see now fantastic so what I did here was uh there is this link to GitHub repository which is also in the presentation I'll again share the QR code to the presentation so you'll have all the links in place so I what I did is I just clicked on code on GitHub I just copied this uh get URL and I cloned it into my local system right this is pretty much all I've done and to open the code in vs code I just I've read in this little line uh I'm going to move a little quickly so those of you who are not developers might miss a few steps but we have our booth right here please come to us right now we are a little bit Trans on time so I'm going to move a little faster but please come to us we are here to help you we'll get you across any step that you're stuck on we are here to help you build with the tune API okay so yeah so I opened this code in my vs code and it was the authors I am the author and um I'm going to quickly copy this environment variable file so there is a environment.example file which you need to copy to just pass the API key to the application so I'm just going to create a new file I'm going to call it dot EnV and I'm going to paste this over here so I have my API key stored with me right now um in the Dune folder just give me one second I prepared this just now yeah okay found it so I'm going to be deleting this API key so that's nothing to worry about and I'm going to paste this API key into my environment variable file which is to pass this API key to my application I'm going to save this and another change that I'm going to do is there is a file called application dot by app.pi what I'm going to do is just pass a query ID adjune query ID to this application and that's pretty much all so like you pass this query ID you just edit this query ID I have example ID right here I'm going to take this and add this over here and this template is pretty much ready just one last minute change which you would not need to do but I'm doing it for the demo over here and now now we are good to go so and I need to activate my virtual environment yeah and I can run my application [Music] I ran into an error error over here let me try to debug this okay okay thank you yeah now we're good yeah now it works fantastic so yeah this is the template app so we went from a dune query to an application just like that in a couple of steps uh this exact steps are listed on the GitHub repository and again as I said we are at the boot to help you out and if the internet works this application should actually work right away So within this application you saw I passed a particular query ID you saw this query ID being passed over here so I'll quickly show you what this query actually does so I have this query open at dune.com with me right here so this is the query that fetches the total amount of US Dollars spent by any particular address in their entire transaction history on ethereum this is what this query does so it takes an argument as an address as any wallet address on the ethereum blockchain and it gets you the total amount spent in US dollars so the details of this query uh are something that if you want to learn about you can again come to Abu then we'll definitely explain you but right now you can consider this as a black box the good part about the API is so the good part about the API is that you do not need to understand these queries you do not need to understand SQL all this work has been done by a community you take the query ID you catch the get that data on an API endpoint just like that so all the work that has been done by the community you get access to it and build interfaces on top of it with the API so I'm going to quickly show you how this works in the Dune interface I'm going to take a random address uh so 0x5 sub.edh it's an address that belongs to one of my friends and while I wait for this ether scan link to load I'm going to go back to my application okay this is loaded fantastic and I'm going to so when I paste this address here and I run this query it just fetches the data for me it fetches the total amount of US Dollars spent by this address on the ethereum blockchain in all the transactions the sum total of all their amount so right now it it's in the Dune interface it's on the dune.com interface and the same thing is now available to us on an application and this is taking a little while extra it's quicker than this uh again because of the internet as you all know the Internet situation right now so coming back to my presentation I'll come back to the application and show you when the results are loaded but coming back to the presentation uh yes we have ten thousand dollars of bounties on offer uh five applications five top applicants to this bounty will get two thousand dollars each and we have some swag for collection so you can come to our booth and see the swag that we have and we're very serious about our swag what you see here is available only for this event it would never be available again you we in fact have a page dedicated to how serious we are about our swag you can check dune.com lookbook to to see to have a look over that and so that's about the bounties and I'm going to come back to the application well it's still running because I suppose the internet um coming back to our presentation again uh so I've also attached a link to our Discord that's the best place for you to get into the Dune Community it's super active with not just our community team but the community of wizards we have built the data analysts we use Dune every day so many of them are using this for the full-time jobs now and they are all hanging out on our Discord you can come and start playing around with Dune playing around with the Dune API and you would find us there and you can follow us on YouTube as well as Twitter so YouTube particularly we are releasing some really good content uh Andrew Hong if any of you are in the web 3 data space you probably follow Andrew Hong he has recently joined us full time and he's going to be releasing some amazing content on our YouTube channel so stay subscribed there follow us on Twitter give us a shout out while you're building at East India using the tune API and you know we'll Retreat you and we'll follow you back and with that let me come back yes the connection was about it because I guess it took too long so I'm if you want to have a real demo of this application and the things that were actually planned for this Workshop you can of course come to the workshop come to the booth we would be there for all three days if you guys keep coming to the booth I'll be hanging out there late until night I'll be there building with you hacking with you so a team a team is here we have our champion community visit zero Xbox AKA Florian over here who has built the Dune Community from ground up come say hi to him come say hi to David Bell and me we are all at the Dune booth and with that I think I'll open for questions because with limited internet I don't think I can actually do more demos so uh those of you who might have some questions about doing any kind Dune or the Dune API uh we are open to taking them and you can raise your hands and someone will help you out um okay is someone from the organizing team around here at workshop two we need some quick help over here I can just use this audience questions again someone will go around the audience and take their mind or something please welcome uh yeah can you raise your hands again please under so I guess that's one of them but what about the others yes yes so the the thing about data from blockchains is it's all openly available so this data is nothing that Devon is curating it's available on blockchains openly what Dune is doing is it just making it easy for you to access it that's all we are doing so ether scan is one UI on top of the same data so if the internet was working I would have actually gone to etherscan and shown you how the same data is available on Dune and etherscan and perhaps on many different platforms we're just building a UI on top of these scenes so this is a completely new paradigm for data and dune is just trying it trying to make it super easy to you know have it in a place where you can analyze all this data in a very simple way like you don't even need to install anything you can be on any system you just need a browser you go to dune.com and you can start analyzing blockchain data data straight from blockchains guys so does that answer your question thank you so I had a chance to go to the booth so before I get to my question I just like you know that can we have like customized SQL queries yeah yeah yeah so guys okay so if we can do that let's say um I have like multiple sources of data one of them let's say is on ethereum chain or something but others are like let's say a mongodb production database or something like that so does tune have a facility where I can use like let's say uh DB like mongodb along with like some chains to analyze all those things at one place or will I have to do that yeah absolutely so this is where our API comes in right so uh before I continue my answer I'll just check with the organizing team so I have to use the same mic or is there a different mic with the headphone I'll use the same mic I need to be here or I can walk around and it still works does it still work all right um so of course this is where the API comes in so you can combine data from Dune you can take it out to an API endpoint you can get it into the media into a medium that you're familiar with it could be Tableau it could be any database it could be a mongodb database that you want to get that data into so our data is organized in SQL format so it will need some work for you to you know combine data from two sources one is nosql and one is SQL but yes it's possible and in fact we are here to help you with just that so come to our booth and we'll help you out we'll fix you up I'll just go to my second question there yeah so uh from what I heard you can be use a dune also as a data engineering platform like to set up pipelines and all right so I didn't see that in the demo so maybe yeah no no I'll just give a quick answer to that as well so what I meant by that was currently if you have to Source data from chains you have to build very sophisticated engineering infrastructure so those of you who are developers here you will know how much pain that is so what Dune does is if you want very customized data you want some exact data that you want from teams and nothing else you can simply write a SQL query instead of building that entire infrastructure now that gets outsourced to Doom so Dune is taking care of building your engineering team and Engineering infrastructure you just write the query you get the data into your own database using that and of course again for implementational details now come to our booth happy to answer I think you also touched about multiple chains so I'll drop a quick note on that as well so some of you had questions already about do we support data from different genes and do we support cross-chain data so on dune.com you will find something called Dune engine V2 which is especially meant for crossing data analysis you can actually combine data from ethereum and polygon if people have addresses across teams which is I've seen similarities across genes you can get their transaction data across scenes in a single query in a single table so this is also super powerful and we would love for you guys to explore that as well so it is possible to do cross-chain analysis it is possible to take demons data and combine it with off chain data everything's possible and we're excited to see what hackers here built with the API now that all of this is possible all right next question please okay so my question is let's say I have an empty Marketplace and I want to fetch all the nfts held by a particular user from the wallet address so for that I usually do a solidity function to fetch all the data so how is that different video tune yeah so you just mentioned the complexity that you go into to get that simple piece of data if it unit it's going to be super simple so we have created a aggregated nft table which is called nfe dot trades and this is again being done by the community so we have an initiative called spell book and we have a GitHub repository called Spellbook github.com Spellbook so over there our community is aggregating data from across scenes from across Protocols of different nfts and it is they have integrated it into a single table called nft.reads so every trade that has ever happened on any nft it's all aggregated into a single table and if you want to query data for a particular address what you simply have to do is Select star from any free dot rates where address is equal to the address that you want and it will happen in minutes like you just go to dune.com you write this query and you have all that data and now you can get it on an API endpoint use it in your application one of the problem is that when I try to fetch all the nft let's say it kind uh can you be a little louder I guess hello yeah I can hear you okay so another problem is that uh let's say the wallet has 100 nfts so for every nft I have to you know make a different RPC call so will that be same for the Dune or the Dune simplifies it also um so I think this is a question you would have to come to our booth and we'll be happy to go into further details of this yeah okay thank you thank you uh more questions all right I'm trying to look into the back if anyone still has any questions um in any case uh you know our booth is okay we have one question also asking about your community program so you have this Wizards program like what's the like what's it like like you have like a progression that you have certainly they talk about that right so [Music] um you just mentioned Wizards so uh the community that has grown around you and people who are actually doing data analysis on you we call them Wizards and because it just feels magical to be able to get data from things just like that and when you see we have a program for visits I wouldn't say we have a program for visits but we do value our community very highly and there is an entire Community team at Dune dedicated to just supporting our visits so if you start working on Dune if you start doing data analysis on Dune or even using our API now so yeah so you would be in our visit community and I mean this is something to be experienced so just come into a Discord hang out with us build with us and you'll get to experience what it's like to be there so that's the answer to your cash yeah all right okay uh thank you so much everyone for your time and please come say hi to us at the Dune Booth we would love to help you build with the Dune API thank you so much [Applause] foreign foreign foreign foreign [Applause] foreign yeah this one oh no that's HDMI uh no yeah it's HDMI but ethernet okay let me give me a sec I will give you a good Wi-Fi then sorry we'll give you a good Wi-Fi then yeah that would be great because like from the morning till now the Wi-Fi yeah no no we'll give it to you okay huh yeah we need when you're connecting with that uh we have one Wi-Fi available yeah it is I'm trying to connect with one yeah we are like giving them one of the working life axis all right I like is there any way I can just share a window yeah yeah you have that thing okay so maybe I can just update to 20 show for now maybe I could let me just press interview yep okay it's okay uh sorry actually I just want to basically share only one yep you want to show only one yeah I mean like basically I want to share this one and then read from here in case I need something okay but it should be presented like this uh maybe into something in the not much available to Max settings and the problem should be here use as a optimizer RGB okay so what you have presented like so oh just like last time so it got extended I guess I mean it works I mean no problem I can keep this one here and this one okay not there do it perfect it came out yep you can see it from here oh yeah sorry thank you um yeah yeah perfect so you can like switch it from like just see how you're switching it up yeah sure let me bring up the mouth this side okay yeah good perfect so if I speak to the market will automatically it will be fine right sorry should I thought I could find everything yeah it's good to go okay you have to just hear this okay okay you'll be here yeah yeah I'll be here you know yeah yeah please go um guys put your headphones on for listening and make sure that you are on channel two uh can you just confirm if I'm Audible sure thank you yeah so hi everyone I'm sahal and I work as a developer Advocate at life peer and today I'll be leading a workshop on building the future of video with live peer and this Workshop we will be covering on what is live pure who can use live pure what problem does it solve and how to integrate life pair into your application uh so before that we know that approximately 80 percent of the internet traffic is accounted by the video this means that the large majority of the content over the Internet is in the form of videos such as streaming video on demand video sharing on social media and also online video calls this is the reason why our blame our brain loves the video because it is programmed to retain the visual content better than the page loaded with the words usually an average viewer remembers 95 percent of a message when it is watched whereas only 10 percent when it is red however there's the one catch to the video sharing it is very expensive we do the streaming and also transcoding can be very expensive to the applications who are building for the building for the users and one of the main factor is the amount of data and the bandwidth that is required to transmit receive high quality and transcode their videos in addition to this the video is streaming and transcoding requires a specializer technology and infrastructure such as the powerful servers and high speed networking equipment and furthermore the video streaming transcoding can be a resource intensive meaning it could increase the cost of hosting and delivering the video content and yeah so it is very expensive and the solution to this problem would be Life beer lifebeer protocol is a decentralized video streaming and video on-demand platform that uses blockchain technology to enable anyone to easily and affordably extreme live videos uh to the global audience it is built for developers and it aims to increase the reability of the live and on-demand streaming while reducing the infrastructure caused by up to 50 times who use this life beer like who's life before well the life of Life beers for developers who want to build application on top of life here and uses its broadcasting or live streaming feature or maybe on-demand feature to serve the video on a decentralized network or it is for users who want to stream the video of maybe gaming coding or any entertainment into your mobile phones using the live viewer at last it's also for broadcasters such as twitch or YouTube who have a very large audience and also very large creators that would significantly decrease their bells and infrastructure costs and how does Life beer work uh well when you broadcast a video the the broadcaster sends the video to the live viewer Network and live peer Network transcodes the video uh using the nodes that is powered by the live peer and it is deployed on orbit from blockchain after that the video gets distributed on a global CDN and after that the users will be able to play with the transcoded version of the video so for those who don't know transcoding is basically a process in which the video gets transcoded into different formats for example if it's in a 4K the video would be transcoded into 240p 360-bit and 1000 ETP just to ensure that the video gets placed properly on different devices internet connection and also browser Black Beer growth has been very tremendous this year we had over 2.7 million transcoding minutes per week and yeah so this was about life pure and we have both live pure apis which you can use and one of the best ways which you could interact with the live peer Network would be a live pure Stadium live pure residue is an open source dashboard for interacting with the live pure Network it is used to create and also manage developer API Keys assets and streams of course completely open source on GitHub and basically most of the manufactory video applications are currently powered by live peer for example hello01 beam lens view bonfire stream 8. TV and many other application and yeah so this will just overview of live viewer on how does it works and how you can use it and now I'll basically go through a demo app on how we can basically integrate a lifebeer into a sample application well let me just come back [Music] excuse me oh yeah no problem thank you yeah so I just go through a tutorial on how to use live pure and to your uh react application and for this we would be using live pure GIS yeah so live here JS is a SDK built on top of live pure residue API uh it is basically it provides the home ready-made Hooks and also components to easily build applications with react or maybe negative and live beard so the first thing which we're gonna do is open up the terminal and go to the directory where we want to create the application in our case we want to create a folder name it for example eat India and then inside of the folder we want to create a react application so I'll just say npx create a react app and then dot which would create it inside of this folder so this will create as a sample react application and until it's completed we can go to the live period.cu which I mentioned earlier and here you have to go ahead and create the account it's pretty easy and you would basically have a transcoding minutes of 1000 basically I think it is enough enough for many of the projects but if you go over it you can basically pay which is like very negotiable amount like 0.001 per minutes but yeah once you're here and the life will receive you you can go to the developers and click on create the API key you want to name anything for APK and then also a low cars and here I want to allow from everywhere and also give a full API access to the API and then you want to create it and then copy the token ID uh here for now and now let's see if I were yeah so now the react application is completed we can run we can open it in the weave code yep so this is our react application let's run it on a local div Network [Music] yep so now the application is running what we want to do is we want to install the live pure JS which you can do by running npmi live pure flash react and this would basically install live purchase into our application until it's completed we want to do a little cleanup into our application so I would delete the app.js app.css the test files the logo here and also here and index.js I would just remove the last port here and yeah that's it coming back to the app.js I would remove logo and up.css so we won't create a very simple react application and foreign the code to this one it's a very simple message basically for now but yeah so once the lifebeer.js has installed in our application we can come to the index.js and basically create a client to do that we want to import create a react client and import it from live view react and also Studio provider Studio provider and at least you want to also import the live pure config live pure config so we have imported these three packages now and here we want to run cons client is equals to create a react client and here we would put a provider Studio provider and here we want to put our API key which we created here if I just copy it and then basically put the API key here API key yeah so once we have put the API key here let's close the bracket and yeah perfect now uh at last we have to basically remove the strike mode and also wrap application with live pure config Life beer config and then the client would be client and here we can import the app so yeah [Music] consequently yeah just come here get started and yeah this is it called back the API key and then paste it here and yeah so now we have live purges integrated into our application and we can use the hooks components and everything just to test like if everything is working fine like if we have integrated successfully we have a hook named lifebeer provider so we can import that use live peer provider and here we can say cons provider is equals to use live feed provider and here we want to put our provider name so we say provider Dot basically get calm fake dot name and yeah once we save it here we should have live field video yeah which means the integration now works fine and our application is integrated with live here and with the multiplication we want to basically create a very simple uh upload and transcode uh video so what we can do is uh we want to use uh first maybe let's put it let's create the input or let's first create the state const video if it goes to set video [Music] yep yeah so and here we want to keep an input and this input would have a type file which on change it would be basically uh fed on the estate which we have the FED Video One and yeah that's it let's save it and now we have the file picker and for now we can keep it like that and then here we would have also a button like create asset and then on click for now we just yeah for now we can keep it like this yeah so we have a file input and also a button so here what you want to do is we want to basically import the use create asset which is the asset to create a video on the live peer Network so we see const I mean is equals to use create asset and here we want to put our video so in my case it's going to be for example sources and in the sources you want to keep it like it's an array so since we have only one video so I just put it this way and here we address you have a name for example what would maybe we can keep this one video dot name and also at last you want to also put the file so we say file is equals to video dot nip yep so this would create an asset for us this hook and just to make sure that we get the correct responses you would also add a few um yeah we add a match weight and we put it like on create asset and then we would also add a data that you'd get in response I will have assets this one and maybe progress if in case we need it and yeah so pretty much this is the hook which we want to use and here on the button click we can say if the video is not there you can disable it oops yeah now it's working maybe I can just come here use create assets so this is documentation which you can use like you can have all the assets and hooks which you can take a look and yeah so this is the code which we would be basically using it like there methane colon okay yep let me remove the type of script one save it and yeah so we have the button disabled it and yeah so now it should work just to see if the progress and everything we want to also add this one and error message and let's put this here and save the file cool so now if we have to upload it yeah and now so let's come here click on choose file this will open up our video for us maybe I can find the video thank you our weave.net [Music] okay we do have a demo video that I don't have a demo video to upload it but basically it's once you choose a video uh okay yep got it so we have a video now once you have the video you can click on create asset and this would basically upload the video to the live peer Network and transcode it and once we have the video back it would basically show us here so currently it's been a uploading process we can come back here close this and go to assets yeah so this is how you'll be able to create an asset using live peer.js and one more thing which I want to like add to this workshop and that would be completed and basically the player component the player component is like easy to use uh SLS player which you can use to play the videos on the live peer JS so for that we have a guide on how you can basically play back the ipfs and RV video as we know that both ipfs and Orvis are not cdns they are storage so in order to play the video properly without any buffering basically you would want to use live pure it would play back the transcoded version uh for us so we have already set this up and I think yeah so you don't want to go through that one but this is how you'd be able to also uh transcode the videos from ipfs and or with just to show you an example uh we have a few I put some examples here like our weave and if I basically put the or with link here it would take a minute for the video to get transcoded and then save it into the live period Network and once then you would be able to basically play it just in the case I can also live here and then the store this is an example application so for example if I want to play this video the video would be played actually so this is how the lifebeer transcoded it would play the only type of video on either on ipfs and or with so this is an example with the orweave that any size it would be transcoded and then playback the most optimal version similarly like this one or this one I think due to bad turn it they don't play it but yeah it should work actually and yeah so this is regarding the live peer I hope you understand on how to use them and yeah let me know if you have any questions yeah any questions cool so I think we don't have any questions which is good but we are at live here Booth if you need any support during like tomorrow or day after tomorrow we would be there and yeah thank you very much okay or something foreign [Music] [Music] okay can you guys hear me okay cool okay so let's just start I think yeah okay um so my name is aniket and I am from the remix team uh remix ID I hope uh some of you have been worked on that so I am going to basically explain that how you can use the remix for the hackathons okay going further okay just I would like to add that at the end of this session there will be a challenge where there will be some questions and they should be answered depending on the session flow or session slides so they will require some of the optimize Earth and you guys can scan this uh QR code or the open this URL which can help you to get the required Optimizer to perform the challenge perform the challenge because that will be one contract interaction so you can just open this link it will open one hack MD document you can put your address there and you will get certain amount of optimized in that address okay so let's moving further okay so we can see that how remix can be useful when there are such hackathons like at India so in the hackathons there can be the teams which wants to learn learn and develop some things very fast or like they are kick starting a project or like collaborating together within the team then there can be like they will be needing some importing of files and then they can export some files for sharing it with some somebody else online and then there there can be a chance that you are developing a project which is requiring you to deploy a particular contract on multiple chains then it it can be that you are working with certain Frameworks like hard art foundry or this truffle so you can combine the those Frameworks and mimics both and at the end there can be a way where you can just share one UI for your smart contract and it can help maybe your judge for that your code is working on something so let's moving on these things one by one okay so this is um the latest remix ID home page this is the first page you see when you just land on nimix ID and you will see that remix provides you certain default workspace with certain list of files so that you can just quickly start with your development so there are some contracts there are some js files there are some test files in solidity and JS also and if you are like very beginner and you are just starting the things with the web 3 word you can just go to this learn section where there is this remix Basics and you can just click on get started it will take you to a plugin called learn it there you can basically check out check out the remix basics there are multiple tutorials you can go through them one by one and apart from the remix there are other tutorials so you can just check them in the Linux itself there can be like solidity beginner course or like you can develop the irc20 token or the one nft and then um so I would just detail out that how this course work if you will go inside a course inside a solid beginner course so what will happen um there is some description given for a particular concept like here on screen you can see that uh there is a detail about that how you can use the enum in your smart contract and then after giving that theoretical detail there will be one particular assignment on the bottom of it which will ask you to perform certain step on the remix ID itself and then uh it will basically require you to write some code so you can just write that code and check your answer so there is this button which basically helps you to check your answer is right or not otherwise if you are just stuck and couldn't find any answer you can just click on show answer and if you are very very new uh and you don't even um have come across with the remix ID before so you are using a plugin so you can always go through these plugin documentation here you can see there is this uh carrot icon you can say and then there is this documentation link so you can just go to that documentation and you can check that how you can use that plugin also if there is a green check mark on the top of of a remix plugin it means that Remy's remix maintains this plugin remixes like maintaining the code of it and they are doing everything here and there it is not an external plugin all developed by any third party so this is a plugin maintained by remix moving further if you are just starting with the project so you can see on the Home tab of remix there are there is a this section which says get started project templates so there are particular templates uh you can see here there are blank template and then this default remix template there is this erc20 template and ERC 721 templates so you can just quickly click on one of the card and it will just load a set of files for you along with the contract so here I have I am showing the example for erc20 so it will just add a my token.solve contract which will be having the erc20 code and then there will be like scripts which can help you to deploy that contract and there is this test file which is uh basically containing the test cases uh in the in a solidity file itself moving further so this was one way that you can just create a workspace which is already there but if you just want to customize your templates your workspace templates so you can just use these icons here there is this plus icon and then this create workspace icon will also open if you will click on this hamburger so if you will click any of the those options there will be this create workspace model and if you will choose a template from open Japan category so for now this customization is available for the open Japan only so you just select a template from openj plane and then there will be these options where you can just customize your templates so you can make your make your token main table burnable or possible which are very common use cases now and then you can also decide if your contract can be upgradable or not so you can just select one type of contact upgradability here and you can further click on OK and yeah here you can select the option and this will just load the updated contract code in your workspace okay then during a work during um a hackathon you need to work within a team so you may be collaborating on a project so remix supports some of the git operations within the browser itself so let's talk about the cloning so you can just click quickly click on this hamburger icon and there will be this clone option which you can um which you can click on and then there will be this model where you can just put your GitHub repository link and it will just quickly load all the files from that repository in the remix file explorer plugin so this is very quick you can use it anytime during the hackathon come into this this uh okay so when you are working with the git you are definitely working with lots of the branches so that is also provided within the remix you will see this uh good section git Branch section on the bottom of file explorer plugin on the remix and then once you click on it it will show all of your branches which are there on on your git repository so you can just quickly switch between them these these was the uh some initial operations and then if you are looking for more elaborative options like pushing and pulling some repo so there is this digit plugin which is there uh on the remix ID itself and it allows you to do the GitHub operations in the browser itself so there are some dedicated cards here you can see and you can expand one of the card according to your use case you will see that there is this GitHub setting so basically if you want to perform something with your git repository you have to provide certain GitHub credential which are there only in your browser itself so you can just go to change the settings and then you will see this GitHub access token section on the settings section of remix ID there you can just provide your username and email and some at some places you will require a token also so those description is given here already you can just read out that how you can create one just token okay further when you have just cloned a project and you have activated the digit plugin so as soon as you will update a file you will see that I have added one comment here so those changes or the changed files list will appear on the digit plugin and if you want to just check any time that what it changed in that particular file you can just click on that particular file name and it will show you the side by side difference that what is changed in your uh file and that is completely online on the browser remix ID further you can just add your add your files you can see these plus icons here so you can just add those files and then you can just go to the commit section and provide a comment message I have provided the test commit message and you can just commit those files then there is this last option where you can just update your GitHub repository online so you can just select a remote branch and click on push button so this will be updated okay apart from the git if you are working on a project and you are just looking to import any file in your existing project so remix provides that also on the Home tab there is this open file button which basically allows you to upload a file from your local computer or local device further uh if you want to import some files from some of the online resources there is this GitHub just ipfs and https options you can click one of them and you can provide the link online Link of that file and that file will be loaded in your um in your workspace if you don't want to load the files in the workspace and just want to use in your code files so you can just write these import statements so first import statement is for the npm modules this is very common uh throughout the Frameworks and then if you are just looking to pick up file from the GitHub so you can just put the complete URL of GitHub and it will just pick that file also and then there is this common way of importing the relative files you can you have also the options to export a file as a gist which can help you to show that file via one URL so whenever you go to your workspace you can just right click on a file name and there is this option published file to just and once you will click on it it will just ask that you are going to publish it uh publicly and once you confirm it it will just publish that file on the gist and then it will give you this URL you can just quickly open and check out that if it is it is properly published or not and then there is this GitHub icon you can see on the top of your workspace files which basically allows you to export the complete project as as a as the guest uh just uh URL so it will basically export all the files within the contracts folder scripts and test all all the files from those directories will be exported on the exist and you will get the that particular link where you can just share those files with others okay coming to this compile contract and running a script so there is this traditional way if you have worked with the remix before so you can just see that there is this common button using which you can just compile the contract and for running a JS or tscript you can just right click on a script name and you can just click on the Run so that script will be running so remix support the JS and TS both the scripts now and then there is this recent addition there is this green play button you see um so if you have selected a solid solidity file so you can use this green play button to compile that file quickly and if you have selected the TS or JS file in your editor so this same particular play button will help you to run that script so you don't need to switch between the plugins you can just quickly uh quickly click on this play button on the editor and then there is another way to just quickly compile and run the script so basically you can use this if you want to attach a script execution with a contract compilation so what will happen that you will write this custom Dev run script Nat spec tag and you will provide one script path here and what will happen that as soon as you click on click the control shift as keyboard shortcut so you can just quickly edit your file and then you can just click Ctrl shift s so it will just compile that file and will run that script so a script can be can have the logic to deploy a contract to run the JS test cases or even verifying the verify verifying a contract on The Ether scan so that is also possible by writing a script on the remix so you can just quickly uh make the changes in your file and then run the jss script okay then there is another way where you can just share your state of transactions with others so remix provide this transaction recorder here so if you are working on a project and you are like performing 10 steps and then you want that your teammate should be uh on the same level to test out some quick things so you can just uh go to this transaction record instruction and you will click on save so it will basically save a scenario file scenario is basically mentioning that uh mentioning all of the transaction that you have performed you can save that file and you can share that with your teammate and your teammate will open that file on the remix and he or she can just click on this run button here and he or she will get the same list of transaction executed automatically on that particular contract so you don't need even that particular contract or you don't need to compile that contact you just need this scenario file and all the transaction will run in the same sequence here and you will get this log of running the transactions in the remix terminal okay coming to this part where you are working uh with a with some framework which is like harder truffle or Foundry so remix helps with that also so there is this uh npm module which is remix D it helps you to connect a project from your local computer to on browser remix ID so you can just go to your project directory on your local computer and you can just run the image D command and it will start basically a websocket channel and then you can go to remix ID you can connect click on connect to localhost it will show some instructions and you can click on connect and it will load that project from your local device this will be loaded under the workspace localhost so that you can always or you can always remember that you are working with your localhost and not with the workspaces which are online on the remix and then uh suppose you are working with harder framework and you have connected your harder project with the remix ID so when you will go to the solid compiler you will see this new uh option of enable hard hat compilation so what it will do it will basically compile the content on the remix and for the hard hat also like when you run the npx hard hat compile command it will do that automatically as soon as you click on this checkbox and this comparison will take place using the configuration which are which is set in the solid compiler plugin itself and then you can you can just go from remix compilation result and from harder comparison result there is this refresh icon so anytime you click on this refresh icon it will load the compilation result from your local hardware project and then there are these specific providers for the Frameworks so all the Frameworks provides a certain local chain and you can use these products to connect with those chains you need to provide these Json or PC endpoint and you can see that this Foundry provider provider has loaded these addresses here okay so remix also provides some L2 providers so you can use the optimism provider or the arbitrum provider or if you want to use any custom Network so you can just click on this plug icon it will take you to the chainlist.org website where you can add the other uh other network and you can just connect with them using the remix ID okay so there are some more editor features which are provided by remix ID one is that if you are you have just messed up your code and you just want to quickly format that so you can just right click and click on this format code there is this keyboard shortcut also which you can use let me exploit the auto complete when you just type so if you just write import you will get the option of open Japan and as soon as you will type the path you will get the other options and this feature basically provides you the inline gas estimates here so as soon as you write some code you get the gas estimates and if you you will close all the tabs in the remix ID you will get these uh keyboard shortcuts and there are some random features that remix support the console.log and then you can load a contract from GitHub to remix just by changing this URL so you can see just that I have just updated github.com to remix.thereum.org and it has been loaded here you can just quickly use the library methods with the remix ID so there are web 3 and ethers and other remix libraries which you can use so here I am I have shown this method which can help you to quickly convert one string to bytes 32. and then if you are done with your uh smart contract you can just quickly go to One Click dab plugin you can select your uh contract here contact should be compiled and deployed and then you can provide this deployed address you can click on generate dab it will basically create one unique link for you which you can share with anyone you want to allow the intermission with your contract so if you will just open this it will open this interface where you can just read and write the contract methods okay so that is it for the workshop is there any query from anyone okay so there is a quick um remix challenge if you want to perform so you can just open this link and there will be the four questions which you can answer and then you can create a zero knowledge proof using that so as soon as you open this link you will get all the instructions there that how you can perform that challenge I can try to open it here also so here you will see you will see these four questions you can find their answers and then you can go through these tips which are described during the workshop so you can just clone this repo in the remix ID itself I can show you it directly on the GitHub and then you need to go to this script this compute.js this is script would basically help you to compute the zero knowledge proof so you can go to this compute please clone it within the remix ID because you need to perform some contract interaction so you will clone it on your remix ID and then we'll open this file and then you will go to line number 52 where you need to update this nullifar value to some random value this should be unique for you and then you can put the answer of those questions within the course here on the line number 54 55 56 and 57 so you these answers are case insensitive so you can just put the answers here and then you can run the script in the remix ID as it is it has been explained that just click on the uh click just make a right click on the file name and you can just okay let me just do it with you so you can open the remix ID you can go to clone foreign wow okay it is taking time for me usually it is not like that okay seems hanged a bit okay so it is cloned here and then you can go to Scripts you can go to compute and here you can just update this value to any random value and you can put your answers here within the codes like so here are the questions in the hack MD file what is the name of the plugin that allows the get operations and then this one is about the net spec tag and then this is about that the workspace name when you connect a project using remix D and then this one is a one non-technical question so you can just put the answer of those four questions here one by one and click right you can just right click and run it so if you will put the right answer only then it will run otherwise it will just fail so if I just try to do something like that it will show you the logs here on successful completion yeah so I have one put the right answer so here it is showing me this error so you need to put the right answers and once you will put the right answer and run that script it will basically create this file in your workspace which is a zero knowledge proof and then you once you submit that proof so it is clear that you know the answers but you don't need to disclose the answers and then you can just go to this plugin and connect to optimism provider it will require some optimism health so if you don't have them so just go to this link and drop your ethereum address you will get some optimism to perform the transaction and then you can just run this script this script will basically submit your zero knowledge proof and as soon as this will be successful you will get one nft minted like this it will be looking like this which is like limited for the ath India and you can see always these remix reward nfts here on the remix reward platform so there are more other people there are other nfts which are distributed so these are the just the remixes they may take some time to load so you can get one of these nfts does anybody need any help to execute this challenge okay and then just go here and select this optimism provider I don't have metamask here so this will not work for me okay then I think this is it so here are the remix links and we are most frequent we just provide most frequent responses on the guitar so you can just put your queries there and this challenge will be open for some time so you can just try out in some time so this is this hack and be document is visible out there okay thanks for your time maybe I could just do this 