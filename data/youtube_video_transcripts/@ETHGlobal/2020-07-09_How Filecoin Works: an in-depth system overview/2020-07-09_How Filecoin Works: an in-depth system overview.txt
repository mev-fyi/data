okay twitter is up and stand by stand by waiting on youtube and we're good cool awesome sweet well thank you everybody for showing up and coming up to this uh in depth on file coin um i i definitely won't talk too long enough on this over to one right away um but thanks for so much for coming and appreciate the flexibility of course just as andrew mentioned and uh yeah get this kicked off hey everyone uh great to see you uh again sorry for the for the mix up that was uh totally my fault uh on on time zones uh uh very excited to get started um i think that this is going to be a useful uh discussion um as a a kind of overview of uh all of filecoin uh really thinking about the whole falcon network um the project um and then kind of walking through some of the core uh kind of fundamentals about uh about how uh how falcon works uh the way i'm gonna structure this workshop is that it is it is uh primarily it is mostly conceptual um and i it's um i want to have some amount of q a uh to help guide what what is confusing or what uh people are curious about uh but there is kind of a lot to cover so um what i might do is i might take uh i might go through i'll be going through a few sections and then i'll kind of pause for questions here and there um uh definitely i'll be checking chat so just keep throwing your questions on chat um and as i um when it's right i'll kind of pause to to incorporate some of those questions um but i'll kind of keep moving through uh through all of the sections uh great so let's uh and i'll be sharing my screen for for most of the time most of the time all right can you confirm that you can see the screen that's moving that looks perfect uh great so let's see i know it's there we go uh so so i'm not gonna introduce falcon very much uh other than um i think the the best the best introduction is just the the explainer that we have um on the website so i'll take you through it uh i'll mention the you know mission of popcorn is to build a decentralized efficient and robust foundation for humanities information that is definitely there's a lot embedded into each of these concepts so when you think about decentralization there's a lot of uh pieces of attack that that are when we think about efficiency uh think about markets and and um uh high performance uh computing and so on uh when you think about robustness think about um networks that are uh partition tolerant and networks that are um able to have lightning liveness through uh through all kinds of um kinds of problems and uh getting um robustness of storage based on on replication and so on um when you think about kind of foundation you just think of uh stable building blocks that the people can build applications and other systems and services on top of so think of a protocol that that is meant to uh over time uh achieve a good set of primitives that won't change and then when you think about you know humans information uh really it's a very broad broader category but you know i think everything from very large volumes of data to small dynamic application application data and so this is of course a massive massive mission um think of the falcon project as a long-term effort to to achieve all of this uh on day one it's not going to achieve everything um but we're building towards it uh in in all kinds of uh important big big steps uh along the way and different kinds of things will will work um uh you know to different degrees uh at different time times in the in the project's history uh cool so i'm gonna just use the this explorable i think i'll link it as well so you have it if you wanna if you the zoom distribution isn't loading super well let me um find the chat screen and i'll just kind of play it here so hopefully this will this will work well it's about four minutes all right sweet um so hopefully that was uh that was useful um i'll close this for now and we may return to it uh one important piece here that uh that's kind of described through this is um uh the whole kind of layout of different agents right so there are clients that are trying to store data and there are uh miners that are the storage providers and content distributors uh of course the the this virtualization is visionary and aim and shows kind of a whole very large network uh of course on day one we're not gonna have a huge network like that we need to get to that right so uh the process of growth of the network going from from zero to sixty we want to do that as fast as we can but it'll it'll if you think about how networks grow on the internet it'll start in a few pockets and then over time expand uh and demand for for that services it's what's going to pull it into into various regions there's a lot that we can do to stimulate the adoption in a bunch of areas um i might touch on some of the work that we're doing there um but uh but at the end of the day it's it's a it's gonna be localized around uh uh based on on demand and the demand is gonna follow applications so applications that that are built and maybe applications that you're building um with are the kinds of things that will kind of pull uh the network into certain regions both in terms of storage and long-term archival and in terms of delivery and fast um uh fast distribution of content uh so one of the one of the things you you saw in the in the um in the visualization is kind of the the difference between storage miners that are these large players that have lot lots of uh storage space and then kind of retrieval miners who are more closer to the users and trying to distribute the content as quickly as possible and so that that difference is an important distinction that will uh that will touch in a little bit later sweet so let's look at um so this is i was trying to to think about how to how to represent um all of what is um uh what is file coin in a um in kind of a diagram and you know it's really a lot i mean in reality like these kinds of um blockchain networks in general are are extremely complex and and they're large systems that um that are uh embed a lot of different kinds of functionalities uh within within a single thing um you can you know think of uh of ethereum the same way you can think of um of other blockchains in a similar similar kind of way so the what kind of like these are sort of the sections of this of this discussion um i'll kind of touch on the you know kind of the basics of the protocol on the network first and then work our way around touching on the blockchain uh kind of the nature of the decentralized market um then we'll talk about kind of the the storage cloud aspect okay great like um you have a market you can store data and how do you make that um um really useful and and verifiable and so on uh then talk a bit on about app platform uh stuff i might defer a lot of that to some of the other workshops that are that are happening um we'll touch a lot on kind of how to build the applications um i'll focus a bit of the discussion here mostly on just kind of what the what the performance characteristics of those those kind of serving those kinds of users uh represent uh i'll touch on also the the nature of the economy of falcon so 500 at the end of the day an economy that um that has to work uh and so thinking about the agents there is a is an important piece of the puzzle uh then i'll i'll touch also on the ecosystem that is uh that is growing uh around popcorn and and some of the um the various organizations that are that are uh participating and and then now i'll kind of finish i probably won't touch very much in the open service stuff i'll uh sprinkle that in through through the rest of the talk because it kind of relates to a lot you know with uh um with the rest of the uh the rest of the discussion uh sweet so let's let's dive in um one important thing to to think about um in terms of popcorn is that at the end of the day it's a it's a peer-to-peer permissionless uh network so that means that parties are gonna be um are going to be honest rational and malicious that's kind of the model the model for them where um hopefully the majority of the of the parties are are rational and the the power of say malicious parties to that just primarily want to want to expand resources to to harm the network is limited and bounded so all of the all of the blockchain systems uh make some assumptions about the the resources that say attackers and adversaries have um but you know it there's a still a big distinction between honest parties and rational parties making a network that works for rational parties to provide a useful uh high quality of service um is is quite complex and so that's where a lot of the mechanisms for how um how certain uh messages work how certain uh proofs work uh how rewards work and so on that's where all the incentive structure design uh comes in is in in trying to make sure make sure that the the rational case for all parties for the various types of minors for the various types of clients and so on uh works out all the end during that entire period also making uh making sure that the that attackers that are just trying to to harm the network are bounded in their in their um in in in there are like reasonable balance in terms of in terms of attacks uh so when you think about an hour like this and you know this is the same for for um for bitcoin and and ethereum and iphones and so on you know you can you can think of it as um anybody in the internet can can join and participate at the end of the day it's uh these are protocols that anybody can can implement you can write any kind of software um against this network and send any kind of messages so you have to be ready for all kinds of unexpected things that might occur and you have to build the system and the project uh in in a way that that is um where all of the um all of what you're doing is well specified you're using uh good standards you're yeah and you you're you're know you know that um if only good internet development uh internet protocol development practices uh in terms of uh structuring the the protocols themselves knowing that other people are gonna run run code and change the protocols and do different things um and so your protocol should better be be robust against against things like that so with that in mind uh one of the big parts of of the entire falcon effort has been trying to specify a a you know a system of this magnitude i think um every single blockchain at this point uh has a kind of the the level of work and effort that goes into kind of fully specifying that system is is really considerable uh falcon is the same um and we have a number of different artifacts that we use to uh to try and describe various aspects of the network um we have a large effort to kind of consolidate all of that within a single single document that we you know define as a spec but as you can imagine and the complexity of these systems and with you know hundreds of people working on them and thinking about them and so on um that's a living organic system right and so the same the same applies to to ethereum bitcoin and so on and uh i think worth noting as well uh when when you think about building a layer one blockchain with a vm with um and then with kind of the the complexity of of the consensus protocol of five coin and the the uh storage market and retro market and so on the layers of complexity start adding up uh pretty quickly and so you end up with with um with with a very very large large system uh this is one of one of our big learnings along the way has been just the the immense value in in drawing very hard boundaries as much as possible and trying to build totally decoupled decoupled systems uh where the secure assumptions don't bleed through that's very very difficult because you end up in a world where even one slight change in one area might accidentally cause a change in another another part um so this is one of the one of the reasons many many systems that build on blockchains are quite complex to think about and reason about because the security of some some contract running on a chain depends entirely also on all of the security characteristics of the of the blockchain itself so all kinds of attacks that might work at one layer have to be considered as kind of the higher and higher layers so so it's quite difficult to to yield abstractions that are that won't uh uh won't leak through uh and this is why you know things like um this more scalable chains and so on are headed in the direction of decoupling functionalities so uh i think one of my my favorite directions is is how ethereum 2 is moving towards having a beacon chain where this is primarily about hard consensus that's proof of stake oriented and and providing randomness and doing that at that layer only and then deferring all of the kind of um contracts and transactions and so on to two other layers uh and so i think that's a very promising direction and one that uh that i would likely likely follow so there's a document that you can you can look at which is is the spec and so you can you can find this in this link i'll drop it on on chat as well uh though warning this is um given the kind of velocity that the team has this uh has gotten out of date and uh is in kind of some um in between state of of reflecting the the latest and uh and not there's a big push to to update all of this around uh so that when while when we had made it this is like a really good reflection but just warning that if you start diving into this into this into this document um some parts of it especially the actors and the virtual machine and so on are um are not well specific or are out of date and so um yeah i think uh uh yeah read this document with caution it can be helpful in terms of um giving you a good conceptual understanding but but don't rely on the on the details yet uh instead kind of refer to the to the actual code implementation so if you if you have to dig this deep into into five point i imagine most of you will never have to do this throughout all of hackfest but if you have to do it and if you have to kind of dive into something um just make sure that right now like code comes first rather than a spec um simply because a lot of things are moving very quickly um and and uh our team hasn't gotten to propagating those those shifts back into uh into into this document um good with that warning uh in place i also want to mention a few other kind of artifacts that are that are useful to specify um the protocol in general uh one is um there's kind of this this uh um just broader kind of like research oriented paper that's kind of like the the like if that coin is is is z cash think of think of this paper as like the zero cache version which is kind of like the conceptual um cryptographic protocol you can you can take a look at that paper and um a lot of the a lot of the details are are right um the actual proofs and some of the constructions have shifted because we um we found much better ways of doing things and we found much better personal replication and so on and so there's been a kind of like years of really good research work that has happened on top right so you can think of this as kind of like a if you think of the definition of ethereum um uh it's not like the very first uh first version of paper so again read these these artifacts with uh knowing that the the system has shifted and has evolved um a couple other things that are useful are we have a a set of constraint solvers based approaches to to picking uh certain algorithms like uh producer replication tend to be uh then to imply a lot of things about uh about the system and so those are um we end up we ended up building a bunch of tooling to help us decide and pick uh certain algorithms based on um you know kind of the set of choices and um this is uh in progress as well we're we're working on a on a kind of visualization diagram that shows kind of all of the different components of the of the entire system um and kind of you know whether the spec is up to date whether there are tests that are independent uh implementation independent and then whether each of those components has been implemented into in in each of the implementations and so that that dashboard diagram will be pretty useful that'll probably go live in the next um two three weeks or so uh great so the let's uh let's dive into kind of the conceptual layering of of the system so think of think of file point as you know a set of nodes i'm going to describe a bit more about those in a moment but that have a way of reasoning about files and data and then some subset of those nodes have a a set of protocols associated with running the filecoin blockchain and that includes kind of the virtual machine that that processes um uh messages and think of this as the as the kind of evm contract layer um and then uh on top of that then we can reason about accounts wallets and payment channels and so on and on top of that we can build the whole storage mining process and the storage market in the retail market so let's think of this as kind of different layers that that uh that enhance um enhance nodes one important detail is that filecoin nodes don't have to have all of these subsystems so you can think of these these individual things as subsystems and um you can think of say a a node that just wants to follow the chain and validate it without have without doing any mining as just needing to run the blockchain and the virtual machine and does not need at all to run the storage mining or market side of things at all so you can have implementations of the protocol that only implements some subsystems our implementation our main implementations right now uh implement the whole thing because we want to get to a certain level of completeness with uh with all of them but uh there's already a lot of small tools here and there that say implement some part of the retrieval market or implement some part of um of storage mining but themselves are not are not say full nodes in the sense that they can also sync the blockchain and so on so you can think of think of programs that plug into the falcon network as as a different nodes in the network but kind of uh you you have to reason about what uh what subsystems are they actually running are they are they able to sync the blockchain are they able to um to validate it are they able to mine and produce blocks that gets a only a subset of nodes that are able to do that like any kind of um blockchain network where you can think of it as a as a kind of living system where there's specification there are improvements that are going to come to that specification based on research and and um and product ux goals and and as those uh improvements kind of get uh get ratified by the community and get get agreed upon then they'll translate into changes to the specification and then changes to the implementations and at the end of the day kind of the there's like the the spec is the plan uh and the implementation is the the kind of um implementation of that plan but at the end of the day the network is what it is and the network is running and all kinds of different pieces of software are going to be connected to that network and all kinds of different things are going to are going to happen there so you have to think of these as as kind of separate things right so the specification is what you're hoping to do the implementation is what you're telling the computers to do but at the end of the day the network is is a living breathing system and uh it's gonna um you know be uh be behaving in in uh in various ways depending on on all kinds of conditions about uh about the system and kind of where we are right now is uh not where this red line is the red line is kind of like the main at launch we're sort of over here where um different uh uh you know lotus is the implementation that is uh furthest along to completion um that mean it will launch with uh go file coin force and puhan are close behind and they'll they'll join the join the network uh shortly after cool plus for a couple of questions so one question i client has to pay even to read a file is it to incentivize a mirroring of content so the idea there is to model the the economic exchange of asking a party to serve data uh certainly like reading a file once or something like that doesn't seem very expensive but if you're going to read something millions of times then it starts adding up so the idea of hotpoint is to model that economic exchange and then let parties decide on how to how to actually pay for that so the idea of a publisher pace model of distribution is really key to the whole picture meaning um you know if you were browsing the web and having to pay for every single thing that you're looking at that would introduce a lot of friction so that's likely not not a um not the right model but at the end of the day someone has to pay for the distribution cost and so the kind of publisher pays uh you can think of that as as the way that cdns and storage systems work today where the where you're racking up costs associated with the distribution to to end users um and they kind of go to the to the party running the service this gets different when when you think about um programs that are autonomous um on a blockchain uh storing data and serving it um it could be that sort that that contract has no intention or ability to pay for the distribution of that of that data but but given that it's there and it's it's paid for in terms of storage somebody else may want to pay for that so the ability decoupling that gives a lot of flexibility so that's kind of the underlying layer now um mapping to those models that are more usual is um is like a like a kind of like a higher layer right so so at the end of the day the publisher pace model could be done a bunch of ways from publishers giving giving platform directly to their users who can kind of spend underneath the hood or um or by giving them some some kind of other token or uh or claim that they can they can redeem for content another question when you say blockchain or search power consensus in the system overview do you mean a separate blockchain being created for falcon or is this on the ethereum blockchain through smart contract uh this ended up being a separate blockchain i'll go into into why in a moment um the consensus protocol of falcoin is a is a big part of of what um of the system design where we solved like this pretty fundamental problem around being able to use storage for um as power in in a blockchain so um coupling so in a normal proof of work blockchain you have this this run-off equilibrium where a lot of parties want to add as much hash rate as possible to a blockchain in our case we we managed to make it so that parties are adding as much storage as possible to to the network and it's that storage power that accounts for for producing the block so it's a much better better better setup um in the future uh it's unclear what the what the future holds it could be that that uh as the kind of next generation scalable blockchains emerge um it could be possible to to kind of um rebate a lot of five point into some of those like e2 or others um but right now it's not clear that that uh that we can get there given um just the the throughput requirements of fatcoin in terms of just transactions on chain already saturate um you know to get to the kind of storage uh levels that we want which is kind of in the exabytes of storage that saturates an entire layered one chain on its own let alone uh can you we just it's completely unfeasible to put all of that on all of that traffic on top of on top of the theorem one today uh it could be feasible to put it on top of something like a theorem two potentially but that's kind of a long ways out um given that you don't control the underlying hardware what kind of durability guarantees can be provided can you require source providers to swap out disks and do do all the maintenance of course so that's where the um the incentive structure design comes in where how you model the the rewards for miners and so on um uh caused that to happen meaning uh miners put up collaterals associated with uh with maintaining storage online and if they don't uh if they can't prove that they have it online then um and then they lose that collateral uh there's a suggestion to build bat plus filecoin attention pace for storing content um yeah that's a that's a um it would be great to be able to do that um how is that competitive lifecycle impacted by that so i think it'd be it'd be really really good to to be able to have a um a you know if you're browsing with brave for example um having automatic swaps of bat to file coin and then spending the file coin to back up the the content to both retrieve the content or back it up uh and help kind of websites uh live longer i think that would be a really really great way to to kind of marry the attention with kind of retrieval um content idea um uh that's another question i guess the separate blockchain also allows for utilization of falcon on various other blockchain platforms such as cardano and so on yeah in terms of interoperability yeah we're super excited about the kind of like internet of blockchains that's emerging uh through things like polkadot um cosmo the cosmos ibc and so on uh we think like all of that kind of stuff is is uh really really promising and really good and we plan on supporting a lot of this kind of uh interrupt i've used a similar diagram so i'm wearing one sec yeah i kind of see it as like um you know there's this new next-generation set of changes that's going to emerge with uh that's going to tend to 100x the level of transactions throughput that blockchains can do um and falcon is aiming to to kind of um get get much better throughput in terms of uh of the actual storage of data and and interconnecting all of these things into um with bridges and and and so on uh is going to yield a really really rich environment for for development and so we're super excited about that one of the really promising parts of this is that a lot of these chains and systems are using the p to connect so so um doing a lot of having even hybrid hybrid nodes that are you know say an eth2 falcon node uh will be become totally possible or rather it's only possible now just somebody has to do it um great i'm gonna i'm gonna keep keep moving from from this and and then take more questions later uh great so um one thing worth noting is that five point came out of um thinking about ipfs and the distribution model of of that data so at the end of the day it's it's tuned for how um ipf's data on ipfs applications and and files and so on um uh is is modeled and so that means focusing itself is built on on iphone ipld and liquidity and so on um so a couple of important pieces there is are that um how we model data structures uh and how do we address them uh which is kind of with with uh um the you know hash linked data structures with um uh using sieber as kind of like a base based format makes it super friendly with a lot of development developing um development tool chains where uh the file coin data structures themselves like the falcon blockchain and all of the stuff is cbore which has a like a one-to-one conversion to json so it's super easy to to work with the actual data structures of falcon in kind of a a much more kind of web familiar models and environments and then you can you can think of building protocols and applications and so on to then right on top of those on top of that system in a pretty nice way this also means that the entire python blockchain can move around the ipfs network um through nodes that don't understand platform at all meaning the the blockchain itself all of the content associated with the blockchain is modeled in the same kinds of data structures so you can pull that data and you can show it and you can explore it with all of the ipfs tooling and so on without a it having to be falcon specific uh and and of course uh flatmates is the p which is this uh modular peer-to-peer network um networking library and as mentioning that that'll help hopefully lead to all kinds of interoperability between between networks and systems uh one important thing uh to think about the model here is that and and this this applies also to eth2 and applies to uh polkadot and you know any any of these groups that are that are using lipid2p you can think of there being kind of a program that's running um that's using lipid v in the library and then when you build some other system like ipfs or filecoin or something like that that um that system is running a little p node inside of it so so an ipfs node is also a linpdp node so that means that an iphone's node can talk directly to an e2 node or a polka dot node as long as you want it to happen as long as you want to connect those those those two nodes um and so when you think about filecoin just think of a filecoin node being also an ipfs node and also a p node that just happens to be able to run a whole set of other protocols that are falcon specific and be able to use falcon as a currency to mediate the exchange of information so another way to think about it is like you know there's a world of lipid p nodes and you know a subset of those are ipfs nodes and a subset of those ipfs nodes are filecoin nodes and uh there will be ways for for ipvs nodes that don't even speak filecoin to to retrieve or store things to filecoin um already with uh with some of the textile tooling with powergain and so on you can uh you can do this uh cool i'm gonna keep moving out of the so that's kind of uh in terms of um the protocol and the network model there's a lot there and we kind of covered a lot of ground so uh we'll move through the rest of these uh kind of quickly and um also very happy to to dive deeper on on any area um you know this is a large system there's a lot going on and so without this workshop we find hey it'd be really great to to do a deep dive on one of these say like the decentralized storage cloud aspect or the app platform aspect or something like that we can then turn those into into follow-on workshops uh cool so let's dive into into the the actual blockchain and so this means kind of how the the um the boxing itself is structured how the the consensus works how the virtual machine and the contracts work um and so on so these are kind of like these these subsystems within within a within the system uh so i mentioned before kind of like the ipfs data structure stuff um so again this means that we're using uh cids which are these content identifiers and we're using c board as the as a format uh so it means that the entire um uh all of the all the data structures in the chain itself are easy to easy to explore um and so that might be much more familiar to to to uh traditional web developers and so on than uh than a lot of the formats in other in other systems and uh so something when you think about the blockchain you know it has like the same think of the same components as you you would see in any other blockchain where you have a set of blocks that are linking between themselves and you're doing you're running a consensus process to to agree on the on the um the history of events uh and to also rate limit the the set of parties that can that can uh produce blocks and so on uh you're using a notion of transactions to to put on um messages onto onto this chain and those transactions are going to execute some code within within the blockchain um and in order to kind of interact with the rest of the network you need a kind of chainsync protocol like the ability for for nodes to reason about what uh what are the blocks that they they see what are the potential different heads of the chain and kind of agree on uh really figure out kind of what is the right chain to follow and and so on what uh what a blockchain ends up being and so you can uh you know we can explore the the uh the test in that blockchain and so we can go to one of the one of the blockchains first um it's loading and so this is uh you know kind of an example of uh of the you know the blockchain is down here at the bottom there's something interesting and different about this i'll touch on a moment and you can see kind of like the latest blocks and you can see the latest messages and so on um so let's you know look at uh like an example example block this has only two messages going through you can look at the uh actually this is a tip set i'll get into what tips are in a moment there are two blocks here uh you can look at one block um you can see the the hash of that block and i'll increase my font size because that might be hard to see you can see the uh the hash of that block you can see the the height you can see the time uh when it was mined and the number of messages this happened to have i think zero messages at least uh this is what this is saying uh there's some other details around the validity of this block and so on we don't have to think about that here and then you you see a set of parents uh this is one very important piece about falcoin consensus it is not a linear chain with only a single block along the way we use a a way of of having tip sets where at every height there are multiple winning blocks and those winning blocks agree on the set of parents um i won't dive deep into that there's a few blog posts that explain how all of this works but that means at a particular height there might be uh there might be multiple blocks um this helps a number of things uh one of the things that helps with is is potential throughput um in that um you enter into like a a uh coordination kind of challenge and so on but that that could kind of in the limit give you a much higher level of throughput for uh for for the for the chain itself and anyway here are here are messages and and here's how you can kind of see an example of of what's going on so this this message um is kind of from one account to another account it has a particular nonce a certain amount of value um you know gas price and gas limit it has a very similar model to to ethereum and then um it's calling a specific method uh it's calling a specific method on on on that uh contract uh so i'll get to how that that works in a moment and all of these hashes um so all of the all of these these hashes and so on are um cids so they're like like ipfs content and so on um can be explored and can be can be you can see like the actual data structure and and so on and so now these blocks uh like in the in the exactly the same as the interior model um these uh these blocks get put together into a uh in the into a chain and then the the transactions and so on mutate a a state tree i'll i'll dive into that in a moment uh yeah here's another look at the at the tip sets and kind of how to think about them you can maybe think of like the visualization on the top where you know there's a number of different tip sets one by different miners pointing to uh to apparent tip set let me find a blog post that kind of describes how how this works i'll uh post that here and you can if you're interested in looking at that more you can read through that one other important bit here is that the the power that miners are exerting in order to uh mine and produce blocks is is storage power as we were saying so it's not a a proof of work blockchain in terms of hash power it's it's based on on actually having hardware so here's here's the a um mapping of the distribution of storage power in the test net um and so this is uh 22 uh i think it's about 20 petabytes worth of worth of of data storage going into um into producing uh into producing the chain and uh you know kind of pictures of the um showing this these the other day but like pictures of the you know mining facilities you can get a sense of kind of what miners are doing and their setups and and whatnot and a lot of them are most of them are on slack so you can you can interact with them and you can um talk to them and so on and you can ask them questions if you're if you're considering building applications that interact with miners very closely you can um you can interact with them and talk to them um all right cool so so it's kind of like the blockchain part of it so we have a chain of blocks with where we're putting messages we're synchronizing that blockchain we have a consensus protocol that that is using storage power to uh to agree on the chain um now what are one of these messages represent so they they are kind of invocations into uh into code um so that's kind of where the virtual machine component comes in and this is again a very similar model to to ethereums where you know you can think of the same kind of idea of there being a state route with uh with different uh contracts uh within that and uh you can you can see the contracts uh we call them actors instead of contracts and this is because um we're gonna be moving to where we're taking steps to move the the execution model of blockchains to kind of follow the kind of actor model that's very well understood in computer science so this is a little bit of a different uh feel that uh that um you know maybe traditional smart contract history and like recording content and so on um describes um we think like the the yeah the actor model and the message model and so on it fits much more what's going on with blockchains once you think about their scale of them operating in a in a scalable way with a lot of different lines of execution so within one blockchain you have kind of a total view into all of the state and all the contracts and so on but that can immediately fade away when you start thinking about scalable chains any of the the modern modern designs or or when you think about an a world interconnected by different blockchains so you really have to start thinking about contracts as kind of these simple message processors that you know are receiving invocations and sending out uh data and so we think of that model that's kind of what where the actor name comes from uh but you can you can you can substitute it in your mind actor for smart contracts uh in ethereum and like that's exactly like the right the right way to think about it so um in our case you know an actor is just you know it points to some code um it points to uh kind of like the head of its state um it has a nons uh based on you know in some cases uh some actors can can issue code from or issuing vocations from outside the the the chain and that's kind of where the nouns comes in and it has a balance and that balances in in falcon tokens so almost the exact same model as uh as a theorem and then a message so this is kind of the the actual function and location within the vm um this is the the you know there's a there's an address uh that's kind of the the caller there's a receiver um and there's a certain amount of value uh and there's also a set of parameters uh sorry the the screen grab that i that i got here doesn't show it because of go interfaces but um there's also a set of parameters that um are are passed into um into the the uh the actual code that that uh that you're calling and so i'll give an example of that and so the you can go into into this um this repo and that has the the set of like actors that uh that that operate within falcon and so this is um today we're we're uh writing those directly in native code uh so this is kind of like bitcoin and z cash and so on uh mostly because we we are we want to have in the long term a a multi-vm model where you can run the evm and you can run some of the awesome vms that are being developed now and so on so we like a super compatible world with a lot of different kind of user contracts um but a lot of those things are not ready yet so that we're deferring that and kind of thinking that as stuff that will come in the future for now there's only a set of kind of built-in contracts that operate falcoin and uh this was also kind of a decision based on on on security requirements where filecoin is complex enough uh we would like to we want to launch it without um without the additional complexity of dealing with with user provided contracts we want to have that come in come in as a as a network upgrade after the fact so that means that you know all kinds of user contracts right now should just exist on on ethereum or any other any other chain that can do some some kind of bridging and in the future we can we can think about how as chains evolve and and you know kind of the designs for for more scalable blockchains like e2 and so on um really land and and we start seeing how those work then we can think about uh what it would look like to to then start putting in a lot of the user user uh generated contracts directly on the chain some of the interesting utility for that will be being able to um one of the things we want to drive towards and this is this is a um this will take a a a bunch of interesting r d behind it but we would like to be able to deploy contracts that operate on a portion of data and can do so verifiably without um without having to force all miners to compute that code so that's a different execution model than what's going on with most blockchains today but that's what's going to let you build applications that compute on large amounts of data in it wherever that data is without having to kind of compute it everywhere but that you can think of that as like where where falcon is headed not not at all where falcon is now um you you can dive into the the you know specific uh contracts uh uh here so i'll give a give an example of uh of a couple so like the very basic account um it's implemented here it has like a a um it exports to two functions there's a constructor and and the ability to retrieve the uh the address um and then you know kind of beyond that uh it the account is kind of like a privilege contracting that sending value is part of the vm and and this is kind of like the actual code that that gets run when you when you uh when you execute it you can look at something more interesting like the storage market we'll dive into into all of this in a moment but um the storage market is you know a a uh contract that has the ability to to um add uh certain deals and so you can you can pass in uh specific um uh storage seals and and look at um yeah you publish a set of deals and that that makes them um submit them to the chain and and they get processed and and so on we'll describe kind of how that works but this is just kind of an example of of how those contracts themselves are are implemented uh all right so then the and then the state tree is is just kind of like how the state itself is housed um you know there's a there's a tree of where you know it's kind of addressed by the by by the actual kind of address of the contract the same way as ethereum uh and then the the state of that contract is stored there um and and kind of in the in the um that because we're using cbr and so on the the state tree itself and the data structures are not married to any vm model and that's kind of why we're thinking of this as kind of like a able to to be able to work with a bunch of different vms and and what that gives us is the ability to then also write other kinds of applications against this um where like you know kind of in the future what we're hoping to do is think of the backend part of any web app as being able to be deployed to a subset of falcon nodes and then operating there but that's kind of like a you know we're laying the foundations for that now that that'll be um that's not not here today uh see a question is there any thought onto how minors could be in the devices store socially good content for free or is this at a separate layer such as ipfs where individual nodes would tend to mirror interesting or valuable content yes totally so we have a number of things in this direction i'll touch on them later we have a notion of verified clients that helps and we have a couple of projects around this where there there's a way of of just pooling resources for deals and uh having having those deals um be given to minors and so then you can have large groups of people uh organizing together to pay and fund for that that work um you know when you when you really deal with petabytes of storage and so on you really have to start accounting and making decisions because it does cost significant money to store stuff and transfer it i think the transferring part is much harder when you want to move around petabytes stuff you can't just send it over the internet you now have to deal with people sending disks to each other through packages and or or whatever and at that point it you know really considerable costs start adding up so you do have to think about the economic flow there you can't just kind of write it off for uh for free but that's where the block reward comes in so we we've come up with a bunch of really clever ways of guiding a lot of the block reward benefit to to help store a lot of like really valuable data great so let's kind of move on from the from the bm and start uh getting into into some of these the markets and the storage part because that's i think kind of like the the meat of what's what's interesting about about about falcone but i do want to um just make sure that kind of like the vm model and so on is sort of clear of course a lot of details and and you know super new and whatnot um but just want to if there are any kind of questions on nwm model i can i can take them now sweet alright sounds good let's let's jump into into the markets all right so the the now that you kind of now they have the concept of like hey there's a blockchain out there and we can run code and we also have this you know storage power consensus thing that is causing base on the block reward is causing a lot of storage to come together um let's figure out how to turn that storage into something really useful um so you know really let's figure out how to how to take you know a lot of storage that's coming together primarily for the block reward and then turn that storage into into data that you can that you can serve out to uh to users and so this is kind of like where where the uh kind of the decentralized market aspect comes in so i'm gonna move to a different set of slides because i have a bunch of these already so effectively a model is kind of like this where um you have miners and clients um put up a notion of of pricing information and what you want the network to do is to is to help those parties find each other and then execute deals together to agree on on some data getting stored and so the key thing here is that miners are amassing storage because of the block reward now that they have that storage they want to take deals in order to make that storage uh even more profitable right so think of the block reward as paying for capacity to exist so paying for a lot of work to be done in terms of causing capacity to exist and now that that capacity is there and and that storage has to be provided then um then selling kind of like storage uh in that capacity uh becomes a much easier uh much easier question and and it also kind of gets subsidized in a way and the the block reward is acting as a bit of a subsidy there so this can you know the model for the the um the storage market has evolved a lot over over time um what we want to end up with uh in the long term is kind of like a think of it a fully commoditized world where you can think of um you know order books for for the for the storage itself you can think of adding um adding storage bids and asks and so and so on to a completely decentralized exchange um where you know my nursing clients can find each other can agree on on on price and a few other characteristics and then can kind of execute uh execute deals um this also means that uh it opens up all kinds of very interesting defy cases where you know we've barely scratched the surface on this but you know you think think about um you know when you commoditize anything you can you also create the ability to to financialize stuff on top where where parties can come together and sort of think about um reason about the supply of hardware and the supply of data and so on and then start um creating creating kind of next layer or second layer contracts around um uh you know kind of being able to kind of uh buy a certain amount of storage at a certain point in time uh and so on or being able to defer that or you know things like that so we think there's a ton of like really interesting defy cases here um that kind of emerge out of out of providing kind of the the the market structures but um yes at the end of the day because of chain throughput we we um we had to move all of the kind of the asking and bidding and so on entirely um entirely of change so so it's not as um as verifiable so this is kind of like a not as verifiable of a of a spot as we would like um but what we can do is is uh the deals themselves so once miners and and clients interact and and find each other and describe a bit of kind of how that happens um they agree on a deal in some terms the client sends data over to the minor they they form a deal they sign it and that deal is what goes on chain um and then those those deals are uh at that point now that the deals and chain the the network can can verify that uh that uh that miners are indeed storing data so maybe like a simple way of thinking about it is um this is kind of like virtualized in the sense that like the network is sort of an intermediary between clients and miners where the clients provide the data and the and the and the money and lock it up with the network um and then if miners are able to provide proofs over time that they are indeed uh storing storing the data then the network pays out the miners over time so so think of that reward as being being unlocked over over a period of time so then the um then you have to make sure that uh so there's a lot of the the kind of design problem of falcon is thinking about all kinds of conditions where parties are are malicious and and uh in this in the structure um and and so on uh it won't go into into detail on this here but the the mechanism design that that yielded the way that the deals work and so on has to cover for a whole bunch of really tricky ash cases uh uh edge cases about this and so this is kind of like the that we saw in the visualization earlier where kind of miners so so clients make a set of minors um and then kind of send the data to them and then they agree on on some terms and and uh they they sort of sort of the data if you want to kind of see what the the actual code looks like for that or or the or the spec and so on you can go to kind of the storage market part part here and you can dive into kind of what the flows look like this is very detailed like perhaps too detailed there's some much higher level description uh description here where uh you can think of um you know very very basic uh view of the world where uh you know a user contacts a miner pays them to to sort the data and and so on but what's what's really going on under the hood is is um uh clients and miners are are interacting they kind of select each other they form a deal the minor puts the deal on the on the chain once the deals on the chain you uh have verifiability of that of that uh that deal being um uh being in effect and then for the duration of that deal the network is going to monitor and make sure that the miners are indeed storing the data and if they don't they're not storing it then then there'll be significant penalty associated with that the way that this is the data stored is in the thing we call sectors um i won't go into into a lot of details on this now but if you if you are interested and curious about how that's how that's structured you can look at the files and data section in this document you can see this image uh that's right actually not quite this image this whole like um yeah what's going me i'll get the actual like source uh where that comes from i'll touch on this briefly because it might affect how you're thinking about applications but the um the way that the user's data is stored is that um we first think about structuring the data in an ipld graph or an ipfs graph um so if you know you if you're used to using fps of just ipfs ad that's it you don't have to think about it very much much more but what's going on underneath the hood is that that graph of files or you know you can think of it as a textile thread or something like that that entire graph of hash linked objects is um kind of pulled together into into things we call a car think of it like a tar file but but it's just a it's just for these these graphs um and then that that kind of bundle gets sent over to the miner and then the miner um there's kind of like some complex uh processing that has to happen for the probability of this and the verifiability so there's a lot of important details about how to make sure that you can indeed verify that that data is is getting stored and that's kind of what this proving tree stuff is for i won't go into detail here but uh but for whatever reason this is interesting i can refer you to to content in the dives in deep and a couple of talks about it and then uh those those um you can think of those pieces once the miner has them um those uh you know that data gets pulled together with a lot of other people's data and then pull together into a thing we call a sector and the sectors have a particular fixed size um i believe it's 30 the current proof parameter set it at 32 gigabytes uh and so if you have a lot less smaller storage then your your piece would kind of ride along with other parties all of those those um pieces of data would be pulled together into a sector a miner would take that sector and then would store that in the network now how that storage happens that's where kind of like some of the falcon magic comes in where how to make sure that that you know large quantities of data we're talking terabytes of petabytes and so on are indeed verified over time and how do we know with with high assurance that that data is there that's where all the replication come in and and the ongoing kind of checks and whatnot um i probably won't go into into a lot of detail here now but if but again if that's interesting uh happy to refer you to documentation or have another workshop or something like that um but uh maybe suffice it to say for now that once the client the client cares about these these uh kind of graphs of data and just kind of sending them to the miner and and being able to kind of refer to these graphs of data by by their cid and the the miner takes those graphs of data puts them together with other people's data into into a um a a sector you can think of like the the flow maybe like this um where these these are some old slides but a lot of the same same kind of model applies where you know there's a deal proposal that happens the the miner accepts it then you are actually sending the data over uh and then once that that is uh verified then then the deal goes on train and and then the deal is the deal is made uh this is there's like a much more rigorous version of this here in uh in the spec itself so this is kind of these diagrams and so on are are the the proper version of the more rigorous version of what's going on here uh cool i'm gonna pause for uh for some questions uh so question when you say that the block reward um is to incentivize creation at storage capacity then is is the plan that the storage miner be incentivized to bid for storage deals is that akin to the bitcoin miner adding transactions to the block for the tips associated with each transaction yeah so so um uh miners can because of kind of the crypto economic um construction you you need to enable miners to um to just commit capacity and count data's power um but once they have capacity uh then they can sell that capacity for deals what we describe is kind of a capacity upgrade where one once they have uh pledged to be storing a certain amount of data and that's kind of made verifiable falcon checks that that capacity is indeed there then we can miners can sell that space and then prepare an actual sector with people's data and then we call it sealing the sector and then they uh they now have uh have a specific amount of storage that they're storing and backing up for um for for people uh something that might be an interesting hack by the way is just visualizing all of that data so a lot of the information the data about about all of the all of the the data storage is uh so think of it as kind of like the sector explorer as opposed to a chain explorer being able to see all miners and the sectors they have and the deals and who they're making those deals with and so on that might be like a really cool hack where you know just being able to see the there might be a bunch of interesting ways of visualizing that data or or seeing the kind of the history of that data this might be also something that the chain explorer folks may be maybe interested in in making but um but yeah the the yeah going back to your question though the block reward covers the very high expense of of actually provisioning all of the hardware um for a certain amount of time that's kind of like a big part of it the then from that once that you're paying for that amount of space and storage to be by the through the block reward then that kind of the remainder is is paid by by the deals now of course the block award is you know on a schedule like like that is increasing over time so um the block reward subsidy you can think of it as borrowing over the long term future kind of like on a decades time scale the the ideal is for the utility of fat going to grow over time to the point where the deals themselves are paying paying for the for the storage but that you can think of that as as like a 20 30 problem not a 20 20 problem um great so is there uh any metrics on how falcon hyper-competitive pricing will compare to amazon s3 storage uh good question we're not sure um but the cost structure is very different because in in canvas three and so on you're paying for the actual source itself if you're trying to get the storage if you if you're just trying to think of throwing data on falcoin you're usually you just have to pay primarily for the transfer because the block reward will kind of offload the the actual like disk upkeep and disk hardware cost um and you have to pay for for the you have to like beat other other parties in the market right so so there's kind of like a a very different dynamic about pricing the storage of filecoin which is different from from any other other um content storage network that we've seen in the past and so we hope that that will you know think think about a proof of work networks today where um the block reward is subsidizing the production of massive amounts of hash rate right so tons of hashes are going happening constantly and they're just getting dissipated imagine if you could take those hashes and sell them for something useful that's what what falcon's proposing and so a a the bulk of the cost is going to be paid for by the block reward the remainder is is uh then that should allow us to get some like really really competitive prices now part of the trickiness though is that once you reach large amounts of data when you think of um you know petabytes scale then you have to think about moving petabytes of data and moving petabytes of data alone requires time so so there's kind of some cost associated with that so we mostly think about as paying for the cost of getting the data to the miners uh is there a plan to make the falcon api for storage be sort of plug and play compatible with s3 yeah totally so this is where the um i think there are already some libraries working on this but uh but uh i would actually recommend some of the textile powergate stuff is kind of mirrored in that way where just think of textile buckets as an s3 storage bucket and you just store stuff on textile and then you archive it over to popcorn and like that's like from a from a developer perspective you don't have to worry about most of what i talked about in this in this in this workshop you probably don't have to worry about if all you want to do is is just use falcon as a as a developer um because in that case you can just use powergate to uh uh to just do all of that this heavy lifting for you uh the you know a lot of this will be interesting and valuable and useful to people that want to hack and build tools like maybe you want to build like a storage marketplace or you want to build this order book that i'm describing or or something like that um another question how would you how would miners know when it's safe to delete storage is there some type of delete incentive so the deals are timed um so when you agree on a deal you you agree on a certain time scale and as those deals expire the a sector uh will also expire once all those deals are expired and once all these expire then miners can can garbage collect that sector and and uh reuse this space and so that that means that miners have to do some you know have to time the distribution of deals and so on to pack deals that are close in expiration time together and so on and miners can take care of that um where can i get um well and second part of the question is is there some type of delete incentive so there's a different problem here which is not expiration but rather you want to delete something and that's a very very hard question to to uh to answer we we are working with a content policy structure where clients and minors should be able to agree so it's kind of like work in progress and and a bunch of open questions but um clients and minors should be able to agree on content that shouldn't be served anymore so if it's if it's um you know some important if some content you don't want to be distributed uh anymore it's there you can kind of ask miners now to do that but there's kind of some incentive structure there you have to at the end of the day you know if any storage system has your has your data they could be selling it or moving it around and serving into other people uh whether it's a decentralized network or a centralized one um that that uh that model is is not different what is different is that first of all you should probably be encrypting things on your client side anyway so that so that if the miners serve the ciphertext then you know that's useful but not that useful to to another party uh but then beyond that um if you if you want to kind of like stop the the spread of some data then then it really becomes a market problem um you basically have to outbid the parties that that want to want to distribute that content and that's just a a kind of natural extension of how information spreads on the on the network right so um there are a lot of people that say don't want you to view wikipedia um and so wikipedia however is seen as really valuable by other people and at the end of the day it's a it's a market question in a market that dynamic that yields whether or not you can you can view wikipedia and so i know if that uh helps uh helps answer that but uh yeah i think the question gets trickier when you start thinking about um content that's uh where a certain region or something is is uh kind of like outlawing things we we uh we're thinking of the right way the right model for that is is to be to have kind of like block lists that individual miners are subscribing to and so miners can say hey i'm in this region i don't want to host any content that's in this block list so just fyi client if the content's in here then i'm just not going to serve it to anybody anymore and then as soon as the deal expires then then that's it and so having that uh that's what uh allows you to deal with a multi um multinational perspective where different nations disagree about what is okay to share and even within a nation different agents within that nation might disagree about what's okay to share right so um this is kind of like where um you know there's all kinds of like lists of band books and so on and yet people this will distribute them and that should be that's again an economic problem uh some people are taking some risk and some some higher cost uh for spreading that content and that's how you really make a a properly decentralized network that allows parties to respect their their their uh local local uh loss and so on and allows parties to disagree and choose to opt to distribute the content anyway but that's kind of a choice that's left up to the to the miners themselves so you don't want to compel parties to do to do stuff now given a story system given that you could you know any kind of like anonymous parties could be moving around pieces of cypher text and so on that are really difficult to trace and so on and that's kind of the same as any other any other network and so that kind of distribution is a separate part but but um you know it kind of works in layers um all right i'm going to move to different questions where can i get the last information about how falcon prevents the generation attack or rather a minor claiming they're storing petabytes of valid zeros is the um is the white paper the most recent technical deep dive into this uh no you can look at so this is kind of the the crucial replication um work that we've done recently we've there's a a set of novel proofs that that we're we're working with now um that just have different performance characteristics uh you can dive into the papers of those um you can look at falcon research once again i'll post if you look at this website and um just look look for the uh there's a whole bunch of um different uh papers about this the one we're using right now is called sdr i think this is the paper if you look at this one this is one one of them i think the actual sdr paper is a different one might be this one this is brg pour up um i can i can get you the actual uh actual paper later on um yeah if you're interested in like looking diving deep into this happy view the other thing you can do is look at cryptolab which is uh the group that's that's doing this this work actually implementing it i think look at uh this repo if you're interested in looking at the actual code that uh that goes into this um this this has the implementations of of the proofs themselves so you can dive into uh into them here uh cool i'm gonna move to the next one let's have some storage miner from refusing to make data available forcing clients to choose higher redundancy parameters thereby um there are making it enriching all the storage miners so the storage miner know when they are fetching data for personal retrieval uh great question so a couple couple of things um to note about that that's like a it's a an interesting interesting piece so i think like the right think about um people storing data at the end of the day if you want to store data in in networks what you want to do is kind of erase your code things and and just disseminate them too many minors right so if you start with large amounts of data you'll kind of eraser code it and get get some land of redundancy factor that this allows you to have different replicas that that uh give you high very high reliability and redundancy without paying a very high factor in terms of the into the storage cost this is very useful when you're thinking about many petabytes of data if you're thinking of like you know 10 petabytes of data uh you want to disseminate those 10 petabytes over many minors and you want to be able to just choose a few to to retrieve retrieve content um so one of one of the things that helps is a you can you can um do that with many many parties and you can agree on certain deal terms and there's still collaterals associated with them and um if a there's kind of in the very basic sense there is a macro reputation game where if miners stop and start doing something like um not serving data and kind of colluding on this and so on that'll very quickly be detectable and clients just like miners can can form coalitions against that so if you if you're worried about kind of coalitions of minors note that most of the miners are known organizations they'll have huge amounts of storage and so on and clients which are also kind of can be known organizations at least the really big ones can also form coalitions against that and so you can think of like a when you think about about building tooling for falcoin think of a marketplace showing the past um the past uh deals of a minor with with all the other accounts and you could associate reviews with that and then you know right away you can with like a very simple uh reputation system knockout i would guess most of the most of the problems in the picture um so that's kind of like totally a layer two solution that that's available to you but suppose that you don't you don't want to do that and you you don't want to um maybe that tool doesn't exist or like you just don't want to engage in that you have a few things available one is you can go for a broader razor coating factor and then breaking it up into small pieces and giving them to a bunch of different miners and then the hope there is that the the collusion won't be high enough that uh that uh that uh miners will kind of all all agree on this the other thing you can do is produce just there's a very trivial resolution which is you construct different clients you have like you know say 10 different anonymous clients and you make 10 different independent deals with with you know in each case like three different different miners um and then that point the miners can't really correlate between those um and so that it becomes extremely difficult to kind of withhold uh withhold information at the end of the day there's kind of like the macro game of what if all miners don't want to distribute any data and that's just a market problem uh it is just given how profitable uh content delivery is in cdns and bandwidth costs and so on given that miners have data um miners will get a much higher roi by by um by dealing with with clients and so i we don't think it's a stable equilibrium at all to expect all miners to collude to kind of hike prices up like that if they could do that then they could collude to double spend as well right and that's a much more profitable collusion right so if you think of as bitcoin miners or ethereum miners in this way then we're talking about a a full collusion between all parties such that um they could just as well try to double spend or or something like that of course the dynamics of the of the uh of the attack are different and you know certainly if you collude to double spend you're harming the network so maybe you're harming your investment and so all those kinds of things apply but um but overall we're not we think like there's a whole bunch of different strategies here where we don't think um kind of collisions of miners to kind of withhold the data and not serve it it's going to be uh it's going to be a real problem uh we think the the more important thing there is just fairly compensating miners for for actually delivering the data and that's a that's a piece here that's that's important too to consider all right um let's see so i have i think we've been going for about uh an hour and a half and there's a lot of like really interesting details here um a lot of really really useful questions we've touched on the protocol in the network the blockchain the uh some aspects of the decentralized market we i haven't dive deep into kind of how the retro market works we started looking at some amount of the so onto the question started touching on decentralized storage cloud we haven't made it through to the rest of the stuff and that's probably fine i think most of the questions address a number of the key things here um i have more time but but i also know that youth global folks are in the east coast and so it's getting laid over there for them um a couple of options either i can go a little bit longer and maybe have some kind of concluding statements on on some of these things or we can pause and and i can do the rest of this uh friday or or next week i'd be curious what uh what uh folks would be would prefer um would people prefer to keep going or or um or kind of defer to later they get like a show of hands or or something looks like most people are saying they should they want to continue a bit more we're good you sure yeah all right sounds good let's uh let's keep going then um all right so so just on on the storage market let's not talk about retrieval because that we started some of the questions around that now um but uh there's a there's one part of retrieval which is given that i've given my data to to a minor i just want to get it back from that minor and that's kind of we think of that as like kind of like v0 or layer 0 for retrieval now that's may not be super high performance because um the you can think of the storage market the storage part of the equation as tuning for hardware setups where long-term storage is the main goal you want to do really cheap long-term storage of a lot of data so you want to as a storage miner you want to amass large amounts of of hardware and drives and so on to source large amounts amounts of data and so that'll correlate usually with um we think of this as kind of different segments of of storage minus will exist but it'll be some distribution where parties in data centers and in isps um and so on will will will be a bulk of the bulk of the equation and likely a lot of kind of like a really considerable cloud of of storage miners that are kind of storing somewhere between 100 terabytes to a couple of petabytes or something like that and that is totally reasonable to have in a house for example where you could you could put in a um a mining rig in a in a house that has a you know kind of that level of storage but it is kind of a considerable investment to be to be kind of storage miners at that scale um moving moving the content you should we should be thinking about um the storage market in the retail market as kind of hard drives and ram so that's kind of like a good model for for thinking about this think of the network as uh as fluidly moving from long-term storage to kind of like hot cache uh to to deliver content i actually have a visualization of this that might be useful in sec okay sorry i have like a million keynote files um um you can think of so so in the left side of this this um diagram is a diagram that comes straight from i think google cloud which kind of describes how they layer their their um their cloud infrastructure and this is um this is pretty normal and traditional with how most uh source clouds end up working where there's a set of core data centers that that exist in a few cities and then from there there's kind of a set of edge points of presence which are at a bunch of places in internet uh interconnects so these interconnects are a specific type of um type of uh of facility where um a few different organizations maybe uh have a kind of connection point um in the actual internet um it's really useful to remember that the internet is just a bunch of wires put together with a bunch of different organizations running these wires so an interconnect is where a lot of those different organizations kind of meet um and so it's very useful to have these edge points of presence there because you can like very quickly address content um and deliver it there and then there are there's a whole set of things around edge caching and service nodes um edge caching gets into you know these are fuzzily defined but you could think of maybe the boundary of points of presence being the isp layer where like some storage groups and so on will kind of ship hardware to isps and actually store stuff directly in the data centers of isps um so that kind of like the end of consumers can can very quickly access some of the content and then finally kind of a lot of nodes in the in the edges where that might still count isps or it might count um certain kind of high density areas like universities or large buildings and so on um and in some new new forms of uh distribution uh where we think a lot of this will head is people will have large amounts of storage in their in their homes and so on and parties will kind of like push content to those uh ahead of time uh and that sounds kind of like kind of crazy but when you think of the of the storage density graph and cost structure versus the bandwidth cost structure um and when you think about the media in movies and vr and so on and the sizes of those media storage size is greatly outpacing the sorry storage um price is is greatly outpacing bandwidth price in terms of cost reductions so that means that over time people are going to be amassing larger and larger amounts of storage but it's going to be pretty hard and difficult to be to move that that information over over the the wire plus their speed of light issues right if you if you want to watch something at 4k or higher resolutions um and not have to wait for it you you end up in a very different part of the world sorry very different part of the design spectrum where ideally you're trying to push a lot of things all the way to the to the users so that really becomes a game not of storing everything there but of figuring out what you need to store in those regions and so today the the cdn companies are are in that business of trying to figure out what to deploy to different different regions and what to to host in some places there are also some um interesting uh interesting groups that are that are deploying directly their own boxes directly directly to that a good example of that is netflix let me show some of that as well i think i have it in the same one that's determined um oh i'll do for that for later but but part of the point is a lot of um when you think of kind of a topology of the internet uh it's kind of like this really large grapevine um and it kind of gets closer and closer to the users you want to try and store some fraction of the content as close users as you can and this is where the way we look at it is there's a very clean decoupling between the problem of storing data for the long term and the problem of serving data to users very quickly and they have different economic economic structures and different data signals and so on that would kind of factor in and that's what comes in that's what comes in as a division between storage miners and retrieval miners so you can think of storage miners as mapping to kind of like the the kind of like core data center or to some extent some of the edge point suppressants uh in kind of like the the most distributed case and then you can think about geo miners as really like all of the edge caching and service nodes that data that you want to can deploy everywhere and so what you want to do is build protocols by which many different parties can can come together and form that cdn and distribute distribute some of the the information and the content this is there's a lot of like interesting open open problems on this so the ritual market in falcon is is way less developed in the storage market mostly because we wanted to kick off the network as soon as we could um and and put it put a lot of it in place and then kind of start the process of of building up the cdn over time as kind of the demand starts starts pulling that but uh but it's maybe worth noting that uh this might be really really valuable hack material meaning if folks are interested in that aspect of it the the content delivery fast retrieval a lot of the primitives are there and it just kind of needs some some interesting um some interesting pieces pulling together some of that functionality to make a kind of auto-scaling auto-scaling cdn um the worth worth noting there that uh there's a very large space of decision um there's a very large space for for strategies and decision making in what content to move where predictively uh from all kinds of interesting data sources so think of the think of like the the d5 world and what's been done with kind of like oracle's and chain link and so on about all kinds of like different price indexes and so on and then think of a world where you have many different agents um being able to run their own strategies about you know speculatively moving content to different places um and and turning cdns into like a proper open market is something that we find extremely interesting um and we have the the primitives there in terms of the the content we can address all the content we have the storage miners and the content there and we have the the the retrieval process of how you how a node might be retrieving the data from somebody else and kind of using payment channels to pay for that data quickly but what we don't have is the is all of like that data diversity of agents with all the different strategies and so on so um there's a bunch of like really interesting hacks related to this um i'm maybe leaving up that in that um i'll um maybe show another couple shots of ritual mining but um uh yeah this might be worth kind of like an interesting deep dive next week of like hey what's for if people are interested in in looking at the retrieval market more closely um i can i can put together something around um hey if you were to we can make this a a hacking workshop where we can look at gossip sub and the pub sub oriented stuff and we can look at payment channels and we can look at uh trying to to piece it together and see how you can do you know kind of pretty fast fast delivery i think something like an interesting hack idea might be um having a bare bones client like that or a very own piece of software like that that can do the virtual mining piece but which lets you try different strategies in javascript so like you the user downloads this piece of code you delegate some some amount of storage to to this network and then you pick a strategy which is just javascript file um that kind of makes decisions uh and then that uh then you can like give that to a lot of people and then let people come up with a bunch of different strategies of how to how to pick what content to move where uh and that could become a really really interesting kind of um cdn cdn world um so that's kind of like the kind of the where the basics of retrieval versus versus storage it might be useful to one one other really important and like really crucial detail for the early days of the falco network um that's kind of relevant right now will be less relevant later on um the the storage the storage miners the way that the kind of things work now is that when they store data it's not just kind of in a specific facility and so on that's kind of two and four for um for large storage storage and whatnot um but the source miners are right now having to store effectively two copies of the data one in the clear and one one um with some encoding on top of that um and that comes from that's an artifact of the current proof that we're doing because the current proof that we're doing has a very um has a very slow encode and decode time uh and there's like a whole bunch of like there's a very long story as to why we ended up with this one and where we're shipping with this one as opposed to shipping waiting for something that that is way faster um but the the like proof that's gonna ship kind of on main at launch has a set of characteristics that it's slow and expensive to compute therefore miners also keep around an extra copy that's in the clear um and so that that uh extra copy is in the clear is not verified the verified part is is what's uh encoded and encrypted so miners could cheat and like not store that extra copy um but miners that do that we'll lose business pretty quickly because clients will will uh will will spot that and will cease to use that data that minor now the goal uh is to have a proof of application that that is very fast and does not force that kind of keeping around of a second copy um so that's kind of like a like a that's like a hacking a a uh pragmatic solution for now to deal with that kind of uh expense problem uh but you know kind of an idea of what that would look like is like these these were graphs made based on um this is a different this is a different proof of application obviously our other one we're using now um but you can think of it as like giving the the sealing process and getting it out of ceiling when the proof of replication is slow as um as being uh you know taking minutes to to unseal and so that's kind of like why keeping out keeping a a a um a copy in the clear is really really important uh as proofs get cheaper and faster um then storage spreads can actually move all the way into kind of like the milliseconds range and so being able to decode things really quickly is an important goal but you know there's so many different directions and so many important things to build that this is kind of like a problem that we've left for uh for later of like producing that proof for now the programmatic solution is go go for security for now and with the current current protocol and and move this proof into into a better spot uh spot in the future um we already have algorithms that can do this it's a matter of but they but they force a um they require either a lot more certainty about they require a lot more certainty about time and and that's a whole other i won't go into that but that's where a lot of the consensus of blockchains is moving towards is using a primitive called vdfs which are verifiable delay functions and this is both something that we want to do and ethereum 2 wants to do and so very likely most blockchains will end up having a verifiable delay function as a primitive and then if hardware for that exists then you can really really make these storage proofs be super fast it's just a matter of having that hardware and that hardware is is expensive to develop think of it as like an asic for time like you want secure time and you can build an asic to give a secure time uh if people are interested in that uh happy to give resources to or yeah point you to to that maybe i'll i'll drop a link now uh but so this is this is research that's pretty pretty useful and valuable to um uh to us in ethereum too but it's kind of like some some some time out so so the way that we're thinking about this is once those primitives become available then we can shift really to have like really cheap proofs uh cheap and fast proofs for storage miners and so my storage miners will kind of move from from kind of like this um world where they have to either be slow or store two copies into a world where they can just store one copy and and be really fast that's kind of like a for developers and for end users what you need to know is storage miners just have to store these two copies they have to store one sealed copy and one unsealed copy and that's kind of annoying but you know it's kind of like a pragmatic okay place to be for now now where trio miners are is a whole other pretty interesting uh place where where today they kind of may uh may inhabit the region of 100 milliseconds to kind of like a few seconds of latency but ideally you want to push those virtual miners all the way to to serving kind of like in sub 10 milliseconds world so that's where that's where um we're really building a market um can really deliver that because no cdn the claim the claim of falcon is that no centralized organization can outpace a market and so if you if you create a market dynamic for solving that problem then you can solve it um in a much better way much faster way that responds to the actual demand um and so the point is like we just got to get like the right primitives in place to enable anybody to just add in storage and then and then um uh and then be able to kind of decide what to get and so on and so yeah this might be like a really really uh good uh good hack uh hack material because it could get really fun like you we could uh think about like running a competition for different strategies of like hey here's this like here's like this distribution of of content information and like how much is being requested over time and like let's see if your strategy like out does some other strategy of like content delivery um all right i could probably talk about reveal for like ever so i'm gonna pause there unless there are a bunch of questions about it uh i'll check on the on chat for now about censorship is storing private data and enterprise data and falcon totally anonymous what if government requests storage miners uh to store user data with identification of real names we can build apps on top of filecoin but the cost will be increased so the there you can think of private data in storage networks as as layers right so um users should be users and applications should be encrypting the data before it touches filecoin and so that data should get encrypted uh ahead of time and so for example if you use textiles powergate that happens for you powergate handles this for you underneath the hood where uh it'll take your data put it into a bucket or or a textile thread and um and encrypt it and it's the encrypted stuff that ends up being added to filecoin but that's only one layer once um you could still be in a world where um these ciphertexts are known and or the keys are are published or extracted or something like that and so you want further assurance about a deleting that content or not storing it or um or storing it so there's like all you know different parties want different things here and that's what becomes a market problem so it could be that some well-known content um you know a lot of miners do not want to store that content period and that's you know no matter how much money you want you offer them they won't do it but other miners in other parts of the world might do it right and so they might say yeah that's totally fine here like no problem i can store that content here um and so this becomes entirely a market-based problem but that's only in a world where where you know what the ciphertexts are if if you don't know what the ciphertexts are then that said you don't really have the ability to to reason about it now there are some jurisdictions where people are questioning the entire use of encryption right and so we may see a world where where people fight against encryption and remove encryption um and that's a very possible thing um and and i would imagine uh miners in those regions refusing to store anything that looks like encrypted content and only agreeing to store stuff that looks like um like clear text valuable data i would say that that's still a really really useful service in some domains where for example tons of important valuable data is entirely public so think of most websites most scientific data sets most large-scale data in the world is it's kind of public by default like um constant data sets about the world like um spatial imagery um telemetry like iot streams and so on a lot of that stuff is just public um and so that's totally fine um and you can also live in a world where uh then people start doing seconography on top of that where like hey there's like a whole bunch of us that like look to be expert are actually why it's just it's a different kind of incr it's not encryption but it's software station going on um and so i think like you know in a world where where uh jurisdiction started out long encryption that's that's kind of where i think things will will head um but for the most part in most of the world end-to-end encryption is is valued and encryption at rest is valued and and at the end of the day the important thing is that this is a market and there's choice meaning miners and clients are agreeing to enter into a contract together and are agreeing on the parameters of that contract and they can they can disagree on it right and there are collaterals associated with that right so if breaking a deal involves sacrificing collateral but that's kind of like what what you enter into that contract with right so um you can define kind of the parameters ahead of time we've explored some some contracts where you could agree on a list ahead of time and say if the content you're giving me appears on this list then i get a miner gets to break the contract without paying that collateral and maybe the client pays the collateral because they said something that you know they did something bad or something um and that's stuff that uh that's interesting to explore and it's out there for for folks to to explore but um but uh that's not kind of like in the base layer that's kind of like an interesting kind of like layer two type type conditions all right i'll mention two other markets briefly i won't go into into detail here but it's worth noting that a really important market in place that supports all of falcoin is the just the raw hardware market right so the prices of sort of of discs the prices of um of uh just computers and computing notes to do the ceiling and the prices of data centers and so on all of that all of that market pricing greatly affects the pricing in the storage market and retrieval market and kind of it's a very important part of the equation when you think about the modeling the economy in fall coin but you know that's kind of like a you can think of that as like an off-chain market we don't have to worry about it um we know of some folks that are interested in doing uh selling hardware for popcorn and and uh that is stuff that we think is would be extremely extremely interesting and valuable because that can make the economy a falcon very strong so if uh um i think i'll get to dive into into it in depth here uh but if people are interested i'm happy to dive into this uh later on when you start thinking about falcon as an economy and you start thinking about the the economic flows of that of that entity uh the more that you can do with that currency and keep it within that currency the stronger that economy becomes and so if a lot of the production that's going on into producing the goods of that economy are priced in the currency of that that economy um then the better that economy will do so parties selling the same hardware at the same cost in in the currency of of that network ends up being an extremely powerful powerful structure so if if people want to uh uh sell disks and and mining equipment and so on for falcon that's like a very very useful useful thing to do um another market i'll mention is the loan market so this is where um collaterals are pretty significant and in a large uh large part of making sure that verifiability remains meaning we can check that something that a party has done x but if they haven't or they've done something bad then we have to slash some collaterals so um they're in order to allow all kinds of parties to enter uh then having a loan market associated with falcon is a very very useful thing because it enables miners that are very new and don't yet have significant amounts of of of all coin can can get loans from to to create large deployments quickly as opposed to kind of like starting small and having to wait until until that cruise um so we think like a very strong defy loan market will exist around falcoid um to facilitate the loans of collateral uh to storage and retail miners and so that's that's uh something that i think uh that that is an amazing hack potential for hacky fest where if you are pretty familiar with d5 uh building a loan marketing ethereum to just do file coin collateral loans that would be super super interesting and valuable right away to a lot of folks so if you're interested in that you should uh you should check that out uh cool so i think from here yeah i probably we touched on this extensively here and there kind of talking about um retrieval mining and and so on the verifiability of the storage is given by the by the proofs um in the in the in the in the in the protocol so the person replication and so on um uh are what what checks what's going on you can think of it of a of the blockchain as issuing a challenge constantly to minors uh to to make sure that they are indeed uh storing things properly and if they're not they get slashed uh if they are indeed then they get rewarded um and now when you think of like turning a large number like this into into a very useful storage cloud a few properties that we want to lean on kind of appear very quickly one is like the the block reward subsidy is a big piece of this so the block reward subsidy allows us to amass large amounts of storage very quickly so the falcon test net right now has on the order of 20 petabytes of storage that is larger than any other storage network on on that's decentralized and um and it is way larger than many storage systems that are centralized today um you know it's certainly very small compared to some of the larger clouds but this is a test net with no with no economic incentive yet once there's there are very strong economic incentives we can likely amass hundreds of petabytes to exabytes um i think we're the the binding constraint we think will actually be the chain throughput so so right now we're already we're doing like all kinds of um all kinds of complex work to try and like squeeze more throughput out of the chain um but we think the binding constraint that's gonna actually um limit the amount of storage in the factory network will actually just be the chain throughput of being able to unload that like onboard that amount of storage um so that's kind of like a good problem to have but definitely something that uh has us looking very closely at all of the scalability solutions that are out there it's very difficult to make this into off-chain state channel kind of work there there is some potential for that if people are interested in exploring that as like an interesting hack it's a very advanced kind of deeper deeper thing um can definitely be looked at but it is a um a whole other whole other ballgame um the the so so one one part is like having this large amount of storage which is really cheap is is really valuable and really useful another part is is that a kind of decentralized piece of the equation of saying if we if we can enable a lot of parties to have these strategies and these marketplaces to exist very very well where clients and minors can find each other very quickly then that can can yield all kinds of cost reductions that are available to these smaller players but that are not available to large large parties so it could be that parties can price certain things at certain points in specific size but not in kind of a very large size or something like that or it could be that they might have some added added features or added services that some parties really really really care about so i've described this in the past as um being able to to um to express certain um characteristics about the storage facility like saying hey maybe it's hipaa compliant or maybe it's uh it like falls certain set of like structures for specifically some special type of storage and then being able to charge differently for that this allows organizations to specialize in that area without also having to compete with like the large the large clouds right so one one amazing kind of like unfair advantage for something like falcon against kind of a centralized cloud is that in a centralized cloud you have to compete with other centralized clouds one to one right like parties are deciding either they go with amazon or they go with google cloud or they go with like you know some other service and they're kind of comparing all kinds of features against that um when you when you think about creating a marketplace like this and in a decentralized network like this then you enable um the entire market together to compete with one of those centralized players and that and it really changes the tone of the the tone of the equation so this is kind of like the airbnb version of the world airbnb against hotel chains version of the world where you know before airbnb was extremely difficult to rent out your your home or whatever and that seemed like a like a crazy proposition but nowadays uh it is totally reasonable and totally possible but maybe not right now but normally uh uh you know nowadays it's totally reasonable and totally possible for uh um for renting specific um very tailored uh kind of cases um and stuff that like just wasn't even available before like there's all kinds of things that you can do in our own me now that just wasn't available from hotels before um and so that's something that we think is likely gonna happen here where there's gonna be a ton of interesting specialization where parties are going to be able to do certain kinds of storage um added services alongside um storing the data that is going to enable like really this really really interesting kind of storage cloud and market that is that wasn't kind of possible before so that's a really interesting kind of advantage but that kind of like again requires the these these like marketplace uis to emerge and so on um the maybe some other stuff to refer to that is uh um normal centralized clouds today require um a bank account and like a human to be in the loop somewhere right like if you're trying to hire storage for amazon you can't really do it if you don't have a bank account or an organization or something like that so having a network that only takes cryptocurrency enables to enables programs to do this right so you can now write programs that can hire their own storage um and either the program is doing something useful and valuable and itself kind of like in this kind of like weird self-perpetuating loop um which is kind of interesting and scary at the same time or um or you can think of applications as being able to hire their own computing and storage resources on their own for the end user without having to involve the developer so that's a different model of of application distribution that maybe this is what three box and and other versions of uh you know kind of like you you own your data versions of the of the world look like where the developer can write all of the application and so on uh and then that application itself can just hire the storage on their own without having to um based on the usage of a user right so like the then that application would kind of come in with a wallet or something uh or maybe would use the user's wallet from metamask or something like that but um but that's a very different kind of model of the world that becomes possible uh and then maybe uh would probably just touch on kind of like large volume and archival once you if we can amass this large amount of data and make it super cheap then like cheaper than other clouds um which you know if statement there um then we can then all kinds of things that aren't done today could be could become possible like uh you know right now it's extremely difficult to move around scientific data it's really difficult to kind of um back it up in the long term and like make sure that it's open access and available and so on uh all kinds of sites and applications can be built that make makes that really easy and really cheap um if we can if we can count in like some like stable cheap pricing and and kind of a decentralized market associated with this uh cool i'm gonna uh keep keep moving maybe um yeah i think uh we've i think we blew through another i think like another half hour there um the the platform area i would say um there's a lot of content in other workshops that is tuned for this of like how to do static assets on on ipfs and falcon and distributed how to how to how to do that maybe what i'll what i'll mention here is at the end of the day the most important part for any storage network is the applications so all clients will lag behind applications applications is like the main main main thing so really cool uses of of a platform that builds builds an app that they're kind of like app oriented are going to dominate and be much more important than than other things and so uh we're super uh super interested in in enabling all this kind of stuff and this is where developer tooling from uh from folks like textile and orbit and so on uh will become and fleek and whatnot will become really really useful to make all of this deployment really easy right so moving around static assets super simple with uh with um um with powergate and so on and web apps and so on can uh fit that with a with a slate workshop that's gonna happen on friday you'll hear about building desktop desktop apps on top of flower gate and what that looks like mobile apps i'm not sure that powergate is also aiming to do mobile you can also look at what openvasar has done and uh what uh what audiences have done in terms of building mobile apps with ipfs content itself once the contents on ipf's you can just back it up to filecom separately and so that's like a really interesting possible direction um and and some of them very interesting pathways here are enabling any contract in any blockchain to hire file coin storage that requires bridges and so that interoperability layer that needs to be built out but that that becomes really interesting and really valuable where being able to have being able to have like these um smart contracts that can call file coin storage from from any other chain um and kind of reason about that or potentially compute on it that becomes really really interesting so computing on the storage is a whole other part of the equation where you know being able to kind of marry something like golem or what truebit was trying to do with a kind of like you know scheduling workflows of of uh compute computing to match the data that that is like a very interesting holy grail of distributed computation one very important feature is that most most computing architectures are laid out such that you move around code really easily to the data the data is the hard thing to move data is really big really quickly and really expensive to move so you move the computing to the data so that means that mining facilities with a lot of data and the ability to kind of operate over that data would then kind of work very closely with could work very closely with some other network that does the computing piece of the equation right and so this could be something like cooling and so kind of like a like a tie in there could be could be really valuable or it could be something like um even just using falcon or ethereum payment channels you could use the payment channels as they exist today to to schedule workloads now getting verifiability over the computation that's way harder like if you want verifiable computation that's that now you start having to look at either you know models like truebit where you use kind of ensembles to verify that the computation was on correctly or you can go into like the snark and and start version of the world where you are running a much more expensive computation but you you do get some cryptographic proof that it was done correctly um we think that uh building out a layer of all the data and and just getting getting all these really important data sets in place and it is like a really important milestone to then enable a lot of that interesting competition to be built um and so there's a lot of different interesting possibilities there um but we haven't yet we haven't yet seen really good kind of um comp distributed computation models with cryptocurrency yet um we think that that's gonna that as as groups like golem and others uh uh continue to expand their their uh what they're doing that'll that'll get really good um maybe a hack here for those people interested in this might be focusing on computation that that's public by default so that so that you don't have to worry about private sensitive data and if you can restrict the problem that way then verifiability gets really cheap because all you have to do is keep a trace around of the computation and you can always replay it later to check if it uh if it was done correctly so that means that all kinds of things like developer tool ci or rendering or like a complex modeling of scientific competitions or video like game game like rendering or or movie rendering all that kind of stuff becomes really really good fodder for this because you can store all the assets and process them alongside and if any party did something bad you can always check the trace and verify it like after the fact and if they did something bad then you could you can slash collaterals and so on uh and so that's a much cheaper cheaper model uh doing verifiable competition with private data that's that's what's really difficult um maybe i'll mention one more thing here which is um one very important target use case that we're going for is to be able to host an entire web3 app like a like a a uh the entire life cycle of a of a consumer application entirely on platform meaning the the binaries like the code is back up to it the the binaries and the artifacts that are produced whether it's a web app itself or a desktop app or something like that the binaries can be distributed with filecoin and then when you run it locally in the user's machine you either have no kind of like backend business logic because many applications do that which is like a great case um and you only have to worry about user data and that usually you can back up to filecoin easily or you deal with some kind of business logic in the backend and that's what you you can use either contracts or apis for so you can use either if the business logic can be can be modeled as a smart contract then you can put smart contracts on ethereum or other things like that or you can do um or you can just hit some api from a centralized service if that's what you need um but then most of the application just all of the static assets and the entire thing can be distributed around with with popcorn so let's kind of look at like a good good good target thing that we're that we're going for um cool i'll uh touch a little bit on the on the decentralized economy i'll i'll leave most of the interesting discussion for the future um if this is interesting i'm happy to kind of give a workshop it's less relevant for for hackers so i wasn't gonna cover it but i think based on the questions that i've heard today people might be might be interested in this i'll just describe that there are many different parties here and it yields there's a bunch of different strategies that people can can um can can take to to uh um try and um carry out different kind of like economic activity um there's a lot of different business opportunities that are that happen because of of the network meaning we're looking at things like you know first of all there are things like chain explorers and so on there are like these minor marketplaces that we've discussed or there are things like snarks as a service like you can you can run um you can think of a piece of the computation that needs to be done in falcon and then set up a service for that and then use file code payment channels to run it or there's there's um other kinds of other kinds of operations so like a powergate like a hosted powergate service which is something that textile is doing is another interesting discussion for um very interesting kind of like direction for for uh service providers right so you're you're noticing hey applications need this service to run somewhere then i can build a business associated with that um and so on similar to how there's just a whole bunch of different businesses around um different different blockchains like ethereum and so on and so there's a lot of very interesting niches that are being created right now as as we build a network that um that are really compelling and interesting business opportunities then kind of on you know separate to to all of that there's um a bunch of interesting parameters about the falcon network which are include things like you know details about the storage market how much data there is what is the block reward what is the um what it what is the price of the token what is the um what is the uh what is like the is there a loan loan market available and so on all of those parameters will yield economic structures that would enable agents to kind of like either make other economic structures on top of that or would imply some kind of economic policies needed meaning one of the important you know tasks that uh at hand is setting like the right crypto economic construction parameters for for setting um things like pledge collateral rates and and so on and so those are like very interesting questions that affect the entire economy and some choices there will yield a good economy that works some choices there will yield an economy that won't work so that's a a lot of our of our bandwidth as a team is going into into setting the right economic parameters for uh for the network one really useful model for thinking about uh about popcorn is you can you can model it as a country that that exports one good and that good is um is cloud storage and you can think of the currency as like the national currency of the you can think about in the token as a national currency of that of that um of that country and then kind of clients buying the storage from the miners as you know trading some some other nation's currency for the falcon currency and so again if you take that model and you think about the economic production inside of that of that nation um then you can reason about the economic productivity of the nation like can you more efficiently turn the raw materials i.e like hard drives and and storage facilities and so on and labor into valuable cloud storage better than other economic entities and if you can do that then then the economy as a whole will do will perform better and if you kind of model the a lot more of the goods used in the production of that of that economy as as being within the economy then that economy will do better so again this goes into um selling some of the hardware directly in falcone or um or you know looking at other parts of the production pipeline and and um and making it part of that and so this this is a very interesting part of all of these networks is that you're you're doing something that is somewhere in between companies and nations where like you're able to kind of isolate some portion of the of an economy and and and then create a group that together is going to um work together in some economy uh in in a very like interesting interesting way right so this is something that probably is different from other blockchains where the cost of production for something like ethereum or bitcoin is primarily about producing hashes and producing the blockchain itself but once you look at producing something else which is producing the and maybe you can think of like producing the the ben the benefit of having a transactional service maybe maybe the smart contract execution is a production of something like ethereum um uh in fact cases about the storage and so you know thinking about modeling that that way you'll sell all kinds of like interesting um uh potential policies and potential uh opportunities for folks who who kind of can reason about that um that economic construction uh cool so maybe i'll uh end by like giving a couple of examples of like some of the folks that are uh in the in the ecosystem so i've shown this slide with a lot of the miners this is amazing like the level of storage facilities that we're looking at is are really really amazing um this is a this is one snapshot of a whole bunch of organizations that are involved with uh with falcon in a bunch of different ways and so this is a a view into into like the broader uh you know kind of falcon ecosystem and um there's a lot of like really interesting groups that are that are building out um uh uh stuff either applications or services or helping build the chain itself or helping build implementations of the protocol um you know there are there are four protocol implementations um built by by different organizations um there's a bunch of infrastructure that's getting developed so maybe i'll i'll talk through some of the highlights um so i think yes the protocol implementation so that's protocol labs uh chain safe and for mitsu um we're gonna be handing gofalcoin maintainership of goldfalcon out to the community then there's um a whole bunch of like infrastructure players that are building tooling that's really critical for the falco network so we've mentioned powergate a lot that's one really important valuable tool chain that emerged um another one is uh all of the ipfs spinning services so inferior pinata temporal and a whole host of other other pinning services end up being really important and valuable to the to the popcorn network then there are there there are groups like um so then there's a whole network called uh dram which is providing the the the randomness that falcon uses and there's a number of organizations kind of helping back uh you know actually provide that uh then kind of beyond that there's a whole bunch of like very interesting developer tooling that's being built by by folks like um like truffle and and open work labs and and zondax and node factory and a bunch of others it's pretty pretty interesting interesting um developments there um then there's a number of collaborators around researchers many um many labs at various universities working on a bunch of important questions uh in falcon uh including like very interesting economic modeling and then there's um a bunch of help in terms of just development of a bunch of really critical pieces like all of the uh it really takes a huge village to like produce something like as big and complex as this uh things like um groups like uh supernational and and carbon five and finality and digital mob have been making all kinds of components like some of the key pieces that that are going into optimizing some of the proofs or making pdfs in the long term and um and so on and then in uh there's already a laying out a bunch of infrastructure for for being able to use the token and being able to use um use the uh contract facilities of file coin so you can already start looking at um uh as an integration is coming to do things like metamask through snaps and and other things like that and then you know all of that is kind of like infrastructure then from there we get into like applications like clients um all kinds of things are getting developed there and um there's some a number of other really interesting things that will pop out over over the new over the next few weeks so um most of these folks are on slack so if you have a bunch of questions you you might end up using libraries from a bunch of different folks um you can poke them on slack so you can you can contact them you can ask questions and and so on um and don't be don't be afraid at all about talking about what you're working on and hacking on and maybe some of them can can actually help you think through how to how to structure some of it and so on so i think definitely like rely on rely on all these hooks uh cool so i think with that i'm gonna call it uh uh end uh in the workshop uh i'll maybe uh give a give a little bit of space for maybe the last two questions and then and then stop because we've been going for a very long time and i feel really bad that i'm holding up everybody any more any more questions nope i think i think we're good all right that was a all right that was a great session uh thank you so much sir sorry for uh taking forever um and uh yeah hopefully hopefully it was useful uh definitely give me a bunch of feedback uh on chat i'll start up with right there if people wanna hear more about certain things definitely tell me there um i'll tune uh stuff from uh i'll choose for for next week or something uh around um based on your feedback so uh we'll definitely like uh listen to what you have to say uh sweet uh thank you so much really thank you so much andrew and jacob for for sticking around uh as long as i know it's super late for you guys so uh really uh thank you for the time and thanks for everybody for coming thanks everyone we'll we'll end it there good night good morning good afternoon take care everybody bye 