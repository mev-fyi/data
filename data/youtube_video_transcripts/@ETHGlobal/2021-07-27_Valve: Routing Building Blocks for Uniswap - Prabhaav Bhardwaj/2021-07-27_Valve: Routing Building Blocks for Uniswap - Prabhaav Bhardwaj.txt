so valve finance uh we got a grant from unit swap to basically identify inefficient unit swap routes so as everyone's familiar in this forum uniswap uh has a pool where two assets are traded and the price is determined basically uh after a trade and arbitrages come in and either bring the price back to what it's supposed to be or um pretty much yeah uh what happens with uniswap right now with the ux in the front end is it's hard coded to go through certain tokens so the tokens are mentioned down here eat usdc maker comp a couple of reasons for that one these are the tokens with the most liquidity that people are able to add pairs for and they're also the most well known tokens now what happens with the front end is when a trader comes in to trade take an a for token b unit swap b2 and just to make a note real quick this is all on b2 and not on unit 12 b3 um so on units while b2 what happens is even if there's an optimal route that's better the ux will route the trade through the six hub tokens and what happens there is the the pairs that are not part of those hub tokens the tokens there are mispriced then you have these vampire bots coming in and arbitraging uh them back to reality and the the lps of these mispriced token pools are experiencing impermanent loss the other issue that happens with uniswap is routing is they are focused on giving you the lowest gas fees now this is great uh up to a certain threshold let's say if you have trades less than 500 or a thousand pick a number like a small number this is fine because the gas fees are uh the lowest gas fees are better for that but when you want to do a much larger trade let's say in this example for 10 000 badger to grt you pay for it with a lot of slippage so the price impact is around 14 because unit swap just takes one route they don't do any sort of order uh route splitting like for example one inch so you can see in this example you got about 140 000 grt but badger uh but one inch gives you about 160 000. what they've done is they've optimized for returns over gas and in the next couple of slides i'll go over that some more but you see that they can basically one inch is a decks aggregator so they have the luxury of using multiple protocols in this case to give you the maximum return here's another chart that kind of reiterates what i've been talking about with gas fees so unit swap regardless of uh the price regardless of the size of the trade will always be the lowest gas fees because they will only take one route uh usually one or two hubs whereas dex aggregators what if you can see in this chart as water size gets larger they start splitting it they start to using multiple protocols and the gas fees are of course much larger but this doesn't really matter when you have a large enough order that the returns will more than offset the gas fees and we can see this in the types of trades that happen on uniswap and one inch so in uniswap the median trade size is about a thousand and it peaks around 2000 earlier later of last year but on one inch there's a lot more larger trades happening and this is a big problem for units well because these are all p fees just go into different protocols where they should be on unit swap so the solution that we're working on is to algorithmically solve the routing inefficiencies instead of hard coding the six hub tokens and uh expecting you know to solve the eighty percent uh the problem and just kind of like not dealing with the twenty percent inefficiencies what we're proposing is a solution where we traverse the unit swap graph uh for all routes regardless of hub tokens and give you multiple options to take so our initial our current grant that we were working on right now is to identify multiple routes from token a to token b regardless of the six hub tokens um what we want to do in the future is split trades across multiple pools so this is exactly what one inch does but instead of going through multiple protocols at one inch has a luxury roof we can still do this with uniswap with the multiple routes that are available uh more interesting ideas are to actually test and simulate these routes with accurate gas and liquidity information that's real time whereas right now we're built our system uh using uh this graph uh back end uh and also crossing protocol versions so there's a lot of liquidity moving to v3 there's still a significant amount of liquidity on v2 and with talks of uniswap deploying on layer 2 liquidity is going to get further fragmented so giving users a holistic view of where their trades will get the maximum return of course we can do more interesting order types like limit range orders buying every month etc that the current ux just isn't able to expose so here's a quick example of our tool um so similar to the trade that i've been talking about from badger to grt all these routes are unisop routes that we put together uh for a small enough trade for a hundred badger of course uniswap route makes the most sense but as you get larger and larger trades just by splitting the order with two routes or three routes you're going to significantly decrease the slippage which as i mentioned will more than offset the gas cost and more importantly all the lp fees are staying on unit swap instead of going to other competing protocols the idea of fragmented liquidity i've mentioned i just wanted to add more data to that so if you look at it here right now with unit swap v2 and v3 there's a lot of trading pairs that are replicated on both v2 and v3 and as you can see the liquidity is fragmented so just doing almost like a uniswab dex uh aggregator of routes you can get a lot better um returns on larger trades and traders who want to you know make those types of trade don't have to go to one inch or a different decks aggregator they can do uh small trades to large trades all on unit swap some ideas that we've also explored is uh mev protected trades so with the advent of flashbots we've all been familiar with what's happening with mev and uh if you go to explorer.flashbots you will see that unisrop v2 is the biggest contributor to meb there are a bunch of different reasons a couple like ones that i've mentioned earlier of mispricing of pools that aren't in the hub token routes is a big reason for this and also using flash bots to hide your trades would greatly improve uh mev protection for unit swap users some future opportunities that we're exploring one of the ones that makes a lot of sense is a unified professional interface for unit swap traders so similar to what coinbase and coinbase pro have for professional traders what we're thinking about is building a unified ux for unit swap where you can view uh liquidity on multiple layers layer 2 layer 2 providers like arbitrarium and optimism you can view it on multiple protocols whether it's v2 or v3 uh and also the advanced features that i've mentioned before and there's a great parallel for that with quinta quinta is a team that's spun out of synthetics that build a better front end that had advanced features that the synthetics exchange just wasn't exposing and they're using synthetics all in the back end some other features that we were considering uh and this is mostly for future uh grants uh there's of course a trade generator that i just went over testing and simulating i'm even protected trades the unified front end live price and real-time data this is going to be absolutely absolutely critical when you need to make trading decisions based on the data that we're providing and of course constraint editors if you want to set certain slippage gas thresholds or a number of hops protocols layers as we solve the problem for traders it just makes sense to look at the other side the supply side with the lps some of these ideas have been discussed on the unesco discord of the features that the community is looking for automatic position management algorithmic aina somalia is addressing some of this there's also interesting nuggets like uh supplying only one part of the swap so let's say you have bao uh and mkr and you just have bowel in your wallet and you just want to supply that and you have to wait for some other party supply mkr so some ideas there are kind of what uh cal swap is doing with coincidence once uh basically uh finding the other side of liquidity for you to add to the pool and of course unified front end keeps coming up over and over again whether it's the lp's or traders having a front end that allows you to view all the liquidity across different protocols and layers is absolutely critical and then opportunities for you to invest your money so if you are an lp today now you know this has been on the twitterverse on discord i'll peeing on the current uniswap interface is confusing where do i set my ticks etc and also which which pool should i put my money in where where is the best return for my money so those are some of the problems that we can potentially address in the future uh that's all i had for the presentation i can quickly go over our uh still working demo so here what we have is just a basic interface for input and output token uh so let's say i want to go from ava to balancer i can put in some sort of the amount of tokens i'm exchanging increase the number of hops and then say this is the max amount of impact that i care about so when i do that it's going to return a bunch of routes so obviously it's a small enough trade unit swap will be the one that will have the most optimal trade and as you see this animated line is indicating that this is also the trade that we recommend now when you try to go to bigger trades like i was talking about with badger let me just do that real quick so let's go from badger to grt and i'll start with a hundred badger and that will show you the different routes that are possible and again these three routes maybe even these four routes have pretty similar returns but if you just split this with two or three routes again you'll get a lot more return versus the gas fee you'd spend now if i increase this to a thousand you'll notice that unit swap the wrap will start becoming a lot worse because they're just uh picking the hub tokens but yeah this is uh uh kind of like a quick demo of what we're working on uh i'll ask ac to just paste a link to the paper that we have written so this kind of walks through the ideas that we've had how we're thinking about it and it has a lot more technical details of how we modeled our data and also what we're thinking about in terms of caching and scaling when this needs to go to real time and of course we do mention some of the information that i went through with future potential ideas would love to get the community feedback on this if you guys think that some of these ideas are great what you're interested in maybe there's ideas here that we haven't addressed i would love to hear from you guys on that um that's pretty much all i had to present happy to answer any questions thank you that was an awesome talk and a really interesting idea um we do have a question from uh the chat and the question is uh what happens if uh somebody arps one side of the lp pool with the other decks as you're making this trade it's a good question uh we so is this uh from a different decks is that uh i believe so uh i'll ask them to clarify when they hear this in a few seconds but uh the assumption is yes yeah uh not really sure we'll have to think about that more um so from our perspective at least initially what we've thought about is just getting better returns uh for users just because like just doing the bare minimum because people shouldn't be going to a decks aggregator when there's multiple routes available on unislab to get from tokenated token b uh there are definitely edge cases that as a question as the person is asked about that we need to address uh happy to take that offline and talk more i think ac is also on chat so he can of course uh answer that and then we got a clarification which was yet the context is on other decks in that case so makes sense um you showed a really interesting demo i guess maybe uh and a question from my end is just what are kind of the silly open problems that you haven't figured out uh that have different tradeoffs here and just sort of what does it mean for the roadmap here for this to be readily available for others to test yeah uh as i mentioned i think in the earlier slide the first part of our grant was just to identify these routes so what we plan on doing is uh now that we have a at least a working demo of that we need to have more up-to-date data on the liquidity and the price information um so we update this like about once a day what we want to do is get closer to uh maybe like every 15 seconds or every like couple of minutes eventually what we want to get to is directly connect to the json rpc and get real-time data so you can make these trades and you can compare with unit swap if you want to uh and splitting the trades is just it it's a soft problem in a sense with you know how airline companies you know move people around so it's gonna be us just trying to figure out what will get you the best return uh after talking to the unit swap team that is that's what they're excited about is if can we get uh them uh from token a token b uh with more of a return than what the unit swap ux can offer that's awesome and then uh there is another question that um ac is actively answering on the chat but i'll ask it for i guess completeness which is um can unit swap itself be optimized so that people don't need to go to other decks um and or use a alternate service like what about back porting these changes or routes into the main protocol that's my that's my understanding uh absolutely i think uh maybe it was a design decision on unit swaps side to say you know what we'll just use six hub tokens and uh we will always optimize for gas fees um so they could definitely do this but as we've seen like they're pretty busy with v3 and an interesting point to make here is with v3 this problem gets even more complicated because there's active and inactive liquidity routing through ticks so would be really exciting to see how this would work with that uh our initial foray into v3 is probably doing what uh dexter is like one inch are already doing they're just looking at what v3 rats are available and just suggesting those uh instead of us building our own pathfinder algorithm for uh v3 but i think it's just these are very straightforward optimizations that i think of course unit swap could make um i'm not really sure why they would but uh of course they could totally do this well i hope that answers a question from our audiences and uh thank you so much for that awesome demo and presentation and this is a super interesting problem to be working on so thank you 