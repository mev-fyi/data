feel like the flashlights coming I feel like a deer in headlights right now with this one but okay all right do I start camera rolling just kidding all right great um it's a pleasure to be here I guess this is my first Eve Global so I'm not sure what to expect there's no code over here which is a business business uh I guess Workshop I'm going to talk about two things one I'm going to talk about how to leverage apcoin Dao and then you know we're going to have a little announcement about the prize pools later on and also I want to explain about the Asia opportunity which I think is relevant since I'm finding that in this part of the world people do not know the opportunity that exists in Asia and there's a lot that could be done here all of you are building great projects you want to raise money you want to go and you know get new audiences Asia is where it's at we think so let me just very quickly I'm actually wearing an eight coin hat today um I used to be a special council member but you know very quickly I just telling a little bit about myself and the business uh you know we're very focused on digital property rights uh we've been trying to advance web3 for a while we've done over 450 investments in the space so yes if you are interested in getting some money for your web3 projects you can come talk to me and my team later on um and uh you know we're one of the sort of biggest investors in this space all right let's get into it Asia I'll start with that first so uh South Asia southeast Asia North Asia represents over 54 of the entire crypto market today and it's really growing very fast when it comes to total volume of trade India Thailand Vietnam Singapore our top and Japan obviously Korea and Hong Kong are coming along very quickly and again they represent actually the majority of crypto Trading one of the reasons why Asia is so big in crypto is actually it's a digital first culture so you can't really see the screen quite well here but what you see here are basically um two uh two Beggars actually all beggars in China basically beg with WeChat pay so instead of asking for cash they ask you to put money in their digital wallet and that's been going on basically for years and years and years and so This Is Not Unusual so the culture is so digitally first that everything is very natural to basically go into sort of a crypto culture as a result time that people spend online in terms of hours spent online but here's the opportunity Asia represents about 54 actually more now percent of the world's Global Internet which obviously is critical for people doing stuff on the web there's more than half of the world's gamers are in Asia at this moment in time and it's growing rapidly but in terms of adoption still there's only 67 so roughly two-thirds of the sort of uh internet penetration in Asia so this is in contrast to the US for instance or Europe which has almost full saturation so you have a market that basically is already the biggest Market when it comes to internet penetration and crypto adoption but like in places like Vietnam it's actually 17 of the nation but when it comes to uh actual growth path it's not just the fact that people adopt in crypto it's also that people are experiencing basically the internet in a digital first culture and nature for the very first time because they're still being onboarded and one of the other areas of onboarding also comes from the fact that um Payment Systems in Asia actually have a real good sort of crypto rail necessity because of the fact that that there's a big portion of people in Asia that remain unbanked because they're basically not making that much money whether they're in the Philippines you know they get the stories up you know if you heard about axi Infinity many people signed up basically for crypto wallets over there to play the game but they didn't have a bank account uh they were technically unbanked they didn't have any you know like Financial education if you don't even have a bachelor's degree you never went to college and here there are basically you know buying crypto and basically playing a you know blockchain played earn game for example so that sort of represents that opportunity in places like southeast Asia which continues to go rapidly um and also in this year and the coming year is pretty much all of the global growth is going to come from the region so this is a macro Trend so it's not even just a specific crypto Trend it's a macro macro Trend Asia is going to represent roughly 70 of global growth this year and continue to grow from that so again you know it's a it's a market not to be ignored but there's some other things that are relevant um to think about which is also the regulatory climate unlike you know there's been a lot of focus on looking at what the US is doing obviously the Ripple case is good news for most people but generally speaking unlike the the US Asia's regulatory climate for for crypto and digital assets has become much clearer and much more friendlier so for instance in Japan you can actually do a legal ieo that's approved by the jfsa which is a financial regulator you can actually have been you can actually do that through a proper process it's probably the only country or one of the few countries in the world where you can do that uh you know the you know outside of Singapore Hong Kong has been very forward as well in terms of basically crypto regulation you can basically get exchange licenses you will have Clarity in terms of retail trading which I'll go into some further details and I'll explain a little bit why that is the case but even places like Japan have made web 3 and the metaverse part of their National agenda so we have a very friendly regulatory climate on top of friendly user adoption versus other markets so again I urge people to take a look at that so these are some of the major hot spots I'll make this presentation available online so you can you know have to take notes but I think the one thing to note here is particularly for Hong Kong and the reason why I think Hong Kong is so valuable now is because it's not just about what Hong Kong does it's really about China in some places which I'll explain later Hong Kong has now put together a web 3 task force that task force con comprises of Business Leaders in the industry including myself as well as people from government whose main job is to basically push web 3 and metaverse development in Hong Kong there's also a marketing budget it's about 50 million Hong Kong it's about six or seven million years to also if you want to make an event if you want to sort of promote stuff in web 3 you can actually get money from the government to do that specifically for web3 so so again you know this is the other thing which is interesting it's probably the only um only regulated in the world that has sent a message to their Banks and said you need to do business with crypto exchanges so just imagine imagine you know the U.S treasury doing something like that sending a message to Citibank saying hey you got to do business with you know coinbase and stuff right not going to happen probably but in Hong Kong the hkma basically went out and sent messages to you know basically Bank of China or HSBC and told them you need to basically support crypto businesses in Hong Kong so again at first the hkma also issued um which is the monetary Authority also issued the first tokenized green Bond so that's just to demonstrate just how aggressively they're trying to push web3 meaning that if you still can't open a bank account wherever you are in the world as a crypto business you can try Hong Kong okay so outside of licenses there's crypto ETFs you can actually buy Bitcoin ETFs basically in at HSBC today you have basically a retail trading framework there's now 16 tokens that are available for retail trading in Hong Kong more importantly though there's a very clear way in which your tokens can trade in crypto so unlike the lack of clarity that you might have in other places around the world as long as the tokens are listed in two major indices you can basically apply for essentially having the token be traded for retail trading in Hong Kong for instance and Hong Kong is the fifth or sixth largest financial sort of uh I guess Center in the world so again we're not talking about sort of you know you know like a like a small place that's adopting this this is a major major uh sort of area that's adopting it so we think this in the next year a lot of growth will happen from there now why is this relevant well Hong Kong has always been the financial intermediary for China in the same week when these rules came out and when retail trading was allowed in Hong Kong which was in June Beijing released a white paper for basically web3 Innovation and development which is basically a strategy paper on web3 where in which they actually specifically said that web3 is the future of the you know internet so Beijing is putting quite a bit of capital and money in to promote basically blockchain and web3 development which is very confusing for a lot of people because people sort of conflated the issue of China as oh aren't they anti-crypto and so on we can maybe discuss this a little later um but I think the other thing which is relevant is that on for those who know about China CCTV which is basically like the national broadcaster that every Chinese person sees in China basically started talking on public TV in that same week how you can buy Bitcoin in Hong Kong so you know what does it really mean well I mean I think one of the big trends here is about the fact that China is looking to promote we think this whole digital asset space but through Hong Kong in the same way that Hong Kong has always been the financial intermediary for China you know for foreign sort of stock purchases for foreign exchanges in terms of currencies and so on so so we also think that that becomes a mechanism where it will ultimately people from China will be able to sort of participate in the digital assets Market but through Hong Kong so that's that's again you know where we think a lot of the growth will happen and of course another big thing is that ape Fest is coming to Hong Kong in November so if you haven't made plans to come visit go check it out since we're going to talk about Bitcoin very soon and that's also the same time when we have basically uh fintech week which is uh the week in which you have a lot of General sort of web 3 activity happening in that time so expect a pretty good time if you can make it out in Hong Kong places you know outside of talking to companies like us you can go to invest Hong Kong they'll you know they'll give you support sometimes they pay for your tickets uh you know for you to come to Hong Kong to do stuff so again they're trying to sort of help you come there it's probably the one of the most active governments right now that are trying to promote web3 so this is your opportunity to take advantage of um if you if you're so interested and of course this accelerators in Hong Kong and so on I won't go into the details of this but again if you want more information I'm happy to share that later now why is Asia so friendly to web3 I think this is important when we think about product Market fit and about sort of philosophy a little bit so I'm talking about this here in the context of Asia this is an example of Korea but the same is true for China for Taiwan you know for Southeast Asia about 40 or 50 years ago South Korea which you all know today you know because of BTS and you know K-pop and all that type of stuff was actually a nation that was poorer than North Korea it was one of the poorest nations in the world but not today it has a GDP of probably the 12th or 13th largest country in the world and why is that well that story is the same story for most Asian countries during that during that during those decades because they adopted property rights they embraced the form of I guess Democratic principles and they basically went capitalist and that was a very big deal so in living memory you know for instance my parents generation and for most let's call it Asian called it Chinese or Korean people or Southeast Asian our parents didn't have anything they didn't own anything you know they lost their property they didn't have any rights whatsoever and they got they saw the benefits of capitalism so even if there's inequity they actually generally are big Believers in capitalism they see it work it doesn't matter if this person makes more money than the other person broadly speaking we do better this is important to understand because it means the framework in Asia is the pro-capitalist which is how we look at crypto is a kind of digital capitalism the other thing is because of the last 30 or 40 years in Asia there's been a lot of instability this has caused you know because of Civil War because of the cold war because of the Vietnam War the Korean War all these things have caused a lot of immigration from from these places to go outside of the world to look for better pastures but at the same time also a lack of security so that means they're all looking for ways in which they can enhance their self-sovereignty so one of them is to buy real estate overseas that's a very classic I guess Chinese thing to do but the other thing is also to have uh sort of other forms of self sovereignty which crypto starts to represent I can hold my own assets self-custody of my digital assets you know the government can take it away these things start to become very important and also payment rails that I can control as opposed to being gated so again that's another reason why crypto is so popular this is in stark contrast to what we see in places like the US for instance which over the last 30 years has moved away from you know like this pro-capitalist narrative which is still you know America could still be called I think the center of capital them except for you know in the recent study I think it was a Pew study showed that you know Americans under the age of 30 majority started to skew socialist whatever that might mean to them because capitalism hasn't worked for them and so we see this effect so for instance in Asia all major gaming companies are pro-nft right whether it's Square Enix whether it's you know Craft on the makers of pubg Nexon net marble us whatever all these companies are all pushing nfts and web 3 and digital ownership whereas in the US it's the opposite right many of the gamers are rejecting it and we think it doesn't come from a perspective of sort of you know what they are it's a very emotional response their rejection on on sort of um crypto is more about a rejection on capitalism broadly on this sort of idea that you can make money playing games that seems wrong and it seems wrong that you know someone should be able to sort of pay their way into it which is very different from from the Asian perspective so the thing we sometimes say is that the American dream is more alive and well in Asia than it is in the US so I think it's again an area to look at for for growth and opportunity um and I think the final thing I'll say about Asia before I start talking specifically about apcoin is you know obviously there's an ecosystem there you can raise money from it there's very active VC investing but also that influence that Asian let's call it I guess capitalist sort of property rights narrative uh has spread through the Asian diaspora so we're in France there's more so the example here would be there's more Asia there's more overseas Chinese as in Chinese diaspora than they are French citizens in France so just gives you an idea of just the scale and size and of course there's many more Indians and Japanese and Korean and they all sort of embody that same they ought to embody those same values and they communicate back with their sort of you know families back in their countries and so they create that bridge and it's therefore not a surprise that from a ratio it is those same communities that also have a higher proportion of crypto ownership or nft ownerships for instance Asian Americans have a higher proportion of nft ownership for instance in crypto ownership than they say other other groups as an example and again it comes back to sort of sort of that cultural past that I just described before all right so that's Asia pay attention in case you're interested now let's talk about dials I'm going to focus on apcoin dial but I just wanted to illustrate why dials are so relevant for this it's not just maybe because you want to build it down but also because dowels are funding avenues for your businesses uh there's about 160 active dials or so give or take um you know in web 3 and the collective amount of money that is under the Community governance of these dials is somewhere between 12 to 14 billion dollars which is very significant so you could look at raising money for your business you know in a classic VC route you can ask your Mom and Dad too of course or you can try a dow and so I'm here to sort of give you a little bit of sort of insight as to you know in the case of apcoin uh how you could possibly raise money from them and you know you know budgets have been approved in the millions of dollars but also in the tens of thousands of dollars and later on we'll hear about a you know prize of ten thousand dollars worth that you can earn but you know you could you could get so much more if you are able to sort of sort of appeal to the eight coin down all right so I'm out the time oh shoot oh God damn all right okay go faster so um working group structure you know basically you've got the special counsel I will name them all they're out there the role of the special counsel is basically to vet essentially many of the proposals that come through but maybe I won't talk too much about the governance and I spent too much time on Asia but let me just explain to you maybe the process when you want to make a proposal you basically submit an idea to the um to the Dao that is basically in discourse a proposal where you basically discuss it with a community that can be very active which I encourage you to take a look at that then enters into draft stage the working group basically helps you with the Drafting and then it basically it goes to vote in which abecon holders basically vote to basically get the proposal approved I would say it's a little bit like political lobbying you know these are the proposal categories you can go to basically you know eightpoint.com and learn more about it there's multiple allocations and multiple sort of missions one of the things that is really important is when you go and apply for funding in this style you have to ask them sort of how does it benefit the Dow ecosystem now this I think is the one point that's not often discussed and not often written about which is that if you want to basically get a vote passed you do have to basically engage the community you do have to basically not talk about just individuals but also address the delegates right and the delegates are the ones who are basically like your you know quasi super Pacs basically of of apcoin and that's uh that's something means you have to engage with them and talk to them and essentially I see it as no different than you basically appealing to venture capitalists except in this case you're going to different delegates and appealing to the end to the communities for you know to vote for your proposals um you know okay so I'll just skip through this this is an example of uh sort of something that was approved in the acorn dial you can basically um this is basically thank thank ape so when you it's a when you end up doing something in the apron Community you get rewarded activities and you get rewarded in apcoin uh to sort of increase engagement uh here's something that's a little bit more tangible it's an accelerator that was approved for half a million dollars in funding or if you were building some something with apcoin you can basically get half a million you know they were funded with money to basically fund an accelerator program that would basically support you know Bitcoin uh projects or projects that utilize a coin for instance and of course we have a proposal that was also approved that basically allows Acorn to be here at least Global for instance for marketing and so forth um yeah so there's many ways to get involved at 8.0 um I know that I'm short on time right yeah so we moved to q a so I'm apologies um for not sort of um spending more time on Asia than on a point but maybe if you uh do you want to announce quickly the prize we're giving away ten thousand dollars in prizes there's two different categories so so uh the best use of eight point and adapt and so think about aprons like more like a consumer application I mean you talked about Asian payments a lot like anything related to that anything related to Consumer games uh in-game currency things like that and then the second category is something that that contributes to the ethereum ecosystem but in a way that also benefits nfts and the eight point community so think about that as like six five five one nft ownership or for account extraction 437 anything related to security things like that so uh each each category gets five thousand dollars we're giving away five thousand dollars in each um as you can apply to either and they're just a little bit really quickly on just the technical stuff around apcoin so it's an erc20 uh it's there's a there's a test token on Gurley in order to um qualify for the prizes if you do use eight point you can use it on polygon you can use it on testnet you don't have to deploy it on Main right now and there's like maybe five percent were actually contributing whereas like the rest of them are just like writing GM once a day and that's well um thankfully in the case of Bitcoin I would say that the community is quite active we just finished our last special Council election uh where I basically stepped down and we had a few new members two new members join and uh we've had almost uh I think it was 25 to 26 million uh sort of tokens voted which is you know today's equivalent value of about 50 or at that time 60 million dollars so it's still quite active part of it has to do with the fact that I think Bitcoin has become quite mature in terms of its working group structure so when I gave you this example here you can see that there's an actual sort of community structure which isn't just upheld by essentially a special Council Group which you could almost consider like a leadership which in the case of special counsel it is not at all but you have working group levels at these levels you have different teams you know the metaverse team and the treasury team they're actually elected members so every time so the way I think of a successful Dao is the more you create more democratic rails as in you force people to say look I'm electing this person in this position to run in a certain way they become campaigners of that as well so they engage Community I think one of the problems that a lot of dowels have is they don't have actually that much um let's call it true distribution shall we say right there's often criticisms that some of these dials have sort of a few holders that can control the vote for instance well at that point it's not really a Dao it you know may appear to be like a Dao but it's actually not that different from you know like I guess you know some people call themselves Democratic but they're not truly Democratic so I think it's the same same thing and when people become cynical and I would say that for the apecoin in the beginning people were cynical but if you take a look at for instance you know the delegates here as an example this is just the top I mean there's a lot more and there's a lot more voting power you know even you know if you look at the special counsel as election 25 million tokens are voted the top delegate um with mocha versus about 1.7 million tokens yeah sure it's a big chunk but it's still a very very small Chunk in comparison to swinging sort of that vote so I think that is um that is important so I think people feel like they have a voice I think that's the most important thing I think in any Democratic structure which you know in the case of a Dao the same finally of course it helps that you have a billion dollars of potential funding in a dow right so if you want to raise money from the Dow then you know there's a good incentive to do so and the community turns out to be quite uh quite um quite careful right there's criticism that oh you give this to you if you don't give it to professionals they're just going to go throw money at parties turns out to be all which is what we thought anyway right in fact the community is very Vigilant you know proposals that are trying to raise money that are ridiculous never get approved for instance um so it's just an example that actually sort of wisdom of the crowds does work very well when applied correctly okay that's all we have time for a thank you yet thank you if you're going to stick around for the next presentation we'll begin in five minutes otherwise uh thanks for for joining us for this one foreign thank you foreign yep hello okay first of all big thanks to all is global crew uh let's appreciate them for fantastic job to put things all together and my name is Vadim I'm from near and I'm engineer so I will have some live coding session in the end but today I came to present the BOS which is blockchain operation system I will show white how it works why will you use it and actually how it works so from the beginning we're all here because we believe in the same principles we want users to have their own data actually their own identity and obviously we want them to have their own decisions but right now we're acquired quite far from this point because most of our for example laptops or software applications are running on a large company servers and actually data belongs to those corporations and we are using bank accounts every day and similar as money is sitting in the bank and banks are doing whatever they want without money similar large corporations are using our data [Music] themselves and actually so and the problem that they have these silent advantages for example the reputation you built in one application doesn't translate the reputation in another application in this case for example Uber reputation and lift application has no link our Corporation can remove features they can increase some fees or many block your account block your data remove your social graph every day we have some news about new censorship corporations like Twitter Reddit they increase some downloads download trade limits remove API functionality and speaking about data leaks because all the data is sitting in one place and human are making mistakes there are a lot of leaks and some potential problem of that data leaks so here well here actually to fix this problem most of the of those problems we are doing cryptos staff we're building some amazing functionality and I have an example of being the game so if you have like three terms from this bingo game in your pitch docks and probably you will have some success in token sale or maybe some you will attract some liquidity I actually will have some profit but the global our final Target is mass adoption and there is no any clear plan how to bring actually big amount of people to to our to our website applications so usual plan is like we are just building cool stuff then dot dot and then figures out that at one point we have millions or billions of users uh and web3 until now have a lot of has a lot of problems uh we have similar problems with the two with web 2 is this jointed experience uh our apps and networks has different identities and as far as we introduce new technology new layer ones new side chains neural apps it became more complex nobody knows how much accounts they have how much wallet they have for sure there is no any direct link between different chains applications are not really decentralized because most of them are using centralized services imagine you have something like an asset management system and you connected a lot of wallets there and obviously everybody who controls these Services you know they can create this link what account do you do you own and you don't have any access to this date actually and the biggest problem from my understanding is the lack of common Services which we used to have in web 2 for example search uh like there is not only a simple way to have to to search on chain applications right now uh using Unchained services and for example notifications like if you want to find what what what events happens with your assets with your identity you you don't have this option but imagine say Twitter without search and notification there is nothing to do there but this is how web3 works right now and uh like new is representing now blockchain operation system which is common layer for browsing and discovering uh this new open web experience and actually it's compatible with any blockchain so near for a long time is doing not only like block sale it's blockchain itself development it creates a lot of a lot of features to enable a simple onboarding now we have this fast OS we have login with biometrics uh we near prepared a lot of developer tools to create three others really versatile applications and make it simple and now we introduce this new idea of Discovery layer which will give access to make search and find new applications and attract user by giving them some chat and social functionality notifications and it's like if you will see the schema like bring the best parts from web 2003 can buy them together and build this as a fully decentralized in a fully decentralized way so this is how it works actually so BOS can it has a base layer of blockchain which is security layer data layer and this is where near blockchain or ethereum or any other blockchain seats on top of it we have a data platform our Engineers created a lot of like like we can we brought together different data sources think about it like a combination of inferior different uh indexer databases and they aggregated in a way which be easily accessible by any application uploaded on chain and on top of it New Concept which is Discovery layer this is instead of siloid webs websites it it has a fully composable components uh written on a very simple language and uh they are given the full website experience uh right now why near is doing it because it has very fast finality imagine some social network where you you have to wait like 12 seconds until your like will arrive to the destination is not a really realistic New York has charging so it can really scale to billion users and we really have amazing functionality about account model with this functional access keys with meta transactions with guest accounts I will show it to you and probably it will be impressed uh this is the concept how it works so we're all uh so there are a lot of gateways where you can access this bis a you can do it through the browser for example near the torque the official website of near blockchain now is a this BOS Gateway so every data every piece of data which you will find there any every uh document like the developer tutorial or maybe help or something all of it it sorts from the chain uh there are Partnerships with different wallets different browsers for example in a browser you can put like commas slash and some component address that will load it for you it's actually a multi-chain uh as you can see here you can connect any account like there is a data abstraction layer a user will don't recognize which blockchain is using uh but if he has any wallet integrated injected into his Gateway he will be able to read his data and obviously or send transaction to the chain the OS handles all these infrastructure management handles identity routing it integrated popular libraries to give the developer simple uh developer experience and I will have a screenshot of neurot.org right now so it has as you see different social mechanics some I made these screenshots several days ago and this if you will see like on the right panel I have a bit different design just because I composed myself I I like a no code experience I just put some videos which I prefer to have there we have quite a lot of users right now quite a lot of components so this is near like a near-based experience but I will show now ethereum based development on Boss so great great part about it it has a lot of github-like functionality because you can see the code the source code of every component which you see ND which you use you can see the name of user who uploaded it when it he uploaded it and even you can see for example the code div like what he what he changed and you can roll back and for example use the previous version of front-end if you don't like a new version of front-end and for sure you can Fork any components if you don't like it you can introduce your own functionality and use in your way your own way or maybe submit this functionality to the initial component also uh So speaking about ethereum we have different components like this is component about to stick answers on using Lido you can you can find it you can actually see the code how it works there is a injected sjs Library so you can read and write data in a way you're familiar with the results swap components you can see how uni swap works like pancake a quick shot like a lot of networks are connected there there is an Arabic component there is a balancer actually it's it's quite straightforward this is a like a final scheme how it works so user navigate through a different gateway to the to his user experience for example he can go to the Internet or using his wallet he selects which the app he wants to use then there is a request on your blockchain and near blockchain returns some compressed gs6 code it rendered in the virtual machine inside the browser into the final user interface so user can interact with it and as soon as he wants to send any transaction he is using his uh from this browser using his injected wallet he can just create a transaction and send to the blockchain he is working with okay and I because for sure some hackers will will want to use actually and we have a like price pool ten ten thousand dollars to for hikers who will build some applications using during hackathon and I want just to show give you some initial experience how we can work so let me just open here to torque so this is a social network and it usually should be faster uh for example I can go to maybe I can for the beginning can just like something so it will be a long chain transaction uh it's it's if I will refresh you will see my like the and if I if I go to the wallet you will see that uh it was a real transactions here okay maybe it's a bad example let me go to the to the profile uh so so this page what you see is a component is written on a JavaScript and I can go to discover and sort of develop and view the code of this component so profile page let me open another screen so this is there is several tabs like components I built nft I own for example my followers I can go back and I can go to the source code of this component and for example I can go to the there is the dependencies what what we are using if I go to followers list I will see that there is a set of widgets which are running in a loop and for example if I will copy this one and I will create a new component right now create a new component and okay so now it's empty one and like it will just return the hello hello world I can remove this and put for example it's account ID I will replace it I will put a value for example root dot near and if I will preview you will see just a count of one guy who is who has actually a name uh okay and maybe I can put some another widget I prepared just example here for example we have a public tax Tech tax like a nezer scan you can put any tech for any address and we can put also for example see the text of root.nir so now now you'll see his his profile as I showed before and his public talks and just to don't put this hard-coded let me put it for example I can create in the top const account ID and I will read it from props is a react-based way how you can get some values inside your components so like account ID or by default I can put Maybe some other some other component so now we probably will see that like yeah another guy but let me now save this code says publish it to the blockchain okay I can probably can rename it data okay I'll book like that so this is always the name of my component so my component which is which shows uh user profile and his public text now it's in blockchain transaction and if I create another application and I will return Now widget I will put my so how it works first it is your new account then World widget then then that was the name of the application all right yeah so now it shows like like you see I created application and like it as it is it can be used in another application and you can just create this wave of complexity as you like so somebody can just you just use it there and put his own data okay speaking about a surgeon I haven't I I created an example I don't have actually it's too much time I I can't just go through I I made an example how you can use for example wrapped a serum contract and see the balance of a current user and uh wrap and unwrap ethereum and using it using use different chains to to do this operation uh so at the beginning you need ABI you can use actually you can host it somewhere or you can use it for example I just use the blog Scout you can using the using their API methods you can send any account address and receive apis there so then then you fetch you fetch this API in using azure's GS you can create an interface using this API and encode transaction to get balance of receiver so here I put receiver you see it again reads from this the browser reads it from the srgs library which is using metamask or wallet connector whatever uh so and this is my balance of this user in others interrupted serum sorry so and I put a button here which has a event on click and it loads function unwrapped with this unwrap button you can read the balance which you want to unwrap in a similar way you create a contract using ssgs you provide token ID which is a contract of raptor serum and API which we read above using you you have sign up from the metamask and then using this wrap the serum contract you can run any method which exists in API in our case it's withdraw and you just put amount of what you want to withdraw so if you click this button unwrap it shows you the metamask and it it allows you to make transaction so now let's say we want to create the same application but for polygons kissing so this is the name of token Raptor Stadium on polygous kissing I will copy this address I will paste it here now it doesn't work because like this address does not exist on the ethereum blockchain but if I switch to polygon c network and if I switch to another account where I have some wrapped ethereum Let me refresh the screen ah it was this wrong account I think I have here oh yeah so you see it it loads my balance from CK from the polygon ZK evm and again I can click this unwrap button and it works now in the kevm like the same called same functionality but as you can see just much smaller the transaction fee so when this is a power of this kind of development you can create like real blockchain agnostic applications uh I I put I had called it here the address but you can easily add similar code for example you just check chain ID and you can create and wrap wrap and wrap functionality on on every Network you want and uh if you will for example create any other application where you need such a functionality you can just use different code to code from another developer there so let me now go back to SRM mindnet and I want to show this sorry so this is a lighter component you can you can again you can see the code and you can forecast and you have you have a swap component ah so sorry kpi it does looks okay sometimes it happens uh so the code is is there you can contact near boost with your questions and use this wave to handle a blockchain layer of security layer and create this like Unstoppable applications I can give some example of how can this how this can be used for example imagine if application like tarnada cache deployed on a bus and then at some point some regulator is coming and trying to close it using the chord uh what can he do he cannot remove smart contract from the blockchain because it's decentralized he cannot write to the hosting provider because there is no any hostages there is no any place you can send an email and ask to block this application there is nowhere domain name to block uh uh okay there is a way to contact Gateway operator and ask them to Blacklist some access to some URL but there are a lot of other gateways remains and users can easily launch his own local Gateway so and in the worst case like the last Last Hope regulator can ask in developer of this application to override his code with empty code but in this case users can just roll back to the block height because as you know the blockchain keeps the whole history for the whole time and just you can watch you can you can actually see the the UI even it was completely deleted from the current state of Chip okay so if you have any questions yeah I will be happy to answer maybe I'm supposed yeah if I don't have time like so once once you build all that how how do you actually show it as a domain to end user like what like the lighter thing you just showed like what do you type into your browser so an actual user can yeah so how addresses are what is the routings here if you if I go just to any application so like is this actually this can be configured by any Gateway owner this is the way how you can configure it a Gateway so first it has the name of the user who deployed this application and then the name of the like of the front end it rolls like that and if you want I can just copy it and open on a different Gateway it will have the same uh the same application yeah and if you don't want to if I'm not wrong I can put something like embed and this is like without interface you can integrate this to for example to iframe or I don't know whatever and just one thing to notice I also participated in a lot a lot of hackathons and usually hackers are deploying their front-end server on their cell or something and just in a very small period of time you just they just blocking oh sorry those front is just disappear because like they became unavailable and if if hackers will host this in a similar way and a blockchain it's very cheap but it will it will stay forever that's all we have time for appreciate that so sit tight for the next presentation which will begin in two minutes otherwise uh thanks for coming by foreign all right thank you everyone for coming to my talk uh so we're gonna be talking today about uh cat abstraction and how you can get started using kind of abstraction in your gaps today uh with the byconomy SDK it's a little bit about me my name is Rahat uh head of developer relations I have economy be here throughout the week uh to help you out as you're hacking through this to answer any questions that you might have formerly been a front-end engineer did some solidity former founder didn't really work out but yeah also a former hip-hop artist I'm retired I do not do freestyles anymore because I'm not good at them anymore but yeah so I usually look like one of these two things um usually the first one so I wanted to kind of like talk a little bit about the current uh ux of web 3. if I were to try to bring uh my mom into using a D5 protocol she would have no idea what to do she would have no idea how to onboard herself onto a wallet go to an exchange get some funds transfer them over to the eoa and then go and finally at that point start to interact with a dab right and this is the exact set of steps that every single person who is not native to web3 needs to go through before they actually even use your doubt if you're trying to actually get users for your dap which is probably something you should do if you're building something get users make it as easy as possible for them to do so so there's a lot of things wrong with that General kind of feeling the first part is like that onboarding onto a wallet right there's this fear of losing private Keys a couple weeks ago I unfortunately got my own account hacked and got drained of a significant amount of funds but this whole like private key situation this whole like saving a bunch of words of nonsense that needs to be written down somewhere it's not a great ux complicated web3 ux I just explained having to go through so many different significant Hoops in order just to get started doing your very first transaction on any doubt and then there's the whole thing about paying too much gas fees so how can we actually improve the web 3 user experience incomes account abstraction eip437 which you'll see on my shirt we have some more of those downstairs if you're hacking out by economy definitely pick up a shirt but what exactly is account abstraction you can Define it as the ability to add arbitrary logic to the process of validating a transaction so any transaction adds some additional information to it that information helps you do whatever other type of logic you want to do when you add this information to it this new data object is called a user operation so this is like a new way of looking at transactions through the scope of account extraction specifically through 4337 so user operations live in what's called an alternative mempo and you have service called a bundler which we'll take a look at this alternative mempo take these user option operations send them to what's called an entry point contract that lives on each chain and handle actually executing them into regular transactions so all of this stuff is achieved with what's achieved with using smart accounts or smart contract wallets normally wallets are secured by code uh well not normally these wallets are secured by code instead of the ecdsa so this allows for you to actually execute that additional Logic on top of your transactions so the main thing you want to ask yourself is how do I want to authenticate a transaction what additional logic do I want to add on top of it that's kind of like the most basic way of thinking about a contraction just taking a transaction and figuring out what else you can add before you validate or let it actually go through quick diagram just to show kind of like the life cycle of like how this works in the green box kind of represents a smart contract wallet secured by code it can be owned by an eoa externally owned account which is like your regular um you know Wallet account that you might be used to it can be secured by um you know Hardware devices passkeys which is going to be coming soon to our SDK currently in audit but these are what actually executes those user apps that live in this mempool and a bundler is simply a service it can be written in typestrip Rust whatever is going to be looking at that mempool and sending it to that entry point contract now I mentioned the user op mempool can have additional information in it one bit of information that I might have is data regarding a paymaster contract a paymaster is simply going to allow you to do a couple different things a it can let you sponsor transactions on behalf of the user so from the user perspective they don't have to pay any gas you can also decide to let the user pay in erc20 tokens um so it depends on like what kind of user Journey you want to build out um for for folks and eventually the entry point contract is going to handle the execution phase of the um okay the transaction um so all all of this is basically governed through this entry point contract that lives on each chain the infinitism team uh deployed um the entry point contract couple a few months ago on the ethereum mainnet there are entry point contracts across polygon and optimism Etc uh several other chains as well if you ever want to just get like another quick breakdown of a construction I've done a few Twitter threads that are have like a little whiteboarding session going through them um definitely take a look at that just it without any code just kind of like goes through explains some of the principles these also exist in blog form on our blogs so if you go to byconomy.io head over to the blog you can read the blog format of this as well so I explained a whole bunch of stuff to you but to actually leverage account abstraction you probably don't want to code out all those contracts yourself build out all those Services yourselves so we give you a solution in the form of the dichotomy SDK so the bichonomy SDK comes in mixed and matchable packages so these are the three main packages that are going to help you um you know actually building out your projects as you're building this weekend first here's our accounts package which is going to help you deploy your smart accounts um it's also going to help you creating user operations we have a bundler service in the background so you can use the bundler package to interact with that same for our paymaster so like I said paymaster Can sponsor a gasless transactions or allow users to pay gas with erc20 tokens the bundler is again what's going to look at the user apps that are created from the accounts package and send them to the entry point contract that exists on the chain that you wish to interact on the cool thing with the paymaster and bundler you don't have to actually use our services to use the SDK if you want to plug and play different Services as long as they are 4337 compliant you just need a URL of a pairmaster of a bundler and you can plug and play it into our SDK so it's completely mixed and matchable with other services I said that I guess too soon that was my slide explaining that but let's dive into a demo and some code so on the screen here you'll see I have this is actually a live website you can go to it now aeswap.versel.app but uh it is a miniature version of uniswap this app is using the unisoft V3 router under the hood and it's also using the dichotomy SDK in order to add a couple of uh functions to it so I'm going to connect to web3 and I'm going to pretend I'm actually just a user who has never onboarded onto a wallet before so since I don't have a metamask I don't have any wallet I'm going to use Google to login and I'm going to sign in using my email and once I've done that in the background this is using web 3 off under the hood to create an eoa for you and that eoa is actually going to be an owner of a smart account that is deployed by the SDK so this address here is actually the address of the smart account I have some funds on it from before so you'll notice I have some wrapped ether link uscc and I have nomadic even though this wallet is deployed on the polygon Mumbai Network so just a thing to keep in mind if I wanted to onboard quickly if I had no funds whatsoever I can hit buy crypto I can use bank account credit card anything I want to add funds directly to my wallet I already have some so we'll just not enter my card details there um so I have uh some usdc here so maybe I want to swap some usdc for some wrapped ether I'm gonna hit the swap button and in the background so there's nothing I have to sign there's no like um you know metamask pop-up that you have to go in approve transactions things happening for you in the background everything is like being signed for you what's happening in the background is there's two transactions actually running at the same time there is the approval and the swap okay I forgot to actually click on the link obviously I hope I counter logged it I have a transaction response okay but um this is on polygon scan this is a mainnet transaction I think I let's just do the transaction again this time I'll remember to click it um so basically in the background it is approving and swapping uh one usdc all at the same time so that's two transactions being batched into one so as a brand new user uh to web3 I don't have to worry about approving x amount of tokens to be swapped it's just done it for me and it's only being done for the exact amount that I need to swap and you'll see here this is a transaction happening right now on mainnet on polygon midnet refresh okay cool so you'll see here it was completely successful I swapped one USD USD coin for the equivalent in wrapped ether I had nomadic in my account so that was completely gasless if I wanted to I could switch this so that I paid for the swap using my usdc as well so that's another option that I could have enabled for my users so again it's up to you which which side of the ux do you want to you know work with it might you might come to the conclusion that it'll cost too much to sponsor all your users gas so maybe the usdc payment is something you would prefer or maybe um if you're using you know something like polygon where the transactions are low enough where it's totally fine you can just completely sponsor it yourself so how does some of this stuff work um in in the Discord group you'll see a bunch of links to our documentation uh several blog posts several example and quickstarter tutorials so if you want to see how it works in react how it works in xjs uh vites how it works with node I'm going to go over the node.js scripts right now just because it's a little bit quicker to go through that in a workshop setting but initializing it is really just copy pasting a bunch of boilerplate code you initialize our bundler like I said you can use any bundler that you like I'm just using our bundler here just past the URL of the bundler that you're you know attached to same thing for the bichonomy paymaster I'm attaching our pay Master to this these are these can be found on the bicotony dashboard so that's dashboard.economy.io that's where you would go to like get your API Keys authorize your smart contracts and everything there um and then the last part is just creating this by economy smart account configuration so you're just going to be passing um a the signer which is your wallet your eoa because you're able to pass just any signer object you don't actually have to use our social login you can use any social login that provides you an ethersjs object so you can use magic you can use web3 auth which is what we use under the hood anything that you like that you're used to it is compatible with our SDK as long as you have that ether JS transaction object so here um just a quick thing I'm initializing the byconomy account I create the account and I'm just logging out the owner so the owner is the eoa that is used to actually put this um it's actually um sorry the the notification messed me up that is actually used to create this smart account so right now all of our smart accounts have to have an owner we are in um audit to have like future versions where you can have like an ownerless a smart account so definitely keep an eye out for that but for now you do have to have it owned by some external eoa in the case of web3 off they do create an eoa for you in the background that owns everything so let's just take a look at minting in nft pretty um basic kind of thing example so I have this interface of a safe Min function I have the nft address here one of the main things I need to do really is just basically get information about this specific um function that I want to execute and there's a couple ways to do that so this is one of the ways the docs has different examples how you would do this on front end it'll be slightly different but you're just going to get some information about the actual function that you want to execute pass it any parameters that it needs once you have that info you're going to start building out the actual user operation but the only part of the user operation you need to build out is this two and this data field the two is just going to have the address that you're interacting with and the data is just going to have this information here about the transaction that needs to be executed so we have this build user out function attach to our smart account which is just going to take an array of these constructed transactions so you can put one transaction in here you can put several transactions in here one if you put one transaction it'll just execute that one because you put several transactions in this array it will bundle those together into a single transaction so that's how I did that approve and swap on the unit swap demo uh these are just some typings and then the other main thing to see here is this paymaster and data is going to take that user op it's going to take data that you can build out using our SDK and there is the mode there we go so there's a mode here for how you want to sponsor if you want to sponsor um completely gasless you just use a sponsor tag if you want to sponsor with erc20 tokens meaning let the user pay in your rc20 tokens you simply switch this flag it's just a flag that you switch nothing too difficult there and the last part this is specific to erc20 sponsorship it's just getting fee quotes So what are the quotes for the different types of swaps that they can do so currently we support a few different stable coins you can get a full list of that on our docs to see which coins that we support I usually just use usdc for demos it's just the easiest one so let's go ahead and execute this take a look at that so yarn Dev it's I'm just going to uh log out the owner the address this code is also available on the links that are shared in Discord you'll see that a user op hash is um printed on the screen as well let me actually got a little bit bigger cool so this is on not on mainnet this is on polygon Mumbai we I think from the chains that are sponsoring this time we support polygon as well as Linea so those are our two different chains that you can launch on and you'll see here that there were two nfts minted all in one transaction I passed that transaction twice in the array and let's just confirm that so that is token 149 and 150. I'm going to grab the address from here let's head to openc and verify that that was done and we have 149 and 150 here cool so all of these all of this code you can definitely take a look at on our um you know on our docs as well as the notion pages that we've provided in Discord that show you some examples of how you can go through and build a lot of these things out we have tutorials and starter kits that show you how to actually use other sponsors technology along with our Tech as well as just like different variations of like how you would do this in xjs how you would do this in react or using Vite so whatever flavor front end you kind of like to use we have a couple different tutorials for doing that as well so definitely explore that there is one other um I guess our larger price prize that we have so if we take a look at the prizes you'll see that there are two 2 500 prizes for the best use of session keys that are built on top of our smart accounts we have a tutorial that will go through how to build your own session key module on top of our smart account as well so definitely take a look at that if you're interested in building with session keys for uh for anything else we do have three one thousand dollar prizes for best use for best consumer use cases in web 3. um as well as a two thousand dollar pool prize to be uh eligible for the approval prize you just have to successfully execute a single user operation so as long as you do that you are eligible to be part of the full price if you need any deaf support uh myself and Yash will be here in person um he's the guy right now at the booth and we have another person vanshika on Discord but you can tag and ask for questions as well if you need to refine your pitch or your idea we have Tommy and Ahmed uh who are both around Ahmed is our CEO Tommy is um you know part of our content team and is amazing at leading stories together so if you need help on your ideas or refining your pitch definitely these guys are cool people to go to and yeah if you're excited to build definitely let us know at by economy on Twitter or uh at our hot coats on Twitter and uh thank you uh if there's any questions happy to answer those [Applause] thank you foreign with react native with some configuration um but right now it's just mainly a JavaScript SDK but we do hope to have more support for other mobile I think so so the SDK has upgraded to version 2 from version one yeah so what's the main difference between version one and version two so version two is more modular so one of the things that I was kind of talking about is how you can use mix and match different packages with other services so we opened it up so that you can use any bundler any payment Master service we do of course offer the full Suite you can definitely just use ours if you want to but if you have any specific use cases that you want to use like other services with that's what it opens up with we also made it a lot easier to execute user operations than our previous version so so a lot of improvements on the developer experience side as well thank you so please stay seated if you're sticking around for the next presentation it'll begin in about two or three minutes otherwise thanks for stopping by hello hello I won't touch that hi everybody thanks for coming out I'm excited to talk to you today about about solo so um my name is Eric nakagawa based in San Francisco very excited to be here at etsy's uh sorry East Global it's been a long week a bunch of our team are also here we got harpal who's going to be talking a little bit and a bunch of folks down by our booth so if you have any questions after come uh come ask us questions we're also handing out a little starter sheet a few folks are hackers how many here are hackers great so before you leave please grab one it says a starter guide to help you focus save some time so what is solo so Sello if you haven't heard is a blockchain focused on uh prosperity it's what we like to say um and we are building a very large Global community of both Builders Founders that believe in this concept of prosperity for all oh there's there's who we are again we have a bunch of folks here to help you folks out we have folks who can give you Mentor around ideas come talk to me about that community community aspects technical from the solidity and the front end Dev side and then some product feedback as well first let's talk about what is cello so when I say you know building for purpose we want to build for real people and we've been doing this for several years when seller launched it was a carbon carbon negative from the beginning so if you've ever heard of regen refi regenerative Finance we didn't know that word was going to become a word and back then it was more like about climate and social impact so a lot of people have been building with that and have embraced cello when it comes to refi projects we think a lot about the planet um and we want people to be building for real world use cases trying to help a lot of people and what that means is people in Latin America people in in Africa and our and our Focus has been there for quite a long time what kind of features to talk about if you're a Dev um well we start with mobile so a lot of times if you're building you want to start with mobile and the reason for that is everybody here has a mobile phone um everybody in the world most people have access to a mobile phone but they don't have access to a computer and the user experience of that I think it's really important to to be thoughtful when you're building your your um your projects and again like I said regenerative finance that can be things like you know it's not just climate credits it can be Community tokens and if you want a book to read if you're into this stuff um secure economics is a great book to learn more as I mentioned before carbon negative um built into the protocol we actually have a hard fart coming that will make every transaction carbon negative and very excited about that coming soon a bunch of other features in terms of like how many people use the project there are you know almost or over 30 billion 30 million wallets a bunch of mobile users that we're targeting we've given out a lot of Grants as mentioned before you know we've offset a bunch of carbon since day one we really believe in that a lot of transactions there's also a bunch of you know what the Thousand projects that are building on cello there's a lot of recently large uptick in a lot of people doing things on chain so right now we have stable coins things like cusd C Euro and crail we have an ultra light client for helping with mobile phones that might not be that strong a bunch of bridges Fiat connect actually helps to connect on-remps for the users no matter where they are in the world excited about that and social connect is something that harpal is going to be talking about as I mentioned the ultra green Hartford very excited for this to happen coming in in August and then if you've watched the news you've heard about the proposal in the community for turning solo into an L2 so there's a governance call that is about 40 or 55 minutes from now excited to see what the committee wants to say we want to be more aligned with theorem when we launched we were proof of stake so we've been proof of stake from the beginning and now that ethereum is in that ethereum is proof of stake I think it makes sense to come back home a lot of focus on their operability I'm going to quickly run through our bounties If You're Building uh we are giving out 3000 for first two thousand and one thousand for second and third and they're also looking for people to implement social connect and account abstraction on solo so without further Ado here's how Paul to talk about each of these pieces GM everyone harpalier so um let's talk about social connect because this is one of the theme bounties we have um so first of all whether rather than learning about social connect let's learn why we need social connect in the first place right this is how my ethereum address looks like personally I don't even remember it myself but imagine in the future as we go more mobile and we use a lot of applications which will involve our friends and our contacts and family you might have to memorize ethereum addresses of all the people in your contacts right and it's going to be very tough I mean I don't remember myself the address my my own address how am I gonna remember everyone else's address unless you are this guy who is like eight World eight-time memorable Champion I'm pretty sure he's gonna be also having problems at some point but um let's talk about identifiers right we have email we have Twitter LinkedIn Discord telegram ens Facebook I don't remember because I haven't used it for a while and now we have a new thing called threads yeah too many identifiers right too many things to remember oh I want to send crypto to my friend I don't remember his ethereum address I don't remember his cello address I don't remember his yeah you get the point right so what if we can make it possible to let users use their existing identifiers as their wallet address right what if the user can just select um you know I want to use my Twitter handle as my wallet address from now on so if my friend wants to do something with my wallet if send tokens or just use my address somewhere they can just put in my Twitter handle right and that's what social connect is so it's a simpler way of sending value between wallets but it can be expanded into other things it's basically ens but you can decide what the identifier can be so here's the GitHub repo for that in case you're interested and this is a screenshot of how it looks like in an app it's already live and these are some apps which are already using it will arise a wallet no Finance is a developer tool librarian color are also wallets that you can check out they are using social connect right now in production and here's a cheat sheet I highly recommend that you scan this QR code but if you don't want to we have a physical cheat sheet that you can take uh you're from Lyle which is in the Excel or t-shirt but yeah that's my way so how does social connect work so there are three parties in this protocol one as issuers second is Taps and then there's an on-chain contract which keeps track of the attestations so what our issue is issuers can be anybody who wants to attest users based on identify of their choice so for example let's say uh I want to make it easy for users to use their telegram handle as their wallet address so I can become an issuer for telegram and it's up to me you don't have to take permission from anyone it's open for all you can become an issuer and uh yeah you can just start you know authenticating users and getting their Telegram and just verifying if a user holds it and one once you do you can basically use that obfuscated identifier and put it on the smart contract on chain and then you are issued so what is the second party the second party is daps um so let's say you're a dab Builder and you know that there exists an issuer already for the identifier that you want to use or you want your users to use then you can just trust those issuers right issuers could be a seller Foundation you know testing some form of identifier it could be your own protocol uh contributing for other adapts to you know use an identifier so the apps basically trust issuers they can trust issue or they can become an issuer themselves so they don't have to do the overhead of doing authentication Etc and then there's an online contract this is the part where you know once you are done with authentication of the identifier you need a place where it cannot be you know changed without the permission of the issuer that's where the online contract comes into place where you are basically whenever you want to store something on this on chain contract which is the attestations contract you will have to sign with your issuer keys so everybody knows who did the process of authentication who is responsible for this Etc and these identifiers are not stored as plain text they are encrypted to preserve privacy so what to build right uh since this is a hackathon what are you supposed to build using social connect you can become an issuer for a new identifier you know it could be something that you use for your own product um it could be an internal identifier of your choice there are many identifiers that are they don't have issuers on the seller Network um disk or telegram these these don't exist right now so opportunity is available for you guys and you can integrate social Connect into existing apps you know for issuers that already exist or you can enable wallet list and board onboarding using an escrow contract that we already have on cello right now it supports crc20 tokens so basically if you want to send some ERC tokens to a user of your app they don't even need a wallet and we don't have an escrow contract for nfts so that's also an opportunity for you guys cello composer so this is a template that we have built internally for you guys to get started quickly this is for hackathon people right get started in less than one minute you just run one command and you will have a option to select whether you want to use react you want to use react native you want to use Expo without Expo angular flutter any uh framework of your choice or library of your choice you can just start building in less than one minute and rainbow kit is already in there wallet connect V2 is already in there so you don't have to worry about you know going through the docs of these Technologies and figuring out and you know losing those essential early hours of the hackathon so I highly recommend scanning this QR code as well so social connect with cello composer just five steps scan this QR code you will get these uh steps in more detail in the QR code we also have a physical version of the same year um it's just five steps you know to get started and you will be up and running with social connect in your dab so the second boundary we have at the second theme boundary is account abstraction 2000 usdc so um let's see raise of hands how many of you know about account abstraction already right okay a few people great so why do we need a uh a right this is how popular wallets are onboarding if you know you must have already been through the screen maybe a couple of times um nothing against metamask I personally use it but it's not friendly for a person who does not know about tech you know a normal user and a person who uses Twitter or telegram or all these social apps might not be um you know might not want to learn how to do all the secret recovery phrase where to put it why to write it down and they might not even write it down and yeah just throw it away and later when they have issues they will be looking around for ahead but nobody will able nobody will be able to help them and even other onboarding is done you still need native tokens to start so that's another barrier for that user better to entry for that user right and as we move towards multi-chained apps the complexity will keep on increasing making the experience worse difficult to operate and these complexity will just not allow web3 to express the full potential to the user that what it can achieve what it can let you achieve right and this is where account abstraction comes into play right it's a way to solve problems by allowing users to you know flexibly program their wallets with more security and create better user accounts obviously the developer will do it but if we if we do this work then the user will have a much better user experience using website products cool um so a lot of people might know about the 4337 EIP it's not exactly account abstraction but um because account abstraction is actually a general concept A lot of people have been working on it before the ERC even came up so but it does give you some basic rules and standards that we can adopt to enable account abstraction at the application layer of ethereum some people have achieved on the protocol layer so um yeah how does it work you know we have four parties in this uh um ERC that that was proposed that one of them is account factories it helps you create smart accounts you can create your own account Factory based on the account Factory um the accounts would be created so if you want to use a different type of account then account of account factories is what you want to build uh bundlers these are like validators or nodes who can process user operations now emphasis on the word user operations this is different from transactions because the structure is different but they are similar to transactions but not exactly transactions entry point entry point is like the central place where all the user flow user operation flow takes place entry point one of the main objective of entry point is to make sure that the bundlers are paid for the work that they do and paymaster is an optional part but a very um useful one it helps you sponsor gasps for sounds so let's dive more into details I guess I talked about account Factory that it lets you create different types of accounts if you want to create a different type of account account Factory is what you want to build bundles they monitor so they have a special mempool for operations they are always keeping an eye on those mempools and whenever user operations come in they process them they order them they make sure that the user operation is not valid they also check whether the user operation will lead to fees getting paid to the bundler or not because they are doing the work they need to get paid and entry point uh basically coordinates the entire process of the user operation going from the user to execution and one of the crucial roles it plays is that bundlers are paid for their work because vendors need to voluntarily participate in this system if there are no bundlers there are no there is no account abstraction are basically smart contracts which are already deployed on the blockchain they are willing to sponsor gas for the execution of user operation sponsorship does not always mean that it's free it's just an alternative method paymasters could be taking tokens in let's say they are taking token X and they are willing to pay the native token for you on your behalf but it could be you know it you can basically build any type of method to accept tokens as a paymaster and pay for the user um but yeah it could also be free it could be app specific as well so we will talk more about it so how do you build account abstraction to apps on cello right you can use a third web SDK right now that way basically is Right Now supported and it allows Uh custom account Factory so if you want to build custom accounts second Factory uh if you want to build custom pay masters that's also supported if you want to use their bundlers feel free you know third web is already running them up you can just send a transaction to the user operation to their bundler and uh it will go through I mean if it's valid and it also supports all popular connector types so you might be surprised that not all the sdks out there for account abstractions support rain bucket wallet connect but third web does so yeah use that and transaction batching is also supported and what to build for the Bounty right here are some ideas you can build a social recovery based wallets combining both the bounties you know social connect and account abstraction and create a wallet which can be recovered using social connect you can create family accounts where you know there are multiple owners with different limits so and a wallet which is owned by the family where kids have a limit of let's say ten dollars or twenty dollars per day and the adults in the family have more limits and they can you know choose which apps they can use or not use Etc account where the transaction validation is done using fingerprints or face ID that is also possible I've seen already this uh being built and session based keys in accounts so this is where you will create a special type of account which can be suitable for gaming or social media specific use cases where the social media app or the gaming app says you know I'm gonna take over for your account for the next 30 minutes so whatever action you are trying to take in my app I will I won't ask for your signature I will just do it myself so something like that and you can build custom pay masters um token pay masters for a good dollar good dollar is a Ubi protocol on cello so everybody gets a small amount of Ubi or you could say a good dollar every day maybe you can build a paymaster which uses those small amount of Ubi for paying gas fees since people are getting that every day they will always be they will always have something to pay for gas taking reward tokens you know maybe you have a protocol where there's some staking mechanism and there are reward tokens that they get can be used for gas fees um pretty simple or you could have referral based transaction sponsoring which is let's say you are just into production and you want uh user adoption then you tell you know if you bring five more people I will sponsor gas for you if you bring 10 more people I will sponsor more gas for you something like that you could have app specific sponsoring so maybe you are something like Ave where you have multiple apps on the blockchain and you want to say um if you want a free gas then you can get free gas if you're using Ave products you know um Ave or lens protocol Etc so free gas for you if you're using any other products you can build a masters that can do that as well and use cello composer for a quick Head Start so so account abstraction with hello composer again only five steps scan this QR code you will get uh details about what those steps are we also have a physical copy you can get that one on your exit um and again to summarize we have three bounties uh in total five Bounty so if you are first place you get three thousand second place two thousand and third place one thousand usdc and two theme boundaries social connect and account abstraction 2000 uscc each so um I'm a I was a hacker I am a hacker and I will forever be a hacker so you want to Stack bounties right you're not going to just build on cello and be like okay I just built on cello just one Bounty no you're gonna Target other folks who are already here in the seller ecosystem and who are also part of the hackathon so build with chain link chain link uh price feeds are available on cello use them build something with safe on the seller Network use the craft protocol um if you're you know if you need any indexing in your app use hyperlane Bridges to make cross-contract calls across chain calls sorry and use metamask um Snaps are obviously you want to use wallet connect at some point you can use lit protocol if you need any encryption and you I highly recommend using quick node RPC endpoints but that's there and some other folks who are not part of the hackathon but I highly recommend that you use them you know valora third Web Master Finance good dollar super fluid Android protocol and that's it good luck to everyone here in the room who is hacking and find these faces I'm I know you might not be able to remember names but I hope you remember faces one of them is me Eric is here and there are a bunch of more Folks at the booth so if you have any questions just feel free to trouble us and yeah that's it if you have any questions please thank you any questions cool thank you guys hi everybody how's it going I'm Marcus developer relations at Edge and node developer success and this is going to be a quick start to subgraph development and querying really getting you guys started for the hackathon as soon as possible and the best way to get started with subgraphs is to start from the beginning and that's really understand where you are in the hackathon so if you would like to scan this to understand our prizes also to have a hacker help telegram group quick start videos repos these slides I really tried to put a lot of information in this QR code so that can be very helpful for you and once I see phones down I will move on good everyone got it phone up okay I got you all right and real quick I'll go over the prizes for sub graphs as well uh three main prizes we got best new subgraph with those prizes best use of existing subgraph and then pool prize also we just announced sub streams literally yesterday so if you want to dive into sub streams and what that is that's also in this QR code substreams are cool that's the summary dive in if you can it's the same QR code as before they do if you already got it you got it cool all right so if anyone wants to live code you can join alone right here and then this is the repo with all the links no more QR codes after this I promise we'll just get through all this real quick all right everyone's good let's go for it so this Workshop there's going to be an introduction oh sure I got you sorry sorry sorry yeah I'll wait I'll wait Workshop repo live coding links pretty much if you want to do this along with me or have anything that you learned from today be displayed in front of you use that phone there we go no more QRS I promise all right so this Workshop overview uh it's going to be an introduction to the graph we'll start with then what exactly are subgraphs we're going to find those we'll actually deploy a subgraph live we'll compare queries with two different subgraphs we'll use a subgraph that is pointed to a Smart contract and we'll use another subgraph that's a little bit more well built out looking at the exact same contract and we'll see how it's a little bit different and then finally we'll finish with a little plug for scaffolding 2.0 which connects very nicely with subgraphs now which is pretty cool so let's get into the introduction to the graph first thing when you go to the graph.com you see this access the world's blockchain data so let's dive into that really the data storage of a smart contract is very similar to this it's just very very isolated if you only look at it in its one point however if you want to understand how that smart contract has existed in time how do you actually do that how do you look at how it has existed over time stamps well you want to know about the provenance you want to know about the history you want to index that data so something like this very simple but we're actually looking back in time just like this apple mock-up for the backups and really we're seeing this kind of data layer backing up backing up backing up over time and having all of this time stamped information over time in a disorganized way just because it's so right optimized we have so much data being piped in any given second it has no organization it needs indexing all right so that eventually you think is an issue well there's also another issue we have a read issue with the blockchain where if we're going to be writing to the blockchain so disorganized okay so that's fine we're going to be getting a lot of data back also it's not just the right issue it's a read issue we got disorganization on the way in and a lot coming back out for example who here used Instagram today anybody who posted on Twitter today anybody I post on Twitter there we go Twitter all right so that was one post that was one right and how many followers do you have or anyone have you know a thousand five hundred followers that's potentially a thousand reads to one right and that's the exact same thing we're seeing with data retrieval from the blockchain so it's a problem so there's a web 2.5 solution for reading which is centralized indexing indexing being organizing of the data and that works it totally does you're able to get your data from a certain block and actually get it to your front end totally fine however if that centralized insects and service goes down for whatever reason we are sad that's not a fun time okay so the question was in the beginning getting introduced to the graph the web 3.0 read solution we have a lot of indexers working permissionlessly in the graph ecosystem and they are all providing you options for your data retrievals all right so they're all indexing that same data piece that you want on the blockchain and you can get it through the graph and that's the graph right there so if any of the indexes for whatever reason go down you have other options okay all permissionlessly working through the tokenomic system of the graph so I love this hope you guys do too so it really provides a foundation for truly decentralized apps if you're really needing indexing you want to be decentralized and have that security guarantee also with Incredible speed and uptime it really is there that is the graph Network 450 indexers worldwide it's permissionless redundant fast cheap and reliable and a global API so let's go into subgraphs who here has heard of subgraphs built with subgraphs okay who here has never built the subgraph before cool awesome so we're just getting started awesome so we now know we are swimming in blockchain data all the time as developers it's disorganized horribly but we can index it how is that happening this is basically what a subgraph does it takes all the data and puts a nice clean little buckets that's basically it all right so let's go ahead and put this to words subgraphs are permissionless customizable instructions for indexers to organize your data if you build these instructions awesome they are going to be sent to indexers for you to get your data back and here's basically the pathway it goes through you have on-chain data and off-chain data that's ipfs that is available today and it goes into subgraph.yaml which is your manifest all right you define exactly how your sub graph should look like from a high level and then it gets a little bit more into like a medium level almost it's kind of like the mappings and logic and then eventually you present your data you have your schema which you send queries to and they're nice clean little buckets okay and when you have that all of your subgraphs exist in a permissionless market each of these subgraphs are valuable and have incentivizations mechanisms that exist within the tokenomic system of the graph it's super duper cool so that's a high level overview it can go super deep into this we'll just keep on going about how subgraphs work eventually it all comes to this you guys want query responses so we use graphql send out a query and then we enjoy that so that's the high level summary of the graph and subgraphs 1.1 to 2 billion queries per day are running through the graph there's over a thousand subgraphs published on the graph Network which is super cool those are the individual subgraphs in the marketplace and there's over 450 indexers okay I said no more QR codes I lied you could take that or not that's fine but I won't oh I'm okay I feel bad now all right all right one Stone's down we'll go on okay nice on time okay so let's go ahead and get into the code we're going to deploy a starter sub graph and then we're going to compare that to a published there we go we're back we're going to compare that to a published sub graph that's both subgraphs are going to be looking at the same smart contract so you can see how different it's going to be to get data back from a basic sub graph hi good well how's everyone doing today all right all right anything I can do up here sorry everyone um yeah this is this is how it goes um should I just bring my laptop up and just I don't know that's kind of weird that's kind of weird um that'd be tough to do a live coding with one hand and tabs hi there there we go okay let's go quick um so we'll go into it this is the sub graph that we're going to put thank you guys that we're going to be comparing our starter sub graph to we're going to look at a little bit more well-built out subgraph so you have a learning environment where you can see a basic one and a little bit more advanced one um to start we'll go to the graph.com studio if anyone's coming along and also mini scan all these links are available um to hop into and throughout this little next section all you're going to do is just trace the punk transfer event that's all I want and we're going to look how the punk transfer event goes all the way to your schema deck graphql from Dale you'll learn how a subgraph functions let's deploy a subgraph everyone so what we're going to start with is we will go to the graph.com and I'll make this a little bigger we'll go to products subgraph Studio and we're going to create a subgraph and we'll call it live youth Global Paris demo and we know this smart contract that I'll be indexing like I said is crypto punks we know it's on ethereum so I chose ethereum and then we have this dashboard pop up and you're free to actually populate this as you would like like I said these subgraphs exist in a Marketplace so other people will see them it's good to have good documentation and also good dashboard etiquette so fill that out if you are looking to join in a published way let's go ahead and initialize the subgraph so go into this copy paste and we'll go ethereum automatically populates the subgraphs slug from the actual CLI and then it'll create a directory automatically as well we know this is on mainnet so we'll select mainnet now we find the contract address so I've already pulled up the crypto punks uh smart contract address and I'm going to bring that right in here it's going to fetch the ABI automatically sometimes depending on the Chain there might be an issue with that and that's okay there's totally a solution for this you need to get the ABI manually so you'll actually go to miniscan which is all Linked In the repo and you can get all that information very easily so you go to ethereum put in the contract address I love miniscan of course you can go to etherscan but it provides everything right there in front of you very useful for subgraph development miniscan is awesome you've got the ABI the code all the different events which are awesome so let's go ahead and go back there we go it did it automatically it automatically also found the start Block in which this marked contract was initially deployed so you don't want to index from Smart from block zero you want to go where the smart contract was deployed finds it for you and then the contract name once again etiquette because we are making a subgraph that is public we want to actually have good naming so guess what the name of the smart contract is it's right there in mini scan so copy and paste a lot of copying and pasting we try to make this as easy as possible for you guys to get up and running okay index contract events as entities this is now we're going to be talking about that kind of portal that goes through the subgraph and how we Define it how we have the mappings and then we get the schema this is automatically generating that for you right now crossing fingers on the Wi-Fi we'll see we'll see all right so while that is spinning up same there we go okay awesome so here we could also add more contracts we're not going to do this this is just a starter sub graph we'll press no now it has information on the CLI you could follow through I personally like to go right back to my dashboard and it's a little bigger just copy paste once again a lot of copy pasting authenticating your CLI paste authenticated and enter the subgraph paste very easy and then code gen which is actually compile it's actually doing type safety and then graph build is compiling so we have that going through putting everything together and then now we'll deploy all right awesome zero point so uploading to ipfs and there we go the dashboard oh all right that's okay we'll just keep on going so just in case this happened I have a recording of this there we go we'll just go through this together like so so we got right to here to the deploy and that was not working very well earlier so I was having some difficulty on that all right we went through this went through this and here we are okay so we got the deploy going through so at this point we have the dashboard loaded and we could actually see the different entities that have been populated let's go ahead and dive into those entities right now through vs code you guys see that cool so I'll just look at the screen we'll go through this together so we have the subgraph.yaml which is also known as the Manifest of the subgraph it really defines at a high level what the subgraph is I'm opening up all the three files right here so we could all just go one by one the subgraph.yaml has the smart contract in there that we defined through the CLI it also has a start Block in there and has high level you're naming the entities you're not really going into all the properties of them also you're naming the event handlers it's just a high level overview to just understand what your subgraph is doing it really is the Manifest so you can see we have that punk transfer the font not defined just named right there let's keep on tracing that punk transfer so we'll go down to the automatically generated Punk transfer Handler which is named handle Punk transfer so you have an event being emitted from chain and then from there this is going to start populating the entity of which you will start querying so you can see it's right here a let entity equals new Punk transfer type and now we have the entity being populated the event that param's from becomes transferred or assigned to The Entity Dot from property and literally it's just signing blockchain data directly to the entity for your query okay so let's go ahead and look at where your front-end queries will go you have the schema.graphql this is how you will query it using graphql queries you have a entity with the ID from to punk index bytes all that good information there for your front end to gather information from historical data so once again here we transfer we went through the punk transfer event that isn't there for reference if you need ideas of kind of how to go through a little bit more advanced let's go into some queries right now guys so if you guys have time to start to learn a little bit more about subgraphs use these questions and compare the questions that are here could I answer these questions using the starter sub graph or do I need the more advanced subgraph and like how do you figure that out how do you actually dive into that let's start with figuring out the punk transfers the first 10 in the history of crypto punks so just going on to the right here through the Explorer you can just go ahead and start sending some test queries and go and I want the first 10 so I ordered by the block timestamp and then I had order Direction being ascending and then we're going to send out that query for a test query and this is the exact shape of the query on the left that you would send out to the API endpoint so you're just testing the queries in the playground seeing what you want to do with with that so that was pretty basic question the first 10 transfers in the history of crypto punks um oh yeah I wanted to convert the timestamp to show you guys it actually is accurate so you could actually confirm that this is a time stamp of the first transaction in crypto box history 2017. on that date on that time and what about the next one find the total value in each sales of all punks ever let's just start with that all right that's a that's a pretty cool question now with a starter sub graph you're like well how do we get that how do we actually compute that in this next subgraph through Jerry okolo he developed this subgraph and extended it a little bit and in a subgraph you can do a little bit of computation you could actually do some processing and in this subgraph he does that so what I'd recommend for you guys is figure out how he was able to compute that in his mappings you can do that too you can gather data from the blockchain and actually say hey I want this information to have a little bit of computation and publish this to the query and then you can actually gather that data it really does the work for you in that way it's really nice so let's go ahead and go I'm looking for the question here find the total value in each sales Jerry did very good documentation and I'd recommend that if you are going to be going through this you want to remember your computation so you go to the schema.graphql remember this is the last point where you actually send your queries to your graphql queries and on this I'm looking for the total Eve sales in the history of this I'm going through going through and I'm like wait a minute where is it where is it I know it's here somewhere and there it is total Eve sales for Punk so total sales forever that's not going to be on the blockchain that requires some computation done in the mappings and we don't have to dive into that right now because what I want to do is just show you how you can go to the schema.graphql query his sub graph and we know it's on the contract there we go and and the ID is going to be the contract ID you could actually he defined it like so address so and we want the total amount traded ever and then total sales and total Supply he named these through the mappings.ts file he organically created these and documented very well please go into his documentation and see how he did this I want you this to be a learning opportunity for you guys to see how a basic starter sub graph does it and how a little bit more advanced that a little bit of math a little bit of diving into that so let's go ahead and continue with the slides before I go on we're doing good on time any questions thus far yeah because my question is just about the delay between the um the event uh publication on chain and the recording in the in the graph index R so yeah how long does that take to uh to have it index how long does it take to index yeah it depends on how much you want to index I mean if you have a smart contract deployed at a certain point you define that start block and then it'll start indexing I mean like uh once it's already deployed um if you want yeah A system that want like like very um near real-time uh information how fast is the response time yeah this is last I heard on the network it's around uh point I think it's 42 milliseconds so it's pretty good okay yeah for a team okay okay cool and just one quick other question is about the token mix if um yeah you want to run your uh user graph the graphics are yeah what does that imply yeah yeah is that yeah good question is it removed at some point yeah great question great question I'll go for this really quickly essentially when you publish a subgraph to the network you have to incentivize indexers around the world to get to work so essentially you're saying how much do I want decentralization in my stack if you only put a few tokens you're not going to hold have a whole lot of indexers hop in and start indexing your sub graph if you put in a good number that we're seeing across the board is 10 000 zrt that gets many indexers to hop in and shop and start indexing so it just depends on the indexer their hardware and the subgraph index they want to make sure their Hardware can handle maybe you're deploying a massive subgraph so you want to make sure that the indexer can handle that and so they have a choice on that they index or not but 450 the market is pretty healthy with diving in with any subgraph you publish and have a reasonable amount of GRT you're going to get in next okay yes thank you how can I integrate it into my debt do you have any SDK or what whatever so we have an API endpoint and you can use we have what's called graph client Apollo those those are two different options for you and you can send queries to them it's very it's nicely designed so yeah check check out Apollo or graph client API key yes there's an API key as well and so I can go through that in a little bit as well yeah yeah okay yes quick one how's the schema design is it a standard schema or yeah I mean I can quickly go through that right now let's do that so this is the schema right here I mean this is does that help answer your question you can definitely customize it you can extend it to your heart's content there's reverse lookups there's there's a lot of things you can do with this yeah that's a lot of power in there too yeah yeah good question Cool all right let's keep on going I got seven minutes awesome okay so we're able to uh go through the punk transfer event all the way through and you can see how just with the boilerplate code of uh subgraph being spun up you have a lot of power already to do a little bit more mathematics you need Jerry's subgraph or your own creativity let's keep on going like I said these are for your reference go into this slideshow that's in that repo and you can actually learn a little bit more about patterns that you're commonly seeing in subgraphs and how people are using them I'll just skim through these really quickly please dive in on your own core and we already compared queries with two different sub graphs and then finally this is something that I'm really excited about because you guys are all Builders scaffold Leaf two who's tried or even scaffold is one I love it it's amazing yeah there we go Kevin so uh Kevin back there has put in an amazing uh uh and also Simone has worked very hard together at building this repo right here I don't know why I said no more QR codes that's just I apologize again but this is a blog entry written by Kevin Jones uh specific uh to combining a scaffold eat to repo with a subgraph it's all dockerized it's all contained and it has super fast feedback loop happiness that feels really good when you are able to deploy your smart contract on hard hat you're actually able to see the exact front end respond immediately and have a subgraph respond as well right away it's this really amazing feedback loop so um Kevin uh Simone cheers to you guys great work with this and if I were starting on a hackathon this is where I would go so um Workshop takeaways decentralized indexing is love uh that's a good one deploy a starter subgraph uh in subgraph studio all right just deploying a starter sub graph and querying it in your hackathon project is enough to get some money so that's pretty cool you don't have to do anything crazy just a starter and query it that's awesome uh you can trace an event that's a really good way to learn you can start from front to back from the schema all the way down to the blockchain or go from the blockchain all the way to the schema and see how that is handled all the way through hopefully this video helped this interaction help um and then also really good way to learn sub graphs and sub graph development is just to play a starter subgraph looking at a smart contract and look at one a little bit more advanced and I provided that for you today so you could see how that's done compare had a little bit more advanced one is done with some good documentation and just you're Off to the Races you're good to go and scaffoldeth is helpful too okay so if you would like to join the graph ecosystem jobs Network roles and Community go ahead and scan here I'll never say that QR code thing again and once phones are down okay oh there we go okay cool we're good all right and uh q a [Applause] uh yeah I was just wondering is it possible to have any access control over the entity mappings that you were showing so there is the authentication that you have so it is on your computer authenticated and so if there's anyone who's going to be hopping in they need that authentication key I showed mine publicly because that's my developer key I don't really care but that would need an authentication code you just need to authenticate another computer it's a role-based access as well um so you could have access into the subgraph there is way there are ways to have like a gnosis multi-sig that has access into a subgraph and can actually use it and alter it at the dashboard level and also at the code level you have the authentication that is that I copy pasted into this CLI so anyone that has that authentication code got it by logging in appropriately either through the multi-sig and that allows a lot of people to use it and then copy paste into the computers that are appropriate cool thanks yes I was wondering is there a way to ask the indexer to like simulate an event so that simulate an event so to simulate the transaction and index the resulting event this will have use cases like for example in uni swap when you want to get the fees that are accumulating you could just ask the indexer to simulate that several times that's a good that's a good question let's talk now I want to open that up a little bit that's a good question let's talk afterwards afterwards perfect all right thank you Marcus thank you so much [Applause] hope you're here for the next presentation please keep your seat and if not thanks for stopping by hey foreign thank you okay let's start welcome to the ziki pop Workshop uh yeah I'm curiousev one of the core developers at the sea keeper protocol and let's talk about how you can use ziki Bob and how you can integrate it into your privacy applications using our privacy enhanced smart contract wallet which is what ziki Bob really is protocol we really believe in this fundamental concept of personal financial privacy we believe that it's crucial to have a choice to have this privacy and for people for users to have this option to decide which transactions they want to keep private public and which they would prefer to really keep hidden private from the outside Observers and we also believe that given though the currently all the available blockchain infrastructures mainly support only public transactions and all the information is publicly available on the blockchain explorers and everybody is able to see like the balance is the addresses the transaction amounts the history that is really inconvenient for most of the people who are getting onboarded from the traditional Finance world where something as important as Financial privacy is something that really exists and yeah we believe that this is one of the reasons that prevents the crypto World from getting widespread adoption which is the lack of privacy so at Tiki Bob we are trying to address this lack of privacy by building our own privacy protocols which allows to overcome these challenges so yeah let's dive into it the ziki power application is built on top of CK snarks and it really allows you to make this privacy preserving transactions which are fast and easy payments within the all supported tokens which you can perform by generating locally the CK proofs and yeah within the Ziggy pop you can make the private deposits you can transfer tokens freely within the pool which are completely private and hidden from outsides outside world and then you can also withdraw it back to to the public blockchain to your public wallet and continue using it in the defy from the already privacy enhanced tokens the way it works is that once you send a transaction on ziki pop to perform some deposit transfer overdrawal only you and as a sender and the receiver of those operations which can be yourself or a friend of yours only they are able to access decrypt and actually get something useful from this data and to understand what really happened within this transaction so right now the city Bob is available on polygon and optimism layer tools with more chains come in with the within the nearest Future and it supports Bob and usdc stable coins which are mainly used for salary payments and each token on the optimism for anything that requires privacy for ethereum Native currency which might be the private contract deployments which is which happens to be useful in some specific cases so yeah and we plan to add more chains and more tokens within the upcoming future whenever we are finding the demand for particular privacy so that's the sneak peek from our UI we'll have a live demo of how it works later in the workshop but really yeah our UI is quite simple and by using it you can deposit transfer in withdraw freely by just as you would normally do within the metamask or any similar wallet just for other web browser the app without any need to download anything all the ziggybot proofs CK snark proofs are generated locally so that's it really that simple and convenient UI to use for your everyday needs to achieve this a little bit of privacy of course the opportunities you can use the easy keyboard for are nearly Limitless but really trying to come up with a certain way of use cases for which people are already using ziki Bob and what are we endorsing them to start using the cable for and this use case is typically involve anything related to the peer-to-peer transactions for example when you want to split the dinner bill with your friends after hanging around after the if Global hackathon you can use it for receiving and paying salaries and wages to your employees both from the employer side and the employee it can be used for anything related with the grants to Nation fundraising crowdfinding or really any other use cases you just want to make your payments in stable coins either or any other tokens private so yeah let's take the the most common example for now the the way how the salaries can be transferred with Tiki Bob so let's say we have our employer Carl who really wants to pay his employees on the public blockchain because he doesn't trust any centralized exchanges and he wants to keep all his budget accounting and the salaries on the blockchain but his employees really ask him to do this privately and that they would prefer to receive the salary also on the blockchain but in some private way and so Carl found out about city Bob and now he wants to start using it for salary example so the way it works is that Carl just chooses the stable point he wants to use and can be Bob and can be used to see directly then he deposes this stable coin inside the city Bob pool let's say once a month and when on the salary day he's able to distribute all the salaries within one multi-transfer transactions to his employee addresses he obtained from the from the invoices and yeah so he just needs to send once a month a single multi-transfer within the siki Bob through our UI and then employees are able to freely withdraw in any amounts their salary on their public wallets once they once they want to do that something one of the features that ziggyback we think is really important for Toyota widespread blockchain and privacy adoption is the good support for mobile devices when you can send and receive transactions on the fly when you don't have access to your desktop or laptop so we spend quite time to actually optimize the K-pop application for mobile devices we made sure that the Ziggy bulb is usable on the mobile that the proof generation Works fast enough and now it takes only 10 to 15 seconds to actually generate a completely private CK proof in your browser on a mobile modern smartphone one of the also one of the cool features we have a tiki pop is the integration with li-fi which allows you to actually perform any cross chain interactions from the chain and to the chains which are not natively supported by the sticky Bob application so you can really deposit and withdraw freely not only from optimism and polygon but you can simply connect to any other asset or chain within the same UI just by opening up the li-fi widget which is really cool and we are really happy to see how it all works and then the last point I wanted to discuss throughout this Workshop is the our Accent on compliance side of things so as regulatory requirements as we've seen in the past couple of months they became stricter to towards any privacy enhanced application or protocol we believe that something that should be taken into account and as our mission we see this goal of finding right balance and the compromise between the level of privacy you get as a user of the City Board protocol and the way of compliance the government or different authorities can expect from such kind of protocols so everyone kind of get what they want without hurting each other's painful points and so at Ziggy Bob we are trying to build this compliance friendly tool which still supports the Privacy within these transactions but then meets certain regulatory requirements and yeah so the way it works is that we employ several techniques within the ziki Bob to support this compliance side of things so the first one is the address screen so anytime you make a deposit or we travel to the ziki Bob we make sure that your address and your wallet passes the necessary email requirements so this way we can make sure that cable is safe from the different malicious parties and users that can try to access and use the applications and right now we are using the trm labs provider for such ml screening for automated checks but we're always looking forward towards any other Integrations and new protocols which does similar kind of things then the way it works is that our checks are not only employed on the UI side of things but they are deeply integrated within the sequencers code so that malicious party are not able to access the protocol by bypassing the UI somehow but they instead integrated with the sequencers and sequencer is the only party which is able to directly access the sikki for pull contract then the next important feature we had at ziki Bob is the this notion of optional kyc so basically kyc is not a requirement for the for the zikbop user and you are able to freely use the keyboard application to the certain limits without any need in kyc but then if you're a big business who wants to pay the salary so you're a big user who wants to transfer big amounts in order to raise those limits there is this concept of optional kyc which is something that you can pass you can meet some mean some soul bound to nft on their wallet and then the protocol will automatically use this nft as your access key towards this enhanced and increased limits and right now we're using this integration with the Opium nowhere cut protocol and underneath that it uses the binance pub sold bound nft token and further down the line we are considering multiple approaches towards the further improvements on the compliance side of the ZK bulb we are looking forward how we can employ the and implement the selective gnomization of user transactions if they are willing to do so how users can generate the cryptographically verifiable account statements with their transactions how they can export and give someone read-only account access keys and yeah how we can support multiple ways not only the binance Bob tokens but yeah more on chain kycs so yeah let's have a few words about the hackathon penalty we have so yeah one of the bounty is related with this direct deposit feature basically it's a way how you can integrate the deposits towards stickable protocol into any third-party protocol smart contracts open source wallet and its purpose is to minimize the required effort and the entrance barrier Quantum requirement needed for accessing this stick keep up deposits the cool thing about director process is that in order to make one you don't actually need to generate or communicate with our SDK to generate any snack proof you just need to submit a simple smart contract role which is something that you can do from any smart contract integration any third-party protocol and you don't need any SDK for that so yeah the way it works is that we have like a dedicated to separate smart contract which Aggregates all those direct deposits and then the which may come from all of those protocols on the left it can be anything related to taxes breaches aggregators wallets anything related to the payroll and then after all of these direct deposits are aggregated on the special contract the sequencer will uninstall and generate the page CK snack proof and actually include those deposits in the AC cable pool contract where the receiver of those deposits and users will be able to access them a few minutes later so as I said the first bound is related with the implementation and the integration of those cable direct deposits so we have a basically any best use of this particular feature will get the price so we have three places three two and one k for each and then the second way of bounty if you are not feeling well about integrating the CK pop deposits into your own application because you have a bit different uh project that doesn't involve any stable coin transfers let's say then we have this open track price pool for basically any one any team that is able to just go through the onboarding flow in the city Bob application generate the receiving address open an account then we'll ask you a couple of feedback questions during the touching session and it really takes five minutes to be a part of this price pool so what we're gonna do is just we'll take this 4K and distribute across all teams which completed their onboarding flow and yeah basically created a ziki bob account and yeah just once again a few ideas how you can integrate direct deposits into your hacks is to integrate with with any open source wallet let's say metamask snaps it can be integrated with the different taxes breaches aggregators or any other smart contracts and yeah any awesome ideas of course are welcome here as well so yeah let's have a small demo of the ckbop UI to see how it all works and what we can really do with it so yeah we're gonna log in into our t-up we're going to select the yeah we recently deployed the ethereum pool for each token on optimism so let's use it for for the purpose of this demo but really all the pools are very similar and you can use any of them in your hacks and in your workflows so we're gonna connect our CK account by using our web 3 wallet so the UI is going to ask me to sign the message and then used my signature to generate the the private key for my account I'm going to skip the password for now yeah the my CK account is now synchronized and in the right right upper corner I can see that I have public balance of some eth and wrapped ethereum and then I have also private balance which is completely hidden and is part of the zikipob pool smart contract so now that I'm connected with my CK account I can make the deposits of both if and flap teeth I can transfer it to to different people within the pool who also created a city account so yeah let's just make a transfer to myself so in order to make a transfer I need to ask the receiver side receiver person to generate a receiving address so each time I click this button in the account tab it generates and outputs me a random address and so the number of total addresses is Limitless so you can just generate a new one each time somebody asks you to send it so this way it helps you to preserve some some way some level of privacy as well so yeah and just let's transfer some if so yeah what right now is happening is my web browser is using our SDK to generate a snack proof so on the laptop you should take about five to six seconds on a mobile it takes about 10 to 15 so yeah right now proof is generated it is submitted to the sequencer and now sequencer has sent his transaction and yeah it's already included and if we go to the history tab then we'll see all the actions I have I have done a few hours ago and uh yeah 20 seconds ago I've completed this transfer and of course all the history I see here is only I and myself is able to actually decrypt this history and access those details to see what amounts to what addresses have been sent and so the rest of the information to the rest of the blockchain is hidden and stays private so yeah I can access my history and see what have I done within my account so yeah let's now see how we can make the track deposit and how they can be integrated to your application so the simple way to test direct deposits is to through the block Explorer UI so basically that's all we need so I'm gonna go to this awesome blog Scout user interface to to see how we can send the direct deposit from there so basically in order to send the direct deposit I'm also will be required to get this receiving address which is a different Farm different one from the one we used before so I'm going to copy that I'm gonna select the direct deposit function I'm gonna pass my CK address here I'm gonna yeah let's say I want to deposit 100 of each and yeah as a fallback user I'm going to specify myself as well so yeah basically these three arguments is all you need to send the direct deposits on chain and as you can imagine this function call can be easily incorporated into any smart contract application any protocol it's really that simple so yeah I'm gonna send the transaction yeah let's see its details yeah and we see that 0.01 eth will transfer to the attractive posits more contract now it will take some seconds for it to be displayed in the history so yeah let's wait and test how much time does it take for the graph service to to synchronize this deposit so yeah it's already here yeah we have seen I'm able to see that uh 30 seconds ago I made this deposit so we deposited 0.01 if but the some fee was subtracted on the smart contract level and yeah now I'm seeing that my deposit is pending and it will be credited to my account in like 10 minutes so yeah that's how the interact deposits work and we have a more extensive documentation on all of that in in our documentation page within our docs on The ziki Bob portal so yeah feel free to try to yourself the city power application create an account apply for our bounties check out the documentation we are in direct deposits the SDK and the rest of the application on our stickable website if you have any questions please stop by our booth we have also we also have some cool merge you can ask questions have a chat with us and if we are not on site you can freely ask questions in the Discord Channel the if Global so yeah and yeah I think we have a couple of minutes for on-site questions so I will be happy to answer foreign [Applause] so with direct deposit if I understand what you're saying is you can anonymize the transaction so maybe if we make an app here in a decentralized tab and we want users to run our functions from our smart contract without knowing who they are could we easily plug this scene to make it work or not really yeah I think you can so basically the track deposit is a very very simplified version of the deposit plus transfer combination so if you want to do kind of similar thing in the UI the way it works is that you first need to deposit in order for that you need to calculate the smart proof and then you can make a transfer but track deposit just allows smart contracts to bypass this complicated flow with the smart proof generation and just call it a function on the smart contract level passing a few arguments and yeah it will do this deposit and transfer to the receiver site so of course this uh the sender address is public because the deposit is coming from the public network the amount can also be seen but then the receiver is actually Anonymous party so nobody can really know to whom this receiver address belongs what if I want the opposite since I have my smart contract with a function someone needs to call it um I just don't want anyone publicly to know who is calling who is my smart contract yeah for that uh so in the ziki buff we are using our own sequencer and some sort of account abstraction but so yeah for your own builds and smart contracts there are a few services that does the same and the similar thing so there are a few Frameworks for account obstruction or like meta transactions so yeah you can connect to any of those I think they also have bounty on the second console again it might be done yeah okay thanks a lot thank you foreign [Applause] hey there guys hello hello so today I'm here to introduce you curtising relapse I'm gonna give you a quick overview of cortezi how it came to be and a little bit of how the Roll-Ups itself Works what is the basic infrastructure that so makes it possible and I'm gonna show you a few projects that have been built to using Cortez in other hackathons such as this one so a sneak peek this is a python code it's kind of like a script at this point but it's basically a cortezid app already this stuff is Echo a smart contract so you'll be the equivalent of having a solidity contract that whatever it receives it replies back as an ethereum event but here you can see that we're importing python libraries we are using HTTP requests and how the that is that possible Right um so cartesia here I feel like this kind of public we don't need to explain the tree Lemma again and what AVM brought to us basically ethereum brought some very interesting properties but it came at a cost of scalability and evm itself it's a really good machine to embody the necessities of the constraints of a blockchain but at the same time it limits our content capability so meaning that even if you buy some magical reason managed to get much more output from the evm is still constrained by the Format of the machine itself so the idea is what if we can have complex computations and blockchain security guarantees and still add great tooling to it so basically what if we can have web 2 um the web to ecosystem going back towards the blockchain so the basis for that is two pieces first cortex is application specific meaning that you can deploy this on top of any other network or on top of any other roll up it can be a zero knowledge roll up optimistic for lab as long as evm compatible this could be deployed on top so it technically is a layer and solution and the second one is the risk 5 deterministic machine because of this platform processor which is an open source competitor to some sort as to some extent to Intel Med you can have on OS so meaning you can have Linux back and in this in this way basically you're enabling the uh the ability of having JavaScript python sqlite databases any of the other framework and tooling that we're used to to support our applications because the Cartesian machine itself is deterministic meaning you can do interact interactive fraud proofs back on the base layer that you chose to deploy so to be more visual this is what it looks like to be coding for the evm ecosystem right now you have a very good player and set suppliers but that's it right if you need to nail you cannot really do it that properly and Cortez is trying to bring back all the tooling that we used to have so and that really looks like this your contested app at the end of day is a darker build you you basically do your recipe your Docker file you build a Docker image bundle that to the Cartesian node now you've created a node that is specific to your dap meaning you now have your application specific rollout and that's what it feels yeah you can have your favorite language you can use complex libraries to do things that we just take for granted like for instance logarithm uh you can have all these other Frameworks even that one star repo that sometimes just come in so handy but you cannot really use that with solidity really right so and here is like an attempt to compare what it means to code in such platform when compared to evm so being very generous to the ethereum network right now you can have a maximum of 30 million gas per block and the last expensive useful app code would be add a subtraction which costs three gas so we're looking at 10 million instructions per block that's being very generous right and to boot Linux and we know this because we have all the inspections here it's kind of small to read it's about 36 million instruction Cycles so that's just Linux booting and being ready to do whatever you program it to and just to be fair then we limited the Cartesian machine to 13 seconds execution which would be the average block time right and in 13 seconds on a laptop such as this one you can have 3.7 billion instructions being executed so the power that it brings back is very huge and it's even difficult to grasp so here's the image that helps you with that that little black box over there is the 10 million instructions of evm compared to the 33.7 billion ones of a 13 second execution on cortezi so how is the Roll-Ups itself right an overall architecture here for people who are not familiarized things don't change so much I realize now the the white contracts didn't work too much but basically you're gonna have let me see if my pointer here works yeah you still have your connection with the Json RPC here because it's still a roll up so to a certain extent your uh committing your information your commuting your information to the chain uh as for the input as for the roll up so you don't have the impacts of the data availability and then your no the know that you build here Representatives Cortez relapse framework we you'll be digesting this information and that might be you as a validator that might be at the user as well trying to verify whether or not you're doing something wrong and as it digests it can create new outputs they'll go back to the ethereum chain so it might be for instance just the the marker route for the the state for the the state of the machine or maybe like a new transactions that we'll do like withdrawals for instance and inside I chose to make a little bit of a highlight of these HTTP relive server here so this is still a machine Linux doesn't know what the it is doing inside there right so to deal with the drives to deal with the low level communication of halting the machine getting a new draft inputting the information that came in this new digest from the chain then holding the machine that again getting this binary information of the output Drive interpreting it and putting as an output to the ethereum chain for instance will be too much so we created a abstraction there we created this API address API it's four endpoints the documentation you can read in 30 seconds and just by hitting these endpoints you can have an abstraction of how to input information and output information into the chain so then what all you need to do as a developer is really choose your language communicate through this API and there you go you can have a smart contract in the shape that you like it can even be like a micro service I don't know what for but if you choose to do so you could so talk is cheap let's go back to that code not trying to explain every little really Nitty Gritty detail here but to this side to the left side we created this uh Little Helper tool it's similar to what Forge have been trying to do so you can sign transactions easily and calls contracts for now we just created this custom one and with this you can send payloads as input or as a ethereum calls to a certain extent and you can read all the outputs here notices we call them notices because yes just One Singular difference from the ethereum events ethereum events are not provable if I give you a payload for ethereum event it doesn't mean anything without the Hazardous distraction and really it only means something if you go through the chain and verify they actually creates the output right and notice have uh merkoproof attached to it so as long as you have the state the root tree of the Merkel democrinization of the machine being committed to the chain from that mercury root you can create the market proof for anything the machine creates such as the notice so you can prove notices on chain and here is just listing the new notices created at Disney park and here's the thing so this program here should do the echo thing I was talking about right so from there like I was saying before you import with class because they're gonna be you're gonna be doing rest arrest requests uh you get it from the environment variables we already put it there for easy for you and we have two top level handlers here you can create as many uh endpoints as you wish but these two tab levels here are obligatory why because just like ethereum evm there is two states of how to run the machine there's one that will change the state of the blockchain and there is one where you're just trying to digest information from it so it's ephemeral so if you've got inspect State here as your request type it means that no matter how much change you do to the machine it always gonna all of it is gonna be throw throw away just like a hypervisor and VMS and if you got an advanced State you really should be careful with whatever you're doing because however you stop the machine there it's going to be the stage that the machine will be for the next transaction so this is still cold right if you throw and you lose your process there is no way for you to restart this that is kind of like um self-destruction a contract or putting in a bad State just the like the parity wallet hack and the only last thing I think it's worth mentioning more specifically is that every time you get these new request you should reply back what was the final state of the whole processing so you should go back and say status accept if you say status reject or you don't reply for a long time the hypervisor quote unquote hypervisor will understand that something went wrong and it will tag the transaction as a as a reverse so to speak and if we revert back the machine so here in this case uh we would get the information here we would unroll the Json file the Json request if we get to the advanced stage uh top Handler we didn't register anyone any other Handler just this Global one here you see like I'm getting the payload I'm just creating a new notice with the same payload because it's supposed to just be an echo and finally I just go to slash notice with that payload I'm creating it you can call it as many times as you wish return the accepting I was talking about before and you close your loop it's an infinite Loop program in this in this in this in this case so you're always waiting here at finish so finish is a special endpoint that will help the machine you don't need to do anything else especially because this machine is deterministic and single threaded you don't need to be managing this uh these scenarios this Edge case scenarios so the idea here is really like you can further decentralize your apps because sometimes the apps are not so decentralized because they lack CPU power or they lack the expression capability of putting there all the rule sets all the necessary Corner cases handlings and everything you can of course then Express more complex and logic and these extra processing power lets you leverage the traditional Stacks that we had before and it also as a new project you should be thinking sometimes that the pro the talent pool for a web three people is really short so maybe you can get started with two three people but as your project grows you need to hire more people and it's way easier to tap into the web to uh talent pool so it's easier for them to be on board with such technology so let's say it in box so I collected two examples here from previous um hackathons and attempts of building things with Cartesian and one of them was just at East Lisbon East Global Lisbon just before and she was actually a track winner tracker track finalist and what she did was a to put a llm inside a Cartesian machine so she could have verifiability on the outputs produced by the llm her concern was kids very soon we'll be using Changi PT in likewise tools to be learning about things just like Google and at some point they might be questioning something like okay I'm gonna run a marathon what should I be drinking to maintain myself hydrated right and then she wants to avoid a scenario where it goes like oh you should drink Coca-Cola or you shouldn't drink beer and not having the proof that this is happening and not having where to start to backtrack and see where did in this case Coca-Cola influenced the llm model to be producing such a propaganda instead of its responses so she created this um how to say sandboxed own chain version of llms that can have the verifiability the second one is a curious one so this guy he wanted to uh intervene in the situation of clocking and clocking out into government offices so it happens in many places but especially in Brazil these guys they find ways around the system to not be there take longer Vacations or be late every day and still show on the system that they are there by using silicone fingers or by bribing the guy that's supposed to ensure that nothing's going on wrong with the machine so what he did is two-folded and here what I like about this example is just what he could use not exactly the example he used opencv to do the Biometrics so he can identify the digital uh the fingerprint of people and he used the machine learning model to avoid the spoofing of the information so he can detect whether or not there was silicone fingers use or reuse of images and things like that and that was all running on chain me actually off chain but being proved on chain here we have this uh Community website rolluplab.io there's several examples using cortezidaire it might trigger your curiosity there's things from dials to games it's really a cool resource and it's Global here we are track as well so we have up to ten thousand dollars of prize pool and uh I hope I can see you there I'm gonna be at the booth me and my friends are gonna give you all the support that you need one final announcement is that uh we are launching on Main ads next month uh probably with a Honeypot app so the foundation is supporting this uh initiative where they are going to be putting money inside the staff just as a target for hackers and other developers to try to steal it as a Showcase of the security and the Very availability of the rollout framework I thank you for being here uh this has been this has been nice it's always really good to be at East Global talking to interesting people but before I go I have one more thing so a few months ago this guy went to a Twitter to say if a theory is the world computer why haven't we seen the Doom running on it like huh also right and one of our collaborators core developer Eduardo's he actually took it on and he put Doom to run on the Cartesian machine if you want to check it out we are running actually a leaderboard downstairs at a booth he can play there there's four apps and stuff thank you again guys [Applause] does anybody have questions first of all my first question will be how do you handle upgrade ability yeah in a roll up I mean you know Cartesian roll up once you deploy the the first smart contract the DAP yes yes how do you upgrade or do you need to not great enough for sure I feel like we are kind of liking 2016 2017 ethereum situation how we deal with uh upgrade ability for categy as well but we we at least uh one layer out in abstraction so we have more recourse so one of the things that we already support is when you deploy uh your Dap You Can enable it to be upgradable or not on the smart contracts deployed on the Chain so like ethereum for instance and there it can really uh just point towards a new cortizing machine so really like changing everything just like a proxy would uh it's still a question like what happens to the data are you upgrading from a another one that you messed with like did you open like the Cortez machine to stay with the data change the code and bundle it and release it again or it's really open because with this is so many possibilities it's still up for debate like what is the best practice of how to be more clear transparent with the community as you do it but you really can do a lot like there is no singular answer for now uh will you be here during the hackathon so that we can ask you question about how to deploy this yeah okay thanks besides me there are two other technical people here congratulations on the talk thank you are you recording the high scores of the doom on chain no not because of the follow-ups but the leaderboard itself is not like a singular contract with everything there and not not really it was more like a demo for each level do they have a bounty for that sorry should have a bounty for that oh true true appreciate it negotiate a good price and get it done any more questions hello um quick thing what wallets are supported all how it does the wallet interaction flow look sorry I didn't hear everything yeah the wallets that you support and what does the wallet interaction flow look because this is very sort of tooling around building the sort of payloads of smart contracts actually how do you how do you then integrate a front end to something like this for example oh okay so so far it's really like just like ethereum all the inputs go through the chain so that much doesn't change so technically everything is very customized uh there is no like hard hat or uh ethers for cartesia so in that sense there is like the graphical and rest API connecting directly to the node so you can have easier access to the information just like you would for ethereal node and that could fit in a front and then like all the inputs they are just signed transactions to ethereum so there is no change there um is like the cartersian machine um like locked for example in the example you showed that it is requesting data from an API right so if I imagine okay I can call any API I would be able to change the state inside the machine or is it like boxed and you can only call no that API is just an abstraction to the communication with the chain that's the only API you can call that will be talking to the outside everything else is sandboxed even the API itself is running inside that machine it's just really an abstraction okay he's given another round of applause for Gabriel thank you thank you [Applause] we'll have Trevor in about five minutes if anyone wants to leave please do so now thank you thanks for coming everyone uh so my name is Trevor Porter I'm a protocol engineer at hyperlane and today I'm going to talk to you about permissionless interoperability what that means and how you can use it in your hackathon project so I guess just to set the scene what hyperlane is uh is where an abstract message passing Bridge so we allow you to send arbitrary bytes between two different blockchains um so two different smart contracts can interact with one another that live on different genes using hyperlane kind of the thing that differentiates us the most from competitors kind of in the same realm is we allow you to deploy hyperlane onto whatever chain you want so if you want to be on a certain chain that doesn't have interoperability built in into it today you can go to our competitors and they'll say give us hundreds of thousands of dollars and we'll deploy onto you or you can just go to our docs run a script run some infrastructure that we provide out of the box and you get connectivity with a whole network of chains for free um so to start with some definitions uh so we call ourselves a permissionless and modular interoperability layer um so permissionless can mean a lot of things I think it's usually a marketing term but um to me it means that you can do something without anybody else's permission right but some people will claim that permissionless means that anybody can propose a hard Fork to a network which is definitely true but it's still gated on the Node operators in that Network in order to create a hard floor so the idea with with hyperlane is you literally don't need to talk to us whatsoever you can just go to our docs you can deploy it's as easy as that that's why it's permissionless um anybody can use it and then interoperability uh it can mean a lot of things to different people but to me it just means some kind of interaction between two different blockchains so for us we are an interface for sending bytes over the wire between two different chains I mean you can build things on top of this like token bridging but fundamentally just that communication is what interoperability is so to set the scene why this is even important we can look at the history of blockchains and and where it's led us to today um so at the beginning we had Bitcoin and this is really great for payments um but it was not too great for many other things so people got excited by the idea of what you could do with blockchains uh if you look before ethereum existed people had ideas like creating something similar to ens but that required creating an entirely new chain I think it was called name chain or something along those lines and you couldn't use the same security layer for building unique applications with just Bitcoin um so then ethereum came and uh that was kind of the first fragmentation or major fragmentation where now you have Bitcoin and now you had ethereum and ethereum gave you the ability to create applications with the same infrastructure based layer but pretty quickly the limits of ethereum were hit uh there's some serious scalability issues with just having a single blockchain like ethereum that also imposes some very prescriptive trade-offs on applications that are on ethereum so ethereum wants everybody with a laptop to be able to run the entire chain but that comes at the cost of people not being able to have really high throughput on ethereum um so in 2019 around that time there was a lot of talk about things like plasma or sharding or like all these different ideas some of them eventually turned out to be what we call Roll-Ups today um but we also saw the explosion of alt-l once and people were moving to these Alto ones like Finance smart chain like Avalanche like Solana instead of ethereum not necessarily because there was anything special about these blockchains but because there was cheaper block space and then new communities were created around this cheaper block space and this was the first kind of Step of scaling but as you scale in in the Paradigm that we've chosen to today you create more fragmentation so to me there are three valuable things about blockchains and it's composability verifiability and censorship resistance and as you scale and create new block space you give up composability so interoperability between all of these is extremely useful in order to preserve that composability and so during all of this things like Cosmos or ecosystems like Cosmos and polka dot pioneered app genes which have kind of evolved into the roll-up thesis today so specialized chains that have their own block space um that uh yeah allow for for scaling outside of just the world of ethereum and eventually today we're at Roll-Ups and there are various roll-up ecosystems the ethereum world ecosystem there's the celestial roll-up ecosystem there are still app teams in the cosmos world I don't think Solana is going anywhere like there's still all of these ecosystems that are being built new Chains new block space um and I I think it's just an unavoidable future and as these Hoots get more complex and all these new ecosystems arise there's no good way of interacting between all of these that that is kind of one size fits all um and people are migrating to Roll-Ups um so daps like Zora they recently launched a roll-up um cello the L1 is transitioning to be a Roll-Up there's a lot of effort on the ethereum side toward growing the roll-up ecosystem and there's a lot of like discourse around uh Roll-Ups that are using the same da layer so data availability layer of having better and more trustless communication with one another um but this is still like super super early stages um uh there's a lot of research going on there like it's not a one-size-fits-all situation um so we need interoperability between Roll-Ups between chains regardless of what they look like today and we can't really afford to wait for a future where there might be more trustless communication so in comes hyperlane um and and further to set the scene uh I guess just to like explicitly say like the common path of world to roll up interoperability today if you're on optimism and you want to go to arbitrum you pretty much need to wait seven days to go down to L1 and then you go back to arbitrine and that's just unacceptable for the vast majority of use cases so on top of this there have been different protocols that maybe use an external verifying set to sign off on these messages between these Roll-Ups or people who provide liquidity up front for the destination on the roll up knowing that they can wait seven days in order to get it in the future um but yeah the general idea is all of these different roll-ups they look so different um you might be familiar with storage proofs which is kind of a Hot Topic in the ethereum community of facilitating better roll up to roll-up communication and the way those work is a roll-up will learn about the block header of another roll-up inside that block header lives an attestation to all of the state that lives on that roll up and if you come up with this proof to find out maybe what the storage slot is at a particular place in a contract uh in that storage route you can read the state of another roll-up within this roll-up but the problem with these is it's it's so specific to the implementation details of these Roll-Ups that it creates fragility if one will creates a hard Fork what happens to that bridge it's fragile um so what hyperlane does is we don't want to wait for a future where there are all these different types of message passing paradigms that maybe further along in research but look totally different and we can't have them today so how do we how do we get this today we separate the transport layer and the application layer so what does that mean it means that hyperlane is an interface that is constant for all chains but under the hood the actual security that is used for these messages can change and it can be different for different chain to chain connections depending on what is seen as what the application wants or we provide a default security model uh which might be the most trustless security between two different chains so to give an example if I'm on ethereum L1 and I want my application to send messages to optimism to arbitrum to polygon to Solana the last thing I want to do is do the legwork of integrating with each of those the Roll-Ups their native token bridge I don't want to know the interface and the implementation details of that I don't want a massive switch case statement saying this is my destination and this is the code that I want to run uh I want to just have the exact same interface I don't want to know the implementation details of how it gets there I just want to know sure maybe the the security of that message but I don't want to know the interface into using that bridge and so what we do is we have a contract called a mailbox that lives on each chain and this mailbox is the single interface for sending messages to other chains or receiving messages from other chains and then applications and this is where the term modular security comes in applications can opt in to what security they want to use for messages that they receive and this is super powerful because as new research comes out um you can kind of just change configuration and you get the new research the new product the new fancy ZK proof completely for free but today you can launch and still be equipped to use that in the future um so like concretely uh if you use hyperlane between L1 ethereum and arbitrim today like you'll be using the native token Bridge which is trustless the native Bridge which is trustless and maybe if you were to go from ethereum to Avalanche like there isn't a great trustless interoperability solution there so you'll use a different type of security other things you can do with this so I guess to go into the details of how it works on this destination side well the general idea is you call it in On the Origin into the mailboxes dispatch function so that's how you send a message out from a chain and it emits that message there's some off-chain infrastructure that you don't really need to worry about that listens for these messages and then comes up with the appropriate proofs in order to deliver these messages on the destination and the way that they deliver this is by calling a function on the mailbox called process and then that mailbox we'll call the recipient's Handler and there's a step that I missed there which is uh the mailbox needs to know what kind of security that recipient requires and the way that a recipient defines that is through this thing called an interchange security module and all this is is a view function on the recipient that Returns the address of some smart contracts that encoded into it has the rules of how to verify this message and this is the step five right here so you pass in two parameters into verify one is metadata and this can be anything that is specific to this interchange security module you can imagine it as like validator signatures over a message or maybe a proof verifying this message it's some kind of off-chain data and then the actual message that was uh that was sent and the cool thing here is that you can actually tweak the security that you want depending on the contents of the message as well so if my application is a token bridge that I've built on top of hyperlane and somebody is sending ten dollars do I really require them to have the most stringent security for that if that security has like a monetary cost probably not so like I I could choose for a really low value transfer to maybe require like an M of n validator signatures over this message uh but if there's a million dollars going over maybe that's where I'm willing to put a cost onto the user where they have to process a more expensive proof in order to verify that this is correct um and like I mentioned this is future proof so as new things come out you can really easily just change out the transport layer under the hood without having to make any changes to your application um so yeah this all kind of leads up to our special sauce which is permissionless deployment so in a world which I think we're seeing uh where there are countless roll up as a service companies a bunch of new Roll-Ups being created each day new chains um whether in the cosmos ecosystem or elsewhere um there's just this explosion of of chains that's occurring in this last year like speaking to so many people here like there are a lot of new chains being created as well um and there's this problem of like when you create a new chain it's this entirely isolated ecosystem and the first question that clients have roll up as a service companies ask is how do I tap into uh the rest of the ecosystem and if you are let's say an ethereum L2 you get a lot of that through the native bridge but if you're a Celestial L2 because Celestia is just a data availability layer they don't have any kind of smart contracts on on the L1 you don't really get any benefit of of that native token bridge to bring in liquidity into your chain um so what hyperlane provides is just go to our docs you can do it if there's a chain that you guys want to deploy hyperlane onto during this hackathon like it's as simple as just going to like going to our docs running some scripts and then running some infrastructure um I've talked with many many teams who have asked like our competitors to go under their chain and yeah the answer is pay us money um and I think that's just not quite in the ethos of crypto like if you look at uniswap for example the reason why it it got so big and why it's to this day like still pointed to is a great example of what Defy is and can be for everything it's the permissionless nature of it it's the fact that I could just go to the uniswap V2 Factory call a function and create a new pool so unlocking the long tail of assets and a long tail of chains and I think is going to be of like extreme importance to this uh this industry as we lean heavier into roll-ups um so just to talk a little bit about things that you can play with and build on top of hyperlane and so it's all fine and dandy like let's say you're a new chain uh you roll up you deploy hyperlane onto your chain and what you get out of the box is bytes over the wire but what can you do with light silver wire you can build applications on top of that and really anything that you want but an example of that is just basic token bridging we have our own twist on token bridging called warb routes and instead of like a classic token Bridge so a token bridge when I say this it's like a lock and mint kind of thing where On the Origin side let's say I have a token I send it into some contract where it's escrowed some message is sent to the destination chain and then a new token is minted and given to me and that new token we generally call a synthetic token because it relates to the existence of a remote chains real canonical token in a classic token Bridge they usually have a security model that they impose on the entire Bridge and it kind of turns into this honey pot of like this is like a specific one size fits all security model that is being forced onto this token Bridge um whereas with warp routes it works for permissionlessly deployed chains and it allows the deployer of a warp route so the deployer of this bridge token to specify what security they want for it um so it it's kind of like a tool in order to bring tokens onto your chain in the terms that you want to so we have three different classes of these so there's a native warp brow and what this means is let's say you're on L1 ethereum and you have eth is the dative token so there is a smart contract called a native warp route in which you just send your Ethan there you call a function your native eth is escrowed in there and then that's where the on chain or the or the message is sent to the destination chain where then a synthetic token is minted um we have the collateral version which is for an existing token that isn't the native token similar idea escrowed and then mint and these are particularly useful for chains let's say it's a roll-up um that maybe wants like a backs on its chain and so you have a bridge that is lock-in in structure that you get to define the security parameters for and you get to deploy yourself and so we offer scripts to deploy these things really easily we offer a UI that you can customize to look however you want as well and that's what that screenshot is there and it all just kind of works end-to-end out of the box foreign how does that really hurt yeah great question um so yeah Circle supports uh Native transferring between two different chains I think today it's ethereum and arbitrim or Avalanche or arbitrim as well ethereum Avalanche and arbitrim so those those three um and yet this is great I think you should use this instead of warp routes because circle is attesting to like the validity of all of these tokens and they've like blessed these tokens on all three of these chains and I think you'll actually see like a continuation of this for like the very popular fat head chains these kinds of tokens um will have canonical representations on those chains but for the long tail of chains uh circle is not going to support some random roll up out of the box um because they have no incentive to so that's where hyperlane warpouts would would come into play I mean that kind of also like plays into our uh eyes being set on permissionless deployment for these on title chains um so that in that scenario the canonical usdc token on arbitrim uh you could bridge that to like my roll-up if you wanted and in that scenario would be the usdc would be turned into a collateral warp route on arbitrim and then it would be sent over to my rollup and then it would be minted to me as a synthetic token um so I think these things aren't mutually exclusive and like I think the trend of long tail chains having canonical representations for these kinds of centralized stable coins will continue as well that kind of answer it um CC yeah exactly yeah yeah so that's it if it's not the canonical one like in in our jargon and some people use it differently um that's a synthetic token so it's like pegged to the value of of a token that exists on a remote chain cool so a couple other things that you can build or play with that we've built for you that are really cool Primitives um but these things called interchain accounts and interchain queries so this is borrowing from uh the cosmos ecosystem where they have these same Primitives um but for context the cosmos ecosystem they have this like really robust way of communicating between chains called IDC but the implementations today are very specific to the cosmos ecosystem so it only really works for these chains that have the same kind of consensus mechanism whereas hyperlane it works anywhere in any kind of execution environment so we can look at kind of the cool Primitives that they've played with and built already and then bring it to the rest of the ecosystem and what interchange accounts are is a smart contract wallet that lives on remote chains that is controlled by a smart contract on An Origin chain so an example of this could be like a dow for instance that lives on ethereum they can control a smart contract wallet on some remote chain they can own contracts through that they can call contracts through that they can own tokens they can own ethereum like native tokens they could do anything and another cool thing about this uh there's this word called like counter factual addresses which are addresses that you can generate and know what that address is without actually creating it or requiring any action from from the owner um so an example of this is like if you're familiar with create two if you know the byte code hash and then assaults in order to deploy this contract you know that it'll exist at a particular address and then the importance here is that like the uniswap Dao if they wanted to use interchain accounts they don't need a dial vote in order to create one of these they can just know that they own this theoretical address that exists on a remote chain without any kind of action on their part um and then there's this thing called entertain queries which allows a smart contract on one chain to query some State on a remote chain and then get it sent back to it so I can maybe I'm on my roll up and I really want like chain link price feeds I can use interchange queries to query the current chain link price feed that lives on ethereum and then I get back a call into one of my functions with that value um yeah I'll leave it here for any kind of questions uh I was thinking I could do a live demo but I don't have the time um but yeah if I were to ask you guys to have one takeaway from this it would be um that hyperlane is the only permissionless interoperability project and um yeah we're excited to kind of hear you guys feedback about it if you're deploying to new chains uh or if you have any like cool ideas around modular security that you guys are going to play with I think they're just so many things that uh yeah I would be doing during this hackathon on hyperlane so if you have any like ideas that you want feedback on feel free to let me know um happy to take any questions if you guys have them oh we have a booth downstairs as well related to uh like origin yeah that you've uh called warp Road basically yeah um like uh what's your take on like uh bridging data I mean not just related to tokens and nfts but everything else like how do you do everything else yeah so hyperlane just allows you to send anything over the wire so you can send if there's like kyc data on one chain or something like that you can send that to to a remote chain um you can even have applications that are natively multi-chained meaning that their state kind of exists on these two different chains or multiple different chains um kind of like a distributed system type deal and yeah I think there are just so many interesting things that you can you can do on top of that you can have uh like multi-chain liquidity layers so you could have some kind of protocol where you have pools on different chains and when you want to go from token X on chain a to token y on chain B you use an abstract message passing bridge to to first do that swap then send a message over to the destination do another swap things like that so I think there are so many things that are like super super underexplored um I will say like once you add asynchrony into building these applications so like when you just write a normal smart contract today like you have a lock on everything that's happening on that blockchain and that means that you can interact with all these smart contracts and and know that there is synchronicity in all of these interactions you have and if it reverts that no state pages will occur once you add asynchrony in here things get a bit harder so it does require like a little bit of careful design and what these messages do and maybe you'll want tie knots for these messages and they can fail safe but yeah there are a lot of cool things you can do with it no thank you the dancers question uh like uh do anything yeah you have a round of applause for Trevor thank you we will be having one more talk at 6 30 by safe so please do stick around for that if you're interested cool thanks okay um yeah welcome to my talk if you've been here earlier to at 3 30 at the talk it will be the exact same talk that was just an issue with the recording so um so yeah we're re-running the talk um I'm yeah I'm manuf I'm safe I'm working at safe wallet so working as a front-end developer for the wallet interface um and this talk will be mainly about building with safe course Decay but we'll also shortly look into the safe protocol kit okay sorry yeah let's quickly talk about safe like most of you probably know safe already um if you've never heard of safe you've probably heard of noses safe it's a it's a old school multi-sake wallet which launched in 2018 already in the first version but it's way more than just a multi-sec wallet basically we are trying to push the account abstraction narrative because safe is also an ecosystem and a protocol so that means you can there's multiple depths already building on safe or using safe under the hood for instance World coin is also here like they're using save every World coin user is also a safe user so to say and yeah yeah this talk will be about safe course Decay safe course Decay simply put is a type chain a typescript SDK so a library just with helpful wrappers for better developer experience when you build on safe or when you try to integrate with safe contracts um yeah talking about safe like we restructured the the company or the project a little bit so we split into two groups um save core we will talk about it more in this talk and save wallet that's where I work at safe um yeah the safe wallet is mainly responsible for maintaining the interfaces that means the the web wallet or the web interface for the wallet and also the Android and the IOS app displayed here in the screenshots while shape core it's responsible for also for multiple things you can split it into like three groups the first is the safe core protocol we will talk a bit more about it in a bit it's basically the smart contracts powering safe and then the save core API that's the mainly the transaction service it's called it's it's a some other services but mainly it's Services which for instance index save transactions which index created saves and which offer an API to to quickly query which saves are deployed what are those head-ups for Save like so you don't have to fetch all the data on chain all the time and then the Safeco account abstraction SDK um yeah I already mentioned it it's like this typescript um SDK just wrapper around the same smart contracts wrap around some account abstraction kits we will talk about it a little bit let's start with the Safeguard protocol it's quite new um previously we also used to call Save core protocol or save protocol the set of smart contracts which are right now deployed in prod but we are pushing for a new Safeco protocol soon right now it's in the alpha state it was announced yesterday at ECC the first time in public and it's basically this architecture so it's a new framework or a new protocol around smart accounts and the idea is that like it's it's split between accounts Registries and Integrations where accounts are smart Accounts at the beginning it will be safe supported but the idea is that also other smart account developers or other smart account wallets could plug into this protocol and then also use the same plugins and and Registries so it's not just bound to save what are Registries it's quite simple Registries is just um a registry where you where we have audited or sets of audited contracts these contracts are these Integrations so like it's always a bit tricky to know okay which of these plugins can I trust right and that's why we need Registries but that could also be multiple Registries it could be by multiple dials by multiple protocols just so that you know who who audited it and who you can trust for Integrations um plugins are very similar to modules like which already exist in safe so it enhances a saved by some new functionality which wasn't like which isn't there in the CAR contract or in the native contracts hooks plug into or hooks hook in to the transaction life cycle that means there's like callbacks for life cycle events for instance like pre-execution or post-execution and also some other events and you can Implement what should happen or what should get checked there right so you could build some security feature where you revert a transaction if some condition is not met post execution or something similar signature verifiers uh is what currently is implemented in the fallback handlers if you are in the compatibility for other candle it's called in the current save contracts so function for instance the signature verifier that's where the 1271 signature check is implemented in so if you want to build something more sophisticated in the signature check so for instance you could use it for daxes for like smart orders you could check some Oracle if some price conditions are met and only then you could say that the signature is valid and otherwise the one inch or the Cal swap order would not be able to get executed well whatever other decks yeah the registry basically registers these plugins hooks Etc so that you have like a source where you can check which plugins exist like and the plugins also come with some metadata on chain like also plug and call which version is it and um Yeah so basically it's a way to find and discover these plugins also while at the same time bringing security because you could have a register which is quite strict about that every plugin needs to be audited and whatever well another registry might be less strict you know but in a way if you trust the registry then then or if you know a register with high security standards it's also a security feature but it's also for discoverability of plugins I will show a quick demo to to um like a very quick demo yeah if you want more information we updated the docs today so if you check the save docs yesterday please check them again also some there's some other changes because we just deployed a new version of the con abstraction kit and yeah for the demo I will quickly switch to a new browser tab make it a bit bigger um I hope you can see it Zoom a bit in yeah basically the demo which is also linked on the docs so you can try it yourself it's basically a application it's a deployed on a GitHub page also or you can run it locally and you can add it as a custom Safe app to your safe so here and important it's as I mentioned it's Alpha so it's only on girly right now because we don't want a false sense of of Readiness for this feature right so we don't want people to actually use it with actual funds um because it's still in a very Alpha stage so yeah you can edit on the girly save and then you can open it you can see the available plugins so this list of plugins that comes from one test implemented registry so that's why I meant it helps for exploring plugins for instance or hooks for instance and here you could now enable some of these sample plugins or like there's also an example for a relay plugin which relays transactions through gelato paying the fee from the safe and it can also pay in esa20 tokens I will not share them I'll show them more detail because the talk should be more about the con abstraction kit but I want to mention it because we have bounties about this safe core protocol so if you have further questions please come to our booth or use our Discord and then we can talk about them yeah I'll check out the demo yourself and then you can also try to relay with it let's go back to the slideshow okay let's talk about the account abstraction SDK so I mentioned it's a typescript library and it consists of multiple kits and every kit has multiple hacks which are kind of the implementations so the kit is kind of the interface for a certain feature while the packs can there can be multiple for certain Integrations with it so the authkit is the first it as the name says it's for authentication that means it's a kit to to create an ethereum address which then becomes a signer oversafe So currently you can for instance use a Social account like or your Google account or your Apple ID to create a signer using NPC through a provider and use that as a save signer for deployed save than the protocol kit like the particle again are the the safe contracts so this is a wrapper around the save contract like you need to give a designer and then you can sign transactions send transactions or deploy saves also to this kit yeah oh yeah for instance you could also deploy a safe and already do a transaction in a batch with it then the on-ramp kit is a name says it's quite simple you you can buy crypto with Fiat and put it in front your save address through it and the relay kit I already also mentioned the provider like gelato the idea is that you don't pay gas from your eoa or from the executor of the transaction or from the signer of your save but you for instance could pay directly from your safe or through something like a third-party provider which offers to pay the gas for you here's some examples of the current existing packs we plan to also extend these packs by new providers as we go so for the office currently we have the web 3 ask it uses web 3 of IO to create like assigner using NPC from your Social account like I mentioned the strike pack it only works in the states currently because stripe is only available in the states for on-ramping but there it works and the monarium pack is quite new um I don't know if you've heard of Milner but they are in Europe and they use a Euro stable coin and you can on-ramp to a bank account which is then connected to your safe and the gelato relay pack uses gelato to relay you can pay from a safe with it or you can also pay through one balance yeah we also plan to add more kids in the future like right now we're looking into recovery kits or multi-chain kits like a recovery kit is as the name says to to recover uh the safe if you lost access to a signer for instance or to add a custodian if you if you use a custodian service then it's like half not not self custodial anymore but yeah and the multi-chain kit um yeah we're also looking into supporting multi-chain better for for sales because right now save is only deployed on one address always and it's a bit tricky to interact with multiple saves on multiple Networks and of course as the future will tell we will also have more topics which are important and add more kids to this SDK yeah the SDK is deployed or is available on GitHub and on npm it's called save course Decay from Save global and it consists of these mentioned packages like here's also another list of the packages and the only one I didn't cover before is the safe core SDK types in the safe course Decay types are basically just like some typescript types which are used across the other kit so we don't have to copy paste them everywhere so just sometimes yeah let's also do a quick demo of the kit like we have a demo app you can also try it yourself um it's a small react app um I hope it's big enough I'll zoom in a bit yeah um and then in this in this demo you can use some test Network for instance like Mumbai you can start the demo I already did before I hope the Wi-Fi will work properly um and you can try out the different kits like this is the ask kit so this is the web 3 out model which opens and you can say you want to continue with your Google account for instance then you log in with your Google account it will create the designer key from it for the signer address and takes a bit okay here now we see the owner idea that's the signer connected to the safe as an owner that's the ID generated with web 3 hours and the save account is deployed with that owner um and we also see the address here in this small demo app it also shows like some code snippets on how this is built I mean it's not the exact code but you can also check the demo is auto open source to see the exact code but this is basically to explain how they work so here we import the three hours kit or two objects from the reptile kit then we need a bunch of options they come from web 3 also they required on web 3 hours site like the client ID like you need to register as a customer then you get a client ID you have to put it here um or you also can configure which chains should be used and then some UI options which are not super important and self-explanatory yeah and some some other small options for web 3 hours and then in the end it's always a similar structure like as I said the interface is basically always the kit and the packs of the implementations so here we initiate the web 3 else model pack and then we initialize the kids with this pack and then we have optimal methods like sign in sign out get provider Etc I can use those to interact with the save them next is the on-ramp kit I can certainly not show it because right now we only integrated stripe in this demo app because Millennium just launched I think last week but basically if you click on it we can see the model but it won't work because we're in Europe right now um if you want to try this there will also be a link if you're if you're safe has no funds yet to the Mumbai faucet so you could also fund it with a Mumbai faucet and then continue in the demo here at similar like the the how to use shows you a small snippet so there's some variables required on stripes and like the stripe public key Etc um some session data also which contains like the chain supporter then which currency to use Etc um and then again you create like you initialize here the kit with the pack and then you have functions which you can use like save onramp.open will open the stripe onboarding model yeah uh next the relay kit also small demo we can I will already click because it takes a bit but all that happens if you click is the web 3 our signer will be used to sign a transaction which transfers 0.01 Matic from the Save to the safe itself so and it relays the transaction cost from the save so as we saw here it was as one click I did need to sign a metamask or anything else and the transaction is being executed on chain um so this kind of shows the power also of account abstraction yeah as we see it's success so we could check the transaction if it's included here okay polygon scan is a bit slower you have to trust me just try it yourself um okay let's continue with the slides and talk about the hackathon like um this year we have like 10 10 000 in hackathon bounties for for the safe Foundation and their split between these two projects I presented um like if you want to be eligible for the bounties you have to build either on top of the safe core protocol or the save core account abstraction SDK the bounties have the same tiers on both projects but it's separate bounties for each project so you can decide on what you want to build on if you want to build for safe um also important for the Safeco protocol it's the new protocol which where I showed the diagram where we updated the docs for it's not the old smart contracts like we would prefer if you try out the new project called build a plugin build a hook be creative about what you could build with those or you can also build a registry or alternatively you could even build a new small wallet implementation which uses this um this new protocol like to show that also other smart accounts could be used and not just saves um yeah if you have any questions about this please come to the booth we'll be there all the time I'll try to be there as much as possible to answer your questions and we also have a Discord partner Channel like partner Dash safe on the safe and the youth Global Discord yeah here's some some more links like links to our docs to the disk our own Discord our forum and our Twitter if you want to participate in some discussions around these topics or if you want to just check out the docs or just need some help um we also have a small hackathon success guide which we try to always maintain between our hackathons which has a lot of learning materials has infos about like past workshops or past hackathons so you see like which teams won in the in the previous hackathons what did they build just to get some inspiration but also to know what not exactly to build because it would be good if it's something new or not just a old project revamped yeah uh this QR code leads to the notion page with this hackathon success guide if you want to scan it otherwise we also have this QR code at the booth um yeah I will leave it on this page this was the presentation if you have any questions feel free to to reach out or to ask them now or otherwise you can always come to the booth or escal Discord thank you hey thank you um have you considered building a metamask map leveraging your SDK like to have a contact traction with snaps if you are aware about snaps I'm I'm aware of snaps um I guess so like the the only requirements to be eligible is that you use the SDK and I think in the snap you could also use the sdks or dependency to for instance if you want to sign a safe transaction and you have made a mess you could fetch some context right about the safe transaction through Snap so it definitely like the only requirement is to use the SDK or to build on top of the new core protocol so yeah would also be eligible thanks the the smart account in the new protocol is that a different contract than the currency account no it would be also the the current safe accounts um I think the demo like currently as I mentioned it's only deployed on girly okay so uh only on girly test net and I think they're they're used together with also the new um safe version 141 if I'm not mistaken um but you can yeah is that kind of uh based on the the 443 37s the account abstraction standard or is it is that still a different thing um I think the news safer the new safe version also supports 4337 I think also through a module if I'm not mistaken um but it's it's a different protocol like this this safe core protocol is not directly related to 437 it's not the idea to have a new framework or have a new architecture or protocol um to include multiple smart accounts and have a way to of a composable modular architecture to easily extend these smart accounts by new features and then it would be cool to use them also across different smart accounts and not be bound to to a safe like for instance this example we saw like all it does is um it relays through gelato like it's a it's a plug-in so if you send the transactions through this plugin it will check the gas costs and it transfer the the amount of ec20 tokens or the amount of native tokens to gelato in the same transaction and then gelato can relay it um that's the demo like I also if you want to check it like there's a repo like this is for instance this demo plug-in like the relay plugin so it's all like it's linked on our docs you can find it there and there's a contracts folder and there you find the contracts used for this small demo which you saw here you can also try it if your deploy is safe on girly you can try to enable this relay plugin um and then and then try to relay some transactions do these basically replace this module is that the right way to think about it yes because the modules right now only work with safe right they're like part of of safe the safe contracts but they're not part of I don't know the Arjun contracts so the idea is to at some point to have a have a standard protocol or push for a standard protocol which can be used across smart contract wallets and build plugins for those so there's different implementations but they're very similar like in the in the short term you we will still have the module and safeguards and stuff like that and in addition that you can also kind of enable plug-in and hooks yeah I think in fact you could build a plugin which is a module and a plugin right because in the in this app if you enable these um it will in fact just enable a module oh okay also like it's kind of both but it will also be a plugin um I didn't prepare a full demo with a one out of n Save right now I don't have uh I can't demo it we can I can prepare demo at the booth and then we can do it at the booth okay yeah we can we can take a look at it yeah this is all like very new like this was the first time I think this was this demo was presented two days ago and the the general presentation about this Safeguard protocol was given yesterday at UCC the first time so it's all brand new or Alpha but we want to gain like very early developer feedback to see if it's like good to build on it or if it's like if you could improve something because right now it's Alpha we can still change it right or if there's any issues with it um you have to open it as a custom Safe app that's important like here it's embedded and safe so it's like in the safe you go go to apps then do custom apps and then you add the URL of the demo app and then you should be able to enable them otherwise you only see something else which I don't have it open right now but yeah yeah no you have to open it as a safe app then then it should work cool thank you yeah I've seen a new website if you are deployed in 12 12 Networks is that right the safe contracts yeah no he has a safe contract and that's the safe contracts yes so if you want to build on the account abstraction kit you could build on those 12 networks also I mean there's even more networks I think there's a repo it's called save deployments um if you check that out you see actually all the networks where we are deployed per contract so if you go here to the nurses save contract you see this is a list of contracts where we actually uh of chains where we deploy it so this is a lot of chains because we whenever there's a new chain we try to deploy them but we don't support them in our interface yet but it's just the idea that we still deploy them already so this is the full list of contracts so if you want to hack on it you could use any of these networks okay protocol which with the plugins and hooks that's only on girly right now so if you would want to use that somewhere else you would have to deploy it yourself right for now because it's still Alpha it's um but if you want to hack on the existing uh productive contracts right the the better proven ones they deployed on All These Chains It's called safe Dash deployments now if you plan to deploy in linear uh do you know the chain ID by heart no and yeah you can check in this repo yeah okay now I was live yesterday so yeah so I I think it's not let's see when the last update was here four days ago so probably not yet yeah okay yeah it's yesterday thank you thank you very much thanks Manuel includes our workshops for the day happy hacking 