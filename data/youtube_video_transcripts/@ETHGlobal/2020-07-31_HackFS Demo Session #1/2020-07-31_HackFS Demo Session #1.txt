okay we're good all right cool also yeah obviously don't uh change the order of any names in there i trust you all okay so this is the end of week four awesome everybody's been working super hard for the past month this is the almost the culmination of all of your efforts you've got some amazing projects some amazing demos to show us i'm excited juan's excited everybody's excited to see um and so this is this is really the first exposure maybe the first time you're showing your project to people besides your team so this is a big step forward congrats for making it this far as i mentioned earlier at the start please add your name to the daca just linked in the chat that's how we're going to be going for scheduling and i will stop talking and we can just get right into it uh somebody just deleted their name okay tj mr rush you want to kick us off and remember um the key thing here is we're this is the demo session so we want you to be showing something that you've built um we're happy to provide other feedback but this is specifically for demos and you know concrete uh walkthroughs of things that you've built so tj you want to go ahead and share your screen and let us know what you've done yeah i'm just gonna i was just gonna say um start with like a quick intro of what you've been working on and then you can jump right into it um if it's okay i'll just play the video we're kind of working and we just spent the morning building a video so it kind of explains it i think how long is it it's four minutes okay four minutes and one second i'll allow it make sure to uh share your sound or if you if you're going to talk over it that's fine can you see the screen yep we talked about our hack fs project called the unchained index of web 3.0 native api prior to the hack we had built an application called trigger real quick pause it for one sec what i'm going to have you do is re-share it but make sure to share your audio from the video there's a little dialogue that'll have the audio come through much cleaner so stop your screen share and then go to share it again and at the bottom of oh that's it i see it okay called the unchained index a web 3.0 native api prior to the hack we had built an application called trueblocks which runs on the end user's machine we call it an account explorer it does double entry accounting and exports data to accounting software being fully local the software is private and 100 decentralized assuming the user has an ethereum node of course there's a problem with this it requires users to run their own infrastructure the normal way to solve this problem is to move the infrastructure to a remote server and leave the ui in a browser window this is standard old-fashioned web 2.0 and it exhibits all the problems that web 3.0 is trying to address from privacy verifiability and censorship for a hack fs hack we wanted to see if ipfs and ethereum could help to solve these problems the existing true box code currently builds a chunked index of every appearance of every address anywhere on the chain as it creates each part of the chunk index it also creates a bloom filter which is a much smaller piece of data representing that chunk for the hackathon we extended our infrastructure code in two primary ways we added a publishing piece each chunk and bloom filter is pinned to a locally running ipfs stamen into pinata we inserted the git commit of the code that builds the data making the data reproducible and we put the hash of the manifest to every chunk and bloom filter to an ethereum smart contract we also added a consumer piece on the end user side we left the existing api in place but modified it to accommodate the remote data as the user uses the application it queries the smart contract to see if a new manifest has been published and if yes any new bloom filters are downloaded and pinned next the bloom filters are used to determine which chunks contain the user's address and only those chunks are downloaded and pinned finally the query is answered and the results displayed as a result of these hack fs changes when a user queries for an address on the chain we can deliver the results without using any server and we can deliver on a number of web 3.0 promises this is a perfectly private this is perfectly private with minimal infrastructure we have verifiable data due to git commit the producer cannot withhold the manifest because each user is reading from a smart contract they've also improved the economics because each user downloads and pins the portion of the index they care about over time with more and more users we realize we will realize improved data availability and discovery more equitable sharing of costs among users associated with producing and publishing this data a light user such as this one only taps a small piece of the index while a heavy user such as this one carries almost every piece of the index data each participant carries their own weight now we'll show you a short demo it's the end user's machine um i'm just going to clean up a little bit real quick i'm going to go here and on the end user's machine what we're going to show you is that this these are the bloom filters we've already downloaded them to the end users machine but you can see that the actual index chunks which are stored in this finalized folder are are empty there are no chunks so we're going to double click on this address right here and it's now scanning the bloom filters and you can see it says bloom mist so it misses the there's no hit um whenever there is a hit then it downloads the actual chunk so you can see it hit twice there were two false positives and now it's finished so it found four transactions across the entire history of all 10 million blocks for that address and it downloaded only um 52 megabytes of data from the from the index out that's big we did that on a completely local machine we did not tell anyone which addresses were interested in so we didn't reveal our preference for anything we're interacting with a smart contract in ipfs which means that we're not putting any pressure on the provider we're not hitting the provider's website we're hitting ipfs in the smart contract so there's no as more and more users come in the price for the producer stays the same that's it that's awesome that's really cool yeah of course great questions um are you doing uh are you kind of encrypting the content before you i mean the stuff is coming from a lot of the information is coming from the directly from the blockchain right so it's all public i guess or is there kind of some information there that should also be private like some tagging and annotation of like if i could imagine as you browse some transactions you might want to make annotations on them and be like oh actually i think that this was such and such thing yeah the the the end user can make annotations on the data on the end user's machine and that's not pinned or shared at all also the end user can name addresses so they can say this is my third address or something but part of that could be shared and we want to let the user share because we want the community to start sharing names of addresses because i think that's a benefit to the whole community so um we very clearly try to separate out private data and this public data we're very concerned that the ethereum index will become owned by big data companies and that will kind of be a real challenge to uh building a community on top of ethereum if it's owned by somebody so we want to release that index out to the community and that's what we're doing kind of on purpose yeah i think so i think that that makes a lot of sense um uh so for some of that data if you want to move it around with ipfs are you pre-encrypting it before like are you doing kind of encryption yourself or are you relying on on something like textile or or some other library we wrote a small library that pins directly onto ipfs daemon the demon has to be running we still don't know how to start the daemon ourselves from our library but we'll figure that out and then we also pin to pinata because of speed mostly i think and then we use on the client side we use the ipfs gateway i think over time if there's a lot of data out there and a lot of different people are using it it'll get better as far as finding it but it takes a little while to find it without those two pieces yeah it makes sense i think uh if you want to preserve kind of um you know for the data that you want to be super private uh that you only want to allow explicit sharing um recommend checking out um uh threads from like like a textile thread or a textile bucket because then you can put that data in that bucket and you can still use that because you move it around but uh only the parties that were with whom it's been explicitly shared will will be able to decrypt it great i'm not going to probably get that done by next week no no no just that that's from the future but that's really cool that's really awesome thank you all right give me another question uh how hard is it to do how tight is it to the ethereum blockchain like if i if we wanted to uh use some of that tooling and so on to do an index on on the falcon blockchain like what uh what what kind of a lift is yeah we always wrote we wrote that code it's all generated automatically from data files basically so it's pretty easy to shift to a different blockchain we've never done that yet but i can see how we could do that easily really cool thanks does anybody have any uh quick feedback for the video anything you didn't understand uh you can either voice it right now or add it to the um to the google doc again so this is a really great example to go first thank you tj because this is the format that your submission video is actually going to be in it'll be a four minute video and you want to really concisely explain what you worked on and you know communicate to the judges and anybody who is looking at your project why this is useful why this is important so awesome job tj thanks for uh starting us off strong thank you all right uh we're going to move on to the next team which is steven anders hello hey hello hey guys all right so uh our app is called sail plane uh it's a uh it's the idea is to create a peer-to-peer uh dropbox clone essentially uh sail plane runs on ipfs and uses orbitdb in order to be able to track path path changes so um when you add files into sail plane to share uh you can modify the files the move files around rename uh files and everything is tracked uh in the orbitdb state and can be synced across multiple clients uh and everything works uh browser to browser so uh the app the front end is built in react uh with a custom ui that we developed and uh yeah so this is sailplane it's live right now anyone can actually go and test it out now on alpha.sailplane.io and so when you start you have this intro page kind of tells you about it and you open a drive and right from here with no account or anything you can just start dragging files over you can drag folders of files over it basically has a full file explorer built in with uh drag and drop capability and stuff and the ability to uh preview files um so the cool thing is that i guess i should show is how sharing works so you can share individual files you can share folders by clicking the share share link shared shared images show up is photo galleries uh and shared folders you're able to uh another user for example here i'll i guess i'll show you so if i share this file i open the link this is what it would look like on the download page with a preview the ability to download um but the real cool thing about this is the ability to share drives so when you first load it up a drive is created by default it's kind of hidden away from the user but if you go to this drives panel you can see that a drive was created with its own address you can create multiple drives an identity is also created for you it's uh actually the orbit db id which we're using here is a user id so i'm going to copy this user id and i'm going to open an incognito window to show you what it would look like if this was another user and i mean you guys are feel can feel free to try this in real life if you want so here i opened it up in this new i opened up a brand new instance has a completely different drive but i want to share this drive with these photos i can copy this instance address click import drive here paste in the instance address and now i have this imported drive and wait open in multiple tabs for some reason there's an issue i'm not sure why it's not syncing oh here it goes okay it's synced alright so you can see the files match up if i like delete a file here it syncs up instantly across browsers but if you look at the drive and you look at the the sharing information you can see that i only have read access only over here and here on this other drawer on this other computer i can see that i am the admin of this of this drive i can now take this user's id add him to the writers of this drive and now he has full writing privileges and you can check that here should say you are a writer on this drive and now now i should be able to delete files from here uh it works and i should be able to drag files in and they replicate across and everything stays in sync and can work across multiple browsers and uh yeah uh anders would you like to add anything yeah um there's no encryption added yet but we're working on that um well we do have we do have do have profile encryption so if you click right here you can set up us uh an actual plain text password and you can any file that you add into it uh will be encrypted however we should have by the end of the hackathon full drive encryption by default and the ability to have multiple users and multiple writers even with uh uh multiple multiple writers and still encrypted so that's what we're working on we already know how it's going to work so it shouldn't be a problem and anyone can feel free to try it out and uh we'd love any input the idea right now for encryption is just have a shared aes key for the for the entire drive um and hopefully we're also thinking that moving ipfs into the into a service worker um will fix the like multiple tabs issue yeah that's yeah when you when if you have multiple tabs open uh on one on one instance uh it will cause some sort of issues i think on the indexeddb uh local store uh and so we're gonna have to move it over to a service worker and it should fix all those problems awesome i i had a bit of a sneak peek on this the other day um they sent me some links so very cool um one thing i'll note is like this is just generally a general suggestion when you guys go to make your videos um start off with like what problems are what specific problems are you solving like this is a cool demonstration and it's it's very interesting and i'm very glad that it works actually uh but like who who are who do you imagine using this what are their use cases why is this awesome lead lead with stuff like that um but yeah i'll let somebody else maybe get some feedback as well yeah this is really cool uh i think the demo was uh was really good and really um good to follow the flow um you may wanna um think through like um i think how it builds up is really good but i think you may want to have like show those specific like different kind of files like i think images are really good but being able to show maybe text or a pdf or something like that and like yeah i can show this is mute music so music plays you know there's a music preview and you know for music playlists you can actually drag drag a bunch of music files into a folder and it'll actually show as a playlist folder which is really cool text would be really cool too i'm not sure how that would be done but it's probably definitely possible would it be unfurled would it be like a like if i wanted to share a list like a to-do list with somebody would it like like that um music player has a little widget underneath it yeah so so actually if you have multiple i can show you what it looks like let me just um so i only have one song in here but if you if i share this as a folder oh you know what it's hold on one second it's sharing it as a one second let me just create a new folder all right uh so i had i i kind of removed some functionality uh before for the demo but um here i'll show you it should work now so if you have a folder that's primarily music it creates this little music player that i designed and uh it'll just play music through there and you can have like multiple songs and yeah we're thinking about making like a media panel as well for um playing playing or like doing a lot of images or playing playing songs or something yeah yeah i think it's really cool yeah i think for you that might be video using different examples um of the data and kind of like building up from there i think will be will be really good like different files yeah like different file types like you know you started with i think starting with an image is really good and then okay have like a collection of photos and then going from that to like the music media player thing will be good and then i don't know if you do video yet or something but like you know whatever you have kind of like as you're demoing different parts of the application just uh showing both like the different media types and then you're showing multiple different different screens okay does it make sense to show mobile or like other types of views or just does it matter yeah totally i think i think it's useful in the video to be able to see that it works on mobile um you know the final video will probably be pretty short so you'll have to you know pick really carefully what you every single thing you add will contribute time to the video so you'll have to try out a few things and then kind of cut what what you think is not as not a school and so on but you can you can you know describe it here and there and like hey look it it also works in mobile and you can maybe have screenshots yeah or something yeah yeah all right cool thank you thank you guys yep good stuff thanks for presenting thank you okay thank you thank you thank you trent of course next up is raven and cody all right so we're working on the geoweb project um for those that haven't heard i guess it's a distributed web experience where the primary navigation mechanism is geolocation rather than domain names um so a lot of infrastructure behind the scenes the problem that we're trying to solve is essentially a world where we constantly have smart devices and we instead of having discrete interactions where we open an app or interact with our smartphone as we go to smart watches and smart classes it's a more continuous immersive experience or at least there's an opportunity for that so our demo that we'll show here is super simple hopefully that speaks to the ux um we're still working on another um ui that'll show kind of like the land management that's how we're breaking things down essentially instead of domain names it's parcels of land but um this just shows a uh ios app and a apple watch complication that uses gps to find covet information and i'll let cody go through on that yeah so as graham's saying this is just like one small component of what we'll hopefully have by next week but this is kind of the browser ui example that we have um so i have this pre-recorded on a video um because you know live demos um so we have apple watch and iphone here so kind of the two components that are in the back end here is a registry that's deployed on ethereum test net as well as some content that's looked up in ipfs so essentially we have geohashes and the registry mapped to an ipfs cid so what this will do is when the location changes here it will look up the registry what the latest content identifier is for that geohash um and then it actually will resolve that content right now it's done through an ipfs gateway it'll resolve that content and show it in a few different views here so right now this location is just somewhere random and you'll see that i'll go in and switch it so in the simulator you can spoof location so it makes the demo pretty easy so we have a custom geohash here which is a nice sushi restaurant in portland oregon so right there so just move the location so kind of a few things happen get a push notification so right now we're just in the maps app we're not in um the actual uh demo app so we get a push notification and kind of the content we're showing here for a demo is what is the covid policy and mask policy for different locations so you get a push notification saying that master require and you'll notice that the apple watch complication updated to show that maps are required and then this is inside the app i'm just showing some text content as well as the content identifier that was looked up from the registry and then also i think i will change the location back and you'll see that it disappears on both of those and then this is also showing inside of an apple watch app so there's a complicated if you don't have an apple watch might be confusing but there's a complication that shows on your watch face and there's an actual app that you can have open so there are two different uis so we kind of have uh push notifications an actual ios ui an apple watch complication and an apple watch app and then i have another video here so this one is just showing what it looks like on the lock screen so this will show the notification actually happens in the background even if you don't have your phone open and in this case the watch and phone will show notification and you'll open the app if you open a new notification um so yeah that's pretty much it so yeah right now it's uh looked up through mobile on the registry is looked up through an infuria endpoint and the content is looked up through an ips gateway i was messing around with actually resolving and running the ipfs node i'm on the device but it actually worked well but there were some issues with uh the codecs that i just switched to a gateway for now um so yeah that's pretty much it it's really cool like curious uh can you do are you gonna show kind of the flow for um for the registry part like like about i don't know like registering uh some piece of land and associating information and so on yeah we have we also have a whole yeah great name we have a whole web ui like an admin interface that actually has a map and you can go in and i think right now it's read only but hopefully by next week we'll you'll be able to go and edit and register different uh content for different pieces of land but that's all through web interfaces so hopefully we'll have that to show it along with this yeah and my question might be um so i think showing the showing the application is kind of like you're showing hey like look this is the kind of application that you could build on top of the registry right um i think in that case probably starting with the registry and the admin interface and then going to this demo app and maybe another really simple demo app where you can i don't know maybe associated images like another version of this is associate images and then when you pop into the right location then you just see that the image that's there and that's it um you know maybe showing those two things on top of the registry might might help everybody kind of understand understand the whole picture so i think if i didn't know already that that's what you were up to i would have guessed that like oh like you're really building an app specifically for for the covid stuff uh but in reality you're doing like this whole larger thing yeah definitely that's good feedback yeah you're right this is definitely this is just an example of a use case of what someone would build on top of the registry the registry is what we're actually uh yeah i was actually going to ask the same thing like um how's the registry managed uh what's going on behind the scenes um kudos for getting something that's like very easy to understand what the end product is but i'd be curious what's going on underneath and why you actually uh approached it that way cool yeah we'll definitely include that the smoothness of the of the ux that is really good though like the just the going from the maps to you get this push notification and you like jump into the application and like you you see the stuff and you see the latest registry value and having it working the watch too is pretty cool great thank you awesome thanks if if you guys needed did you need uh feedback on anything specific or any pointers that you wanted clarified no i think you validated that we we understand that i mean what we show there could be done a million different ways and so it doesn't necessarily come across as the the full picture so you validated that we need to probably show a couple different locations different types of content and then really show the registration process and then we definitely spend some time talking about like the the bigger picture of why this would be valuable why would you use this registry versus using the apple app store or whatever the alternatives are yeah for sure this might be i'm not sure if you if you'll get it enough time for this but um it might be useful to think about it from like the perspective of a user right doing the registration so your demo could be like a user trying to associate some piece of data with some location and so the user is the one that's going through and like you do the flow of like here i'm registering a location and then you know maybe because it's a video you can cut out the waiting parts right because if you have to wait for the train like you know i'm gonna do that you know sometime later great it gets all registered done now i associate some some image um or whatever and then and then the last part is like you actually show it show the ux you activate it from the from the viewer perspective thank you thanks guys [Music] all right up next is def force uh hello guys um the semester yes okay so small prehistory um i'm alex from the force and we have been working on project called subsocial it's a networking social networking modules on subs substrate and it's also integrated with apfs but such such as this hackathon is on ethereum plus apfs i decided to try from the scratch and to implement something uh quite simplified version of what we have been doing on substrate with plus apfs and the project is that we are working on is a sort of simplified version of a feature similar to reddit slash medium that where you can create we call it spaces so spaces it's like a personal blog or public group or subreddit and then you can post articles statuses videos and comment on them others can follow it and see a news feed so for this we use the orbit db react one for web application and textile buckets to store images and videos and let's go through small demo so this is a web ui here we're creating a new space by giving it a title and description plus avatar so when you select our tits get uploaded to textile buckets and thumbnail created for it so here you can see a preview of that spaced from here you can follow it um everything is uh stored local first using uh orbit db on this on this screen you can see that you can switch between different types of posts like status article image video and right now we're going to create a video image so you write a optional text for it and obviously upload it image so then we're posting it again local first and the posters get stored to space storage so then on you can comment on your post and comments get added immediately again to comments and get started to separate storage and you can have a tree like structure of comments like under edit then you can go and create another space to show that you're able to follow unfollow different spaces so let's skip a little bit here so here we have another space so we get redirected once the space is created and let's write another post to that news space okay now it's a text article and yeah so we get rejected to the post that was just created and here we can see our spaces and we can follow and follow it uh so not very best showcase because this it shows um user experience from one person it's better to show experience from different people but uh as it was mentioned previously so actually right now it's uh we're seeing a feed so it shows the posts from the spaces you're falling and as it was said in uh in preparedness presentation we also have this problem with showing two people working on on on ipfs and different tabs and or browsers for this we need to have different aps apis so they communicate uh from each other and for this i don't know maybe we need to record video um on two machines or open one in as a remote or as i'm still thinking about this and also what is not implemented yet but we are working it's um we are going to add the pay voltages so post could be optionally encrypted and so we want to add feature pay-per-view and for this we get collaborated uh smart contracts on ethereum and they're here so you can register space in ethereum over here by specifying wallet where it should be paid for pause and or bgb address and then a little bit below you can set up a price for your post so you specify space post id and the price and then another guys can pay for the post preview so it specifies post id and the price should be um larger than uh or equals a post price and once everything is called it's get recorded that this guy this account sender paid for this post and then the idea is that there should be a third party service for example run by post author or a third party where you can trust as a secret for this and then the secret uh the viewers that paid for the post can request encoded secret to its public address uh with extreme address so it get a secret encoded and then you can use this secret to read the article so we're still working on this part okay if you have any questions i think it's really cool uh one one um thought is uh yeah i think having having a demo where you where you can see like different different users or something where like you pre-populate users with some a bunch of posts or whatever and you can see a user kind of viewing and engaging with the space that's kind of richer i think will help will help the whole thing feel a lot more more real and yeah seeing seeing it from the perspective of two users um that'll that'll be really cool but overall this is awesome it's great to create a have like a full social network experience finally uh finally work yeah cool thanks yeah really really clear walk through what you built and how you built it um what was the question i had uh oh you reminded me that everybody should make sure to mention which tools they're using to integrate like um i think you mentioned textile um basically which sponsors your yeah exactly so the specific things that you're using and also the sponsor prizes that you might be going for this is really useful for um when people go to review the videos and check out your project they'll be like okay cool now i know what to look for when um when i'm reviewing this so great job on that thanks yeah go ahead andrew nice i didn't know if you could see me um sorry to everybody i showed up a little late because i had another meeting around long but really excited to see all these i had a question for you i i when we're judging these projects i won't judge by this at all but i'm always super curious in hackathons if teams are thinking about kind of the longer term for these and like what it could become and i was curious because yours has like this vision of payment models the peer-to-peer payment models at least i was wondering if you your team had already been thinking at all about like what kind of business could be built on this or if there is like room for that or if you think it's just sort of like a a gift to the world that like you see how it goes are you asking me okay so uh yeah we have a great vision for this so as i said uh uh we have been working on social networking uh protocol on top of substrate plus apfs and i have been thinking for a couple of months already how to build this uh completely off of chain to provide people that don't need so much security and consist consistency so if you for example consider a clone of instagram where under photos you can you see a lot of smiles smiley faces and uh it's not big deal for the 800 smiles or 650 smiles no big deal so you can go with apfs only in this case uh but if you need some sort of payment or a recurring subscription paid subscription or if you need uh talks around on chain governance so then you basically need to encourage these things on blockchain to see is um things to consistent in some blockchain consensus so the reason is that we would like to improve this and try to integrate them mixed together with blockchain plus apfs versus ipfs only version so you can see like for example you're going to write a post and you'll ideally see a switch or tumblr then you click uh either post any blockchain or just an ipfs so you can select your security level for this and uh as a second uh part of it uh you can also for example write to ipfs only but but once you want to receive payment you need to set up a wallet for this so people know where to pay and once they paid this thing else recorded on blockchain so this payment was for this post or for this comment so this is a vision yeah so we would like to continue this cool thanks thanks for presenting alex all right next up is uh wrapped filecoin i think i saw you guys here yeah that's it right now hello guys uh so we we act on uh uh rap ficon with uh christian the silva we thought that uh it's a great it would be a great addition in the defined space especially not just like on uni swap but but also like as a collateral maker so it would be like would be great so for the first iteration we opted for a custodial approach so we used um we we deployed on kovan and erc20 token and on the back end we used textile powergate for the custodial wallet and also to um facilitate the interaction we added a wallet to create a new file coin wallet uh to wrap and drop uh filecoin through the user interface that's been deployed on flick so i will now christian will show you a quick demo christian can you i'm new sorry i just started okay now our ui is like a very tight to our racking approach and we have uh just to do a little more research on how we can like um read all the transactions to see when a user that wants to grab the his or her file coins have already transferred that to our custodian wallets we can mint the erc20 token on on ethereum right so at the beginning we'll have this screen where you can send whatever amount of icon that you want to group up the ethereum address when you want to just to receive your your rapid fire coins and here we just have to to include our file code address so we can check the transaction when you send this we just ask you to to send a transaction of this 12 icon for example to our custodian address so we can check it like for the on graph function it's the same but in the reverse path of course there we just ask for your for your file coin address to receive your your fico once we burn the rapid fire so don't twist the road and then we we did this a little demo about uh a wallet when you where you can like create through powergate a quick uh address to to receive and get like your your balance right so you can get the balance of your account and you also can send this is a very beginning approach of including a token here and everything that is maybe not so recommended but with this um approach you can actually send file coins to to any wallet that you that you want once you have your your token from your powergate instance okay so we continue doing the research on the back end because we currently we don't have like a really clear way to read all the transactions in the file in blockchain so we can actually intercept that transaction from my user and mint the graphic file on the tokens so so yeah we we were like um discussing about that like if we could just check the balance and then drop and wrap but we currently with textile we can see like the transaction so we are we will play a bit with lotus to to see if we can have this working by next week yeah i think you should be able to so i think uh with powergate uh that's just wrapping lotus so you should be able to get the lotus rpc endpoint as well and so you can go through like the lotus api and see what what's useful there you might find a bunch of methods that might be might be good um definitely ask questions on slack if if you kind of are having trouble because uh a whole bunch of folks can can help you find exactly like the right way to get the transactions yeah sure thanks will do yeah that looks really cool and the app like looks uh looks looks good thank you thank you just a question so are you guys who controls the mint funk the erc minting on uh great thank you very much great question so yeah so i took care of the smart contract uh just uh act on uh opens up a preset so you with the um the preset like with the open separate 3.1 3.1 3.0 you have uh the possibility to leverage on access control like a new way of managing access so the mean turn you um in the contract you can add and remove a minter so for the demo we just add um like a minter that is on the back end so once we receive the transaction uh with the file coin on the custodian wallet we can and and and and then uh uh to um rob the the the user can can burn and then we can send it and then we will send him uh the fico how how manual is the the mint process so you get something deposited on file coin and then how do you read it how's this information being transferred is it just you guys uh reading some logs and then you you go and do your mint christmas exactly once we are able to to read the transaction and coming from our student wallet from your wallet when you want to grab we through with three yes we call the main function on our smart contract with a given role that our address is capable of yeah i guess the question from china was like are you doing that manually or is that happening automatically like when the transaction comes in the code reads it and then issues the mentor automatically yes it's automatically also the reverse path also we we are like hearing for listening for the event in the smart contract so we are sure that that the token has been born and we can return the files on that can read the file coin address and can send emit an event for to facilitate that cool thanks awesome guys to to uh to andrew's question uh are you thinking of like uh um making this like a like a bigger thing are you thinking of like setting up a proper custodial service uh for for a lot of popular questions the original idea was like a new custodial approach on like by leveraging file coin smart contract but that's like definitely after the diagonal we want to go like go develop further towards that direction to have like a new custodial fully decentralized debt where you can lock fi coin in a contract and then you can automatically get from it here so like something something like that would be great well whatever the goal is like to get robbed fight coin as a collateral and make it out i think that would be the best yeah i think that's i think that's awesome and you should feel totally fine during doing a crossover approach until until you get used to user driving contracts we were also playing with payment channels but since they are like peer-to-peer we don't have a way to actually returning ficons to anyone that wants to burn a rapid fire con that's another line of investigation yeah i mean yeah if you could go ahead i was gonna say if you if you um if you have like a very specific and precise like contract for what's missing from file coin like what would be the contract written in falcon that would allow the the non-custodial approach definitely consider that like uh i think that uh my impression is that is a contract like that is likely small enough that it would make it it could make its way into the platforming core before a full vm like a full evm implementation would that would be great um i was just going to say how do you handle what what's your price oracle for when somebody actually deposits it or is it a one to one one one one one okay like a stable coin right so the value needs to be the same so uh like the the token you locked are the token um like the the wrapped file coin ethereum so once you unwrap you burn and then when you drop you you mint yeah that was a silly question on my part no because you're too confused no we know it's a good question because at the beginning we were like discussing about it but yeah it's a stable coin yes and actually there are other services that that charge you like uh one percent or up to five percent just to wrap something um yeah definitely there's there's all these long-term thoughts playing out in my head so if you guys do uh try and pursue this bigger um i could definitely see like for for wbtc this is like it's it's custodial so it's you really have to build up your trust in your brand um like they have bitco which is a really old custodian um and i think uh coinless is involved so it's like these big names so definitely this would be a very big branding project and uh i don't know it's very interesting just to imagine what what this could be because i could see there being demand for it yeah we hope to develop it further and and like to reach a new custodial approach that would be great cool thank you thanks guys thanks next up is padlock cool um cool i'm gonna shave my screen okay cool yeah so we're padlock uh we're making a um we're making web3 decentralized content um monetization tool uh for contact creators content creators with interoperability with um ethereum so we're coming at this from us from a lot of different angles i'm not quite sure yet which one to to position ourselves at but you know some of them um of the angles are about um you know like digital rights management's a tool to prevent copying of content um you know this could be an access control solution built on secret network um it could be definitely a key management tool um because basically you know like this can be seen as like a new approach to using a smart contract capabilities for key management and of course um you know monetize you know like with the end goal of actually monetizing our content on wave 3. so um so basically what's our problem um is that you know we can see that there's no way or little ways to monetize content in a trustless way in web 3 you know so for instance if i've got content and um the only way i can monetize it is by encrypting it and saying that i you know i promise if you give me tendai i'll share the the like the key with you so that you can have access um you know there's not like a like a like a foolproof way to do this yet if we go off chain there's a trust element how do you make sure that it gets shared um so basically this is an access control problem and it's often addressed by proxy re in encryption so our opportunity is that padlock with the secret network can be a trustless content modernization tool on web 3 using ipfs and ethereum and the second secret network the privacy preserving features of the secret network is a key part of this um especially in in a role to be playing um hosting content on a decentralized web so so so for the people who it's for we know we want to sort of replicate web 2.0 versions of content platforms because that's what users have found to be familiar and have come to value in in their lives both creators and end users or buyers and of course the aspect of privacy is very is a value point for both creators and users who seek to host content as well as buy access um well for those end users who who like to buy their content online and so we do so we do realize that this that this that this idea this tool can be for content creators and people who want to buy encrypted content for exclusive rights um especially if they're ones who believe that all content should be encrypted and they're against most on you know mainstream platforms already and they're willing to pay for you know content that's relevant um but also the creators you know they want to be able to release content quite regularly still but they don't necessarily like censorship but they're willing to you know experiment with new things because they want their audience to find their content and securely too especially when it comes to monetization so even though we have these two people we do know that um like this tool is going to be leaning more towards content creators because of the use case we've already seen and possible integrations into ready uh the platform audios and that kind of has like the whole setup just um not this monetization aspect so um so how it works is that creators can encrypt anything and sell pr and sell the private keys which unlock that exclusive content the idea is to use secret keys on the secret network which are stored in a privacy preserving secret contract on the network and so for our idea so far we're using secret network for key generation and the secret contract with the idea of inherent encryption that james can go into little bits just now we're using ipfs and filecoin for storage using textile target for deal making the graph for indexing caching ethereum data and data translation fleek for hosting three uh we're we're actually very excited to be using three bucks to manage profiles and we're actually sort of going to be storing some of the secret keys and credentials in there with this idea of mutual key sharing um metamask for the normal wallets theorem use and for creating the nft for accessing the token and then pinata for printing the rpa best creations i.e the content pieces that get uploaded so um so what i did want to demo today i mean this is a very small part of what we actually have been building so far it's just that we've been building a lot of things but we still need to put all the pieces together but basically what i wanted to show today is about the fact that um you know we've built a way that keys can be automatically generated on the secret network um so this is the little demo that i made let me just it has no audio don't worry about that [Music] um so i did get a little bit confused in the beginning so let me just skip a little bit but basically um so james if you're on you can maybe just describe the secret network and the secret keys generation sure secret network is a cosmos sdk based blockchain that enables programmable privacy which means encrypted inputs outputs and state for smart contracts and we achieve this by running a virtual machine named cosmosome which is like a multi-chain smart contracting platform for the cosmos ecosystem we run that inside secure enclaves within our network of of validators um the nodes are equipped with those trusted execution environments which give the encryption capabilities but the crux of it is you're able to to store those keys in a secret contract and enable this trustless monetization yeah so here so here you know um everyone who comes onto the um well well onto the platform um gets an anonymous name and and a secret uh key generated and then so from there you can go into um discover and you're going to create and you can upload your content i mean yeah like um the points the point of this of this app is to abstract a lot of things away because it needs to be um you know used by people who not necessarily very um you know like very clued up on like all the hectic technical stuff that goes on in the background with blockchain and keys and all that kind of stuff so this kind of leads me into the kind of you know ux and ui that we've got and this is sort of what we're looking on feedback for because we also want to know if we should you know look we'll position this as a tool or as a platform and then also yeah if you just want to have a look quickly at like what's that scene that i just showed you what is going to look like um you're going to you're going to sign and get your and get your secret address and then you can either go as anonymous or you can edit your profile you can put in your name and even some information about you some um picture as well and then from there you can go to um filling in well you're drag and dropping your content in putting some identifiers in setting the price currency um and all that kind of stuff especially categories which is used for filtering you can review it before you um padlock it this is the amazing magic button that's going to be made um and then and then and then and then the browse parts this is sort of like the part which is sort of like a platform but there's also to give the idea that this tool can be integrated into a platform already so if the platform already has got some sort of browse and discover feature um you know this buy button is going to trigger the padlock app and um yes yes it would and um yeah that's uh that's it for our demo we we haven't got our technical developers on the call but any questions um we can definitely try and answer and feedback would be great to get this is great this is really cool i think there's a ton of utility for this and and there's a lot of demand for it i think a lot of people are looking for solutions like this and not yet um you know people have been talking a lot about um zero knowledge contingent payments and stuff like that for a long time um but nobody has really like made a full full application um for it that actually you know has a good market marketplace and whatnot so so i think yeah it's really cool to see to see all of the pieces business working thanks i think um you know we're definitely focused on usability and the interoperability is another point of emphasis we wanted to get specific feedback on whether you think a platform is necessary or this can just be like a building block other media publishers can use yeah i mean it's a great question i think it really depends on on i think a lot of those directions will require different amounts of work and different amounts of product and and kind of distribution angles um and so you'll probably have to do something around what other things exist in the in the in the market and in the space and what um how you see those things themselves evolving and and how to position this uh relative to those things so for example uh there's a lot of marketplaces emerging for fully public things like there's a lot of nft uh marketplaces emerging right but all of those are public um uh you could imagine that if people wanted to sell uh private nfts uh they could uh do it if you if you had a widget that where uh padlock could be added to those marketplaces easily and then all they have to do is kind of integrate padlock and now their entire marketplace could could sell these private goods potentially um a different that's totally a different direction to go it's like no you build your own marketplace and you build your own your own uh platform if you want to distribute and sell like probably good you would then have to have to go go this way uh it will definitely be harder because you have to now compete with the marketplaces themselves and so on but you will you would have a larger a larger market opportunity like it really depends on on on on how much you're trying to take on basically yeah i think um you know not to take too much time you know indus whenever but i think we've got this idea of receipts in the form of nfts and that could be replaced with actual content based nfts so when you buy it you you have exclusive access to some other content and there's examples of that but there's a lot of nuance to this and and i'm certainly not the best to delve into the technical details but we really appreciate this opportunity to get your feedback yeah i think the the whole flow is really good like uh i think uh just you present the problem really well you describe the the technical issues and the technical problems and kind of why something hasn't yeah there's a lot of heart problems there and you end up with like a pretty smooth and easy ux um i think probably you know less for them and less for the hackathon but more from like a product perspective long term i think people will have questions around uh teas um and so on because you know like sjx got like wrecked over the last few years and and so on so people kind of give will have questions around that but but i do think that there's a lot of applications on application domains where like that's totally the right the right solution provided some the validators and so on stake some amount of trust where like yes if they they get their stuff broken into um then there's some way of like slashing them or something yeah that's good advice there's definitely trade-offs yeah my impression you get a pragmatic good ux that a lot of that that the content creators are like that's it because i mean think about it right now people are doing things like sub stack where um it's just like a private thing and you know anybody could forward that email that you get right and and everyone could give the content somebody else or copyface or whatever but like and it's working entirely on the honor system but that's okay because there's a there's a special relationship between the content creator and the reader um and that's and that's fine and so here it's just kind of like taking it one step further closer into security but not kind of like all the way and that's maybe actually probably a few steps closer but even if it's not like fully all the way it doesn't matter like you there will be a lot of utility there and it all comes down to ux i think and finding like the right product niche first and then kind of grow like subscribers starting with with like these email newsletters but i could imagine subscribe as a platform broadening yeah well pragmatic is the magic word gotta gotta focus on that actual adoption and usability but yeah um we'll keep working on it for sure yes and all the pieces will come together next week but yeah we have we have all blocked out separately that's awesome yeah speaking of next week so the plan was to have at least one more of these sessions so if you weren't ready for this demo session definitely keep an eye out schedule channel and we'll hopefully have a schedule before the weekly email so um there will be more time to get feedback on your demo get feedback on your video and uh as always anybody can message me send me a link to your demo video ask me for feedback um and anybody on the youth global team they'll be able to follow it to anybody who can help you all right so we've got about uh 22 minutes left of the session uh of the scheduled time so we're gonna keep moving but just before that we're gonna continue with the tradition before i lose more people they have to drop off uh the end of week four so just throw up a four we'll take a screenshot and that will uh that'll be our group photo so throw on your video let's see your faces beautiful hacker faces and hit me with a smile let's see if we can get a full screen a couple more let's see if we can get them hold the pose awesome thank you that's it cool um next up is mobility marketplace um if you're here yeah perfect yeah how's it going um carlos if you want to share sweet uh so yeah everyone uh we're building um mobility marketplace so the idea is really simple uh we're creating a decentralized platform that connects uh connects data creators with data consumers um in our particular case the data creators are micro mobility users so these are people that uh rent an e-bike e-scooter moped through an app and the data consumers would be people interested in these data sets you know data scientists city planners ad agencies so the reason why we're building that is because we want uh people to be credited for the data they create so you know it's one of the common themes in web 3 pay users for their data and it draws some some inspiration from apps like brave uh brave browser so if you guys use it you can get paid for the ads that you are served and uh protocols like ocean protocol so that's like a really big one on ethereum uh they aim to be like a big decentralized marketplace for any kind of data you want but uh we're going a little bit more niche so the tech we're using ipfs ethereum fleet hosting storage textile thread db lid p2p metamask and in bureau so the first thing i'm going to show here i'm going to show my screen real quick uh boom cool uh so the first thing i want to show is what it looks like from the user perspective so i just imagine uh you know full-blown app uh you can rent a scooter uh and you can uh basically just just push data to thread db instance so what we're gonna do here is uh we're gonna show the process where the user would create a profile and the idea is that this profile is stored in a localdb via threaddb and is only shared when they opt into data sharing so once they opt into data sharing into data sharing they're in the ecosystem so they're pushing their private profile along with the trip data that they push so we're demoing right now a user going through a trip so just imagine them going through these gps coordinates and the idea is that once they complete the trip um the trip data is pushed to the data set that's available for purchase by uh via this marketplace and their profile is also pushed alongside it so and uh you know regular regular data set would have ethereum addresses so totally anonymous no one knows who who participated in the trip but if you're a data sharer you also provide your data profile and this could be whatever we want it to be so that was from the mobile side from the web app side we have here the marketplace so um the first thing you see is a collection of data sets so these are the data sets you can think of these as like the completed trips from like any micro mobility source right so here we have data sets from milan and we're just rendering some metadata this is pulling from fleeq storage and santa barbara for example so i just picture once we have a ton of data this would be any kind of data set but from any you know any city any month any region whatever you want uh so two actions advertisers and you know data consumers can take on this app is one purchasing data sets we don't have that functionality yet but it's coming uh but the other big one is to create an advertisement campaign so the aid is that uh if you create a campaign any users that are participating in the program uh are rendered or shown an app an ad post trip and they're actually they're also compensated for seeing the ad kind of the way brain browser works so uh what's happening here is uh we're gonna create a quick uh advertisement campaign so this is gonna push to ethereum i'm gonna call it nike the category is uh let's say fashion and that's only to show relevant ads to users so if the user created a profile with category whatever they want they're only showed those relevant ads so we're going to call it boots 11 because i've created a ton of boots boot ads and let's say one east right so um what's happening here is uh the protocol is notifying us that we can reach 20 users with one ethereum and because this is just you know test net whatever we have zero active users so there's zero users that are actually participating in the program so i can go ahead and pay one each but no one's actually going to see my ad i'm going to upload the asset and this really just uploads to ipfs takes the ipfs hash and includes it in the ethereum record and a little note is mentioned here that any unspent in the campaign will be refunded so like if after 15 days uh my ad wasn't didn't deliver the results that i wanted i can uh close the campaign and get refunded any ethereum that wasn't spent towards the users that actually saw the ads so here i'm gonna hit create uh if all goes well this uh modal will hide and of course it didn't because demos if i have a demo oh boom it's good sweet alright so what happened was uh was created uh the record was created on ethereum ipfs has the data and the hash is available so the next time let's say for example if we're going through this this if we're going through this visual the user starts to trip goes to the trip and then they finish it now if assuming they enabled the campaigns enabled the data sharing feature they're going to be shown an ad and it's going to pull this it's going to first pull the data from ethereum and then it's going to read the asset data from ipfs and then we're also going to log the fact that it was rendered to us um uh right now we're doing it through uh fleet buckets but ideally we want to have an encryption layer so um anyways uh advertiser can then go to this view and just see the details on his active campaign his or her active campaign so we have the you know the details on it being the organization the the the title when it expires so it's 15 days from now and the total budget contributed which is one ethereum so the idea is as users are rendered ads uh they log um to fleek via fleek the impressions and any unspinning theorem here is basically just a result of users that have uh withdrawn their rewards for this particular epic um and the epic is really can be it's arbitrary right it can be after 10 campaigns you can withdraw your rewards after 10 days you can withdraw your rewards something like that and uh yep the functionality here to close the campaign is there but ideally at that point we removed the campaign from the active uh i guess active layer and uh users would no longer see that ad so um you know one thing we don't have here is the encryption layer and obviously we kind of we kind of need that right so like the data sets for example if if i as a as a data consumer want to purchase one of these ideally that data is encrypted and it's not available to me until i've purchased it so that component we haven't um we haven't developed yet but it's in the pipeline so uh that's it for the live demo if you guys have any questions uh if the guys want to chime in at all and go for it but basically it yeah i guess i would just add that this is definitely a project that we're looking to carry on to like after the hackathon um so anything that you do feel like we should add is something that we're actually going to be like working on looks awesome the ux is i think it's really good uh who handles the data inputs what part handles that so we're gonna have uh so in terms of like i guess like what kind of what makes the marketplace tick in terms of how it's getting the data uh we're pushing the threaddb from the mobile app so when users create it um and then we're also uh we're also interacting with the marketplace smart contract to let them know that this user has opted in uh like for demo purposes especially to we're setting that's true uh everyone's going to be opted in and then um as well as ending the trip we're also going to be logging that to threaddb and interacting with the marketplace smart contract uh to let them know that we'd like to receive an ad so if you guys want to have any give any feedback on on this part we actually do gonna need help so if the data is private right obviously the data we want the user to keep it locally but there is there is data that we're going to publish no matter what and that's like the trip data so where the vehicle went you know what places it passed etc metadata on the actual trip that can be public or it can be on our bucket in the protocols bucket you could say but then there's profile data that's going to be local but when it comes to moving data from threaddb to a protocol-owned bucket what would you suggest we use uh so i mean i would just i think carson's on the call so maybe he has some thoughts here too but um i would just subscribe to thread db with some with some uh service type implementation that subscribes to that thread and pulls it into your into whatever target bucket like these things are meant to be kind of chained together into whatever you know structure of network you want and so for example like the go threads implementation is pretty perfect for this if it was subscribing to the same thread you could just take uh you know those uh end ride type uh entries in a threaddb and use that as a signal to then push something to a bucket someplace else that sort of chaining should work pretty well gotcha okay that's good to know and i think what you could do is just have when you're describing kind of this protocol bucket like you can you can think of assigning uh you can still have it how the what could be private and encrypted to the users of the application so everyone is using application and so on um can we'll be able to decrypt that data uh so it's not like fully you know it's not probably private but at least you're kind of hiding all the gps points and so on from like just being moved around uh totally totally publicly um where maybe you're thinking through like uh maybe it's only a subset of parties that need to access to that trip data right so maybe it's like the people that are buying the buying the the this whole trip and then um and then the people that are doing it and then see you you should be able to kind of only share the information between those parties and not not with the entire world gotcha okay cool thanks for the feedback in the interest of time should we move on to the next one you're really cool it's very cool yeah yeah no it's looking great sweet thanks guys all right next up is uh parcel our friends who i think they're awake early for this you were you muted yeah so hi everyone i'm taran we are team parcel so yeah uh like today we want to show what we have built for now so yeah i think bren is on the call as well can you share the screen brent yeah so uh basically uh we are building this uh decentralized crypto payroll so in which any employer can just create an organization in which you can add the employees and basically uh we are building this uh payment streaming and mass payout thing so and then the data part is stored on ipfs and the data hashes should be connected with the smart contract so let's try uh like try creating a new organization yep let's go for so this is basically uh ens what is ens you might need to explain that people yeah so basically uh this is like a ethereum name service so it'll tie it to your ethereum addresses so for resolving let's say you want to send some ease to this address or any token to this address you just don't need to remember the whole uh address you just can type this uh in the metamask or any resolver and you'll get the uh ethereum address with this name so yeah so uh yeah we have signed up for the organization now we can see we have created a smart contract wallet for the organization and you can see that we for now we are just funding this account with five dies so that we can showcase uh can you can you go back on the chrome yeah so yes for now uh i think we are we are just finding it with the five die initially so that it won't be a hassle to run the mass payroll and uh for now and and in the in this just just keep it uh stay here share it for a while yeah so uh and then you can see this current stream so for now the data uh is dummy for now for the streaming part because we're in the process of implementing that uh but but you can see like if somebody has run the stream uh they can clearly see like how much steam is totally being sent and how much has withdrawn and uh how much is being pending and you can see the individual individuals also uh here and uh there is a little section there all uh can you press that button all drop down and the right in the right uh yeah that all all yeah so you have like a different teams here so let's say you have like four or five departments in your company you can easily switch the stream for that right now it's dummy but uh yeah so can you scroll a bit yeah so we have this recent activity so let's say you have paid to some contractor this activity will be stored on ipfs and it can be seen here and you have the upcoming payroll section so for now uh i'll be just uh give a walkthrough for the dashboard and after that we'll uh do some stuff on the dashboard so yeah so uh for the demo thing uh we have already created an organization we have stored some employees and departments already so maybe you can go to this people section yeah so so for now we have created like five employees uh and then it's like a contact thing so whenever you want to add any new employee in your organization you just uh go to ad employee can you go to ad employee yeah so here you can see you can uh like the name address department and salary and currency and maybe like you have some contractor for three months you can just start the joining and ending date and you can submit it and and you'll uh have the data and the ipfs stored in an encrypted form with your ethereum private keys and uh that that hash is being mapped to the smart contact so uh let's uh let's go to this uh let's try to let's try to run the mass uh mass payout thing so let's uh so we have the payroll section here and in which we have already created like five employees so what we are doing is like uh we are doing transaction batching here so that we can save a lot of cash and and any employer can just you know send uh money in just one transaction to see a lot of guests so uh just uh try to uh for now we just gave the salary to one which is not like realistically uh but uh we are using uni swap under the hood so we don't have enough liquidity and that i think we test net so for now it's like one day or one usd so you can clearly see like we have die in our account and uh the employees uh can have like different currencies right so maybe some of your employer wants usdc and someone wants to die so it it will all happen in in single transaction so maybe uh then you can just pay pay yeah keep the fastest fee yeah thanks so yeah it sounds like it will take some time so much faster than a wire yeah uh if we're for waiting if you're waiting can you actually tell people what streams in this case mean for an ethereum application so uh basically like while it's conforming so we have also this button streaming so let's say at the same time uh you want to run the pay you don't want to run the payroll you just want to stream the money so let's say you uh want to stream uh let's say uh one die for each individual uh for the whole month so it will calculate uh the amount of die in one second so we just start the stream for the employee and uh it will get like any time the employer can receive till the till your stream is on so yeah we are working on the ui part but under the hood it is working like this so i think the transaction is confirmed and you can see like a single transaction uh you have just transferred like one die to each addresses and and yeah let's let's go back to the uh demo and and uh we have this accounting section it's i think it's not ready yet but i can explain like what does it mean so basically a lot of companies we are talking to really want you know uh that that csv export thing so that they can show this to uh their account managers uh which can help them in taxation right so we are building this out uh so that we are also talking with like many companies also which can help uh us with the accounting stuff so it will be easy for them to you know uh showcase that to account so our goal is our goal is to you know build a uh encrypted service so that we as a company cannot really see anything and and the data should be available uh every time so we shouldn't be the single point of failure and if let's say government wants to you know see your taxes and say like where is your money going on you can just uh showcase like because the data is being decrypted locally so you can go to the document section okay yeah so here we have uh this document section in which you can uh really your confidential data or maybe some uh important stuff for your organization uh you don't want to you know share it with any company and and you can store it on ipfs in an encrypted form and uh till the time you have access for your ethereum privacy you can just get this data from ibfss so basically yeah just submit it and you can show the logs also so basically uh why it is doing a transaction basically uh when you encrypt the data using uh ethereum private key it will send it to ipfs and after calculating the ipfs hash it is submitting the transaction uh to ethereum smart contract so that when you want to fetch the data it can just you know know the index that this index is belong to document section and after that you can get the data from ipfs so uh and then one more thing we are doing here is uh one more thing we are doing here is uh basically ipss and and we don't want like every single thing should be decentralized so smart contract should directly communicate uh with the ipfs thing so any anytime you want to interact with the stuff uh you're not dependent on us right so yeah this this document is like being retrieved and and yeah that's pretty much it and one more thing is uh uh rather than saving uh multiple document hashes on the smart contract we're just keeping the master hash and that master hash is tied up to various hashes uh so that uh so that we just you know need to do only uh one transaction in ethereum so yeah and like a lot of stuff uh has been pending now uh like streaming part is left i think the the meta transaction is left because we don't want our users to you know pay for these small actions and we can bear that fee like adding a document or maybe some small task so yeah we need to integrate uh meta transactions and streaming but yeah i think that's that's it yeah so i would like would like to add on that and and i think uh considering uh how high the gas fees are currently on ethereum and how much longer does it take for to confirm the transaction so we're exploring layer two solutions uh right now so i think uh but our product i think layer two makes a lot of sense because essentially what we're doing is value transfers among among people and i think layer 2 fits in nicely for us so we're kind of exploring that that venue also um yeah and also just to add uh here that at this point of time which is storing the documents but we are looking to uh expand our horizon into hr management software services so that could include like uh maintaining health records maintaining w9s or something like that for the for the organization so we're also looking to broaden our horizon horizon uh right now yeah awesome guys this looks really great um just just to mention for anybody who's watching on the call and is being blown away like i am um just the the the parcel team did work on this before so they're like continuing it as a continuation of a previous hackathon project which is totally fine but don't feel intimidated if if you're looking at this and you're you know blown away by how did they get this so far um in in the time and mine looks like this don't worry about that people started at different levels i'm sure they're going to mention it in their submission that some of this was pre-existing work which is totally fine just make sure to call that out in the video and your hack submission but you guys it's it's looking so awesome since when i last saw it at the end of hack money so i'm glad you've continued working on it big thumbs up from me yeah this is awesome it's really cool and you know just so you know like i've wanted this for a long time like we uh so pl we i explore this a long time ago like trying to find anybody who would do like bitcoin or ethereum payments uh this is even before ethereum was live um like nobody was was there was like i think one or two companies like trying to do it but um it's really awesome to see it like with fully integrated with like all the different different tokens and being able to have all the files as well um and so on like i think this is this is great thank you yeah thank wait i guess one question is when can we start using it uh yeah we are also a part of bitcoin kernel so anyhow we need to release something around uh like i think in next uh two months so maybe like we need to audit the contracts also so yeah maybe in next two three months it will be like yeah this is super cool one of my favorite parts of streaming is and maybe this is worth like i'm sensitive to like over explaining something in your pitch but this is something that is worth i think diving into is streaming gives people access to a real-time balance of their work so if i'm paid um a thousand dollars a month for some task i can withdraw at any point during the month my my just payment which is amazing so you don't have to worry so for a lot of like people that work in precarious labor they can access this immediately they don't have to worry about um going and getting payday loans um i think this is an amazing product streaming is like the next level of i think where payments should go like you shouldn't have to submit an invoice and then wait you know the industry standard of 60 to 90 days yeah yeah yeah cool yeah so maybe touch on that in your in your demo yeah for sure like right now like streaming is not there so we thought like to explain like other things but yeah for sure the demo streaming will be a main main part because in in hack money we just uh like anubhav only just built this mass payout thing other than that like uh everything is built from scratch here so uh like the main thing like uh connecting it to ipfs and 5.99 all that stuff is from the screen yeah this is really cool do you see so it's only ipfs files do you see a need for like file coin integration in the future or will people keep their own files around do you think python integration like i'm thinking from day one so basically what we really think is uh you know 51 is really great for the cold storage stuff so uh you have like data availability always on ipfs and we are running like our powergate mode under the hood and so that we can make it available uh if there is like no persistence of data in ipfs so like we are just thinking to use filecoin for that particular purpose yeah would it just be another stream to miners or something yeah yeah that that is something like more cooler thing yeah there's a whole bunch of interesting use cases of the streaming idea with uh with other other kinds of like data referability and so on uh but yeah this payroll stuff is really really cool um all right let's keep it moving thanks parcel that was amazing yeah next up is ipfs fps hey guys can you hear me yeah cool i'll uh i have a video so i'll show you my screen uh sure computer sound all right all right can you guys see it all right there we go i don't think we can hear it we can't hear it no we can't hear it so you might need to share uh computer sound how about let me do it one more time um maybe this sorry this is like the first time i'm doing this that's good i'm sure that like the jerk is going to be so worth it so don't worry all right uh did you guys hear it the first time because i had headphones on your phone's well uh why don't you try it again if that doesn't work somebody else could play it for you we were able to carry it the second time second time people all right what about now yeah no um all right i'm just gonna take this off and then how about now what if i told you yeah there is an app to make this the assistant and wait for the boss to pitch what if i told you there is a powerpoint on the market just kidding we have a product called ipfs fps which stands for interplanetary file system first person shooter the unofficial decentralized game that can be played on earth and or mars we're working on it background story we wanted a game on ipfs not just any game we wanted a game with 3d graphics cross-platform compatibility and a physics engine dapps nowadays are quite simple they have an input box a button and maybe a smart contract we did more research and found unity so the question now is is it possible to have unity in ipfs we searched online for examples and or documentation but we couldn't find any so we spent the next two weeks in hackathon to see if it's possible long story short it worked and here's the demo here's a demo of our site just visit ipfs.fps.zil if you don't have a chrome extension then add in that sh here's the homepage if you want to start playing you can walk over here here's the high level we also made a game trailer for you guys so check it out [Music] [Music] [Music] [Music] oh that was that was all best video ever so do you want to tell us a little bit more about like the technical aspects or how you guys actually built it yeah sure uh yeah quick story if you go on the site there's a click there's a button you can click on that has everything listed from a to z but in short uh you create the game with unity export it out there's certain configurations you have to set put it on github connect fleek to it so it does the icd part and then have unstoppable domains in case in this case it's ipfsfps.zil connected to that and then pinata for long-term storage like meta tags and stuff it's all documented here i'll send it to you guys yeah definitely for i don't know how much of that you were planning to put in your demo video but you might benefit from having two separate videos like your fun mimi sunglasses video or use only a few parts of that and then have another one that's more focused on you know walking through the game mechanics talking about which sponsors you integrated or how you actually built it but i think two would be good because we don't want to lose that mean content cool it's really cool i did a play through the other day and uh yeah i think it's pretty yeah got it to be pretty fun have you considered doing multiplayer stuff or like uh i don't know if you've gotten that far yeah so i'll be honest with you i just learned this unity like four weeks ago so this is brand new to me uh so so after we after we demo this we had a lot of feedback one of them being multiplayer other being having a high score so there's tons of stuff we can build on top of it like some sort of payment channel um stuff like that so there's a lot of room for improvement i think this project now since everything is new for us is is kind of like the hello world of gaming for ipfs yeah i think that's a really cool idea and it can be pretty useful to a lot of other folks like if you have this plus the code and the blog post that you're writing i think that would be very useful to other other folks if you think of these other feature sets like multiplayer or you go from like an fps into some other kind of game like uh i don't know like a tabletop or uh or like a 2d high sidescroller or something like all those kinds of tutorials will be very useful like if you're exploring the space as you go make tutorials because that'll be super super useful for a lot of other folks yeah if there's a there's if there's enough uh support then we'll probably extend this out and have more ideas do people win real file coin what's that the the rewards in-game is it just no as of right now it's just uh the token there's no real file coin that could be another uh feature as well there's so many so many different ideas yeah while you're waiting for um filecoin smart contracts you could use the wrapped filecoin on ethereum and do like you know pool prizes all sorts of stuff that'd be amazing i think you guys have to collab yeah that was cool anything else cool thanks guys yes it was really cool and really really fun demo and great job making it like a fun game is not actually not trivial to to make an fps it's actually enjoyable yeah we wanted this project to be to be fun we had a lot of you know good times doing this all right last but not least we've got team fractal if you're still with us still yeah you lost this channel is very that places are focused on providing insights into both ethereum erc20 and d5 protocol transactions the tool is really privacy focused with no user data being stored all data is instead encrypted and stored within rpfs uh data that only the user themselves then unlock so fractal solves the problem of understanding the flow of funds between your address and the tool does this by aggregating transactions of those addresses and transforming their basic on-chain transactions into enriched insights so users of the tool range from the average ethereum user um to node providers and further to large scale new funds sort of built throughout the tacophone um this is just the main landing page apparently the actual app still in local development there's two sides to the app if you were to use the app previously you would um you can store your ip uh ipfs content hash and return to the dashboard you previously saw which provides all the insights into what's going on so going through what we have we're new to the app um actually i'll show the flow of the pretty sad for us but in this message so yeah as describing before you simply enter the hash and we just nicely rendered the content for you but we are new to the app so um you can either type in uh individual addresses here and add more as you go or since we're going through quick let's log in with metamask user address roll through select any d5 protocols currently we have compound integrated we're looking to uh finalize with three more by the end of the account just to really provide insights of what's actually happening there whether it's interest earned or um so that users can know just specific analytics on what's happening with the transactions moving forward you select a date range so you don't have to choose an entire period often you could you could choose a year for taxing purposes or you could simply choose last month we'll fetch those transactions provide a clear cost of that with a set formula since this is gone yep rolling on use metamask to confirm the transaction um so what so yeah so basically what we are really focusing on as well as the default time um because there's not much out there to show analytics and what the protocols are doing for you um basically what's happening now we're generating that dashboard with that using uh bigquery to pull through the entire dataset and hopefully come to a dashboard in the same time obviously in your video you would clip all this out yeah yeah um i think so this is the first time i've really showed anyone basically just being focused on development um definitely going to do one more of these sessions but it was mainly the first field to get you guys advice on how you think we should show this video and um yeah any any additional points there this is also quite basic uh at the moment there's a lot of analytics coming in um they're not haven't been available for this video but essentially there'll be more protocol analytics uh you'll get your ethernet um both usd and e um and then you can see monthly breakdowns of your transactions with uh categories um obviously a future implementation which would add graphs and statistics so you can see the interest earned and stuff like that um but for now it's the basic functionality showing um by the end of the hackathon there'll be a lot more um essentially at the end you can also download your csv and take that to your accounts or further on but yeah this is the basic product at the moment um let us know what you think critique and uh how the house do you guys think we can further improve this video moving forward probably a bit more structured but yeah i think it's a i think it's a really cool really cool application i think the ui you access is getting really good um yeah i think that in terms of the video in the demo yeah maybe reducing some of the wait times and so on can be can be useful um but yeah i think like a really good ui uh how about the app itself do you guys see does it really interest you yeah i think all this kind of accounting stuff is highly needed for for all of the a ton of organizations that are starting to use crypto very directly um including paying people and whatnot um will need all all of this kind of accounting tooling and so on so i think uh definitely definitely useful the market will be limited though right like for a while until a lot more organizations do it but uh but uh if you're okay with that though then i think a number of folks will rule out yeah well the reason being um trying not to just limit ourselves to the organizations uh since that pricing scaling scale so uh it goes from the general hearing consumer all the way to the larger scale something that might be useful in that case then if you're if you're kind of thinking about individuals heavily that is um uh i think um a big part of why people do a lot of accounting is just uh all the taxes stuff so figuring out what like the right exports for all the different countries might be a might be a valuable valuable thing right because there are some tools that do it for specific countries but like maybe they're doing for one or two countries and like that said yeah awesome any other nuts i think it looks good um uh you said you're going to keep working on it for the next week or so so i'm excited over the next few days awesome thank you all right yes good luck um i think that's that's all the teams we've been a bit over time so thanks to juan for sticking around and giving this feedback um like i said we will plan to have one more of these sessions next week if you weren't able to put something together for this session definitely make sure to check it out then um as always send me your videos i'll give you feedback um or any uh critiques that you might need i'm happy to help there um we can wrap there thank you everybody for showing up end of week four week five's the last one we'll see you next week 