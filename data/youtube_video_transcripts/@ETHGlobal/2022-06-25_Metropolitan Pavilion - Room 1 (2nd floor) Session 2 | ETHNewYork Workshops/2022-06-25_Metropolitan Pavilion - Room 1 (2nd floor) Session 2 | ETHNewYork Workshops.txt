all right gm i guess good night but it's gm so super excited uh to show you guys the new version of the world id as a gay this is the very first time we're bringing orbs to the us is the first time world id is available on mainnet it's the first time for a bunch of things so we're super super excited to share this with you i will give a short intro then miguel will give you a full demo of how to integrate world id into your own apps so that you can play around it for the weekend before that i want to give just a bit of background on why we're doing this and like how we got here in the first place and so a world where we think crypto is really awesome but it has two problems first of all very very few people have actually tried it and then all of the value that's being generated by cryptocurrencies around the world and blockchains is being hoarded by a bunch of people like you and i it's like early adopters or insiders and we think that sucks and so a few years ago we had this crazy thought of what would have happened if bitcoin had launched by giving one bitcoin to every person who was alive right there's a bunch of really cool things that could have happened and so we said what the heck let's just give it a shot let's give a token to everyone in the world and see what happens and now in doing this we run into a problem that many of you have probably ran into your projects which is how do you make sure people don't abuse it right in our case it was how do we make sure if you're giving away a free token the people don't double dip right that they only claim it once and so we started looking into it and it turns out this is a very common problem this is known as civil attacks and it's basically this idea that online you cannot distinguish whether 20 accounts are 20 different people or one person that has 20 accounts right and so we started doing a lot of thinking of how to solve this and there was three basic requirements of how we wanted to solve this whatever we did have to respect privacy of people it also had to be inclusive we were trying to do something for the world which meant it had to work in the entire world and then lastly had to be scalable right we didn't want to do this experiment on a scale of 10 000 people we wanted to have a billion people try this so we went through a bunch of things i'm not going to dive in detail we have another workshop tomorrow for this but basically we thought about email and phone verification this doesn't work right it's super easy to get another one we thought about kyc which is verifying official ids this is super expensive most of the world doesn't actually have an id or apis to verify that id and it's not very private at all right then we run into web of trust this idea of people endorsing each other so that you essentially build a model that allows you to like be sure that people are unique and we actually really like this the problem with web of trust is that you need a very large initial set of users that you can really trust and so we actually think this is how we are going to scale world coin from 1 billion users to 8 billion people but you still have the problem of how do you get that first billion people that you can trust to build that web of trust so that you're not building a house of cards and so after a bunch of things we landed on biometrics then for a bunch of reasons that i'm also not going to get into we went through phases and fingerprints we landed on we have to use irises and then when you decide that you want to do okay biometrics and irises your first thing that you say is okay let me use face id or let me use my iphone but it turns out that phone sensors just don't have the right enough resolution to distinguish between one in 10 billion people right and they also cannot operate in untrusted environments then we said okay let's look at something like clear right or like off-the-shelf iris scanners and this has the same problem right and the reason for this is all of these devices do one-to-one comparisons right you're saying hey i'm tiago sada and so let compare me to the previous biometrics of thiago sada right and so that is fairly easy to do we have a different problem which is hey i'm a person that has never done something before which means we have to compare your biometrics with everyone else who has come before you and so something like face id can only distinguish between 1 in 10 million people which means that after 5 million people there's a 50 chance that when you try it it gives you it tells you no you've already done this even if you haven't and so for what we were building we wanted to be able to distinguish between a billion people and so we just realized we have to build custom hardware there's nothing that does this it's like now do we do it or not and so we did do it we spent two years doing r d there's been about five generations of the orb hardware and this little beauty came out right now i'm going to leave you in suspense here because we have a full workshop tomorrow for 45 minutes we'll actually go more in depth into why we built the orb and how exactly it works we will go piece by piece of the hardware it's we're going to get very nitty-gritty uh it's really cool engineering and uh so that's tomorrow here at 4pm but in general the orb those three things right first of all it looks at your face and make sure that you're real that you're not trying to cheat so it does with a bunch of sensors ir it creates a 3d mapping of your face make sure that you're not wearing prosthetics things like that secondly it generates a code from your iris and that code leaves the device and is compared against every other code that has ever been successfully verified and if it's unique the orb then triggers a verification it basically approves your your up some private keys on your phone that we call world id they're completely separate from your wallet completely separate from your biometrics and it marks that as verified and so again we will talk about this tomorrow and so we really like this because it means we don't need to take pictures of you in your in the app we don't need selfies we don't need your name we don't need your contact info we don't need to do kyc uh but biometrics is like pretty sensitive and so we wanted even more privacy and so then we heard about this really cool new technology called serial knowledge proofs there is a blog post on our website if you search privacy per se we improve personhood protocol where we it's the pppopp where you can see how exactly this works but basically we married the biometrics that we're already doing on device with zero knowledge pros to make this really really private system that really nothing out there has today and uh like i said the breakdown of this is like pretty complex but it's it's on our website it's a really really cool system and so with that in hand we actually went out to the world we started trying this out uh trying to give people the world coin the world going token and signing up giving them the world id and in the we've been to 25 countries or something more than this around the world everything from norway to mexico where i'm from to chile and kenya and indonesia and india and portugal we've we've had very few orbs because up until now we had to make orbs in 11 so we only had 25 and we would like shift them around uh right now we are finally producing orbs in a factory just last month we made 250 orbs and then now we're going to be making a couple hundred orbs every month which is insane because with just 25 we actually signed up over 600 000 people uh in less than a year and so now with hundreds of orbs and thousands of hours very soon the scale of this is going to get pretty ridiculous and so all of this was great we recently announced we're open sourcing all of this part of this is already open source part of this we're in the process and we started seeing the community we now have a discord we're starting to build in public we're setting really the foundations for decentralization uh there are some parts of worldcoin that will be decentralized before others obviously we do hardware but the end goal is to have everything decentralized but there was one question we kept getting from people like you which is all of you like your project is like pretty cute but like how can i reduce your verification on my project right because i don't really care about your token i don't really care about whatever fluffy thing you want to do but like i want to issue loans or i want to do another airdrop and you've already solved civil resistance and honestly for a while we resisted doing this because uh because of privacy like we know how we treat privacy we know we use ckp's and all these things and it's just makes us very nervous to share this sdk with other people but eventually like it's just a fact that you can build really cool stuff if you can prevent civil attacks and so let's say okay let's let's actually do some thinking and so about three months ago we said okay how can we open up an sdk for people to start playing with this and with one condition of persevering privacy it will cost and so for us that meant a couple of things a lot of times people ask us hey can you just issue like a social security number that's like your crypto ssn and you can just like people have one of those right and we don't want to do that we don't like the idea of people even able to track you across crypto another suggestion that we got is well can you just like whitelist the wallet right can you tell me like which wallets have been seen by an orb and i can just like query that and again we don't like that we like the idea of people being able to use many identities be pseudonymous and we think that humanity should be separate from your identities right and so the solution was actually really obvious is just use the same zero knowledge proofs that we use on our own right and so with these we created something called world id uh what you're going to see today is the alpha version of that we're super super excited to share it with you and this is very simple it's a protocol that allows you to anonymously verify that someone is a real person and is performing an action only once right so for example for world coin people prove us with a zero knowledge proof like hey i'm a real person and i've never claimed worldcoin before now with the sdk with world id going forward peop developers can create any other actions right and so let's say that you're an artist that you want to do an nft that each person can claim only once for free now that artist can verify hey like this person is a real human and they've never claimed this nft before the the actions can be anything that is on chain anything that can be triggered by a web api it's very very cool stuff now while all of the things behind it are super complex we actually want to make it both really easy for developers and for users and so for developers all you need to do is add like two lines of code and for users and starting today there's a very a very nice developer portal that actually walks you through the process of implementing these choosing whether you're doing something on chain or you're triggering something with an api and how to integrate the widget and all of these things and you can manage different actions so as for example us as world coin we have a bunch of different actions that people prove in the app um that they are unique and that they haven't done before and so you can manage all of those things and then for users what this looks like is very similar to a captcha it's like a captcha that when you click it it either takes you to the app if you're on mobile or it shows you a qr code that allows you to generate that serial knowledge proof and so this is what it looks like let's say that someone wants to do an airdrop and they instead of having just a claim button they would now have like this captcha thing either and you can customize the style people will click on it and they can get a qr code they scan it with the world coin app they're all gonna ask them like hey this developer wants to verify that you haven't done this before in this case receiving an initial airdrop so you verify that we submit the ckp and then that captcha that button is enabled right and so rather than telling you more about this i will just let miguel show you how this works live and then i'll be back in a bit oops [Music] okay if i could open anything up there we go okay so astiego said we've made this really amazing program and we trailed that a little bit on the last if global hackathon hack money which was an online hackathon and we got a lot of really feedback from developers about how it was great but there were a bunch of things that could be improved about understanding how it works make it easier to people to get started and so since then we like went and did exactly that um we have this developer documentation with all of the introductions and now instead of having to install five different things to get started we have this really cool tech portal so for example we have we have some examples here but let's say that i just want to create a new action and i'm going to say just like testing anyways um and this is going to be for staging one of the really cool things that we've implemented is instead of just like rolling your own smart contracts and that's it and that's all you have to do we have a cloud version now where all the proofs are still verified on chain but we just provide you an api so you can implement your front end you can get all of the details from the widget and then you just send that to our api we take your verification we take care of everything and we even have like a kiosk mode that i will demo in a second that is the easiest way to do well id in any way where we just have a page it shows the qr code people scan it it verifies people and that's it you just like i know if you're in person give them some socks or you give them something you can also redirect to a url so for all of the webshop people or other people that don't really want to get into smart contracts right now this is great but what we what we're really here for i think is what is insane i'm verifying all of these things on sane and so oh well so we've made also this simulator while the connection comes back which allows you to test all of these the issue with proof of personhood is that it's really freaking hard to test because you try it once and then you cannot try it again if it works properly and so this acts kind of like a faucet or a temporary test net where instead of going to an ordinary time and having to just like hunt for humans around the conference to try your thing you can just add identities to a test network and then deploy your smart contracts to a test net and verify with this so this was a small pause and this would be kind of like going through an orb um and it's now verified i will go back to where it was before um so as we mentioned we have the api in javascript we get first you have to integrate javascript with yet this works both on saying and with the api you just other npm packets throw in a div anywhere where you want the captcha to appear and then called wallet.init with the id and an action id that you get from the portal then you call enable and that will get you the result afterwards you can either verify the proof with the api or you can send it to a smart contract which will take care of verifying so what how that looks like is here i have the code for this app that i showed the whole airdrop example where you just connect your wallet i'm going to pull in my rainbow wallet here to connect and this would be what which wallet receives the earth the really cool thing about proof of personhood is that i can just like receive the airdrop with different qualities each time or maybe without even different identities and no one will be able to track me between those usages or even if i use the same identity all the time that since everything is like self-contained quality leaks no information about you not even that you were the same person that did these three things so then afterwards um it shows up the i'm doing this once check i would scan this qraco with my phone for demonstration purposes and because again poor personhood testing is really hard i can just copy this qr code and paste it on the simulator that i mentioned before paste it here that will show me the same prompt that would show up in the app and i can just click verify and then when i go back verification confirmed and then i would just click claim which should pop up a transaction in my wallet to actually submit a transaction behind the scenes what is happening is we're just generating the proof [Music] so that it's just like in react we have a hook we run the widget we set the proof to a variable here we have enough examples and code and all the code that i'm showing is open source so you'll be able to copy and paste this if you want to and then afterwards you just call the contract that you want in this case we have called it a contract with the parameters that you want to pass for example the wallet address that will receive the airdrop and then these three items from the wallet the proof that you can just drop in there and the contract will take care of verifying everything how that looks is you you first have to check that the user hasn't done it before you just have a mapping for newly fired houses on the contract that is like a number to a boolean you then call the verify proof function on our contract passing both the parameters that the user provided to make sure that someone cannot like intercept this transact transaction and inject their own wallet to receive the tokens and then also the action id that you get from the dashboard if the proof isn't successful because the user has not been verified because they have already done this or for any other options this will revert otherwise this goes through we mark the user as done and we can do literally anything that we want and this example this what we're doing here is for a project that we made for this hackathon called pet orbs where you can adopt one of the little flashes that we made one of these guys are kind of like the kids for the orb a little bit less threatening um and you just would go in connect your wallet and switch to switch about the polygon you get to name the arm and then again you say i'm doing this once and in this case since this is in production i'm going to grab my wallcoin app and scan this up and it will show me the same ui that we saw before with the display it wants to verify although a little bit slower because wi-fi um and then the key here is i have already verified here because i already have my better orb at home so what's going to happen if it loads otherwise we can just all pretend it did um is it will actually succeed here we're still working on ways to verify show feedback to user before they submit the transaction that would probably come up in the next release hopefully but when you i click the adobe button which shows up after this it would throw an error because the transaction reports because the proof has not been verified i'm going to try this one last time and otherwise we'll just like move on um in the meantime as i mentioned we have this developer pro this documentation this goes really in-depth into like all of the different options that the um working widgets has how to specify a signal which is a way of encoding all of these parameters to make sure that no one interested the transaction also how to use this with non-crypto parades with made a bunch of demos for example we have a discord bot that can verify that you are a unique human that has never joined the survey before and gave you a special role so you can see some channels the roadmap how to do more custom integrations and we also have a bunch of examples like the hard drive that i described the discord bot the code is also here hyperdrop which is a parade where you would send contracts to a smart token to a smart contract that then splits in between all humans on earth which is really cool and hopefully whatever you guys build on the hackathon you can just like pr to show also here for other people we also have the api again for more web to things and it doesn't seem like this is going to want to load again i blame the wi-fi um yeah that's pretty much everything that we've made uh we have this dev portal we have the simulator we have the docs it's really easy to create all of the actions here um you can also customize them and even like verify them so the application shows a fancy logo and a check to make sure that no one is pretending to be you and yeah hope that you really enjoy dealing with this all right amazing so just to all these loads just to what miguel said is we're super excited about what the developer portal enables and how it can make the development experience a lot easier the example that you saw today is if you want to execute an action on chain right if you want world id to trigger something uh unchained now we've got a lot of requests and we've actually even used it ourselves for the discord but hey like maybe i'm a crypto project but for whatever reason i just need an api call on a web server and that's fine right that's what cloud actions are for everything is still verified and chain we just handle all that complexity for you so no need to be deploying smart contracts or things like that so that is the world id flow basically a world id visits an orb just like this one to get the world id you as a developer can integrate the world id widget or one of the other options that we have for world id through the developer portal then the user interacts with that they have to approve the verification through the app that generates a zero knowledge proof it submits it and then you as a developer execute whatever action you're trying to do so this is super flexible as you can imagine we've seen people do this do projects for like polls for this for voting whether it's one person one vote or quadratic voting or conviction voting um there's a bunch of fundraising examples and sold down tokens and there's a bunch a bunch of things you can build with this and you probably have better ideas than us starting today for the first time on polygon you can actually use this for real in the past when we shared a sneak peek of this you could only use the simulator and no real people could use this there was no developer portal no no cloud actions and so starting today all of this stuff is live on polygon um the cloud the on-chain actions only work on polygon the web actions you don't really care about like we will verify the actions for you on polygon but for you it doesn't really matter your app can be wherever you want it and if you see an orb around the conference you can actually download the app yourself get your world id and you can test things yourself so before wrapping up we want to give a huge shout out to a bunch of open source projects that we are building this on top of mainly semaphore all of the zero knowledge proof that you see is an open source product called semaphore super super cool the the world going airdrop which is not available in the us but we still work a lot with this team is a thing called hubble it's an l2 that came out of the ethereum foundation it's an optimistic roll-up so we're huge fans of them and lastly wallet connect you might not have realized but the way world id works is actually the connection between the wallet the user's app and your widget is actually happening with wallet connect even if it has nothing to do with your wallet we just use all of their websockets and things like that so we're super super grateful for that if you have any questions we are on discord both on the official hackathon one and on the world going discord we can just chat one on one or you can just look for us and and so just to summarize world id is a new protocol it allows you to build several assistants into your app within 10 minutes it's super private it's self custodial which we're very excited about and it's open source already today and uh more than anything is very flexible right you can use it basically for anything you can imagine with that again you can get your world id today we were having some wi-fi issues at the booth so you might see us walking around randomly with the orbs just stop us or if you see us like somewhere just like hey i want my world id for example hike here has a world id an orb and we can help you set it up in like two minutes we do have a track on the hackathon with a bunch of prices i'm sure we already look at them so i won't go over them there's first place second third place and also a pool price and in general we are some alpha league here we are about to launch a grants program so any anyone that's hacking on these will probably be fast tracked on those community grounds that we will launch during the summer last two things if you are curious about the orb why we made the orb you hate the orb you love the orb uh you have a weird attraction to the orb tomorrow is the place is the day for you we're going to for 45 minutes dive super in depth into everything or related here in this building in some room at 4 pm and then also if you really like what we're doing we're hiring across the board whether it's for product design a bunch of engineering like pretty much if you can imagine it we're hiring for it and so please come and talk to someone in the team or just email me directly at worldcoin.org so with that i want to leave the last minutes that we have for questions mostly for miguel but also for myself yeah yeah so it's first of all it's not really an identity protocol right because everyone gets the same proof of personal you cannot it actually like is not very useful for some things where you would want to like distinguish people what we give you is a way of knowing that someone is a person that hasn't done something before so in terms of the downside that is a downside right if you do kyc you don't just know that they're real you also know who they are right so that is a downside of this there's obviously um we have to get everyone on the system right and so we have to find a way to scale this to the world we think we have a path to that and there is one trusted component here which is the orb right the orb is essentially a real world oracle and we do a lot of work both to prevent abuse and to react to abuse so for example every orb signs each verification so if an orb was misused or it was compromised also right now and in the future the community can actually retractively expire the verifications from that orb and just tell people they should return to another orb so there's things that we do to mitigate that but there is uh there is inherent trust in the orb and that is just um like perhaps a downside of of the project but we think it's by far like the best path obviously yeah so we're not really talking about the worldwide air drop today um you can throw questions on the discord on that um in summary there's just not enough regulatory certainty in the us for us to feel comfortable uh running the world canyon drop in the u.s yes so right now uh in other countries people can try the beta so we're issuing bit what we call beta tokens which is world tokens on a test that will hopefully uh convert them i would rather not talk about the error let's focus on world lady today yes let's focus on world i did today sorry it is yeah yeah no no i i i'm happy to respond on discord it's just right now we're like we're not talking about your job in the us for now we're not talking about the europe in the us yes yeah yeah great question so we're actually hoping to open up the hardware of the orb before this conference the spirit of the workshop that we're doing tomorrow is that it's pretty much sharing everything that we will share anyways we are ready to do so the the special consideration with the hardware is a licensing um there is it's a double short opening it up right because people could choose to misuse technology that we develop and so the all of the blueprints and everything will be opened up we are working with really really cool open source advocates on exactly what license we will do this with and so during the summer the hardware of the orb will be open sourced and then hopefully within a year the firmware will also be open source as well yep so no you do not use this in place of a wallet uh when you download the worldcoin app you get a self-custodial wallet on a theater right now it supports hubble on ethereum and polygon um world id is completely separate as well it's agnostic and so when you sign up to welcome you do get a wallet you can use that or you can just use any other wallet you want and just use world id through the worldcoin app okay yep yeah great question so unlike your your world id private keys you can back up just as you can back up a while a private key so right now we support cloud backup in the near future we'll support social recovery as well the additional thing that we can do in this case is we can also let you go back to an orb uh expire or revoke your old world id and get a fresh one with that same iris code because while there is not a link between your wallet and your iris code and there's also not a link between other stuff that you do and your iris code there is a link between your world id public key and your iris code so we can revoke that verification that is on that world lady public key and assign a new one right and that's fine because the actions that you do with world id are not tied to your world id publicly this is a very cool thing uh you cannot query some worldly public key and ask like what what has this person done is every action is completely unrelated to each other unlike it would be in the case of wallets yeah so if you lost your eyes or if you don't have eyes then in the short term there's we don't have a mechanism yet this is what i was talking about the way we see scaling this is actually through something like uh a web of trust but in the short term there is the vast majority of population has twice the vast majority of population don't lose their eyes fortunately so we think that's good enough to issue it you would only need to return to an orb if you lose access to your world id in the first place so even for whatever reason you have an accident as long as you don't lose access to your world id and you have it backed up you should be you should be fine anyone else have a question all right let's say one last one review yes so we'll talk about this tomorrow the orb has a superior enclave each orb has its provision a its own signature that's what it uses to sign the verifications and so there is a whole flow around that you can imagine very similar to how you provision uh hardware wallets and so uh yeah that's ensure the answer we'll talk a lot about more that tomorrow all right sounds good thank you so much everyone uh we will be around all weekend long we will also stick around here in the back if you have any questions or if you want to ask one-on-one stuff super happy to see you and happy hacking okay hello everybody my name is herman i'm here on behalf of nozi safe we would like to introduce you or to talk about safe modules and a little bit of safeguards how to create your own safe module so first of all i would like to ask a few quick questions please raise your hands who knows what nazi safe is okay quite a lot of people who is using the nozzy safe currently individually or in a team who has built anything related with nazi safe development okay and finally who knows what safeguards and safe modules are just a few then that's good we will talk about that today so the key points of this talk are going to be the safe modules architecture what are the different components that form the safe architecture what they are the safe modules applications like why are they useful safe modules management how to use them we can enable disabling them execute transactions using modules and finally some repositories where you can find some examples of safe modules so where to find them you have probably noticed that we have the what the why the how the where and we are missing who and when well that's obvious i guess who is you and when is this hackathon so let's start thank you safe modules architecture if we talk about external loan accounts we see that we see the that the architecture is simple we have a private key and a public key and the private key needs to sign every transaction in order to execute it however with safe because we are a smart contract and a multi-signature wallet we need to define a list of signers and with their private keys they need to sign every transaction we can define how many of them are required to sign each transaction and after that they become executable that happens on chain if we also have some services that allow us to collect the signatures of chain and once we have the transaction and the signatures we can just call the contract once to afford some gas and make the user experience easier so this is the regular flow of a transaction execution where signers need to sign its transaction but there are also another flow and this is using safe modules safe modules are well are used by third parties there are external accounts that they can call a safe module and a safe module is a smart contract that is deployed in the same network than the nozzysafe and it has root access to execute transactions in the safe they are very powerful but also we need to take care because it's critical they have root access meaning that they can execute transactions without the confirmation or the approvals of designers so the developers need to define a different logic in the safe modules and the transactions will become executable or not if those checks are passed so we have the regular flow with designers and the other with the modules in case the signers become unavailable or the private keys are lost the safe modules flow is still available and if we have a safe module for example that implements a recovery mechanism we could somehow replace the original signers and add new ones there are also another type of modules and these are the safe modifiers safe modifiers are usually called by safe modules that are used by third parties so safe modifiers are placed between safe modules and the saves and they allow to add some filters to the transactions that are triggered from a module so we are allowed to chain different safe modifiers and when a transaction from a third party is sent to a safe module the transaction is relayed in case we have a complex architecture that is not needed and we should try to simplify everything as possible but this transaction could go through every safe module and modifier and having some checks there the safe wallet allows to have multiple safe modules that offer extra functionality also safe modifiers allow to have safe modules plugged into them and of course we can also have multiple safe modifiers so safe modules allowed to expand the functionality of the safe and we also have another piece of another element that are safeguards safeguards can be enabled to a safe and they can execute some checks before a transaction is executed and after a transaction is executed so there [Music] every transaction that is triggered even if it's from a safe module or from the signers will pass those checks if any of these checks after or before reverts then the transaction will be reverted also very critical element so let's see some applications that modules and guards can offer we have the multi-signature control the common flow and we also can add some functionality to implement roles recovery mechanism add protection layers and some things modifiers allow us regarding roles we can create for example a safe module that gives or grants admin rights to some specific accounts so you could imagine having a safe module where some roles are defined and this role could refer to what are the kind of transactions that can be executed like what are the target contracts that can be called which specific functions could be called which a range of parameters of the values could be used and give some accounts those roles we could also implement a token voting where a safe module is related with an erc20 token and do something similar like those do where the holders of this token have both in power in order to execute transactions we could also have a safe module that handles spending limits so we could allow some accounts to withdraw a specific amount of funds for a specific token without the need of creating of all designers approving each of these withdrawals regarding recovery for example we could implement a social recovery mechanism where we define uh some accounts that belong to our friends or family and at some point we could or they together could execute a transaction via that module and replace the original signers of the safe if the private keys were lost we could also for example these are just examples you see we could implement secret questions if you remember long time ago in web 2 pages if you forgot your password they would allow you to answer a question like what was the name of your first teacher what was the name of your first dog whatever here you could implement something like that where you could submit an answer and if it is the correct one then replace the owners or allow a custodial recovery party to execute that kind of transactions regarding the safeguards for example because all the transactions pass through the checks that the guards have we could implement an allow or deny list where we allow some well it would be like a filter for all the transactions checking what the target contract is and allow or not to execute a transaction we could freeze an account if before executing it there's a parameter that designers can turn on and off etc also with modifiers that have multiple safe modules plugged into it we could add a modifier that implements for example a queue and all the transactions that are coming from these modules would stay in that queue for one day for example there are unlimited possibilities that you could explore so how we can manage these modules and use them the [Music] the different operations that can be done are enabling a safe module disable it check if a module is enabled or not into a specific safe getting all the enable the enabled modules in a safe and finally execute a transaction for the setup we would need to deploy a safe or use an existing one deploy a safe module or use an existing one if that module is built in a way that allows multiple safe to use it and finally execute a transaction via that module so let's see from the nozzysafe smart contract side and from the module side some code so here we see two contracts the first one is a super simplified nazi safe contract that is a module manager module manager is one of the core contracts of the safe that has all the functionality that allows to enable modules disable them etc so when we set up a new save inside the function setup there is a call to the setup modules function inside the module manager and if we see below the module manager we have two variables one is a mapping called modules where the keys and values are addresses and we use a sentinel module that is the address 0x1 that we use in the beginning and at the end of this mapping to see well to navigate it so i'm not going to [Music] talk very deep about this we can enable a module enable a module it cannot be null or the sentinel the others we are using it for the module and also modules cannot be added twice we can disable a module and making sure that the module was already enabled before we also can see if a module is enabled or not by checking this module's mapping we can get the enabled modules list that is patinated and we can iterate on it and finally and the most interesting thing is that we can execute a transaction so in the safe contract there's a there are two methods exec execute transaction that uses the regular flow checking the signatures of designers and then we have the method exec transaction from module this is a public method that can be called by any account however inside of it there is a check where the message.sender [Music] needs to be inside of the modules mapping meaning that the the message.sender the account that is calling this method is a module that is enabled that was in the side of the nozzysafe contracts and now if you decide to build a custom module you could create a contract in this case we call it custom module that is a module module is an interface that defines what is an abstract class that defines the methods that are required and that can be implemented here so uh for this case we have the custom method function that receives some parameters of a transaction like the two value data and operation and inside of it we are calling a target this target is an address that was set before and if this is a module the target can be a modifier or an oc safe and there we can call the function exec transaction from module and pass all these parameters so this way we are relaying the transaction from the module to the safe now let's see a little bit how to use the safeguards equally to the to the safe modules we can have a safe deploy a safeguard enable a guard into the safe or disable it the difference is that safes only allow to have one safeguard instead of well we can have multiple modules but just one safeguard safeguards are enabled in the safe by the signers and then when the in the safe contract there is the function exec transaction and inside of it i just simplify the code here but the signatures are checked and then we get the safeguard we see or we check if that guard is different than the other zero meaning that we indeed are using a guard if that is correct and we are using it then we will call the method check transaction then the transaction will happen and after it there will be another call to the guard calling the method check after execution if one of these methods reverts everything will revert and a custom guard could be implemented with two functions check transaction that receives all the parameters from the from an oc safe transaction and also the function check after execution that receives the transaction has and if the transaction was successful or not so some module repositories and examples you can read we have the safe contracts repo in the safeglobal user on github there you can find the core contracts the module manager and the guard manager that implements the functions to manage these elements then we have the safe modules repository where there are some examples of modules that are used and also a very interesting one is the zodiac repository under the gnosis user zodiac is a dow tooling standard that implements multiple safe modules for towers that are built on top of the of the safe and you probably will find that interesting here i will provide the slides in the in the discord of uh is global so you could check these links there so we have the modules that implement or that indicate what are the functions that are required to implement if you build a module and well here we have some examples of modules and modifiers sorry i'm running out of time same for the guards we have a base guard and also an example of uh of a guard that debugs a transaction checking the data before and after the transaction is executed and now the question is will you build the next build big safe module or guard well we hope so you can find us on twitter nazi safe we also have a discord and forum on chat or forum dot noises safe dot io and we also have a channel nozzy safe in its global discord also feel free to come to our booth and claim your nosy safe east new york po up and for the hackathon we have ten thousand dollars up for grabs and two bounties the first one is a wild card like any integration with the nozzy safe on different layers on the front end infra or contract layer in the front end you could uh create a new uh a new front end use our sdks like the safecore sdk if you are building an app that runs a standalone and separated from our app or the safe apps sdk if you want to build a safe app that runs inside our safeapps store in the infra if you want to play around signatures that are that sorry like collecting all the signatures of chain before a transaction is executed or in the contract later if you want to play around with modules and guards that is the first bounty and the second one would be specifically related to the roles module from zodiac the the best use case for it so thank you very much we are going to stay here all the weekend at our booth feel free to to pop up and well we can help you with your questions and good luck with the hackathon gm or actually good evening good night gn i'm steph and i'm a developers advocate at polygon and today i'm going to present on a quick start guide to polygon for biddlers or builders which you all are so quick definition of biddle or bu idl it kind of comes from hodl which i always think of uh hodor from game of thrones when he's like hold the door um but hold on for your for dear life to all of your crypto through the winter with me and also build for dear life because a bear market is a build market [Music] so about half of the hackers at east new york this year are first-time web 3 developers which is really cool to me because i started my journey in web 3 with eth online in october last year and so the main difference between a web 2 app and a web 3 dapp is just the back end there's components of blockchain on the back end but from a front-end perspective it's very similar so if you're used to creating front ends awesome you're in the right place and i'll run you through how to compile and deploy a smart contract on polygon today but really quick i just want to go through a couple fundamentals so what is a blockchain a blockchain is just a public database that's updated and shared across many computers in a network we consider that a decentralized system and a block in a blockchain is just the data or the state that's being stored in those consecutive groups of blocks so if you've ever sent crypto to someone or received it from someone the transaction data needs to be added to the block on the chain in order for it to be a successful transaction and to be accepted um as a transaction on the network and i took this nice little definition from the ethereum foundation they have a great article called what is a blockchain i love the ethereum foundation for all of their different resources it's where i start when i'm learning something new so next up what is polygon this is kind of a quick overview of a bunch of the different products that polygon offers you've probably heard of polygon pos the most i'll go over that in a little more detail but we also have a bunch of different zk solutions we have supernets and we also have polygon id and we actually just um announced an integration with polygon dow i believe two days ago and then we went into more detail about that today at polygon ignite so we would love to see you at a future ignite event but polygon pos which is um proof of stake is an ethereum scaling solution and some of the reasons why i've always loved developing on polygon is because polygon is really fast so the transaction speeds go through super fast uh 7 000 transactions a second versus ethereum at 15. it's also very scalable so it's built to scale with you we've had over 1.4 billion with the b transactions recorded so far and also 29 000 daps on polygon which is awesome also very flexible it's evm compatible and if you've ever developed on ethereum you're already a polygon developer which is very cool we use all the same tooling and that's all built in so none of that has to change just because you're on polygon and then one of the best parts to me is the cost so as a developer if you're deploying a contract on polygon it costs far less than ethereum with an average transaction being just a fraction of a penny which i absolutely love and then the other reason to deploy on polygon this weekend is that we're giving away twenty thousand dollars in prizes we have four different tracks and we also have a pool prize um which will be split between the top ten projects that deploy on either polygon pos test net or the main net so i'm going to go over how to compile and deploy a smart contract on our test net which is called mumbai so the first thing you have to have is a wallet setup so download metamask create a new address add the test network and then go to the faucet that's a lot of steps so i'm just going to run through the whole thing as a demo i already have meta mask which is a browser extension you can see it up here and i'm also already connected to the polygon test net but i'll show you how to add that so it you can download metamask from this link but the next thing you're going to do is create a new address for test development so within metamask open up your profile by clicking that upper right hand little dot and then go to create account i like to name my accounts with the date so i'm just going to call this wag me which is which stands for we're all going to make it and then i like to give it a date of like 6 24 so that i remember what i was doing and this is a test account so i'm never going to use this for real transactions because just security reasons so now i've got a new account and the next thing i need to do is add the polygon mumbai test network so the easiest way to do this is to go to polyscan so i'm just going to open that link polyscan shows all of the different transactions on polygon it's very similar to ether scan but it's for the polygon test network because you can see the little mumbai flag up here but if you scroll all the way to the bottom of polyscan you'll see a little add mumbai network button to metamask so that's just a way to quickly and easily add the rpc so we can connect to this network um by changing it within metamask so i'm just going to switch the network i'm going to connect to the wallet i just created and we can see that wagmi 624 account is on the polygon test net which is exactly what i wanted so the next step is to add some polygon mumbai test matic from a faucet a faucet is just a mechanism for receiving test uh crypto so that you can play with it and do different development so you can see that i'm on the faucet account and i'm going to get some test tokens again the network is mumbai which is our test net and i want matic tokens i'm going to grab the wallet address from metamask and paste it in here and i'm going to send myself some crypto if only this worked for bitcoin and ethereum on the mainnet i'd be so rich okay so request is submitted this should take one to two minutes and we'll see it directly in my metamask account as soon as this funding goes through so i don't think it'll take one to two full minutes but we'll see but once that happens we have our wallet fully set up for uh actual smart contract deployment so next we're going to get into how to actually deploy your first smart contract using remix and remix is this really awesome ide it kind of reminds me of visual studio code but not only can you write your smart contracts in solidity in remix but you can also directly compile and deploy them so you don't need a different tool like i don't know what you use for your front-ends but you can do all of this straight in remix which is great i'm just going to click right into remix and open this in a new tab but first let's check metamask and see yeah so you can see that we got that 0.2 test matic from the faucet successfully and so let's get into the actual coding so again this is the remix ide where you can create your smart contracts and also compile and deploy them i'm going to go straight into the contracts folder and we're just going to look at the first contract this comes built in with remix for you to play with this is written in solidity on line 3 you can see i'm just going to zoom in hopefully you all can see that but this is just on line three it this is defining the solidity version so that it's pinned when you're developing and on line 10 you can see this contract is called storage line 12 has a piece of state which is just number that's being defined and on lines 18 and 26 we have two different functions so on line 18 we have the store function this is taking in a number to store within the smart contract so if we did something like store three three would be stored in the smart contract and that would be like the piece of state that we're keeping and then anytime we call the retrieve function it would print the number so if you've developed in javascript i think it looks very similar which i like because i'm a javascript developer in a former life um but we're just going to practice compiling and deploying this smart contract so i'm going to save this within the remix editor and then go to the compile tab which is the third one down and click compile so this is just compiling the code okay so this compiled and the next thing we need to do is deploy this compiled code so the fourth tab down is the deploy and run transactions tab i'm going to switch my environment to injected web3 because this will read the environment directly from my metamask account you can see there's this custom 80001 network and that corresponds to my polygon mumbai test network so i'll connect to my account and just to show you that the network actually changes i'm going to change into the ethereum mainnet and watch the injected web 3 network up here change when we do that so now we're in the main net but i'm going to go back to the polygon test net but that's just to show you that as you change your network it also changes within remix so this is an easy way to deploy to any evm compatible chain although we would really like you to do it on polygon of course so now we have our injected web 3 we have the account hooked up and the last thing to do is deploy which i do by clicking the beautiful orange deploy button it shows an estimated gas fee so it's like .0003 matic i'm going to confirm that transaction and you can see down here creation of storage which is this smart contract is pending and we can see there was a successful transaction with this nice little green button check mark so at the bottom here you can see deployed contracts we just have this one that we just created and hopefully we all remember oh no my mouse got stuck let's see technical difficulties mouse difficulties there we go okay so back in that contract again on line 18 we had the store function defined and then also the retrieve function and those correspond on the left to two different um callable functions within our contract so remember the store function takes in a number so does anyone have a favorite number shout it out four i heard four so i'm going to set four as the store number by clicking store again this is a transaction so i'm going to confirm the transaction you can see it's pending down here and then if all goes right once this has posted we can retrieve whatever the number is in state and hopefully it will also be four i know it will be because my code always works you're supposed to laugh at that it's not true my code never works but let's retrieve do do do and you can see down here that decoded output we retrieved was for and so just to prove this really works i'm going to update it to 4000 and store this new number on chain so i'm posting a new transaction to store the value and then we'll retrieve the new stored value and it should be four thousand okay so the transaction posted and let's retrieve that value four thousand sweet so this is how you can interact with the contract within remix but you can also do this from a front end in a very similar way to how you would call an api i'm going to show you a link to another tutorial for how to call from the front end but this walkthrough is really just to show you how quick and pretty relatively easy it is to deploy a contract because i know when i was starting out this was something that intimidated me just because i don't know why it did it shouldn't have but i've got all of these steps within the presentation so you can look at it later but just back to this here's four more developer resources we have our dev library on notion the polygon documentation polygon academy which has four levels of different courses that you can take after the hackathon and then also some web3 concepts from the ethereum foundation if you're building with us we would love for you to tweet this is our twitter account tweet tweet tell us what you're building on polygon and our hashtag is hashtag on polygon and then the last thing to plug is another hackathon we have going on it's actually a two month hackathon called biddlet and this is a great way to keep learning in web3 improve your skills we have a bunch more workshops that we'll be running it's a great way to meet friends and network this is also fully virtual so if your friends weren't able to make it out to new york you can still totally hack with them and connect with other builders by searching for them on our social media using our two hashtags one more plug we're also doing a video series called wag me with polygon um some of my beautiful co-workers mitch and rahat have been filming different clips hey guys uh but they would love to meet you and hear about what you're building and we'll get it on video we'll make it look super cool so we would love to see you at our booth and thank you again i'm steph i'm oceans404 on twitter and this whole presentation in the slides can be found at this time url so tinyurl.com polygon ethnyc thank you so much you 