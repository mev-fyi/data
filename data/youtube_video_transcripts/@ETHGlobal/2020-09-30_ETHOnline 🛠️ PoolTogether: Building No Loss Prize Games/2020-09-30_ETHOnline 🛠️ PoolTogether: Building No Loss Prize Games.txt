the attendees for the moment we're waiting just a couple minutes for people to come in and then we'll get started we have brendan and leighton from pool together brendan's going to be leading the workshop and leighton's going to be hanging out in the chat so if you have questions drop them in the zoom chat so without further ado i think we've got the stream ready so brendan if you want to take it away great okay well um hello everybody my name is brendan i'm from pool together um i lead the technical side of things and uh i'm really stoked to be here today because this effort this version three has been the culmination of about the last six months of just design and development and hammering away on this idea um so and i also just want to start by thanking youth global for putting on um such a good event like their transition to online events has been seamless so that's been really impressive um so let's let's i'm going to switch over to the uh well first of all i'm going to fire off uh a link and this is the workshop link there's an you can follow along um and follow the commands that i run so i'm just going to paste it into the zoom chat i can't seem to paste the zoom chat i'm going to fire this off to you if you want to proxy this to people i got it yeah hit me yeah there you go so let's get started there we go okay so just for the uninitiated what is pool together um pool together is a project that enables price savings accounts so price savings account is one in which you deposit funds and then at the end of um a prize period the interest accrued on those funds is awarded as a prize to a randomly selected winner it's a very simple idea very old concept and so what we've done is made this really optimized because it's running on the blockchain so we can escrow people's funds quite easily and return it to them when they when they want to so let me just open up the navigator this thing doesn't seem to be happy okay so so it's a protocol for no loss prize games for ethereum um in this workshop we're gonna cover what is pool together we're going to cover a bit of the protocol design because v3 introduces a new design and then we're going to dive into the workshop and the workshop is going to be particularly interesting because we're going to get everyone set up on their local machines with the contracts with the builder ui to the actual prize pool builder ui as well as the um reference app ui so the actual interface to the prize pool and then we're going to create a custom strategy so i'll dig into that a bit later so let's start with the protocol design um pull together v2 had uh an interesting mechanism where we tried to prevent people from gaming the system so he would actually delay mint tokens so when somebody made a deposit we would actually mint them uh when the prize was awarded and so this prevented people from uh jumping in right before the prize and getting out but it led to a very complex token model that was challenging to work with so the v3 introduces a new protocol design which we're really excited about um it addresses a lot of the concerns that people had uh around uh custody of funds and um we've uh we've really improved the uh gas usage as well so it's also fairly optimized so from the top where does pool together sit in the stack well we develop prize pools and prize pools are bound to specific yield protocols so that includes protocols like compound ave uh wiring y vaults uh potentially protocols like balancer as well our focus is in the short term but on stable coins but the new system allows you to build whatever the heck you want so you can use any kind of volatile asset if you want to and so pull together you you wrap these protocols uh with pool together and then you're able to uh expose that interest and divert it to different people uh in prize games so it exposes that so it's no loss in the sense that people deposit into the um pull together protocol and then uh the prizes are ordered from the interest earned on that um in terms of individual prize pool architecture this is where uh we're really excited to present what we're really excited to present to you so what we've done is we've created two separate contracts it's very very simple system we have a prize pool which is a non-upgradable escrow for users deposits and the prize pool will then take a deposit and then place it into say compound or whatever the actual yield source is but then it'll manage the interest itself and the price pool is bound to a specific price strategy and the strategy is what's able to uh take that interest and award it as you know tickets or sponsorship or what have you to different users or even to say philanthropic organizations or or anybody um and so we think this is a really powerful mechanism because now we have uh a a non-upgradable uh non-custodial contract that people feel more secure in uh but b it's now um the interface can be interacted with by anybody so anybody can spin up a prize pool and they can see that it's a pool together prize pool so it's been audited it's very safe to use and worst case even if the price strategy is malicious um only the interest will be lost so it's always no loss that's really important to us um and so the price strategy it could do anything it could uh let's say award the interest every 100 died that accrue or it could award the interest say once a week as our typical uh pools do um our current prime strategy is a periodic price strategy so it's one that allows you to set an interval at which prices are awarded and it'll simply award whatever the balance is whatever the additional balance is so there are a few protocol and variants that are really important to us one is no loss and the other is full liquidity although full liquidity there's a caveat there and i'll get to that um it's uh it's once we dig into the code a little bit more i'll actually demonstrate it to you but essentially what we do is we ensure that the funds have been in for a minimum length of time because yield is generally generated over time we make sure that the user participates for a certain amount of time but once they've been in for long enough they can withdraw instantly no problems and so the different things you can customize i mean the list is a lot longer than this to be honest there's a lot of things you can change um but we've made it really easy to add new yield sources so while we're going to be so what we've built so far for v3 is a y vault connector and a compound connector but you'll be able to essentially use anything that that bears interest you'll be able to build a prize pool on top of so we're really excited to see what people come up there um and then the price distribution is totally customizable so the price strategy itself is a very simple interface and you can customize that to say you know have multiple winners you could um you know award nfts that are held by the prize pool um you could there's there's so many different ways that you can that you can slice the price strategy um acid types and other things so like i mentioned before we've been focusing on stable coins because we really want to adhere to the no loss uh uh sort of tenant as closely as possible however the new system does support any asset any tokenized asset erc20 so um you know compound already supports uh rap bitcoin so you can do rap bitcoin if you want um it supports uh you know the xerox protocol token so you there's there are many different assets that you can use and that all generate yields that you can then um award as prizes then finally the rewards the reward so built into the prize pool so essentially the prize pool always escrows everything if you want to award some arbitrary erc20 tokens you fire them over to the prize pool and then the prize strategy is able to award them same thing with nfts erc721s you can fire them over to the prize pool and then the prize threat you can award them so the strategy has this privilege of awarding uh basically transferring tokens out of the prize pool as awards to people um the yield also is included among them of course there are a few blacklisted tokens like for example compound you can't be priced right you can't award c tokens because naturally that is the means by which interest approves so and that's also um what upholds the no loss invariant so it's really important to mention that um so let's dig into the workshop um this is this is an ambitious workshop uh but you know what i've um included a full set of instructions so if you do want to follow along um it should be fairly easy too that was a link that was shot out at the beginning it's uh if you go to github.com pool together slash ethonline workshop it's essentially the full list of commands that i'm going to use to deploy the contracts locally then we're going to create a prize pool using the builder ui that we deploy locally then we're going to interact with the prize pool using the reference app and at this point that's where i'm going to demonstrate the um the new protocol design of how we use credit this kind of in-system non-transferable credit to manage people's managed fairness within the system uh and then finally and this part isn't entirely done yet but we're gonna create a custom prize strategy um i have the most the pieces in place uh there's some fine tuning that i haven't been able to uh get working yet but you know no worries we'll hand wave we'll gloss over that let's just uh let's just get started so i'm gonna pop out of the slides and let's head over to the terminal so um what i've done is i've checked out a number of different projects we have the main pull together pool contracts here so this is out on the version three branch and so if you go to github this is the the latest latest this is the newest version of contracts it has all our special sauce it's great um if you want to incorporate it as an npm package you can what i've done instead though is i've just cloned it so i've done a git clone from um uh the git url up above what we've also done is cloned the pool builder ui so the pool builder is the static front end that allows you to interact with the launching factories so the contracts include not only the prize pool contracts but also factories these builders that allow you to create prize pools very cheaply because they use a minimal proxy pattern so they're incredibly convenient so you can spin up as many pools as you want say for example compound has you know eight different c tokens you can spin up a price pool for each token very cheaply granted these days a gas is not cheap so i mean it's still going to cost it's not going to be uh like it was a year or two ago um the other project we have here is the reference front end and so the reference button is once you create a pool using the builder then you can interact with it and so this is the front i'm meant to interface with the our default prize pool and our default prize strategy which is a single random winner uh periodic prize strategy which as you can guess periodically awards the price to one person or one address um and then finally we have the custom price strategy project which is uh uh is going to demonstrate how you can build your own price strategy and so all of these are wrapped up and discussed in the pool together workshop uh instructions so if you do want to find further details you can bring that up and read through it um there's a few things i'm going to skip out here um i want to leave out the cloning of the projects and the kind of the setting up and the kind of boring boilerplate i don't think that's really necessary so we'll just get the good stuff um i've also uh set up like you know a private key in one spot so that i can easily switch between metamask and the command line just for ease of demonstration um but i'm sure if you get started the readme that you can get up to speed with that no problem so first things first let's go to the pool together contracts um we'll go yarn we'll install the packages and now let's deploy it locally so what does that look like well it's as simple as yarn start so we use a tool called biddler which is one of the best tools we've used yet it actually allows you to easily spin up a local node it has console built into it uh and it also has a really fancy deployment scheme so i can't uh i can't vouch for it enough we're really pleased with it so you can see that the server started up now it's running at 8545 standard port and you can't see it but all the contracts have been deployed so if you open up a new console and let's um excuse me let's load up the biddler console so we're gonna go build their console the network is gonna be the local host and let's see what contracts have deployed so if we go uh object keys well let's first go the deployed contracts is and this is uh a biddler deploy command so now we have the deployed contracts all wrapped up here and let's have a look at all their names so we can see that we have got a compound prize pool builder we've got the let's see why vault prize pool builder down here we also have a fake c die so as part of the test environment we set up a compound basically fake compound um contract so that we can easily build against it so this is all set up now it's all well and good let us go now to the builder ui so switching gears now let let's set this up this is the next js project so it's a static front end that's very easy to spin up um so let's load it up now go yarndev that'll spin it up so we see it start on local as 3000 so let's switch over to our browser and punch in localhost 3000. all right so um i believe i don't know so actually what i need to do first of all though is so the builder is um built against certain contracts so what we'll have to do uh before we get started is to make sure that we have all of the correct addresses so if we look at compound prize pool builder there's its address and so let's quickly jump over to the um builder uis constants because we just have to update them so bear with me they do change every time that's the only problem with the builder is that typically they change pretty frequently but let's see here so here we go compound prizable builder 0xd8 and what we have here 0xd8 okay well good because we started from scratch all the addresses match um yes you know the other advantages that you have pretty deterministic addresses unfortunately i haven't run anything since then so let's create a new prize pool so there's a few things missing from this ui that we have yet to add one of them is a drop down to be able to select the yield source so in the future you'll be able to select compound y vault we even have like just a raw staking pool um and there'll be an ave and basically any yield source you can imagine will be set up here um so we've deployed it with a number of different tokens here um these actually all refer to the same c dot in our local test net so we'll just select down here the rng service is an abstraction we created to make it easy to swap out random number generators because there's a lot coming on the horizon for example you know chain link has deployed a vrf which is a really good tool superior to the block hash but they're also working their way towards using a bls signature system to be able to have more deterministic sort of entropy that isn't is not biasable by people um and then as well star wars coming out with their bdf which i'm really excited about as well uh although it has different different constraints than chain link uh chain with the rf and so here we're just going to select the block hash because it's stupid simple um let's set a price period that's really short so let's say 60 seconds that we can easily see this thing tick over and then we can complete the award so we've got some defaults here um in terms of tokens that are set up we've got a sponsorship token so sponsorship means that you deposit into the pool but you don't have any chance of winning you're purely just contributing yield um this is what pool together uses to boost the prize pools uh when they're low um you know as as you all know yield changes pretty rapidly and so we want to make sure that um you know the price is always pretty decent but with a new v3 you can also uh just do direct price injection and just transfer tokens directly to the price pool contract but let's just set some defaults here so we'll just full name will be sponsorship let's just set it to spawn and then tickets here so tickets as you might expect uh give you a chance to win so each ticket you have is a chance to win so this is this is when people go to pooltogether.com this is what they buy they get these tickets in exchange uh so let's call this a ticket give it a tick symbol um and so here are some parameters i'm not going to cover these in too great in depth um if you'd like there is if you go to docs.pooltogether.com there is a discussion on fairness and you can get you can dig into what these maximums are and what the exit fees are but essentially at a very high level you can imagine that when you deposit into pool together you immediately start accruing credit at the credit rate and that credit will rise until it reaches the credit limit which is a percentage of the balance you hold and when you withdraw as long as you've reached the credit limit you don't have to pay anything you don't have to wait you can just you know get out right away and um this this is configurable by the pool owner but they can never exceed these maximums that are hard-coded into the core prize pool contract so these kind of act as backstops to make sure that uh these credit rates and limits can't be manipulated but essentially this prevents people from depositing them withdrawing right away because they'll be a slightly punitive amount when they try to withdraw right away this credit limit is super high this is just for testing it's not gonna be ten percent that's pretty absurd it's probably gonna be more like point one percent or something but we'll have a ten percent here because it's easy for us to uh uh just see what's going on so let's use our metamask up here let's double check let's zoom out of the way so this one let's just uh reset our knots sometimes the mask doesn't it unhappy about that i did i did turn the uh the note on and off and so the knots probably reset so now let's create a price board i'm good to go here everything's happy confirm great wow that was fast yeah don't you love test nets this is so much faster um so we can see now we've got a prize cool contract address here as well as a price strategy contract address so like i mentioned at the end of the design these are the two key pieces and i just want to reiterate that this particular builder um by default builds uh well the the compound prize pool because that's what's currently configured but it also uses the single random winner strategy this is the first and the default strategy that we're using right now um and this is what we're going to swap out later for our own custom prize strategy but what we'll do at this point is so this is great this is the builder ui this is you know one half of our front ends but now we want to spin up the reference path ui and so this is the actual means uh with which you interact with the prize pool so now let's jump back we're going to go to i've already cloned the uh reference ui here and so i just gotta close zoom just give me a second um so now let's make sure yarn's all set up it's all good to go with the reference ui we don't have to worry about setting up any contract addresses because we're literally just going to punch in the prize pool address so again we're going to spin it up here but let's make sure we're on a different port this is also using next js so it's a very simple build that has a lot of optimizations for us so spinning up let's head back to our browser and load up the reference running here let it compile it's doing its thing there we go okay so so let's select local because it's on the local network and if we switch back to our other tab let's copy that price pool address and paste it into here great here we go okay so um this is demonstrating or showing all the sort of pertinent details we can see the credit limit down here is 10 the credit rate is over here 0.0016 uh this is by the the builder automatically tunes this value so that it is um in accordance with the prize period so we have if you recall we created this prize pool with a 60 second prize period so i mean that time has already passed so now it's uh it's you know ticking down to zero and at that point we'll be able to uh start the award so um but we notice there's no tickets there's no prize so let's put something in it ah we have zero die we need time let's do it so as part of our um deployment we did deploy the fake dots so let's have a look at that we have um i have some commands i can cut and paste in our instructions here so we set up the contracts there's the die we set up the builder but now here is a helpful way for us to mint ourselves to die because the token that we deployed is a is the open zeppelin erc20 mintable um so let's give ourselves some and so your address let's copy our let's first copy this we're gonna give ourselves a thousand die so let's delete your address and i'm going to copy my metamask here there we go that's balance should increase there we go okay bounce 1009 great now let's deposit so this would be a good demonstration of how the credit system works so we're gonna do our approval process and we are looking at permit uh we're just not quite there yet uh and now so what i what i want to first demonstrate is this kind of deposit withdrawal just kind of really rapid like if i'm trying to gain the system if i want to get in a block before the prize pool and then bounce right after let's drop in 500 we're going to deposit we'll see our ticket balance go up i see the total ticket supply up here go up there we go so now let's withdraw instantly let's withdraw everything you see a warning here because we have not waited a full price period of 60 seconds um this is going to complain to us that hey you're going to incur a small fee that is going to go towards the price so let's let's just ignore that we're going to withdraw anyway and now let's watch what happens here so you see our balance is slightly lower now um of course because the credit limit is really high it wouldn't be it wouldn't ding us that much normally and we've contributed to the prize because we we got out right away and so in this way even if you try to you know get in and out very quickly um you're you're going to uh be incurring you're going to get dinged um but keep in mind that the credit rate builds and so eventually you won't have to you can just withdraw for free right away so let's the other the actually let me demonstrate the other thing which is kind of cool is if we now deposit let's say cool okay so we're in the pool got 100 tickets and the seconds until rewardable well it's been zero for a while we've just left that languish but that's fine um so let's start the award there we go let's started and i just want to reiterate that this front end is uh only communicating with the builder evm node nothing else so it's very easy to fork it's very easy to customize we've made it just open source so that you can pull it down and customize it as much as you want now we can see here the next prize is zero and ticket balance is up 22.50 hey we won awesome um something i do want to demonstrate though and i think i don't think we have sufficient credit yet i don't think it's been a minute is a scheduled withdrawal and so no matter what you can always do a schedule scheduled withdrawal and what it does is it sort of cues up your deposit uh your sorry cues up your withdrawal so that you can just sweep it later um so no matter what your credit limit it is the limit is it'll make sure that it waits long enough so if we do uh withdrawal like time lock then we'll see at the bottom the sweep time lock funds will pop up and i mean the credit rate is so high and short that it actually might not even give us a timer let's uh let's have a look here see what pops up oh no so you see excuse me i don't even notice but our balance is back up because um clearly we had enough credit and so we didn't have to wait at all so let's let's just do this again i just want to demonstrate this so let's do it properly so deposit so we'll have a fresh deposit no credit um so and then we'll try to withdraw right away so we'll do a scheduled draw do the max now we should be able to see a sweep because we have zero credit okay so funds will be available in 58 seconds okay cool so we can just let that sit there for a second um so as you can see this it's a pretty straightforward system um you can always withdraw with a um you know without losing anything um you just might have to wait a little while but what we've done is we've tuned or our plan is to tune the credit limit and rate such that 99 of people won't even notice um because we we did some analysis on uh pull together v2 we found that the median time that people were in the pool was about two weeks and so that's two price periods so if the credit rate increases uh such that people's deposits mature after one price period then no one's even going to notice which is great and and yet at the same time the system won't be gameable which is really important so we get almost full liquidity and uh and people can't game the system so we're pretty uh pretty happy with this design so what else can we do with this thing we have the ability to deposit withdraw we've got these these prizes being forked out this is really cool but what if we want to have more than one winner what if we want some of the prizes to go to some hard-coded address well that's why we make the prime strategy totally configurable so let's do that um let's load up the custom where did i put it so i created a project which is a custom prime stretch let's have a quick look at this code because it's it's just really simple i really like it so like i mentioned before we have um the default prize pool which is a single random winner now that pool inherits from a periodic prize pool which has a bunch of important bits and pieces like it is able you're able to register quote unquote external awards which are non-yield awards that can get awarded along with the prize the yield prize you can define the prize period in seconds you can define when the prize period starts and so what we do is the multiple winners like when we do want to create a custom prize strategy since it's a periodic one as well we just inherit we just inherit from periodic prize strategy keep it simple we want to add a number of winners so there'll be more than one this time so what we do we do have to initialize it along with all the same parameters as the periodic price pool but that's easy enough and then finally what we need to do is create a custom distribute function so this function is just an internal function that the prize strategy runs when it's time to award the tokens and actually distribute them it does all the rng you know management which is great you know keeps it nice and simple um and so it gives us the random numbers is the first parameter so the first thing we do is we want to capture the award balance and so this actually allocates the prize so it'll kind of lock in the current amount of yield um and then of course there's some console logs here i've been kind of working on this on the fly now what we do is as part of the periodic prize pool it already has the ticket found to it so we can just call draw on the ticket and that'll use um that'll use a pretty fancy data structure that was created by claros actually um we have an article about that and that remains unchanged from pool together v2 so if you want to dig up that old medium article you can research how that's how that's done but so we'll select the main winner and then to keep it simple we're just going to award them all the external tokens because nfts can be awarded i didn't want to mess around with that for this just want to keep it simple and then the yield itself is going to get split up so here we calculate the share of the price so we have the price divided by the number of winners um we then uh calculate the total supply of tickets and then the tickets split so that we can iterate through the tickets and select alternate winners and so here's the here's the main one right here is we want to loop winner number of times to draw a winner and essentially awarding tickets and so this is their share and so what we're doing here is we're awarding the yield as tickets so the periodic prize pool could also award a sponsorship if it wanted to but that's only for if it wants to award the prize to people who should shouldn't become eligible to win for example um i don't know like say it's a philanthropic organization then you just award them sponsorship so that the uh this you know the other people can still have a chance to win um so let's let's put this in action um what i've done is set up a builder for it that just vampires the other prize strategy so when we go to uh so we'll deploy this contract and we want to when we want to create a new one we just pass in the old prize strategy along with the number of winners and it'll basically copy the configuration and also include the number of winners so let's let's go do that now so we're also for this project using biddler and um what's great about that is that it can uh we're also using the same deploy system so to spin this up locally let's just clear out the deployments directory we just go biddler network is going to be pt because we have to tell biddler hey we're actually connecting to a different node not the kind of internal one that biddler spins up we're actually connecting to the node that's running in our other terminal uh under the pull together contracts directory and then we're going to deploy now great all set up and now let's launch a console so that we can interact with these contracts once again these commands are all in the workshop instructions so if you're not following along don't worry about it you'll have plenty of time to look at it later uh now we want to like we did before pull in all the deployed contracts all the middler command deployments all and let's have a look and see what we have so we've got our multiple winners builder and then the multi multiple winners proxy factory oh yeah a little bit on the proxy factory so this is a factory that allows us to create minimal proxies so it's a very very very cheap way to instantiate new contracts because the periodic price strategy does have some weight to it it's nice to be able to just create a proxy that's not upgradable but it's a proxy so that it's a very very easy on gas so what we'll do now is let's let's pull out our signers so we actually have some signatories that you can interact with it so we'll do signers great okay now let's pull out our builder actually i might have a command kicking around yes i do so we're going to use the uh biddler deploy helper to get the contract multiple winners builder we're going to use the multiple winners builder address and just pass the first signer signers is not defined did i not just oh i see plural there we go okay so now we have the builder so what we want to do now is we want to vampire the old prize strategy so if we pop over to our console so this is our console for the uh pull together contracts this is the you know the main contracts let's create a new pool um and we're going to [Music] just use an old command so using the same kind of command we're going to do the get contract app we're going to tell them on a prize pool and let's pass it the address back to the builder so we're going to copy the prize pool here and now let's have a look and see what that price strategy is 0x sub 5 4c there it is 0x54c okay so let's copy that address and we're going to vampire this with our other console so here we refer back to our interface we're going create multiple winners and it's going to receive a prize strategy and the number of winners this is what it's going to vampire and then we're going to see the number so let's go back here we're going to go to the builder pass the press strategy address and let's say we want there to be two two winners um i'm gonna use a little trick here uh because this actually returns the address but we're gonna we're not gonna get that because it's going to run on the transaction so i'm just going to use the old ethers v5 call static here just cheat a little bit okay cool so call static will actually execute the transaction without actually changing the state of the evm um but what that means is that hey we know what the address is going to be i mean you can use a crate too as well we're not quite there yet so let's now call it uh for real great transaction ran now let's copy that prize strategy and swap it out so here let's go wait full set prize strategy i'm just going to swap it out great all done now this is a little bit of magic fairy dust i want to talk about so i did actually configure the node here to have the same metamask account unlocked only the owner can do this so only the person who creates the pool can swap out the price strategy i just want to make that clear this is not a public function i can only do this because i've configured the console to use the same same account so just a little caveat there so let's have a look now so our pressure energy is now 0x6f which should match my other one over here 0x6f okay great so if we go back to our let's see i've got that reference front end here set to refresh it so that the front end would pull in the new price strategy address oh yeah we need it we need a new prize so let's quickly deposit withdraw so we'll just pump the pool we don't actually have an interface yet for uh the compound uh yield source like our mock field source so this is just an easy way to uh to boost the prize using the fairness fee it contributes to the prize so we do instant max draw looking good and there we go so we got primes of 30 die okay so now let's deposit okay now this is where i have to uh reveal something is that i couldn't actually get this working before the this started so what we'll do is we'll just we'll just go through it and see if it works now i did add a lot of console logs maybe that'll help um but what we'll do is we'll use my other account and work account and it doesn't have any so let's send it to me i'm actually going to send it from the other metamask so let's copy switch over here chef that means we're going to send it to the camera instance so we gotta find it now but let's also clear the nodes because sometimes it doesn't have to okay cool because our node restarted um what else we need is die so let's go back to our console here our original pool together console and here's our diamond function so we're just going to we're going to call this again but with our other address we have some die here bounce to zero let's see it pop there we go okay so let's do the same old same old unlock and let's deposit back oh wait no the other one was 100 right so we should just do 100 to match the same chance of playing great okay that was quick i guess we landed the right time okay so ticket balance is 100. ticket balance of the other person is 100. prize is 29.33 so this should split the prize split the yield between these two accounts um because what it does is it picks a random number but then it actually the next random number it adds uh the sort of it's sort of um if you can imagine it takes the total and divides it by the number of winners and so it adds that next index so it shifts the index but we'll see if it works it wasn't working last time um i also want to demonstrate that anyone can push the start award so we are the other uh account now but anyone can start it because we can complete right away so we'll see the next prize pop down down to zero and okay well it looks like this person won everything so there's a plug in there somewhere i have to figure out but needless to say this shows you i can swap out the price strategy which we think is one of the most powerful ways that you can extend pool together we're really excited to see what people contribute there and so coming back to the screen you can see total ticket supply is now 229 so it includes the deposits plus the prices so that pretty much wraps up um the tools available to you for this hackathon um of course we're still evolving this project and so if there's anything you need please let us know please join our discord join the developer discord um we're really excited to be able to start working with people to improve the uh the courses in the core contracts so um yeah we're happy to receive any feedback good or bad you know you want to hear about everything and um i don't know if anybody recalls but we had a system for v2 called pots where people could actually join their tickets together uh that isn't built yet for v3 also be a really good opportunity for someone to put together um so so yeah um like to thank everybody for watching the presentation i hope that was enlightening um i've i hacked this together for the last minute but i think the uh the multiple winners strategy blocks you serve is a good template if you do want to build your own price strategy so um yeah really have to demonstrate it um so does anyone have any questions i'd like to open the floor or any comments and you can feel free to um unmute yourselves if you do want to make a comment great job brendan that's all i have to say oh thanks leighton yeah yeah there's a bug in the multiple winter strategy though i've got to figure that out um yeah but no worries yeah um i would be curious is there anyone on this call who um is planning to hack on pool together stuff this this this global i'd be curious if there's anyone who has specific ideas yeah hey guys um i'm from the flavor finance team um i think that pool together is actually gonna work for us so yeah we're going to plan to move ahead with building on it nice right on well if you need any support feel free to uh join our discord channel we're always on obviously yeah i think this video is recorded i'm probably gonna have to go back and watch it in like 50 speed but yeah we'll definitely be doing that yeah it'll be on the it's on the eth global youtube uh probably in about a half hour you'll have the recording okay sounds good i i definitely might ping you guys if we have any questions yeah sounds good yeah yeah i know i have a dm with you i think um yeah it sounds like you have guys have a cool idea you're working on be sweet so someone asks is there a lottery dap example that uses pool together um do you mean by like that like a like a lottery where you would lose money like we want to get all your money back i'm not sure i might need some more clarification on that question yeah because the way the way it's designed is it takes a token and that token is never given away as the prize it's like imagine you're kind of putting up a stake as it were and the stake can then generate yield in that yielding award as a prize um we do have like a raw staking pool but it's more of a kind of a you know primitive right now we're not really working with it but you can't explore that it's not documented yet but you can have a look in the contract repository yeah but overall like we definitely want everything built on the protocol will still be no loss and so that's like a super important that's like there's only a couple invariants we have and no no loss is one of them and perhaps i should also add that we do we do have all these tools hosted so if you go to builder.pulltogether.com all right i'll add an http to that then you'll be able to see the builder and that builder is active on rinkaby that's kind of our there you go uh the main one as well is we have the reference app and so that's also hosted but as it stands those are currently fairly active so there may they may go down uh here and there but generally they're pretty solid so feel free to check those out that's a really good question that's a good question um so what our plan is is we want to create kind of a cyclical system i don't know if anyone recalls v2 with what we did is um part of the original plan is to take a fraction of the prize and put it back in the sponsorship into the prize so that it increases perpetually um so so yes a reserve fee is captured in order to uh sponsor the pools and uh sort of boost the price as much as possible uh because then people can't necessarily withdraw like the the full price amount um and so we haven't really discussed the specifics of that but um you know the the mechanism is there yeah so so one thing too like brendan um i don't think he touched on too much but is like the rewards so um the protocol can can um allocate rewards to prize pools um that basically give people rewards based on like referring volume in or just having deposits in and so the idea is that that will create like a self-perpetual mechanism where like if like say five percent of every prize goes back to the reserve and then the reserve funds the rewards then essentially that is a way for like the prize pool to bootstrap itself and um ensure that everyone who's in the prize pool gets something um because they're getting they're earning these like reward tokens which are which are essentially bonus tickets so it's built in a really flexible way but it'll be pretty awesome yeah yeah that's a good point um we also i i forgot to mention that we do have referral awards now and that's built into the core protocol um it's a pretty cool system where people can attach a referral address as part of their deposits and um they're able to accrue referral awards as a result right now it's based on volume um because that's the most i mean that's the most practical thing for referrals it's not like referrers actually old tokens or they may not um but uh but so the idea would be that you could build your own front ends let's say you know if you're in spain or something and if you've got your own fiat onboarding process you can create a kind of localized version and then you can capture some referral awards as well there are a couple of questions from youtube um i don't know if we got these earlier but i'll just post them in the chat um so the one question is does the contract take custody of the assets during the allocation of the time so that's so i guess to say it may be precisely in one of the security measures you take to secure the wallet so um so the contract takes custody is what you could say obviously the funds are in the contract but the key thing is that the contract is not custodied by anyone so that's kind of maybe a confusing way to say it but the the it's similar to uni swap right like if you deposit into a uniswap um as an lp um to like to market make like no one there is no like upgrade ability to that contract where someone could who's a privileged owner could come and upgrade it and take your funds maliciously and this is the same so the prize pool is not upgradable so when you deposit yes your funds are technically in the contract but you're not trusting pool together or anyone um you're just simply trusting the code that's there and so that's why we are paying for these third-party professional audits to make sure that because those are contracts are not upgradable you want to be really really sure they're secure because if there was a vulnerability we couldn't fix it it would just be there and so that's why um we're doing multiple audits with multiple professional um third-party auditors zeppelin as well as um uh uh ditcraft and so uh yeah that's what we're doing to ensure security but you should still be cautious even with that um yeah so there's a question from youtube if you want to create a custom strategy is the easiest way to duplicate modify the multiple windows builder yes that's the easiest way because because we haven't yet integrated like a crate to um op code so you can't predict where the address is so there's a little bit of a chick in the egg problems the easiest way i think is the vampire off the old prize strategy um so i would say definitely fork that repo uh and and customize it and do what you will and you could basically just follow the same steps from the eth online workshop at the europe global workshop that was posted as well so another question from uh uh irrelevant oops irrelevant great name what if in theory the prize was a repeating percentage of the pool like if the prize was two percent of the accrued interest every hour two percent of the accrued interest so you would be awarding a little bit of the interest more frequently it sounds like two percent of the accrued interest you can do whatever you want to be honest so so just a little bit of background behind the multiple winners that is simply subclassing the periodic prize pool the actual if you wanted to build a raw prize strategy you could do anything you could do absolutely anything you want there there would be no concept of time if you wanted to you could it could be completely arbitrary you could do it randomly you could be like yeah uh the next prize period of time will be random each time you click the button um so so we're really excited to see what people build with that the reason why um i made a subclass was because it's easy because there's just like a distribute function and you can do whatever the heck you want but ultimately you can build completely customize it but that's a lot more in depth so yeah i want to take some time with that it's possible to mix this with auger or gnosis for a prediction market bet well yes i think you would need to build a custom prize strategy that then basically takes the yield and pops it into some uh some bet and then what it could do is the prize would then get fed back to the prize pool so you'd basically have like a safe no loss bet it'd be a small amount but if you're if it's like a you're if you're super long something you can actually take the winnings and put it into the prize pool as the prize because the prize pool you can award external tokens it could be yield it could be anything so um that that that would definitely be possible you'd have to do a little bit of you know contract gymnastics but i think it would uh definitely work yeah no loss no loss uh no loss prediction markets are kind of cool yeah i'd always want to take the losing side though you'd want that 10x if possible you know give me the worst odds there's one more from youtube i'm just about to post it there we go ah yes good question so um our focus right now is on the core protocol so we haven't built um a lot of tooling to be able to like listen to events um but uh hal has an integration for v2 that allows you to listen to the winners if you can get notified that way um they have a twitter bot set up to broadcast the the winner and as far as they recall in the pipeline they did have they were thinking about building bots where you basically you know go to a channel and say like hey my address is this let me know if i want and it'll let you know if you want um there's also a solution from ens so ens uses uh a system that allows you to be notified when your ens domain is up so that's another possibility but a lot of these things so we're focusing right now on our core value add which is the protocol um so a lot of these things could be built by third parties if they want to um and eventually for our flagship app we probably will uh integrate some tool uh but we're sort of um we're going slow and making sure that we build is very polished as well okay well i guess that's it great four minutes left perfect time well uh thanks everybody you know this is a lot of fun well i'm really stoked to be able to demonstrate the new v3 but um until next time yes join our discord channel uh let's paste the link really quickly uh so that everyone can get involved if they want to oh yeah that's that's a good idea hits the link yeah this discord's where we hang out the most so come out there and if you have anything controversial feel free to fight into the discord if you don't if you're worried about it being in public we're happy to hear about all ideas but if you're a bot we're going to delete you we've seen so many unique thoughts um so uh yeah let us know if you have any questions all right thanks everyone um see you guys uh during the hackathon and keep checking out the um your your invites for future events there's another one at six o'clock uh eastern time in about an hour but thanks brendan uh thanks leighton and uh see you guys down the line yeah see ya everyone bye 