[Applause] [Music] hey everyone my name is jacob um i'm one of the co-founders of zora really excited to be kicking off the hackathon today with a presentation kind of going deep on the concept of hyper structures um so i'm going to be speaking about like what hyperstructures are why they are important and then some of the implications of what they mean in terms of how you build on the blockchain how you build in web 3 and then some of the cool and weird circumstances that i think kind of arise from this new paradigm okay so what is a hyperstructure very simple definition so hyperstructure hyperstructures are crypto protocols that run for free forever without maintenance interruption or intermediaries um this sounds very simple but it is a very very powerful idea that is native and kind of a net new form of infrastructure that is made possible by trustless blockchains like ethereum and hyperstructures exhibit um a number of characteristics and you can kind of use these characteristics as a checklist to like kind of pick a protocol run through each of these characteristics and you can kind of you know have an objective measure of like does this satisfy the hyperstructure definition or not so i'm going to go through each of these individually um starting with unstoppable okay so if we think about like traditional height like infrastructure so like power grids highways you know railroads uh you know any form of infrastructure to keep these things running and operating they require consistent maintenance by a trusted operator and they require a trusted operator to make sure that it's um you know the power is still on the roads aren't falling apart you know trains can still operate and go where they're supposed to uh which kind of introduces this kind of dynamic what you see with infrastructure which is you typically see a single entity that runs the entire thing and then an economic system which often means that that single entity gets monopolistic control um and the ability to like seek rent from those systems and that's not inherently bad it's just the nature of that type of infrastructure because we have not yet figured out a way for these things to magically operate themselves uh in perpetuity but with blockchains when you deploy a protocol on a blockchain you can actually do exactly that you can deploy once and then your protocol can run for as long as the blockchain does uh so this means that you know if you look at the uniswell protocol for example deployed once and then that team could disappear off the face of the earth their website would go down uh they could but their protocol will run for as long as the blockchain does um with no ability to stop it so unstoppability is kind of this like very core and unique superpower to deploying protocols on a blockchain which kind of unload unlocks like a huge amount of new possibilities for how we think about the economics of the system um and like how to basically build these things and it's just to kind of like give some examples as well to help understand the difference between something that's unstoppable or not unstoppable if you think about like uh exchange for example you know coinbase it operates off chain the market kind of lives and operates on trusted servers you know which gives it great features like being kind of free to interact with and very fast but it means that you know sometimes that service goes down versus unit swap um by running by nature of running on chain does not stop runs as long as the blockchain does and you know the website may go down but you'll always be able to interact with it through either scan or through a node directly or have maybe other websites that are built on that very same protocol uh and then same thing the nft site too so uh you know for openc like uh the the market runs off chain in their in their servers and databases which you know gives the you know superpower feature of being free but also prone to stopping sometimes because you know running large-scale systems like that is very difficult versus something like a zoro protocol which here runs on chain and gives you all the benefits of running on chain which is it does not stop our website may that may go down but there are many other websites built on that same protocol so if you really need to interact with it you always can um so what this means is that there is really no further labor or capital required to keep protocol running so as i was saying like if a team did disappear that after deploying a protocol that isn't necessarily bad because the protocol will run exactly as designed for as long as the blockchain will um so this unlocks a whole bunch of new superpowers for as a developer when you're building a protocol like this and then you know importantly changes i think the economic nature of how these pieces of infrastructure run on the internet um so let's talk about like kind of the first thing which is the level of freeness of these um protocols so because there is no uh operating cost i think the default natural state for these protocols over the long term is that they will always default to running exactly at cost so there will be no like you basically just pay the gas costs required to interact with and utilize that protocol and it'll be very very difficult for protocol wide fees to be added on top um because the the cost of fork is is negligible um you know all of these all of these protocols are deployed on public blockchains it can be quite simple to fork and if you introduce a fee you introduce the incentive to fork in a low cost environment um but there are fees in these protocols and there are fees that are very crucial i would say to the success of these protocols and i like to kind of make a distinction between your protocol-wide extractive fees and then protocol-wide expansive fees and expansive fees are basically built-in business models or incentives that can be utilized by anyone um adding value on top of the protocol so these fees like transparent anyone can see them anyone can use them which kind of incentivizes third parties independent parties to build on top of your protocol because they have a built-in incentive to do so and examples of fees like this uh i think like the most notable is probably the euro swap lp fee so this is the built-in incentive for lps to provide liquidity directly to the protocol and importantly that those fees go directly to the lp's themselves not to the rules what protocol and then similarly in the zoro marketplace protocol we have a notion of finders fees where it's like any developer with their own front end or application or their own protocol themselves if they're finding bidders and buyers or people listing they earn fees directly from that and that goes to those developers it does not go to zoro so what this means is that you know the there is an incentive to basically propagate and pro like proliferate this protocol or the product like the hyper structure as far and wide as possible because there's a direct incentive to do so which expands the expands the hyper structure hence the term expansive here um okay another really important characteristic is permissionlessness uh probably a word you hear all the time in in crypto and web three um but you know it's widely associated with a lot of the chaos and adversarial nature of web three two but permissionlessness is important because it means that the protocol is universally accessible to everyone and anyone can utilize it without prejudice there is there is no way to stop anyone from using that protocol and then importantly it also means that the protocol itself cannot be changed so this is like kind of directly related to unstoppability in a sense two but it's that once deployed the operating functionality cannot be warped or changed or augmented um which is you know again kind of like a net new capability that comes with deploying something on a blockchain that creates very important conditions that allow for these hyperstructures to kind of thrive and be adopted um and like you know from a developer's standpoint if you think about like a lot of the pain points of web 2 you know there's no api keys required to utilize or build on a hyperstructure there's no de-platforming there's no censorship there's no ability to be rugged um or you know if you're building a business on top of this thing you basically get the blockchain guarantee itself that it cannot be ripped out from under you which is which is huge if you think about like early social networks or twitter api key is getting turned off or facebook platform getting changed and ruining you know entire companies on a whim that that is not possible in this environment um which kind of you know leads to this kind of state of uh credible neutrality which is you know if you haven't read this essay by vitalik would highly recommend it it kind of um kind of pops out at this point which is you know hyper structures incredibly neutral because they probably do not describe discriminate for or against any specific people or you know developers who are building on top of this infrastructure so the sum total of all of these things leads to this kind of positive sum environment which means that you basically can see competitive actors utilizing the same shared system instead of everyone trying to do it themselves we do not see lps all trying to create their own unit swaps we see all lp's trying to use the same unit swap because there is this like collective benefit uh liquidity effect and network effect that comes from building on that same environment and the fact that there's no protocol-wide expansion there's incentives for them to do so and then they get the blockchain guarantee that hey this thing isn't going to go down or you're not going to get kicked off it means that there's really no reason for competitive actors to fork that system unless they have some new or novel addition or improvement to the the underlying system itself um which uh yeah again the positive environment means you're going to see this like continually expanding network of people who are competing against each other which is kind of a cool property to see and then i guess the kind of big open question and a very like uh timely debate right now is that like okay like if you have these protocols that you know deployed only once there's no further labor costs to maintain or operate the thing and there's no protocol-wide extraction is this valuable or not um i think if you look to kind of like the uniswap um fee switch debates right now i think there's like uh i mean there's two sides there's the side that's like well maybe unit swap protocol can turn on a fee um and that there is enough stickiness to that volume that you know that can be protocol-wide extraction that is defensible and although there there will be an incentive to create a fork that perhaps that the current implementation could um survive that and then there's the other cap which is like well uh the switching costs are very low and it's very trivial for someone to redeploy a version of this protocol and lps it can lps can easily move across like you know this is uh this is something that should remain free but obviously there are other governance controls of that protocol that sit outside of um just fees that are important and contentious to control and that's where a lot of value is being derived and then i guess the reason the nouns goggles are here the announced glasses is that there are now new dow constructions that earn value in treasury outside of any fee extraction or revenue extraction at all it's purely brand based ownership and governance control which may be conducive to actually governing public protocols themselves so it could be the case that you know the uniswap protocol may be better governed by a dow that follows a similar economic structure to nouns if not nouns itself um so we're at a really interesting time which is we have a new type of infrastructure that is kind of live working and operational that changes a lot of the established models of both operation and then also value capture so we're heading into this whole big period of the unknown and experimentation which is like well these things clearly worked these things clearly power a huge amount of value exchange on the internet and very important and increasingly going to be so how do we value and relate to these things and what does it mean to build around the edges which is you know why we're heading into this very exciting phase um right now um so yeah to summarize like hyperstructures they kind of exhibit the following characteristics they're unstoppable they're free they're expensive permissionless incredibly neutral positive sum and then valuable maybe with a tbd uh right here so when building hyperstructures i think there's a few things to keep in mind that i kind of just like copy pasted this from the original essay i wrote but i think they're important to call out especially as we're in a hackathon so if you're planning on building a protocol these are some great things to keep in mind i think one of the the core like yeah i think the thing at the top here is probably most important which is like when you are building something a hyper structure like this you need to be thinking about millions of interfaces not just your own so any any like design trade-off or implementation trade-off that may make it easier for you individually or as a single platform may come up with a trade-off of compromising the easiness of other platforms building on top of you so to the extent you can keep the protocol as generic and as simple as possible is kind of one of the core decisions you should be making the whole time um because your hyperstructure will only be successful if there are multiple platforms and competing platforms built on it not just a single one think about fees as a way to expand and incentivize adoption of your protocol not extract from it it may be the case that you know there could be protocol wired extraction in the future but that's not something that you should be thinking about in the short term in the short term you should be thinking about how can you convert as many platforms and competing platforms as possible to build on this shared infrastructure um and this may be somewhat obvious but if you're building a hyperstructure like the hyperstructure is the thing to focus on so developer adoption is crucial uh maximizing integrations and then you know build that network effect that can like kind of cement your your protocol as the the neutral thing in the default um [Music] and then yeah liquidity is kind of like a core network effect that i think a lot of people um and developers obviously look to um you you may find that yeah there's always an early subset of developers and platforms that want to take the lead because there's no other great option which is good but as you become more established liquidity will kind of be a core measure that the ecosystem will look to to decide if they build on a protocol or not um and then you think about governance uh i would say that the most important thing here is remove as much governance as possible um if you don't need an admin for a thing or you don't require an upgrade for a thing just remove the option entirely because the least the lesser amount of governance the lesser amount of surface area for things to change the more confidence that platforms and developers in the ecosystem have that they're not going to be de-platformed or rugged or run into any critical errors or flaws in the the protocol um and then i guess the the general approach for deploying protocols although it's software it kind of feels more like a hardware development cycle just because you you see these large deploys it can it can be um it can take a lot of energy to you know migrate the ecosystem from one version to another um and then you know you need to go through because you're deploying things one way uh any mistakes will live on forever so it's very important to test and audit and go through public review and and those all things those things all add a lot of time into the build cycle compared to you know shipping something onto a website and be able to deploy a hot fix minutes later you can't do that in this context so it's um it's important to acknowledge that there's a longer build cycle here um and then like the general state of mind is you're building a thing to be built on so this is like that's that's kind of like a simple phrase and thing to keep in your mind as you're as you're building protocols like this you're building something to be built on um it will be eventually used and precipitate up into you know user interfaces and apps and platforms but you're you're building the builders um and like why does any of this matter well it's like well if webfree is you know going to achieve its ambitions of being a new internet then the protocols that are being built right now will eventually be powering most if not all of society's value exchange so if crypto is giving us the opportunity to create this public infrastructure that can be free of monopoly like monopolistic control that's an opportunity that we should probably take and then that is something that we can aspire to and measure against and i think the hyper structures essay is a in definition is meant to eliminate that like one this thing is possible and then two let's like create a shared kind of checklist to actually make sure that we're like holding ourselves to those ideals um and yeah i guess like given their immutable and permanent nature like we do have that opportunity to create essentially civil a civilizational scale infrastructure that can outlast even our own lifetimes given the permanent nature and the unstoppability all of which is native to the internet so we just happen to be the lucky people that get to do it first and experiment it which is kind of wild but a lot of fun and exciting so you know um as you're building through this hackathon like it's good to always remember that it's like well damn like yes there is a lot of complexity i think there's still rough edges and developer tooling generally and you know most of the things that are to be built are yet to be discovered and understood yet so yeah take the opportunity for hackathons like this to think about the most out there version of what you're trying to do and put it out there and you might find people that want to help you do that very thing so cool with that i will end it and then yeah we can go out there and the hackathon and time to start building but yeah i'll pause there and thanks for listening awesome um thank you so much this was a super awesome intro and uh i'm glad that you covered so many interesting things and and also just the framing around how do you actually apply that before this hackathon was really good maybe the most obvious kind of question is like are you able to sort of you know it indirectly answered this thing too but are you able to answer that directly for how zoro is applying all these principles and sort of what does that look like in terms of how you improve the protocol moving forward um yeah i guess like we kind of use this as our launch checklist um so but we one-way deploy everything we do not have protocol-wide fees that are turned on we um yeah like any upgrade has to go through basically a new deploy um so yeah like i think that we kind of hold ourselves to a pretty high standard which can make our build process like pretty painful sometimes but yeah we basically use this hyperstructure checklist as part of our launch checklist so um in the in the essay as well which i kind of um i can i can give a link i kind of use zora as like an example against each of these things as well as unit swap as well because i think that that's the most prominent working example of one of these types of infrastructure today yes well um i don't think i have anything else it'd be great if we can get a copy of the slides and what we'll do is that because we are a little bit ahead of schedule we will take a short break and we'll just kind of turn on some of the amazing low-five beats for everybody to enjoy and then as we ready with the next speaker we can resume with the rest of the summit you 