so hi everyone i'm gonna talk a little bit about the fair ordering design space today so just to briefly get started i wanted to just introduce who i am because i haven't sort of interacted with this community quite a bit so i'm a phd student at cornell and the reason i'm giving this talk is i'm the lead author on the papers that developed the first protocols on fair transaction ordering this started with iquitos protocol which was published at crypto last year and the extension in the permission less setting which is available on eprint and feel free to reach out to me with email um in this talk i'm going to be mainly focusing on a design space and understanding the nuances of fair ordering rather than focus on the specific protocols that i've designed so let's begin basically ethereum is decentralized as people think it is but it's not because miners have complete control over the transaction inclusion and ordering in the blocks that they propose this is what we call like an ephemeral centralization for ordering and this is sort of the achilles heel in my opinion that stops if you're from being truly decentralized or any blockchain for that matter so i'll talk a little bit about mev but i'm sure everyone here has talked before me but i will make one axiom for this talk in particular so almost all of the quote unquote bad mev will come from adversarial manipulation of transaction ordering for example something like censorships or insertions of malicious transactions or reordering user transactions and this is exactly what fair ordering protocols try to prevent trying to prevent this adversarial manipulation of transaction ordering so what exactly is fair ordering at a high level fair ordering tries to say um if there's some property of transactions in the input ordering then you want to guarantee some other property in the output ordering so fair ordering of course tries to um set definitions on how would you take the input ordering of transactions and in some fair way create an output ordering of transactions so just to give one example this is one we had in our paper for iquitos protocol is if most nodes or if all of the nodes receive a transaction m before m prime then m is output before m prime so sort of a first in first out notion so fair ordering at its core is sort of decentralization by democratizing ordering you're taking into account everyone's proposals instead of a single minor or a single block proposal and fair ordering protocols provide a quote-unquote fair way to combine different proposals from these protocol nodes or minors and i'll talk a little bit about what this fairness means in a while but essentially this is the diagram in say a permission-less setting instead of having one minor add on to the next block in the blockchain you can think about choosing a random assortment of minors and somehow creating a joint proposal from which the final transaction ordering can be extracted so it's this multilateral decision making that makes fair ordering more decentralized than just a standard consensus so why should we study fair ordering so fairness in terms so fairness as far ordering defines it is in terms of being beneficial to the ordinary users of the system and improving user experience it's independent of application design so it targets mainly the protocol layer but it can also be accommodated for application design but here's the hot take mev um solutions especially like minimization ones i would say fair ordering is even more general than other mev minimization solutions because it targets the whole broad spectrum of attacks that can be done by reordering transactions or insertions any form of adversarial manipulation as opposed to privacy techniques let's say that defend against attacks based on transaction data themselves or random ordering that can be susceptible to flooding attacks but the cool part is that fair ordering can be combined with these above techniques so they are orthogonal and you can use them in tandem with each other i will make one point though in comparison of fair ordering with other approaches like democratization um as something that's done by flashbacks or maybe auctions in general is that selling to the highest bidder is not in the true spirit of decentralization it's basically centralization with extra steps and i want to illustrate this with another sort of controversial or hot take is there is this notion of mev minimization and democratization or opposing views which is something that i also thought about for a while and there's been a couple speakers today that talked on maybe they're not so um at opposed at odds with each other right you can have a many mme minimization approach and a democratization approach and they can sort of work together but here's sort of my claim is mev minimization is the true democratization selling uh to the highest bidder is not the definition of democratization the true definition of democratization is um coming up with a fair notion based on the joint proposals of uh the miners basically so minimizing mev is actually the democratization npv auctions are just fake democratization with that kind of in point i would like to move to defining what i mean by fair ordering so let's take a step back and try to look at what fairness would mean in an ideal world you know a world full of sunshine and rainbows so i'll argue that if we had trusted user clocks and a synchronous network then the unequivocally correct ordering should be based on the transaction send time so whenever a user sends a transaction it's locally timestamped at that time and that's the ordering that gets put on chain in the final ordering and of course we're assuming trusted user clocks here synchronous network here but um this should be unequivocally the correct ordering because it leaves zero room for mev obviously this is a strong assumption and not at all practical in the slightest sense so what can we actually do so what's a good definition for fairness that um we should use in practice so number one is that it should come as close to send ordering as possible possibly only up to network latency in a non-adversarial network and even in an adversarial network it should be sufficiently close enough it should also provide a good trade-off between the strength of the mav minimization that the definition can provide and of course the efficiency and practicality of the protocols that can be constructed so just to lay out all the designs on this line here you can look at the leftmost side of send ordering which prevents the most attacks but also has the strongest assumptions most unrealistic functions in my work we proposed um two definitions of receive order fairness and batch order fairness which uh prevent most mev and um are slight they have slightly strong like slightly weaker assumptions than standard ordering but still not as efficient as we would like them to be but definitely provide resistance to more mvv attacks and then you can look at other end of the spectrum where you're designing for simpler assumptions or more efficient protocols which other concurrent works have also done which klaus will talk about in the next talk as well i want to talk a little bit about a bunch of nuances surrounding fair ordering that i'll get to in the next couple slides so the first one is uh permission versus permissionless mev so permissioned um permission versus permission less fair ordering so permission or l2 fare ordering uh you could technically have some sort of subtle censorship if the nodes that are running this permission l2 system uh try to go against you so if not done correctly then censorship could actually be a problem whereas permission less fair ordering you can actually achieve true decentralization but possibly less efficient protocols in l2 you can also be more application specific so you can interact with uh different definitions of fairness for different protocols and possibly be easier to incorporate into existing systems plus permissionless is more fundamental but um harder to change the actual design of protocols one more thing i'd like to point out is you should be careful with any kind of mev minimization in l2 because let's say for example roll ups or sequencing services essentially transfer the ordering power from the miner to the roll-up sequencer or the fairness sequencer right so the sequencer you don't want it to have the ability to arbitrarily manipulate ordering otherwise this will essentially move the muv from eleven to l1 to l2 the other thing with um l1 and l2 for ordering protocols jointly existing is that if we have only l2 protocols that are fair and the underlying consensus layer still has um unfair ordering then you could imagine uh this composition between the two layers posing threats to mbv but what might work out in the end is you can have stronger fairness guarantees in the l2 network and some kind of weaker guarantees in the permission less network because they're harder to implement and that should probably be okay let me end with some open research directions and invite anyone who wants to join to come collaborate on fair ordering related research so one thing i like to talk about is interoperability of uh different blockchains or different l2 l1 layers as phil has mentioned uh in his blog post and also repeatedly to me is no one true definition of fairness can exist but here's my conjecture which i think is probably true that kind of answers this is the mev from composition of two good fair ordering protocols so good in the sense as i talked previously on the definition is probably way smaller than mev just of the general composition of two protocols and the idea for this is that the distance between the two fair ring protocols is small as both of these are close to send ordering so if we had a system where uh there's different fair ordering definitions it coexisting at the same time even on an inter chain level and an intra chain level uh still the mev that results of their composition can be small enough so i would like to argue that fair ordering can be used to minimize both intra-chain mev and inter-chain mev and this is of course an open research problem the other thing i'd like to talk about a little bit is rational designs so there are um all the fairness protocols that we know of currently require some kind of honest majority or super majority assumptions of the nodes or minors that they're interacting with so the real question is can we handle all or most nodes being rational rather than just honest so this is i would like to highlight a currently an open problem but it is an unrealistic expectation for example like proof of work and proof of stake is not completely resistant to rationality either for example it's like rational to mount a 51 attack on the blockchain while shorting the system externally and even though this is technically rational we don't see that happening in practice because people don't want to destroy the system and you can use similar incentives for fair ordering protocols to get enough rational rational resistance in practice so i don't think this is really a caveat for fair ordering protocols either the other cool thing is uh the fair ordering protocols are already resistant to non-colluding honest users so not including rational users um so as long as uh the the honest users are not colluding even if they are completely rational and want to work in their own interests it's still fine so for example if there was a bunch of users that wanted to front run a bunch of miners that wanted to front run a user transaction and choose to run a different transaction ahead of the users one the honest users transaction will still get sequenced first in a fair ordering protocol so as long as the rational miners are not colliding with each other up to uh some threshold fair ordering protocols should still be resistant obviously there's more research to be done here but i would say that the lines are promising and that's pretty much it for my talk uh if you want to reach out that's my email address there and i would love to chat with you about um for ordering protocols in general thank you thank you 