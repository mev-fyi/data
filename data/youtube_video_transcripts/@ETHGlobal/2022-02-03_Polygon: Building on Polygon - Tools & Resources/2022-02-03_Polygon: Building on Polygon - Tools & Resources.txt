so hey everybody awesome well let's jump into it because i know it's going to be a busy workshop um so yeah welcome everybody um gm's in the chat uh welcome to uh this polygon workshop hosted by xianggun here from the polygon team uh this is part of the road to web 3 event that's kicking off with hacking tomorrow on thursday but you know we want to make sure that everybody has the tools to do so so i want to make sure we got this in before the event kicks off tomorrow so yeah sean is going to walk you through basically you know tooling how to work on polygon building stuff i'm pretty excited for this one i think sean is an awesome speaker high energy um looking forward to uh him being able to uh to run the workshop with you guys so without further ado i'll get out of the way um i'll stick around if you have any questions or anything feel free to hit them up in the chat um as people are following along um but yeah i'll let uh shawna take it away thanks jacob good advice appreciate uh the introduction um hey everyone i'm shawn on uh i'll be here essentially uh guiding you through a little bit on uh essentially all you need to know about deploying your dapps on polygon um i believe that earlier slightly today uh or slightly earlier today you kind of got to know a little bit about like what polygon is and what you want to do with polygon um or what you can do with polygon from siraj but i'm here to kind of do more of a i guess a technical guide for development so um let's get it started i'm gonna just share my screen really quickly and uh there's not gonna be any audio i'm just gonna be talking through this and uh so yeah um so uh what uh is so you know what's kind of like some of the first steps right um i think some of the first and most most important steps are actually kind of just setting up your environment right um i know that so and actually you know what uh while i'm on while i'm on this page i'm just gonna link this in the chat um i don't think this is like supposed to be like publicly released i think release date is actually tomorrow um so if you check this out right now it's slightly outdated um but this is like kind of like a good resource just in case if you're totally totally new to like web3 development and like solidity coding and uh because i mean that's what we're gonna be basing everything off of um so to uh essentially do anything on polygon um is is super super super simple um and let me just show you right here so you first first of all when you need to go to uh a few a few things um so if you're gonna go just deploy on test net uh you're gonna just need to head to the faucets real quick and grab yourself some uh test tokens so um what you do here and that obviously i everyone here is metamask you use metamask to like um well register for the event uh so uh we're gonna we're just gonna head to metamask here and we're gonna just uh log in and i'm going to copy my account address and then paste it in here uh and within approximately not even one to two minutes just like 10 to 20 seconds um this thing will give me some mumbai tokens if you're using chain link and any data oracles related to that you should definitely also fetch some mumbai link which is uh necessary for if you wanna um you know uh use and kind of uh consume oracle data and kind of use their services um so yeah so now you have that and now that you have this if you want to deploy on mainnet um uh before i get to like the i guess like some more of the nitty gritty uh code base itself um i think you should go to wallet.polygon.technology and make sure just make sure that you have like everything or that you have like funds bridged to polygon um there is a really really simple way to uh like kind of on-ramp on the polygon i'm not sure like i'm not sure if like sirosh talks about this like last session um so i'll just kind of breeze through this and i mean this is really simple anyways but um so you can just kind of hop onto wallet.polygon the technology or even link in chat if you want to deploy on mainnet um if you're looking for the faucet just search polygon faucet or matic faucet i'm sure you'll find it um something went wrong oh gosh but uh what you would do is you would connect uh it would essentially ask you to do a uh a quick signature uh which would essentially help log you in um after which you would um that's interesting so after after which you would uh essentially use a third-party on-ramp service i think that's like the most convenient like something trusted like dharma right uh dharma or um uh wire i think is another one yeah wire um something like that uh to get some uh polygon tokens i'm not gonna spend way too much uh time on this uh because i have some cooler things to show you guys but um this is the third thing that you need um just make sure that you can actually see everything that you're deploying um this is essentially like ether scan but it's polygon scan as you can see our uh daily network transactions are booming which is great but uh here you can just search any transaction hash um or any contracts uh hash you've kind of like you know the contract address that you've uh deployed and then uh it will show information for you regarding the contract so um uh everything that i'm going to be doing from now until then and the workshop will be based from polygon academy the github organization um which i actively maintain and uh it's full of like production ready like daps that you can are not production ready per se but um just really kind of quick uh like skip the boilerplate code uh but still does kind of specific things um starter kits so you can boot up test out play with and uh and yeah um so uh yeah i'll just kind of dive into some of the uh really simple or one really simple one just to show you the real basics to deploying anything on polygon so um these are complete adapts uh but they're not like complete complete as in um they have a lot of things yet to be implemented and they are still uh very open for uh you know a lot of a lot of things for you to implement so uh right here we have just a really really basic uh erc 721 like uh nfc contract right um you can do uh if you want uh other similar contracts uh or other like similar token contracts you can do like one that's governance if you want to also just make your own like erc 20 token you can all do so via these uh things called like the open zeppelin contracts um essentially what you do is after you declare your solidity version you import them into your uh into your contract and what importing them does is kind of like you import like a library from any other coding language um you can now uh do this little thing where you declare your contract but then you put this is keyword which uh essentially helps you uh do this thing called an inheritance if you're if you're a seasoned web 2 engineer you probably know that inheritance is just it just means that you can now use um all the functions that are already defined in this contract on this contract uh on your new new nfc contract or whatever contract you want to make um so this is inheriting the uh erc 721 standard and the ownable contract both of which i'll kind of also explain what uh these do down here so first of all um just kind of get the uh basic stuff out of the way we have we're using a we're doing what we're setting up here is a counter a token counter variable um that is linked to each token id so uh for every counter value uh that we have uh every single mint item call or mint item function call will essentially increment uh token id by one and uh that one will be stored in um essentially where you were using um this counters.counter for like the token counter right like so essentially what that means just your token ids go by like one two three four like every single time you mint your nfc um and here we see essentially the first i guess like calling of our uh erc 721 um you know contracts and what this does is uh this essentially just initializes your nft so this this here this uh this it takes in two parameters your uh nft name and also your uh nfc ticker so if you want like i guess you know an abbreviation for your nfc you know you can have that um and what we're doing here is we'll be uh well we'll be uploading these nfcs to ipfs um and then and then uh having them on chain as well so the base uri for where all the well all the jpegs are going to get stored um is ipfs and uh we also have a we also just have a really quick function um you know called item which takes a uh address to and and uh it stores in temporary memory this token uri so for each uh essentially each contract instance that you boot up um this token ur is just temporarily stored on memory not permanently stored on chain um which is i mean like you can obviously change this if you want to um if you write to if you write this to chain it's going to be a lot more expensive but um this is really really basic there's also uh this other contract here called erc721a that got made recently that was essentially a cheaper way to uh oh man that's unfortunate um essentially a cheaper way to um uh mint nfcs um what this does is it essentially saves you a lot of gas and it saves you a lot of minting fees uh if you want to mint on mainnet um or i mean you could you can essentially clone this also on like polygon because everything may not you can effectively deploy a polygon um what this does essentially it just uh sets only an owner once and then for every single other batch minted nft afterwards you would uh essentially go search back one if there is no owner set so essentially it's just like uh imagine like uh if you were like buy tickets for like a lottery and you bought like you know uh you know what tickets 100 tickets 110 right uh you would only identify ticket 100 as belonging to you but all those other tickets that you've purchased are connected essentially to that ticket 100. um so you can essentially tell that all those others are yours and then if you you know there's let's say there's like a change in ownership um you only bought tickets one to 100 and then there's tickets 101 to infinity right uh you guys get you can have another guy bob own that starting ticket plus however many they want um so this is just really simple kind of variation on how to do this and this is totally customizable um to your own demands um and then what this also does just it's um essentially it just uh has this it calls this mint method which also we got we also got that from urc721 and it also sets uh the token uri and obviously mint takes in the address 2 and the nfc id and uh when we set our token uri we take we set the token url for each id um and cool uh and oh sorry i also forgot it's only only owner uh modification just says that um you know only the owner of this contract can mint nfcs which uh the owner of this contract will be a uh kind of this um burner wallet of sorts that will just deploy your smart contract for you um cool so uh smart smart contracts aside the next thing that you kind of need to know about because uh we have already a lot of like deploy scripts that are already written you cannot modify all of these deploy scripts uh to whichever contract you want to deploy and this is pretty universal um you can uh this uses uh ether's js and what what it does is um essentially you can you can either choose to uh like get a contract like get a pre-existing contract or just well deploy any contract um it doesn't have to be just your collectible.soul it could be i don't know like let's say like if you're doing like a uni swap v1 uh v3 clone uh you can do like i don't know uh uni swap v3 router or something um but hey do keep in mind you gotta list everything that you used previously that are already existing hackathon rules um you know we're not we're not breaking rules here so um yeah pretty pretty great um cool beans so uh yeah and we also have a mint script that is already written for you for this specific nft contract you can also uh you can mint your nft in whichever way you want but uh this and this means uh scripts what it does is essentially it just uploads our nfcs to ipfs um while uh we set well like we we essentially like you know have we we get a contract already that's existing because we want to make sure that uh this contract is deployed before we call this like mint so once you deploy the contract uh you can just um well you can you can you can mint these nfcs uh it'll call this ipfs.add method which comes from the ipfs api um and it will just small it'll just add all of this really cool uh cool uh essentially jsonified nft data to ipfs which is really really awesome so um right that that aside let me finally sorry after 15 minutes of uh solidity and a little bit of basic javascript uh we're not basic sorry i don't mean to not like it's definitely not basic i'm i'm still a learner and this is really genuinely complicated to me um but after a lot of javascript and a lot of um you know solidity um we finally get to the juicy part which is like how do you deploy any pre-existing dap to polygon right like i don't know i guess if you um if you're building off of uh something cool like uh i don't know like uh if you're using if you're using like if you're building off of well sushi's already on you on polygon so i guess not but any other hackathon sponsor um that you want to build on polygon with um you just essentially come over you you uh i'm building on hard hat so this might look a little bit different to you if you're using truffle but if uh in your hardhat.config.js there should be a thing here called dot exports should be the same thing in your uh i think it was like migrations.js um in truffle i my memory is escaping me sorry guys but um what you can do here is you can you essentially it this lists all the networks that you have you you are able to connect to um well you know how do you add a network you might ask well just essentially uh you can feel free to copy a chunk and paste the chunk and then uh modify the network name a little bit to whatever network you want and then uh replace the rpc url with the specific uh network rpc url um as you can see here uh down below if we scroll down a little bit um you have essentially the same thing here on mumbai or polygon um so your uh this is your rpc url what i like to essentially tell or what i like to think of is kind of like the window to the blockchain right um this essentially uh what this does is it takes you're using someone else's node services to like deploy your contracts on the blockchain um and uh you can also specify like what kind of like if you want to pay like a max gas limit for deploying uh any of your contracts um and the accounts part is just uh there is a very convenient uh mnemonic uh up here like account mnemonic written up here for you that's just like a you know like like it this essentially just generates a um a burner wallet essentially that will deploy your contract for you um if if you really do want to sub in your own account though nothing's stopping you um i happen to i i think i mean i think you just replace your the account section with your own account the specific way on how to do that is on hard hat docs i don't happen to remember off top my head sorry um but something that actually is super cool that you can do and you can net some free sponsor clout is i believe morales provides uh speedy nodes and morales speedy nodes are just really really good rpcs um you get it via registering for morales accounts and then um you know just pop that rpc in right in here and boom you're ready to go um you'll be officially deploying uh your smart contracts with morales um very cool right uh sponsored sponsor plug um is this scaffolding though someone asked in chat yes it is it is scaffolding i'm just using this just to kind of like show you um just a generic example of any dap that you might have completed in the past or any adapter you're building off of um obviously your dab my little um and like you know do you also represent like scaffolding them the contributor not you know no no shameless plug here you know do build with scaffolding and scout it's super convenient to build with oh am i and it's fine if if i lag out someone tell me but um yeah uh steal this free speedy nodes uh use exactly there you go um austin austin's awesome shout out to austin hey austin hope you're watching this i appreciate you um but yeah no this is this is really awesome um so um yeah uh if you want to right okay so if you want to i actually so i i know someone also asked in the chat like can you deploy somehow what's like a hardware wallet um i i will admit i'm like a i'm a filthy metamask user and i don't uh you know use my hardware wallet as much even though i should um so you'll have to kind of search up the hard hat dogs for that um sorry my bad um but i'm sure i you know there's there's some tool out there that lets you do that anyway sorry uh went on a slight tangent there i'll just essentially show you that this app works um and then we can go over to some other ones that are also do specific things and kind of like are ones that you kind of need to watch out for um and then we'll hop to one final one that's like a small call to action dap that you can deploy uh very very easily onto polygon okay cool so uh we're just going to cd into basic nfcs folder uh i already ran yarn chain yarn chain you should definitely boot this up first because it boots up your like local blockchain development uh you know environment and then what you would do next is you would do a yarn deploy all right uh sorry just the elevator music is just going to play a little here while uh contract deploys there we go uh contract deploy i am re it says reusing um just because oh shoot sorry um actually before you do yarn support you should do a yarn generate what yarn generate does for you is it generates a yarn account and what this yarn account is is well as i said previously your burner account you can't actually deploy without a burner account because it'll tell you that you don't have enough gas um so what you do is because we're deploying right now on mumbai uh as you can see up here in the uh default network mumbai um you know what you would do is you kind of take this over to the faucet and then you get paste it in confirm get some gas and then you pop right back onto the terminal and then uh i already have some gas but you might need to wait like literally 10 seconds uh but you would afterwards you would run yarn deploy and then after that you would uh run your mint um yarn yard mint essentially would just um you know after you've deployed the contracts it would fire off the uh you know well it would fire off this uh mint item on all of your nfcs here in this mid.js um there's obviously other ways to do so uh to like have a like a similar thing that serves the purpose of mint.js um but uh i you know just kind of showing you that this works also did i just accidentally that's fine i i don't i'm sure i didn't it was just like a split frame kind of thing anyways um i was afraid that i was i showed my demonic for some reason anyways um so uh so okay cool so uh after that we would just you would essentially just boot up your uh front end with yarn start um and then uh while we're on the note of front end uh just well you know if you if you are using essentially you know like any any hooks you know uh so scaffolding what what's so great about sample even why i'm using this is to also demonstrate the fact that front end hooks also work on a polygon um so uh right here we so essentially what this is is uh just a lot of like you know front-end networks i'm sure uh i'm i'm pretty sure austin also had a workshop uh he probably went over this already if he didn't um you know in the front end scaffolding has a lot of hooks uh both in js and now in typescript um yes do use the typescript version of scalpel leaf it's super new but i promise you you'll have a great time doing it um me and a few other friends are actually also using it for a new project that we're building for this specific hackathon so definitely do check that out um but uh right so so the network's spiel here is similar to the hardhat.config.js where you also need an rpc url some of some of these use in fiora i am not like i don't know like i guess you totally can but if you're gonna take something to production you might want to just run your own node um or run your own server of sorts uh just because like if you um you know if you if you if you um use infuria uh for ext extensive amounts of like block queries or you know requests uh you are going to unfortunately uh have to pay uh money so i don't really want to do that so i'm just going to stick with good ol uh arby's url faucets uh block explorer not all in fura infura uh we appreciate you we appreciate you your services are wonderful um anyways so uh there's there's a little bit of that that's super basic and if you see here uh man i don't know why this is not showing for some reason um oh right because what we're going to do is we're going to copy the friend address and we're just going to actually you know what we're just going to make sure to run this again um just to uh right just to essentially make sure that nfcs are being minted to this account instead of my other ones sorry just gonna see quickly into this holder and then yarn and uh that should be it uh so in a small wall we'll come back to this we'll see a bunch of nfcs if you all want one i'll pass you it um that's that's totally fine so that's a super super super basic app um but next i wanted to show off a little bit about like specifically like how do you use like oracles right like how do you use like oracle's um on polygon and it's essentially the same thing that you would have on let's say like covan or drinkability right um where you would there you go oh that's not it huh what happened here all right uh you know but it is essentially effectively the same thing that you would have on um i think i might have pulled up the wrong folder but um it's essentially the same thing on uh you know you all essentially all of your other um you know like you know ethereum test networks where you would need to specify like and let me just pull it up here you know if i don't have it on my local computer i guess no worries um i didn't expect that i thought i i've i've always had that setup i'm just not sure why it's not there anymore um but let me just show you oracle scaffold here it is so uh there's a lot of oracles um especially like specifically also the chain link one right here um you know in this in this little uh little folder here just gonna go to contract chain link vrf uh soul um i'm pretty sure this works for the latest version of solidity if it doesn't let me know but uh the most important thing for you all to take away is the fact that um so most of this is copy and pastable from just the normal chain link site but just make sure that you do actually like replace the link token and the vrf coordinator address um you know for each network that you go on if you're like a web 2 developer need wipe 3 you probably wouldn't know this but um you know there is like there are specific uh contract addresses and token addresses for each um chain unless the protocol has explicitly stated something like uni swap has explicitly stated oh okay like our contracts are literally the same address on every single chain i have no idea how they do that but um you know you would essentially uh switch around the contract addresses for each chain um and just make sure that you have that uh settled before you um you know try to try to uh you know implement this contract in and um you know like when you fire up the constructor for your contracts it's you know like if it doesn't work you know i hate for it to just be because you didn't you know have the right vr vrf coordinator or link token address but um everything else is uh very very intuitive and very similar to what you would do on any other chain um oh shoot okay let me oh man there's a lot of questions sorry guys uh let me i'm so i'm so bad at this at like answering questions while i go anyways let me uh let me try here so uh so i'm so i'm gonna be building slash helping others build um mostly i'll be like you know helping everyone just like generally helping everyone build um because well i'm like hackathon mentoring um and if you go if you all like uh visit me and the polygon sponsor channel there's me and some of my other you know colleagues um you know that that are always gonna be there so if i wasn't interested in all of you like winning i wouldn't sign up to be a hackathon mentor um i would i love everyone here and i love all of your innovation so um do it like take whatever you want to get done onto polygon and it's literally as simple as switching the rpc that you're deploying onto polygon um to have like sub seconds and substance block times and uh gas prices um you know not not scripted uh but yeah uh super i'm i'm very excited for all of your projects and i hope all of you you know get sponsor awards and win um wow you can change contract addresses i'm not i'm not sure like um oh nick from ens is a cool trick for fixing contract not just i'll have to talk to him um okay yeah so sweet uh let's see here what else what else yeah i i'm i'm happy y'all are here too i i appreciate the the uh the solid solid solid audience it's a great sign that i have 60 people in this chat because i know there are more people on youtube uh so thanks a lot for being here anyways let me continue uh going on about uh polygon and how do you deploy any dap on polygon um so just a few resources before i go on to my last staff kind of this call to action like you can deploy this on polygon if you want to um you know so uh if you want to this is essentially just a clone of scaffolding uh that works very well on polygon um i've made sure to essentially i've you know i've tested this out personally uh no one has found any bugs yet with this um thankfully so i guess it works um so if you want to skip a lot of boilerplate code and you want to just get right into like you know product iteration uh do that i've also made sure to convert the typescript uh version of scalpeldeef into um uh into a polygon compatible version so uh i a few friends and i are actively like essentially like working on on the typescript version um i will say though like obviously a lot of my friends are smarter than i am and like they primarily take care of like um a lot of the bug fixes but you know this is a pretty stable version um and uh this has gone through my personal testing it is not bad uh from what i've tested if you do find issues though like the issues button is right there right next to the code button new issue file that immediately um i actively maintain this so i will i will get to it um for sure and you can you can count on me um okay cool so the last step that i want to show you is uh just a really really quick uh crowdfunding dap so um you have whatever super complicated like uh crowdfunding contract here uh which also inherits from ownable but there's a lot of other things here such as you have like you know events um you know so events just essentially uh help keep track of and you know logging all these events just help keep track of um you know like you know state variables and state changes throughout your uh you know the running of your contract um and various modifiers you know before uh you know like some certain uh functions obviously have to be callable at specific times and you don't want people to kind of like call them if it's not the time to call them um importance for security-wise but also uh well just for the actual functioning of your dap i won't go over this way too much um you know just for the sake of this being a beginner's workshop but um as i said earlier uh this is all you need to do to change you know to kind of like deploy this on mumbai is just changes to mumbai um but i will show you i'm just gonna show you the fact that localhost works i'm gonna reserve the pleasure of uh switching this to mumbai for you um right i know right i'm so i'm so kind anyways um uh anyways uh so we're gonna just hop on over to uh whichever folder this was um crowd fund starter uh i think we are oh i accidentally closed that on my yarn chain so i'll just have to reboot up my arm chain and then uh crown fun starter yarn start which will boot up our front end and then cd [Music] i probably didn't have to see the times i could have just pressed the up arrow but you know uh i i i do i do what i do um uh so so we're gonna just deploy this really quickly uh it was deployed um and the uh our various artifacts like your the contract address and your contract abi um we're all saved to this uh artifacts folder um which is uh which is pretty cool um yep so uh if we just hop on over here to the brave browser yeah which is my default browser um i i've had so many people essentially tell me like yo like why are you using opera i'm using i'm only using opera because like i've used stopper for like two years i i promise you i'm trying to migrate um anyways that's um besides the point but uh just to really quickly wrap it up this works on uh on you know the local host um i'm gonna leave it up to you to uh swap this on over to polygon um i'm just going to speedrun this real quick i'm going to send myself four e supports um and then this actually works you see both locals transactions were sent um this works perfectly fine and uh yeah uh so it's up to you now to essentially deploy that to polygon uh polygon which is uh should be pretty simple and if you want to test your if you want to actually take this to kind of like production ready levels um and i think maybe something that the judges would really like i guess is if you try to do some unit testing um or started to write like smart contract tests for your various contracts to make sure that like when you do deploy them um you know that they're completely fine and they're then you know they work so um you know you can write tests on a hard hat and you can also unit test via this thing called echidna uh which is very very useful um i uh am like a novice at this but getting better um so we can all learn together on how to uh do this um the installation process is rather simple just you can pull it through docker and you'll be fine um or you can i guess like install the like the install this to binary install this like from the actual tar you know you know like the guitar ball um that's fine too and there's even a in a kidney tutorial that i'm going to link right now in the chat if you want to learn how to uh fuzz smart contracts um to take things to production ready levels now obviously it hit myself not enough gotta do things like manticore as well for uh you know like an extensive test but um that's where i'll leave it for now um i think this is a pretty good uh kind of place to stop let y'all ask questions before uh i'm having to uh skadash um you know uh so you learned today essentially just how to deploy any any single dap out there in the universe uh to polygon um if you have any specific problems uh for your specific dap or your specific use case uh let us know in the uh sponsor channel we will be sure to attend to that um and uh i promise you deploying and building on polygon proof of stake is one of the easiest things that you can probably like experience um you know and i put that i'll put that next to deploying on some of the other uh you know l2s and whatever any l2 that you like uh because this is a transferable skill like uh because i guess all the other uh l2s and you know like optimism and arbitrary also going for this sort of like evm equivalence type type of spiel where uh they try to minimize the amount of effort that you have to go through to deploy your dap onto polygon or onto their l tubes and uh kind of their deployment process is somewhat similar but that's kind of besides the point the point is it does not take any effort to deploy on polygon and you should totally deploy on polygon it is an absolute no-brainer it makes your dapps that much better and it's just great it's wonderful for testing and for production thank you i will now take questions and let me know if i went like a little bit too fast you know towards the end uh but uh yeah i i would love to take any any questions from the audience um on anything related to i don't know from solidity development to uh deploying on polygon i appreciate the kryptonite thanks and let me once again let us know if you need help one shong on token see that's the funny thing i uh like i i had one i had a dream one day right i was like i got rich off of building this like big clout clone but on ethereum um i don't know just just an idea for myself out there i'm gonna i'm gonna try to get that thing done you know and when i when i when i release shanghan token i'll let you know is there any technology that enables people without a metamask wall to use any dap you don't need a metamask wallet specifically you can use a hardware like ledger to interact with any dap um or you can use another wallet that's not meta mask um but yeah like metamask is pretty convenient you can sign messages with them and all that i guess if you i think if you if you boot up your own local guest node you can try to like send transactions to mainnet via like your cli or sorry your your terminal um you know you're kind of like your guest client cli i guess um i'm not i'm less familiar with that though i'm uh i've i've had the luxury of my mask and i cannot go back i cannot um no but i think no but guess no it's probably better yeah i thought no no it's actually better so any idea how to fetch all the erc721s been done on polygon good question uh openc.io is your answer uh go to i think you can go to testnet.openc.io or something like that um i think when when you like go on there with uh your wallet switched on to uh mumpi i think you can go like mumbai.open see that oh darn okay anyways i don't know the link um just go on open c open z is the best place to query all nfcs deployed um or wearable you know wearable great um you know like yeah or uh super rare whatever what have you um no experience coding for blockchain applications was a good place to start learning we learned some art in college uh okay sounds good so uh start you can start forking dabs here uh to start kind of like deploying them and then kind of starting to make the blockchain more real for yourself first that's what i did at least uh go to crypto zombies um some of my friends are building the version two of this but this is good for civility development and the last finales polygon academy uh has good resources for if you're completely new to web 3 development how do you burn nfcs um send them to the os 000 a lot of other zeros address and uh i think that is a great way to burn nfcs uh send them to the zero address and uh you'll be all set and if you there is some sort of like guard that you know tells you that you can't send it to the uh to the xero address i guess keeping it in your open ceo doesn't hurt um so but yeah i mean that's just one way that you can do it so literally latest version okay uh yes depending on what solely version you learned there may be breaking changes uh so for example if you're really good at like point five and the facility right now is like like point eight you might wanna try to use point five um or find contracts that are compatible with point five um which is a bummer i know but i mean unless you have the extra time to like go learn 0.8 um or go and like see what breaking changes you you missed through 0.6.7 and 0.8 um you know probably the best to just uh use the backwards compatible version uh covalent is a good thing yes covalent covalent can fetch nfc data using their api um covalent is good yeah they you know they they integrate with axios uh i think you might be able to play with them on postman i think i think you'll be fine alternative stopency i just said a lot earlier uh should we expect to have or to need to have deployment automated for our projects to put uh you don't have to no you don't you don't have to have it completely done man you just um i actually in the past um not only just speaking as like a past contestant kind of perspective but also a person that's also like i guess uh done hack found judging like support um it is perfectly fine to show something that runs on your localhost as long as your pro your contracts well your your dap works as intended um you know if you we totally understand if you need to like do testing and like all that jazz before you deploy the main net um the cost of deploying the main net is a lot less than what you would have on mainnet but we totally understand uh do you need a back end that backhand is just your smart contract um no worries and uh uh so brand new to dapps go and check out the various resources i've learned that i've linked and asked a question a lot of questions we'll be here to attend to them and yeah uh we i don't think you this hackathon is totally like beginner friendly i actually my my very first hackathon and one of my first validity learning experiences was actually here um so i love this community and like if you're a beginner you're totally in the right place um so newbie here uh how can i edit nfc metadata edit nfc metadata by uh before you uploading and you upload them to ipfs just set them up um i think that's the only way i would know uh sorry just trying to speed through questions here um let's say a smart contract deployed a bug in it uh i would strongly suggest writing and auditing as much as possible before deploying to mainnet if you deployed mainnet with a bug that's going to be a big issue um so don't do that uh i would strongly recommend not doing that uh just just test thoroughly and we don't mind if we do not mind at all if this is not on mainnet but if it is on may now you can earn a few bucks by selling your nets i guess um skill set uh web so javascripts uh uh reacts js library uh in a few other libraries like ethers um solidity if you want to learn rust i i guess that's great go is really really good to learn um yeah just uh check those out typescript typescript's also really good um i don't obviously i don't i obviously don't know all of those but um those are really good to learn um and i think that'll take you like a solid year or two to learn um or take me as well uh so if you don't employ you don't have to deploy it on to ipfs is there any tech that helps user adoption for those who do not have any wallets uh is there any ways oh yeah that's a bummer like a burner like a burner account like a guest account to like interact with any dap i don't know that could be like someone's hairathon idea or something i i don't think there is a uh you do need a wallet yeah i don't know i i personally don't oh yeah uh i don't know any like methods to do that without a wallet like that's the thing you know like the only way i can think of it is if you try to finagle it through like your local guest client and you try to like send transactions or something but like dapps i feel like you totally like unless you want to interact contract the contract level i you're gonna need to use uh wallet to access the front end um do you need to play pay gas yes but very little i think there are like there's some things about like meta transactions that like essentially it's like oh you don't have to pay gas for like i don't know i i'm not too familiar with that i just say get a little bit of polygon literally get one dollars worth of like maddox tokens and you'll be literally set for like an entire month um i promise you that uh i mean obviously depends on how many times you iterate but yeah um you'll be pretty set uh cool that's all the questions for now um i know i'm running up a little bit on time uh do i have some extra time to answer more questions or i don't know jacob what are your thoughts i don't know maybe two more minutes yeah sick nice awesome so do services you on my way thank you thank you um i'm just i'm just playing um not guys i so i think it's i don't think it's worth it if you're here like if if you're literally here in this zoom call or if you're watching on youtube and you've decided to take the effort to watch this video i do not see why do not either already have metamask or are not planning on getting metamask um or any other similar crimson wallets um because uh well unless you want to go into the more complex method of interacting contract to contract or like get client to contract which i don't personally really like know all that much how to do anyways um like it's just so convenient the setup process is super convenient it's pretty safe like it's a good like user experience like 10 times boost makes your life that much easier i i would not know why you don't have metamaster you're not planning on um unless if you're doing so for like privacy or like i don't know like decentralization reasons even though like they don't really take your metamask um count it's kind of your wallet so uh i yeah just get metamask it'll be good um for data generated in a damp uh maybe annoying and expensive so any data on chain storing data off chain can be risky um you can always try to optimize for like gas so uh for example like as i said slightly earlier i don't know where it went but uh yes here it is so um there are various techniques to minimize gas used and uh i'm just gonna show off one really quickly here if you index your uh uints that is a really easy way to like not incur so much gas cost um if you uh store uh variables just because of how solidity memory works if you store variables to memory instead of storage and not like writing so much data on chain onto the chain itself um you conserve gas lots of ways to conserve yes um that is more complicated and more nuanced do you work really long hours no i i i mean i don't know that long hours is like something that's long for me is like not probably long for you or maybe a longer you know like you know not as long as you i don't know i you know um i'll just move on to the next question uh when you write a smart contract that is it okay to call a view only function to save gas um uh i don't see why you would go through the extra step of calling the view only instead of just writing sorry that i just that just doesn't really make sense to me because i'm like why would you i guess in my opinion it's like why would you because if you view right there's got to be some sort of thing already written to like temporary source department or permanent storage um you know so like why would you i guess like unless you're trying to query someone else's data which you can do so via like an oracle pretty easily and gas i promise you guys gas is not a big concern on polygon just like because literally deploying any dap or any smart contract on polygon literally costs typically one cent or 10 cent max like it is not it is not very expensive at all so don't worry about that so much it's this is like super beginner friendly you get what i'm saying it's not like it's like ethereum maintenance um all right great i'm just gonna rap i think i've answered quite a lot of questions uh feel free to hit me up later yep awesome thank you sir appreciate you taking the time to walk through that and that was great um and yeah i mean of course everybody here if you want to watch this again it's going to be immediately available on youtube right after this um and yeah tomorrow is the official kickoff of the hackathon so uh don't start writing code until 12 p.m eastern tomorrow but you can start thinking about ideas start thinking about kind of going over the workshop you can start playing around with you know writing code for the first time of course um as long as you kind of start fresh later on uh but yeah thanks everybody for coming out and uh yeah catch you on discord thanks for hosting jacob thanks for you know 