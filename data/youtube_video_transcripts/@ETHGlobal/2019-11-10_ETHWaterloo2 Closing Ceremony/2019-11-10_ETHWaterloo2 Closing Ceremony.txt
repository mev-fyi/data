hello hello hello whoa I don't know if the claps for finally somebody talking here or because it's it's been great and it's over so well thank you so much for being here I am super excited my face may not show it but welcome to the closing ceremonies for eighth Waterloo I'm Karthik I'm on the eighth global team here and we are here so I wanted to kind of move things fast we talked about how global has been for us in 2019 and I wanted to share some stats about eath Waterloo specifically we had over 800 people apply to attend these hackathons out of which we had a little bit over 250 people get accepted and stake and we had a lot of walkins and this is the number of total attendees that have hacked here this weekend and the way we kind of measure our success is we actually categorize the experience levels for all the attendees and we kind of try to try to track how many of the attendees are new to the etherium versus kind of how they're advancing and progressing on how they self quantify their own skill sets this is this has been an interesting mix where almost half and half have been new to the theorem relatively new and want to give a special shout out to the 22 percent of these attendees who had never done anything on the web 30 world until this Friday so congratulations you did it we had 65 projects submit this weekend this officially makes it over a thousand projects submitted total over the last 14 events they need global and I'm so happy that we're going to hit that mark and our judges did the hard job here of reactions our judges kind of talked to every team and if you if you were part of the judging process or as a team everybody presented to two different set of judges and they kind of combined this course and we normalized to get these five top finalists for each Waterloo so congratulations to sheet coin eight p2p Voight DC Wallach while I'd notify and in action all of you I suppose are in this room already if you are one of these teams just raise your hand I'm going to make sure I have a visual reference that's as perfect we're gonna go in this order will have sheet coin up in a second and then each p2p void after after she coin please line up I realize what I'm saying please come on that corner to just kind of be ready for your demo as as the next team moves along and just to kick this off please welcome sheet coin all right thank you guys for coming my name is Sonny developer and also professional crypto troll I'm Brent I worked on strategy at cosmos tender but howdy my name is Billy I'm the founder of clovers Network can I get some screen up here I don't know who's in charge of that I plugged in some things flashed any help cricket up okay cool I think I know what to do you want to start them off all right all right so you know Facebook is going on right now like trying to you know take control of the entire block chain space with like Libra and whatnot and so we've thought that you know the best thing to do is fight fire with fire so our goal is to help Google take over the entire block chain space and to do this what we've done is we've built Google sheets as a side chain to aetherium a trust minimize or trust minimized sidechain to aetherium and you know Judy's been talking about this for a while and so we decided to make it a reality I know it sounds funny but you know I think this actually is a huge UX like piece like you know we can do a lot of cool stuff with it which will walk through tape so Billy can start off the demo third try alright so here we are beautiful Google sheets at the very top you can see we have this beautiful new addition the sheet coin so let's start this thing off by moving some coins onto the side chain from aetherium we're gonna deposit how many should we deposit I don't know maybe four okay what's gonna happen here I'm gonna send it to somebody I'm gonna send it to myself and look at that I'm using their email address because normal people have email addresses let's make that happen we're gonna open up a page here we have a traditional web three because I'm moving stuff from a theorem which means I already have some stuff on aetherium that's right I'm gonna move for try to make this happen a little faster and confirm cue the music okay as we win for the deposit so we're looking at this project you know we've seen things like this in the past burner wallet you know was was implemented on a PLA network sidechain you know this is using Google as a sidechain basically you know there's over a billion users with with Gmail accounts and these these Gmail users can essentially access the blockchain via these sheet point tokens so now that I have some Sheik Cohen's here why don't I send them to somebody else how about myself on another email address love having so many Google accounts is that right yeah alright so you'll see that that person doesn't exist yeah we're gonna make them I'm gonna send them how many do I have before I'm gonna send them three okay so we're gonna sign this transaction and this is where the magic happens this is actually Google signing this for you so Google is pretty good at keeping things secret holding on keys they're also pretty good at allowing you to do things when you want them to so we actually shove in some of this metadata into a nonce when they sign on your login usually they just try to sign a nonce to prevent replay but we actually have them sign our intentions as if they really were handling our private key and signing transactions once that happens it goes through we verify it and we're allowed to update this balance we're now Billy at tenorman has three billion camp has one that was very fast these are all LOC you can see like a proper blockchain we have accountability all of our transactions and now let's think about withdrawing so I'm here I want to take my three out when I withdraw my coins all three of them I'm even gonna withdraw them to an ENS name and so it'll go ahead and once again you sign it with OAuth again and then what we do here is we sign it as well from our server saying that or not our server the sheet has a private key environment variable in it and it signs using that and kind of verify that's as I trust like an Oracle here but the key is we don't want to be able to steal people's money and so what we do is on on the etherium site we also verify that the user did make a request to withdraw those funds so we actually verify the oaah signatures on aetherium so these are RSA encoded it's expensive but you know people love sheet coins so much they're not gonna withdraw that often anyways here you can see the transaction is pending its outgoing we're gonna say yeah we want to actually submit it to the ethereum blockchain if something were to mess up here you could go back somebody else could submit it on your behalf or you could try it again this contains all the parameters necessary finally we can go back into our web 3 connect and make this thing happen think of my theory imbalance is zero but I'm gonna hopefully increase it by withdrawing these three on two main net just kidding this is rinkeby confirm be a little bit faster hopefully another drum roll but I'm put on put them yeah and like I said so you know it verifies the OAuth on chain and you have coins back on aetherium [Music] [Applause] and what we've done is this is actually an open API so the wallet that we've built into the Google sheets view it's just one wallet but we actually built a second web wallet with sorry anyone can build a wallet as long as they you know import the Google API for Google Authenticator you can make your own wallets for this and let's see what else and there what's the future you know right now it's for a single token so one sheet is for one token I think we can do many more and more tokens on one chain maybe on different tabs so it's we essentially have like full sharding going on right there and the other nice thing were the next another next step would be native sheet coins so currently all the sheet coin has to originate as an RC 20 on etherium and come into seed cone it would be nice if we can have native seed coins so for example like you know a cap table right it can exist exist natively on a Google sheet but then you can take your shares onto aetherium and trade on you know so up and then bring it back onto the cap table so yeah that's it thanks very much I was awesome next up I'd like to get eat p2p void on station and I'll have DC wallet over there on Jack please welcome eat p2p void [Applause] [Music] we're having some cable difficulties so give us about 30 seconds somebody from the a/v room we're trying to get an HDMI connector if you can have that for for this that we create nevermind I just figured out what's going on we're all set what's going on cool hi my name is Ethan and I made a p2p VoIP or as my friend called it et phone home so the inspiration is that I hate getting spam called and I one second okay I hate getting spam called and I wanted to put a barrier between myself and the caller and have the caller pay a price that I define so I wanted to create incentive for me to pick up because otherwise I just get a bunch of calls and you know I can possibly get scammed I think it's a terrible idea that phone numbers are a source of identity so why not use another such as the etherium address I wanted to get rid of providers that sell your number your data etc I wanted to get rid of sim swapping and I wanted to see if I could make phone calls using an aetherium address and I wanted to put at the end of the day more control into the receivers hands so to give an example of how easy this is to flood somebody I'm gonna flood my own phone please don't call me I know my phone number is on the screen but right now I'm just gonna call myself and I can just keep calling myself over and over and over again and I can do this with anybody any phone number and it's really annoying and so at the end of the day this costs less than $20 right it takes me take me like 20 bucks to like fill the account and then it takes sense on those 20 dollars to like make these calls and need to do this so eath p2p VoIP effectively allows you to call in aetherium address now let me explain how this works there's a few rules that exist here so everybody is blocked by default all right that means that all users have a default price that they pay when they enter which is everybody from the start since the hash that has everything that's two to the power two fifty six minus one so that number is 1.15 times ten to the 77th which you probably don't have so everybody's blocked by default and user a defines a price for a token they are willing to accept for so that can be tea cab that can be wet that can be dye can be anything and I set that price then there's a caulis so that call list allows to define who can call you for free so if user V calls user a and user B is not on user a's list they pay user a's token price if user B calls user a and user B is on user a's token list then it's free that call is free excluding gas and at the end of the day if I have user a miss a call then the amount that otherwise would have been given to user a is actually refundable or actually able to be withdrawn by user B so you can think of it as like a phone booth you put in the money you make the call but nobody picks up your money back okay so let me demo what this looks like one thing to keep in mind you're gonna see two things here the first thing is that the test is going to show what it's like to call somebody that you otherwise don't have access to call as in they haven't defined their price meaning its max the other thing is you're gonna see me calling myself because I did not figure out how to change and then like accept a call for myself on the same it was really weird so I'm just calling myself so when I do connect my machine will bug out and like scream so I apologize for that but here we go so another thing to note here as we're waiting for this is that the actual VoIP server is decentralized its p2p effectively like I to you directly I don't use Twilio I could have used Twilio and rotated the numbers but I did not I kind of went the extra mile and just decided to use this peer-to-peer service so here we'll see that I try to call an address and that output is to show that that's the max amount that I have to pay at e-cat in order to do that so the tests pass by showing that I performed an invalid call and I wasn't able to actually call here it's actually calling let's see Oh looks like I won't be able to show you the voice maybe if I okay well as this is happening the account actually the contract actually acts as an escrow so you'll see right here there's a balance of 100 that's in T CAD and after it's answered then what will happen is that I will withdraw that amount so this should actually go back down if it's been my there you go so the escrow is the registry contracts the funds are put in then they are pulled out I would like to unplug this and actually like show that it did do a call because otherwise you're kind of just looking at the terminal so I apologize but let's see what happens let's see yep so that's that's the thing [Applause] so I only have a few things left here which is that's I kind of like this project I'm not really sure we're like where I want to go with it but there are some other things that might be interesting to think about here which is that I could choose a better encrypted VoIP service which means that like you know right now it's just like something that I like got kind of modified and used which means that you could do like browser calling you could put in a meta mash snap and effectively call somebody through meta mask and I'd also like to build out like a utility that right now it's just a contract it's been extracted away but to do all that through a utility unlike the front end that facilitates that would be great it'd be cool to have some better mechanism to determine what a call ends so for example to have the actual app be the Oracle that determines that if a call was or was not taken that would be really useful and then also the thing that I think is probably the most compelling is creating a dynamic pricing scheme so if you're popular like vitalik and you get a lock phone calls or something like that price just goes up and then you know if you're not then it goes down and it changes dynamically anyways that's et phone home he's the b2b eVIP thanks [Applause] you can't wait for a surge pricing on my phone calls it's great next up we'll have DC wallet and now I'll have wallet notify be on deck please welcome DC wallet [Applause] who else had a nap with their eyes open today okay for our projects what we tried to do is we tried to take all the amazing things you can do with smart contract wallets in the backend and the new technology that came out with meta masks with the snaps plugins and we tried to connect those things together hey Cammy oh sorry do you guys share what I said before okay okay good so essentially for the user the experience is it looks like meta masks like you're just interacting with the account like it would normally but in the backend because you're dealing with a smart contract you could do all these amazing things so when the use cases we want to show today is what happens when you when you die what happens to your crypto and it's a difficult problem to solve so we're trying to deal with that custody problem in this particular case with the plugins and with the smart contract well to the backend the possibilities are amazing but we assure you this use case and a couple other things all right I'm gonna just go over and show you how it works actually so you can think of this page as kind of configuration but it's not add up it's like conflict page four for your meta masks plugin so you connect regular way to meta mask then the plugin is going to ask for permissions we grant those permissions and then we click create and what is happening right now we are actually creating a custom account inside the meta mask then we are deploying a smart construction wallet on the blockchain and we are using the address to set that that account inside meta mask and as a audition we are also adding two tokens for convenience of the user which is us DC and alright so now you can go to meta mask and you open your wallet and you CDC wallet so this is actually a smart contract but you can use it the same way as any other another account so from the user perspective there's literally no difference except we have to have just gas but other than that it's literally the same thing and the nice thing about it is also that this smart contract it's actually supporting generic transactions so basically it doesn't really matter if we are sending it or if we are sending us DC if this is you know just a transfer or this is a compound and I'm just making an investment and getting see us DC back it really doesn't matter it's it's all working the same way so I want to show you one of the things that we chose to add to this mark on check wallet which is recovery so I'm going to put my default account address and I'm going to put 120 so what I'm doing right now in actually I'm sending transaction to my smart contract that is saying if I don't do anything doing next 120 seconds send all my assets from my wallet to this address that I just gave you and the only way to to postpone this is click I'm alive which resets the clock well obviously no user is going to do it because they're probably going to forget about this page after first setup so basically you just can use your wallet normally like everyday use you do transfer you do yours each one you can go to your DAP you can go to your decentralized exchange and basically every single time that you'd do any action whatsoever you send any transaction this clock is going to reset did it reset oh no it didn't because I didn't send from the right account okay so let's try again points one okay now I'm using this a wallet so that should work the moment of truth yes okay all right so and the last thing that's that I want to show you is what happens if actually we hit the limit what happens if we put like only 16 seconds so we don't have to wait too long and we got the wallet we go to this wallet we have 8 we have C and 1 0 okay we got tokens we got us DC we get actually we didn't have any ticket so that was before so you go to DC what what it's 0 this is 0 and if you actually noticed this set recovery address button is sending a transaction to the blockchain but there was no confirmation and we can do that because each metal mask plug-in is given its own private key that can manage all those smart contract accounts from the inside so basically we don't really have to ask user for any permissions or any concern any confirmations it just works obvious saying that we could add here probably some of you notice that we are pre-funding the wallet and we are also Pro funding with eater and we are preventing with with the years each one it's oaken's so what happens inside is that every transaction is actually sent by this internal private key that is an owner to the DC wallet and this private key action needs to hold some kind of material to be able to send those transactions so what could be done very easily is support of metal transactions that from that moment the DC wallets would be able to pay for himself and at this point you could use this wallet as as any other material account so that's all from me I think to add alright thank you thanks guys next up we have wallet notify please welcome well notify on stage my name is Roman this is Ross Tom eagerly and absol wait for us to set it up and we made a way to send rich text personification to with um addresses so alright cool so 10th if occasions are pretty ubiquitous it's hard to imagine how to you know live without them but just some of the use cases are defi so when you're about to be liquidated it's nice to get a push notification and a lot of the times the only thing that the dab has is your wallet address ENS could send you a push when your domain is about to expire all kinds of dowse have this fixed voting periods where you need to show up and vote and actually there is like a fourth bullet here it could be used in upgradability so before your whatever dub that you're using gets updated you can get a push so that you can get out if you don't like the update and the implementation is pretty simple actually all we do is we wrap all the data we need for to render identification and we put it in the transaction data and then we send that transaction to the wallet of the recipient and as long as everyone does is in the same format wallets can identify those types of transactions and treat them as notifications and show them in a different way give you like a badge count or in case of trust they could like send you an actual push notification and in general wallets usually have some kind of way to reach you and they can isolate your PII from everyone else so for this hackathon we build four things we made a draft for the standard just to so that everyone kind of formats the data of the transaction in the same way we made an MP a.m. package that does exactly that so that you don't have to go through the standard and we build fronted that uses the NPM package to craft those notifications and set them to wallets and then we made a fork of Mara mask and we changed the way it displays transactions that are the notifications and we'll show you a demo with like the front-end and the meta mask so hold on for a bit these are like two different browsers one of them is brave and the other one is chrome so we have two different instances of meta mask and the one on the left is a meta mask fork so this is just kind of like a Gris that lets you craft an education and you can set your address of the recipient which will select from the other window so set the text send set the text message that the only that's the only required field you can sound like the thumbnail for your education think of it as a logo and you can set like a click action so whenever somebody clicks education in either opens a URL or you can put things like idiom address amount and calderas so that you can craft a transaction whenever somebody clicks on education so for example you can get a quest to extend your E&S the main and then when you click notification transaction screen slides out and you're done in one click so let's try sending well so within this transaction this is your eath transaction but inside the data the the payload is formatted and in the way that the Wallis will recognize so I'm gonna go ahead and send this transaction and you can see that it's pending over here and once this is confirmed it should show up over here on the left side and this is our fourth version of meta mask which recognizes those notifications rather those transactions as notifications and handles them differently so while we wait for that we would have hoped for this to have been sufficient inside the meta mask plug-in API but it wouldn't necessarily work with the functionality that's been exposed right now so we just went ahead and forked it and hopefully this shows up soon okay so the transaction is confirmed and it's on either scan as the data it's not here yet all right there it is so this is the message that's embedded in the input data this link is the one that we set the action to and as Roman mentioned this action could actually trigger other things other than just opening a URL like it could initiate a transaction with a preset preset properties of like payment amount and address to send to and things like that and yeah yeah sure so like the next thing that things that we can add do this like in this shape and form I think this is going to be already pretty useful for a lot of use cases but on top of that we could add a relatively easily a message encryption because we know the address of the recipient and we can get a public key out of it as long as there were some transactions there and encrypted we could send an encrypted transactions to multi-sig worlds no problem but with encrypted transactions represent identifications is it's tricky because there's no key and there needs to be a way figure it out for that to work and also I think like the killer way to use it would be to integrate with something like a trust wallet or some kind of app that has access to your actual APN the allow that can send you like iOS and Android push notifications so like this way you sanctification to adhere matters and the person receives it as a push notification from their wallet on the phone oh yeah and this is all this all gonna work only as long as people agree on the format so we started in and yeah ER C and we hope you guys go check it out and comment and we can agree on the way we format things and then yeah just go there well notify we have telegram channel set up during the conversation thank you and our final demo for the weekend please welcome connection on stage all right hi guys we'll keep it short we basically they basically did the pitch for us we're basically basically enabling communication to smart contract addresses as well as ENS through our platform in a decentralized way yeah so the use cases would be the same we just implemented it in different ways so our thing likewise it's built around a meta mask plugin in which we prompt a user to install before they can use our service so we're all familiar with this step I actually messed up my password permissions login and all I would have to do to send a message is put in an e NS or put in you know just your regular address so let me do that and all I would have to do is hit Send once again meta mask pops up and there it goes so it should pop up in Darcy's meta mask and it would appear right in the native meta mask UI so hopefully she gets her screen up before the transaction actually gets mine so we can see it popping up okay yeah and the way we are loosening for these transactions and showing them is with diffuse oh okay a popular just-in-time so what the fuse is doing is alerting us of all the events that the contract is emitting and we pipe the relevant ones to her clients so this website and the meta mask plugin so if you could just click on the message so there was my message easy as that so I'm gonna demonstrate our other feature which is actually called broadcast so broadcast works in a similar way to messaging except this way people can subscribe to us or to your address and whenever you send a broadcast anyone who's subscribed to you will receive that message so Ryan here is subscribe to me so I'm just gonna send the message to my friends and then Ryan should receive it and so actually after we resolved the ENS we take the sender address the recipient address and the message and then send it to ipfs to be hashed once our returns we then send it to the smart contract to push it to the blockchain so yeah we're still waiting for the broadcast we send and it shows up just like a message [Applause] so I'm gonna talk a little bit about our tech stack and how exactly this works so obviously we use IP FS for storage we use diffuse for streaming events from the smart contract we use meta mask plug-in as the core also we sort of hacked around like we didn't fork meta mask like those guys so we sort of hacked around your asset list so this is the place you'd usually see or ERC 20 tokens so we kind of made a message token it's sort of hacky but every single message you get is a new token and the it has a URL attached to it that you can just click on and it'll go to our website with a hash parameter in the URL that allows it to resolve from ipfs challenges are also quite similar like we haven't done encryption yet because meta mask plugins well we can't access their private theoretically the user would have to enter it manually to decrypt it and that's kind of bad UX so we just skipped it over right now and lastly I guess like huge shout out to Dan from meta mask I don't know if you're here right now but thank you a lot like he was up with us to like 5:00 in the morning helping us get this work this thing yeah I also want to give a huge shout out to chickpea curry for literally powering the creation of this hack so without them it wouldn't be it wouldn't be possible cool I think that's all please give connection and all five our of our finalists a big round of applause whoo [Applause] one of the most interesting things I just realized is that actually first of all those were only the five finalist projects there's sixty more that were made this weekend and I highly encourage you to check those out at Waterloo to oppose calm obviously we couldn't show all of them onstage here but it's incredible that we're seeing all these cool cool amazing sort of problems being solved and kind of that the most obvious thing we just realized was that I would say like all of these things are forcing us to make things ready for millions of people to come in and that's just incredible to see here this weekend so congratulations again to all five of the winners and we'll move on to the next part so those were some of our finalists what I want to do now is that a lot of a lot of teams and a lot of you guys apply to a lot of the sponsored projects so I'm gonna have some of the sponsors come up on stage and and talk about who won and those prizes so what I'll do is all the sponsors you know who that you're coming up just come onto this site all together and we'll kind of just swap mics every now and then or after every other person will grab this one as well and and I'll start this off with Sean from Fort mattock please welcome Sean on stage [Applause] yeah I wish we had enough money so we can fund a lot of awesome projects but it was really tough picking the top three so we made a last-minute change to pick four of them and then kind of adjusted our bounty so yeah the grand prize winner is 20 25 hundred Canadian dollars in dye and and that goes to Nia he's absolute beast solo the entire project he was very patient with us iterated with us on improving a lot of bugs and from he he actually depicted the perfect story from earning crypto getting users into the ecosystem and actually integrated formatic into the noses safe providing like smart contract wallet and also connect that to the entire DeFeo ecosystem and even added a three box identity so that's a really good vision to what yeah he's connected all the thoughts and [Applause] [Music] [Music] [Music] [Applause] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] 