[Music] [Applause] [Music] okay uh hi guys uh hello i'm shubham from web3 auth and we will we build key management solutions as a service uh so yeah let's get started so the motivation for us to build this is the number of f3 users active number of website users we have signed up in past couple of years have been rising exponentially we have hit more than 100 million users uh or keys active at some point in time uh so the current d factor solutions uh don't fit the use cases which still requires us to scale from 100 million to a billion users or more than that the key management part is hard the key management uh because currently the wallets that are de facto which are let's say chrome extension wallets use a seat phase flow and it requires users to back up the seat phase it requires users to be aware that if you lose the seat phase you're going to lose access to your keys there's no forget password button uh the signup flow results in like a bad ux experience because it takes more than 10 minutes to sign up a user on the on the wallet uh another responsibility is to keep the seed face secure and more than 3 million bitcoins have been lost just because of private key management so uh that's the part we want to optimize and so so how do we onboard the next billion users so we have of so we have a three-point strategy a simple secure and non-custodial wallet uh uh the key management system that we have is simple because we leverage the web 2.0 login solutions like google facebook uh you can have your own uh you can have your own glbt login uh you can have your own what server linked to the login solutions it's still secure because uh we still have flows like uh multi-factor authentication that you can add uh the sdk is customizable and at the same point uh the entire system is non-custodial uh meaning at any point in time user is in full control of his keys uh so how do we do this so we use some something called as xiaomi secret sharing what it allows us to do is split the private key uh into multiple parts so oh sorry yes it allows us to split the private key into multiple parts uh so we take the private key uh we let's just split into three parts we assign one of the parts to the google login we assign one of the parts to your device and we assign one uh you can pick the third one to back it up or it can be a password share and it can also be a security question so let's say you lose one of the shares let's say you lose your device so you can still log in from google and get your input your password and you're in if you lose access to google account you still have your device and the setup is really scalable uh you can go from two out of three to two out of n you can have your laptop as phone as redundant shares so even if you lose one of the devices you still have access to the other ones yeah so the experience looks like this uh as you can see so the first options are like social logins and you have your email password you click you uh input your email uh then you can go to your email address and just click click on the link and then yeah you're logged in so that gets access to the key that easily so what makes us unique so even with this uh setup of using a custody uh like google login or email password login it's still non-custodial because there are multiple shares so no one can get access to the keys unless you want them to we still get to leverage the web 2.0 login flows which a lot of more than billion user users are already comfortable with uh people are used to email passwords people are used to logging in with their oauth accounts and the best part is even if you have your own award setup you can plug that in into the sdk and it'll just work so here are some stats so we've been building this for past three years and we have more than three thousand apps which are using us at this point uh more than seven thousand developers have uh registered their interest uh on our dashboard we have about nine million keys on our network and here are the like few daps which are using us so binance uses us in their chrome extension uh kepler uses uh in the wallet 100 thieves recently did their integration uh for the nfti drop we have wallets on solana we have a unity sdk for games and the list goes on and on uh the sdk essentially works on web it works on ios devices android devices uh we have sdks for react native as well and to add some more stats uh binance reported that the u the user conversion rate on their extension was increased by 74 percent uh cash io is one of the applications on terra blockchain uh they have about half a million monthly active users and we get like three support tickets a month uh 100 thieves did their nfp launch with us two months ago and we were able to onboard more than 300 000 users in just a matter of seconds so a matter of minutes so the system really does scale with the number of users as well and yeah that's the end of it so uh how can i help any questions guys i'm not aware of the exact numbers actually so the first place is okay it's fine now you can we are always available nearby uh we'll post it in the group as well uh any other technical questions or something i can explain a bit more uh got it so let's take the first part right so the ssl login so even the share or the private key which is associated with your login uh is split into nine nodes again so we have a network of nine nodes the nodes are run by big companies in the industry binance runs one of our node polygon ens ontology mac uh they all run one of our nodes and in this set of nine nodes let's say login from google and after that the share sort of shares get redirected to the browser and we reconstruct the key in the browser itself so at any point in time there is no server involved and as soon as you close the browser the key is gone yeah so that's become the for the second part the first part is your the your browser is a so let's say go to your browser this is local storage available uh session storage is available we keep one of your shares in there so at any point in time uh no any one of the shares does not have the same context as the other one so is it it's only user action which can help to sort of you know get the final private key because the login provider would not have access to the first one second one would not have access to the first one yeah yeah yeah so we have plans of launching our network so currently the system is permissioned uh we're gonna launch an auth network within which anyone can join and become a node operator and applications can choose if they want to keep keys on which nodes depending upon the like few certain parameters and it will be like a fully mpc wallet uh currently the key has to be constructed to make signatures but we have plans to like further that okay so we provide the management key management part even with the dids i'm not very aware on the specs but you still need like a key or you still need uh some sort of key management setup to sign transactions sign messages for that ex for that matter you still have to prove user identity right so it's it's more of a can be used in uh complementary in my understanding yeah anyone else okay thanks guys we'll be around at any time uh we'll live on uh uh we're gonna be online on our discord as well so just bring us thanks bye [Applause] oh [Music] [Applause] [Music] 