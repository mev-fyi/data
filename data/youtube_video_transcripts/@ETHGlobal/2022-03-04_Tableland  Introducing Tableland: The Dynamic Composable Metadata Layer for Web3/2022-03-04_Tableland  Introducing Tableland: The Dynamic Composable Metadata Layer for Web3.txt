start hello everyone good afternoon or good morning good evening wherever you're from and um thank you for joining us for another workshop um at build quest um so today we have carson um and carson is gonna be doing a workshop for tableland on introducing tableland the dynamic composable meta metadata layer for web 3. questions can go in the zoom chat and person will take them as they come in um so feel free to post any questions in there and with that being said i'll hand off the mic to carson right on thanks hannah um welcome everybody thanks for joining uh joining me on this lovely friday hopefully wherever you are is uh sunnier and warmer than it is here in victoria bc but um either way we're gonna kick it off so my name is carson farmer i'm with uh this this year i'm with table land um and uh you may you know you may know us from previous years uh as textile so textile is the company i work for and tableland is this new um uh layer for composable metadata for web3 and i'm gonna give a quick introduction to what is table land and what you can build with it and that sort of thing and then um assuming everything goes well i'll do a bit of a live demo um that you can kind of play around with yourself to give you some inspiration for maybe hacking and building things with table lines so um without further ado let's jump in so tableland um you know the the classic uh you got to start with the tagline so here's mine it's build web3 with sql or sql depending on where you come from and so table end is not a it's not a new database it's not a distributed database it's just web 3 relational web 3 native relational tables so it's a network that allows creators uh nft creators and game developers dapps and um and content creators for the metaverse to to use relational tables and sql plus smart contracts and and however your app is interacting with your users to build awesome experiences so it's a brand new token enabled protocol that will power the next generation of uh web3 experiences and i'm going to talk a little bit about why why that relational model is so useful in this context in a sec the cool thing here is you already know how to use it it's just a web3 native relational table model so if you know sql or you even have an inkling of how sql works then you pretty much know how table land works already and the cool thing here is that ownership and access control those those key kind of components of the database that you need they're built right in thanks to the native web3 layer in this case ethereum so uh just to give you like a sort of like tl dr up front right it's so straightforward that it's retro it's just very simple uh classic sql things you connect to your your database so tableland is one giant database full of tables you create a table you select from that table and that's that's pretty much um everything that you're going to be interacting with so but it's so web 3 that it's the future of how we're going to be developing web3 applications so you can create it's got we've got built-in support for the types of interactions and the types of data that you're going to want to use when you're building web3 enabled applications and experiences so you know you can create a table a new token that represents an erc 721 nft and this is the metadata and you create a table and you can start inserting data right away and then you can query that data right away and you get back that you know what you're expecting which is erc 721 compliant metadata and we'll actually we'll do something just like this live and i'll show you how easy it is to actually deploy uh nft metadata using tableland and just really just a few lines of code or a few uh sql commands so as i said in tableland we speak sql or sql it's just tables and i'm going to repeat that a bunch of times that it really uh knocks it through but so for the youth community we we launched our mvp just a few weeks ago in east denver and what we launched was a single validator or a gateway however you want to call it with an rpc endpoint that enables address owned tables that are themselves erc 721 compliant nfts and in this case on the rinkabi test net that's where we've deployed so far with more more networks and more test nets to come so polygon will be coming soon and and some other test nets very soon as well and um you know it's just tables based on familiar sql um the data is anchored to ethereum as transferable nfts so you get a direct on-chain connection to essentially what is off-chain relational data and you can use this to deploy um web3 native tables and so i use that term a couple of times so i'm going to try and explain a little bit what i mean there so any application stack that you're interacting with whether it's web 2 or web 3 a lot of this stuff is built on relational data right so current and future applications they need relational data this is things like uh relating a user to their avatar or to other you know information about in-game experience or um you know some sort of dynamic information that the the user is creating and interacting and producing within your application so we kind of need that layer and a lot of in practice in web 3 world this ends up being some sort of like centralized database on s3 or something or aws well we also now we have this blockchain and this gives us things like access control right out of the box right blockchains are really great about handling identity and ownership and membership and these are things that a database needs in order to provide access control and so if you if you start to combine these two concepts of like built-in native access control with off-chain relational data models you get a sort of like uh supercharged global database potentially a globally distributed um decentralized database so we're solving a pretty big problem here and tableland is designed exactly for this to solve this problem right so it's a new web3 protocol that enables developers to create and relate and extend uh metaverse assets across applications and i see that nathan has a question so if nathan can just do that like type type that question out into the chat then i can read it out and um and answer it um so yeah please do that now we're not talking about sort of a traditional database right it's literally just web three native tables columns rows and foreign keys that are maintained by a network of validators currently a network of one but we're working on the uh the decentralized piece of that puzzle um this season and then there it's data that's that's used and is accessible to layer 1 wallets and smart contracts and things so um today what we're going to try and do is take that same model and use it to create dynamic composable metadata for nfts but you can imagine all sorts of other things too and one application we've seen quite a lot of sort of early developers tinkering with his in-game um state and experiences so imagine his user is playing some sort of um nft based game where they bring their own character or their own asset or their own loot with them you can use metadata and table end tables to store the state of that loot bag maybe the broad story sword has been drawn or they're they've changed their character's hair color or they're on level 3.5 all these different types of information that's the type of metadata that you might store in table land so lots of other things as well but nfts and in particular something that we're hoping to see a bunch of um in different hackathons and including build quest and so um i actually have if you jump into our docks um which i highly recommend you do i spent a lot of time tinkering and fiddling and making these docks kind of accessible for hackers at hackathons so jump in there and then start to explore um and we do actually um have a couple of pages of resources for folks that are specifically building hacks and um so hopefully you can see this this is what the docs page looks like and we've got a section down here for developers where we've got a couple of examples of use cases that you might want to explore so that's a basically a live database of different use cases that we're hoping to see people build right so there's a bunch of them here so if you're out there hacking and you think well this sounds like a cool idea i wonder you know what i can build with it there's a couple of cool use cases you might want to check out to give you some inspiration or just snag one of them and start building the other thing we have is a bunch of grants so if you click through to our grants there's a bunch of examples and we've got a couple ones specifically for build quest these ones are pretty generic so you know if you're building something with table land you can jump in there and start exploring right away um we had a couple for our east denver and that youth denver hackathon is still going and then we have some open call grants as well if anyone sort of wants to take this to the next level and start building things with um tableland so definitely i i recommend you jump in there and take a look and then for those folks that want to start building right away you can jump into our quick start guide where we've got all the steps you need to do to get validated and get early access to the tableland mvp you're going to end up whitelisting your address and getting it some early access that way you can play around with it right from the browser um you can interact through with tableland by our javascript typescript sdk you can tinker around with the um the rpc apis and we even have a cli if you want to play around with that and do things from the command line and if we have some time i'll try and go through some examples and things like that so nathan here has got a cool question is it possible to give granulated management rights to the users of the game with this database too yeah so that's a really good question one of the um so what we've launched with the mvp right now is essentially address-based table access so if you meant to table you and i'll talk about what that looks like in a second your address is the owner of that table and you have access control rights to that table very quickly we're hoping to move to providing actually the owner of the table then can then can grant permissions to other addresses um to do things like update a particular row um and and uh have full access to a table etc etc so the the short answer is right now it's pretty much just address based so whoever's the owner can write to a table but very quickly we'll be moving to more fine-grained grant-based access control yeah exactly um and that's that's exactly the the type of use cases imagine you have a game where you know each user needs to be able to modify some you know piece of the overall game state but only that piece that they're responsible for that's the type of thing that we'd like to be able to support of course the other thing you can do and you can do this already is you can actually transfer ownership of that table to other users so that you can actually you know sort of transfer ownership and allow them to rewrite and change all sorts of things with that table and then sell it and things like that so um yeah i'm pretty bullish as well nathan so and thanks thanks for the comments so i highly recommend you jump into our docs the javascript sdk tab is probably going to have the most in-depth information it's pretty much a walkthrough of like how to create a table how you can interact with it listing tables that you own mutating tables blah blah blah querying tables is is a lot more open and anyone can query a table and and and view the data from the table and we have a couple of example apps so if you click down on examples or you go to examples here we've got a couple of demos that our team has built where these are like live view or react apps that sort of demonstrate usage of table land in a real world scenario one of them is actually a game a game a very lightweight game like experience on top of the loot nft and so we're pretty excited about that we're actually going to write a blog post and launch like how we actually built this thing which i think will be useful for hackers so definitely check out some of those examples if you click on demos here there's a link to your classic to-do app this synthetic loot game and if you go to our tableland example app repo there's a bunch of examples and things in there and then if you build something as part of buildquest hopefully we can make it into the community examples section as well i'd love to start putting some some things from folks there we also have a playbooks section which we're slowly adding to and so far i've just got three and i'm about to add a fourth one um which goes through sort of common workflows that you might experience when building on web3 tables so how to support nft metadata and we're going to go through this playbook in a moment how to support key value storage so just like if you want to store blobs of files or data there and then how to create mutable versus immutable tables and that one's pretty cool too i'll talk about that in the context of nft metadata in a second so i highly recommend you jump in there and check out those examples tinker with the command line blast away at our remote api you know have fun and break stuff if you can um which i'm sure you can so that's that's all that's part of the deal right you build stuff and break it we fix it and we get this great community interaction going um so i'll leave the the doc stuff for a second but yeah dive in there and read those docs um and then in the meantime we'd also love for you to just jump in um and so uh we'll i'll get you to jump into our um website tableland.xyz we launched the site about a week or two ago um i highly recommend you kind of start there work through um and then i'm actually going to jump over there in a second and we're going to do a live demo of um interacting with tableland so if you actually i think i have it open right here yes so tableland.xyz check it out um there's some beautiful art um that uh that we had built and um you know maybe if you're an early adopter and you get into our discord and you start exploring with and um there's maybe some uh future world in which you get to interact with and have some of that art yourself um in the form of drops so just uh jump in there and get involved and uh that's a little sneak preview for you anyway check out the art um as i said in table and we speak sql or sql but what i wanted to do is just we've got this little section down here to try it out and so this is itself an actual app that is built on top of table land and it's a very simple like sql like command line which allows you to connect to the tableland network list tables create tables all sorts of fun stuff like that and we have a few pre-built examples that you can start to do things like querying but i'm actually going to show you how to mint a table which is itself an erc721 compliant nft and then actually launch an nft metadata table as a table land table so we've kind of got this like nested erc 721 thing going so um hopefully you can you can see this maybe i'll try and make the fonts a little bit bigger here we go so we're going to go over here and we're just going to connect to the table or table end that will pop up your classic metamask thing here to sign a essentially jwt token and uh we're working to make this more visible so that you actually can see what you're you're assigning instead of just the the token value itself but i'm going to go ahead and do that so i'm connected i'm in a basic tableland terminal you can do all sorts of fun sql commands um i've got a couple of pre-baked things here that i'm going to copy pasta into here so that i'm not wasting too much of our time so what i'm going to do is i'm going to create a table called my token of type erc 721 metadata and i'm going to set the prime the id as the primary key and that makes it sort of you know relational in a sense i can actually reference specific ids and in this case these ids are the token ids of my erc721 token so i'm going to run that and it's going to ask me to sign some stuff because i'm actually minting an nft in this case on the rink of e test net so we're just going to confirm that and while that's going on and explain basically what's going on so tableland basically connects uh sidechain data so that the data that's actually managed and made available via the tableland validators well that actually went way faster than i was expecting so i'm gonna have to talk faster but anyway what happens is the validators are supporting this data queries and access and things like that and then they're linking it back to an on-chain component on the parent chain which is um ethereum in this case to an erc721 compliant nft so you can actually do all of the access control on the parent chain you can transfer ownership of that table you can grant access to that table to other addresses etc etc and all that information is effectively available on the main chain so then any other interactions that you might want to have with on-chain assets you can do that and that on-chain asset will always link to the off-chain information so i created a table and it's a unique it's always got a unique name so it'll be like whatever you call your your table underscore and then a unique um token id so in this case it ended up being 198. um and so i'm just going to then do uh some little magic here and i'm going to mutate this table okay so my address is the one that created it so i've got default ownership of this table and what i'm going to do is i'm going to insert into my token 198 for the id name image and description fields the values of 0 so this is the first token id and the name is going to be little bobby tables a little inside joke for you all um and it's referencing an ipfs hash in this case this is a hello world hash and uh the description is just hello world from little bobby tables there so if i hit enter there and run that i get back some just some results right away that says hey something happened and now if i want i can actually um select so just classics um uh uh sql select for everything from my token 98 and if i do that i get back some cool table data here which is the name description the image and um these additional fields i didn't actually fill those out so they're just left blank and excuse me if i wanted i could you know we could grab that and go fetch the ipfs url and i could interact with things that way but what i wanted to do is i wanted to kind of prove to you that this is what it what um what i say it is and so you can actually reference the metadata for this particular row of this particular table to get the actual token the erc721 token metadata so if i go to here whoops test net table land network tables and what did i say it was 198 i think right cool all right so in this case i am using the gateway to directly drill down into that particular table's metadata and in this case what we get is erc 721 compliant metadata for the table so in this case i've got um you know the name of it is my token 98. i didn't added a description when i created that table so no description um the external url is just this url again and then we include a fun little um image to sort of render it so in fact if you mint a table and you have a wallet where you're displaying assets the table will actually show up as an ownable asset that you can transfer later on and um had i've been thinking i probably would have left time to do that but the other cool thing here is i can actually reference i can drill down into the table via the gateway the specific token id that i want so in this case id is zero and if i do that i additionally get erc 721 compliant metadata in this case i left these two blank i've got the description i've got the name and i've got the image here for that metadata and you can imagine i if i've added a bunch more rows i could do a drop of like uh 100 nft or sorry 100 token nft or 100 000 or 10 000 whatever i want and all of that data is managed in a table for me um and so you start to you know you can start to interact with this data almost as if it's like an excel spreadsheet that you're just deploying your nft asset with so um there you go that's one way that you can create um metadata for your nft now because this is a mutable table i can actually go in and i i could actually mutate maybe i wanted to ch i want to change the name from little bobby tables to just bobby tables right so i can actually go in and i can mutate that and that's pretty great because now i get dynamic nft metadata but because the table itself is an nft and it's transferable say i want to actually make that data immutable i don't want anyone to be able to mutate it anymore i've launched my nft and now i want to you know set that as immutable well all i have to do excuse me is burn that table token i just transfer ownership to the null address or you call the burn method on that contract and now nobody can nobody has access rights to that anymore the data still exists off chain on or on the tableland network but nobody can mutate it so i now have immutable nft metadata so you get the best of both worlds in this framework um so that's pretty exciting so i'm gonna i'm just about out of time so i'm going to kind of cut myself off there um you so nathan another great question can you make individual data points immutable you can't do that yet um but that's part of the sort of finding grain access control stuff that's coming up is that should be possible you can basically just grant permission to to the null address for that particular row and then nobody can do it um so yeah thanks for the great questions welcome to tableland um welcome to build quest i hope you have a lot of fun this weekend hacking and building things um if you've got any questions or you want to get access to table n jump into the tableland discord um and uh i'll share some some invite links and things like that in a moment you can get us on twitter at tableland underscore underscore you can get me on twitter we're also hiring so if anybody is interested in um uh you know building out this stuff with us that would be great come and do that and then check out our website at tablean.xyz for more details so thanks very much and if you've got any questions hit me up here otherwise my little helper in the background will probably be able to help with any questions you might have as well so thanks very much awesome thank you so much for your time carson that was really really interesting um and as carson said uh um him and his team can be reached on discord or anything um so if you have need any help or have any questions throughout the next week or so definitely reach out and with that being said there's some more workshops um today if you want to join those the other ones are also very interesting and i hope you all have a great time hacking at build quest and can't wait to see some really exciting projects thanks everybody all right have a great rest of your day 