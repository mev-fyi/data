until everyone joins i'm andrew with heath global just going to kick this off we have shanna and alex from coinbase wallet they'll be taking questions in the zoom chat um and with that we'll just i'll hand it over to shanna and we will begin thanks awesome thanks so much for the intro hello yes i am shanna matthews janna rhymes with banana i am a developer advocates advocate coinbase and i'm here to talk to you today about queen based wallet i'm here with alex um feel free to introduce yourself to alex yeah hey everybody thanks so much uh for taking the time to be with us today maybe learn a thing or two um i'm alex uh developer advocate here at coinbase also just excited to be a part of hack money um see what you guys have to build it's gonna be really exciting awesome cool thanks alex so there's gonna be three main parts to this talk first alex and i are going to talk to you about coinbase wallet from a user's perspective we're going to talk about some great features that wallet has cool stuff our team's been working on and then i'm going to take a step back and talk to you about why wallets are important to you as adapt developer and explain a little bit about how your dap communicates with a wallet and then last i'm going to talk about what i think the ideal setup is for integrating a wallet into your dap and hopefully walk you through a working example of a multi-wallet integration working that you can check out and use to get kickstarted on your hackathon project cool alex you want to take it away yeah i love that you gave me the easy part here um i i think more than anything uh we like to start these types of talks and workshops with you know just basically clearing up a couple of misconceptions that a lot of people have uh there's coinbase and then there's coinbase wallet and we're here to talk about our coinbase wallet it's self-custody um it's meant for dapps uh we have it both on a mobile app and just as of i think november of last year it's a chrome extension as well that's where you're going to see your developer tools inside of the chrome extension um yes this is not the coinbase exchange this is a fully self-custody wallet this is not a kyc wallet this is not a custodial wallet you do not need to have a coinbase.com account to have a coinbase wallet so we want to make sure that that's really clear right off the bat and make sure that you guys know that for the dapps that you're building so shannon mentioned like why should you care and she'll get into a little bit more of that from the developer perspective but from the user perspective we want your dapps to amplify and and everybody knows coinbase um we have one of the largest exchanges in the world um pushing about 90 million people at this point and we want you have access to those users with your dap so secure and easy onboarding 90 million coinbase users i mean that's that's a pretty awesome first thing that you should care about by using the coinbase wallet um but also just a couple of quick facts we're the fastest growing wallet extension in the us again it just launched late last year and the most downloaded self-custody mobile wallet in the us a lot of that because you know people are using coinbase and it is a front and center when you uh you get into coinbase so we're excited to amplify your dap using coinbase wallet and then of course you know as you guys are building your dapps we want to make sure that your users and your dapps are ready for web 3 so our wallet is ready for web3 the coinbase wallet supports all evm compatible l1 and l2 networks and it does do that unified l1 l2 balance so everything will show up across all of your wallet uh interfaces when you have your coins in the wallet so your users can see whichever coins it is that they're holding um we do support ens in the username we can as of recently adjust all gas and speed up the cancel and the transactions um easy add custom rpcs not not a difficult thing to do we have 12 native networks so the rest can be added those evm compatible change can be added via the custom rpc um the nft portfolio currently has nft interface for ethereum nfts just be on the lookout for how that may change over time as you guys know we just launched our coinbase nft lots of things going on there so exciting to see how our nft interfaces uh evolves within the wallet um we have native decks trading on inside the mobile there is a dap browser and then of course we have full hardware wallet compatibility with ledger which just was i think a couple months ago so we're excited about that again back to that safety and security element um again i'm gonna be in the chat helping answer any questions that you guys might have i'll also be checking out the discord in case you guys are in there we have our coinbase channel in the discord definitely let us know either today or throughout the course of this entire hackathon um what it is we might be able to help you with we're here to help i'm going to turn it over to shanna to get a little bit more technical with you guys so thanks again thanks alex cool okay so next up i'm gonna keep talking on the user side and then we'll quickly transition over to talking about dac developers and what they care about so there's one more thing we wanted to highlight and this is actually really cool coinbase wall offers a lot of different ways to connect to adapt via the wallet um we actually offer four different ways our while it's very flexible the i'll breeze through all of them right here uh the first one is a pretty standard standalone browser connection so this is what most um in browser wallets offer you can import your seed phrase into the extension and then connect to a pop-up to adapt sign and submit transactions pretty standard stuff it gets a little bit more interesting though the second option i have here is if you actually want to store your keys on your phone so for example if you feel more comfortable and confident keeping your private key on your phone you can choose to connect your mobile wallet to the desktop app and then desktop extension and then sign and submit transactions from your phone still really convenient and it might feel a little bit more secure for your users third is if you are the type of person who want to keep your keys in completely cold storage if you have a ledger hardware wallet you can connect that wallet to our extension and then sign and submit transactions via that super secure finally this one is a little bit more complicated to explain on a slide but it's really intuitive to use so if you haven't checked it out i encourage you to try it this would be connecting to dapps in our mobile wallet in the in-app dap browser so if you're using coinbase wallet on your phone there's a dap browser in that mobile app and if you for example open a dap on safari or chrome on your phone you can press connect to coinbase wallet in that dap and that'll deep link you into the coinbase wallet mobile dap browser here um automatically connecting your coinbase wallet so you can just you just connect it and can sign transactions right away you can also just go straight into the dap browser right on your mobile app too cool okay next slide great so we've seen the wallet we've learned about some user facing features um but you guys here are dap devs you want to build stuff so why does a wallet matter to you as a dac developer okay i like to think about a wallet and describe it actually as key management software so what does that mean imagine you as adapt developer has built a dap in this case you have uniswap up here um but imagine that your users to use your dap had to log in with their private key so they had to give you the private key so that you could send transactions on behalf of that user and then that user also had to do that for every other dap that they wanted to use do you think you as a user would do that i don't think i'd feel very comfortable that's like a lot of trust that you're handing to all the app developers out there so what a wallet does in this situation is take some of that burden of trust off your hands as a dac developer the wallet is going to be responsible for holding and managing the user keys and facilitating that safe and secure signing and submitting transactions basically the wallet is acting as a go-between for you're at dap and ethereum we're going to dive more into what that means specifically i really like to take some time to emphasize this because i see a lot of people conflating the two ideas like their wallet and their account that they have crypto in um they'll say like oh sorry i can't try your new super cool wallet app because my funds are already in my metamask wallet that's not actually how it works the wallet app is gonna like like you could think that because the wallet app is showing you your balance but it's not actually holding your crypto while it's maybe not even a good name for it because your crypto you know is really being stored on the public ledger it's associated with your account and you access it via those keys the account on chain isn't bound to any one wallet app and it's totally wallet agnostic you can import your keys into any wallet you want to cool now that we've cleared that up a little bit let's talk about the provider so i've kind of described at a really high level what a wallet does for you as a doc developer but let's get into more details like how exactly does your dap communicate with a wallet on your dap like as a developer how do i send transaction requests to the user or how do i listen and figure out what the user is doing in their wallet like when they switch accounts or they switch networks the answer is is kind of simple it's really basic um it's no different than how any other systems interact it's through an api this api is standard every wallet exposes this api on the web almost always through a javascript object onto that webpage for the front end to interact with uh the interesting thing here is what do we call that api you guys probably already know and it's on the screen already but what you might think it'd be called something like a wallet api or like a key management api but it's not it's called the provider so why do we call it this why do we call the wallet api a provider we call it a provider because again at a high level the provider api really just provides access to ethereum through this specialized client so what does access to ethereum really mean it means um two things first it enables your dap to make ethereum rpc request and then second it allows your dap to subscribe to events or state changes from the user's wallet we're going to talk through some examples of both of these things first making ethereum rpc requests okay so the request method is like the main method that exists on the provider api that you would use to interact with ethereum and this request method you can kind of see the method signature up here is a wrapper for json rpc clause to the client all adapt needs to do to submit one of these requests is just um specify which json rpc method that they want to use and then the relevant parameters we're going to go through a couple super sample super common examples as a dac developer that you would use of these um request methods the first one would be connecting a wallet this is specified by eip1102 for account authorization it's really simple here this is one of the most simple ones you're going to do eat request accounts you get a nice pop-up from your wallet next adding and switching networks this is excuse me specified by eip3326 and 3085. this exactly here is an example of adding the wagome network so you can see in our code here again it's pretty simple first it's a little bit more code than we were showing on the last slide but not too bad you can see first we try to um switch the requests to this chain you can see wallet switch ethereum chain and if that doesn't exist we are going to send another request to the provider to add this network with these specified parameters that we have here next i'll show you watching an asset so wallet watch asset this is eip 747 this is basically sending a request from your dap to import custom tokens on the wallet so these are some that you should know about uh really helpful for dapp developers and that brings us to the second quarter category of things that the provider api provides for you um and that would be the events api so this is for subscribing to those events finding out what the user is doing in their wallet this events api actually extends the node.js event emitter api and all you have to do for your dap is subscribe to these event emitters using dot on and remove listener you're going to specify the events you're actually listening for and then just react and handle those in your dap again pretty straightforward okay so ultimately this provider api is really powerful but the api surface for using it is really simple like i was saying it's just rpc requests and then subscribing to events one thing that i really like to emphasize that's really beautiful is that this super simple api surface for this provider isn't special to coinbase wallet at all it's universal across all different wallet providers so what does that like mean for us okay perfect uh abusive wallet providers this provider api this is standardized it's standardized under eip 1193 um and this is meant to enable wallet inoperability and what i mean by that is that means that you as adapt developer can write your dap and you shouldn't really have to think about what wallet your user is using or wants to use um the way that you make those requests to the client and the way that you listen for subscribe to state changes is pretty much wallet agnostic awesome this kind of brings us to the next portion of the talk which is how do you integrate one or many wallets into your dap cool as a dab developer you probably know um how to access the provider in the browser you grab window.ethereum and bam there's your provider but when you do that you're you're you may have already thought of or noticed or ran into this issue so this injected provider any wallet extension browser extension when you install it it injects its provider into this window.ethereum property um and that's why it's called the injected provider and then dapps on their front end can look for that and make requests and listen on this window.ethereum object the issue that i was mentioning that you may have noticed is that at this point in the web3 developer ecosystem there's really only room for one of those providers on that property so you're probably making a dap that's relying solely on that window.ethereum and you don't know what's there but only one wallet can fit so this whole wallet interoperability thing isn't working to the fullest extent it's not doing as much as we could be doing with it there's really just one wallet there because there's only one provider there so that leads us to how do we actually integrate multiple wallets into our dap and the solution that i think is the best is using a multi-wallet modal as we've mentioned since wallets are interoperable why not it's easy we should just be able to plug and play each of these wallets into our gap how do you implement one of these uh it can be really simple and really basic if you wanted to do it all yourself all you'd have to do is just install each of these provider sdks plug them in um build yourself a modal put an on click handler in there to activate each provider when you click the button but um this is a hackathon you're here to hack you probably don't want to spend all your time reinventing the wheel and remaking your own multi-wallet solution um and there's no reason why you have to there are awesome aggregator libraries out there um open source libraries that aggregate different wallets together uh there's generally two categories in the way that i think about them the first category would be headless libraries so ones that don't include a ux you make your own ux and then um built-in modal libraries are just like out-of-the-box libraries that have a ux included that you can't customize but you didn't have to make it either so that's a good trade-off then that we have four popular libraries up here um web 3 act and wagby hooks are both examples of headless libraries and web3 modal and web3 onboard are both examples of those out of the box libraries i will just briefly talk about two of each or one of each okay web3act is i would say the most popular like multi-wallet provider library um it is headless as i mentioned it's great if you want to customize your own ui you really care about how the whole user experience looks this is very popular i mean it's used by very big dapps like we used uniswap as an example earlier they actually use web through react and it works great it's super simple here's a code snippet of um how to integrate a few different wallets into so you can see at the bottom of this code sample you see we're connecting metamask coinbase wallet and wallet link it is super simple and then for a library that has a built-in ux web3 modal is really great again super simple to get up and running with if i were going to recommend something that you would use a library for you to use for using multi wallet during your hackathon i would totally recommend web3 modal it's so easy to get started with again here is a code sample of using it where you can just see how easy it is to put in uh our coinbase wallet sdk at least that's what we included in this code sample cool okay i am going to give it a shot to show you um using web3 modal we have an example of it running i was um having a little issue earlier today but hopefully it should be all good we'll see uh let we're gonna start right here on our docs page these are our coinbase wallet documentation um they're pretty comprehensive we think but if there's stuff missing please let us know we'd love to get feedback um i have personally put a lot of uh effort into these stocks and i would love to hear how to make them even more awesome anyway but let me draw your attention to the relevant section here which would be integrate with library so we have little walk-through tutorials of each of the four main aggregator libraries right here this is our walkthrough for web3 modal they all look pretty similar but the important parts i'm going to talk to on right now are we have a code sandbox that's up and running with an example of this um here is it's split up it's like kind of like architected a little bit so the code is split up so it's not super super super simple so if this is like too much for you you're more of a beginner feel free to don't be intimidated feel free to just walk through the actual walk through it does take you step by step um and so you can like do it yourself rather than just jump into something that's already working but anyway okay i was going to show you um our little running demo so here is running in this page and you can see that i've just like commented out the section that actually integrates coinbase wallet um web3 modal comes with metamask or well it comes with the injected provider um as the default and since i have metamask installed like that's taking up this first spot in the built-in ux you can see that there um but if we just go ahead and add the coinbase wallet sdk and add a little bit of code into our provider options object from web3 moto hopefully we should see boom okay nice very good now we have a coinbase wallet option on there as well if i click it nice okay you can see that it's asking to connect to my wallet i can connect to my wallet super awesome mostly okay this published pop-up didn't go away but i want it to be connected now let's see okay yes my wallet is connected now and so yeah you can see my account can switch networks this is all ui that we've put into this example just so you can see all the features but it's great i highly recommend that check out our docs here um and you know ping us in the discord if you're running into any issues or have any questions about this stuff cool okay um i think we have yeah a little over five minutes left so i'm going to go ahead and switch slides hopefully yes okay i'll do a really quick review just to put the important points back in your head um basically eip 1139 defines a standardized provider and that provider provides ethereum access to dapps so this means uh it gives you a way as adapt to make ethereum rpc requests and respond to state changes that you get back via events and multi-wallet modals make this super easy to do each wallet standardized provider fits right into the aggregator library so that your dap can support any wallet that a user wants to use okay now for the good stuff let's talk about prizes coinbase is giving out a six thousand dollar pool prize to be a split amongst all projects that use coinbase wallet and we also have some super special bonus prizes available for projects who submit really great feedback about their experience using coinbase wallet great feedback can include bug reports it can be feature requests it can be documentation suggestions it can be code sample issues anything this is a broad spectrum but we just want to know how your experience was to qualify for that pool prize you have to successfully integrate coinbase wallet into your dap like i said i recommend using one of those aggregator libraries and you have to um submit our feedback form about using coinbase wallet and like i said do a good job because bonus prices um okay we are also hiring um lots of different roles if you are interested in coinbase check out coinbase.com careers um if you are a developer person too shout out or you know great ones send it my way i would love to talk to them and finally i think we would love to connect um myself alex and other engineers from the wallet team will be around in discord throughout the course of the hackathons to answer questions for you or just chat we'd love it for you to follow coinbase wallet on twitter to get the latest updates about what coinbase wallet is doing um and this qr code should take you to a link tree that should have links to our documentation it should have links to the form you have to fill out for feedback to get qualified for one of our pool prizes and i think a way to connect to people at coinbase check it out and let me know what's on there i'll check it out after this too awesome okay thank you very much i will stop presenting um i would love to hear if anyone had questions let me see okay there we go okay okay i think i stopped presenting awesome cool alex were there any great questions in chat or anyone want to come off mute and ask anything about coinbase or coinbase wallet or other developer products that we have coming soon hopefully and some stuff that exists already i'll just uh chime in let you know shanna that uh we had one one question um regarding the difference compared to metamask um i listed a couple of those differences from a user perspective in the uh the chat but as shanna said um our hope for you guys more than anything is to get as much access to as many different users as possible the way that shanna showed um wallet integration there's no difference between coinbase wallet and and metamask it's uh it's really hoping to to get your users where they're at so that was what we were hoping to convey here um we have a tall task ahead of us to get as many users into crypto as possible so build some cool stuff that will help that along and the wallets will take care of themselves yeah i love that answer i will also say that like i think by design for developers coinbase well it should be pretty similar like to using coinbase lot should be pretty similar to using metamask as you probably kind of learned hopefully throughout my presentation um but we are working really hard there's a ton of engineering um resources dedicated to coinbase wallet right now too and if you have things about metamasks that you love that you that aren't working well in um coinbase wallet let us know if you have stuff that doesn't exist in metamasks that you would love to see in coinbase wallet let us know we want to hear from you do we want to have yes sorry um i was i was just reading them so do we have intend to have a connection to coinbase nnt in the future i am not on the nft team so i can't really speak to their plans i don't know alex if you have a better answer to that so right now today uh coinbase wallet will show you your nfts that you buy in the coinbase nft um all ethereum nfts will show um i think i your name is i'm going to butcher pronouncing it but nargis if that's how i say it hit us up in discord let us know if there's more that we can answer beyond that um just because if we do need to get in touch with the nfc team you have specific questions we can um but there we just launched the nft platform globally i think yesterday so really excited come check it out um if the feature is not there today my gut tells me it'll be there soon um we've got an army of people that are working to make it a really amazing nft experience so um thank you guys so much yeah i i think i don't see any other questions in there uh jan anything else awesome no just hi i'm excited to be here thanks all for joining the presentation please reach out to us in discord if you're having any issues integrating coinbase wallet or anything else you want to see all right that wraps it up thank you so much shanna and alex from coinbase wallet just a quick reminder kickoff for the hackathon is tomorrow 12 eastern 12 noon eastern and then the hackathon is a great way to reach out to the coin base while a team thanks again let's keep the conversation and the questions going in discord and good luck hacking out there 