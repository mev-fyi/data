thank you [Music] [Music] thank you foreign [Music] welcome everybody my name is kartik I'm one of the co-founders of Eve Global and we are here today for day three of hack Fest judging and for those of you who don't know especially the ones watching this recording actor uh hackenfest was an event uh we did in partnership with political latency Global and over the past month we've had 470 Hackers from over 50 countries working across 19 different time zones uh working towards building projects that use the best of tools and Technologies from the ethereum under the Falcon ecosystem and just about three days ago these 470 hackers submitted what they worked on for the past month and uh we kicked off this whole week of judging and demos and we're super excited to announce that we've had 130 projects that have come out of this event and we're taking this entire week showcasing and demolitions projects and giving them the opportunity to tell everybody else about what they worked on and share this thing with our judges and our sponsors so before we move into these demos I want to do a quick logistical overview of not only how judging yourself and how this call is going to go but also how generally the event itself was set out so uh the logistics of today our fitness report we're going to have about 13 teams where uh each team will have about four minutes to demo what they built and we'll have a four-minute session on Q a and just to make uh sure and minimize any AV issues uh we've asked all the teams to record their demos so they'll be playing those demos pre-recorded as they come on and move into a live q a with our our judges a quick overview on how the event itself was set up uh each project you'll see could be worked on with a team of up to five people a lot of our our team uh projects uh chose to work on I mean independently and by themselves too and that's totally all right and all code you're going to see today uh was written over the course of this event and the only criteria we had for a submission to be valid was that they must incorporate the tools and Technologies from the political labs and ethereum ecosystem so we have a really creative mix of uh the best of what you can do with decentralized storage and smart contracts and we're super excited for everybody else to also see what our hackers and attendees uh worked on not over the past month a quick overview on how judging itself is structured our judges will be rating our projects and teams on the side categories now so we'll be looking at how technical original or practical that project is along with how easy it is for somebody to use whether it's a web app or a developer tool and the last one we call a category law Factor that's not lets us incorporate anything we might have missed from the categories above and help understand and do a catch-all for uh things that may not be fully covered in the four sections above and before we kind of move into this demo I want to just emphasize that this event is not a competition the hackers are very much here to award and they're here to share their excitement and show you what they've been able to do over the past month you know judges are here primarily thinking feedback and understand uh what you wanted to do and how you can take it to uh to the next level and just make that even better and not everybody is here trying to become business so although you'll see certain things that are going to be definitely come becoming commercial over time the goal for us is to encourage experimentation and that's kind of how we like to emphasize every event because we want other students to understand what is possible in the world of web3 so with all that these are the teams that are going to be presenting today and we're going to be demoing them one by one and we'll also have a quick break halfway through uh the demo so our judges and everybody else can rest for a few minutes and uh doing the hard job are our three judges uh and I'd like to walk um lastly closely from 1kx Capital we have uh Jamie Lee or cake from protocol labs and even Hyman from chainsafe who uh who will be doing the hard job today to uh to really kind of learn about what everybody did and give their feedback and share their excitement with all of our hackers so with all of that I want to kick off our very first demo for today I'd like to welcome team geofeb to come on and share their demo so I'll let to your web Kick It Off from here hello welcome to the hack FS demo of the geoweb project the geoweb is a new type of web experience that's navigated by geolocation on the geoweb As you move through the world with a smart device content is discovered and served based off your physical location it can function like a metaverse covering Earth's surface potential use cases span from simple notifications and data feeds to augmented reality our digital land registry and harburger smart contract are built on ethereum content for our demo is stored and retrieved with ipfs but naturally we could also support a file coin integration our digital land registry is the DNS of the geoweb but instead of domain names it maintains land parcel ownership digital land Parcels are nfts they Grant the owner the exclusive right to Anchor content within their boundaries the harburger smart contract administers that geoweb's digital land market a harborger tax is a market structure with two basic rules First Property Owners pay a tax based off the self-assessed value of their property second anyone can force a sale by paying the owner self-assess property value it's an elegant way to administer a market with minimal centralization it also has the nice side effect of generating tax revenue that can be used to support the network and other public goods here we have our demo registrar UI you can go check it out yourself at geoweb.ethe we're using metamask for user ID and wallet functionality land Parcels claim in the registry show on the map as markers I actually own the land out here in Denver so let's go check that out first this is the detailed view that you'll see when you click on a land parcel that you own the items of note are the owner assessed value and the CID of Link content both are editable here you can also click through on the CID to see the content in this case it's a draft of the Geo web light paper check it out if you're interested in learning more now we're looking at a parcel that I don't own here the link content is the covid-19 policy for a restaurant we'll come back to that in our next demo someone else owns this land currently that means I can't place content inside the parcel boundaries shown here in red it's similar to property rights in the real world but I can always buy the land on the geoeb I just have to set my new price and submit the transaction note that the previous owner only gets paid their self-assessed price not mine and finally let's claim a new parcel of land we're using a single geohash to Define land for now so I can just double click anywhere on the map to pick my parcel I set my value associate some content and claim the parcel we didn't set a minimum claims value here but in a production system we do auctions or have a claim fee now that my transaction has gone through I'm the proud owner of some more Geo web real estate let's walk through a simple geoweb user experience we're going to simulate walking up to the restaurant that we saw in the last demo the owner of this land parcel presumably the restaurant owner has decided to link their covid-19 policy on the geoweb as we enter the land partial we get a push notification and content is automatically resolved on our phone and watch browser apps next let's walk over to a nearby park what's there a picture of a cat on a bench why not do web users don't need to take any extra action other than moving throughout their day to discover useful content that they might not have even known existed these aren't siled apps they're all part of a unified open web experience we started with simple text and image content but as the geo-web ecosystem matures new schemas and browsers can be developed to support any digital experience that Builders can imagine finally let's go back to the restaurant and see our covid-19 information to close the loop on the demo in isolation these use cases may seem trivial and can be accomplished with other methods but as you zoom out to the network level the value of the geoweb's open frictionless experience becomes apparent smartphones put the internet our pockets smart glasses and the next generation of smart devices will put the internet in our field of view and it'll radically change our relationship to it we're building the geoweb for this future and it's grounded in our user first ethos and web3 Technology on top of that we believe we can structure the network economics to support public goods and pro-social aims thank you for taking the time to check out the geoweb we look forward to any feedback and questions you may have wow pretty cool awesome so I'll let the judges take it from here and I have been just gonna ask any questions that may have um the app sort of the push notifications that I could get is that an SDK or are you planning to make this like your proprietary app yeah that's a good question um I think like for the hackathon we're focusing on the registry component and this demo was really made just to show off like what could happen but imagine like yeah maybe we could build sdks for multiple third-party apps to use or perhaps um you could have like multiple browsers so we look you know analogous to web browsers like there could be Chrome Firefox like there could be multiple independent parties that create their own browsers um but SDK is an interesting idea too yeah yeah generally it's pretty hard to get you know to drive users into your very like proprietary uis so it makes sense if you're if you're able to go to a lot of other uis via sdks and Etc yeah for sure I think with focusing on the land registry trying to build out that infrastructure then hopefully build an ecosystem around that that other people can build awesome stuff on do you see there being an issue in that I can dictate what the policy is for a restaurant just by buying their land from them yeah it's it's tough um there'll definitely be questions about identity and who controls what um the goal hopefully is to build enough Network value that people want to own their own land um and essentially the harburger contract always opens the opportunity for someone to to buy whoever is willing to pay the most there's obviously um reasons people could do that for for bad bad purposes but if if we introduce some friction for Bad actors with decentralized identity and then provide users easy ability to block say a parcel of land or block a certain user then hopefully that essentially de-incentivizes people from trying to buy land and do malicious actions with it do you think that to to achieve what you're describing you would need to basically change the economics of it and not have it be a hardware tax plainly put foreign to keep it as a decentralized um Administration that's the best we've come up with um there's always you need like with Bitcoin obviously people believe that it has value and they they therefore invest their mining power to it in our case it's not mining power it's like you have to put up your you have to pay your harburger tax to protect your piece of land so obviously we're banking on economics and incentives to to make it like to make it feasible thank you great great job guys it's awesome thank you are you guys using ipfs to store all that policy information and also um locations as well yeah so everything you saw as Jordan ipfs um the mobile demos themselves are just looking at look at the content through ipfs Gateway um we did experiment with using like a actual ipfs node on iOS but the end demo didn't have that um but yeah right now it's all pinned on pinata and Jordan ipfs foreign great thanks so much Geo Webb if there's no more questions from the judges um we'll move on to project web 3 API if you guys could share your screen yeah sure coming around and please just holler if you can't hear the audio web3 API is a developer tool chain that brings the ease of web 2 to web3 integrating web3 into your applications today is difficult app developers and protocol developers are slowed down by the need to be in constant coordination to maintain compatibility JavaScript smart contract sdks limit adapts to just the browser pre-built steps handle developers ability to build Dynamic applications and lastly JavaScript limits performance and creates attack vectors do better we built a web 3 wasn't runtime for universally compatible smart contract apis this allows protocol developers to implement user-friendly wrappers in a language agnostic way these waza modules paired with a subgrapher historical data querying combined together to create a single graphql schema that defines the entirety of the protocol we call this graphql schema a web 3 API web3 apis live on ipfs and are addressable using ens they can be queried from any language or platform node browser c-sharp C plus plus rust go python you name it the apps only need to include our lightweight client to query any web3 API in summary web3 apis instantly integrate into your applications run on all devices and interact with your favorite peer-to-peer protocols here we have the web3 API CLI this command line tool allows you to manage a test environment query web3 apis and also build and publish a web3 API first off we'll make sure that we have a test environment set up for us to use so we say W3 test environment up if we look in the background we have lots of different Docker containers that are already running these are representing our different peer-to-peer protocols that our webview API will be talking to like ipfs the graph and ethereum next we'll build our package and so first off we need to build and publish the contract and so now that we have the test environment set up let's build and publish the contract like you normally would with truffle ethers or orbiddler and then lastly we will build and publish our web3 API what this command is doing is it's compiling the webassembly modules and then is building the subgraph and then lastly it's uploading it to ipfs and ens when all is said and done it prints out some handy Uris that we can use to go and further inspect our package that's been published here it is on ipfs we can see all of our files and these files as you can see the Bluetooth API these files are identical to our protocol's build folder and so now that we have it all published let's actually use it and so normally you would write your tests in let's say JavaScript and you would run it with jest or some other test Runner but we developed something that we think is a little easier to get up and running with so with this command we will execute a recipe a query recipe it's written in Json and what it does is it makes different queries to the protocol here you can see gits and sets made to the contract here are your transaction receipts and the value returned from The View functions and then lastly we have a query to the graph where it's going to fetch the historical data that's been cached in the graph node all of this in this small little app package where you can just Define your contracts mutations queries and your subgraph and publish it all as one to the magic of webassembling graphql we're able to bring smart contract protocols into applications with lightning speeds while with minimal technical knowledge required any developer armed with a web3 API client and CLI are ready to traverge the world of web3 we now have a blazing fast Dev Loop multi-platform support Dynamic applications and secure and efficient sdks executing inside of a webassembly virtual machine here's where it's currently at in development client applications can fetch parse and execute web3 apis using a combination of ens ipfs and graphql and webassembly the webassembly smart contract apis executing and the client can communicate with peer-to-peer Networks and we have the startings of a user-friendly CLI that allows developers to easily build test and publish their apis there are some things we're planning on in the immediate future and here is our current Northstar web3hub a place for developers and users of like to come discover use and fork web3 apis for their specific needs web3 Hub will allow users to visualize the graphql schema of the API they're looking at query the API in its entirety and lastly publish user-friendly dashboards at the drop of a hat thank you so much for listening this has been web3 API presented to you with love from diorg come help evolve web3 with us and hopefully we'll make the world a better place foreign I guess we'll turn it over to the judges for some questions just nice very very very nice demo very cool awesome thank you and uh yeah we we kind of didn't show a lot of the code for a reason um to make it more digestible uh but but if you'd like me to pop open that project and show you what the web3 AP guy actually looks like uh I can do that for you okay great work really really awesome see us is going to open up a ton of possibilities yeah definitely that's the whole goal because currently you know people are writing their wrappers for their protocols in JavaScript and if someone wanted to build let's say like a game in unity and C sharp or write some server-side application or anything else uh they'd have to kind of rewrite the Integrations for how to use uniswap or let's say like die or something like that because we all know that smart contracts become a bit more complex as you get to optimizing them and you really kind of need this application layer SDK cool um do you have any plans um to take this project further absolutely yeah so if you visit web3api.dev um there's a mailing list that you can sign up for there um what we're planning to do is is gather initial Charter customers to where we can talk to existing protocols see how we can best support them and basically Implement a webview API for them um and then that'll kind of Harden the standard um Harden the the tool chain and once we have a few protocols then we'd like to you know onboard more and more adapt developers and lastly launch the web3 Hub where we're planning to host all of these uh and the web3 Hub will be something where you don't have to publish to it like let's say a GitHub repo you have to make a GitHub repo on GitHub um since all of these web3 apis are published on ens you can simply just use the web3hub to view your webview API that's published permission permissionlessly on your own ens um and then the cool thing with webview Hub is to be able to have dashboards so this will allow you to end markdown basically say here is my list of users and then here's kind of the associated query with it um and then maybe here is uh on each user I want a button to be able to like add rewards to them and here's the query that that button in books and the whole goal is to be able to create user interfaces for your users without having to create the UI yourself so that protocol developers can just author this markdown off of these queries and then these dashboards are ready for for their users for their protocol cool and um if you'd had like a little bit more time in this hackathon um what what do you think you would have um what what more do you think you would have done yeah so there were a few shortcuts taken in the JavaScript client that we have developed um namely supporting web workers uh because currently the asynchronous fetching and webassembly is done using um nodes workers that aren't browser compatible so anyway uh making a browser compatible and then secondly creating the python client so that we could show you a demo of how this is actually multi-platform great um thanks it sounds really great um next up we have project VP Guild um if you guys wouldn't mind sharing your screen and and kick off your demo thanks so much Jordan my name is Aaron looning and I am team VP guilds and this is my hack FS 2020 submission VP guilds is a decentralized social media Community platform currently hosted on fleek built with near protocol and textile hub threadsdb how it works it uses near accounts as textile identities for textile it gets associated with the lib P2P identity that is used to receive a textile token to create user and app level threads using textile threadsdb in order to ensure ongoing access to user and app data in the event the browser local storage is cleared the miracound live P2P identity and textile thread IDs are encrypted and stored in linear chain inside the adaptomir contracts link can store unique ideas on chain to content comments profiles and so on and textile Hub Collections and Records set up to store the actual data on ipfs and finally it's all been deployed to Fleek which I have to say was an absolute uncomplicated pleasure to do welcome to the community platform for Vital Point Guild we're going to log in using our near account authorizing by deploying Guild once logged in we'll head over to our profile page and set some basic profile information the profiles will be extended in future and of course we have the ability to delete the edit as necessary which updates the records being stored in ipfs through textile heading back over to the home page I want to post my monthly Guild contribution report standard Forum publishing toggle date selection full editor with support for image and video [Music] stored on chain pointing to the textile record holding all the data which has been sent off to ipfs of course need the ability to manage both published content and draft content this is handled with user and app level threads when user publishes record is mirrored in the app thread if not published it resides only in the user thread heading a draft piece of content is done the same way as published content just don't flip the switch now notice there are no passwords or signing interruptions in all this the keys and identities are managed by the wallet browser local storage and encrypted on chain making new user experience well fast and recognizable and the app never has access to any data the user doesn't want to share further if they did share and change their mind down the road they can delete it and it's gone commuters are no good if it's just you talking to yourself so let's log out and log in as another user again we'll set up some profile information like three box does for ethereum I'll probably evolve to see that profiles become a composable component essentially making them available to any dap on near that wants to use them like a plug-in module of course with that is stored on ipfs or filecoin as we're building on a blockchain tokens are built in notice the user's account balance in a minute we'll come back to that but first let's go leave a comment on our other users post basic functionality you want to expect on a community platform again the content is linked by ID to its parent and the data records stored in a textile collection [Music] cool now there's a conversation happening let's get back to the money so far this demonstrates basic functionality whereby one user may want to reward another user I also Envision attaching value to likes and other gamification mechanisms clicking the button transfers one near and we can verify it in the user's wallet notice that all of these actions are using such minuscule gas amounts that they aren't affecting the overall account balance as a full-featured community platform it's obviously not production ready yet and consider this more of an MVP proving that this decentralized community platforms possible and potentially inevitable it will eventually evolve into a fully decentralized white label social media Community platform that people can use to grow and engage their communities I invite you to try it out get in touch with me or check out the code on GitHub I want to thank you for your time and another great F Global event with hack FS [Music] thanks Aaron um yeah over to the judges for some questions I'd love to know where you're planning on taking it like do you plan on open having a totally open source having people add modules that they would like to see in their guilds thank you I think you're muted all right start again yeah so I kind of built it right now to for the guild that I'm trying to run and build the community around that but uh yeah I see making everything so that anybody that wants to run a community can basically take it and build out their Community with it so uh what was the hardest part about working on this um pretty much just getting to know how textile and how near and all those things work I just got introduced to near at the last uh at Global hackathon actually um and I kind of rolled into the ready layer one hackathon so I kind of saw this as an opportunity to dive into that more and then when I found a textile um got really excited about what uh we could do there in terms of kind of replicating what's happening in like WordPress with tables and stuff like that to kind of build these things up pretty easy so out of uh everything what do you think was the kind of the accomplishment you're most proud of uh out of everything I think uh finally getting textile to work and and replicating or giving the app access to the the app level thread and the the user access to the their their threads and then kind of replicating that I understand textile I think is doing more fine-grained Access Control uh in the future which will probably make all that that simpler um this is probably isn't the the greatest way of doing it but uh it was it's working for now and it's pretty happy to get that that going um the other part that was a little difficult I had no intentions of uh querying uh a back-end authentication server to get the the textile token or the uh the encryption key in order to encrypt some stuff on here I never did get figure out a way to get around that but uh that's kind of something I'd be looking at trying to figure out in the future awesome thanks and great music throughout the video thank you for that Aaron I guess um what made you pick Niam uh I think it was just the opportunity at the time and plus the fact that I'm enrolled in there their VP guilds program so I'm trying to build out that Community they currently use a community platform called tribes for uh our tribe for for their Community engagement and I figured if I'm gonna build out uh something on near I'd like to have something built on here to to do that with so okay great thanks so much and that was a great demo um next up we have project orbit you guys can share a screen and take it away Chad hi everybody hi there I'll uh quickly hi sure thanks hello our project is called orbit and it's a strategy game our team is comprised of three developers and a designer based in Asia what we build is a coordinate based map strategy game with avatars tokens and interplanetary narratives how the game works is players use avatars with unique DNA to battle for tiles on planetary Maps or tokens are mined by owning the tiles maps and state are kept on ethereum and it's a combination of risk and Goldberg games the game Mechanics Work like this one is you can buy a tile anywhere on the map if the tile is already owned the previous owner is given 2x the price in eth number two you can take a title and this is done by allocating or tokens to uh to surround the Von Neumann Neighbors on a particular tile number three is you can battle so you can place place your ore tokens directly into the Von Neumann neighborhood of an opposing player and this results in a risk role that is determined by Randomness uh you and also you can do an aerial attack which is you can attack any particular tile anywhere on the map by allocating more tokens there okay I'll quickly demo our app for you uh this is the orbit strategy game and the first thing you have to do is you need to create a new Avatar so I will go ahead and I'll create a new Avatar let's call her Sarah and she'll be a female and I'll change her hair color to Blue and her eye colors eye color will be pink and skin color boom okay so we create a new Avatar sends a transaction to the network you confirm it this is an ERC 721 token with you unique DNA and that includes strength intelligence and vitality and this is used in the bias of Randomness in the in the in-game risk role okay so what you can do is you can play on a 112 by 63 planet map we hope to create many different planet Maps but we only have Earth available this is stored in a smart contract on the ethereum network so uh you if you want to play you need to join the game which uh I might have already joined I haven't so I'll join the game first and uh the idea is that you can you can first you can buy any tile on the map so it incurs a a fee of eth you can buy a tile and for every block that you hold one of these tiles it means you new ore tokens so the ore tokens are an in-game resource and they're used to bolster defenses against attack and also to allocate to another coordinate for attack similar to how risk works it also has principles of the Go game so if you if you allocate tile or if you allocate ore tokens to a diagonal neighbor you can then acquire the two Von Neumann uh neighbors so for future work we want to improve the game narratives in ux we need to test and Harden the solidity code there's a lot of work to do for debugging the ux and polishing a client and also implementing the the contract method calls that we haven't already done we need to create new planet contracts we would really like to implement the chat with textile space demon we haven't done that unfortunately yet and hopefully we can raise funds to keep our team together in the project going thank you very much for your time thanks Chad sorry yeah and if so did you know foreign quick question is is sort of have you thought about sort of gas fees or and I can batch this and how many you know for a game like this it seems there's a couple of calls that uh you know that at least at the current moment uh are a bit challenging uh with the current ethereum sort of gas fees that is true yeah gas fees are are definitely a thing um so we haven't necessarily thought about uh batching yet um but we have optimized the contracts in a way that we're sending um uh minimalistic data um Chris is on the call maybe he could uh he could speak of that if you wanted to but yes that is it that is an issue um you mentioned that if someone owns land they get paid 2x the price of the land but on the slide it said that the payment by the user who's buying that land is 3x can you explain the economics a little bit better in regards to you know how you buy land sure so the sure thanks for the question yeah the uh the contract will take 1X um there's a governance contract that controls all assets that go into the uh the contract so uh the idea is to restrict the the notion that you want to to buy um you can you can initially buy but you want to acquire or tokens and play the game that way we don't want to have the game restricted to simply just buying and people bullying around with we want the game to happen with or tokens cool thanks is it just one large game world or do you have like multiple game sessions uh each well we have we have Planet so uh we only have Earth of the one planet now called Earth but we can create multiple different planets and each planet can have any different type of game mechanic uh we just have a relatively simplistic game mechanic right now that is that is um related to what we have uh but it's it's Earth uh but the idea is to have interplanetary uh competition as well so each each planet is a different contract and the governance contract controls which uh which contracts are are active in the in the in the ecosystem so if I go between planet to planet I can use my tokens but the mechanics of the planner might be totally different correct the tokens are are Universal however your minted tokens uh in a particular Planet but you would have to withdraw them into your wallet and then put them back into another planet cool what was the biggest challenge you guys faced when you're working on this game uh well I think uh probably working for me as a working on the uh primarily on the front end working with web3 and making Network calls into metamask and getting transaction payloads figured out and um and and making sure that everything's happening um doing the event management and making uh the ux transition happen based upon the delays and legs in the in the block times so the ux is the biggest issue and I would say that handling those transactions is the biggest issue awesome great work it looked beautiful thank you Aiden I heard you mention a random function what do you use as your source of randomness yes so so I wrote that in it's not really true Randomness but it's something that you the users can't really control without an inordinate amount of money being spent and all it is is it's a hash of the last block hash the last block number and maybe something else in the environment that's available cool thanks so much um if there's no more questions from the judges uh we can move on to our next project but thank you so much project orbit um that was a great presentation and next up is Ascender from project and when boosting create and share if you could share your screen I I don't think okay great um he is not going to be speaking over the um there is going to be no audio for this video as Kendall um you be giving a little bit of context um for this for the project you're presenting there was a brief demo at the end is there any way we can kind of look directly at that yeah that'd be really useful I mean even if you don't want to speak just walking us through that might be helpful yes I can't speak now sorry for the video without audio and and uh like the idea is a very I think that and the idea is very simple you know people can write the article and they share save the article on ipf or falcoin and the people will send falcoin as a gift to the water and uh the good good article we are stories forever in this way this idea is very simple and I'm actually working on it so those are also act as a wallet as well will you will you be keeping users uh filecoin as well foreign [Music] what do you have a plan next for the project my next plan is about the cloud coin storage and also Falcon store in Mana so I want to help people Doris Dell fell or article on bitcoin more easily and uh the other part is about the gender Falcon as a gift I also wanted to make it a more simple what was the most complicated part of the project that you found I think that the most connected part is about the bellcoin story because I wanted to help people store detail at your own every [Music] well how people slowly down and draw for more Falcon note so it is some Fair coin so I also will help to Authority and the questions and um going to run very well people will help explore the app called too if they not they I think if they will help the store in that article for longer cool I think go ahead I think it says you should never change the content article on one of the census so is there any way the author can change their article after they've published it uh no sorry I I didn't uh can you speak again yeah there's just a statement at the first sentence that says should never change the content in an article and I was just wondering if the author wanted to change the content and article in the future is there will you add that feature um yes I am considering if I I think I will use iprs cool thank you what was your favorite part about working on the project my birthday part is uh Falcon throw rate I think it's really exciting about the bellcoin because the rain had but uh I mean it's very happy bellcoin project run better and I'm running many tests on it I have already successful storage and retriever on YouTube cool thanks so much um you can stop sharing your screen um if there's no more questions from the judges we'll move on to our next project um data exchange and analytics optimization if you guys could share your screen hi and welcome to the data exchange and analytics project the main idea of our project is to generate at the centralized data microface with any type of data set that can be used to train animal models using our automated service pipeline the idea is to use ipvs with flick space demand to upload and control the data sets per user using their buckets creating folders with the ethereum address the data will be completely encrypted and the user will have full control when a user upload their data set an fft nft will be created so it can be sell or transferred with another user our project divides in four different categories that the centralized data Marketplace to keep the data asset secure to buy and sell private data and to use the data Pipeline and create AI models Welcome to our web application MVP we use metamask as the authentication Service the idea is to later on use three books to validate the user identity once you are connected we will have a section for the data Marketplace of people that have already uploaded their data sets and are currently available for purchase the next view will be the data analytics which we will look similar to this current view with a difference that only your purchase data sets would be displayed as well as your own data sets you uploaded that may or may not have you set for purchase there are two ways to upload a data set one will be using the sidebar or clicking on the top right button once you select that button you will view this window where you can proceed to upload the data set once you select the data set you will need to fill out information such as description price category Etc once the file is uploaded to ipvs nft will be generated using smart contracts with ethereum for now it will be uploaded the document using ipvs libraries but the idea is to later on use space demon from click to use that same node to train the ml algorithms now we will test test the hash document to see that it was correctly uploaded foreign now moving on to the pipeline the pipeline will be divided in four main categories the first one will be to identify the data set content we want to explore what the data set is about and identify which type of problem we are dealing with especially if it is a classification regression clustering Etc in order to do that we will request the user to identify the target variable that will help us Define the type of algorithm as well as the hyper parameters needed for them the user will have the opportunity to tune these hyper parameters if this if they wish to do so if not then we will use what they seem fit and or use the default values to proceed once you have categorized the type of problem we are dealing with we will proceed to select Which models we want to run for this initial prototype we focus on classification algorithms only which will run five different ml algorithms however if the user wants to run only a few of them they will be able to choose which ones or all of them next the training will begin and finally a model will be generated where the one with the best performance would be the one that wins we will show comparative plots of the performance of each of the models so the user is aware of how each model behaved our idea is that our data and the algorithms are in the same Cloud Server offering this application as a data exchange and analytics as a service it's a really cool project my name is uh how large do you guys expect your data sets to be sorry I was just curious how large you expect your guys's data sets to be for them like we expect it to be big right now uh the tests that we did were with data sets um like dummy data sets with around like maximum of 10 000 rows but I mean we expect to have the enough power like compare power to run stuff with GPU and stuff like that awesome very cool yeah amazing work um in working on this kind of what what would you see as being kind of the biggest challenge um and then moving forward how how did you overcome that challenge okay I I think the biggest challenge where they use all the tools are around the ipvs principal or textile and fleek uh we don't finish to implement the tools of space them on but the idea is you spend the Monopoly to put all the big data in the same server as a so I think this is worth the hard work and also predicting like because we wanted this to be not only for people that already knew how to do uh diagram science but to anyone to use it so in order to predict like what type of problem we're dealing with it will be kind of hard so at the beginning we just want to uh maybe categorize uh what the user will will be doing but um yeah that will be another challenge awesome thanks great work thank you is there anything new that you guys learned um from this past month in hackaths [Laughter] I was to learn all about their ideas and Implement all the JavaScript libraries uh her hair around is the all the web tree yeah yes yeah she don't know yeah yeah if you had more time what what will you add oh yeah what would you ideally build as next thing yeah I think uh if you have more time maybe we'll create all the marketplace for the Dallas uh we create some the idea escape and fits to transfer the data or sell this big data and another hands is create some backend services to implement all the and files and put all the files equipped in that server with the all the GPU for machine learning's algorithms great thanks so much um I hope you guys continue working on this project um it was a really great demo and next up we have project secure beam thank you guys share your screen [Music] [Music] thank you thank you very much definitely winning you're winning coolest music for sure thanks thank you yeah I saw some German uh yes so I'm from Berlin Berlin has really good music like that so I saw some German screenshots descriptions and stuff so it's like yeah he's a German guy great thanks I might have saw something that I didn't see super clearly but was a Dropbox paper uh thing that you were sending from Dropbox over to your uh that is just a default file from Dropbox where I think they introduced Dropbox paper so it's just a functionality of it so it's it was a very clean Dropbox account which I connected through all out and yeah then it's just listing it awesome it's a really cool project oh cool thanks thank you if you have more time what would you add I'll definitely more um aspects of decentralized software like orbit DB and we we we're not able to authenticate orbit DB to make it really private that's of course the core functionality because we're into make it like a decentralized cloud client and be able and enable users to of course connect more uh cloud storage is like Dropbox is already in let's call it an MVP and we're working on integrating Google drive or box or any other Cloud servers that you are able as a user to um migrate to ipvs awesome great work thank you thanks um one question I had is everything happening client side or does someone need to run a server to sync the files no everything is happening on the client side that was a one of the hardest goals we liked to achieve because uh in my experience it's easiest to just open the browser point to some URL and that's it and all the functionality is there so that is one key feature we aim to uh to to to leave as it is to just uh work in as a web front-ends um and it's yeah we aim to to introduce a pwa on a decentralized and authenticate with orbit TV to to make it really private uh but yeah there's no server involved so just currently for hosting it's in the in the link and of the description but as soon as we we get it on IPS working so the the pwa itself uh it will be in IPS URL and um future plans for the projects have you got anything um in line there yeah of course uh we went to uh extend the functionality of um sharing content and of course moving content to ipvs to keep track of the content and uh to connect of course more cloud services like Dropbox and Google Drive and father function of other Cloud storages and yeah that's that's what we're currently aiming to to make it really easy for the end user to migrate all their personal uh cloud services to ipvs and to have the exact same experience like for example their Dropbox clients that's the aim of the project cool and if there's no more questions from the judges um thank you so much project secure beam that was great thank you for the opportunity thanks yeah cool next up we have project iscc registry if you guys could share your screen for the judges hello my name is Titus and this is the ISSC ethereum ipfs registry hack proof of concept for a decentralized media content registry so uh what is the problem with the current uh crypto hash based content addressing so the main problem is that from a human perspective um content is really something different than data and cryptographic hashes identify data and not content so for example if you look at these two images from a human perspective they are the same content but if you create a cryptographic hash for Content addressing then the hashes will be completely uncorrelated because the data that is underlying the two different image encodex is very different so what the ISSC solves it it will create the same Content ID or at least a part of the content ID will be the same if the structural visual perceptive content is the same or similar the idea of this hack is to implement a decentralized registration protocol so we take a full ICC code everybody can generate it for any kind of digital content and then you can register it on any public blockchain and what the protocol does it indexes or watches observes the different blockchains and comes up with the short ID that resolves to the full iscc code but it is owned by the person who registered the code and it is globally unique and short so what the heck does the hack actually do so a fair warning this is not an end user application it is nerd staff command line stuff and what we built is uh a proof of concept of the whole flow for a decentralized registration protocol so here's the demonstration of the actual hack we have many moving parts so we have a local test environment the sodium blockchain we have an ipfs demon running and here we demonstrate the command line tool so what can it do we have basically four commands one command is to deploy the contract to uh to the serum chain and then we have the Observer service that watches the contract for a new ICC registrations then we have a command line tool uh command for registering ICC codes and for resolving ICC codes so let's first deploy the contract irag deploy [Music] um yes and yes so the contract has been created on the on the chain and the local configuration has been updated to use that contract for registering ICC codes now as a the next thing that we need to be running is the Observer service so I rag observe so this basically is a service that watches the blockchain for registration events and then calculates the unique short ISSC ID so now we can we just register some digital content so let's try with um register [Music] so this is the ICC code that has been generated um we say yes to registration and the contract has been called and the ICC has been registered and this is uh probably the iscc short ID that has been generated we don't know for sure because there can be race conditions we need to ask the meta index to to be sure and we can try to resolve this new short ID and resolve we have that short ID yes and it works so um the short idea resolves to unchain data the full ICC code the wallet ID who registered it and the content ID that points to the metadata of the registration which is stored on ipfs so this metadata was extracted with the ICC generator encoded in seabor stored on ipfs and is now resolved from the short ID thank you for your time and thanks for this great hack event which was really a lot of fun and I learned an awesome amount of new stuff that was an awesome project uh could you go into detail about uh some of the challenges you faced working with ipfs well ipfs it was easy uh you know I have two challenges at least I'm working on Windows and I'm coding in Python so I was pleasantly surprised with ipfs everything went quite smooth the Big Challenge was for me I wanted to do the CID um by myself without having to have ipfs running to come up with the content ID and there was some trouble with uh with the um Proto buff not being deterministic in uh serializing the stuff so I I was not able in the short time to to reproduce the CID from python but yeah so are all the cids on ipfs are you able to access them right now and from ipfs Gateway um I don't understand your question exactly I'm just wondering if for any of the things that you uploaded for your project can I access them right now over an ipfs Gateway yeah well there's not much you get because it's a c board encoded so what you get is cbar encoded uh but yes the the things that I I registered should be available on ipfs if I'm not sure I don't have it running now but um what you if you resolve the short code to for Content ID CID from the CID you don't get the content but you get the metadata which is encoded in seabor uh which might point to the actual content that's uh up to the registering party cool thank you so much you're welcome um sort of high level can can you catch me up on sort of the so why why do you use this or who uses this well okay so this is It's a quite broad initiative and it's on the protocol and infrastructure level so the idea is to have a new kind of content identifier that itself basically uh does um retain similarity between different kinds of content so if you have these iscc codes uh you can index them and if you decode them they are actually um uh feature vectors bit vectors so you can compare two iscc codes against each other and you can see how similar the content is for example if you have one image and you have it in JPEG and you have a PNG or a video content so it's specific to all the different content types um you basically we are turning the search engine inside out by the identifier being something that retains similarity between uh near nearest neighbor kinds of content so basically the idea is to have an open infrastructure for a Content recognition and indexing uh based on open open standardized fingerprinting of media content okay very interesting great work um in terms of next steps kind of what do you see um as being kind of the well there are uh this is a you know the passion kind of project funded all by my passion so um I'm I'm not sure what will be next I guess um um bringing the protocol forward uh maybe having a user interface uh to to show it a more uh uh show how how this could be an end user application to you know register and make your content uh discoverable and um yeah indexing for nearest neighbor search uh could be also something that's that's mixed up awesome thanks for that great if there's normal questions from the judges thank you so much project iacc registry um next up we have project Rick Lou if you guys could share your screen with us can you hear me yo yo how goes peoples good to see you good to see you too um should I just start it then awesome oh maybe hey hey how's it going uh it's good it's good so uh we should probably get this uh hack FS thing done and out of the way right yeah for sure because I own rickmoose.eth on roster if we head over to rickmoose.waxlet.com we'll be able to see all the Articles I've currently posted during testing and we can click on the first one and see here is a article I reported over from my medium site eventually I'll be reporting all my articles over here hey Rick would you mindful screening that oh sure um I didn't realize it was a full screen for you is that does that work yes a brand new article andrews.e and it will bring up the editing page from here we can start creating a new articles uh I've got one I've actually started that I never finished publishing on medium so we'll use that as a demo so here we just use General markdown to create the article we'll upload an image which will get put on ipfs and the link will be injected into our article and then we'll just continue to copy and paste the components that I've already written prior [Music] once we are done editing this article we're going to save it so we can share it on ipfs if you notice in the URL there's a key that key is used to encrypt the article all articles in waxlet are stored encrypted until published now that we're done we're going to share this link with Lou and get some feedback to see what she thinks with the article so far I'm reviewing this article everything looks good but I think it would be nice to put a caption on the picture now that we have lose stamp of approval we will go off and we'll publish this when we publish the file doesn't change it remains encrypted in ipfs we simply blurt the password out into the Universe on the blockchain so that everyone has access to it no data is stored on chain we simply use our contracts to verify the owner of the ens name and log entries which can be quarried using get logs later uh this fully allows for revisions for deleting and updating articles and our new article is ready for the world to see [Music] and as you can see our new article is already showing up in the list of articles for Rick news [Music] that's all oh it was back to me yet can you hear me cool yes we can hear you excellent uh thank you for sharing such oh sorry Aiden go ahead I'm gonna please please uh thank you sharing such a cool project um so I heard in the presentation you mentioned that you are encrypting things until published could you go into more detail about that so yes actually they're always encrypted um basically when you create a new article it generates a brand new 16 bytes key and that's used using AES CTR one to uh probably 256. something like that anyways uh to actually encrypt the the content so it's always stored encrypted in ipfs this would normally be an issue because ipfs does not serve content that's not popular most like bit uh bit swap requires like content that is more frequently used um but because eventually the encryption key will be released that means that even encrypted data will be used by many people because once they're seeing the published data they're still loading encrypted data but they have the decryption key right there in the URL and so it means anybody who has that URL can preview it but if somebody's just looking at ipfs they can't see what your secret article is about yet got it thank you and and the reason for doing it this way is that because you wanted that sort of internal preview mode and then publish it or exactly exactly because if you're used to medium like you get this magic little link you can sense by uh bullets for that but it's also because you might decide never to publish an article you might want to just keep it as a secret uh maybe you're organizing some coup against the government because they're arresting people in Portland or something so you might want to keep some sort of uh private information out there and just share the link around and once the link disappears if no one has a link the content is now just permanently lost to the ether because it's stuck encrypted in the universe incredible work Rick this is awesome um what are your kind of next steps do you see yourselves working on this and kind of releasing a version where we can start moving away from medium and I mean so what are major features that um you still don't have or do have and you're proud that you accomplished in a short amount of time um yes there's still definitely I definitely plan to continue this because I hate medium like I always say medium feels like that Banker who says they don't care about your money they care about you but you see them staring at your pocket the whole time like it's so I don't like that feeling of medium um actually so one of the things I'm really proud of Lou can cover her uh her protocol buffer implementation and all that good stuff go for it Lou okay so for this project we we try to make it simple so we actually didn't use any of the protocol but for uh Library we actually had to write it ourselves and um we also kind of query like multiple um ipfs gateway to pull the data if the content is like if one of the gateways down then we actually can automatically go to the next gateway to get the content we also verify the content in browser so that's like the feature that we really want to get into this app um yeah right so as long as you've loaded this static web page all the content you're seeing you are guaranteed is correct uh if a Gateway tries lying to you it won't work Lou also didn't mention but she also implemented this on the put side so before putting the data it gets chunked up and she verifies that what the pinning Gateway says is actually what was put in there and so gateways can't lie to you for getting recording awesome um oh sorry one quick thing uh what Aiden said uh the other thing I want to really get in is like a wise week editor kind of like what a medium has this was just kind of the short shortest path awesome awesome thank you so much it was really great to see how how usable it was kind of by the end though you're saying you want to do all these things um it's still pretty usable right now it's a great work awesome thanks thank you great thank you so much project Greek Lou that was a great presentation cool music um thank you very much cool we're gonna take a five minute break now before the next team comes up um so when we see all the judges are back online with their videos on um we can get the um next half of the session started cool great we'll just um wait a couple more seconds for the judges to um get back to their screens and put their videos on and then we'll kick it off um with the next team cool it looks like everybody's here um our next project app is Project grid if you wouldn't mind sharing oh yeah if you wouldn't mind sharing your screen for the judges um we can get the next session started hi we are social labs and we're presenting grid protocol my name is Benny and this is my teammate Nathan who are we we are two recent grads at UC Riverside and we're just into crypto so for this project I worked on the UI our smart contract and then also our subgraph for this project I worked on the UI and the smart contract so the idea behind this is that we identify a problem where there are multiple social networks and we wanted to use web3 so that we can bootstraps themselves quickly what do I mean by that well we want to create the platform as a sermon where users can own their content for the solution we identified where we you want to take a photograph followers and following and you want to put it in a free and open protocol within the blockchain then you want to pick your following to any social network out there essentially almost all of them where you want to put a web 3 and so you can onboard the users faster we have a short demo of our project so we can see here a UI that shows all of the accounts on our local ethereum network you can view users looks like we're already following that person we can go over here and we can follow someone and then after having our UI update we'll see that we are now listed as one of their followers we can unfollow which then sends um the transaction to the blockchain and updates the states that were now no longer a follower so how does that all work um we have a smart contract that holds mappings of who's following who between ethereum addresses and then there are functions in there for follow unfollow delete follower and then each one of those will also emit an event when it's been performed then we have a subgraph that indexes all these events so that they can be queried by any application that wants to and then we have our UI that shows a simple interaction of following and following other users that are part of the uh social media Network so what else would make this even better that we didn't have the time to get to so essentially what we did here was just Implement like a free subscription tier but really what we wanted to do was to let users set multiple tiers of subscriptions where they could also be paid sort of like patreon or sub stack and then users could set content posted on filecoin and FPS that would be only accessible to people who have paid the subscription I thought that might be implemented with an nft kind of thing and then also if you just want to follow someone for free it seems like you shouldn't have to pay you know 50 cents or a dollar or whatever in gas fees so ideally that would probably run on some kind of layer 2 solution that can minimize or even eliminate that cost that is all thanks for watching thank you bye okay great um did you guys learn anything um new during um this past month in hackabis yeah um I didn't really know anything about solidity or graphql coming in so that was pretty much all new um you think so I really like this concept it's like one of the core web3 kind of Concepts that you like own your data or like do you think you can extend the set also so maybe any content I've posted Etc has also sort of associated to my profile I could Port it over to another UI yeah so we're like thinking about ways to do that and um couldn't really like land on something that seems good enough I guess but ideally uh you would have your content be in there also uh that would be a much better upgraded version um sorry if I'm kind of missing the Mark here but is this kind of like a a way of being able to kind of I guess track all of the profiles or all of the things that someone has um so I would be able to know what all your official accounts would be like is that the idea of this project kind of uh yeah because so it's like we wanted to have the so it felt the most important part of like a social media profile is the people that you follow people who follow you or friends or whatever that connection looks like and so we thought that if we could move that um data into its own like independent protocol separate from the platform that it's running on then it gives more power to the users because they're capable of exiting platforms they don't agree with and then when they go to a new platform all of their friends or everyone are still there um what was your experience working with ipfs so I think the only ipfs stuff in here was just with the graph awesome really cool I mean definitely see the beginnings of something like a key base for example um where you could you know potentially be linking to a whole bunch of things so I mean really really great work um especially being that you yeah this is your first time in the space from what you've said so congratulations nice work cool um do you guys have um plans for your project going forward yeah we want to expand it to be able to have like paid subscription tiers so we think that like kind of uh able to do like a patreon kind of thing would be really good um because that's like how a lot of people support themselves and then we can move that into something that gets like the advantages of blockchain cool thanks so much um if there's no more questions from the judges um we will move on to our next project which is Project linchpin if you wouldn't mind sharing your screen for the judges hello I'm Scott Stevenson and I'm joined by my teammates Nate Hart and Yusuf kawiti lynchpin is a bundle of many applications anchored by protocol Labs ipfs lib P2P and the public ethereum blockchain our first order of business for hackaths was to determine if we were going to be able to provide value to the sponsors so we had to ask ourselves do we understand the objectives and the prizes do we have the technical ability to not only satisfy the objectives but to also deploy a working solution and also will the judges see our submission as meaningful and worthy of granting resources so our hack FS research revealed the following to us the power is in the content ID or the CID these cids should serve content that can be found by web3 domains and we've made it through and are really excited to show you project lynchpin now linchpin is a bundle of many applications uh each one of these application either creates a CID or executes a transaction on the ethereum blockchain now ultimately we choose to lean into two use cases one is legal agreements in the digital space and the other one is Enterprise level claim management now we have experimented with textiles buckets and thread DB it's a power gate and using filecoin and the results are still ongoing that we use ipfs every day in our business our main deployment for the hack FS submission is going to be the claims dashboard application now as you'll see today the lines between information entertainment and business applications are now starting to merge together so imagine a play space where you buy a digital ticket to pass as a tool to unlock fun and services and that you're going to be able to keep it as a Memento now think about games with nfts as the reward system that's where lynchpin is going to step in I believe we should only touch the expensive blockchain as little as possible and that's where the cids come in handy the CID the bare minimum onto the ethereum blockchain and then referencing back a Content hash to deliver all of the bulky content is where we believe the future lies now some of the smart contracts that you'll see here today that we use are very compact they're very short because all we really needed to do is just pass that that CID now some of the other contracts such as the nft deployments are more sophisticated because they have a lot more features and we like to show those and how those show up in other people's user interfaces like for example openc now at the heart of the linchpin project it's a pretty simple design and then something that linchpins are perfect for so we're going to use ipfs for Content we're going to use the public ethereum blockchain as the set of layer and we're going to be using linchpins as a user interface user experience bridge between the two so everything in our demo is served by ipfs and cids or by the front end that passes information from the memory and there is no back-end databases in this demo so you may ask how are we going to make money with lynchpin well we're going to make money by doing custom installations for people that have an application that need a front-end for it another way is we grow fees that are built in to some select smart contracts that we deploy we're also going to be using nfts not only as gateways to services but also as a reward system to incentivize co-workers or teammates in the digital space and finally we're going to test and deploy projects in web 2 space as well as also in the metaverse now what would a generous Grant allow us to do out of hack FS we want to build a small team of developers with a management layer built in like a dow or a decentralized autonomous organization to handle the accounting now finally the metaverse is a perfect metaphor for ipfs and web3 and it's what the linchpin project is all about it's what joins these two great Technologies together ipfs for content ethereum for settlement and the linchpin is what's going to join them together in a neat user experience foreign so I'm going to be honest I didn't really understand what it is because I think also I don't think there was an actual demo could you just 20 seconds explain what exactly it it actually is yeah just hold on one second while I stop this this uh video from playing right there um the way that uh we approach can you hear me okay you can hear me okay yep yes okay the way we approached uh the hackaths is because all of us on the team already had some experience you working with um ipfs and some of our other projects and what I was really trying to do is bring a lot of those other kind of in-process projects forward and ultimately I said ipfs has been around for a while we understand the content ID and getting that out there on the storage layer now the thread threadsdb um what textile is provided what slate had provided through um all of the videos that I watched at the beginning of hack FS that kind of opened up our eyes to um some other things that we could do with our user interfaces and that is what you see on the left hand side so if you're saying what is actually our submission it's a dashboard it's a dashboard that queries the ethereum blockchain um for information and that information was gathered from the cids because we use cids all the time for Json files or for graphic files so we just wanted to make sure that there was a dashboard available so where we implemented ipfs and textiles isn't basically adding a claim so if you go into here you add a claim it goes out using thread DB and we get the user ID we get the thread DB they get the CID we bring it back into the dashboard and then we start to log all of that information so this would basically be set up as let's say an insurance office so they're trying to track insurance claims of people that got into car accidents so the whole entire operation is based on cids and the ethereum blockchain um and then at the same time we're very interested in using nfts as a device to either track legal claims or the content that is actually stored um on ipfs or the actual claim information that the insurance adjuster or the claims manager needs so I had a really hard time kind of like linking these two which on the left hand side it's the dashboard and on the right hand side it's actually the content um of the nft so if you're saying really what is the demo it's kind of a combination between these two user interfaces which I think that you guys as judges would probably just go try out yourselves to see all the ipfs functionality in the background are you storing uh raw data on ipfs are you storing like maybe a PDF file everything I mean we store everything songs for some things we do nfts we do um I do Vox files with uh nfts now so there's a lot of things that even openc and you know the uh nft you know sort of like marketplaces there's a lot of information that they will query off your Json file but I'm starting to see ways that you can operate a little bit outside of that to start to do additional parameters in there to actually let's say in the art um industry and my teammate Nate in here he comes from the art nft space so I was trying to use their schemas and say how could we expand out of this and start to track like royalties or licensing agreements that are attached to the nfts but we need to expand off the existing nft standard because they can be so much more powerful so big part of this is yeah we need to chase down the nft space but simultaneously I also I mean that's what I loved about web3 API today they're providing us these things that I thought we would have two or three years ago now now they're becoming available today so my job in linchpin is really going out and finding those little like mini applications with those mini tools and really now starting to plug them together so what is my business going to eventually be it's making sure that like we're an assembly company that all of you great coders out there provide those those tools out there and somebody starts to plug them all in because I'd like to have a super app like the super app that everybody can use but it's too complicated we need to break it down into these sort of bite-sized morsels and deliver somebody like an escrow contract or a little art nft or little things like that because that's what we need I think in this space you guys are great developers but we need little bite-sized pieces that people can sort of like bite off and chew on great thank you so much Scott from Project linchpin um that was a great demo um next up we have project monetizing decentralized contents and I will be playing their video for them payments on the internet are broken the digital age has provided Revolutionary Ways to create and distribute content but capturing value has always proven a challenge we've seen only three primary streams of monetization resulting in questionable behaviors this is exacerbated by limited means of controlling distribution and duplication and Amplified by an inability to verify authenticity of purchase content we've built modular microservice protocols that Empower developers content creators bring consumers to better monetize and enjoy digital content without compromise we're not the first to tackle this issue but we are taking a step back to understand the challenges from a full stack point of view by thinking systematically and leveraging emerging web 3 Technologies we have built a full life cycle solution focused on three interoperable but non-dependent microservices smart contract-based payment services providing greater flexibility in how value is captured without compromising is your experience Advanced Digital Rights Management distribution using Cutting Edge decentralized Computing and encryption such as Network trusted execution environments and an hmac based authentication Service to verify content from upload to storage to retrieval and looking at the bigger picture our solution encourages Innovation and payment and distribution models let's take a closer look at the content creators experience using our protocols Pro Connects to web 3 where her ethereum address is connected to a Smart contract which manages her uploaded content payments and purchased content chip what's her latest work which creates its own smart contract this unique contract records the payment terms storage location file information and access to its encrypted content for any client who purchases it she has several options for payments micropayments or users via digitally unique copy of the content or just purchasing one time access subscriptions where a user can purchase access to all of her content conditional distribution where it would be free at first but premium for subsequent views when uploading her content is encrypted using the symmetric key for transport and sent to a networked trusted execution environment using libp upon initial encryption an hmac is created as a root proof of authenticity this proof or follow the content throughout its life cycle the service decrypts and re-encrypts content for storage using a newly generated Bare Metal Key the storage encrypted content is passed to the storage service using textile the storage key is encrypted and stored on chain for retrieval the service will only accept the request from the content smart contract which has verified access to the user attempting to view it once confirmed it reverses this process providing the consumer with a temporary key hmac and content the consumer sees a piece of content they would like to view this user can either buy the content directly and own it forever subscribe to that publisher to see all of their content or we are introducing a couple new ideas into the payment process if a user has a prepaid five dollar a month budget when purchasing they can simply send a gasless signed message to their funded P3 user smart contract to access the content alternatively we've introduced the concept of sponsored consumption an ad agency can offer to subsidize users content consumption in exchange for that user's personal data found within their contract this would allow advertisers the opportunity to forge direct relationships with consumers and generate higher quality leads better facilitating a connection between user and Advertiser we would like to thank protocol Labs youth Global for sponsoring this hackathon we believe in ethereum Native solution with limited dependencies is critical to the adoption of decentralized storage networks by providing storage site encryption with payments and authentication app developers May provide consumers a new way to enjoy digital content we look forward to the opportunity to continue developing these Concepts and helping the ethereum community grow uh awesome presentation thank you just curious um uh what was it like to work with textile buckets and would you do it again and do arrange any challenges I'll I'll go ahead and let my teammates sing answer that he was mostly in that world um actually we I love working with learn and working with Tesla bucket in particular for our use case that um if there is any particular publisher or people want to change their content um those are IPS link of those books that won't be changed so if the Publishers already have you know delivered those IP address laying as you know advertising anywhere for promoting their content and updating the content won't need to change anything the people will just automatically get the updated content awesome have you thought about if you're doing you know especially sort of you know files because I understood each image or file is essentially its own smart contract and so you're deploying that on Smart contract can be pretty gas intensive right I mean I guess I guess for a hackathon this is totally fine but you guys probably spend a lot yeah yeah certainly the some cost uh challenges there uh maybe a side chain or something to uh deploy those um but yeah for now we weren't really uh worried about the cost that would be something we would dig into after the hackathon needs yeah fair enough absolutely and it could it could still be for high value actually images absolutely if the content was worth you know a couple bucks instead of just you know 25 cents then it would probably be fine uh alternatively like the scales Network as a layer two um mandates the use of Intel sgx for the validators and they don't have transaction fees so we already have some level of integration with their Network that would allow us to still pin to ethereum um but reduce the cost of those smart contracts yep what do you think was the hardest part about working on this um project uh for myself and Moises in particular uh figuring out oh we spent a lot of time researching into how we can provision these trustless execution environments um it's something that we have a few ideas that we need to dedicate more time to um you know using things like threshold signatures um and these networked tees um but definitely some high-level encryption cryptography stuff that that would help enable this uh better but at least from my end that's where we spent most of our time found the uh the subscription uh solidity stuff became a little bit more complicated than I initially thought but uh kind of we got a model built in so happy there do you want to speak more to that and just discuss what exactly he had issues with if you don't mind uh we have this uh kind of it's like a four stack solidity contract system and then every time you'd have to make a change to one thing and kind of have to adjust it down the line in terms of like the user is buying it what they're storing what you know in their contracts so everybody has their own contract and just uh managing all the storage of what was happening every time a subscription or purchase happened uh required a lot of going back recompiling and that just took a lot of time great thank you everyone yeah cool um this is yeah thanks so much guys it was a great demonstration I loved all the doggy pictures um next uh this is our second last demo um for the session coming up and it is project d5h if you guys would share your screen for the judges having trouble hearing I think it's muted um could you try sharing your screen again with um just clicking the share sound hi I'm Julian traversa presenting d5h the decentralized protocol for fixed rate lending and interest rate swaps for those unfamiliar interest rate swaps allow One Lending party to lock in a fixed rate while another party takes on a long position on the Market's floating party in traditional Finance interest rate swaps represent an overwhelming majority of the world's derivative volume estimated around 524 trillion annually that said as defy continues to grow we expect more and more users to demand both fixed rate lending and leveraged interest rate exposure two currently unserved markets we plan to meet this Demand with the introduction of defy hedge as the first trustless and decentralized market for truly fixed-rate lending and interest rate swaps defy hedge allows users to both protect themselves from risk and leverage their Capital all with no counterparty risk for hack FS we had initially planned to develop our off-chain order sharing system using web P2P similar to Xerox however with other priorities in a way we pivoted towards hosting our decentralized application in my PFS using Unstoppable and pinata that's about it so let's get into the demo to begin our first user Alice wants to protect herself from the volatility of the defy interest rate markets assuming a current eight percent floating rate Alice wants to place an order for one year five percent fixed rate lending agreement Alice first approves the defy hedge broker contract to access her die and once approved places her order once confirmed Alice's offer is active for other users to accept our second user Bob is confident that the floating rate will remain high and wishes to leverage his capital in order to take advantage of the high die rate Bob can then fill Alice's offer knowing that should the floating rate remain at eight percent he will have yielded 68 percent of it nearly one magnitude more than the eight percent he would have otherwise been receiving once Bob's order is confirmed both users funds are pooled and minted into C tokens on the compound protocol earning interest for the duration of the lending agreement when the lending term has completed either user can initiate a return of funds paying Alice for fixed rate while returning the remaining funds to Bob as expected to demonstrate this I've created an additional agreement which should return 0.2 F to my wallet upon release with that confirmation point2f has been returned to my wallet and our demonstration is complete thank you okay that's about it all right cool so if I understood it correctly it's it does rely sort of on a it's a two-sided Marketplace so you need to create liquidity on on both phones is that correct positive yeah it's a two-sided Marketplace so um in terms of what limits its growth I do expect um there's going to be demand for people wanting to launch the rates or people that have an n on a position on a rate and they can even control it you know there's a lot of manipulability to that and there there is a demand for that so I do expect the limiter to be the demand for fixed rate lending um because that is a kind of untested market right now um I believe Ave has stable rates which are uh like pseudo fixed like they they are kind of fixed but they can manually edit them later on if the rates actually vary too much so yeah it's something I'd really like to introduce yeah I think it's definitely can learn a lot from Land that's how they started I think that was the original idea it was kind of very similar um so you know should maybe talk to the founder and kind of see what they're learning so really uh what was your experience working with oh sorry foreign well I I had kind of put that off and initially you know decided Well if I don't have time for PTP p2pt uh or order steering system obviously I can try to Pivot and I gave myself you know about two weeks to do it and it probably took me you know like 45 minutes so nice yeah yeah it was like it was really surprising how easy it was to host a service you know I plan to as I upgrade over time continue to host it because it's great to provide resilience you know um I think that's actually really important as things go into the future yeah and your application is mostly client-side right yeah yeah um right now it is so all of that was just a proof of concept everything later on is going to be more similar to Xerox where there is um an off-chain order book and it's all shared uh with with lib P2P and um and then you know there is a client side where you're going to be having an exchange at some point there and they're going to be validating orders and all that but right now it's yeah all client-side awesome cool thank you yeah awesome in regards to the lip P2P side of things have you done any research on it in terms of how you plan on implementing it um well lucky for me almost all of the infrastructure I have to build is almost the same as everything Xerox has done because it's essentially just a uh an erc20 trade that's rooted through compound and then timelocked um so so everything they've done is really really helpful in terms of there to zero X mesh I believe that I mean I'm not sure how much progress they've made since March is when I really researched into it late March but they wanted to implement a whole lot in terms of slashing exchanges if they're having any sort of um order uh uh validation or sorry if they're if they're not showing orders at any point or even having geographical um based system with Libby TV so these are all things like I think are really impressive and at the end of the day I think I'm most of the time going to be if not copying a lot of what Xerox has done learning a lot from what they've done awesome thank you so much for the demo and everything yeah thanks for having me do you feel like you um implemented everything that you wanted to um over the past month or is this stuff that you still plan on working on um well again so so the big thing right now is um is building out the decks I I got pretty lucky in that Loop ring recently open sourced their Ducks so a lot of the infrastructure that I need is is already provided for me for that as well um so over the past month or so um what what did prevent me from just doing the order steering system which you know is next on The Chopping Block is um is is break apart their decks and really I'm probably about two-thirds of the way done with all that right now right now I'm building out my back end and at that point I can then integrate um lib P2P for for all the order sharing yeah great sounds cool cool um if any uh if the judges don't have any other questions we can move on to our last team but thank you so much for having me it was great um yeah this is the last project for the session today and I just wanted to give a quick shout out to all the hackers who presented today and who stayed with us on this call um from all parts of the world um and in saying that we can introduce our last project um pyre you can share your screen with the judges thank you hello my name is Austin and this is my hackath project pyre the problem hire is trying to solve is managing paywalled content distribution without any middlemen approaching the app as a content creator first thing in the process is to publish a file this info is passed to Fleek space Daemon which creates the bucket from the title add the file from the path and then Returns the bucket info following that The Returned info is again passed as parameters to the new content function on the pyre contract creating a new ERC 721 contract this new content can now be browsed in your publish content list along with some basic steps When approaching the app as a collector you can view the new content and the library of all previously published content under the collectible content list to collect the content a purchase function is called in the nft contract sending the payment to the contract's owner and minting a new token to your address all of your collected content can now be viewed under that list at this point in the process the user can consider the file to be in their cloud storage or a sort of cold cloud storage to request the content from the network pyre uses libp's Pub sub all online peers automatically subscribe to the contract addresses of content they are the publisher of or have already collected a requesting peer signs a message and then publishes it to the pub sub Channel defined by the nft contract address a peer who receives a request recovers the eth address from the message sender and then confirms it owns a balance greater than zero with that contract they will then get the info returned from the space statement share bucket function and dial the requesting peer with the bucket information once received the requesting fear will join the bucket through the space statement and then pull the file to their local machine now they are free to save the file to more traditional cloud storage or the potential to build in support for fixed own storage is also present here and just this morning I got an email announcing fleek's new space app and I'm very keen to see how integrating that could smooth this process by providing a more user-friendly GUI for managing your published content buckets or managing your collections Library after working on this project for a month and getting a better idea of how all the moving Parts behaved the final vision for the project has changed instead of being a standalone dap and single portal to all of this functionality I would like to see this become more of a Content management system similar to Wordpress if you're familiar as a blogger you log into the back end of your website write your posts in WordPress does some SQL magic to display that in a blog template only with this architecture instead of content being pulled from a SQL database on the web server published content for sale can be pulled to any client that can reach ethereum a standard front-end API could be made available for view react or angular components to build reusable purchase buttons or other features for websites much of that API is already present by virtue of being ERC 721 compatible currently these files do not touch filecoin but I would like to have a storage receipt from that chain as proof the content exists somewhere tied to the nft contract instead of the bucket it would still look to retrieve the file from the threadbucket layer year before resorting to filecoin else The Collector doesn't know if the file exists prior to purchase Empire doesn't yet fully solve the problem of relying on no middlemen until there's a file coin proved to fall back on with Fleek acting as the middlemen in the meantime lastly something that would be a key incentive for honest peers would be to build in reward features tied to the payment functions such as a referral program where if my friend sends me to an artist I can provide my friend ethadres and they would get a cut of the sale the big feature that may need to take advantage of off-change gaming is for every token holder to eventually get a cut of each sale after them once you get into 100K sales per item that would be a ton of microtransactions however building that last one in would turn your collection not only into an investment which digital collections largely lost the property of being but one that could return dividends over time thank you very much for watching my presentation wait just curious what happened on that last slide did uh I I missed the reference uh was that a graphics card that died during the thank you very much for watching my presentation so sorry I was just figuring out how to um unshare yeah uh the the graphics card died on the Monday just before the everything was supposed to be due and it was really bad timing because the one of the things that I couldn't test out was file sharing between two different activity 86 computers I have a bunch of Pies but the space Daemon doesn't run on arm so what you just saw was uh a brave and Firefox swapping two files between two different metamask accounts and properly exchanging the payments but because it was only one single instance of space demon that I could manage um uh yeah it's kind of a dummy demo at the moment I did try it in Virtual machines but it was running into a problem for sharing the threads via the like the the console spat out an error with uh just could not reach the textile thread addresses um so it was probably the virtual machines but I would have liked to have tested that out on the uh the bigger machine and is the plan to move to do some stuff on ipfs when you have more content address publishing for some of the files uh sorry could you repeat the question it's a plan like when you guys have more like you have more publishing of like public Pages or like a long form whatever to move towards ipfs yeah yeah um that's probably where I'd like to see the the incentivization come in is being like actually it was the demo um video for building the presentations I think it was web 3 torrent um something similar but on ipfs would be nice because one of the problems with my project right now is that if the initial publisher goes offline or there's not a root Cedar to provide the key or the content there needs to be a some sort of incentivization system so something like that built on ipfs to get people to send content that way so to maintain one root seat of the content would be one of the next things to build in for sure awesome and I would like to do that on ipfs yeah keeping everything in-house under Fleek was was really a big attractive for using their their sponsorship tools was just a One-Stop shop thank you great presentation thank you yeah great work um I was just curious you spoke briefly about moving towards I guess making this more of a framework for people do you want to speak about kind of I guess you're the the project and how kind of that evolved to being the path forward because it doesn't seem like you started out with that being uh the path yeah um initially I was thinking like coming into it I'd like to build just a single web app because it's the easiest way to get uh multi-platform support just immobile everything else but then looking at the tools the space Daemon does require a direct installation to use um so as soon as that started to get implemented and certain things needed to be installed and then yeah super last minute the the space app was announced it just seems to make more and more sense to have a portion of the functionality of this content management system to be only operational if someone has the software running on their local machine and then the rest of the features just available on the web app um as an example the the Fleek storage JS Library currently lets me join a bucket just uh in the JS Library without having anything installed um so in theory the the way that this would work is the publisher would need the the space clients to do all the encryption managing the threads and all that but then the content of the person consuming the content would download it they'd get it they could verify the hash make sure it is their content and then uh issue a joint or an ad to their Fleek storage and then if there's a um I'd have to build it but a UI interface that would be able to operate just on any web browser as long as you have the fleeks API key uh to then get your content anywhere from your mobile device um did that answer your question um it it gave me context to more than just my question but but thank you for that answer uh could you give me a second chance at answering it better no no I I would say that's better than what I expected as an answer oh okay could I expand on the content management system though uh just a little bit more sure I believe you stopped a few minutes okay um just because like I'm not a designer myself and I don't really feel um the like my UI is functional but um a lot of artists I've been talking to like uh I think a lot of my friends are from the music scene um it would probably be better to give them the freedom to set up their own storefront and just having a very uh various components to plug into um I don't think WordPress has the ability to support that functionality but if they're going to Squarespace or any other framework that it supports react components angular or anything else like that would be the idea is to provide a um as easy a possible method for Content creators to just publish and then somebody to consume without talking to anybody in between and a Content management system like WordPress because right now that's all you need is you just need to go download WordPress set up a lamp server no no talk you didn't talk to anybody you you could just share your IP without registering it and it's that level of Simplicity that and reusability that I was going for awesome awesome thank you so much thank you thanks Austin from Project Paya that was great great um that was the last demo for the day and I just want to say one big thanks to our judges for joining us today and doing the hard job and yeah I just hope everybody has a great rest of the week and thanks so much for joining us for this judging session thank you and for all the all the people who made this happen and for all the hackers what an incredible day um a lot more than I expected so thank you so much for all your hard work this past month yeah I'm blown away this is an awesome it was so much fun to see all these projects and everyone's like so skilled and talented really fun to be here most of the time I was quiet because I was speechless thanks everyone have a great day 