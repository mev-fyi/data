radio feel free to start now okay great yeah so uh i'm martina long i'm leading development on slate and i'll be starting off today with a little bit about what slate is you know what we have on the roadmap and how slate might be useful to you guys as developers if you need to host files for your hackathon projects etc um yeah so let's get started with you know what is slate slate is the place to discover and save files on the web like you can upload files see what others have uploaded and save or download their files as well um i'll give you a little demo of you know example usage later but i'll start off with a team for now um so we have jim to thank for kicking off a slight project and bringing this team together nowadays he's working on other projects like estuary which is the easiest way to make file coin storage deals they're currently undertaking the task of getting all nfts on the falcoid network so that you no longer have to worry about the nfts that you pay for disappearing off chain um horis here is our product lead he was previously at square and notion alien engineering tara is our second designer and amin is our front end engineer um yeah and as with like all of falcoin's initiatives everything we build is completely open source if you are ever curious about how we build something or you know you want to get involved you can check out our code base at github.com filecoinproject and you know we we always welcome anyone who wants to join in and hack on slate with us you can always chime in directly on our github or email us at hello slate.host if you prefer just to talk with us directly um and yeah you know partnerships are a big part of like what makes slate possible and one of the partnerships we owe a lot to is textile like when you store something on slate on the back end slate is using textile buckets to pin to ipfs and to retrieve um and it's thanks to textile that we're able to offer 30 gigabytes of free storage to every slate user yeah i guess um i'll dive right into the features now so you know let me get this yeah so these are like some examples of people the different ways that people use slate like nick gerard is someone we have on the platform he's a motion designer he's worked on a lot of animations for the start and end credits movies and like video games like valorant but he likes to keep a lot of the nfts he discovers across the web honestly you know just to keep in one place and he also has some of the nfts that he creates like um he did like an alphabet series with a number series that he uh designed himself and presents in slate and then um from jim who started kickslayed off you know he likes to collect scandinavian design images inspiration things like that and you know we don't want to like just limit slate to images either like there's plenty of people who share and collect fonts on slate um this user has like a treasure trove of old style pixel fonts he keeps on the platform and you know one of the things that we wanted to improve on beyond the dropbox google drive experience is like file previewing like i think google drive dropbox they do an okay job when it comes to basic files like pdfs images videos but when it comes to things like fonts or markdown or code files like on the right here this is this is what google drive presents a uh markdown file as you know it's not styled at all it looks very basic what is like this is slate's version um you can actually give you a live example so you know you can click on links um things are formatted if there's bullet points there would be bullet points and you know there's italics things like that and also one of the things we like having two designers on the team that we personally experience as an issue was if you upload a font file to google drive or dropbox you know this is what it looks like you really don't have a you can't play around with how it might look with different font sizes line heights you'd have to actually download it first and then open it in your font book even to be able to view it properly you know so one thing that mean built which we like think was incredible was um this font previewer so you can you know if you want to view it just the glyphs you could do that you could view the sentence you know paragraph format adjust the alignment size line height and even like letter spacing number of columns um you know you could even type in whatever example text you wanted it's a sample eat all without downloading the file we just thought it was ridiculous that you know if you have a file that someone shares with you on the web that you have to download it in order to be able to even view it and that's one of the major things you want to improve upon yeah and you know if you if you like a file that you see on sleep you can always save it directly to your site or download it or if you want to add it to a specific collection you can do that as well and one of the incredible things about being run on ipfs is that because of cids like we can detect whether a file has already been saved to your slate and if that's the case like unless you know that's a duplicate and then we don't have to eat into your storage any more than necessary and you know not only can you preview these fonts much more easily you can actually load a font file directly from slate like into whatever website and this is actually what slate uses for its own fonts like um this is the slate where we keep all our fonts and then you can actually dig into our code base and see that we load these fonts directly from the textile url right here and then we do the same for like background images like this image is also hosted on slate you can um you can inspect page source and check it out and [Music] you know and one of the other things is that you know we didn't want to just improve the way people viewed individual files we want to give you flexibility in how you spatially arrange your files within a collection and how you present them to others so we allow you to drag and drop you know resize overlap things and this is an example of like how nick has laid out his nft slate i can just demo that right now actually so yeah you know you can move things around resize and then you know one of the other realizations we had while just using the product ourselves was that a lot of the files we were saving came from places on the web and it was kind of it was it was a lot of friction to have to download things individually save them to your your own desktop and then re-upload them to slate so we created a slate extension um where you can directly like right-click on things or you know hit the extension button and just grab the images directly from the page like um for example you know grab all the images select which ones you want to save add them to a particular slate or you know just right click and hit the add to slate button um yeah so you know what's next for slate one of the things that we encountered was that a lot of the things we wanted to save were actually links and you know we dug a bit into what other products were on the market that allowed you to save links and files side by side and to our surprise there really were no good options like i suppose you could save them all to a notion file and then you know have to side by side but it's really not optimized for that use case so soon you'll be able to add a link to slate it'll load all the information from it and this actually is not in production yet but i can give you guys a sneak peek at what that may look like in the future so say we take this link now we add it to slate and while it's uploading i'll give you an example of like what um something might look like uh so this is a twitter you know it has a custom embed specific to the site um the link we just uploaded you know if it allows iframe will actually load the page and you can interact with it from there or you know like if it's a page that has um you know an author a source we'll automatically pull that so we can credit the source properly and you can interact with a page from here or you know also put notes on the side and one of the other things we have on the docket is to add some custom support for nft sites like possibly even allow you to plug in your wallet and verify the ownership of nfts and then slate could become you know a gallery to display your nfts so and i know a lot of you guys are going to be hacking on projects in the next few weeks so i wanted to dig into how slate can be relevant for you as a developer so you know mostly we've mostly been talking about the consumer side how um how slate looks to end users but it can actually be a great place to host your files like like i mentioned earlier with the font files and then um let me see so this is actually an example the site that we were looking at is actually an example of something that's built with slate like all of these images are actually hosted on slate and you could you could open an image a new tab and see that right here so this is a textile link again and then [Music] yeah let me just dig into the api and give you an example of how this works um [Music] let me see okay yeah so once you register for a slate account you can head to the api tab here um all your apis here api keys will be here if you don't have one you can generate up to 10 and then i've so i've gotten together like a skeleton code project um and we're just going to fill in the you know the api request examples so the first thing you'll probably want to do is upload a file um so i've already got the input for the files here um all that's left is you know upon clicking the upload button you know how do we execute that let me pull up my code one second here we go okay yeah so if you go to the api page um upload is all the way here at the bottom this is the url you're going to want to use copy that and then so just for context um this handle upload event is going to be triggered by this input and this input will have files so those files will be and then you know for each file unfortunately we can only do one file at a time so you will have to do a file by file for life you're going to want to start off by creating a form data and then appending the file to the data and then within your try catch you know just in case there's an error you won't be able to read it and then if you take a look at the docs the response should base or the the fetch should basically look like this um so and then the url we talked about earlier headers method uh keep in mind we use a post for this all our api endpoints are post just for simplicity headers and then this is where you'll need your api key so if you go back to your api page copy any of the api keys authorization i'm just going to save it in um you know variable up here i don't recommend keeping it exposing your code if you're actually using this um you know keeping an end file this is just for simplicity so you know what it looks like so saved as api key optimization api key and then be sure to append the data as the body of the request and then once you get the actual response and just remember to make sure you await it um we've had some people mention like they couldn't get the response back because they didn't await it you just you only just got a promise back otherwise um you'll have to convert to json just print it out so you guys can see what that'll actually look like and then in our case i'm actually going to save it to this variable called file and then we'll actually set it the state variable this is just so we can display it in this little code block we have here just for easy viewing um double check that should be good let me just reload this i've had this page open for a while open the console so you guys can see the full response uh say we want to upload this image i'll take some time you know and here this is the response you get back like this is the full response and then response.data is this right here so you'll get back the file name the id when it's created data about it if there is some and then you know the cid name type size the cid is what you'll need if you need to access the actual file this is where it's hosted um so you know if you you can access it through any gateway you don't have to use the textile gateway but the one we use is slate.textile.io slash ipfs and then whatever the cid is so we can actually do that sleep.textstyle.com and here we go uh and images like this you know you can use directly in whatever website you're using if it's a font file like we showed earlier um you can actually load it directly into your files like that's actually what we do here um like our font files are just loaded directly from that textile link and then yeah so i guess the next part next example is you know once you have a file uploaded how do you actually edit it how do you re-access it say you forgot to save this information um with that that's the update example and again you know i have the skeleton code here just filling in the fetch requests and then so for this first part i'm going to show you how to fetch your own user data this way you don't have to like save it after you upload it and immediately update it so the api docs for that are here under get your data and this will give back like all your collections including as well as like your username your personal information on slate and the information about all your files on slate um it's ordered by you know the most recent one is first so um let's see so this is going to be the url that we want okay same thing again try catch same thing method is the post headers one extra header you're going to want to include here that's a bit different from the last one is content type authorization same as last time yeah that same variable that we had saved api key and then you're going to want to parse the response into json turn it out just so we can see what it looks like in full and i already know the structure of it but you know you can get the user through user equals json.user and then within the user there's a variable called library once library equals user.library this is an array of all your files from you know most recent to oldest and then to get the last file you're wanting you're going to want to do consequence of zero and for our purposes i'm just going to save this last file data and here it is the file we just uploaded um and then you know say you want to upload update the name say you don't like the name linksplusfiles.png what you can do is from there once we have this data blob we can use this endpoint update file um so what you're going to want to do is copy this url you're going to want to get the file that we just saved to a variable and then you're going to want to make whatever updates you you need like um this updated name value is linked to this input updates and then try catch and you can reference the api docs for more details on what this should look like um equals remember to include the content type again here authorization is always so we know which account you're using and then in the body you're going to want to remember to json.stringify and then the format is an object with data in it and data is the value of the file updates and then in return we're going to get back the value of the updated file so i'll print this out just to verify it's what we expect so if you just fetch the data um say we want to change the name to links and files update file and this is what you get back update a name uh one one example i actually forgot to give although i think we're out of time is um if you if you want to upload to a specific collection um um yeah if you want to upload to a specific collection what you can do is just include the collection id as an add-on to the url and then it'll upload to that collection yeah i think um running a little short on time i guess we can start the q a if anybody has questions feel free to uh come off mutant ask on the zoom or or in the chat if you feel more comfortable oh yeah regarding what's in the chat oh sorry go ahead uh i was just going to ask if i can upload an existing file to its cid to a specific collection oh i see um do you mean through slate like is this a file that you already have stored on slate or is this a file that's on ipfs somewhere else yeah it's somewhere else on ipfs okay so we textile does have that functionality we currently don't have an api exposed for it um but that's good to know that people are interested in adding that we could probably add that you know like over the next day or so um oh that would be awesome yeah okay um i'll get that into production you know today or tomorrow but yeah it's it's totally possible it's much faster than re-uploading as you probably know yeah no worries um and just to address what's in the chat yeah like if it's obviously don't do this on the front end if it's an file like make sure you're passing things across the right way um yeah yeah that's what's me as well in the chat oh yeah got it are you able to collaborate on file slash boards yeah so this is something we've been wanting to add for a while it's just a matter of prioritization um currently you cannot you can share them publicly you know as long as the collection is public you can share the link to it like you could navigate to this link right now we we do want to add collaboration features soon though i know you touched on this a little bit earlier from sort of the features side but outside of the value of being able to augment files without downloading their source you know information where do you see slate going um as a product i guess for like as a user experience later on uh in terms of like you know being able to edit files on platform or yeah i suppose i'm just um sort of seeing the the workspace in general or is this specifically tailored to be the best file storage device that exists out there right now yeah so i think with respect to editing files the thing that we are most likely to add is like um a markdown editor because that basically allows to have text and composing text on slate but in terms of adding you know like being able to edit blender files on slate or pdfs in slate that seems like one of those things where we would have to build out everything individually and we just wouldn't do it as well as the individual programs that only devote themselves to one thing i think we our goal is to be the to make it easy to view anything without having to download it but not necessarily edit because you know there's other programs for each of those but we just thought it was ridiculous that you know you can't even view a file or a font file properly without downloading it i could not agree more uh i was actually thinking of using git book and then when the content is merged we will publish it through the web3 storage api and also the nft search and then i was thinking of adding those nfts to our collection on slate so basically the front end um we'll just need to query the collection on slate and from there we can fetch all of our uh nfts and lessons that are given to nfc definitely um there's actually i think the end point that you may be particularly interested in is you know grabbing a specific collection by id so um just uh i forgot to mention this but the way you find the collection id is you know copy collection id and then that's what you would plug in um over here but yeah that might be useful to you awesome well if there aren't any more questions i want to thank you for explaining everything and presenting with us today and i want to thank everyone else for joining us um really really excited about this project and i'm really excited to see where this goes next yeah thanks for your time everyone and i'll get that api endpoint out next couple days so you can use it right on one last question um where can users connect with you during the hackathon yeah um so i'm guessing like maybe the company slack is not the best place but you could email me personally at martina slate.host or you know this the slack or sorry the slate company email at hello slate.host either works and i'll be sure to respond quickly awesome well thank you cool thanks all right we're going to be closing out the uh zoom right now thanks for everyone for attending and uh look forward to seeing you guys tomorrow for the 