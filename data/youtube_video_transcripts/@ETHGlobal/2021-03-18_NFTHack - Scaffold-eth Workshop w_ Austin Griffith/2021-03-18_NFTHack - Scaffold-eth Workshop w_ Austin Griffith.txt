yeah so we are having oh are we good with the streaming and everything andrew just uh yes we're good amazing so welcome to the scale of eat workshop um as we're letting everybody uh join um if you do have any questions please post them in the chat either in on zoom or youtube uh as we go and uh just a quick reminder if you've heard all these talk i've reminded you a million times but go make your stake for um place your stakes for the the the hack so that you can participate and yeah i will let you take this over awesome all right what's up everybody hi i'm austin griffith uh i'll probably just start sharing my screen here and just dive right into it uh yo right there yeah so i am austin griffith you can find me on austingriffith.com or uh austingriffith on twitter uh but that's uh that's me so let's see uh i'm gonna bring can i bring everybody back over here oh yeah there we go there's everybody okay so uh i want to show off scaffolding so if we dive right into scaffold eats real quick it's it's a freestanding dap that has hard hat for compiling contracts and has a react front end that's ready to go for you and kind of wires everything together so you can just come in you you have to yarn start and install and start a back end and you have to yarn chain and that will fire up your local block chain but then you yarn deploy and it's going to package up a template smart contract for you and it's going to deploy it to your local chain and it's going to inject that into your front end so you get a nice reload over here of your new contract let's do it one more time to make sure we see that what we're gonna see is we should see this uh contract uh update and we should get a new contract and this this is really good for being able to iterate and kind of like learn as you go so uh scaffold eth does have like this full like the quick start that i just went through is here but then as you get into it and we'll dive into it more but then you get into like learning solidity and it's talking about like passing stuff into your solidity and making changes so i just want to just i don't wait let's let's add some exclamation points here i just want to show that it changes so looking at here's our contract here we go we're going to deploy with some exclamation points in our purpose just showing that we changed some solidity and now this this form over here this scaffolding should auto adapt to it and eventually you carve this out and you build a real ui but this is kind of like a stand-in ui for you while you while you kind of iterate and look at your contract so let's let's look at this real quick up close so we have this smart contract that has a purpose and we are console logging that purpose uh console log in your solidity let's see it happen and and so we set the purpose and then we console log it right so we have this one storage variable so if i put in hello world over here and i hit send uh there is a console log that fires over here in your yarn chain uh terminal uh i lost it though but so that is a great way to debug yourself like first of all like it shows you like how new we are to this space that console log is awesome but once you get in here and you need to really figure out what's going on with your contract that console log is going to be really handy so let's see let's see you want to be able to poke at your contract right i was able to set hello world uh let's let's just do the exclamation point again okay so we can talk to our contract uh let's talk about accounts first so when you get into scaffolding if you go to localhost 3000 you'll notice in the top right there's an account that's generated for you and you can grab funds from the faucet and now we have some funds right and so let's maybe even have these two accounts here and let's copy this address and so hackathon projects when you need to sit down and build something over a weekend you're going to need to have an address input wouldn't it be nice if that address input was was kind of like prepared for you and had things like ens resolution had things like the blocky preview had a qr code scanner it will work this time catherine sorry and then uh you could send like a dollar instead of having to send whatever the eath value is i can just say i want to send one dollar and hit go and we should see a dollar go from this account to that account i think did it go oh i sent it to austin griffith.ed ah there we go okay so now with wallets uh you can connect and you can bring in your metamask if you want and it's going to also have a nice like network warning for people that are on the wrong network just a bunch of handy components that you're going to find that if you sit down and try to build a hackathon project you just need all these components already so i've kind of prepared them in scaffolding so you can pull them off the shelf okay cool so we've kind of got this i don't want to log into me i do have the dollar though it worked i'm going to log back out and just stick with that burner wallet that i got on page load and let's just dive into uh just a little bit more scaffolding before we start building something so if you wanted to say add a un8 public counter here and set it equal to five and you hit save and deploy this thing is gonna notice that you added a new thing to your contract and it's gonna show up over here right so while we're waiting for that i'm even gonna add a function decrement uh that what that does what that does a counter minus minus right counter equals counter minus one we're going to redeploy that there's our counter it's set to five but now we have a decrement function we've added two we're kind of playing around with the evm kind of figuring out how solidity works we want to just kind of like test our assumptions here and here goes now we have a decrement function to call and if i decrement that counter all the way to zero what happens if i go one more 255 right it rolls over we get underflow yeah word so uh uh you you need to learn about those things right and you need to figure those out and so my theory is have a full standing dab pull all of this down and then kind of just go through this if you're looking to learn solidity there's there's primary you know learn the primary data types by copy and pasting them in uh throw throw in uh let's go see if primitives and data types right so you've got your uans you've got a bool but then you've got addresses right and you could totally just okay let's let's create an address let's make it public uh let's call it owner and let's set it equal to and i'm just going to go right back here just copy and paste this right in here and hit save and we'll deploy that right so we're just kind of iterating tight iteration loops small changes testing our assumptions we're seeing what's going to happen when we add this new owner here hopefully we'll see that we are the owner right we're keeping some arbitrary owner cool and then maybe let's build uh just real quick just to do some good solidity uh intro let's require that the message.sender which is a global variable that is the person that's accessing the function is equal equal to the owner and if not we'll say not the owner and so now hopefully only we can set the purpose it's more of like a centralized a decentralized attack station for one account right something along those lines but now let's see what happens so we're going to need our account but we're also going to need some uh like kind of bad guy account to make sure they can't set it right we want to test it so let's give the bad guy some funds so this should work right right right this work this does not right and let's we reload that in there we go we get a error not the owner right so we can kind of build out our solidity we can copy and paste things from solidity by example we can kind of go through this curriculum but eventually you kind of get it you get the feel for it you've got solidity you can write codes ladies not that hard writing solidity is pretty easy writing secure solidity is very hard but writing writing just putting some solidity down here and having this storage and execution is pretty easy so let's clean this out so by the way i was using that owner uh if you are ready for inheritance you can kind of do that right and you can do is ownable so this is just bringing in the oakland zeppelin stuff instead of using my ownership pattern let's use open zeppelin's ownership pattern and see what that looks like oh what did i do something about yep i can't do that i'm gonna have to say i'm gonna use a function modifier only and you would know that by going and looking at the code or looking at what pops up over here in our preview okay it's about nft time we were 10 minutes in let's let's do some nfts here i think i need to maybe set this to public is it complaining about that it is okay well we're we're getting through okay so now that i've added i've inherited that ownable uh contract from open zeppelin we should see some new stuff show up in this interface right yep sure enough there's transfer ownership there's owner and the owner's not us anymore because it's actually this guy down here this faucet address the first address of the hard hat chain is the deployer here and is the owner so what we'd have to do is maybe like dive into our deploy script and do something like await your contract dot transfer i'm just going to copy and paste it oh yeah to who we going to let's go to this guy okay there we go there we go let's do another yarn deploy now we should be the owner so now you can kind of orchestrate stuff in your deployment if you want let's get on to the nft so with scaffold eath this helps you get set up but now there's also like tons of other branches that other people have worked on and committed back to the repo and i'm going to look at a couple of those uh today let's see i'm going to kill off that and kill off that i think we're good over here with scaffolding now let's move over here so we are in the branch uh let's see we are in the simple nft branch here simple nft example and uh let's see here we go oh i might be way behind on questions there's only like three things in the chat i think maybe i'm behind but i'll i'll jump back to that in a second let's let's get some nft stuff going so let's follow this exactly right we we cloned it down we cd in we did a git check out now let's uh yarn install that's let's that's gonna take time we already did it yarn start okay so we're gonna fire up that uh dev server and then we'll do a yarn chain which is gonna fire up our local blockchain and then we'll do a yarn deploy and that will deploy our contracts whatever they are to our local chain now here's our contract so in this branch that your contract is a your collectible and we've brought in 721 encounters from open zeppelin and we've just basically like copied their their procedures here uh pretty pretty exactly really there's there's a counter that will increment uh so so we have our base uri so we're just throwing stuff in ipfs uh and we'll get to that second but there's a just a simple mint item and that comes right from the the open zeppelin docs we increment some tokens so each token has its own id and and then we mint those to someone this is a really cool maybe like tangent to dive in while we're waiting for this web server to come up is the the difference in solidity between an erc20 and an erc721 really helps me understand fungibility and non-fungibility so when you think of the structure of an erc20 or a fungible asset it's just balances of people and there's a transfer function that moves balance from alice to bob right and if you want to check somebody's balance they have 20 right but it's fungible in terms of alice can send five to bob and then send five to bob again and then bob could send those ten and you wouldn't know which ones are which it's just a balance right it's just a mapping of some user has some balance and that changes with the transfer how that's different with a 721 is each token it has its own unique id and there's an owner of that id and they're sent one at a time so instead of thinking of a balance array mapping for a number you think of more like this nft is its own thing and someone owns it and someone can transfer it around so kind of fungible versus non-fungible in a in a oh man come on dev server we're waiting for this react dev server to come up okay but while we're waiting we've got our collectible we've looked through this stuff what's next uh what it wants to do is have us check out the mint.js so along with your deploy is a mint.js and in here it's going to craft up ipfs objects so so i've prepared some some of my own artwork and uh what we're gonna do is we're going to craft up this uh uh piece of art and we're gonna put it into ipfs and then we're gonna take the little fingerprint the hash and we're gonna put that into the contract and we're gonna mint that on the contract so and if we look at our mint function it takes in this token uri so that's going to be our uh our ipfs hash okay i think our front end is finally up let's go look at localhost 3000. it's going to look familiar if you have done anything with scaffolding here we go we can even go grab some funds from the faucet we we are scaffold eating here okay so ipfs upload you've got a nice little uh toolbox here if you want to upload something to ipfs you can hit send you can grab that and go back to ipfs download you can grab it back so nice little ipfs kind of debugging but in our mint function we've kind of taken care of that stuff for you you you set up your manifest here and it will uh it will mint them uh on chain here we go so you so you as the artist basically you're gonna deploy an nft contract and then you're gonna deploy each uh you're gonna mint each piece of work and then it can be uh spot and sold here so let's let's just follow the instructions where are we at what are we at okay so we edited we need to edit this and i think the one thing you want to do is just change this front end address but it's already set to my burner wallet so we're good there but if i do a yarn mint now what's gonna happen is it's going to oh wait wait wait we gotta deploy the contract first right where where are the instructions i feel like we need a yarn deploy before a yarn mint yes yarn deploy okay let's do that first sorry come on come on here we go okay so now we're going to deploy our collectible and we could go debug the contract we could see that it's 9f e4 right yep okay cool now we're ready to mint our collectibles so we've deployed that contract at that cost it's already pretty expensive but now each one of these we're going to spend some more gas and we're going to mint right so if i do a yarn mint hopefully what happens here is it starts taking those ipfs hashes and minting them yep there they go and minting them uh on our nft contract so each one of these is a transaction and you've minted nft so you can pull this thing off the shelf run through these steps and you sort of have a local dap that can uh mint nfts and uh you can kind of build all the fun stuff into it it's sort of like how you extend it is the interesting part of ethereum like ethereum superpower is the fact that any old developer can grab a lot of this stuff off the shelf change like one little piece of code and it and it changes like a whole it invents a new financial mechanism right so so there's a lot of room to just kind of take this and kind of iterate and make changes uh let's just let me let me do the whole burner wallet thing real quick again let's uh pull up a new account that points to localhost 3000 let's copy their account and then let's send them this bison buffalo guy there we go transfer send them a zebra transfer right cool so we're also sending around nfts and we're seeing them move from from account to account uh i think the way it has you finish this one off is you we edit the art you send around okay so deploying right so when you're ready you can set your hard hat network to some other network and you'll do a yarn generate and create a gener a deployment account and you'll fund that deployment account and then you do yarn deploy and then it goes out to whatever network you want to go to and then you can get into your front end over here this app.jsx and you can change that to point to whatever public network you have and deploy that as a static website and you've basically deployed an nft minting platform thing right okay so yep down there you get the deploy we meant yeah you can follow the instructions there's some fun side quests but that uh that is the simple nft branch but the thing with this is it takes uh quite a lot of time to or quite a lot of money to uh minty so as the artist i have to it's probably like 500 bucks to throw that contract out there and then probably like 40 bucks a piece to mint those nfts what i'd really like to do is i'd like to take that simple nft branch and i'd like to fork it and i'd like to make a few changes to it right and that's going to move us to the buyer mints in ft branch so let me try uh yarn install and yarn start hopefully that that gets going a little quicker this time we'll bring up the chain and let's follow the instructions right right here in the readme there's uh some nice instructions on how this is going to work and let's see we get into simple nft ooh yeah okay so we have to do an upload this time so this one's going to be different instead of deploying the contract and then firing off the mint contract to mint all your collectibles we're going to first upload all of our collectibles and we're going to take all those hashes basically all the fingerprints a fingerprint of each piece of work and we're going to put that into the constructor when we deploy our contract so we're going to kind of set up it's kind of like counter factual nfts we're going to set up our nft contract so a certain list can be minted within that contract but we're not going to pay for upfront we're going to have the buyer pay for it when when they do the minting oh man are we gonna have to wait for another development server to start up that might take a little bit okay let's go look at getting this art uploaded so we've got the chain yarn upload is our next thing okay so let's look at this code real quick this one's set up so any artist can really just pick it up and edit this artwork.json file i've kind of abstracted it out to you have this nice artwork.json file now and you get in here and you set you know what's the name what's the description what's the external url what are the images uh is it gonna have attributes we can go uh let's just go on a little side quest to open c real quick while we're waiting for this front end to come up and if i go to i think i've i've uploaded a couple of these already let's go look at these i want to show these attributes off and how uh c parses those come on open c load uh okay we'll wait for that to load all right let's let's talk more uh nft topic so uh once once you've got this figured out where the buyer pays and i'll talk about some other methods there we go we're back we're back okay uh i'll talk about some other methods in a little bit but uh once you have this uh we can get into actually it's just coming up let's just nope it's gonna take a bit okay so once you have buyer pays let's talk about some other fun mechanisms that we can build in there so a bonding curve is a good example if you go to uh let's see if you go to scaffold eath and i think i have a cool market i think it's called backlog market yeah cool this is going to be a weird little bonding curve right here maybe i could paste this to chat too i think i'm going to here it is i'm going to paste this to chat ooh ooh maybe i'm not yeah i am yeah i am youtube chat here we go pasting it here we go boom okay backlog market so this has a numerator and a denominator and it's basically this this multiplier so we keep we keep a price function and then we keep a numerator and denominator and then you you buy these nfts out of this gallery and the price gets more expensive so we we don't have to do any fancy calculus or anything with like the bancore method here if you want to make a bonding curve within fts it's just you're buying these things one of those one at a time like in a discrete way so you can easily put in this sort of numerator denominator kind of curve and as they buy one one at a time you just kind of multiply or or uh subtract by that that curve so what do we got so we have next price and we have previous price and when someone goes to buy it's basically going to uh make sure that they're paying whatever the next price is right so that that contracts out there uh oh let's see okay it's not liking that i don't have assets i think what i need to do is the yarn deployed or yarn upload next so following these instructions next thing to do is a yarn upload so it's going to take that this manifest that i've set up this artwork.json and now it's going to upload them all to ipfs and it's going to generate for us some assets and while we're here can we get the collectibles to load come on oh no i think i spelled it right i wonder if it's it's only had our cash for a while did i spell it right i did i don't know what's up maybe open c's test net stuff try one more time okay so we've uh uploaded our assets to ipfs now we're going to mint a contract with our assets fingerprints in them so so this takes in a bytes 32 array and when you do the deployment it's going to take all of our uploaded ipfs assets and pass those into our collectable so when we do deploy there's going to be uh just one payment that we have to make we have to pay for that one contract to go and it's going to be 500 or so right now with gas prices but you just deploy that one contract and then we've we've set in the contract that only certain pieces can get minted so we've sort of set up our contract so it will only meant certain one wall certain ones that we tell it to so now let's go check that out okay here we go so here is our counterfactual gallery right when when we see all of these pieces of work they're actually not on chain yet they're only allowed but they're allowed to go on chain right so let's go here and let's grab some funds from the faucet i think it's going to give us a lot more it did not we need more than that uh here we go here's a good way to get a ton of funds you copy your address you go to the bank you go here and maybe do like ten thousand dollars right okay so now we have ten thousand dollars it's gonna cost us a little more to mint this though but now let's mint this bison right here and what we do is we pay the gas so we as the buyer pay the gas for the artwork and the the seller basically gets whatever is left other than the gas fees right so we can put in a price function we can kind of iterate from there and that's that's what i kind of want to show off let's see let's let's bring up let's do the let's do the burner wall thing one more time i think we're about out of time too but let me just set this up so this let's copy this person's address if i go to collectibles there's the buffalo that i minted we should still be able to transfer it and see it show up over there awesome and if they try to go over here they probably don't have enough gas to buy that yep okay cool so counter factually minted nfts where the buyer pays for the gas is really just a small change we this this original contract i've added a for sale and and a token to uri or uri to tokenid that's kind of separate but i've taken that original contract from the simple nfts and i've added just a small bit i've just added some some like an extra thing of storage and i kind of like loop through that and set those things and set them up to be for sale and that's kind of the point i want to kind of hammer home with this is you can pick something up that's freestanding that's already ready to go and you can make small changes to it and and really like turn turn it into all sorts of different ideas pretty easy let me see what else we have i think i have another tab we don't have really time to dive into it oh this is the punk wallet i just i love the way this thing looks uh let's see punk it the send button doesn't work right now but look how cool this uh look at that isn't that cool or if i log out of here and get a yeah there we go or i do a burner wallet punk wallet okay cool all right anyways i'm i'm off on a tangent okay so cool cool little tweaks you can make to this contract we've talked about bonding curves already we talked about a pricing function uh but if you get uh online and look up open zeppelins contracts you can really get in here and find out like what other cool things you can do right let's go to tokens let's go to 720 by the way 1155 is there i think we've talked about it a little bit but have 1155 on your radar uh if we get into 721 we can kind of see the basic stuff but then let's go look at like oh what is this like burnable extension right what if you want to make physical assets like some socks and set them up so they're burnable and people can buy them on that curve and if they burn them then you send them the physical merchandise right cool cool fun thing you can do with with physical oh speaking of physical look at this this is physical art so it was like at an e2 conference vitalik was speaking and i was like in the back printing these and they were all loud oh man embarrassing but i printed my artwork out and then on the back is a qr code and if you scan the qr code then you have that nft and a nice little burner wallet and you can send them around at the auraria festivals like my nft heroes like matt condon and simon dlr it's like sitting in the front row sending my artwork around with burner wallets it was wonderful okay so let's see uh loot boxes how about the vrf stuff you can get a random number for chain link you can get a round number with commit reveal and you can like reveal an nft later which is kind of exciting uh let's see interoperability all right here we go so permissionlessly right any oh man who knows what's going to be on the front page of nifty inc let's i'm going to pull up a burner wallet and i'm going to go to nifty ink and look this is exactly the same i've got the the same account kind of in the bottom right this this feels like a scaffold eath app but this is this is nifty ink uh but i wanted to show you this because it's an nft platform we built that upgrades to ethereum but what i'm really want to want to talk about is the uh the composability and the fact that permissionlessly anybody can take these and turn them into game assets right and they're nfts available for anyone so you can come in here and you could draw say we were like i don't know maybe we were making a chess game right and i could draw the pawn what a terrible pond this is but i'm i'm doing it all right pawn it's a what one of eight right so we'll do eight i don't know if this is gonna work but what you could do now now that i've minted this is i could set up a script that sends these things to a bunch of people and then i can go to collab land and i can say i want actually i think it's a telegram collab land bot but i'll give them a shout out there what i can say is hey i want to only have people that own this token in the chat so let's see if i go to uh this is taking too long to mint let's see if i go here and sometimes the relay is down i try to pay people's gas but it doesn't really work all the time but if i go here let's see if we can see someone has owned look at these nice glasses of wine only one person owns that but they could be owned by a bunch of people and only those people could get into this chat right and that's just a really tiny example of utility that you can give to these but there's that would be the challenge i would put out there for uh hackathon participants is to find some really fun utility for these nfts and they can be anything right it could be an id card that proves that i'm something something right or or it doesn't have to be like a painting or a collectible right like an nft can be so many other things and and i'm excited to see what everybody creates uh let's see oh branches of scaffolding i have it in my notes if if you go to scaffolding and you're looking for something go right here and type it in maybe bonding curve right maybe you're looking for commit reveal maybe you're looking for nfts maybe you're looking for like a uniswap or maybe you're looking for ave right there's tons of branches in there and they can get you started right away so clone down scaffolding pull that stuff off the shelf and build something awesome i think that's about it any let's we can do questions do we have time for questions questions you do have a few questions i mean um you can definitely extend this a little bit we don't have another workshop right away so if you do have time um i don't i want to respect your time too but we can take a look yeah no i'm good i'm kind of looking through let's see is it possible to add erc 20 combinations i think i'm looking at something else here i see erc 1155 definitely check out 11 55 like go to the opens up when contracts i don't see any other questions though i think we're pretty good uh you see something oh chat i see some more oh my gosh yeah and if you check in the chat there's like a few questions about security check i think that might have been answered in the chat in youtube um but i mean there's not that many questions there's just uh something about contract in the url what security checks so nfts can't be stolen well let's just dive into that real quick like you want you if you're if you're running an nfc platform like the idk if you want to be custodial right i think that might have been the problem with the recent hack is that people didn't own their own keys and own their own nfts but i don't know i just read the headline i don't know much about it but yes you need to do a lot of auditing on these things before you go to mainnet it's important that you don't lose people's stuff something about yeah the oh oh he was saying if i put in the contract address here i could look it up i think is what they were saying for the open c stuff yeah i could have done that i think if i would have gone to openc and put in the uh rinkaby contract that would have worked word thanks y'all thank you yeah is there any other question and that or we're good question if you could touch on scalability um if we need kind of a platform that requires a little bit more user interaction than just minting some artwork or something actual voting and uh voting on content voting on comments and stuff like that do you have any viable options at this point or is is uh our guest prices just too high that that's a great question yeah so like right now i go to a side chain like matic or x die but i think that we do have some really cool l2 solutions like in the two-month horizon right oh so build build your stuff to be evm compatible there are some gotchas with roll-ups like you don't have native eth and you have to kind of like have everything be a token instead of the eth there you have to use a different compiler uh there's not like traditional blocks it's just like transactions and transactions are happening in real time so like timing is a little bit different uh in in that specific roll-up there's probably lots of other little gotchas but i think that the key is like sticking with evm compatibility and kind of it's like i can take my exact stack and i can deploy it to xdi and let people play around with it for cheap and and easy but you know there's security there's a lot less security there right so and that's with with nifty inc we have like okay we let the artist and we let everybody mint stuff very cheap over on xdi and then they can buy and sell that nft but it doesn't have to upgrade to ethereum unless it gains a bunch of value right there there are plenty of of nifty inks that have been upgraded to to openc and i can now sell them on on mainnet but there's a lot of them that don't deserve to go to mainnet and it's still it's great though because as the artist i can get in there and doodle whatever i want and hit go and it it's an nft very cool and is that as simple as kind of changing something in your in your whether you use a hard hat or or truffle just changing something in your config to deploy to those or is there more considerations to make and do you have resources for those that you recommend yep that's that's exactly you change you basically change the rpc address that you're deploying to and everything works exactly the same so for matic or xdi just google those and you can go pick up a small amount slide into my dms i'll send you a penny of x die not too many people but and that's with one penny you can deploy like 100 contracts too so it's it's like it goes a long ways on those side chains because they it is cheap but obviously there's the security trade-off right it's it's a poa network a p dpos whatever you want to call it it's not as secure as ethereum and so uh yeah there's always those concerns cool thanks yeah we'll slide in thanks for the presentation this is awesome yeah thank you so much us and and for the questions too um don't want to take too much of your time i mean if if you want to take one more question quick in the chat otherwise i will refer people to so the way to get in touch with austin is going to be for the next uh few minutes if you go to hack support in the discord channel um austin will be like checking out the your questions if there's anything else that you want to cover i am headed there now awesome and feel free to ask questions great you want to take the last question do you want to go sure whatever yeah i think if anybody has a question yeah jump in if not we can just head to the chat and there was something i was saying like who runs the ipfs gateway that and nft is on opencsu's what happened if the entity folds and oh that's a great question yeah probably infuria is running that but like there there are old projects i think i saw denison talk about there were some of his assets that he uploaded to ipfs and some of them that he put in the cloud and the ones that he put in ipfs he hadn't pinned he didn't have servers up and kind of went away and came back those those are gone right like you need to keep those things pinned you probably want to run your own ipfs pinner uh also probably keep things in the cloud as a backup but uh yeah they're it's it's a peer-to-peer network of storage and there isn't a layer of incentivization as far as i know yet so you kind of have to run your own but when that incentivization layer comes in it would be pretty dope if you could say hey this site of mine i'll pay you guys to all keep a copy of it right and i think that's coming awesome thank you so much austin i want to take more of your time i'll see you on discord on the hack support channel uh thanks again so much to you and everyone who's been here today thanks for having me i enjoyed it oh there's that cool punk again i just love it's like when you're building something you get excited about it i love it all right i'm diving into the chat thank you so much for having me 