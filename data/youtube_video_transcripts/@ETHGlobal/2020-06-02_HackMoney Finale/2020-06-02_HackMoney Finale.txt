while we're waiting for everybody to join in you know there's a lot of people on our zoom chat so it would love to kind of hear where everybody's from or or extremely thankful because even our our teams here that are presenting or in so many different time zones so it should be fun to take here everybody comes off alright so I'm gonna make sure everything is prepped and I will kick this off in two minutes good morning good afternoon and good evening everybody and welcome to the HEC Monique finale I am Karthik teller one of the cofounders of youth global and I want to thank all of you for being here we know there's a lot going on in this world in the United States and elsewhere and we hope that our community is staying safe while they fight for justice and fight for their voices to be heard I really appreciate everybody that's joining us today for our finale and where we get to show off our our demos and we're super thankful for all of you to give us your time for those of you who don't know what each global is it's an organization with a simple mission to go onboard as many developers as possible into the web through ecosystem and five weeks ago when we kicked off our first ever online hackathon dedicated to the theme of BFI called hack money we wanted to do something simple we wanted to bring in hundreds of ATM developers into this space give them four weeks to work on a project of their own choice throw in some of the best companies that are pioneering this ecosystem and also offer them support for any type of problems that they may face to see if we could get something incredible out of the whole experience and what we got at the end of the whole event was something incredible we had 354 hackers from 46 different countries in 18 different time zones work towards making a project there felt really passionate about for this hackathon we had over 30 mentors who were there throughout the whole period helping our teams and developers with anything from design to technical helps you product and marketing related feedback that would help them not only finish their projects but also help them take it to the next level and then an amazing set of 14 sponsors that not only dedicated their time and resources from the engineering and developers side to ensure that the teams get the support they need to integrate any of their SDKs into their projects but also help to despite all of our teams by doing calyx panels AMAs and office hours to help them really understand the nuances about everything works in this ecosystem and how they can extend it and really make it composable and at the end of all this thing we had a hundred twenty amazing defi projects that came out of it I mean wow like this was absolutely incredible I blow our minds and we spent the last week looking over and checking out every single hack which by the way you can also do by going to activate global Co and I can tell you that the amount of creativity that the amazing technical engineering the the amount of problem-solving that went into all this thing just really blew us away these were some really really really high-quality acts that we saw at the end of the event and when we say high quality we really mean it we're gonna show our ten finalists today that highlight some of the really cool creative projects that have come out of money and before I kind of get into who these ten teams are I want to make sure that I point out that just because somebody's not on this list does not mean they were not good enough or or did not make the cut because of some other factor I want to especially thank some of our runner-ups potion insurance my dfi pie blazer telegram fatality Jeannie Hobby Hudler is Magic Betsey channels and hell these were some of the teams that almost made it to to being on the top ten list and then the 101 remaining projects that not only continued to put in the same amount of work and effort into their hacks over the course of four weeks but also even beyond finding out that they were not on that final top ten list that they continue to message us saying that they wanted this thing for the experience to learn and and seventy eight person on them indicated that they will continue working on this thing even though the hackathon is over and this is kind of the the excitement the the energy and sort of the motivation that kind of inspires us to keep working on youth global and do a lot more of these events or super thankful for everybody who made this possible because we're just hosting this thing on a zoom call and here the one who put in all the time and effort to make this possible and we can't be more thankful for for neither you choosing us to be part of this so with that we have 10 finalists here today on this call and they'll be demoing what each of them did and without further ado I'd like to call up these 10 teams so we have sunset supreme cover atomic ninja one-inch cheek composed by Umbra defy support from BS code look what if I got one for test and OEM marking these 10 teams will be coming on and showing what they did we'll do a live demo and if something goes wrong we'll fall back to a pre-recorded demo for this call and as we looked at these 10 teams we realized that a lot of them were super obvious for what problem they were trying to solve and after we kind of cess this we realized that these are the three big categories that all of these ten teams fall into and these are sort of projects that help and want to help with mainstream adoption so we can get consumers to use not only just the tools but also defy in general and in Iraq with it then we had a whole set of projects that wanted to make it easier for more developers to integrate these tools and the the last category is financial primitives which really highlights all the composed ability the extensibility of the D fly protocols in the ether maker system that make it a lot more possible for everybody else to use and and kind of get creative outcomes from combining and piecing together you knew protocols so we're gonna highlight some of our favorites from each of these three categories and doing all the hard work today which will be not only just understanding what these products are trying to do but also giving feedback commenting on what's happening in this space and how we can actually improve this thing as a collective ecosystem will be our six amazing judges under ISM Antonopoulos who is a renowned speaker and writer in a supporter of the Bitcoin in the etherium ecosystem we have actually shot from unis WAP we have Thomas Bertani from P tokens the proper leshner from compound finance Vitaly boo Turin from interent foundation and lastly ston eco cha from Ave they will be here throughout this call talking to all of us about what they think about all these projects and how we can improve this space as a whole and with that I'd like to call up the three teams that will go on today for the mainstream adoption section and this will be some set Supreme atomic ninja and compose file we'll have three of them come on one and after another and then we'll move on to a Q&A section full for all of our judges so when I think everybody again for giving us their time today and what that will pick up our very first demo for our finale please welcome Jeff from sunset supreme hello good morning good afternoon good evening my name is Jeff from sunset supreme I'm sharing my screen now sunset supreme is a spreadsheet blockchain plugin we're team of engineers and interns from Tokyo Japan we all work at curved grid which is a blockchain middleware company we built a spreadsheet plugin that makes it easy to use the blockchain we did it because we wanted to make D Phi accessible for absolutely anybody to hack on but really why a spreadsheet well when we take a look at the number of blockchain engineers globally we get about 7,000 we have about 26 million software engineers but we've got close to a billion spreadsheet users we wanted to make it as easy to use the blockchain as entering a formula into a spreadsheet let's go to a demo so this is a spreadsheet what are the kinds of things that you want to do with a spreadsheet often you want to draw graphs and charts and put things into tables and filter them and analyze them what we've got here is a chart of a vase historical rates and indices for borrowing and lending this data is actually coming live from the blockchain below this we've got a filtered table that's actually pulling events live you can see this is 252 this is this is about 20 minutes ago it's early in the morning here this is we actually have a custom function that is that is pulling the state alive from the blockchain I'm going to use a helper menu here to actually refresh this in real-time you'll see that the cell gets refreshed and we've got the last 500 events coming back live from the blockchain and filling up our table again we have when the event was triggered the various inputs and outputs when we come back to our table in our chart now we can start to apply spreadsheet magic to it we can say compare you know what be a tea and die look like and this gives whether it's the project or financial analysts a very familiar fast easy view into what's going on with a particular defy project let's take a look at chain link next so we've drawn this chart here which is the aggregated F USD price for chain link over 20 rounds so it's a historical view this is the kind of dashboard that's very easy to put together or chart that's very easy to put together in a spreadsheet but can be very complex if you're trying to build something that's that's custom for your financial analysts or if you're a trader trying to look for arbitrage opportunities or you know to hedge against different kinds of strategies right away though you can see all sorts of different things you can see the the dotted blue line which is the median you can see our potential outliers from some of the different Oracle's whether you want to look at this in a chart or in a table with with some conditional formatting it's very very easy to do I want to dive a little bit more into where this data is coming from we're actually filtering the time series events through something that we call an event query which basically takes this time series data and puts it into pre processes it and puts it into a two dimensional chart the other thing that we have the ability to do is to call a smart contract function directly so I'm just gonna copy this up here you see that for the F USD address the aggregator contract where we can look at either the latest round or we can look at the latest answer I'll just hit enter there we're going to be calling this function directly from the blockchain and we get to 34 point nine four and if we take a look at chain links dashboard we see that that same number the last example I want to show is something that is a little more custom now we've looked right now reading from the blockchain what if want to write to the blockchain and it's fairly common that financial analysts or an accounting department may want to actually do invoice payments right within a spreadsheet here we've got an invoice for a client we're selling them or we sold them widgets and t-shirts let's say a hundred widgets and twelve t-shirts they can either PI pay us directly scanning a QR code or pasting this address into their favorite wallet or we can do this authorization directly within the spreadsheet we fill in the from address an optional separate signer if we were to use a compose a a wrapped multi-sig transaction and the to address and the amount now what we're using here is actually an enterprise wallet that's plugged into the middle where we could just as easily compose an unsigned transaction and paste it into our favorite wallet or guess console directly I'm gonna use my helper menu again here post to the blockchain and once that completes we're actually gonna see our transaction fingerprint which is a transaction hash and we're going to see our receipt which is actually coming back as an event from the blockchain there's a lot more we can do with this we've got a whole showcase of different functions that can be called composing unsigned transactions getting back the the different functions that you can call in a particular smart contract so again thank you next steps for us are we're going to be launching this in production later this month on curved grid comm thank you awesome thank you so much well we'll keep the Q&A to to the end of all this thing so what I like to do is uh let make sure that Jeff and and sunset team stay on on this call and just keep your cameras off and we'll let the next seam kind of go up and kick off their demo so please welcome Fabio from atomic ninja hey hello all just SEC Oh share my way screen here so hey well uh hello all routine Bossa and we're both from Brazil there's Gigi Carvalho in Rio and myself here in close to some polym and we built for the hackathon the atomic ninja it's basically a transaction builder for financial records that don't want to learn how to code so I'm switching to the live version it's life already I encourage you guys to try it it's at atomic ninja so the tools very simple to the to your left you have the blocks you can use to build a transaction and to your right you have your workspace so basically we'll build something really simple here let's say I want to send if to a bunch of people you know or batching a transaction then you can simulate in this button here below and it will tell you if the transaction will succeed or not I'll force a failure here just so we see how it looks like so I try to transfer Tendai here to Vitalik and it will fail because I don't have 10 died at that point so as you see the error break brings dies own revert message so we pass down the revert messages so you can see where your transactions failing let me try something a little bit more complex we'll do a flash loan now this is a tough one right people need to code to perform it and this is a sandwich block it sort of works differently than the other ones basically the blocks that are within it let me include one there are executed while you have the funds enhance you know then the block pays back the loan with fees here and whatever is below will just be executed sequentially let's do another use case here we could maybe do an arbitrage we can still brag no bragging is cool we're very rich for a minute there we could swap each for died here and then maybe go to balancer you know and if this is if the price is right we could make some money but maybe swapping back you know died for each if I press simulate here this will probably fail yeah and this is a revert message from balancer right so all the feedback you have from simulating is the revert message but there's a way to look at how this thing works you know own chain we created a revert block so you can pay gas in exchange to be able to look at the full trace of your transaction so switch to our ducks this is public to so you guys can check there later on this is a really complex transaction it doesn't make any sense except for being very complex and we I'll just go through it really quickly here we have are basically starting a transaction here then swapping treats for dye on balancer then sending Tendai to Vitalik then flesh swapping a hundred died you know with that a hundred diamonds were also performing a flesh loan of seven thousand teeth that's about one and a half million dollars then we brag you know we're rich here we send a beer to the atomic ninja team we buy pull together tickets and after the loans are done we also supply half an if there and then we force the reversion right we sent this transaction out and i'll show you guys the results on tenderly so this is the transaction later of course failed we spent one and a half million gas there and this is the full trace of the transaction so basically it starts with the create to creating the user's proxy that a delegates call for logic in here we start actual execution so basically here we have the balancer block you know we're actually swapping east for wealth then approving the with transaction then swapping there and if we keep on going this can go one forever it's a lot of stuff I recommend you guys it's also linked in our Docs there we see several of the usual suspects you know like compound interest and everything it interacted go straight to the end we have here you know lots of stuff from compound ether that's that was our last block and this is the revert we forced in this transaction we interacted with 27 verified contracts you know and more unverified ones tenderly is really good to show you know what actually happened there so we had a lot of fun building this we really liked it thanks a lot for each global and the hackathon crew it was amazing and we do intend to keep on building this we first need to polish some things you know some blocks need extending some blocks and blocks are rough around the edges and in the future we also have a v2 in mind where we'll have you know loops conditions variables and also be able to look at the contract state at one point in time like balances token balances and so on thank you so much oh and a t-shirt oh sorry Karthik make sure to check it out on atomic ninja that's awesome I can't wait for the block where batalik stands me tehnique back so I think one thing that I love you didn't tell everybody else is that partly the reason why they were motivated this thing was because they were also their first users they mentioned that they had really good experience with more contracts but they were not good at front-end development and this also became a really good test suite for them to also try out and play with this space so this is an amazing hack thank you so much Fabio will will kind of move on to our third demo for for this category and then we'll move into the Q&A section so please welcome compose Delphi as our third demo Danny will take it away all right okay hello to everyone and thanks for having us here we are composed of five team there is Bruno al sunny who build it from 10 and myself and here Fernandez who work at a smart contract integrations we have world both from Buenos Aires Argentina I work at the fire dot IO so what is composed of fire composite 5 is a learning tool where anyone can manually connect the defy Legos and compost more complex operations that they can they can share with whoever they want let's see what I mean with this and let me share the demo so I will create a graph so let's imagine I'm a teacher one I want to show my students how to defy Legos tonight for example I want you do an arbitrage between Q and unit swap and I want to teach them that so they start also with a flash swap point out so they can also learn about trash swap with lonesome die we will send them to Q where we will buy some USD see very cheap USD see hopefully and then we will sell send them back again to change shop where we can sell them for ethers and those ethers we can trade is bad for die right I hear we have some sort of arbitrage but because we are in magnet and we for sure won't make any gains I'm gonna send some die we are gonna need to pay the first row fees so that there was an ether for example rub them send them to Casas or some die cut now we have died here and I here we can connect both of them Anthony to a splitter right one part of the spitter can go to pay back the flash swap ok I'm the rest listen to compound to Lando's die and I will send it to those seed I'd received to an address so here we created a graph where we connected all the money levels you can see it right we can deploy this graph and it will deploy smart contract minute and you will generate and you like this because it seemed now run deeper here and the cool thing is that we you can share this year where you want and he lost everything from the blockchain and anyone can fill it and execute it so it was actually like if I snap up if you want so let's fill this one on executed on magnet it's this is a pestle asking for some dive in the flash drop because I need to pay some fees I will pay back 1000 but let's put some heaters here let's get the best order from Rossi's okay I listen everything to my to my address hey I don't have any feel I hear so this goes right I should get some cedar there we go it's really to execute and they will go ahead and execute okay let me make sure it goes very fast okay so while the transaction finish then we continue with the presentations so who is this for well we want this for anyone who want to teach learn play and use defy composability or make real complex operation and share them for the colors to execute how do we make it work this one smart concept for you each if I instrument that you saw and one smart contract for the graph that you make it connects to each defy instrument there is no central database it all connects directly to the blockchain so this can be deploying a ipfs if you want and it can scale it to as many defined instrument as you want because of the way we are strapped it back so what's next okay 112 course mortified instrument an asset we went to and more documentation so everyone knows what's going on here a and can you see to learn right let's see if the transaction finish finish T okay you know say okay I have one tangent here that when Christ maybe with the aussies they are sitting how you know quickly so here we go one that we already did and we can see that we got some some die from the fresh swap we things to uni swap then we'll return the flush struggle will pay for that and we've got some cedar so yeah that hold for us we are like a minute when you can create a composite price thank you also thank you so much Daniel well uh this isn't Nakula amazing demoing that thing the coolest part of all this thing is that you can actually send somebody the contract link which lets you just put in the variables so you can also execute that transaction graph so um with this part we have the first three demos for our mainstream adoption category underway what I'd like to do is call up all of our teams and our judges to kind of turn their cameras on and themselves and we'll move on to our the Q&A section for for this category so I'll kind of kick it off by saying if any of our judges have any questions that would like to clarify or ask the team's we'll start with that and then we can move on to feedbacks and discussion about how we can actually improve these categories and get more mainstream users in to define so the kind of the to project the last two projects there but you can think of both of them as being kind of like programming languages for creating transactions that go in to defy systems have people or thought about the idea of building a kind of similar graphical programming language to build defy applications themselves so it's a build you know things like unis a lot of things like these one thing for blending platforms and so forth yeah that would interest you I think we I think it's a little but we can do I don't know if also the guys from nature 123 sure so maybe maybe it would be nice for us to just kind of actually let's go this thing in order so let's start off by saying from our judges side like let's let's see if you have any comments or questions for sunset supreme how did you like that the approach of spreadsheet being that go to audience and all that ashlee ticket mirrors are hand yeah I just had a question so I'm curious like what the setup is like for your average user it does it kind of come you know you have all these beautiful graphs and and everything set up is it come with these tools out of the box or is it more like a tool that any user could sort of plug in to their own excel sheet yeah so once we launch in a couple weeks we're gonna provide a demo spreadsheet with a series of views of a few popular d5 projects and a tutorial to sort of walk you through how you might pull some of the common data out you know whether you want to look at let's say how the the amount of assets that are being borrowed and in Ave or historical view and chain-link or something like that because obviously you know you can do very simple things with spreadsheets and you can do very complicated things with spreadsheets and it's the same on the blockchain side and so you know I think it's it's the ideas to is to is to pull the two together through some some examples and kind of helpful tutorials to get people going and you can actually initiate transactions from inside the sheet correct yeah that's correct so that requires either an enterprise wallet that's plugged in to the middleware or you can compose an unsigned transaction either standard unsigned transaction or wrapped multi-sig transaction that you can take to your your own wallet if you want hey cool good job thank you I have some questions for oh sorry Robert do to that oh I was gonna say first off congrats to all three of these projects all of them are extremely impressive really blown away by all of them I'm just to start with the sunset question so if the data that you're able to load coming from a hosted node are you able to query by historical blocks are you really taking the current snapshot of the chain you know how do you think about on the data that you're accessing yes so we rely on the middleware which has got an active state cash so that's doing things like tracking chain reorg and watching nodes going away and coming back so that's why the data comes back so quickly and yeah we can do all that kind of filtering in terms of time block for various types of transaction hashes or events and that makes the keeps the experience snappy but upstream ultimately there are there are series of nodes that were basically rotating through to feed to keep that data you know 100% up-to-date I have a question for sunset supreme so I mean I guess most of us like had to like be the you know their own tools to create the blockchain and you know understand what's going on in the variety of contexts is so something like this I think would be really very useful to speed up the process for most of us and also to enable like non developers to start doing it as you highlighted at the beginning of the presentation something I was wondering is I can you explain a bit better how the backend the middleware works like is it open source do you plan to make it open source at some point and like how easy is it for like say a developer to have to add the support for another like component another primitive on the blockchain say we want to add support for other compounds that maybe you guys have not written in the middleware can anyone do it with a podcast or something like that so that anyone will be able to leverage it or is it something you guys need to do it on the middleware side sure so the middleware is closed source at the moment eventually will open source different parts of it there's a free trial on curved grid calm and and and paid plans as well basically you upload either your smart contract source code or your ABI and bytecode and we compile it server-side or take the ABI and byte code and we dynamically build a REST API and event definition around whatever it is you've uploaded so you take the series of compounds from our contracts we basically build all that dynamically and give you that view and then from the spreadsheet side of things you're just you're pulling that in right so based on the ABI you can call whatever functions look at whatever events do whatever kind of filtering you want to do cool one last question on the spreadsheet side so I'm not sure this is accurate but I remember from some testing I did last year that it's not easy from a spreadsheet to like update many values at the same time for say thousands of cells that you may have is it something that you had like to somehow circumvent as a limitation or what was it like did you find any problem on that side say I have a huge stretch it with data that needs to change in almost real-time or every out from hour or something did you face any technical challenge there initially no once we had more demo users using it we started to really stress kind of the the capabilities of what we had and we're working on that but you know the spreadsheets basically like a each cell is a directed graph right so if you update sort of the top cell it will filter down with all the changes in the way that it works right now is if if you're making smart contract calls blockchain calls you could have let's say four hundred or a thousand calls in parallel hitting the middle we're hitting the blockchain and so you know that's a scaling issue on the myth on the middleware but the the smarter way to do that it's basically as you should be rather than trying to read each function call and parallel process the events and that's that's kind of the the the capably what you should be looking at for smart contracts data anyway so there's there some part of it which is yes you can do it another part of it where we're gonna need to guide our users to kind of make the right decision about how they they pull the data out and analyze it in the spreadsheet okay so ah yes raises hand um hi yes question for sunset well actually two questions the first one is when you think of spreadsheet to users as your target audience so you're thinking of these users using this tool primarily as a user interface for awareness of what's happening in the markets on the blockchain in that data or perhaps to even do the kind of macro programming my experience is that people who really really learn how to do spreadsheets then use spreadsheets to do everything and create some rather incredible systems inside spreadsheets I've seen people simulate even 3d environments inside spreadsheets so so there's a kind of the that bridge where people start using it in weird ways the second thing is I noticed when you first started the demo the data itself was stale but there was no indication visual indication that the data was stale and so maybe this is more not a question but a consideration some way to visually indicate when data is sale and then prevent it from filtering down into further parts of the system where it may cause decisions to be made or people to assume that what they're looking at is real but in fact it isn't because it's the data underlying it has not been refreshed that's in many safety-critical systems when data becomes stale on the back end they turn off visual displays in order to prevents the user of such a system from losing situational awareness for example in aircraft if your altimeter hasn't updated in a second it will literally turn off so that you don't rely on it and think that you're looking at real information I think that might be a very important part of what you're doing really really amazing work thank you yeah so thank you very much for the feedback and obviously to all the judges as well so you know I think as any SAS platform you know our competition is not other SAS platforms it's really the spreadsheet right if somebody can do it in a spreadsheet then you know why do they need why do they need what whatever whatever it is we're offering and we fully expect those power users to to be writing macros to be writing their own JavaScript and the plug-in itself is open source and will continue to be open source and we hope people do do more amazing things with it maybe plug other you know blockchain or defy projects into it and you know open to pull requests and things like that I think on the the stale data piece you know that's that's either one of those like it's a feature it's a bug right it's a feature if you're trying to look at historical data and you don't want it to change and it's certainly a bug and potentially either a safety critical even you know I could lose real money because I don't know that things are the date definitely a future enhancement force there's some limitations in Google sheets specifically which make real-time data you know possible to do if you're a power user much more possible in Excel which we don't yet support but but we will in the future and yeah I mean that you know maybe one of our power users will we'll see that as something that's that's important to them and contribute a PR that B be really wonderful I had a question for atomic actually so I noticed in your implementation of flash mobs from unislope which thanks by the way for integrating us very cool to see a UI for flash flops but I noticed that it only lets you pay back in the token that you borrowed whereas the functionality in unit swop v2 actually lets you pay back and either token on the pair that you borrowed from so I was just more curious like is did you guys not implement it that way because of complexity or because you maybe didn't know that it works that way I'm just kind of curious why you implemented it yeah we we actually noticed that but when designing the block well first we were running you know to get as many blocks done as possible and we tried to simplify some of the blocks so some of the blocks do have a number of transactions within them but we're trying to I mean leave as as few parameters as possible in the hands of the user so the thing works you know in a sort of magical wave if we present ten fields to it it sort of loses the simplicity and a toy-like interface we we love but we could do another block that does that it's it's it wouldn't be a problem it would be just like be wider there yeah really good job atomic ninja I particularly like towel clean the user interface is and to your comment you just need to with Ashley's question I I couldn't agree more there is every opportunity and to express all of the richness of the backend and complexity of the backend and that will lead you down a rabbit hole where what you're showing in the front which is clean and simple either becomes too complex and loses its purpose or if there's all of these hidden knobs and dials that that make it behave in unpredictable ways because you forgot to tweak a knob or check a box or anything like that so I think this this balance is very difficult to strike and I think you did a really good job keeping it simple and focused on its real purpose is the teaching tool and not not encouraging power users take it further and further and further yeah that's just an acknowledgement we forked Google's blockly to build that and we're not fronting especially this Karthik said so we had a rough time there making it work and twisting it you know in our direction there but the interface is just amazing so it works really well haven't you saw one well basically Congrats all like those hacks and therefore you guys have put in it's just it's just amazing and I think for Jeff sunset supreme one interesting question about like in terms of like validations I saw that you guys have ability to have kind of like a read mode in the spreadsheet and then also you can edit have you thought more like further like how to develop for example I I could imagine for example companies using spreadsheets and like you want to restrict different actions for different user and have privileges and also you want to like one of the things in especially like when we're dealing with financial products is that like I have to always understand that we need to protect the the end-users as well from doing stupid things and and kind of like how have you considered like that aspects in in terms of the spreadsheets in yeah definitely so I mean the middleware has a full role based access control but I think what's even more interesting is what Google has done and and probably Microsoft with office 65 as well is fully integrated it with Google compute platform so you have full CI CD with github actions test Suites with your spreadsheets and a centralized logging and debug platform as well so you know it's no longer like lock sheet with the password don't tell anybody else you know I mean you've got full role based access control right within your spreadsheet I think the right way to do is defense-in-depth and do that on the sheet with logging and auditing and controls and then also at the middleware level and of course the the final word is the blockchain right so you build a the correct kind of you know ownable and and permissions access into your smart contract as well areas where I could see spreadsheets be like like this being used in the longer term it's just a building kind of third-party interfaces for GFI projects like you could just build as a spreadsheet like a form that just kind of automatically fills some things and it has some but some button that says extend the transaction you could build something like a units lock UI inside of it and the spreadsheet format just kind of naturally means that the amount of stuff you have to do a smaller which could even make it kind of be much easier to audit and so forth yeah quick audit quick time-to-market for the atomically ninja and compose one interesting aspect especially like when you have this kind of like ability to compose things and and first of all like they know code aspect is it's really amazing and that's like something that's pretty cool is this kind of like social aspect kind of like if you do something cool in and you try different kinds of primitives or batches of transactions being able to share that with your friends and having this kind of like social aspect I think that might be very cool I mean people love to share what they're what projects they support it didn't get coin and so forth so that might be interesting aspects you have this kind of like a copy copy paste thing and I think was it basically composed it kind of had the drop so you could actually even do that that you can share them if I if I correctly understood even Daniel you made it yeah so that's right what that was one of our main goal who designed this we wanted to share the the graph that you made that's why you need first to deploy and an executed so yeah you can share it to friends the students whatever you want and they can executive you is a one like it your own device not you want yes no you can't share with anyone and anyone could execute do you guys have plans to keep working on this after the hackathon and if so like kind of what's what's next on your roadmap so yeah yeah we need we will have more things like in fact we were more validation we just run it again and work and can't you fail on on the life you know so we want to more more instrument more acid and more validation many more documentation because we want people to be sometime I want to explain how what each increment does you know so you can read all that each piece right yeah more like just documentation formation yeah awesome well thank you all three teams this has been an amazing kind of start from the Q&A side in our first groups demo and what we're gonna do next is move on to our second segment which is focusing on the developer tools in the space so just to quickly kind of show the next two teams that are up and coming we have defy support for vias code and God won't for tests so with that I'd like to call up our first demo defy support for vs code to come and share the screen and kick off the dev tools segment everyone my name is Eric I'm from Toronto and this is defiled anchor support for vs code problem that exists today is that IDs provide generic support for programming languages and libraries however they don't provide any a theorem domain-specific knowledge outside of solidity developers typically need to use external tools to look up things such as if the addresses E&S names token addresses contract information and so on to solve this problem I built a vs code extension for writing device support when writing node.js applications this gives you live on chain data live marker data and program amount of support for coming III don't defy scenarios let's take a look the extension is available on the vs code marketplace under the name aetherium defy language support you can simply install the extension and start using it right away in the vs code settings you also have options to enter some API keys and this will give you access to live data however these are optional first let's look at a theorem addresses hydrosis private keys and ENS names are all detected automatically in your source code above each address and private key argue links that you can click on to go to the leaders either spam page form a net as well as for the different test sets private Keys resolved to the public address so that you can easily verify that this is the address you want to use there are Diagnostics for Patrick for checksums invalid checksum will show as errors while non checksum addresses shown as warnings allowing you to quick fix to convert in non checksum address to a checksum address you can hover over a theorem addresses to view the live information this includes ether balanced token balances as well as and also noticed the live market data which includes the ether and token prices and their total values now let's talk about DNS names there's two a resolution for EMS names both from the address to the unit's name or from an EMS name to its address and also easily convert from one to the other now we'll focus on programming examples press control space to do pool completes where you have the option to insert various defy snippets or token addresses today how about unit swap traders as simple as inserting is snippet and doing code complete for the tokens you want to use notice a live market information for that token you can also quote you can also hover over an address to view as live market information as well now let's look at how this helps with using the key tokens SDK to generate a Bitcoin deposit address you can insert the several samples are available to help you with it using the pitot Vince SDK for example we insert the first snippet to setup the SDK and notice the employers automatically either for you at the top simply paste the private key you want to use and copy the etherium address shown then we can insert the snippet to generate a bit for generating a deposit address to from Bitcoin to PPD see simply paste the ether address that you've copied from above and now you're well on your way to tokenizing Bitcoin on the etherium through P tokens now let's talk about how this was made this solution uses a language server protocol this is the industry standard for providing language features in text editors and IDE the extension implements both the language server and language client which communicate with each other through this protocol this allows the solution to be easily extendable to any other IDE if europe is used as the web we provided to provide live on chain data and amber data is used for market data for etherium addresses and tokens the next steps for this project are to support local development block chains such as gain - this which gave you live data for addresses on your local chain keeper program a little deeper programming model support for contract interactions and other if IFT case and finally to get this into the hands of developers you get feedback on it and to make it as useful as possible for writing if they're in the fight applications this is available right now on the vsq marketplace thank you for your time awesome thank you so much Eric that definitely deserved a massive clap and what they'll move on to our next demo with martinet to showcase godwyn for tests and we'll move into the Q&A section for the dev tools category hi hello okay yes we can awesome um hi this is Martin Utley from Waterloo Canada and my project god no for test allows developers to do anything on the local blockchain so as we know millions of funds are being managed in defy naturally we want a secure system we want the system tested however this is challenging especially for d5 projects and to start off it is hard to replicate the maintenance structure of other projects on ganache and well just imagine deploying the whole maker doubt ecosystem so people use Tesla to overcome this however it is also challenging because of defy composability test net only simulates mainland structure within a project but not between projects and I quote this from our fellow hacker smell small round here on test net compound and avi are using different Diamox another option which is ganache with the fork main net could overcome this but there are other issues and this is mainly because code is law you work from a given state then you have to follow all the rules it will be hard for example to get some tokens let alone creating different scenarios for testing again here I'm quoting one of our mentors Mariano when he was answering a question on how to obtain that we won't be able to mint directly fermenting die you need to go through the whole open vault lock up collateral mint die cycle and that's why better off just mocking an IRC 20 so this actually makes it very difficult to set up testing environments for d5 projects well that wants to build on other money Legos so what I built is to overcome this code is law issue in local blockchain god mode for test consists of three pieces a modified ganache corn that can ignore blockchain law a no js' library that integrates into truffle framework directly and leverages solidity contracts as API and a set of pre-compiled godmode contracts that works in fork mode unless I make it down at minced I you need so v2 that enables the free collection and camp that mints different sea tickets right now two men died in one straw for tests the developer only needs to do this so it's pretty simple and if you ever dream to become the Fed all you need to do is add a for loop now I also provide a generic function so that the developer only needs to do this so it's so the developer only needs to do this to code another solidity contract and no need to learn new stuff whatsoever now let me quickly show you how this would look like so on the left here I have a modified ganache running and on the right I will be running a travel history I'll go to the test right now that we're running so here I have a contract with privileged action and only owner can access it the owner is set during deployment and there is no way of changing the owner in the Travolta's environment here we have Alice and Bob and Alice is the owner of the contract and she can access the privileged action now on the normal circumstances Bob cannot access the the privileged action however with this Scott mode enabled Bob can access the privileged action so here we execute the original contract as another instrumented contract so what is this instrumented contracts we basically copy this original contract and create a new contract here remove the only owner modifier and save well you will also have to roommate nate rename this one okay so that's it and we can even go further we can actually create a brand new function and set Bob as the owner right here here we execute this original contract and we as this set owner contract and invoke this set owner function that doesn't exist at all what is this set owner contract same we paste the original code and then we add the new function right here that's it and so in the test I also have the previously mentioned contract with mint and arbitrarily mint in C token and these stuff let's take a look at the test we just ran right now so all passed this means that bob has successively accessed the privilege action and even become the owner of the contract so for next steps I would like to add more defy projects into the library and work with developers to figure out interesting scenarios that they may want to test the project is available on github and please feel free to reach out and see how God mode can help test your project I believe by facilitating developers experience on testing all users would benefit from safer and healthier ecosystem thank you also thank you so much for net for for god mode for defy so I'd like to I'll call both of them to turn on their cameras and we'll go into or 10 minute Q&A it's a lot of cool developer things here that we just saw we were getting a lot of comments from our attendees on the chat but people loving the dev tools so I'll see if I if I think one of our judges wants to once you want to comment or ask questions and then we can have a discussion around how do we think about improving dev tools so to start amazing work both of these I think you know dev tooling is an important piece of the ecosystem to help everybody build faster safer and better the first question I have is for god mode for tests do you see you know this ever evolving from being a local testing framework and environment to something that could be used to deploy some work like you can ask for you know entire test net ecosystem where you can simulate this on chain as well as on local or do you really view this as being something from local to actually so this is already using the fourth option so I can already fork from the main net right do you ever see it you know running in addition to locally on a test net itself do you see an option to take from a net to local then back to a test net to run something on chain or do you see this predominantly as like a local ah development tool um I I do not know what you mean by going back to the test net because we we do right here is like arbitrarily do we defy the blockchain law so if we go back to the blockchain online and that there will be some issues right there but however I do have some thoughts on having the main net sport data to keep coming in to keep simulating the blockchain locally I think that will be useful for the research purposes so for the godmode work that's very very impressive I can see immediate applications for security testing and for all kinds of things that are really not possible today kind of fuzzing attacks and introducing deliberate errors into the code to see how the rest of the system behaves what you were doing in the demo kind of look like monkey patching I don't know if you're familiar with that term where you basically override a local function for testing purposes and change the interface or the functionality one of the things that I would encourage you to develop further is some way to collaborate by sharing the kind of libraries or templates that you're building in godmode so that others can use them to to test specific aspects of it like a snippets collection I think it was very very impressive nice work thank you and yeah that's actually one of the main steps I try to engage other hackers to ask them like what kind of scenario that they were they wanted to test right and some some things because myself is an auditor at constant and I often see that we actually really want to test you know different scenarios for example like when Oracle was failing what would happen to my project I would really want to see that right so right now it's really hard with this tool hopefully it will be better um questions for the visual for the visual studio project and how does the what you did compared to some of the previous Visual Studio aetherium integrations that have been done before right so I mean well from what I've used that the catering divisions for four videos called are mostly focused on the solidity side whereas for for my project is most more focused on the application side outside of solidity but interacting with the shading and interacting with contracts I have a question about for Eric like one thing is interesting like I think is a pretty pretty awesome tool to to speed up everything in terms of development but uh the terms of like where the data comes from if I understood correctly there's kind of like in dependencies on data providers for example there was in fora and and whatnot and like whoa maybe this is a question for you like will developers actually trust this tool in their development process initially like in defy where a lot of funds are a mistake and basically the whole development process is is kind of very very mission mission critical and yeah right so I mean for for generally theory I mean it generally theorem integration it uses inferior as the rightful provider um for for the future work we can look at including other review providers or even like some a local node something that you can connect to that you that you trust or that you were that you use right um before the market data it's using a member data for for the market information and perhaps another extension you could be looking at or another improvement can be looking at supporting other market providers both fighters as well thanks thanks because maybe just to see if we can get some comments on on the theme here but obviously we saw on the mainstream category a lot of tools and applications trying to make it easy for everyday users even if they're not strictly developers to compose things and get the information they need to make a decision in front of them and I guess the same thing applies for developers because they can quickly understand what to do next and not get bogged down with the nuances of how something could be structured what uh what do you guys think like what do you all think that could be also done better as a developer anywhere from my feature request to what are some of the other comments you think you get all the time in the space where developers can actually be the beneficiaries of a lot of the tooling gear because we often spend too much time making things important for everyday users but developers are also the ones powering all of this and I'm not sure if this is more appropriate for this section or for the previous one but one thing that I really wants to see is a kind of more minimalistic programming language specifically designs toward making you eyes for smart contracts yeah there's right now you know what you have I kind of HTML and JavaScript and then on one side then you have this oddity code on the other side and and if the HTML and the JavaScript ends up just being kind of much larger than code for a UI here radically needs to be him absolutely any final comments from any of our judges I I really love the vs code plug-in I'm not a visual studio user myself but the fact that you can use this potentially with other integrated development environments is just really nice and thank you for making it in such a way that it's open and reusable in other environments too very good work thank you thank you but also just add that potentially atomic and both I could use lab mode yeah it'll be awesome no that's that's perfect so I guess one thing I should highlight fer for everybody on the live stream is that all these products are available for anybody to use right now like you can find them on I'm gonna remain that or in general their websites and that's kind of what the amazing outcome of fact money is that given we had four weeks to work on this people really took the time to not only improve and make sure that the project they're working on was validated and useful but also that it was ready for anybody to be used so we'll be tweeting out all the links and we have done so for a lot of them but you can check out all the things you've seen so far live and music to yourself so with that this this is the halfway mark of our five demos ten and what we'll be doing is we're giving our judges a ten minute break for for them to just recoup and stretch and in the meantime we have a lot of our sponsors who offered a prize to all the teams that were hacking on their protocols and we'll invite them for the next ten minutes to to simply just talk about and share who who won the prize that they offered and get to share their excitement with everybody else so we'll see our judges in ten minutes and with that I'd like to take away by calling up mark from ave mark if you can turn your camera on you know so it looks like Marc's computer just crashed and seems like this is a consistent thing with everybody upgrading zoom today and yesterday so what I like to do is I if Donny if you would like to come and announce the projects please turn your video on and we'll pull up the slides for your winners and you can tell everybody who won the Hobby price basically what Mark has has the slides but I kind of know one so basically I mean there was so many hacks it's really it was really hard to pick there was total 46 incredible stuff being build and pretty much like all so kind of what's nice to see that there is lot of compatibility and bridging with other projects so that was video awesome yeah and so I think three winners so we had basically first one was Alfred well let's let's start with the price number three so basically magic bet so that's basically no Louis betting platform where you can bet on for example outcomes on presidential elections state farms and those will go to are they earn interest and the winner or winners will of the outcome will get the the interest so it's very pretty cool stuff then we have yield hero so there was a lot of cool features that's number blaze number two and and you could actually redirect interest very easy way in other and also it allows you to swap a tokens between well actually can provide liquidity in terms of a token swapping and and also earning at the same time interest so kind of like the same of curve model which is very very efficient yield hack and that was actually very very much into the yield tag team that we were promoting and then number one is learn and earn so that's basically if the first pot to incise education so basically you could create a course where participants join and they stake amounts of assets for example da US DC and and and basically they learn together for example you could create a course learning solidity and end of the learning period when the course and there's a quiz and based on that and and the outcome of for example chain-linked oracle there is a results and and the interest is basically distributed amongst the results so that's pretty pretty epic and I think that might even scale into the real world and might have kind of like this coin base earn type of thing but uh really nice incentive and basic governments and and companies can even sponsor to educate more people different various stuff and there's like like there's a long list a lot of cool hacks not just in Auburn wedding overalls so like I really want to thank everyone and there's also everyone who hacked on our will get the the are my socks that I promised so those were pretty cool and if you fill out a form on feedback you will get also a other beanie so because it's summer we call it summer beanie and it's pretty cool as well yeah and and that we nurses wall there's the the ADA prices but also you get a hacker pack which is pretty pretty awesome as well yeah thank you guys hey thank you so much Donnie and with that I'd like to call up Hayden from a union swap site and if you can turn on your video and tell us who won your prize will be awesome yeah yep yeah thank you hi Hayden from being Spock we're really exciting to be a part of hacked money we really like the kind of long-form virtual hackathon we think it worked out really really well we had over 46 teams building on top of eunice wah we had a bounty for the you know the best three projects building on top of Yuna swop v2 there were tons of really cool submissions it was a tough choice but our first-place winner was licorice gen which built a platform for bootstrapping liquidity pools on unis walk it basically solves the problem where you want to create a liquidity pool but you only have one of the two tokens and you always need 50/50 value in unis so with liquorice Jen you basically create a custom bonding curve contract that will you know sell half of your tokens in some sort of custom price range until you have an equal amount of both and then it automatically feeds that into a Yuna swap pool a super great project we thought we think they did a great job our second-place winner is the adult which is a decentralized autonomous liquidity provider this project used on chain data to determine which pools were earning the most fees which which had the highest yield and then would automatically allocate liquidity between pools and you know move them over if one pool had no was earning more in fees very cool it kind of only used um you know use the the growth in the invariant where third place winner is candy shop which is essentially a eunice wah browser that can they get to priority arbitrage rights against trades to go through it and then it rewards the users who trade through it by giving them sort of a token eyes lottery tickets that they can use to kind of share in a portion of the arbitrage profits that's awesome Aiden thank you so much and that thinks I came to uni as well for for being one of our sponsors we saw a lot of amazing projects on v2 and I can't wait for these hackers to continue working on improving and adding more to you as well next I would like to call up Adam from compound so Adam if you're there these are turn on your video and we'd love to learn who won the compound price awesome thanks Carter I want to say thank you to everyone at global awesome awesome time had a lot of great questions asked in the discord and it was really exciting to be a part of this so we had 27 compound submissions and all the projects were great we we had a really hard time picking winners for the compound thousand dollars see USD see prizes we narrowed it down the best we could to to projects which will each be receiving a thousand see USD see we we chose the project see channels which was sort of like a bar tab payment system that uses compound for getting interest and that was awesome so congratulations to Alan and our second winner of a thousand CUSD C is the atomic ninja project which was sort of like a cool drag-and-drop editor for making single atomic transactions we really love that one so congratulations to Fabio and Jay G and yeah thanks so much everyone for participating and making this awesome experience thank you so much item next up we have the chain link you know we'll have Patrick from chain Liang tell us who won the chain link prize Patrick take it away hey guys Patrick from Jane link here the decentralized oracle solution so we had about five thousand dollars taking about two three projects and again you know we received so many fantastic projects and it was it was awesome to get so many it was it was really difficult for us to choose just three but for our third place we ended up also going with candy shop actually they are the efficiency first Dex aggregator they ended up using a chain-link PRF to get verifiably random numbers for their their lotteries which you know is brand new so that was awesome to see second place goes to defy dollar they are an interest earning stable point index and they were using chain link Oracles to get different currency pairs so so that was great to see as well first place goes to the no loss competitive platform of genie which was using shindig Oracle's to get data I had a nurse which it was a blast to help help set that up and build that so congratulations to all the teams who won from chain link and you know again thank you thank you team thanks to all the projects like I said it's been a ton of fun to work with everybody we're excited to see where your products go and we're always in discord if you want to chat more awesome thank you so much Patrick and next up we the heart from uma heart love to know who won they all my prizes hey Karthik thanks yeah hi everyone heard from uma uma builds infrastructure for what we're calling priceless financial contracts these are defy contracts that minimize Oracle usage to avoid many of the security and scalability issues that have plagued defy the hack money hack that bond was actually perfectly timed with the release of our newest priceless synthetic token framework so this is infrastructure to build ERC 20 tokens that can track the price of anything while minimizing the need for unchained price data we had 2000 dyed prizes to award the first prize goes to potion insurance potion built a totally new way to buy put options using uma priceless contracts and a liquidity pool design that was inspired by a mms like balancing in as well the financial engineering behind this I actually found to be truly mind-blowing and something I've never seen or heard of before you can buy a put option on any asset for any strike or any x3 directly from a liquidity pool and you could do this all priceless ly with there's no Oracle calls whatsoever in the optimistic case our second prize goes to my g5 pi my d5 pilots anyone create their own highly customized mutual fund with any combination of traditional or critical assets the project did a really exceptional job of creating traditional assets and using smart contracts and then combining those assets with balancer pools and Ave lending lastly I just like to thank the global team Jacob Karthik Trent Josh and the entire team guys this has been an amazing event as usual and it shows thanks thank you so much for your kind words heart and I again this would not be possible without all the hackers that are doing the hard work and all and sponsors that made this possible from our end so what that I'd like to move to our next sponsor and that is P tokens so I'll let Alice take it from here hello hello everyone here is Alice from P tokens Peto consider prosthetic a possibility solution that enables the movement of any crypto acid into the etherium blockchain so we have recently announced also where path to a community governed system and you're all welcome to check it out at P dot network we are glad to be a sponsor at this great hackathon that's helping to boost the growth of the ecosystem so we are worth being a three prizes today two P tokens back the prizes we have a third for a grand total of zero point six P BTC that's approximately six thousand US dollars at today's prices our first prize is the money level price that goes to my defy PI so this price Awards the best P tokens based project leveraging coop possibility for for a Bitcoin to be integrated with ATM smart contract and a kilims defy so my defy PI did an amazing job on this our second prize is a Christian price that goes to BTC tornado so the price worse the best project leverage helium to add features over the Bitcoin cryptocurrency so congratulations to BBC tornado for an incredible job on on this point and finally our second christian prize goes to adopter so the team did some hard work at merging bitcoins and helium features so congratulation guys and adopt team is our our third winner so finally congratulations to all hackers you all did a great job and it was really fun to see that and thank you also to the it global team for organizing this thank you so much Alice and next up we have Brent Leigh from ENS breathily take it away yeah hey I'm Brantley from the etherium service team and we had 26 projects submit for our five prizes of $150 each and great projects our winners are first in no particular order defy support for vs code which you guys already saw presented their great a great IDE you can switch between ENS names if you know sames know through my dresses very easily they detect the ENS names you can look up information it's great second is NF wallets it's a not it makes a wall into a non fungible token and in addition to name resolution it has ENS login which is a cool project you may be hearing about more in the next few months a third is Umbra which is a they have private transactions and using ENS great we're gonna try to put this on maintenance integrate this into get this used more and this is great d5 777 a cool project that uses ENS names interact with various d5 projects without the need of a front-end and lastly telegram totality which lets you integrate interact with aetherium gaps with a telegram box including like renewing your ENS name that that was cool so thanks to everybody thank you so much friendly except we have Scott from Portis and shape-shift and all that Scott tell us who I won the Portis award I can't start my video it won't let me we'll just make sure that there's no technical difficulty on on our end let's see if this one works there we go all right Scott from Lourdes powered by shape-shift we had over a 37 projects building on Portus which is a SDK we have three standard wallets which is self because self custodian really simple email and password log on really excited for all the projects it was extremely difficult to pick from the 37 that built with Fortis we had 3000 USD which will be given out in e so our first place for 1500 is bloom finance balloon fine man bloom finance built a gift card that grows so you have any type of gift card and you upload the code and then it increases in value over time which as long as you have the gift card that money continues to grow so congratulations bloom finance second place is pen safai pencils pencil is a secure a noncustodial no loss no risks pension fund built on the ethereum blockchain really cool what they did really proud of them second place for 1000 USD and eat and then third place is a pull up they built an anti simple system for gaps which you know in this ecosystem and globally digital identity is a huge problem so congratulations for building such a system that will help with civil attacks thank you again each global for everything that you've done to make this possible this was probably one of our favorite hackathons we've ever been a part of appreciate it thank you so much Scott these are our supporters winners and then next up we have answer and Fernando take it from here hey guys this is from balancer so balancer is an automated market-making protocol it allows for the creation of flexible and self balancing pools so they can have many tokens different way it's not necessarily 50/50 you can even choose the swap fee of your pool so the the two projects that we're awarding today are first my defy pi it's the third price Jeff did an amazing job at connecting very interesting parts of the Phi yeah so Jeff congrats for that it's as as we saw like you can create absurdly customizable mutual funds using balance for uma and Ave the second price is what the frak so what the frog knew what the frack guys have a vision in the future that we're gonna have NF T's that are very expensive imagine you you have a house that you have an auction so what they did is yeah they made it possible for free with using ballesta to to fractionalize those shares of the NFT so that people can join forces and together participate in those in those auctions and bid for a house so yeah great job with the phret guys wanted to thank you Karthik for and the whole efj global team for this amazing event it was it was really really cool thanks a lot and all the hackers as well thank you so much for your kind words and again it's I'd say it's a team effort and I think that the rest of the global team deserves a lot more credit than the one guy on the zoom call so with that I'd like to call up Matt from SIA and has never won the same prize I'm Matt from SIA I'm one of the core developers on the team you know we were super excited to see all the projects that worked on our one-millionth Eichorn challenge to build on integrates skynet into their hacks Skynet is a decentralized CDN and file sharing platform built for developers we're really excited to be a part of you know this global hackathon our first winner for 500,000 side coins was Atlas library they built the decentralized library where the content is also on Steiner has the ability to support there's directly through the access of their you know their books in their content our second winner was of five hundred thousand cycle and was defy BTC they're able to create a composable Bitcoin on here iam and they're hacked with what we call ASCAP which is a application hosted completely on Skynet which is a great example of the power of Skynet in allowing for developers to host their application you know immediately without having to set up a website or any sort of server so thanks again for everyone that participated and thanks again to the eath global team for let us be a part of it thank you so much Matt and with this I'd like to call up our last sponsor that is awarding our prizes and that is the Ross from open GSN the Ross take it away all right so hi I'm Ross theory from the open GSN team we gave prizes for integration with the new version of GSN the etherium gas station network we had four prizes totaling 1600 dollars and it was a really hard choice between the 12 teams that use GSN to improve their you X so with GSN users of adapt can interact with aetherium without needing eath for transaction fees and this helps minimize onboarding and use ux friction so we had three $200 prizes for best use of GSN to improve that 2x and in no particular order we are awarding other prizes to NF wallet which was a very cool smart wallet it can be transferred as an MFT token and it used the GSN to abstract away gas BTC tornado is a Bitcoin based Bitcoin mixer based on tornado cash and it uses the GSN to allow anonymous Ethos withdrawal and last but not least Cumbre which is a protocol for enabling stealth payments on a theorem blockchain and it uses a GSN to allow private withdrawals without needing the winner for our one and dollar and prize for best GSN paymaster is meta TX by one and Sanford burn and showcased a G&P master that lets users pay for gas indict by using diaper mid and unit swop v2 so I'd like to thank again the global team for doing an amazing job putting together an event that catalyzed so many good teams to build on etherium so thanks again thank you so much Duras and into all of our sponsors who not only just participated at this event but also made sure that they put in the time and effort to have every team that's working on not only their projects but anything on on their list of projects to work on succeeded we saw people answering support questions at odd times throughout the night given that this was a wide spectrum of time zones and and ranges when people were working on things it was really truly magical to see the amount of activity that that sponsors our mentors and everybody else in this ecosystem including the actors themselves put in to make sure that everybody else is also able to finish their projects so with that I hope all of our judges arrested and we have five more demos to go for finale' finalists and I'd like to start by introducing our last category and that is managed for primitives these are projects that anywhere from creating new primitives in the Defy realm to extend existing protocols to offer new utilities and applications on top of it and we'll have oil market one inch qi liquid fi Umbra and cover present what they built and without further ado I'd like to call up oil market to share the video p.m. demo for for their hack so please welcome them on the livestream everybody we're team Oya and we built something to make it accessible in mainstream to shop online with crypto wallets and save sellers a ton in feast we're from the San Francisco Bay Area we're demoing the high fidelity design protocol architecture and smart contract code for Oya a decentralized ecommerce protocol our team members are EVOO vana shut and John shut Denis an es Lee is one of or users she's a programmer and make jury that she sells online she sells on centralized marketplaces and has her own store using Shopify she has thousands of dollars of sales per month but after transaction fees referral fees credit card fees payment processor fees monthly membership listing fees mandatory advertising fees closing fees and Commission her cuts only half that amount she isn't too happy about these fees and this is where all your protocol comes in Oya slashes fees by eliminating middlemen managing orders and payments through smart contract let's watch an order the buyer cements order details and payment through Oya this creates an order smart contract that holds some money and manages to order the seller receives a notification accepts the order and chips to item to the buyer the seller upload tracking information to the order smart contract this allows a smart contract to confirm delivery with the chain link Oracle later on if needed the buyer also get tracking information the item is received by the buyer who makes sure everything is okay and then accepts the item the smart contract instantly pays the seller and reports a successful transaction to the oil protocol both the buyer and seller earned Oya token which give them voting power over future changes to the protocol this way there is no middlemen taking a cut the buyers and sellers owned a protocol directly thanks to oil denise has lower fees and more control she is very happy now to add oil to her own store Denise installs Arroyo Shopify plugin she also installs all your Chrome extension to make it easy to manage her orders Denise's customers see Oya as a payment option during checkout alongside more expensive centralized payment methods the buyer can use eat or any popular ERC 20 token and their wallet to pay oil automatically converts to the sellers preferred token using uni swamp oil also uses open GSN to pay the buyers gas fees the costs are ultimately paid by the seller in most cases a total gas fees are less expensive than traditional e-commerce fees for higher price items the savings are enormous since Denise install the oil plugin her product can be automatically imported into oil mark alongside many other sellers using the oil protocol orient market is a crypto native marketplace so we see products price and tokens and customers don't have to login they just use their aetherium wallet customers enter shipping information like any other e-commerce site the checkout experience is the same as choosing Oya as a payment option on Denise's site both sites use the oil protocol smart contracts on the backend the low fees and cool features are the same nice Denise can see a new order notification and her oriya browser extension she clicks a extension to open the seller dashboard where she can manage all her oil orders from any marketplace she can upload tracking information for new orders and see the status of her existing orders she can also claim phone from orders that have been delivered after a wait period where the buyer can initiate a return let's watch a demo of the first building blocks of the oil protocol buyers can create orders to the controller contract or token holders can vote to update or replace a controller buyers and sellers interact directly with order contracts either party can cancel an order before it shifts the smart contracts automatically refunds a buyer sellers can upload shipping information and claim phones automatically if the delivery is confirmed and a wait period has passed and buyers can mark an item as accepted and the smart contract will automatically pay the seller the buyer and the seller are noia token rewards for successful orders if an order goes bad and the buyer and the seller can't work it out themselves they can call and the arbitrator to decide who gets that money Oya tokens are earned by using the protocol not bought in a token saw token holders make the rules which evolved organically over time we have lots of ideas for the future including earning interest on money in escrow check us out at Oya dot market all right so they have a lot of stuff to do we're gonna keep working on this on the smart contracts side the next step is going to be figuring out that seller bank that pays for gas fees and returns and how much they deposit in there you could tell a little bit more about what we're doing on the front end and vanesa on product and yeah so for the front and side we want to refine our design based on their user feedback and then complete our Webster interface for our buyer checkout flow and the seller other management dashboard away are they both showed in the video and we are continuing our user engagement through in seller surveys upon our current website which we have been conducting over the last 30 days which has built the product to adapt to the users wants and their needs and the name Oya comes from a powerful Arriba Alicia who commands the winds and change and we try to carry that same power and the energy and everything that we are doing thank you thank you so much this was an amazing demo and I'm really glad to hear that you'll continue working on this and using user feedback to improve it what that I'd like to move on to our next demo and that is that qi token from the one-inch team so i'll let them take it away with an amazing June background hi everyone so I was me look we are very happy to be here my name is Sergei from Germany Stuttgart I am from the team one inch and my colleague Antone buco from Moscow we have built on this hackathon actually two things the first one is the cheek a stone by one inch they created create two powered gas talkin the cheek a stocking works by taking advantage of the store refund in a theorem it's actually based on the original logistic to token but on steroids more optimized version so white shear and not original DC 2ch IGAs tokens around five percentage is more efficient by using Cretu and subcontract address discovery with just a few lines of code and Chika's token is built on opens upon your c 20 token contract and it's fully compliant with TRC 20 standard the second thing what we have built is deployer WTH just small smart contract which allows everyone every developer deploy on smart contracts and pay only half the cost of the transaction costs tip the problem we see and last time gas prices around 50 to a maybe sometimes more sometimes a little bit less but still it's a lot of money and such teams like one inch we have we have to deploy a lot we deploy almost every day a new helper and try to improve the device pace and it costs a lot and for example if you have 5 million big smart contract 5 million of gas and you pay 50 be around $60 and it's a lot and if we can reduce it by the half it's a huge huge i would say it's a hack mmm hack so solution how to save on a huge gas cost it's you have to meet the Qi token mother gas prices law to leverage it on EVM level by writing into the storage so and then you have to burn a chi talking instead of different sanction during high gas price to get the gas profile up to 43% just by raising storage and how to use to deploy the TTH contract you have to approve the chi or original GT to token to the deployed o th e th smart contract then you have to take your binary from your smart contract with your plenty to deploy and you have to pass the data simple in a function in a deployer to deploy or GT deploy for example and after the draw section is might we get up to 43 percentages of gas reforms so I'm going to switch to the live demo first of all you need to mint the cheat talk and of course you can do it by yourself by just executing function min function and a smart conflict pot we decide to integrate the team internet dart into one inch so she own let's say you have to choose if for example here 0.01 it's around two bucks and then you can mint on the current gas price around 25k of course this makes sense to mint it around 10 right now maybe maybe five depends if you can get it mind so you have just to swap verify and and also here except in the meta mask one sec it's it's loading so you have to accept and then we sent the transaction to the minute and the transactions looks like that it's already mined transaction so I'm I'm interred here five Chi token and what we do we create your smart contracts under the hood yet you just writing the storage so of course you can trade the Chi token on one inch you can just swap for example Chi to use the T we use multi paths like but swapping to your gbtc from Chile and from gbtc to use DT for example and of course you you can set a limit order and size means right now and sell it for double of price of course you can also provide liquidity here for example unions would be to and earn also on the trades on trading the Chika's token has already around 30,000 of Cheeto can already minted and this is our source code it's readable on ether scan and what we did we just optimize here some functions for a mint we reduce the size of the address and we reduce the logic to find the SAP smart contract address create to helped a lot the deployed contract use small modifier which can also be integrated everywhere in any contracts and each it's just collect gas at the beginning of the transaction and at the end and burn from your wallet so to to you to deploy it through deployer you have just called his function she deploy and put your contract data here and that's actually it here and it the deployment would looks like that so you see this self-destruct a lot of smartphones could be erased their storage and get the refund and she and in this case we have around 58 percentages it's actually little bit less because you're certain made I must lead little with overhead so as back to the presentation and what is next so how ready show it's already under my net and you can also already mint it on one inch let's change we plan to offer a burning from user wallet for each transaction on one inch they were soon so everyone can just provide yes the approval to us and they will save on my each transaction on one inch and we mention also cheese support and other projects like our we components and headings and more also all the money legis we have seen today I would I would wish to see such plants and each module where you can just put this discounters cheese counter to reduce the gas cause for the user also it's very important for for the arbitrage arbitrage trades to reduce the gas costs and be very very efficient and if you like to hear why we called it she feel free to ask in the QA and I will explain thank you very much he was the one each team keep swapping thank you so much for again the winder steamer I think we're going to see and we've seen a lot of yield hack in Europe but come on Neil talking with the VM hacking I think is the real one so I can't wait for for the judges to dig in to have the internals of tree token or set up what that we'll move on to our third demo and that is Team Liquid if I so I'll let liquid if I take it and I start with their demo Jeff go for it hey guys I'm Roscoe and I'll be presenting for a liquidy fun alright so like I said I'm Roscoe I'll be free under liquidy file which is democratizing defy liquidations so whenever you're taking out a loan on a d5 platform such as avi basically you're putting up collateral that's worth more than the LOI than what you're taking out but then when the value of your collateral drops in the future your loan can be liquidated and what that means is that basically someone else bias if you lateral off to the system and they're incentivized to do so through fees or whenever they do so does people make a little bit of money and this system is what keeps these defy platform solvent and keeps the user funds on their safe but the creation bots are quite difficult to set up and run which means that the yields that liquidations offer are inaccessible to many regular users of defy applications and it also means that the systems that rely on these liquidations are a bit less safe than they could be which is something we saw for example on Black Thursday earlier this year so our solution to this problem is to democratize liquidations and we're doing that by allowing people to pool their funds in smart contracts and then these funds are used by our liquidation box while the profits of the profits of these liquidations are shared among investors this is our team Jeff interrupted mostly you I myself sir Rob and snake worked on the smart contracts snake also did all of our BOTS work and Kevin is the man that brought us all together did all the research and kept us accountable so let's go into our demo we built this dashboard that shows us our share of this pool owner with the pool ownership and that's represented in our token shark dive which represents a value in died so let's try to deposit some more dye into this into this pool and then basically what is going to happen in the in the in the background is that our our contracts is going to convert this deposit that died into a die so that we're basically stacking a vase a die yields on top of the yields of our classroom so we're doubling up on the years of our that our users are going to get so what we're going to see is the our share of the pool ownership is going to increase and our amount of shark died and therefore also the value that this represents so all these values are going to increase when the transaction is when the transaction is mined and so then of course in the backgrounds liquidations are happening so here we saw just the values increase and in the background the depredations are happening and we can't really show that live on test net right now because there's no real liquidations but what we can do is we can simulate a liquidation happening by basically just simulating the end result it's a liquidation which is our tool making money so what we're going to do is we're just going to send a bit of a dye to to our smartphone track address I'm a Damascus bit slow um but so basically what we're going to do is we're going to send some Aid iTunes address which represents a a a successful liquidation and so what we're going to see them in the UI is that our share of the pool ownership is going to stay exactly the same and the amount of shark die that we have is also going to stay exactly the same but what we are going to see is is that our the value in dye is going to compete so we're going to send 208 I so it's quite a big amounts we should really see something substantial change in this in this value in died over there and so how this liquidations work is that basically our liquidation bots is calling a function on our smart contracts which then uses the the funds in the pool to call the liquidate function on eBay and as we discussed before basically the liquidation I think we just saw the value change there um so basically the liquidations are us buying collateral off of ovid so then we get some other token back and we swap that immediately through Yunus Rob so that we have died in the pool again which we compared to a died and the nice thing is that we have checks in our contract that makes sure that the tool always must make a profit so there's no way to do any unprofitable liquidations for our button to scam that the tool or something so that's your project in the future once we launch our main mats we also want to support arm or liquidation two platforms and just ahve and just make general improvements to our liquidation barcode thank you for your time thank you so much Roscoe this has been awesome so we got two more demos to go and then we'll move into the Q&A session so what that I'd like to call up Ben and Matt from Umbra to showcase their amazing hack okay so we are team Umbra and this is our hack money 2020 submission my co-conspirator is Matt Solomon from Los Angeles who built the front-end and the JavaScript library I'm Ben DeFrancisco from Philadelphia and I worked on the architecture and wrote the smart contracts we built a protocol for privacy preserving stealth payments on the etherion blockchain inspired by this March 31st tweet from batalik butyrin at a high level Umbra enables transactions where the receivers identity is known only to the sender and the receiver it does this by allowing users to publish a public key to an ENS text record which is then used by senders to generate new addresses that only the receiver can control let's do a quick demo for the demo I'll first play and narrate a video showing the Umbra setup process afterwards I'll do a live demonstration of sending and receiving a payment so here's our set up video now this is a one-time setup process that the users must do before they can send or receive their first payment they already own the ENS name Umbra demo eath and if they didn't they would see instructions on how to register one so next the user is setting a password and this password is used to encrypt the private key that is generated and stored it locally in their browsers local storage in the next step the user is prompted to backup that encrypted key file so finally the user is going to assign a message with their new public/private key pair and publish that signature as an ENS text record payment senders will use this record to recover the recipients public key and generate new stealth addresses so now I'll switch over to do a live demo of sending and receiving a payment and my teammate Matt will narrate what I'm doing all right Thank You Ben so as you can see we have two windows open the right is the receiver and the left is the sender so if we take a look at the right-hand window you'll see our ENS domain and towards the bottom there you can see the signature that they think as a text record during that setup process so that's what the sender will use to recover their public key and generate the self address so if we switch back to the left this is our sender and will now send some funds so here we type in that ENS domain and we validate that it is properly configured with the signature we select the token or ISA we want to send and specify the amount I mean right now we're just showing two tokens but really you can support any ERC 20 and so now we send that die and confirm the transaction it's worth noting that you don't have to send to any NS address you could send to a regular address transaction hash or a public key directly to increase the size of the anonymity set but for convenience and user experience we're doing the DNS address here and once that process is there we go we can log in as the receiver so we enter our password to decrypt that private key and this now scans for all the announcements from our Ambra smart contract and you get a table here of all of the received transactions sent to this user so we're going to withdraw that guy here we specify what address we want to withdraw to of course you have to be careful here not to remove the benefits of privacy by putting in an address publicly linked to you and because this is a token here's where we utilize the gas-station networks to pay for that transaction that way you don't have to fund yourself address with either if we integrate unis WAP you could even pay for gas with a token and output your payment and any token that you want so here we're just going to keep that and die so we got paid and die we're going to output in duck well that processes will head over to either scan and see what a transaction looks like on the blockchain so this internal transaction section is where the payment was sent you can see we call the function on the contract we sent our ether and that happened six days ago so if we flip back to the transactions tab you can see the ether was sent out to some recieving address so that's the only time this address will ever be used to send and receive once and if we flip back our withdrawal was successful and if you look in meta mask to the address that we withdrew to you will see the died right there 16 died so that wraps up our demo we're looking forward to getting this on the main net at some point in the near future and thank you very great hackathon experience thank you so much team Umrah this is a really cool AK and with this we'll move on to our last demo for today and will done shooting to the Q&A section so please welcome tom from cover great thank you for having us so I'm just going to share my screen and with that we will kick off cool all right well thank you for having us we're here to present cover cover options we think it's a uni swamp inspired general-purpose options platform so when I say we movies we so last month Tom myself and Tom French I've been hacking on this project together we studied at university together and now we're both working or interested in the theorem so what we actually been doing for the last last month and what motivated us well it all started we think with the white Thursday on Black Thursday if you cast your minds back in the price of eath collapsed which caused many C DPS to be threatened with liquidation and so in response to this many CDP owners went out and they purchased died and they used this die to pay back the debt on their CD piece however this meant it was a surging demand for died and so the die skyrocketed as you can see here on this graph from coin Gekko the price shot up and that this meant the CDP owners I haven't a a premium to pay back their CD piece this is expensive so we wanted to try and tackle this problem and one way of factly this problem is protected put options or protective directions more broadly and the idea is that a user ahead of time buys the right to purchase die that's a pre agreed price and then in the future they can exercise this right so if a user is of the essential of a Black Thursday event they can go to our contracts which are also using a liquidity pool and they can say I want to buy in the future for one dollar to cents for example so it's a call option and then in the future if they need to exercise this because dye has maybe gone to one dollar 10 cents they can do this they can cash it in and they can take this dye and then pay back the CDP but why stop there so as we all know uni swap anybody is permissionless anybody can interact with it and add liquidity and what why why just stop with like a dye u.s. DC market why can't you go further and so we set about trying to think about ways to generalize this and try to build a system and the infrastructure which would allow you to open this up to any market and have anybody in the world be able to deploy any market they want and so we used the units for me to exchange quite heavily for this we used their price Oracle's to price our various the various pricing mechanisms that we use and this all came together and resulted in cover options eath dot link so now I'm gonna jump straight into our demo so cover options that you thought link this is the landing page the first page is where I mentioned briefly before that we use a liquidity pooled models of what this means is that options sellers deposit liquidity into a liquidity pool I've already gone ahead and done this you can see the total the quiddity in the pool and in return I get minted what got LP tokens you can see them here but what most people will be interested in in this demo is the buy option page so imagine a scenario where I'm a CDP owner I may be a bit cautious about what's going to happen to the dye price in the future well I can go to our dye to us DC market that's being deployed here and I can say in the future I want to buy I don't know 1500 died he's going to create an app the money option I wouldn't worry too much about the price at the moment and this is because we're on Rob stone and I'm going to want to exercise it sometime in the next two weeks it's going to quote me a price and I've already done the approval before this and I will click buy mess mask is going to pop up I'm just going to set this to fast and set that on its way cool so now a meta mask is interacting with our contracts and in this interaction now if I go to exercise options so this I've already been playing around this quite a bit so this is where I user gets to see all of the options that they've taken out they can see an option ID they can see the amount the option is for the asset the strike amount of the underlying asset they can see the start time the end time whether it's expired and as soon as this gets confirmed I will have another option appear at the end of this it'll have an ID of 11 and then any future time between these two periods I will be able to go back and exercise as and when I would want to so that's been confirmed so if I just switch back to the page to refresh and there you go there's option number 11 so it allows anybody to go into this platform and do this now something that we're really quite interested in and keen on is that the idea of year attacking so you notice on this page you can go and deploy whatever whatever market you want and so you can deploy interest-bearing tokens such as a die and various other fittings and we think this could lead to some quite interesting possibilities in the future so if I just flip back to our presentation so you can find us follow the QR code to our website options are really fascinating innovative exciting areas here and we've learned a lot by doing this in terms of next steps can broadly split it down to two liquidity support models have some flaws and vulnerable to some of the attacks and so we want to go through the incentive mechanism and iron some of those out and then number two we're quite keen to get user feedback and see what users are looking for from a platform like this cool sweeping cover it's been a pleasure to present and thank for your attention thank you so much Tom in every other team that presented today that's this concludes our the tenth demo and I know that was a lot to take in from our judges that was five back to back demos so what we'll do is we'll ask all of the teams to turn on their cameras and their mics and now we'll shoot into a Q&A session where our judges can ask you any questions or give their comments so maybe to see it everything of all I'll kick this off by asking Sergey why is it called Qi token yeah thanks for the question so the I would start with one-inch maybe first because so yeah you can maybe a remember how we start only th global hackathon with one inch and I was running in New York hackathon and pitching one inch one inch comes from one inch punch punch from Bruce Lee very efficient punch and we pitched that we do also very efficient things on the blockchain combined and everything in one single transaction and then to make this one inch punch you need G in Asian martial arts and the Chi is the power which we need to execute very efficient on a block chain is our Chi gas talkin and this is this the idea thanks that's incredible awesome well maybe I'll let some of our judges kick in and see any questions that they have for our project so feel free to send me yourself and go ahead and ask questions I have a question for all you markets I understand you have an escrow mechanism for the payments if the item has not shipped or doesn't arrive in good condition or something like that could you clarify how that escrow works and how it is resolved in the case of a dispute between buyer and seller so right now the order contract is created when the buyer makes a purchase so it will automatically put their payment in smart contract they can get a automatic refund if they cancel it before it's marked as accepted but once it's marked as accepted that gives the seller a chance to ship it and it's locked for a time period but then if it arrives and there's something wrong that's when the seller or the buyer can basically initiate a dispute and then the arbitrator steps in so typically with e-commerce the platform will take a clip off of every order even though most orders go fine with this the platform whatever marketplace are using would probably be that arbitrator if that's like XE or Amazon or Ebay or whatever and they would step in and they would settle it based on some pre agreed rules so you know in advance who you are traitor is and they just step in if there's something wrong so the arbitrator role is is one that anyone can participate or has some reputation mechanism around it I think the idea right now is that it's agreed on in advance for each individual order so if this is built underneath 100 different marketplaces each marketplace would automatically be the default arbitrator for orders coming in through there's we also have some thoughts about like community to find arbitrators with token holders voting but the typical experience that you would expect is if you bought something with eBay you raise a dispute with eBay and the difference would be they's not taking a cut when 90% of the time it goes fine and the buyer and seller just interact with each other they just step in when they need to yeah I actually think economically that's a better model because it basically means that if you're a seller that doesn't mean to I'm any disputes then you have to pay less fees which is kind of the right incentive to have in pretty much every way so I have a couple of a kind of technical questions for Umbra and I guess so first of all it's a great project and very happy that you actually went ahead and did this amazing kind of nice and clean job I mean I guess so first of all like and this is a fairly small points but like so you're requiring the kind of receiver to download an encrypted key file I'm is there any reason why not kind of switch to the technique loop ring is using which is basically by just kind of generating the key as a from a deterministic signature from from the primary key of a user so basically well what bring does is it has you're just kind of sign a string and then the hash of the signature of the string which which you can only get if you get if you me can make the signature which you can only which you can make if you have the private key is then used as your kind of sub key for the application so know that seems like it would just kind of improve UI because like forcing people to kind of keep on storing more key files I think every one of them has some one kind of loss of risk and then is the receiver just basically scanning through all scanning through all of the kind of Umbra transactions and just checking which ones have are actually going to the receiver so to answer your first question the reason we didn't implement it that way is because we didn't think of that so I think that's a great idea and would make a ton of sense and would simplify the process of you know not like you said not having to have another piece of key material to back up and protect so that's great idea and thank you for making us aware of it the second question the ants the short answer is yes they are having to do that we have some kind of quick and dirty engineering hack ideas on how to deal that would deal with that and make it more efficient and then of course like there's a much kind of broader question of it's kind of an open research question on how that could be made more efficient and we we have read your III search post about that issue and we're interested in exploring that in future versions of the protocol because obviously what we're doing now would not scale ideally you know but they're there I think ways to make it workable and one kind of more small pedantic points about your your specific approach for your specific approach the frigate when you generate the stealth address is it just basically send a private key x the receiver public key or is it something else so kind of more specific like basically can the same sending address I generate two distinct stealth addresses for the same receiver yes yeah sorry Matt go ahead you answer that one either way yes so it can so each time they do it send a new random number is generated for that spell vegard's okay no that's great no and this is the this is excellent I'm mind if looking forward to it being a kind of patched up and deployed and ready for me in that I mean I definitely no no I'll sign up for it pretty quickly yeah the the albergue project is a tip of the iceberg project like what you demoed on the page very difficult to demo and and you did a great job because it it's very difficult to demo something so technical that offers such great value behind the scenes and and it doesn't show so easily you did well thank you appreciate that I get and we kind of we do think it's kind of the tip of the iceberg like the we kind of think of ember as a protocol a very simple protocol that can be integrated across a lot of you know built into wallets even built into other applications and things like that to provide this system of self addresses so that it's almost invisible to the user but as a first pass the interface that we built just allows usage of the basic functionality the question for for cover actually I have first the comment so I just wanted to point out that you guys have a vulnerability which is based around swap composability and I'm just gonna paste this into into the chat here so you guys can take a look at it but essentially it has to do with sorry did someone say something no sorry that's just a green yeah this is really useful okay yeah so it just has to do with some kind of sandwich and the way that you're actually taking price data so I'm sure might be on your on your radar but take a look at that and then I guess what my other question is I noticed that you guys implemented American style options versus European style options and I'm just curious like what when is that design choice yeah so yeah that's a really good question like pricing in general in options is a very much a non-trivial thing quite a tricky thing to do yeah so American options versus European options so for one that you can expire the expiry can be whenever and for the other one it has to be by particular dates the particular route that we went down was using this black Scholes these kind of approximation because mostly because it was a hackathons I probably wanted something that we could get quite quick and get it as like a proof of concept and so we found an approximation to which is valid over certain constraints and so that was like a first printer spacer the whole implementation but going forward this is a should mention a technical thing this is something we want to spend quite a lot of time on thoroughly thinking about how you can better represent prices for when you want to expire in exercise whenever and there's various different ways around that you can look at things like binomial models there's all sorts of things but yeah this is something we need to spend quite a lot of time to really pin it down we want to do bench  as well there's some quite a few options providers out there and so we want to benchmark our work against all the things out there but yeah reports like this are fantastic and really helpful to help there's a hardened things up a bit and give out things a bit more so yeah thanks for that that's a really helpful I actually exercise a 1-over approach because they think it's like if the goal of the thing is to be insurance so I basically if the original system was supposed to give you a dollar but doesn't give you a dollar then your system should be just give them a dollar - what they go out and it should you should just give in to them as fast as possible so I mean I think it's fine now I have a comment for the Qi token the one-inch team I very much like how you wrapped all of your functionality and a modifier that is very easy to understand and use for a developer who doesn't really need to know any of the detail and makes it very simple to add the capability into their contract so that was very well thanks thanks a lot I want to say about the liquid b5 well I really think about that the running you're like liquidation but it is a kind of like hassle in one way in terms of basically making it a more easier and pulling the liquidity it's pretty pretty neat so I really like the stuff that you guys build especially with the Black Thursday one interesting kind of like an think that might be good to look is that how like let's say if you liquidate with flash loans is it more efficient than pulling the liquidity and and kind of like paying that for the liquidity providers or just basically taking a flash loan and and just like liquidating whatever you need to link with it then returning because if I remember dfi saver which lets you basically pre close your CDP before it gets liquidated and save the kind of like the liquidation discount you basically uh they're using flash loans and that was one one of the things that they're saved roughly like two million worth of worlds during the Black Thursday so like how do you think it will fit in this this kind of like a liquidation game it's for Rosco yeah so I guess we we've thought about this and there's a few things where we think we differ from using flash loans so first off is that you know giving other users access like giving regular defy users access to these yields and to participate in this um but also we've done a few tests that show that using using our contracts used a little bit less gas than using flash zones so that ends up of course helping helping for the profitability um and I have another point but I I forgot about it so basically those those are the two main points yeah yeah yeah so you guys have very good memes so like some good stuff Thanks yeah so I want to add one more thing to that you know the flip the thing is that in maked have you can't use the flash wounds and make it is one of the highest born liquidation bonus in the world the liquidation space so that's why the pool yeah are you sure like if you look at the oh yeah yeah actually in the actual decoration yeah yeah yeah yeah yeah yeah we don't yeah thanks I have a question for all the oh yeah team was that entire thing built during the hackathon yeah we actually started with a different idea and then realized that this was better so yeah we we just focused on product and design first the smart contracts probably came in in the last week because we wanted to make sure we were building what would actually be useful so there's a very intense last days also though not a very impressive amount work and I have to say from from my perspective that demo was the the slickest best designed demo I've seen today nice work Thanks so two questions one for the oil team in one fir cover um have you thought about the ability to sort of abstract away some of the user experience and potentially partner with some of the similar platforms like a shop of fire other traditional rails or shopping platforms have you thought that process through and similar question for cover have you thought about the composability of your own options and how they could ideally be integrated with other defy applications to create a super product I think for oh yeah I would just say I works for a little bit for an e-commerce company is there in-house developer so I'm a little familiar with how Shopify you can just like plug stuff in there but Vanessa you're working on like the seller survey it's like we'll find out what people are actually using yes and just to put things in context we actually sell books on Amazon you can see our books behind us okay so we are sellers and with the whole everything going on the cove in and everything going online it was meaningful to us to make a product that sellers would be able to cut fees because we know how expensive it is from a personal standpoint and we get all that information from a bunch of sellers that are answering our surveys I'm just one quick question for ya the protocol is kind of completely Unchained right there's no end of server component for oh yeah sorry I lost audio for a second yeah so it's the protocol like completely on chain or some server component yeah it's um it's on chain so the core stuff that we have right now is basically a controller that creates different borders according to rules the token piece there is basically it have a governance process for updating the controller okay yeah everything's pretty much on chain we're thinking about various ways to bring down gas cost by sending like yeah intent to purchase basically instead of immediately putting the payment in you send like a signed transaction off chain and the seller accepts it and then that actually was it in the current protocol I mean I'm guessing the buyer would put like the like shipping information just on chain encrypted with the senders key oh no the seller the shipping information be off chain sorry oh it's you okay yeah yeah like the settlement of the order and everything would be off the on chain part was shipping would be if you're using chain link for like automatic confirmation of delivery but that would just be like the tracking number I have a question for one inch chip I should a couple of questions so it's great to see that like there is there are improvements on the gasp token concept while it's let's say a bit controversial so the first one is can you please dive deeper into how you're making use of k2 since you said during the presentation that this was like one change compared to Gaston come true and specifically if it type in any way to achieve some like of you 5% in these optimizations you guys mentioned and the other question is if you think there is any further room for like optimizations in the algorithm so that we can achieve even greater savings potential thanks for the questions can I share the screen shortly maybe to show a connection okay so you can see so I mentioned here these two parts which we like robe ourself first of all we reduced the size of the address we were mining the address and it was cloud we paid like eight eight hundred bucks to compute this nice address so we have 14 zeros in front of instead of 12 so we were able to reduce the creation code here by one byte and we implemented also here a bunch of a bunch creation of the contract sub contracts and seat of half a normal loop and creating one after each other so optimal a shin he was around 0.7 percentage is based on our estimations and to compute the address of the subcontract in the burning process he destroyed child in this function the gt2 guys they wrote own really very complex function to work if they create one function not creature and they they spend a lot of gas to to compute this address and we reduce it by these few lines it makes everything simpler if you use create sure because you can compute back based on on the salt didi subcontract addresses so and it gave us like 4.3 percentages around that we being more efficient than gt2 and we we also fixed the back in here see 20 implementation on the burn process they didn't create the event and omit event it's for burning so if the scan didn't show the right balance of your wallet so we just used solidity we we saved with burning gas talked and on one-inch around $60,000 for users and maybe it's a nice opportunity for other projects to use that and also to burn gas talking I know it's a it's a hack for and um and maybe italic don't like that but it's there and you should use that it's possible can you can you maybe explain other questions which are three yeah I was just asking if you think there is any like if there is more room for improvements or if this 5% is like the best that can be achieved without too much complexity sure we started to work with assembly yeah and of course you can write everything with assembly and make it like remove the g20 overhead of Zeppelin you can just write everything in in a default function in solidity but it's like a lot of effort it will create more more room to save gas but not that a lot thanks amazing job Thanks just one last question really I just wanted to kind of find out I don't know hackathons are so great because you are kind of interacting with all kinds of different people and it's all very fast-paced I'm just kind of curious like what was the most fun part of it for everybody for from my side I can say I missed a lot this feeling to not sleep like 48 hours we did it in traditional manner and we developed everything in the last two three days and last two nights at you to get the feeling back from from the original a th global hackathons to travel around the globe and staying with the nice community nice people and develop a cool cool cool products I'd say we we with with liquid fire we had a lot of fun within the team just now creating means of everything posting it online and just now having having a lot of fun just the sides sides coding or they go twice yeah I guess some on my side I can't speak for van and he but I really loved working with a really design and product focused team so I spend a lot of my life just in code and it was a really really cool experience and definitely reflected and like how it all came together and also what we built yes it it made it very enriching to have like different backgrounds coming together and incorporating everything together because without Eve we wouldn't have this without John we wouldn't have what we have so we all incorporated something very special and we became closer to all of this - yeah and I guess for my perspective is like as a designer like sometimes we often come up with ideas that are crazy but without technical support or the input from seller like Anna did for the research we won't be able to really to pull something that is more practical so that is really helpful to have a diverse spectrum what did you think tom was the most fun thing we worked on I think like one thing that I really liked about this headphone is that so it seems like a lot of the projects have it's been timed perfectly with so many projects coming out with new versions we have like boomer we have Eunice were like like pea token before so yeah like just the ability to like get our hands on brand new tech and build something like run up against has been just perfect on my end I I obviously enjoyed learning new stuff like it never integrated with gas station network before for example so that was great but I actually think the most fun has been like the last week or so seeing the judging and all the other awesome hacks that have come out like there's just like probably at least a dozen projects that I want to play with and it's pretty cool amazing No thank you so much for answering that question and I think ending off and I know this is a perfect way for us to wrap this call I want to just share some closing remarks at the end but before all of that I want to point out that I think this is the first time on record that we actually found a security flaw in the middle of a demo so let that be stated for everybody on the livestream that this has been our first hey not only that it's just other than these 10 teams like we had so much fun not only reviewing but also seeing out every other demo if you go to hack daddy's Google Co you can check out a video demo for all hundred and eighteen projects that that submitted and let me just see what they did I get the very concise version you can check out their source code you get to check out the description of what they actually face challenges on and we learned so much as the if global making sure that we can make this our very first virtual event and improve this thing anywhere from understanding how do we pace things when we stretch from two days two to four weeks to uh to cases where for one of our judging a team that was presenting did not speak English we had to use live translation as part of the demo to make sure that we can us with QA so a lot of good lessons from our side and we can't wait to incorporate all of that to to make the next ones even better so with that I want to spend a few minutes on just thinking a handful of our people that made this event possible obviously the hackers you're the core piece of this event your work and the projects that you worked on is what made all this possible of course our our sponsors who were not only there to help the the developers integrate their SDKs but also just there to help them on anything technical or product related they hosted so many office hours workshops panels and they really behave like mentors you though we try to separate them as categories everybody was there for each other and that's what made it amazing and of course not only our six churches that are on this call we had 30 judges over the course of last last week who judged the under-19 projects individually and in every community member I was on our discord and the entire deflecting me that kind of got together on our disk or Twitter live streams and every panel talk to be hosted that I really kind of made this thing feel like a really tight-knit community and of course I want to just make sure I shout out to every single sponsor that made this possible and that's of a compound Eunice WAP theater and Foundation uma ENS chain link balancer SIA peak tokens open GSN pulled together Lourdes and Stark where you are are you were considered enough to take a chance on us making this a really cool defy hackathon which is also our first and we're so happy that you were also impressed and enjoyed this whole experience and lastly I want to make sure that I spend some time on this this is the youth global team that has put in an amazing amount of work for the entire duration of this hackathon we try to have a 24/7 coverage we had over close to 40 hours of content that we offer for our hackers and our team really went above and beyond in making sure that everybody was satisfied we we added a notion of a weekly check-in where we managed a team and every individual hacker on a one-by-one basis everybody had a direct go to from our side we ensured that anything that they have questions honor if they're stuck on anything or any blockers we can support them and really just coordinating everything with from our sponsors to our judges to our to our accuracy ensuring that the demo goes smoothly for these calls was all of the work that injured Heather Jacob Trent Emily Josh mamimi put in and I want to make sure that they they hear that from for me and also everybody else hears that these are the people that are beyond and the ones that made all this possible so a lot of learnings from our side and just so I can go back to my token conclusion this would not be any of global event if we don't announce what's next so in terms of an announcement with a non announcement we're gonna be planning to more online hackathons that'll happen over the next few months we're about to be releasing those details really soon so check out eath global co in sign up on our mailing list to be informed about it directly or follow the additive global twitter handle where you will get a notification once we announce our next events and of course one thing that we did announce last week was our new online event this is a conference and a hackathon we'll be doing for the course of the entire October this is our way of making sure that the spirit of building and contributing and talking about all the cool things happening in this ecosystem is not lost and we'll be hosting a lot of summits and we'll be doing a lotta developer related events so check out EVE Online org to find out more about it online for this October so with that I want to thank all of you for uh staying with us a little over time thanks to all of our judges are making as possible and to all 350 hackers and the hundreds of people who joined the YouTube Twitter and our zoom calls on the livestream I hope you have a great good afternoon evening and good night and we'll see you on for the next event 