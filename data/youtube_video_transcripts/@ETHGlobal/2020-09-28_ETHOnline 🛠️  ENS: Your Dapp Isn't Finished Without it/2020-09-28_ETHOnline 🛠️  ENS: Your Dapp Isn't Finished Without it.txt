great um thanks for joining everyone uh for this ens workshop we've got brantley milligan who's gonna run us through uh ens ethereum name service if you're not already familiar with it uh the talk is titled your dap isn't finished without it really great yeah thank you so much uh for having me here i'm gonna do a screen share oh did i do that right do i do the screen share rights yeah it looks like it's loading yeah just give it a second yep you see it now yeah it looks good it's working okay perfect okay so um my name is brantley milligan i work for an organization called true names limited which is a nonprofit based in singapore although i do not live in singapore none of the team actually lives in singapore and we are the de facto managers of the open source project ethereum name service so uh i i make this distinction it's just important like ens is an open source project nobody owns it like i don't work for ens although sometimes i'll say that um i work for an organization that like helps to develop this open source project there's our github there's our website you can learn a lot more about it from there our lead developer and the creator of it of course nick johnson i'm going to be talking about what is ens how ens works and how to integrate it that's the outline for today so enos of course is right it's the ethereum name service i'm i'm going to talk about what this means i'm actually gonna start with the second part first which is how is it a name service so the interesting thing about naming on the internet is that uh it's it's absolutely crucial everybody uses it all the time constantly um but it's like one of these things lower on the stack that you that just kind of works that you don't even have to think about so a lot of tech people actually don't even know really what they haven't even thought about like what is a naming service what does it do exactly um so a naming service a lot of people overcomplicate it it's really really simple it's just a lookup system that's all there's nothing else there's nothing else to it you know you provide a name it provides you with some information your computer then might do something with that information but that is separate from the naming service so why do we have naming services uh because identifiers that make sense to computers don't necessarily make sense to humans so for computers they can deal with long strings of numbers and letters and identify the you know the differences instantly they can auto-generate these things doesn't really matter which one you have or something like this uh from a social standpoint or as humans you know we deal with words and language and social context things like this so a naming service just bridges that gap so ens is a naming service just insofar as it has names it has owners of names or really you know p who is able to change the records of a given name and then records that can store any arbitrary information so if you have a name you can look it up and retrieve the records and then do something with that information so for example this is a very very common misconception some people think that like if i send some ether to brantley.eth for example that like somehow you're like telling ens to send the ether that ens like like sends your transaction along or something like that it's not all that it's not how it works at all the way it works is that let's say i'm in coinbase wallet i want to send ether to brantley.eath you type in that name coinbase wallet does a lookup in the background of what is the ethereum address that brantley.ether resolves to grabs that brings it back and then it sends the transaction on the network um this is why ens can store can like resolve to bitcoin addresses litecoin addresses it can have ipfs content any of these things a lot of times this confuses people say oh how can i send bitcoin to brently.edu well it's because it just means that the bitcoin address is stored in your records but the wallet is is what's sending it on the bitcoin network so enos doesn't do as much as people think it does um it's very simple so why is it the ethereum name service it is not because it's a naming service only for the ethereum ecosystem it's because it's a naming service built on ethereum so like the logic and the records are stored on the ethereum blockchain but it can store information relevant to anything the one way i like to think about it is let's say with normal dns servers maybe the server is running on linux or maybe it's running on um an amazon web services server you know or whatever it doesn't matter it can serve any info it can serve information to o2 of windows computer right it's just kind of where it's stored and in our case yes everything runs on ethereum but it can provide information to any client relevant to any blockchain or non-blockchain thing so why do we use ethereum so um if if if ens is kind of ultimately blockchain and even non-block like like blockchain agnostic or even agnostic even to what technology is providing information about we could be on any blockchain or even our own blockchain so why do we use ethereum because it's the best blockchain okay because it's the best one i mean really though we truly do think it's the best for naming why well because it has high security and high decentralization we don't have to like create that um the ecos it has tons of ecosystem infrastructure metamask and fury i mean all these all these wallets and all this stuff we don't have to like reinvent um it has standards like all all dot eth names are erc 721 which means that uh nft so that means dottie's names plug into all this this growing nft infrastructure we don't have to reinvent it programmability um and then interact with other smart contracts and ethereum this is this is truly revolutionary in my mind because ens is on ethereum it means that internet names are like smart contract objects that can interact with other smart contracts that have nothing to do with internet naming so you could be like when the chain link oracle says who wins the election it transfers this ens name from this dow to another dow or some i mean you know you could do something like that but only because we're on ethereum so we have all this composability with everything else so ens uses ethereum to serve the internet including and beyond the ethereum ecosystem and our goals make ens and therefore ethereum a basic piece of internet infrastructure used widely by people whether they are part of the blockchain community or not this is our goal as rick rick moore richard moore who runs uh who manages ethers.js is a popular library he said at last year's devcon um he said you know the possibilities like internet naming is such a huge thing that if ens was successful and if it was the only thing that was success the only dap that was successful in the ethereum ecosystem that alone would make the ethereum project extremely successful project it would make the ethereum blockchain a necessary piece of infrastructure for the whole world um even if enos was the only thing of course there's far more going on beyond ens um but this is how we view the the possible scope here we think is enormous and uh how are we doing we're doing this by complementing the dns tech stack in parallel expanding the capabilities of the existing dns name space i'll be talking about this more in a second focusing on cases not served by dns and in some cases not possible on dns um so some blockchain projects are like we want to replace dns or or take down the legacy community um that's not our that's the final approach that's not our approach we're all about uh we don't even think it's desirable to take down the current dns it's really important it works really well uh we want to work with that community build relationships and kind of and and and expand the usefulness we don't want we want to grow we don't want to destroy that's that's our strategy okay so how does dns work um we run no servers for ens proper so like yes our like website is on a server and a web server and like our manager user interface is on a web server although that also is on ipfs um but ens itself has no servers it runs entirely as a set of smart contracts on the ethereum blockchain which also means you don't need any permission to use this system you just um you can just start using if you have access to the ethereum blockchain um this is of course completely different to traditional dns uh but this is often confusing people say like oh how can we get access to your api or something or can we how do we integrate ens well you can just do it um because it's all public on there there are three main smart contracts that make up ens enos in fact you know we try to make enos actually as simple as possible to to reduce the complexity and to limit the attack surface um so the most important smart contract is the registry so it's just a single smart contract that holds what names exist what ethereum accounts own those names or have the right to change the records where you can the the resolver for each of those names which is really where do i find the records where do i find the smart contract that has the records for this name and then another a ttl which i won't talk about because we don't use but that is in there something in from the dns world so that's the main smart contract super important second resolver so resolver contract is a smart contract that stores and serves records um so so like uh like when you do a lookup you look at you have the name you look up the name oh and you find out where the records are and then you look up that smart contract and get the records the third important type of smart contract is as a registrar so this is like how names are given out so for dot eth names dot eth is owned by a smart contract that will give you a dot eth name if you meet certain criteria so in this case if you pay five dollars worth of ether you write you you know when it's not already taken you get for a year or something you know we put this logic in it um but this means that that's all done automatically this there's not like a company that's distributing this or managing your name again completely different from the dns world of course to make any change to ens whether it's to register a name or change a record or something like this you just have to submit the right set of ethereum transactions on the ethereum network but resolutions or lookups of course are uh free they don't cost anything because there's no state there's no change to the ethereum blockchain state you're just looking for information off the off the ethereum blockchain which of course you could even be doing on your own local nodes like i run an ethereum node on my laptop um i can set so metamask is working with that and if i'm like sending to brantley.ethe with metamask it's doing that look up on my own local machine so it's like i have all of ens on my local machine which is interesting so what do enos records look like so um the the fact that ens records or results you know resolver contract is separate from the registry contract we could have just put it all into one contract right one contract have the names the owners and the records but that would mean it'd be really hard to ever change what the records are like to add new record types and things like this so we separate these things out because now we can easily upgrade the result of the resolver contracts without having to touch the registry contract this also means that anybody can create their own resolver contract and have their name point to it so you have a custom resolver now we have a resolver contract that we call the public resolver which is has all the kind of standard ens record types and that like 99.9 percent people use uh but just know that you could have your own record types if you wanted to so this is what the public resolver this is the ens record set that we manage that pretty much everybody uses this is what it looks like so first we have an address uh record type and this just stores an ethereum address very simple it could be a a um external um externally owned account or it could be a contract address other addresses so this is just any other arbitrary cryptocurrency you can store you know any other arbitrary cryptocurrency address you have a content record which currently supports ipfs hashes swarm hashes and tor.net addresses then we have text records which can can support us any arbitrary information just like as a text data although we do have some kind of standard text record types we also support all traditional dns records although this is not currently available in our manager ui if you're looking for it but this is in the smart contract if you wanted to use it if you wanted to see like an example okay and what does this look like um go to app.ens.domains and just search for brantley.xyz and i have most of the record types used so you look um at a real name what it looks like what is the name space on ens so an important thing critical to understand about ens is that ens is not dot eth names ens has.eth names but ens is broader than dot east names so ens is a is a super set of dotty's names what i mean by that is ens is just like naming infrastructure that could ultimately ultimately support any names dottie's names are just like the native names that we started with but it can support any names um and we uh we want to expand the name space available on ens um we've decided we're not going to create any new um suffixes or top what are called tld's or topical domains like dot eth there's very good reasons for that mostly that we want to remain compatible with the traditional dns space if you make top level domains you could eventually have what's called a name collision with dns and that would like undo the whole point of having name systems um that would create problems for people we think that's actually somewhat irresponsible to just kind of wantonly create tons of like name collisions on the internet that's a whole other topic um the way we're explaining the namespace is we're actually just integrating the current dns namespace so what this means is if you own a name on dns you can then claim that same name on enf so i mentioned i had brain.xyz an example uh so dot xyz dns names work on ens so i got brantley.xyz on dns then we have a process you have to have that first then we have a process process by which you basically prove to ens that you own it on dns and now you have the same name on ens uh i think this is like powerful because you can go to brantley.xyz and i have a normal dns traditional website but then you can also send me dogecoin to brantley.xyz and it just it's all the same it all the same name it just works and it uses either ens or dns based on context right so if i'm in coinbase wallet it's gonna use the e s records to get the dogecoin address if i'm in like chrome it's gonna use dns for the website um but from a user's perspective it's just one name that does all these things so that's what i mean that we're complementing expanding the the usefulness of dns we're taking the dns name space and just like adding new features like oh now you can like receive cryptocurrency payments uh with the dns name you already own so this works now for a couple dns top-level domains we have listed here that xyz is the easiest one to do it with um in some ways but we're going to expand this to all dns topical domains so soon in two weeks roughly whenever we get it done um this should work for like com.org you know everything but soon so how does dns compare to dns um uh enos obviously has simpler infrastructure so rather than having servers we have smart contracts uh zero downtime you can't ddos attack it because you could be running your own local node it's like you could be not even connected to the internet and you could be resolving ens names if you have a ethereum full node on your on your computer of course it's decentralized and censorship resistant as built-in cryptography and individual ownership um like self-custody that doesn't exist on dns that doesn't even make sense uh which i think leads to better security and of course i've mentioned programmability and interactivity you know or composability with other ethereum smart contracts totally revolutionary um so why are these things useful why is this better um i'll mention by the way um like what's revolutionary about ens is now that oh i can send cryptocurrency payments to within the same i can't do that with dns because we actually could store cryptocurrency addresses in dns records there's no reason we couldn't do this and wallets could just be pinging dns for cryptocurrency addresses really what's revolutionary is that like we have better security self-custody censorship resistance composability that's really what's revolutionary but that those features maybe lend themselves to certain use cases that dns wouldn't be secure for so the fact that we have better security and censorship resistance means that it's much better to use ens for storing cryptocurrency addresses because there's better because you're dealing with money than to do that with dns which was never built to do that in the first place so and also ipfs websites because that complements the censorship resistance and then programmability and you know interactivity and composability on ethereum you can do things like name zone by smart contracts or groups or dows also you know uses non-fungible items again things that you cannot do with dns so how to integrate ens so okay so you think ens is interesting you want to use it in your dap so uh the goal to keep in mind is that every time a user might otherwise see like a cryptocurrency address or content hash or something they should instead see an e s name cryptocurrency currency address is great for software terrible user experience users don't even need to know that they have ethereum addresses i mean it's like how many people today just normal people on the street know that their phone has an ip address they don't even know what that means it's all hidden away with dns and in in their the software same thing for cryptocurrency addresses that should be the goal so specific examples so the number one use case kind of our bread and butter is cryptocurrency address forward resolution so forward resolution means that somebody provides a name and then your client or your dap looks it up and gets the cryptocurrency to a cryptocurrency address so what does this look like oh i want to send dogecoin to somebody um rather than pasting in their cryptocurrency address i put in you know ethereum.eth oh it got the address i get this is an ethereum address and then it sends sends that very very good much better user interface second use case ethereum address reverse resolution so if forward resolution is named to data or name to address reverse resolution is address to name so in this case let's say i log into adap and i log in with metamask so the dapp has my ethereum address they will often kind of show that as like my username or what what account i'm logged in with right this is bad ui what is that i don't know what that is i can't even see the whole the whole number right um what the what the adapt should do is look up uh you take that ad that theorem address look up do i have any ens name associated with it oh i do and then show the name instead much better you are so uh third use case kind of similar to this is uh uns names can be used as usernames for dapps so using your reverse resolution also dapps can maybe give every user a sub domain maybe they get your dap dot ether something give everyone a subdomain uh and set up reverse resolution for them and that's like what they see when they're logged into your dab another use case so this is entirely non-blockchain ipfs swarm tour.onion uh resolution i mentioned this earlier so let's say you're in metamask mobile metamask mobile supports this you know i type in yourdap.eth and it brings up the ipfs website there you go um this also works in um normal browsers like chrome on desktop if you have metamask this also works in opera on android brave on desktop uh this is all listed on our website all the places where we are supported browsers let's say though you or your friend is like a total normie and doesn't have metamask they don't know what break you know they're not using brave they're not up with it how can they access ens and ipfs websites uh well we have this thing called if dns which is a dns bridge to ens and ipfs basically you just add dot link to the end of your dot e's name and now it just works like magic in any normal browser um it's like you can try this if you go to like almighty dot link it'll bring up bring itself up just like a normal website and that's actually a directory of ipfs enos website so you can see what people are are doing in that new decentralized web i mentioned we we support tor.net address resolution so this works if you have the tor browser it only works in the tor browser but it's which is firefox based if you have the tor browser and you have metamask enabled if you type in duckduckgotor.ethan you actually have to put a slash to the end of it if you do that it will resolve um to the duckduckgo tour uh toward an onion version hidden services i set this up so other people can also you can take uh toward any addresses and you put that in a content record then it will work the same way this actually solves in our opinion the tor dot onion naming problem if you're in that world you're aware of it if you're not you can look it up but we think we solve this problem uh dns records so you know we're mostly focused on doing things that dns can't do rather than just replicating what dns already does so this is not like a main focus of us right now but we do support dns records in fact we actually have a project in the from the dns world that's doing some really innovative stuff so the owners of dot cred they've had this really close integration between ens and dns so if you register a dot cred name on dns they automatically give you the same cred name on ens they do it for you then this is really interesting they have the ownership of the dns.cred name follow the ownership of the ens version of it so you can actually trade around the ens version of it and whoever owns that is able to control the dns version of it so like if you've ever tried to transfer a dns name before you know it's like a pain this is way easier just transferring an ens you know name token it's just it's like setting a cryptocurrency payment it's done so that's really revolutionary then also they store dna all dns records on ens and ipfs and that's the canonical version um which is also revolutionary and then the last thing is just everything we haven't thought of so like you have custom records you have custom text records lots of projects are making are using ens for things we haven't thought of like umbra uh and other other projects so any anytime you have some information that's not user friendly store in ens and it solves that problem that is the end of my presentation thank you very much so does anybody have any questions if there were questions where would i see it be in the chat i'm just scanning it now oh here we go 70 of other platforms are just subtraction yes i don't know what that means that's just the offhand comment yep true but often oh rick moo yeah i like rick moo too okay is it's possible to do this in a programmatically way inside a smart contract amazing okay i guess yeah everything with enos can be programmed with smart contracts because it's on ethereum don't forget gas cost yes gas costs are a problem so we're on ethereum which means that even if like oh d5 is going crazy making gas costs a lot uh it makes ens things cost a lot so there's a problem although gas is a little kind of cheap right now so if you want to do enos things this would be the time to do it we're looking into layer two stuff though to try to make that cheaper great any recommendations for um you know an easy way to approach integrating ens what would you recommend for hackathon like online yeah i mean if you ever have a time a place in your dap where somebody is like going to be pasting in an ethereum address or bitcoin address or whatever just how like they can do that but also make it so they could put in an e s name if they wanted to as well that's super simple and and if you go to our docs docs dot uns dot domains we have a library section where like in all the top libraries is there's like a single line of code boom now it works it's not hard to do and we have a prize we have a prize so we're actually giving 150 worth of eath to the top five projects to integrate e s now that might not seem like a huge amount but the way we think about it is whatever else oh name of this was your dap isn't finished without ens whatever else you're doing just add ens into it to make for a better uh user interface and then you can also get our prize in addition to whatever other prizes you're going for i'm in ha ha perfect timeline for layer two no because we haven't figured out what we want to do there um so we're active i mean we're actively looking into it any layer two chains that we roasted no there's nothing available right now unfortunately that is unfortunate how about transferability for subdomains so subdomains work just like normal names like if i owned britain.eth i could create trent dot brantly.ethan i could give that to trent now trent controls that and he can have normal records just like any other name um and so uh any examples of how okay can this can this be turtles all the way down like can you just have like unlimited number of sub domains subdomains on subdomains i think so uh i don't know if there's a limit i don't know there might not be a limit i don't want to say that there's not but because people usually don't go more than maybe three deep just in general because it just starts to get unwieldy like if i had brantley.callaway.milligan.person.america.eth or something it ends up not being useful anymore you know which is like the whole point of a naming system but i think yeah okay i i think you can go as deep as you want but i'm not 100 cert let's try yeah carlos beza just see how far you can go man and let let us know what the answer is there's probably a limit on like there's a limit on how much storage right can be put into a contract so maybe you you bump up against like the contract size limit for like how much data can be put into an nft correct i mean ethereum has fight 32 yeah there you go i'm sorry i didn't know that but like i said it doesn't practically come up because people don't usually go more than 3d shouldn't you shouldn't be hitting this if you're doing it right can owner of topple domain control the subdomains yes okay so ens works with the smart contracts works hierarchically like dns insofar as if you own a name higher up in the pyramid you are able to control everything lower on the pyramid so like if i bring.eth have i control that i can can i can transfer ownership or take over control of any sub domain at any time so if i created trent dot brantly.eath i gave that to trent i can take that away from them because i controlled brantley.east now a way to get around this is i could transfer brantley.edu to a to a contract that now nobody owns brantley.ethan maybe it automatically issues subdomains to people um so right because you can have names that nobody can controls because let's say they're owned by a contract and that way people could have sub domains and know that nobody can take it away because this the smart contract doesn't allow that in fact if you go to uh we haven't really maintained it a huge amount but if you go to now.ens.domains um p you can instantly get subdomains off of names that people put on there like maybe for a very small price and in fact this is ultimately how like dot e itself works so we could own dot eth but dot eth has a registrar in so far as it just has a smart contract that that um controls giving out subdomains of eth so like brantly.east is a subdomain of eth but nobody can do that because a smart contract controls it okay correct me if i'm wrong but do you not have a gsn relay or style contract call for registering do you i guess i'm not sure exactly what that means exactly asking about a relayer gas station network uh we don't but we've talked to opengsn about possibly doing something with them that might be a hackathon idea yeah because gsn is a sponsor of the event i'll say there is a huge amount that we could be doing with ens and it's just we just have to do it i mean there's like it's not like oh we've reached the pinnacle at all great any other questions can a domain have one can a domain have more than one controller good question so uh for those who don't understand this question every second level of domain so that's like brently.eth what we would consider like a normal domain has what's called a registrant and then it separately has something called a controller this can be a little bit confusing but it's actually really useful so the registrant is the ethereum account that basically ultimately owns a name and what basically what it can do is it can set what the controller is and then the controller whoever's the controller can set the records of the name now why would you want this well because maybe i want to maintain ownership of the name but like i want to let trent set my records for temporarily but then i want to be able to take back that power right or like uh there's a website fleeq where it will do things like automatically update the content record when you do a new ipfs deployment you can do that by letting making it the controller but you still control the ownership of the name the registrant meaning you can always take them away as being the controller so that's actually really really useful so that distinction is helpful however if you are the controller you can change any record you we don't have like record specific controllers but it is in our backlog to add that feature at some point so that if you want to say hey fleek i want to give you the power to basically change my content record whenever i do an ipfs update or something like this but i don't want you to be able to change my bitcoin address or something like that um so we'd like to do that in the future but right now there's just one controller and it controls everything any ideas that you would like to see um yeah i mean the the ability to pay like in other ethereum based tokens would be really great like using maybe opengsn or something like this that would be really great for a manager um we are expanding our address and coding library all the time if you know what that is so so we store all cryptocurrency addresses in binary um on chain to save space uh which means that if you want a cryptocurrency address to be supported in a wallet or something like this we have a encoding library that decodes from binary um so although we support all arbitrary cryptocurrency addresses in principle in practice we wallets end up only supporting what's in our encoding library our coding library has like 30 cryptocurrencies like all the top ones he wants but we'd like to massively expand that to like a hundred like all the top hundred so people can always expand that um gotta run thanks brantley rock hey oh that was heather oh okay i was like okay she has to say nice things about me but i thought that was like a another person [Music] yes integrating an answer project you'd be saying not to yes you should listen to heather i think one of the questions from youtube that maybe got passed over uh was any examples of how we can integrate it into our dap maybe a better way to frame that is where can people go to see good examples or specific code that you think is a good representation of integration yes if you go to ens.domains our home page and scroll down we have an ens ecosystem section i think we have like 160 different uh projects that have integrated ens in different ways so you just you know start looking at them and see what they've done i mean they've done different things so there's tons of projects using ans that's you if you want to see examples if you go to our docs docs dot ens dot domains like i said it shows how using libraries to integrate very easily and like i said in the presentation the easiest way to do it is if somebody has to input a cryptocurrency address make it so that they could input an ens name and you just go grab the cryptocurrency address and again with a library that's very easy to do that's super simple the other super simple thing is if they are logging in to your dap you know like with a meta mask or wallets and you're going to be displaying their ethereum address like as their username do a reverse lookup and display their ens name instead again super simple much better ui i figured out enos with swarm okay there you go cool anything else let me check for some last minute comments on youtube i think i think uh that might be it unless anybody wants to share anything unneed themselves but i think we may have touched on all the questions people have awesome carl thanks guys love you so much wonderful so oh and the last thing i'll say is whether you're in a hackathon or not if you add ens into your dap in any way okay let us know we'll put your logo and link on our website and then also if you like tweet out hey my dap now has ens and maybe a screenshot of how it's been used or something like this tag us and we'll retweet you like um and people often get a lot of attention when they do it because people are like oh great you know people like e and s they like when people adding an s like i said it's it's an easy win because it's not hard to integrate for sure people underestimate the small things that add up for making uh user experience a little bit better exactly all right i think we could wrap there thank you brantley for once again sharing at an east global event uh unfortunately remotely one day we'll get back to in person yes but for now we're online we are ethonline uh thanks everybody for showing up listening giving your questions um one oh there's another question in the chat here i have a vns that the dev does something wrong and causes the name to resolve to a wrong address any thoughts on that yeah i mean um if the code is set up correctly and it's very simple code it should work every single time it should never never make a mistake however i would i would say i recommend it from a ui standpoint i show this in my presentation like if i'm supposed to send ether to somebody and i type in britain.eth it's nice if you retrieve the the ethereum address and maybe put it in small font under like the name so a person can like just verify it if they want that's a way to kind of go against that problem but ultimately um i mean like i said it's very simple code if it's working at all it'll work every single time i'm i'm not aware of any cases in which this problem happened but we'll see cool i think that covers everything my last uh logistics stuff to cover is if you haven't staked and you've been accepted please do that today tomorrow before the kickoff on friday um if you're trying to get teammates to join who haven't joined already please do that as soon as possible so we can you know get them on board it get them settled in the discord uh the sooner that happens the better we'll be or your team's chances um [Music] what else the kickoff on friday we're going to be sending out the invite for that but you're definitely going to want to come to it it'll have it's part of a larger set of summits which are themselves underneath the ethonline umbrella so each online is not just a hackathon it's also a weekly series of summits like i mentioned and each week has a different theme so this friday if you were in the brainstorm session a few hours ago mariano conti is going to be giving a talk um i believe it's intro to d5 and a whole bunch of other talks from various people around the space and then next week another summit and a summit each week on friday in october so you can hack you can go to these summits and if if you you need your ethereum fix this is the the event to get it at so you can register for that separately from the hackathon um yeah i think that's all the logistics stuff i had to cover we look forward to the tutorials uh sorry workshops tomorrow um rsvp to those if you haven't already we've got another full day tomorrow uh wednesday and thursday so it's gonna be pretty full but thank you again for everybody coming out and brantley as always thank you for teaching us about ens thank you i love eat global events appreciate everybody 