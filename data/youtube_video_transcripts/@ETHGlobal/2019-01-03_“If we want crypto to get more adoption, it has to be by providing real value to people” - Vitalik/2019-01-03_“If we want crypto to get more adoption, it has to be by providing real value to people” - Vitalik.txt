so dr. vucelich thank you for joining us Oh proposing we don't get the joke he just got his honorary degree last week and now he's a doctor we're super excited to welcome all of you here thank you so much for being in this room it's amazing to see a massive crowd of developers excited to be hacking on a weekend and especially here on a Friday night I don't wanna I think we kind of already went over the numbers but there's people from about 30 countries that are represented here and they kind of flew in for for this weekend and we're super excited to to host all of you so I kind of wanted to focus a lot of this chat on just kind of having a conversation around anything from how the dream project is evolved to where we are now which is at this hackathon and how we can make this a conversation around what is exciting to build so I'll kind of start off by just asking you are the chief scientists achieve scientists at the etherium project right now what does your day usually look like and sort of what are the things you focus on let's see so this morning I purchased participated in a couple of github discussions over on the etherium serenity spec which is what we're doing the spec that's describing currently the intended proof of stake protocol and then also parts of the sharding spec yesterday I worked on that blog post where I described in my own words what I thought what I think c.b.c Casper is and like how it works I also wrote a poster describing a layer to a scale a scalability thing that makes crushed our transactions go faster in days before and it's sometimes researching a lot of just keeping up with what other people are thinking and reading a lot of just talking to different community members and of helping different projects and port and you know efforts like plasma and so forth out so it's like some of everything it's awesome so kind of from your experience for the way you work what is the lifecycle of the work you do from the research side making to the application side and Kanna at what point do you kind of consider that as a hand off versus things you're involved with to the full-on development it it does kind of handoff at different stages so there are times when I would come up with an idea and like first of all sometimes there's either a bucket the idea where there's a better idea so I get it kind of stops and gets trapped there then after that the next step is if people like it then either someone and if likes it enough that they just take the idea and start start off and go on a path developing it themselves so with like for example Minimum Viable plasma and like plasma cash and plasma prime like there's already teams of developers that want to do plasma so as soon as they see a better way to do plasma they just go ahead and do it sometime for layer one stuff I do needs to be and if more actively involve going later into the pipeline because that's not just like all your money is really important and it's not just a matter of kind of the basic ideas we also wants to make sure the spec is and if maximally clean and simple and make sure this back does everything that we want and generally there's like a lot of who sends that it's important to try to tie up as well as possible and look for one point oh we have this side of parallel track approach where a lot of teams have already started developing clients and they are and if keeping up with the changes to this back at this point though at some point fairly soon well the development on the spec itself will kind of slow down a lot and it'll mostly be development another kind of later stage part of the pipeline that's also important to remember is just people often have questions and it's good to answer people's questions no it's wonderful and it kind of set up the stage for all the 10 things I had on my list to ask but before I get to those what I want to talk to you or ask you is DEFCON 4 just happened about a month ago is that their developer annual conference what were some of your takeaways from being at the event and kind of seeing about 3,000 people attend and talk about it be excited about it there yeah so one of the things that and we were definitely kind of trying to do as a deliberate strategy and I'm very happy that at least I think it's been going very successful so far is to try to kind of make bridges between the etherium community and other community is you know both inside crypto and outside that we feel share similar values you know so this cash being one yeah like a rosy cash like we came to their conference in Montreal a few months ago they came to our conference they presented at Def Con last year about a bunch of zero-knowledge stuff they presented about Def Con this year but even more zero-knowledge stuff Zuko gave a really nice talk about privacy it's then you know there's also all these all of the other crypto communities that show up and I saw the Bitcoin cash people and they expressed and of how how how much they kind of like the etherium community and how they appreciate its general friendliness outside the crypto space in going while from a radical markets Stewart branch from the the long now foundation you know cory doctorow and then there's a kind of list that goes on and on and so i think we like it's definitely good to see all of that attention from the outside both because people outside the um the crypto space and of caring about what we're doing is a useful form of validation like it makes sure that you know we are building something that at least these other people also consider to be actually useful it's and having a kind of two-way communication between them also ensures that you know they know and in what's going on on our side and we can tell them about what the technology is and give them some of the ideas of so they can figure out what to do with it and we learn from them what kinds of thing problems their work they're working on what kind of challenges could actually be affected by this and that have resolved by the technology which is also a really nice because it helps us to kind of continue this year where the worthy emphasis so I think that's like those kind of relationships are very valuable and it's something that I feel like we've been definitely doing a fairly well so far and we should strive to do even better going forward I absolutely agree and that's wonderfully put and it's the same reason events like these also end up becoming those test grounds where people can experiment and prototype things over the weekend and that sets up a lot of these permutations and evolve into products or problems that people I mean solutions work yes yeah you know one thing they've been starting to and I've forced myself to care more about lately is to try to push eat look beyond kind of sticking things on a blotch in for the sake of sticking things on a blockchain because I feel like that's what a lot of the earlier crypto projects were but at this point you know it's fairly clear that if we want crypto to get more adoption at this points that it has to get adoption buying and providing real value to people and so on and so forth and for that happen we have to kind of under be more explicit and clear and your stands better know what is the specific value that the technology provides do you think in this case the only possible path here is we know that we have these certain primitives that exists in industry Central Java Script or just even for aetherium and we have to figure out what the best solution could be or is it still necessarily us figuring out it could be the people that already are in the communities that care about whatever the specific problems are that figure it out but know if we educate them and then let them educate us then the opportunity that will actually figure it out so I mean have increases got it I think we're having some my troubles with solved you know so earlier today you were on a panel about scalability and just sort of the attempts in layer one and layer two what I want to kind of talk at a high level is yes we know that things need to be faster for us you kind of look into comparable applications that we already used to now and all there's a lot of efforts being worked on but often times we miss to highlight what the trade-offs are with the complexities that get introduced as a result of working on these things what are some of your thoughts on kind of what these trade-offs are complexities end up being that we don't often talk about yeah I think first of all it's important to remember that the technology as of today is still fairly immature and there's a lot of little kinks that don't theoretically need to exist but as a matter of fact today do exist so things like you know no it's not perfectly syncing in some and sometimes falling off the network for a couple of minutes or you know like nodes not fully connecting various away things like transactions seeking like three minutes to get included in the chain because of bad gas price estimation you know Oh huge portion of the network being on in fura instead of like some more decentralized solution and you know there is this and if longer and longer list and like especially as someone who works spends more time on the theoretical side like on the theoretical side there's no real reason why these hurdles need to exist and like theoretically if you just sort of throw more resources at the problem it seems like that it's a lot we can make a lot of those issues go away but the fact is we haven't yet thrown the resources at the problem or we've only started in the end in any case the issues haven't yet gone away and that's something that's important to recognize absolutely do you think it's I mean it's not even abundant good or bad but how do you think about parallel implementations of the problems that we know we need to fix and then kind of hopping back and forth or just kind of how does that change the developer experience when you have so many options that are all in work in progress stage and and then now developers have to choose or pick and think about how to evolve as the protocol is also evolving yeah it's definitely a challenge at this point I mean one of the issues with building applications that depend on bug especially more either layer to Azure frameworks or kind of anything other than the base chain the those are kind of extra dependencies that you have to worry about those often have their own user experience issues and then any one of them could just end up becoming a not maintained project later so that's Nick it definitely does kind of add to compounding the problem but on the other hand when someone builds something that's like genuinely reliable and useful and valuable then that's something that can really reduce complexity so I think in the one thing that's kind of annoying in the short term is that a lot of application teams are starting to move from look we're purely or one to assembly or two for scalability and on the one hand the scalability gains are real but on the other hands like etherium is really nice because you just programming applications on it is relatively speaking quite simple you know you figure you write the piece of code dump the piece of code on chain and the piece of code does what it's supposed to do whereas if you're building a SD channel application at least at this point you have to personally worry about oh when the channels get open when the channels get closed well how do we actually write the code to implement this weird logic how do we do meta channels how do we do Slovak swaps between them if we make a plasma thing then what does the exit game look like and like blah blah blah blah blah and like in the long term you know you're not going to get applications if in order to get a useful application you have to both be an expert at whatever your application actually is and be an expert in making you know we are encrypted we cannot declare two things and so like there's definitely a goal of trying to create enough fairly generalizable layer to kind of plug-and-play frameworks that people could just like run in here some that adapts to their application fairly quickly and you know there's been a lot of good work on trying to make that happen for state channel projects I know you know there's been increasing and kind of faster work on the kind of plasma test networks so I'm sorry I guess like there's a site of taps that talk about usability from the the end consumer standpoint but there's a UX improvement the developers side and just kind of tracking that to make it easy for developers to go and there is yeah and I think yeah developer experience and user experience are both important like the two issues are not always fully separate because part of developer experience is a developer's experience in creating an acceptable user experience yeah so kind of coming back to this hackathon and just sort of themes in terms of things we can focus on near-term when we're talking about this chat before we kind of made a list of possible things we could possibly focus on and kind of bring some ideas about so I generally just took down a lot of notes and essentially what I want to do is kind of get your thoughts on anywhere from if you were to do something in this category what is something that makes sense and what are some of your wishlist items so some practical things are basically applications of cryptic anomic s-- sure so one kind of category of thing I care about that I have kind of talked and posted about a couple of times but I think has it been discussed enough is the use of crypto economics for anti-spam and things like chat in social applications so like basically the like what one very simple kind of archetype of this that I came up with recently is what I call a proof of State conditional hash cash so the original version of hash cash right basically said that it's like an anti spam measure where in order to send an email that someone will see your computer has to do a bunch of work and then yeah the proof of work gets attached with an email and if the proof of work say cost you five cents to make them that's kind of a cost of five cents of sending an email the way proof of stake additional Hashcash works is that instead of burning the five or the five cents through proof of work you would along with your message publish a kind of pointer to a on chain deposit which could be bigger say could be 50 cents and then only if the recipient considers that message to be spam they can press a button to basically burn the money and so that way for spammers it's like as expensive or even more expensive than the proof that proof before cash cash but for regular users it's free right so the jiung and then you can expand this to things that are kind of more than to parties so you can think of for example like social media platforms where people can create an account with a deposit and then someone has the ability to but basically if your account gets bans and then the deposit ends up getting burned and things like that and the reason why I care about things like that yes I think as we've you know figured out of over the last decade or so problems around spam trolling you know like that whole category of things blah blah blah on Internet applications are very real and it seems like a lot a lot of the mainstream world is moving toward just requiring identity as a way of solving these problems which solves the problems but on the other hand has some very kind of dark consequences in other ways and crypto economics is like basically an alternative that kind of solves the the anti-spam problem and makes spam expensive but at the same time is first of all much more protective of privacy second of all any identity system is going to have a very hard time being usable by more by everyone in the world and so it becomes much more accessible third you know it just becomes Nick Moore for him well that's more friendly to people who really care about protecting their privacy and it's ah it's also just another way of making accounts easier to get I mean also just relying on you know things like phone numbers for everything is just a huge security hole when there's a bunch of reasons so something in that general space I think would be interesting as he explored more I hope everybody's taking notes because these are excellent I kept on ideas you know you kind of mention identity here alternate emerged I wouldn't to categories just be just identity as a problem in this space as well as sort of 0 all these proofs and zq Starks missed arcs that are coming about how do we kind of can be practically users of those technologies or primitives yeah so I mean I would also just kind of expand from identity to luck reputation more generally and because that's the importance of of identity not just as like a thing that gets assigned by a central authority but more generally just the idea that people you interact with can be more inclined to trust you if you know that you have some history of interactions with other people that seem to have gone well right and that's something that's useful as a as a primitive in a bunch of ways so like one simple example of this is you can make things like liking networks work more effectively with you just without kind of fairly complex you know multi-channel liking structures by basically saying like will use more trust a sense to be B sense the CC sense the DD sense that year but then for each link you you would only send smaller amounts at a time and you would go up to bigger amounts when you know you've you know that's the whoever the person is that you're interacting with has some higher reputation and you can kind of automate these protocols you can automate them in ways that impose kind of mathematical balance on how much money you lose you can use zero knowledge proof stew do these protocol to do a lot of these protocols in a way that preserves privacy better so like one of the problem like there's kind of two contradictory goals here right where one is that you wants to maintain some kind of reputation so that you can become more trusted as a result of long-running behavior and then being truck having the ability to trust makes in a future interaction so more efficient but then on the other hand you don't want literally everyone to see that all of these activities can be traced to each other so you can do weird fancies your knowledge group stuff to create reputation systems where you can come up with some kind of score that says this person is trustworthy and you know no one has had bad things about them before and people have said good things about them without actually kind of linking people's behavior to each other so sort of a slight quick question if somebody wants to work on a reputation project here what is or what are some resources they can look at that kind of help you understand how to bootstrap a network sure essentially I would recommend I mean first of all a couple like different kinds of trust metrics so the I think advocaat OA trust metric is like one keyword thing that you can look there's another category of thing is like I know proof of unique identity so there if there's something called I think pseudonym party that's trying to do that a third thing is also just your understanding 0ml which is subgroups in ZK Starks themselves because that's what you need for privacy preservation and for that I mean there is like a bunch of theoretical materials on what Zeki Starks are and I wrote some of them but then there's also the actual libraries you know lips dark and then Socrates and like the different toolkits you can also look at the source code of existing applications that use the key snark so for example you can look at some of Barry White had stuff around you know roll-ups and yeah other applications like generally if you want to build something like starting from something that already exists in any kind of editing lines of code is definitely a good way to do it a lot of the time that's awesome so we kind of covered reputation identity and snarks in there one other interesting category I think is just the kind of the emergence of serverless applications and mixing that with blockchains how do you kind of see that how to describe that and what are some of the applications you see yeah so like the most recent one I think in this category is Yunus whap rate so basically it decentralized exchanges have historically had like terrible user experience because if you wanted to invert from A to B you have to convert your east to west and then do some other thing then put up an order and then the order book depends on we're on now logs and so the order book takes two minutes to load and then you click on some other order and then oh by the way you forgot to load a bunch of logs and you collect on an order that's a day and like 20 percent of price movement out of date forgot to unwrap these yeah yeah right then you get you take the other you you got your other token then your other token you you have to watch you know move it out of the exchange and then you withdraw it again and like the whole things over complicated and also of these decentralized exchanges dependend append on like centralized servers to manage the order book which is annoying because well for various reasons those centralized service can disappear those centralized servers could get attacked and which of things can happen and the unit swap is this like really nice and interesting design which basically is entirely on chain does not have a kind of order book instead you basically are kind of buying and selling against the liquidity pool and it depends on just like basically arbitrage to keep prices in a in line with the actual market price and you the user experience is basically you take coin a you send it in and you're just immediately literally within the same transaction get coin be out and that's it and it's like it's literally more usable than even the centralized exchanges and it is decentralized and it does not depend on servers whatsoever so basically I think we can well expect to see a kind of more applications that's start following this kind of pattern because they're like just the ability to kind of create an application and just fire and forget it and run it you know with kind of zero infrastructure I think at least Tamiya was always a big part of the original web 3 vision and it's good to see it actually and it becoming more and more possible from a protocol standpoint to make a lot of those kind of standalone service applications happen what should we prioritize I think scalability is important but also in the shorter term it's important to remember that there are decentralized protocols other than ethereum blockchain itself that are necessary for this so probably the top two are decentralized message-passing and decentralized appear to be data storage so basically you know what whisper and swarm are kind of filling in the original vision and then more recently there's been other protocols and then there are some people building on ipfs and so on and so forth so trying to kind of build up those layers and make sure those layers are more robust so that for example it's not just the smart contract code they can just live in the decentralized cloud it's also the user interface for the application that you can just push into the decentralized cloud and also just fire and forget and be fairly confident that it'll be still floating around somewhere the users can access five years from now no that's awesome so this is it's a very interesting thing which is we kind of talked about some of the applications from a short-term which is kind of things we can prototype this weekend to upcoming upcoming months and this is kind of like a wish list for you and the theorem foundation is softballs as grants program where people can apply to get a grant for the project that they're working on and there's a lot of things that the foundation and just the ecosystem has a list for things that they need anywhere from documentation to implementations in other languages for clients for lis PGP or stay to layer two and and stage complementation is to applause McLuhan tations usually the wish list comes from a handful of people on the foundation side for the long term what is your personal wish list if like crazy or really ambitious things that you would like to see I've done on either a theorem or just watching it's in general so I guess like closer to the base layer I mean there's obviously the base layer itself and then there's whisper and swarm and kind of whisper and swarm like things being and have developed up to their full potential like I wants to be able to use the decentralized cloud to back up my hard drive and that wants to be able to just like fire it and know that if I just have you know the address and the password in five years I'll be able to download it again I say him also like for the infrastructure needed for all of these your knowledge proof based applications to be just very easy to build and deploy and that includes you know snark Starks programming languages and August awkward teas and like all of these related things on the kind of moving a bit up the stack II kind of richer and more diverse ecosystem of Oracle's for provide for providing data and like both centralized Oracle's and kind of address file decentralized Oracle's and I'm definitely looking forward to seeing how that augur market on Groupon the election in November ends up resolving I think that'll be a really interesting kind of test of a decentralized Oracle's ability to be saying going even further up I mean just ooh another one I care about is also a wallet security so again I talk about this basically every time but like coming up with but smart contracts or secret cheering or whatever some mechanisms so that users can be sure that if their computer or phone or password or whatever gets lost or stolen they don't lose all their money and along with their identity and like their estate and every application they care about you so that's something where it's like we know what a multi C quality is and we know what secret cheering is so from a cryptography point of view it's not not the hardest problem but from a kind of user experience design problem and coming up with like what specific instantiation of these components as maximally grandma friendly I think is definitely an important challenge for people to think about it and I've tried to come up with some more solutions for I hope you're still taking notes so the next kind of a few minutes I want to spend doing a segment that we did before even a vsf and which you kind of stole from Tom Cohen and the section is called the segments call underrated or overrated I'm gonna name name one topic and you have to say is underrated or overrated and then a one-line comments on why so we'll start off with a ZK snarks um I would say still hmm still slightly underrated like I don't like to music like tomini general-purpose there were no its proofs are like literally on par with watch hands in terms of kind of the power of that and transformative this with the technology it's like the ability to just have privacy and correctness of execution at the same time it's just something that cannot be understated that's fair what about formal verification I would say at this point around probably about correctly rated in terms of like people talking it's not binary metallic okay yeah sorry the place the one formal verification related thing that still underrated it's just making it easier for developers writing contracts to firmly verify them like I wants to be able to you know add claims on top of a solidity and viper or viper contract to just have them be checked automatically and so far formal verification just seems to be this racket where like the small number of people can earn two hundred and fifty thousand dollars in the course of eight weeks and like that's terrible and should change that was a good one how stable coins i am at this point hmm i would say the the feedback for I kind of backed out that variety of stable coins still slightly underrated and the maker like me cartel style category mm-hmm probably him I know it's I I want to do the cop out and say correctly rated at this point because I feel like it is like it's not it's not a really good job of like surviving a ninety four person I knew three percent whatever price crashing down your line collateral and movie Jim but you know on the other hands like people and the market seem to recognize seem to recognize that as such for kind of issue or back stable coins the in the reason why I find them interesting is that I think there are a lot of like even mainstream applications for programmable money that people we can find very interesting and valuable and like their that isn't really something that exists for just a thing where you can build your own Kickstarter like thing so in even things like you know like building crypto of n Mo's and so forth like there's another important application for this is or the reason why I care about feedback to stable coins is that they can kind of disintermediate part of the centralized exchange cycle so basically like if you look at historical centralized exchange hacks and thefts you know bid phonetics Mon Cox bla bla bla bla bla the greatest majority of the problems was not on the feed side it was on the crypto side and so so the inability of it yeah like the vision that I want to see the community try kind of moving closer to is that centralized exchanges specialize and basically being with the odd gateway and then converting feedbacks tokens to things like even something that can be done in a either decentralized or at least kind of plasma style noncustodial way so it's rated and finally Singapore is only one correct answer here yeah I know it yeah it's obviously underrated but stick of course really cool yes yes well hot yes you know the temperature is like really nice and stable you know not many places in the world have a 100 year minimum temperature of nineteen point six and a hundred year maximum temperature of 36 yeah that's that's awesome so what I want to do is and the this conversation with a question and then we'll open up the audience questions so kind of my final question to you is just generally why should people care about the centralization and what does that matter for you yeah I definitely think started kind of being more explicit recently about viewing the centralization less as an end in itself but more as a kind of means to achieving a particular goals so like for example the reason why I like you know things like decentralized exchanges is because number one I mean the whole thing about exchange is getting hacked and like losing huge amounts of money is something that's like it would be nice to minimize IANS number too like I actually do feel like centralized exchanges have this unhealthy level of influence over the industry because like individual listings can basically increase or decrease the price of you know some coin by a factor of two and that's like or more yeah or more and that's just like power that's so obviously ripe for being abused and probably is totally being abused behind our backs and won't ever know and basically if you know the this is like a great opportunity for the crypto space to kind of use its own technology of values to solve its own problems if we look at things like these like service applications for example I think it's the value that they provide is that if you build an application on top of many components then each component you add is a dependency and each dependency you add is a thing that could break and it's like something where if it's managed by someone it's someone else that could break you and so if we want to actually be able to build things where people build components and these components will rely on each other and create this ecosystem cooperatively then building more and more base components that operate in the structure where once they're built they're like basically literally as close as possible you're just guaranteed to last forever you know regardless of what happens to the team I think is like really nice and being kind of more broad in philosophical I think you know decentralized and of watch-chain applications or in some ways a kind of spiritual successor to the concept of open source because like the nice thing about open source software right is that it's once again it's like you can you build and here's and use applications where they don't depend on a single party that could disappear where you know what's actually going on where you know I have stronger assurance that it's not spying on you it starts brewing you over in some way and twenty years ago was actually a kind of much smaller fight because even stuff like Microsoft Word like the worst thing they could do is they can lock you in with proprietary file formats then like possibly stick a stick watermarks into your documents or whatever like but now you know we're not talking about proprietary software on your computer versus open source software on your computer we're talking about proprietary software where even your data is being stored in servers inside of Google and you know we have no idea what they're doing they any of your stuff in so trying to come up with the kind of credible technological alternative to that paradigm I think is something that a lot of people want and it's something that could be potentially very socially valuable so and so that was my last question but and I will ask another question as a follow-up to what you said is do you think we often kind of conflate the centralization with transparency transparency is like one of those complicated the value is right because like there's clearly things that we wants to be transparent and there's clearly things that we're building stuff to try to make more private you know I think you know the place where transparency has a role is basically so that like people know what kind of a deal they're getting right and so you know if you wants to interact with some application you know or you wants to just know that but you want to know what terms you're getting you know you don't want to kind of sign a blank check to people you don't know and that's something that I think in wall chains are definitely good at providing they're good at providing kind of transparency and kind of guarantees of what the process is that you're going to be participating in and that's something that's valuable I mean you can also talk about kind of transparency of organizations and transparency of organizations can be valuable I mean basically just as he we have convincing people that there is nothing nefarious going on which is something that definitely is valuable but on the other hands you know there are a lot of good reasons to have privacy too and like we can talk about personal privacy and my usual kind of one sentence utilitarian argument for my personal privacy is like really valuable is that basically it should not what people should be free to do things like for optimized for their own happiness it should not be that every single thing that you do should carry some component of like doing either doing it or deciding not to do it for social approval because if if things go kind of to it go far in that direction then you just get an equilibrium where people do things that they really don't want to do or to and if me okay well do what they think makes each other happy but actually the whole thing just makes everyone was happy you know but then even aside from those kind of more social and of privacy for the individual things like privacy is just a fundamentally necessary component of making many classes of mechanisms of work so even if you look at voting for example like if voting is transparent then that makes it insanely easy to pay people to vote in for in one particular direction it makes it insanely easy to penalize people who vote for something you don't like it's so and then if that happens then the kind of you know the me the kind of mathematical description of the game changes because instead of it being a game where people make decisions independently it becomes a cooperative game and cooperative games are notoriously harder to make kind of actually be stable and so when we are in the designing mechanisms whether for governance or for you know whatever whatever else like basically having the option of kind of more privacy it helps me reduce those kinds of issues so I guess privacy and transparency I mean as well as decentralization I think are something that you know you can get more mileage out of them if you start and of decomposing them more into well why do we actually want this thing that was awesome well felt like thank you so much for being here and now we'll open up the room for questions [Applause] if you have a question you can just come on up or earth saddle I'll try repeat the the question itself we'll do an April of them oh we actually have an extra mic so just raise your hands and we'll have somebody come to you high Vitalik so when year ago you proposed just idea of dico so what was the community is relatively abundant by this concept I mean so just to kind of describe what i da i cos it's this was my attempt at kind of mitigating the problem in an IC o---- where the person who the founders of the IC o---- have no incentive to eat no not enough of an incentive to work hard or even to just not disappear with the money and so the way that this works is that when you do an IC o---- instead of the money immediately going the developers the money goes to a smart contract and in the smart contract the participants in the IC o---- can vote on but basically how big the tap is so like how big the amount of money per per day per spur block per month whatever yes that goes to the founding team and they can either vote to increase it or they can also votes to just shut off the whole thing and immediately refund the money proportionally and the nice thing about this mechanism is that for ETA IC o---- to kind of break you actually need both the voting mechanism and the founders to be dishonest right because if the founders are dishonest then the dico mechanism can just or the voting mechanism can just say oh it looks like they're dishonest and so we're just going to refined ourselves the funds and will participate in some different da IC o---- but on the other hand if the voting mechanism gets corrupted then if the founding team is itself happens to be honest then well the only thing the voting mechanism can do is it can either like not increase the tap in which case money will still keep on flowing to the team or it can cause everyone to refund refund the money but then if refunding the money was the bad thing to do and then everyone who still wants to participate would still just be able to join a new IC o---- created by the founding team so honestly i think one of the main challenges is just people are afraid of sneaking fifteen million dollars into an unloaded and smart contract and so far no one has had enough private incentive to just develop the contract and have it audited and so if people at this hackathon want to take the first step and just develop a simple da IC o---- application I think that's a totally legitimate thing to do as well more questions [Music] how do you feel like the Dai Co squares with security laws because from my understanding like security laws are kind of like don't make promises to develop an application and like steadily get money from it they just want you to develop it and like not advertise it as an investment I think my instinct is that whether or from me kind of very narrow we go standpoints whether or not something is a da IC o---- should not increase the chance that it's like that that it's a security but I'm like basically because like the tests that we've seen so far used in practice about whether or not something is a security have more to do with like basically whether or not the actual application looks like an investment and also the stomach's another contributing factor is like when you get money from the public are you getting the money based on promises words you or you already have something that's basically usable already built so if for example you have something that's already built and you're just me like collecting money into a pool that maintains it then that seems like it's an allure risk then for creating a totally new project but this seems kind of virya jurisdiction specific and they like talk to lawyers blah blah blah love life well we'll do two more questions so if you have any more questions please raise your hand and we'll come to you with a mic one at the back hi who would you say is more handsome Virgil Griffith or plaid Zamfir can I answer Carl what about under a deer overrated I feel I just realized I haven't said it overrated even once in these sections before so like I don't know keep throwing me stuff and I'll say overrated the first time I think of something that's overrated I don't know I've actually been like warming up on at least some parts of CBC lately though I do think they should the sharding stuff is overrated Jasper the name look really overrated perfect you've met the official Koval of larding is underrated [Laughter] perfect well I think we'll add it here it's all like thank you so much again and now we'll get on with the rest of the opening ceremonies thanks everybody [Applause] 