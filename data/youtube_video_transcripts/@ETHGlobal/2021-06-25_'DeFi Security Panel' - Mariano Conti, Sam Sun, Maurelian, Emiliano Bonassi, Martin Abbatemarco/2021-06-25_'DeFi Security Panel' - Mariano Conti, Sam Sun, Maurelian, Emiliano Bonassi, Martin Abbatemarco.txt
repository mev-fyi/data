on to the next talk so uh our last talk today is a panel on d5 security and best practices uh we're gonna just be covering some things to keep in mind the state of what's happening in this ecosystem from a developer and security standpoint and uh there's so many details that i'd rather let our panelists go into including the introductions so without further ado i'd like to invite mariano sam morellian emiliano and martin um on stage and uh marina will be moderating this chat and uh i'll let him kick us off with the introductions to all of our panelists and himself welcome marianna hey kartik thank you so much for uh having us here today oh uh we're excited to have you i'll ask everybody to turn their videos on and now we can kick off with the chat great okay do we have everybody seems like we do cool well um thank you everybody uh for being here this is extremely exciting for me uh i'm calling this version two of the the panel we had i believe it was january 15th or somewhere uh about then and uh i remember saying that not a lot was happening at the beginning of the year and certainly a lot has happened since so i'm really excited to talk to every all of you about it let's do introductions first um sam do you want to go do you want to go first yeah sure uh hey everyone so i'm sam i'm now a research partner at paradigm where i basically still do the same thing that i've always done which is review code uh you know keep the ecosystem safe as always that's about it right uh more alien hey um good to be here i uh previously worked as an auditor at consensus diligence and uh was one of the original members of that team and now i'm at optimism uh helping to secure that protocol and loving it cool can't wait for that to uh go live i think everybody yeah uh emiliano hey thanks to be here with i would say uh beautiful minds in defy obviously we have many many others so um i'm the co-founder of defy italy a community uh around d5 in in italy and uh let's say i am a part-time builder in dfi and uh let's say i help projects uh during security incidents and i'm also a strategist in the wire group excellent and finally we have tincho hi everyone super excited to be here and in joel i'm a security researcher open sibling i've been a secret researcher for the last couple of years already and yeah it's 82 here great and just in case my name is mariano conte i was at maker for a few years and now just part of the ethereum and d5 ecosystem uh cool so let's uh kick this off so this past few months at least personally i've seen a lot of activity um you know rock pools and and and just exploits mainly on you know binance smart chain and i think i've seen a mix of uh you know exploits that we all that we almost do not see any more on ethereum for example uh you know a mix of things that we've already learned and and you know don't do anymore on ethereum as well as you know straight up copies of other protocols uh sometimes with one or two lines uh you know change just to become a hundred percent uh an intentional what right um i wanna start with that uh what has been your experience um do you think it's fair to say that everything most of the rockfalls are not happening on other chains other than ethereum or do you disagree with that i would i would start saying that there are different scenarios i would say um in that you have like rock pools in which perhaps the owners of the or the admins of the project have thought about rock tooling the project since day one and that's just plain scam and people should definitely try to avoid that and then we have like this common or simple bugs that you mentioned and that can be the case of new developers jumping into ecosystem to this new side chains that appear and they are like just coding their projects and they fall for the same mistakes that we have have in many times already in ethereum but a different scenario i think that could be interesting to think about this and there have been bugs in which they are so obvious to be true right so in some sense i i don't know i i don't want to believe this but it could be the case that we are like seeing drug pulls but must as hacks so you launch a project you introduce a saddlebag or not sold saddle and yeah then you get hacked by the end of the day you're just struck pulling your users uh but just you're saying that you got i don't know there was this case of a unisop fork that they just directly removed the the invariant right the x times y equals k they just removed it and that cannot just be you know a simple bug right that has to be intentional yeah i i would say mariano that as tincho uh mentioned there are let's say uh it's not so easy to to describe all the scenarios i i'm more let's say oriented to say that there is so excitement in d5 and especially in this let's say scaling solution like bsc polygon and any other let's say scaling solution that people are new developers new builders rush on let's say uh build their own new protocol maybe you know linking some information about other protocols that are successful and maybe because they lacks of experience or skillness let's say they remove some feature without doing the let's say tests that are required and uh definitely we have scenarios where you know maybe some developer remove an underscore so you see you see that the code let's say seems to be identical so that's probably is for sure but i think that most of the bugs that we saw or the let's say incident are related to this excitement and another interesting uh um let's say pattern that we saw is that uh since there are so many variants so many forks now it's it's it's difficult also for those new protocols to stay updated with the changes of the original ones so for instance if you fork a wire if you fork any other protocol and maybe a wire discover an issue it's easy to say that probably it will be exploited in the next minutes uh on the on the side chain so uh this is let's say it's a common problem for open source and because of this excitement is not easy to let's say to to solve it so i i'm i i always think about it's it's okay to let's say uh contain this excitement uh and be more safe or it's let's say healthy to have those protocols to be you know to have some impact obviously from a user perspective it's better to be safe but at the same time let's say you're moving innovation in this way so it's not easy to answer anybody else want to chime in on this i feel like with that like good points have been made and it's hard to say a lot about what's happening exactly when run polls happen the one point i jotted down was to not necessarily assume maliciousness when stupidity is sufficient as an explanation i think that's probably very often the case what's going on and then you also have evil at times uh what about something that happened very recently uh like iron finance i don't know if anybody's aware of what happened would you consider that a rock pool would you consider that an economic exploit would you consider it uh that's just the way algorithmic stable coins go so they work until they don't what do you think it seems to me like that without having done a formal analysis but it just it feels like if you publish the rules well uh one thing if you publish the rules somebody will find a way to break the rules but you don't even need somebody intentionally trying to find a way to break the rules um it's it's just not i think humans are more complex than we can describe with an algorithm and um it's asking for trouble and and history seems to be bearing that out i mean someone feel free to jump in and correct me but i'm not sure the iron incident wasn't rockable like i the founders didn't make money off it right it just sort of collapsed on its own from all the selling pressure at least as far as i understand i also haven't done an analysis myself but uh yeah that's that's as well what i understood uh but i don't know if there was any any new information i just scrolled past a few tweets and uh there were mentions of both but yeah in the case of uh an algo stablecoin most likely just fell to its uh yeah regular uh bank run it's like like you there's many ways to make this is not even an allegation but like you know what could like you can just short the token right so i mean a very roundabout rug pull would be to just create an algorithmic stable coin assume it will eventually die and and find some way to benefit off of its eventual death very indirectly not necessarily through a hack or anything um so i think my the upshot there is just it's it's all it's really really hard to um identify to understand motivations and um how who's acting in in what way in this world in terms of you know actual security let's focus you know on on evm style blockchains have you seen anything new any any new developments uh you know that can help us prevent you know certain bugs that can uh you know guide the security community forward anything that you've seen that caught your eye or are we more or less the same as we were when the year started um i i think that from a review perspective uh i mean tooling improved a lot and let's say it's more we have more complete tools not at all comprehensive yet uh we we still need the let's say developer adoption of those tools but we we saw the rise of let's say uh companies groups new startups dows or whatever they try to help on take a look on the code that you build so maybe not so professionals uh but let's say like a an audit where you have very vertical people that let's say do many many uh processes to understand if your code is performing as you expect and giving you a different perspective i'm talking about um the initiative uh where also you mariano participated in russell sam where you have a contest that the the uh a protocor or a new builder let's say uh put on a location and say hey please try to uh break it or other initiative like the one that i started and let's say it's not going as i expected to be honest so reviews now where people try to collaborate on reviewing the code each other but alongside to that i see that many protocols now collaborate more than before so because they need to integrate to have success uh we see that many protocols look to the other each other code so uh i would say that from a touring perspective we are still in an early phase or so if let's say tenderly with simulation with all the tooling that help to you know troubleshoot the issue he accelerate the diagnosis of an and a security incident or maybe before uh but i'm very happy uh to see those let's say initiatives that try to fix the supply of security experts and also the the lack of let's say security practice for for new builders yeah go ahead on top of what emiliano was saying that i super agree with that um i think yeah that we have had the developments i would i wouldn't say specifically technical developments but i still think that this security landscape keeps improving and maturing um perhaps we cannot catch up with so many new developments that happen in the ecosystem as a whole like forks side chains layer two and everything but i think that the white hacker space is like maturing and we have managed part one this now i think that the unified people are actually doing a pretty good job um i think on the operations and monitoring tools are also improving like emiliano mentioned generally we have open supplement defender as well doing some great advances um security tooling also i think that regular bridges and consensus and sartori who are doing a good job there and i think they are contributing a lot i also want to stress what elena said like i think that projects are starting talking to each other sharing experiences many of them have been hacked and they have learned lots from those hacks and they can share and get together and do like help groups after hacks and what they have learned and also i like there are projects uh onboarding new security specialists into their team i think that moderation not music might be an instance of that but probably other projects as well are starting to take security more seriously knowing that oh it's not enough that there's a whole comprehensive thing that you have to do and like onboarding a security specialist might be a good uh step forward just a data point to what what tincho said the market for security grow a lot not maybe has we need but for instance a company like emunify now is offering 24 millions of bounties collecting most of the protocols so for me this this centralization is is a good let's say indicator that not only the most famous or the biggest protocols uh see that this is an important let's say investment that you have to do for many perspective user uh continue to to to to to have your protocol live etc etc but uh i think that there are opportunities for newcomers to not only that i stress this point many times to work in defy to express your talent in defy you don't have for uh you don't you don't have to fork a protocol to do a new protocol you can you can collaborate in many ways also gradually okay and security is something so needed and is a very good let's say place to learn a lot of things that help you maybe in the future to design a more robust and solid protocol so i stress out that we need more and more people here and many companies are trying to build on top of this and i'm aware also of new startups new protocols that try to build something that let's say it's a security protocols in terms of let's say in in a decentralized way um about that i think no go ahead sorry yeah i mean i think um it's like to join amelia mentioned emunify especially is i think going to do wonders for security and ethereum in the coming months uh or years if the time scale is uh mostly because you know we're we're slowly pulling over the all of the talent in the current you know website security space over into ethereum where uh you know we're currently experiencing such a shortage of security experts uh i think one other thing i wanted to call out really quickly um on the topic of tooling or at least tooling adjacent is um you know other languages for the evm that are being worked on right now you know uh the ethereum foundation i believe is working on like a rust inspired language i don't know if it's feu or if you pronounce it iron or however but uh that's that seems really promising and just a couple of weeks ago uh jordan just pointed out to me a compiler by hyperledger called solang which compiles solidity but using an alternative uh back end it's built on lvm i believe um so i i think this isn't this isn't talked about as much but um you know i i i write about solidity sometimes for uh some of the more interesting language features they decided to introduce but um i think just in general having the flexibility uh of language that you know is um is designed with you know all the lessons we learned in mind over the past couple years could be a really big point as well in the coming months i think reachlang is also worth calling out there they're doing some interesting work uh i i can't say i know it very well but um they're they're really working on tackling the problem of secured blockchain development um and i think it's worth watching richard's actually really fascinating because they they like they take the concept of like they they like compile an entire basically like state machine down into the program so like in instead of defining you know individual functions for like a rock paper scissors game you would define the state machine of the rock paper scissors gaming itself and then the compiler would generate all of the state transitions for you it's really interesting um you should definitely take a look uh a deeper look if you haven't yet do you know how it compares gas-wise for example i know that you know usually with these kinds of languages you try to be as specific as you can unfortunately i i don't think gas is on the top of their roadmap right now um it you know it the the way the reach compiler works is it takes the reach code and compiles it into solidity i guess transfer files maybe it would be and then it likes to consolidate compiler handle the rest um so i would imagine gas might i would say at best is equal uh you know you might get some optimizations from the fact that the bridge compiler can perform certain transformations that you know as a human developer you can't but i wouldn't hedge my bets on that i have a specific question about tooling and security has anybody seen out in the wild um you know we always talk about a protocol maybe looking at the mempool directly for any transaction that would alter the state of their smart contracts in a way that's on scene and you know having uh a transaction ready to maybe stop the protocol or pause it in some way has anybody actually seen that in the wild uh happen or is that still mostly just theoretical i i haven't seen it but definitely sounds like nice right like useful but no i haven't seen yeah honestly honestly um we talked i think also at the very first uh panel that we have i remember a tweet that that i did about that but i think that a few players like for instance block native did a great job on the manpool analysis but from let's say reporting perspective but also from a tooling and i think that the missing part here is how to understand if those transactions are harmful so as soon as we have the first line of defense also if let's say the incident will happen anyway it's let's say uh a proactive monitoring okay so you know that it's gonna to happen and so you can put in place all the mechanisms also from a communication perspective being able for let's say take an action before that one is settled on chain i see that it's still futuristic but it can be realized i would say that i would like to see uh some let's say a pattern that protocol can use to have let's say big red buttons if we are able to define some sort of standard way to let's say put a protocol in a let's say sandbox [Music] modalities sandbox way that is blocked for somehow so the user cannot deposit anymore cannon with talk and whatever it would be easier to attach you know some sort of automation when we are able to understand if a transaction is our fault it's actually a really key point um about you know how how exactly do you define um or how do you design the pausing mechanism for your protocol right because the worst thing i think for all of us is when there's a plug in a protocol and there's no way to pause it you have to do the white hat hack on chain uh but of course the if you go to the other extreme you know um users might not really like it if there's this master switch that pauses the entire protocol that you know you can't get out at all you're sort of at the whims of the development team so that's something that i try to really uh drive the point home when i'm working with new groups is like you know have you really considered how how exactly do you want deposit protocol have you considered adding you know some sort of uh bare minimum failsafe where you don't let users in um and you don't let business operations happen but they can still exit if they want to uh but on the point of you know is there any tooling that lets you react to you know transactions in the mempool does not isn't that what opens up when defender does i was i was smiling because i was like man surely nintendo's was going to talk about this because i think you can you have to do it manually but i think you can set uh like specific conditions to watch for like if this transaction touches my contract and the the the new state looks like this compared to the old state then do this thing which may or may not be like fire off this new transaction stuff like that kind of um but it doesn't work with the man bull yet but definitely would be a nice extension and what you can do now is yeah you can depend up you can monitor transactions you can see how they impact on your contracts and once you have those you can have automatic actions which we call auto tasks and have like automatic triggers right from an alert and react on something on your protocol so i don't know if you see that the balance of your contract has decreased for some amount of money then you launch automatically a transaction that pauses the whole system or something like that it's pretty customizable but it doesn't work as long as i look as long as i know it doesn't work with transactions in the manual oh sorry mariano coco no i would say that would be a great a addition i mean that uh many players already have speculative execution for for those for the transaction um what they want to add to to to to what sam uh said is that i saw some protocol that basically uh let the user decide if they want to continue to operate when the let's say protocol is in danger so basically uh you can opt out from the okay uh uh the system is halted but uh if i want i can override just for myself and do the the action the other side is that the having the red button that is pressable maybe from from you know let's say this automation could be also a race for let's say daniel of service because if i want to stop a protocol to to let's say because i'm a competitor i'm evil or whatever if the attacker knows how you react to those dangers it can let's say continuously halt you so it's not easy i think to to to to design a system that automatically uh pose your protocol because there are many many other scenarios that that could arise that let's say maybe you are not in danger but there is someone that continues to you know to press the red button i will uh i will keep asking uh if we continue doing these panels maybe maybe one day you will say yes uh this is this is it we build it and use it um but on that note even if you were able to uh you know access the mempool it wouldn't really matter right uh in a world of uh flashbots and and dark pools and everything it's if an attacker wants to not broadcast a transaction they can just use a private service right so uh kind of defeats the purpose and uh on that note um what do you think about projects like uh like flashbots everything that's going around um uh you know minor extractable value is there anything special that uh you know d5 developers uh security-minded individuals in the space need to you know think about do differently uh is the future is flashbots you know the future the standard of interacting with the ethereum if if i'm not wrong i mean the things that you can do with dashboards i might be mistaken and perhaps some you you have some more ideas working with the team but the things that you can do with flashbots are things that deminers could have already done in the past it's just like we are kind of facilitating them the job and perhaps getting extracting some profit from it in the meantime but many of the dynamics that you can do with in mev is just like facilitating the miners that job and so any kind of attack coming from that if i'm not mistaken if i'm thinking right it could have been executed by a by a smart miner in the past i think that should it's just like paving the way for it to happen in an easier way and more sustainable for the ecosystem that's that's true the intro but it opens the opportunity for others to leverage the miner's position so minus maybe doesn't have the time the knowledge the money to invest on let's say strategies on d5 that can benefit for let's say front running others or let's say executing before so minor i mean uh researchers um for instance also why earn when is executing harvest for those strategies want to be eaten because otherwise could could be a target of sandwiches attacks back running or whatever so having uh let's say a party like a miner that offer you to be hidden during the execution is something that works a lot so i would say that mev is uh i mean uh obviously can be used uh how you describe so basically attack or whatever but at the same times help to protocols to avoid issue to be let's say to see before the settlement a specific transaction but uh uh for protecting your protocol uh this is not the only uh let's say solution that you can use i see because i'm just more close uh to that that for instance why you're implemented in their system uh let's say three shirts and right now with the zero uh for a two volt system you can have health checks on let's say the hours that are the most delicate operation so if if you exit from some boundaries the transaction will reverse at all so it's important also just to complete what we said before that you has a protocol also think about let's say some thresholds of let's say uh safeness of your protocol so maybe bigger deposits are not possible so you have to exit in two steps along with throwers so there is not only one solution but there are many that you can put to cover many of the let's say attacks or traps that you may have uh but anyway just coming back to mev i think that it's a great thing uh however uh uh if you go on on the uh explore.flashback.net from let's say the last year we grow from the extraction value from zero to basically one billion so that's also offloaded the network from many price gas action so i i think that there are many many positive i mean side effects of this of this stuff also if i don't like too much because certified that miners have a privileged position i wanted to add like for the the protocol devs listening that on the general topic of mev i think that there are emerging design spaces and mechanism designs that are worth investigating um i think the two that come to mind are i think it's called mint x and cow swap which are approaches to implementing a dex that is resistant to mev in ways um and essentially using batching to bring together people on both sides of the trade you think of it like a alternative to unit swap you bring together people on both sides of trade you have a certain amount of time for people to come in um and you don't have that uh that same kind of like sandwich attack dynamic that you you tend to get with with the amm um and so it's not not necessarily to call it those projects in particular but i think increasingly it will be of the benefit to the protocol to be thinking about uh mev resistant designs and and new mechanisms that can improve the user experience and protect them against that kind of exploitation interesting we have a few questions from the chat so we can start with that or if anybody has anything else they want to say about mev nope let's do a couple of questions so um on the topic of l2 that you know it's becoming more and more common does anything change as you think about deploying contracts to l2 with regards to security sure well uh like one one example that comes to mind is especially if it's one thing if you're operating solely on a specific l2 it probably does not change uh too much depending on the the platform itself um but i think an obvious example is is bridging and so with optimistic roll-ups you tend to have a fraud window that you have first of all you have like async cross domain calls so there's uh some delay you send your message from l1 to l2 you don't really get a response in the way that you do with a fully atomic transaction on on just in the evm um and uh you send your message off and you hope things go well on l2 um and what sort so like an interesting example that came up recently was um a project designing a bridge for their token uh thinking about pausing mechanisms um so in the situation where you uh pause your bridge on l1 and pause your bridge on l2 because you have uh some some some problems there for whatever reason uh they chose and probably rightfully so to leave the well there will be uh transactions in flight so with that with optimism seven-day window um if they pause those two bridges you don't want to have everybody who has uh tried to withdraw in the last week just have fun stuck when the bridge on l1 refuses to do anything and process those transactions so um i think that that a more asynchronous model so that's a specific example of how a more asynchronous model is going to cause people to have to think a lot harder about some of their design decisions um anyone else something about l2 uh i know in the case probably optimistic roll-ups um like uh arbitrary and optimism are gonna be uh i don't know this is my guess but i think they're easier to use than something like uh ck rollups that at least for now for what i've seen they require a bit more uh you know different languages things like that do you think we're gonna see uh more issues with the optimistic rollups just because we're gonna see the same you know copying of uh of protocols and putting them in uh in optimism and orbit room and have the cycle go all over again you know uh fork rockford fork rockville just gonna take seven days for for the hackers to to release their their money yeah for sure no doubt i guarantee it no it will happen for sure mariano so i mean we we we can prepare a little bit more i'm i'm really interested because we have here meridian about the uh security aspects that you consider or the security requirements that you consider when you when you cross the boundaries so uh also just for the the audience that we have because i mean many uh maybe many don't know what happens effectively when you you know when you cross the bridge so you deposit some you send a message you deposit something just to be not so technical but you deposit something on the bridge and then what happens so who who execute the transaction or the state change on the other side and it's a single entity it could be transferred it can cheat so there are many i think there are many many points i think that you are the most skilled to to explain us maybe with a very early five especially also where optimism uh position itself in this uh uh in this uh landscape okay um you can insert later you know yeah it is it is a big topic and i i actually have not got as much practice explaining it um [Music] as i would like but i guess i'll say like so one thing you're alluding to is okay so first so maybe like the nuts and bolts is that uh or at the high level sorry we have an a you don't have there's no reason that you have to use the infra the messaging infrastructure that we've set up um if you're good at writing um merkle proofs uh you can go ahead and create your own pair of messages to send things back and forth from l1 to l2 on optimism we've built that for people we also have a contract that is is fairly easy to inherit from much like many of zeppelin's things which we call it ovm cross domain enabled and it handles that kind of um the permission layer so you just you can import that and you can protect all your functions to say uh oh this is the l1 contract that uh you put this into an l2 contract and say okay this is the only l1 contract that is uh allowed to send a message to us to to execute some functionality and you can vice versa you can do the exact same thing um uh and then to not go into too many of the details but yes there's a uh there's an entity called the sequencer on optimism that many people have heard about um and so it provides much of the the throughput benefits that we have by centralizing this and having a big beefy node you know much like you might have with a more centralized chain however we depend on the security provided by ethereum to help us provide better decentralization guarantees censorship resistance as well is something that we have uh worked into the protocol although in in to be completely transparent there's uh what i'd say like a a progressive decentralization approach that we're taking um so at the outset there there is more centralization um and we will be uh taking or like reducing that over time um deeply baked into the dna of of the optimism team is the idea of exiting to community so um that is very much on the roadmap and and i think that like i've always generally been in favor of having speed bumps and uh various safety features that that you can take off over time rather than uh starting with a um i don't know what you'd say full speed ahead approach i see um i want to touch on that because um i've been asked that way too many times so for a project that wants to launch and this is not necessarily just for l2 uh there are many different ways of doing like a proper uh launch with you know safeguards what would you say that many different ways are and which ones you prefer i'm talking about you know restricting via the ui for example or adding actual restrictions on the smart contract using allow lists using upgradable proxies things like that which ones do you prefer and and why i mean i think my favorite is just adding a banner on the website that says by using this you acknowledge the risk of using this project and no responsibility to the authors and that's no um i i think he really nailed it there um you know the allow list is a big one uh i know urine did that for their v2 launch i believe i think i think my favorite by far is probably just a cap on the total um amount that could be deposited in the system and then that either ramps up uh with time or it gets adjusted by the by the team um the problem with other other methods like you know a cap on individual accounts is that it sort of becomes useless because anyone can you know it's trivial to create a new account on ethereum you just transfer your funds elsewhere uh and so like you know it's it feels like the most bang for your buck to just put a hard cap on the total amount of assets in the protocol itself yeah i would say on some that having caps particularly on total amount of money that the system can handle i think it will make the system less attractive for criminals and so yeah you won't have that much money deposited [Music] and it might be safer and having emergency emergency shutdowns knowing that the first persons can fail and might be a little bit more centralized and i in my opinion that's fine and i'm also like a supporter of the slow decentralization model and i think that works i see projects going down that road and succeeding monitoring that's a huge thing that people that want to launch first manage should be doing as well and [Music] publishing security contacts um yeah we direct red sign on your front and saying this is experimental things can fail don't put your life savings on this product yeah um i i like a lot the uh let's say we don't have to reinvent the wheel so having let's say a staging environment like a beta for your protocol uh especially if you let's say uh already mature like for instance wire also idle finance has let's say a separate section of the protocol of the application that is segregated that basically allow you as a protocol to experiment so in addition to let's say protect you from a security perspective you you also can test if what you are going to release is attractive enough and working backwards to improve it and this is the example of eight tax so with white earner before going to production basically you test with the other strategies if your strategy is working uh good and also you shout out to the to the users that let's say want to experiment with you and provide you a feedback and with caps these help a lot so you have caps but also a separate environment it is not tested it's still maintenance so real funds and and you test the changes that you that you are going to do so i think that this is a very good uh good approach honestly i would like also to see more uh usage of the ethereum test and that we have i don't want to say that let's say kovan if should have value honestly it could have uh but we we should uh use more other test net or uh let's say staging environments and we don't have to reinvent the wheel do you think after i know some d5 projects are already three years old well maybe two and a half do you think any one of those uh would be okay to remove that big you know use this protocol at your own risk or or do you think no matter how much time passes that we should always put those disclaimers even on you know the makers compound service uh uni swaps i don't like honestly because it's a it's a barrier for me so i i mean if i'm already there probably i i i know the risk i i don't from a ux perspective ui perspective i don't i i if you think also other let's say web 2 platforms no one says so explicitly that you are let's say opposing i mean i don't trust so much people that say it's all your liability responsibility whatever if something goes wrong it's up to you i think that is not working it's working if you let's say beta staging environment or whatever but otherwise it's like okay i get a car i know that i can uh do an accident but not every time that i turn on the car hey you know what you can die what no i i want to drive the car because i like the car i know that if i you know maybe at the very early stages but in general i from let's say from a ux perspective i don't like a lot i'm not a ux expert absolutely not but as a user i let's say i don't like to see it i'll just also add on that i think you know if you keep the alerts on you know long-standing battle tested projects you run the risk of alert fatigue on users and that's something that we should really be aiming to avoid as security experts is you know if you flash an alert on every page then none of the alerts are meaningful so keep them you know where they're absolutely needed and then remove them everywhere else that's a very good point um okay we have about five to eight minutes left so um i have two last questions from the audience which i think we can compress into one uh so there are are there any other tools or resources you recommend for security best practices and the other one is advice and tips for um you know the hackers that are going to be working on default integrations at hack.money for the next three weeks so free question for the four of you you have any advice and tips or tools or resources um i can chime in on the resources side i think that all major security companies have been publishing lots of reading material and best practices and i think that is it will pass if your consensus is if we open certainly if you're with others probably they will have as well there are lots of good practices published and security recommendations and well-known attacks and so on there are couple deflect challenges that will teach you about which are the bad practices and probably how to you can start thinking on how to solve them fireline and some the one recently we have the bullard if i ethernet i think there are plenty of resources up there in the community the challenge is keeping them updated and with the latest vulnerabilities and hacks happen so they are already other security researchers out in the space that are constantly publishing these lists of incidents and with xp analysis and so on that are really really good resources to to keep an eye on and and to constantly be in reading to be aware of what are the latest hacks that you should be preventing i think if there's one piece of advice i'd want to give to uh you know the people working on integrations it would be please do not use the spot price if an amm has a price oracle we've talked about this for over a year now and it's still happening and just please do not use the spot price it's not a price oracle that's that's all i have to say is there actually because i've seen that so many times would it make sense from somebody to just create a do not use the spotprice.com and and put in uh some amount of information about why for everybody is the is there some way uh to go and and read about why you don't want to do this mariano create it i will support you like dice that's created no i mean uh [Music] yes for sure don't you use them is a good approach probably we will let's say just expose not directly spot prices but always you know to up or other let's say estimator of the prices so it will be let's say if you are skilled enough you know how to get this spot price directly uh so that could be a good approach so basically rising the barrier for for doing that but coming back to the your previous question i would like to see two two practices starting in uh to become more trendy in this industry first one is shadowing i would like to see i mean if you see practical stuff and let's say practice a lot you learn a lot so in this sense i will shout out to everyone if you wanted to participate to let's say to some late stage war room or whatever uh i i i would like that you contact me or anyway shout out on twitter because you will learn a lot and second role plays i would like to see experiments in testnet where we simulate past accident so you not only read about the events what generated them and how we solve them but at the same time to try to repeat those stuff and experiment how to react that's very important also for uh new teams so simulate security incident so those two things at least for me was really helpful for many things that i did in the past before let's say dive deep in security uh i read on my own what was going happening with eth just dive deep on what's going on immediately and also pairing with someone else maybe more expert than me and at first shadowing and then participating actively that's something really i mean there are some risks obviously an evil party could let's say uh doing those stuff but uh i think that if you we use let's say for instance a candle program where we have fellowship when we know the party okay we don't know have 100 but we start those training programs with shadowing with whatever that's that's really effective and honestly i discussed it with some some some peers in wyoming during the let's say y academy uh initiatives so that's that's definitely something that you have to do excellent um morrelian any last tips yeah keep it simple just like don't add every single feature that you can think of [Music] write less solidity and be safe out there kids that's great advice awesome well um i think we're at the top of the hour so we covered plenty i want to thank uh maureen sam um tincho for this uh awesome panel thank you the four of you i was i was waiting for this uh ever since we did the first one and um yeah uh thank you so much stuart global congratulations uh for all the hackers hope you create some uh great projects out there uh i'll be looking at them and i don't know if car tickets around yeah well i just wanna make sure that i also get to thank you mariano for not only just moderating this chat but also facilitating a super interesting conversation and um a lot a lot of good uh notes here at the end uh just advice for all the attendees for the hackathon i think uh for we'll uh we'll make this like an open call whoever buys don't use botprice.com first now is in charge of making that website work so for those of you who are listening as actors and still waiting on a project well there's a incredible challenge for a one day project uh for you it could be an easy submission that'll definitely help a lot more people over the course of the next year for any d5 project so uh sam thanks so much for suggesting that and yeah i want to thank everybody here for uh giving us your time today and uh we'll see you all over the next few weeks and i'll show you what comes out of the thousand person hackathon with d5 so thanks everybody and uh with that i just gotta say one last thing and that is happy hacking um we'll uh we'll follow up with everybody on discord from here on and you'll be able to track the rest of the event and the nest of the summits and everything else on defy dot etwo dot co so hope you have a great rest of your your day and i will see some of you at the team formation session later tonight thanks everybody 