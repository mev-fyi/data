and look at all there's otters hello everyone and welcome to the super hack hyperlane Workshop unleash the super chain with permissionless interoperability joining us today is nam who will be taking us through the session and without Passover known to get the session started cool thanks Rory um yeah so like Laurie said my name is nam uh I'm one of the founders here at hyperlink um and yeah very excited uh to be participating in uh super hack uh we've been big fans of global in general so if this is not your first uh if Global hackathon you probably have seen us around um if you will be participating in one of the upcoming ones in either New York or Istanbul will be there as well um but yeah I think for uh today we really like I've always been enjoying these kind of online hackathons you skip last time around and there's always been a really cool hackers and um projects it's kind of coming out of these hackathons um so yeah so looking forward to that uh for this one right we'll be talking about super hack um which is kind of in the theme of the op stack and the super chain and so we felt like apart from the very I think generic maybe like kind of like Workshop that maybe we would do normally we would want to focus on how we as hyperlane or how attackers using hyperlin can kind of like unleash the super chain of what we call like modular or permissionless interoperability [Music] um yeah so let's start with um you know like what is what is the super chain um about what is the super chain what is the current state of op stack interoperability and and now we'll go into you know like what's hyperlane and like why it might be interesting for kind of the super chain and by extension for folks here hacking um at super hack um and so I hope this is not news but you never know uh kind of who's uh participating for first time here by the optimism Labs has kind of built the optimism chain um and the stack that you're using can deploy that chain the initial kind of exchange uh it's called the op stack and I think since the creation of that op stack there's been a lot of like interesting folks who have kind of like used that stack to deploy uh their own chain right it's the most recently probably most known worth it as well is base coinbases um L2 I think Zora public goods Network by Bitcoin I think there's a lot of interesting examples of folks kind of deploying their own rollups for the applications and like kind of like making certain modifications uh either technically or culturally kind of like to basically uh customize I guess the blockchain or like the roll up to their needs um and I think Super chain is kind of this right like this concept I think that op labs and the various folks using Nokia stack um have been um kind of like trying to Rally around as it's kind of like vision for how like op stack chains kind of together can make this more cohesive Network and ultimately scale uh like the kind of ethereum vision um further and yeah if you're more interested in kind of like what exactly that means and like how let's say um yeah the op Labs folks have been thinking about that I highly recommend going to their website um but one of the things obviously that like this kind of like uh vision of this kind of like network of chains um requires is interoperability between these chains right let's say if you had git coin if you had Zora on ethereum those content were able to interact with each other because they were sharing the same VM right they were able to make calls to each other compose of each other and that is something that now that these are technically different blockchains uh is something that you need inevitability protocol to kind of like allow for messages to be sent between these applications and so I will quickly go through the current state of op secondary operability basically how does an op stack communicate with let's say the L1 um and to be honest the current state of a PC second operability is not super great right so one you can really only use the uh like contracts that though psac has primarily the oak cross domain Messengers to send messages between uh the L1 which is obviously ethereum as well as the L2 the chain of database optimism base or um and so there's no way really if you have an application on uh based on Zora for those to connect to you have to technically kind of like send it back to ethereum wait seven days and then send the message back up to the other L2 um and I think like the op Labs folks are kind of like on the docs are recognizing that that Redtube ultimately extend the super chain revision like there needs to be this ability to do cross chain transactions that are faster than that kind of seven day period um but also allow for again not just like faster to L1 but also faster 200 LTS um I think the second thing that we saw last week is that there's actually no like out of the box UI for the standard bridge for op stack deployers so right so like let's say if you deploy um a new p-stack chain like you actually have to figure out how to build a UI that kind of allows users to let's say deposit usdc on the L1 standard Bridge contract to ultimately receive usdc on L2 and then the other way around and then even if there was the ux is kind of rough and like we'll go into exactly why that is the case so again from L1 to L2 it's actually pretty simple right here on the right side you can see the diagram basically the user calls the bridge USC 20 contract on the L1 standard fridge which ultimately calls the cross domain Messenger on L1 which descent message function that ends up calling the optimism portal with the deposit transaction function and that kind of emits a deposit transaction event and then right like because a rollout is literally rolling up over L1 State uh the rollout will ultimately kind of like have a virtual deposit transaction transaction on optimism or on the L2 which calls relay message across the main messenger which itself will basically call finalized bridge erc20 on the L2 standard bridge and that's how basically you get kind of this like synthetic usdc let's say on optimism because you deposited the usdc right like on ethereum as collateral and so this animation is pretty nice right the user initiates only a single transaction On the Origin chain and the message is automatically processed kind of like as part of the rolling up over L1 State and so you have kind of like full security right like there's no kind of additional trust assumptions Beyond just the normal role of trust assumptions that you have however uh sending from L2 back to L1 is like looks a lot more complicated right so like today what you have to do is as a user you call the bridge erc20 contract um sorry the L2 standard Bridge contract and the bridge erc20 function that will send it that will with the synthetic usdc that you have right that enough like that would basically burn the usdc on L2 it will send a message to the Cross domain manager which itself will kind of uh call initiate withdrawal on the L2 to L1 message passenger and that basically like writes this particular message to storage on Optima on optimism L2 and so at some point later like I think usually the docs say it could be up to an hour later the proposer actually proposes the state route of that L2 onto the L2 output Oracle um contract on uh L1 and that's right like where uh anybody like people like depending on the configuration of the of the contracts like somebody who could basically contest and like submit a fraud proof effectively or like hey the statement wasn't actually the case but that's that's kind of just assumed optimistic case a proposer proposes a valid State Route then we as a user we can make a second transaction called proof withdrawal on the optimism portal and for that we basically um right like we've checked the miracle proof on the week sorry we attach a Marco proof to the transaction which basically proves our particular message in the storage slot on optimism and optimism portal is basically able to check that Markle proof against the L2 output Oracle and once that is the case the optimism portal will basically kind of have this pending withdrawal why it will rate the like famous seven day period to make sure that there where I didn't know uh fraud proof submitted in that time period And then after that the user has to initiate this third transaction to ultimately finalize the withdrawal right and that will ultimately call a relay message on the L1 cross domain messenger which will cause finalized bridge erc20 on the L1 standard bridge and that's what um releases the usdc um to the user right and so um right we said like it's a little bit rough of an experience because there are three transactions over a period of seven days that a user has to manually submit right developers have to like make uis I have to create tooling using the SDK that is provided to uh allow users even actually to do that right it relies on the proposal like this like usually a single eua to actually propose these State routes and so there's kind of like life misconsiderations on that and then probably the biggest thing obviously still is the fact that like you have to wait this like seven day challenge period for um tokens But ultimately any message to kind of make it make the way from L2 to L1 um and so yeah so that's I think right a pretty rough experience um uh and I think the reason for why many users never actually end up using the kind of like canonical Bridge right but actually use like third-party systems like things like hop across connects um to kind of like actually Bridge let's say like usdc around um and so we think that um yeah I think that's not great and like for this and many other reasons we've worked on hyperlane which is basically a more generic interoperability protocol allowing any chain to be connected to any other change um and so I'll quickly go over like you know like what kind of interrupt what I want to kind of slow looks like and hyperlane and how ultimately how that might be beneficial to the super chin and how you got you hackers here at super hack can kind of improve the numberability of uh the super chain ultimately so the basic metaphor looks actually fairly similar right so basically we have these contracts called mailboxes on every chain that hyperlink supports that is both evm chains but can also be non-evm chains and so there's a bunch of like non-evm implementations that are about to go um to go live but for now I think I'll just kind of instruct for instructional purposes just kind of assume the evm but basically we have mailbox contracts on both chains right and as a sender and like for example the L1 standard bridge in the kind of like op stack token Bridge context can just call the dispatch function with basically the destination which is just like a chain ID basically of the destination chain a recipient the address of the uh the address of the recipient on the destination chain right so in that case it would be let's say the L2 standard Bridge contract and then the body which basically just kind of like signifies yeah like hey like mint uh this aesthetic or like release this collateral token right there's arbitrary bytes depending on the application and yeah basically we have kind of the system that are going more into it called interchange security modules where those are the contracts on the destination chain which the recipient can specify to ultimately uh say like hey under what circumstances do I accept messages right under what circumstances do I believe that this sender has actually sent a message um and with that basically you can relay that method to the mailbox and the message recipient will basically be called with this kind of handle function and then they can again do whatever they need to do with that um and so War routes are kind of like uh hyperlains uh take on again the classic lock and wind token Bridge right similar to the like standard bridge in uh Adobe stack where just basically the like collateral contract on let's say ethereum which accepts the collateral that sends a basically like mint synthetic uh message via the mailbox to the hip erc20 contract on let's say any other chain let's say in this case your op station um and basically that uh that contract can again specify what security model it wants to use and if it kind of accepts which is what we call the ism uh the transaction submitted by the relayer is able to basically process the message through this contract it will mint the synthetic token um and then the same thing obviously applies to vice versa um and so the nice thing about war routes is for example that we do have a out of the box UI right so let's say if you instead of like using the standard Bridge uh use web browse to deploy a token bridge between [Music] um ethereum and optimism like you are able to use other security mechanisms for connected withdrawal from optimism right so you could for example choose to either go through the canonical bridge but you could also choose to uh use like a valid database system or like use like sticking or right like eventually there will be maybe like better validation mechanisms like like clients available um and so the key piece here is that the word brand are these token Bridge contracts are sovereign to the issuer and so you can actually have like right like custom functionality um onto the token contracts themselves to um yeah again facilitate both things like Securities and features like one of the things that for example we recently um had a contributed work on is the ability for a token to be votable um on both L1 and L2 so that you could vote on L2 for a proposal on L1 um and so yeah there's a lot of kind of cool extensions basically of our balance that you could do and that's like another offering that hyperlane has and so that kind of gives brings us to right like how can hibernate improve super chain in our own and so actually there was a contribution last week by another contributor who kind of um basically add hyperlane as a pre-deployed contract onto the OP stand right so like basically if you go to this repo and you deploy to a p stack using this Fork uh you automatically have the hyperlane mailbox contracts on both L1 and L2 um and it modified the standard bridge to basically allow for a certain like configurable tokens to basically be withdrawn with a different mechanism other than the kind of like L2 output Oracle and therefore the seven day window um and because of that because it uses kind of the hyperlane mailbox system it also benefits from this kind of relay system where a user can just pay a relayer On the Origin chain for this kind of similar destination chain and so ultimately the user experience is that you only have to sign for withdrawal for example you only have to assign a single transaction optimism and you just like pay extra amount of Eve so that you no longer have to submit these like um transactions on uh on ethereum And So It ultimately looks a bit like this right so like on the standard Bridge instead of it calling the lo2 cross domain messenger it just calls the dispatch function depending on the configuration but let's say it's called the dispatch function on the mailbox and then um the relay will basically kind of like relay that message to the mailbox again depending on the ism used by that particular token the L1 standard Bridge would kind of get the handle call from the mailbox um and so and then again release the token to the user right and so that's where kind of the ism piece comes in because you can part of again hyperlane is kind of ethos is basically there's different security modules for different trade-offs right so again maybe for like the if right like you have to say it's like the most secure token on the roll up and so therefore you want um you want this kind of like like very heavy system that makes sure that there's like these prop groups available and you have to wait seven days but maybe if you are right like a game and like you are you want to take a certain different trade-off you are able to specify different ISM that is say let's say a multi-save right like they could be like let's say if you're on storage chain like maybe like Zora has kind of their validators they could be run and that would allow uh developers or token issuers to basically have withdrawals that are faster right um that don't have to wait seven days obviously you're getting the security is different but there's no kind of single answer that we can think of and so that's why we want to support and it's like this generic modular interface to allow developers to pick whatever trade-off they want to choose um you can actually also wrap the right like the kind of optimism portal slash out to Output Oracle into an ism itself and then again allow different tokens to kind of have different security mechanisms under the kind of same interface uh what you could also do is you could actually move the right like once you have this kind of like mailbox and modular interface you could actually move the Canon fault proverb uh as an ism right and so again therefore allow tokens to kind of forget selectively move into different proving mechanisms um we also uh basically have all the um other kinds like uh contracts basically set up to support um staking and permissionless slashing so you could imagine folks basically validators let's say in this kind of multi-sig ism basically have an economic stake and if they ever lie about it they would actually get it slashed um and there's some cool there's a cool uh kind of like construction where actually this like because generally in hyperlane the state can only be slashed On the Origin chain but because there is this kind of like very secure canonical bridge that does exist from L2 to L1 you can actually communicate the slashing condition over the canonical bridge to L1 and have the stake live on L1 which actually means that for restaking right for something like eigen layer you could have validators validate messages from multiple Roll-Ups with kind of the same economic State and therefore get higher economic efficiency um and then like last but certainly not least isms are composable and so they allow you to uh basically aggregate multiple verification mechanisms right where you could basically say like hey like I actually I want something super secure so I actually want both the canonical bridge but also this set of validators to agree on the message for me to consider it secure um and so these are kind of these like what we call like security Legos that developers can use to kind of ultimately adjust the trade-off that they want to choose when it comes to sending messages between different shades right in this particular case let's say from l2121 um and so yeah so there's a lot of like really cool I think opportunities here because I think you know the op second interrupt has been so focused on um the kind of like classic canonical Bridge of the seven day uh front window that is a lot of opportunity for you hackers here super hack to kind of like improve uh the interim experience of this op stack right I think what if we like we very much agree with again I think the super chain kind of proponents that like business to the world we're going to be living in right there's going to be all these super chains that use the op stack to deploy uh kind of their own rollups but for that we just need better interoperability between all of these roll ups and so here are like a few ideas that I think we want to share with you guys um certainly not kind of like right like limited to this but uh one thing that you can do is you can support the high plane ISM interface not just at the standard Bridge level but even like like lower across the main messenger or even optimism or level um so that you kind of have more like op stack native I guess the old piece like native interface but have this kind of modular security um via hyperlink um like I mentioned you can kind of implement just kind of slashing where you have like Fast withdrawals via validators right let's say on a multi-stick ISM but still have Economic Security attached to them because their state kind of will be slashed via the kind of like slower security mechanism of the canonical Bridge um other things you could do is um I think that like if you've seen Universal X right they're kind of like Universal uptake on cow swap slash one inch Fusion uh they can explicitly talk about this opportunity for um doing swaps cross chain or like in our case cross Roll-Ups and so being able to basically like have these settlement articles you can build Implement them with hyperlink um and therefore support kind of like native yeah I mean Native Christian slabs um even if you don't want to do kind of like let's say like unusual back style swaps you could even still support right like uh moving tokens from one roll up to the other right so right now again the standard bridges are between a 1l1 so between the L1 and a single L2 but let's say if you moved like usdc YouTube to base like you can't directly move to usdc over to Zora and so one thing you could do is you could like modify the standard Bridge contract on L1 to basically be able to kind of let's say like collectively collateralize right like I said usdc on both base and um uses and base and Zora and so that would allow users to actually indeed send usdc directly between Roll-Ups and so that's I think another thing that you can do um you could because there's no I guess uh default UI you could use like the warp UI template UI that we have for our work routes and you could just like modify them for the standard Bridge so that like folks can use that if they didn't want to um kind of deploy the warpower contracts themselves and actually one really cool thing in this world that we have is what we call Dynamic withdrawals right so let's say like right now I just kind of like framed it as in like oh for a single token like you could just use I can say validated based security to do withdrawals but actually what's really cool is you could also do something along the lines of like oh withdrawals of like let's say 100 usdc or less which are basically right like smaller Regional users we actually support like using the welder based mechanism but for withdrawals larger than 100 usdc we actually do require uh folks to kind of like go over this kind of slower path right and so again that kind of allows [Music] um that allows kind of more I think just better trade-offs for people to actually use these Bridges versus kind of relying on just like um yeah I think third-party solutions to kind of like support say to leveraging uh and then the last two right I got kind of maybe more like application new things where for example you could build like you could Bridge Zora nfts to base with like warcrafts right that we recently announced our nft support on the work routes um so that should be pretty easily done you just go on a docs and deploy these workgrounds um and similarly like you can uh kind of take inspiration from I think two weeks ago when we announced this kind of like tally uh integration where you allowed to use more tokens on the L2 to vote for proposals in L1 and so you can do something similar let's say between like PG and an optimism um I think that's it I think I'm like surprisingly good on time um if you want to learn more right like read our docs talksyz donut Discord follow us and uh on this and Twitter you can follow me individually on Twitter uh under at non-broad or on television telegram under the same handle you can email me you'll be like we are going to be on obviously if Global Discord as well uh but yeah please do not hesitate to reach out it's like we are very active we have like pride ourselves to have great um response times on our Discord as well as in person if you kind of come to near a simple uh at the remainder of the year um and yeah I think with the remaining time I would love to take uh questions and uh go from there um all right so the first question I see some Julio say can we transfer tokens to Zora girly test net and how um yes so like I mentioned you can um you can basically obviously like use the like default standard Bridge contracts right and then you can use subjects to this kind of seven day window or what you can do is you can write deploy hyperlane basically choose Aura because hyperlaneous distribution is which I guess that I haven't gone into but you can deploy hyperlink to Zora and then deploy what we call the warplot between Zora and Gurley um and that kind of allows you to have basically a token bridge that kind of isn't subject to the seven day window and so for that as I mentioned I'll link you to I will link you to the relevant docs pages give me one second deploy I don't understand [Music] and then deploying on what route is here um and then Nicholas Elizabeth can you explain what included in the body parameter can we pass the function we want to call the destination contracts so the base at the base layer um let me actually move back to the sigma um basically at the base layer right like uh there's just kind of the arbitrary message passing and so you as the sender and therefore receiver have a total freedom as to like what do you want to pass in the body parameter right um and so what you could do for example if you want to yeah like call something on a destination chain you could um you could uh just like in the body basically ABI encode like your function call right and then as the recipient you basically receive that body you kind of like parse that um ABI encoded a function call and then the message recipient on the destination chain makes the call to kind of your desired destination chain contract so that's kind of like one way to do um remote function calls right um I think if you are kind of on the like existing chains that we have deployed on we have this uh API called um interchange accounts like the accounts API and that actually does it um automatically for you right so you basically just specify again a call and instruct um let me see if I can actually screen share that okay um right here um so basically here you can call call remote function and specify a bunch of calls um and then actually that kind of hyperlink contracts will create you a proxy account under the nation chain which will make those calls on behalf of your sender contract um and so that's another way of kind of like doing remote um function calls on the destination so I hope that answered those two questions um I don't see any more questions that folks have um yeah if you have any more questions happy to stick around and answer them yeah if uh if you want to just go ahead and take yourself off mute and ask questions feel free to do so and yeah if there are no more questions thank you nom for the great workshop and presentation and uh thank you everybody else for attending so uh yeah we've got a few more workshops later today but um yeah hopefully everybody's uh uh super hack is start off uh off to a great start so cheers thank you all thanks y'all turn on Discord 