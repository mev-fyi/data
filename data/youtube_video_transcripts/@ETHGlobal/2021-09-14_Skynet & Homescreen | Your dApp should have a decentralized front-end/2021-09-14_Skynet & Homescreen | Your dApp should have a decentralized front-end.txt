alrighty welcome everybody this is our skynet and home screen uh sponsor workshop titled your dap should have a centralized front end um and here we have daniel to be leading it and teaching you guys all of his amazing knowledge uh he said that he's comfortable with you guys uh just kind of unmuting and asking questions but please do just be a little bit cautious about where he is in this presentation because who knows he might just answer your question and if you don't feel comfortable unmuting you can just shoot them in the chat and then they'll check them out okay daniel off to you all right thanks so much um yeah so i'm going to kind of have a setup where i'm going to be talking a little bit about skynet and then jumping into a live demo and i've never done this in 30 minutes before so we're going to try to go fast and we're going to see how it all pans out so yeah this talk is called defy needs decentralized front ends getting started with skynet and home screen i am daniel helm developer evangelist at skynet labs where we believe in a vision for a decentralized web we want skynet to be the foundation for deploying and accessing decentralized web apps i don't think with this audience i need to make the case for why decentralization is really important for a bunch of ethereum developers but as the web 3 grows to really engage wider audiences i think we really need platforms and protocols that are one easy for developers to learn and two don't require users to have special software in order to onboard into the decentralized web so our solution for that is skynet we try to fill that gap as a decentralized storage protocol for the web to better understand how we need to kind of look at you know the blockchain storage project that under pin skynet which is called saya so saya was first launched in 2015. i believe it was founded in 2014 and a way to see psy is like airbnb for data storage the people who need um storage space on you know the internet can uh be renters and then there's hosts that then can provide that storage space payment happens in cya coins and there's a lot to saya but in the end of the day for a small talk i'm just going to say it's fast it's secure it's affordable and and it's really actually built for personal storage not sharing things on the open web and so skydive comes in as kind of a layer two to build on top of that and we have a network where um we have the scion network over here where we have all these uh you know storage pools and hosts or you know and larger infrastructure supplying that data on the scion network and then over here we have what we call skynet portals and so this can be a public portal where users can all share the same infrastructure to save and access their files or it can be a private one that you run on your own machine because it's all open source and that's the way that you're going to interact with the saya network but the great thing about skynet is that when you're interacting with the sci network through a portal you're not having to deal with things like a cryptocurrency with a wallet with you know a fully uh you know a big consensus file on your machine your users don't have to worry about any of that so what is it like to use skynet well you can go to scisky.net and there's an uploader right there you can drag and drop some files um and once you do so you will return back a skylink is what we call these and what this is is it is a um essentially kind of like a hash of your file you have this url that we call the skylink and when you use that that is a reference to your immutable file as stored on skynet and so you can plug that into any skynet portal and you have kind of a cryptographic guarantee that the file that you're getting back matches the file that the original uploader uploaded so what are some use cases for this well we've got all sorts of things that we've seen built um and some of them we're hoping to see more things built which is why we're excited to be sponsoring things like online we've seen people building fully decentralized web apps uh we've seen skynet used as persistent storage for decentralized and peer-to-peer applications um like gundb or we've seen decentralized android app stores we've seen it used for off-chain storage for blockchains nfts is a good example of this we've also seen it used for hosting censorship resistant websites and that's one of our big polls right now for thinking about decentralized front ends for uh defy applications and the last thing that we've seen it used for that i think is pretty interesting is folks running server-side you know processes that might scrape some data but then end up storing kind of process data on skynet in a predictable location as a way to kind of publish that data and other user apps can then kind of pull in that data and it becomes this kind of like way of having a decentralized api more or less we don't request it from the original server but from skynet where that server is publishing the data okay so all told our goal is for any developer to be able to build a d web app that anyone can use so that's my really quick skynet spiel um i'm going to now transition into the crux of the talk where i say you know d5 means decentralized front ends you know so we know that d5 is you know revolutionizing how users interact with finance and giving them all sorts of control and ownership over digital assets that they haven't had before um and you can just pull up their website and boom your trading tokens you're providing liquidity you're an ape you're degenning all the rest of it but what happens if the project gets hacked and their front end is compromised we know that the ethereum layer is secure right but what if the actual way to access that becomes unusable not all of us are able to open up ether scan and like interact directly with contracts what if a project goes broke it introduces a paywall or advertisements on that front end or what if a project is required by its local government to remove your favorite tokens or your favorite feature well defy needs decentralized front ends we're trying to build that ability to quickly deploy and have users quickly access these decentralized front ends uh with home screen and so home screen is the other big thing that we're talking about for this hackathon and what it is is a decentralized application so it's stored on decentralized storage that lets users log in with the fully decentralized identity and access versioned saves of their favorite applications and so um i'm going to kind of just maybe really quickly show at home screen looks like and how to interact with it you would go to home screen um i'm already logged in but you know there might be a button for you to create a my sky account and then once you're logged in you have something like this and you can add the skylink of the application you're interested in add it to your home screen and what that will do is it will save it in your user spaced personal um you know data area and then add that icon onto your home screen so now you kind of have control over this pinned data on a decentralized storage network so you know i can now open that up and we'll see that this is being accessed through the sci.net portal and at any time there's information stored in that where i'm able to actually upgrade this and so i installed an old version and i'm able to check for updates and update to the newest uniswap that the publisher of this application has made available okay i update i realize something bad happened in the update well i can come back here view details and then i can essentially downgrade to an older version um and save that and so that way i know that i've got this kind of version history where i own every single build and i am secure in the fact that i can always access these things in a fully decentralized way all right so that's home screen we're really excited about it and right now we're really excited about getting apps deployed onto home screen and that is why we are putting up a skynet prize for the hackathon um we are putting up a 10 000 cya coin pool for anyone that you know if their project ends up being deployed on skynet with home screen support you are automatically entered into this ten thousand side coin pools no matter what you're building what other projects you're roping in that is you know eligible for you additionally we're gonna have two thousand dollars for the project that we consider kind of like the best and so that could mean a lot of things we're leaving it kind of open but we really want to see projects understand the importance of a decentralized front end and advocate for that for other projects to be deploying in a decentralized way so we're doing kind of shares of the prize pool there's a few other details here that you can read about you know we have a github action that i'm going to show later in the talk there's a little save to home screen button that can go in your github repo and then we also have support for decentralized domain names on with ens and also with handshake hns and so if you implement either of these you'll get an additional share of the price pool as well okay so that is my quick introduction to everything um i am not watching the chat so if someone wants to ping me or interrupt me that's good at this point uh what i'm going to do is a speed run so what i want to do is show real quickly what it looks like to deploy an app on skynet how to set up automated deployment so that every time you push domain in your github repo it will kick off a deployment to skynet and lastly how to get your project working with home screen and so by the end of this demo which is now going to be about 18 minutes we're going to hopefully get all three of these things done to finish up the skynet prize portion of the hackathon so first off let's talk about deploying an app to skynet well first you're going to need an app to deploy so before we actually start deploying it let's go to uniswap and say we're going to fork this and make it a home screen application so you'll notice a few places here i've cheated a little bit for the sake of time but um one thing i've done is already cloned the unit swap but i could in theory say clone uh but what i haven't done is i haven't added this as a remote so what i will say here is get at sorry get remote add dgh all right so now i have this as an upstream um ready to go and so with uniswap the typically the first two things you're going to be able to do is type in yarn to install your dependencies and then you can write darn build to then build that thing so i am going to kick that off in just a second let me open up oops open up tmax here and down in the bottom here i will go ahead and do a yarn build and kick that off but i have cheated and done a yarn than yarn build already that i will open up up here to show what it looks like to deploy this built application onto skynet with no adjustments modifications or anything so i will go to scienceguy.net go to do you want to upload a web app or directory and drag and drop my build folder okay this is kind of a naive way of uploading and deploying your application but it works and i just kind of want to show that any folder that has a index.html file is going to work for deploying a web application on skynet um and so static deployments are fully supported and so this is a single page application built and react and it's more than happy to live on skynet um but we've also rolled out support for gatsby and full react router support if you've developed with ipfs or with skynet before you know that with react router you have to have these urls that have like little hashes in them to make it happy but now we've got full support for setting up custom routing as well so ask me about that in the discord if you're if you're interested in that all right so um we have deployed an app right we built it our build folder has an index.html file which i'm sure is too small to read on the screencast but when we upload it we get back our link and that's that okay well let's get something more exciting going let's look at making automated deployments using a github action so the goal here is going to be looking at how to create a github action um for for skynet and so like everything i'm talking about in the talk you can go to our developer docs and there's a walkthrough on kind of exactly how to do it make this a little bit bigger here and so if you go to docs.cysguy.net we will have info on everything being talked about but most importantly we have one called deploy to skynet github action so if i click on that it's going to give me all sorts of information about github actions and at the bottom here we have an example that we can just copy paste and it's entirely before i do that though now that we know kind of where this is i want to show what a github action is just in case anyone watching is not familiar with them in a project you can kind of go to your actions area and it will show you kind of the things that you've installed in your project that are actions and so let's see what those are in our uniswap interface that we have right here these actions live under a folder called github workflows and we see that we have all sorts of things that the uniswap team has already kind of got working with github for for doing automation we don't really care about these so let's just go ahead and actually delete those to make sure that we are running a little bit faster here all right so now we have nothing in our workflows let's go ahead and create a file called maybe just deploy to skynet great and in this we can then come back copy our action and paste it so what's happening here well let's try to look through the code real fast and kind of get a sense of what's going on we have a github action called deploy to skynet it's going to occur the action will occur on push to the main branch it's going to do a job called build where it is going to be running this thing on ubuntu and take the following steps it's going to check out our code it's going to make sure node's all set up with version 16. it's going to run yarn just like we did locally it's going to run yarn build just like we did locally and then it's going to jump into this display deploy to skynet action and so what we're doing is we're going to upload our build directory we've labeled it here and we're also going to pass in two variables to this action one's the github token we can kind of ignore that and the other one is our registry seed and so we have this thing called skynet registry seed and this is going to be used as our basically our private key for being able to update what we call the resolver skylink and so when we saw earlier that we were able to install an application on home screen and then update that thing it was this resolver skylink that was sitting underneath and what that is is that we can have a single skylink that points at our immutable skylinks so let's go ahead and save this and we now need to come into our repo and set that github secret so we can go to settings come down to secrets make a new repo secret and that one was called skynet registry seed and i'm going to actually hide this so that i can keep my deploy working later on but i have now made a repository secret called skynet registry c okay so we're automating our deployments we've come up with a way to add a github action and we know that that github action is going to both upload our build folder and then update this resolver skylink to point to that latest skylink so let's see what this looks like on this side over here we can go ahead and oh my goodness come back to our uniswap interface directory and i can say get all and we should be deleting the old ones and making a new workflow so i can say git commit with skynet action sorry about that and then once i have done that i can say then get uh push to repo oh i'm in main whoops that's fine let's let's make it work this way um get push to dgh my main branch all right so now i've pushed this code to the dg helm repo so let's see what happens i close that no here it is and come back here we can see i've made one commit and you'll notice there's this little kind of golden icon here that means that action has been kicked off so let's go look at our actions we can see that our previous actions are now gone but we now have one called deploy to skynet action so what this is going to do is go through all the same steps that we made in our deploy to skynet yaml file i happen to be down to eight minutes and know that skynet deployment after building is going to be about five more minutes so let's go ahead and take a look at a different repo where i know this has happened on i can click what's going on and we'll see that once something has built then when it gets deployed we get a skylink back and so this is what we can access you know access that immutable file directly but then it says that we've updated a registry entry and so that's what's going to make this resolver skylink that stays the same across all these deployments point to the latest deployed to skylink so i can access that here and we have a uniswap interface ready to go okay i'm going to keep this open in the background as we now step from automate the deployments to an add to home screen button so the last thing that we're interested in doing is making sure that users are able to find this application and add it to their own home screen and so there's a few ways of doing this but um the one that we're encouraging developers to do for the hackathon is in your github repo where you submit for the hackathon is adding a button that looks like this and then when a user clicks on this add the home screen button it will open up home screen attach on your skylink and automatically come up with this way to save or update the application all right so how do we add this button well let's go back to our documentation which is in one of these tabs and come up to home screen add home screen support to an app here you'll probably end up finding the video to this workshop and then you'll see some steps that walk through exactly what we've done so we've made sure our site works when deployed to skynet we've set up the deploy to skynet github action which will give us a resolver skylink and then once we have the resolver skylink we need to do two things we need to add it in our manifest file so that way we know on older deployments what skylink it is that we're going to look for for updates and then we want to add that home screen button on the project's readme just to be confusing i'm going to do number four before number three so let's go ahead and grab the button code we will jump back over in our code editor come down to the readme after all these other buttons i will go ahead and paste in the code from the documentation and you'll notice that there's a little bit here where we need to put in the skylink so let me grab that skylink from our resolver skylink here we don't need the protocol just the actual skylink part paste that and save and the other thing we're looking for was that manifest file and so lots of frameworks um front-end frameworks come with this automatically here something usually called manifest.json or something.web manifest but if you find that file it is a json file full of information about you know stuff that's great for building something like home screen icons names description we're going to go ahead and add one more field here and we're going to call it skylink we're going to put that resolver style link there and we'll close this so you can see so now even though this is going to be an old build at some point um our users will always know where to look for updates all right so let's go ahead and say make sure we've only modified the readme and that let's say get all commit screen button okay great so now that i have made that simple push i will come back to the repo and down here at the bottom we have an add to home screen button that i'm able to click and it will pop up and find it on home screen to add to home screen okay so that is the fastest version of this talk i've ever given i hope it wasn't crazy fast if you needed more information please check out the skynet guide to learn more just about using skynet the developer guide for you know building things we have sdks in a lot of languages if you want to work more low level with skynet we also have a wonderful community i want to really highlight our discord of course there's the youth online discord as well so come talk to us in our sponsor channel but if you want to really get uh deep in the skynet scene that is the place to go we have a lot of uh really great developers that are really generous with their time and knowledge so i've saved only two minutes for questions but let's see what we've got okay it doesn't look like there's any questions in the chat or anything being brought up right now so i'd really like to thank you daniel for um coming out and teaching all of us a little bit more about skynet and home screen and i really encourage you guys to reach out to daniel and other developers in the sponsor channels on discord and obviously connect with skynet on their social media platforms as well okay thank you so much have a great day everybody actually i think there is a question there um from lucas in the chat that just popped up if you went onsite okay i see it how do you get token for deploying size of space okay so skynet is built on kind of a freemium model and so if you go to scisky.net you can anonymously upload all day we only have a kind of 90 day guarantee for uploads that happen if you don't have an account but you can spin up your own account and pay for it and um cya coin if you're not logged in the limit for uploading is one gigabyte if you have an account or running your own um your own web portal using some other place with accounts that limit is 100 gigabytes at the moment um we're kind of making sure 100 gigabytes is stable but we plan to keep increasing that cap too i hope that answers the question all right great okay perfect um again thank you so much uh everybody have a really great day and contact skynet on this 