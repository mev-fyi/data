joining the ens integration workshop joining us today is makoto who will be taking us through a couple cool things and yeah feel free to answer to ask any questions at the end of the session um there will be enough time for that and with that i will hand it over to makoto to introduce himself and kick the session off hello hi thank you emily for introducing me uh so my name is makoto and let me share my screen uh yeah so my name is makotoba also in ens world also known as mateok and make this slide okay so uh happy new year everybody uh it's great that everybody's you know new year just got started uh some and they're now already excited to hack on new stuff especially for the around the nfp and so for ens we have a small price of a hundred fifty dollars was so ease to each of the five best projects to use ens and uh uh this can be basically ens username avatar support name resolution for entering a crypto address or hosting your website on ems and the distributed file network so basically yeah you can do what whatever the you know hack you want to do but you might want to integrate with ens to qualify for uh a price and uh if you just want uh looking for a quick pointer uh if you go to i think this is all url but if you go to docs.ens.domains we'll join our discord channel nft hack has its own discord channel which i will be checking from time to time but we also have our own discord channel uh chat.ens.domains and if i think there's a channel called developer if you ask questions there someone apart from myself might also answer our committee members and but like most of the stuff you look into docs ems.domains you can find the information and also uh we make as you may know we turned into down and we're trying to decentralize more things and one of the stuff we've been trying to change is previously any protocol related to ens was part of the eip ecm improvement protocol now we are trying to be independent on our own so all the majority of uh protocol related to ens is now in uh docs.esl.domain's ens improvement proposal from one to ten so most of the in-depth uh of how things are working if you look into these protocol proposals you can find more detail and in terms of the integration uh again if you go to i think if you look into the ens library or working with cnn section you can find most of the examples and the important thing is for most of these simple usages the javascript library or like python java library which you use to interact with ethereum they most of them have ens support built in and we we have our own uh library for esjs but it's getting a bit out of date and the currently i think for most of the simple usage esa.js has a most up-to-date support so i highly recommend using them there's uh but also there's a framework like a waffle embossed for this they also have an integration with dns and throughout this workshop i'll use this example as a yeah as a reference and in this agenda uh i'll first walk you through for ens integration one one so if you integrate any of things mentioned here uh that's kind of minimum you need to do to kind of qualify but this is a you know nft hackathon and i think we have we've been using promoting ens as a web 3 username and where avatar takes a big part so i'll go a bit deeper on how ens avatar works under the first so if you want to kind of not just integrating but you want to do something cool related to ens probably you can find some interesting information here and lastly if i have some time i'm going for going through a couple of upcoming features unfortunately these features are not ready yet but you can kind of have some expectation of what things are to come in near future okay so it's just in mind uh first one is integration ens integration 101 and the most basic basic feature of the uh ens is called for lookup so that for example my name is so if you want to send me some eso essay 20 to me you go to for example metamask or you can go to uh eastern account and you type modelcon.edh and then you get a hexadecimal ecm address so this is the most basic feature so if you have some adapt on the application if you have to find some address uh you can have like you know eggh name or uh sorry you can have like an ecm address which probably people would copy and paste or you can put the eth address one important thing is ens is not just about eth we we also announced integration with uh dns names so if you have something like innovative.com uh you can use ens mateoku.com as a uns name uh how to do that is i didn't cover in this documentation but you have to be very in mind that it's not just eth so don't just like you know uh some have called egh name and yeah to get the get up address so this is example but web3.js if you do enjoy get address i start east and you get the hexadecimal addresses so that's the most basic iteration the next step is we call we use scoring reverse lookup and most people didn't understand what it is so now we kind of rebranded it as kind the primary ens thing so you may set multiple four look up to point like you know uh three for example ensn post to one single same address but by using this primary ens name you can let dapps know what your primary units name is so in this case if i log into you know uni uni swap that the uh dab knows uh which username i'm logged in yes and to set it up from the uh our application ens up site if you go to my account you can click my account and it it has a drop down the list of names that acm address owns that you just select so that's how most user sets primary name and to for dabs to actually use our feature uh again this this is from our documentation site and then in this case he uses example he suggests and what it does is like you know provider.lookup address and then if you pass that address uh it returns name uh important thing you have to do is so this address let anyone to specify any names so it doesn't uh prevent me from just saying my html address points to beta yes so it's important to validate to do the both reverse primary e f name lookup while doing a full name lookup to say that like you know this address points to motherboard is and madoka is points to this address by doing the you know bi-directional setting then you can verify that that like you know this address belongs to this name uh luckily he suggests does that underneath so if you're using eso.js you don't have to worry about it but if you're using other libraries or if you're you directly interacting with our smartphone chat you have to do that bits okay and the last bit is about uh web decentralized web is that so if you have a for example quite often like you know most dynamic logic is in a smart contract and you have a kind of html or css and javascript images on the front and points to the smart contract then in that case this front end has no yeah it can be all like kind of bundled up and put it into the ipfs decentralized file storage so what you can do is once you upload these asset files in the ipfs you can also do with swamp and then others as well you can basically set that uh basically the central file system generates so-called content id which is the hash of the entire assets uploaded into ipfs then if you set that into this section called content hash in the ens you can actually point the websites to your ens name if you use something like a metamask or i think opera and they yeah it does it natively but we also provide a dot uh eth dot link so that for example in this case the name is app.ens is if you type dot link uh link e result to the website uh uh so it sorry display the ipfs hosted uh distributed website uh there's also another one called dot limo so if dot e c d h link is uh unstable you can also uh you know start the file at the ekg level okay so that's a kind of basic use but very basic usage and now i'm going to talk a bit about ens avatar which you might have seen that i like if you go to open c and if you go to type eth this is an ens name but you can also see my nfk which i set on ens and other dapps can actually use that avatar information when displaying an ems name on their site so this is example the one inch and if you're not interested in how things work underneath but if you just wanna do that integration uh there's a thought party library called uh dev i don't know how to pronounce this slash react which provides a react component so that you can just pass provider api key and the address and it does look the app and they also display so this is the easiest way to just integrate but if you want to understand a bit of internal this kind of takes you to how ens works the ens is just like any other kind of you know dabs it's just another collection of smart contracts and most of the dapps when you integrate you are interacting with a smart controller ens registry which is a basically the gigantic phone book where it has a key key as a you know your name and the value as an address by yourself the registry contract contains the address information he actually has a map to something called resolver which is another smart contract by doing this and the resolver has a logic to contain that addressing value information so the way the reason why we do this is that it makes it easier for us to upgrade the logic so that when uh yeah so this is a floor that when you fast says hey give me the address of uh food.east registry returns zergs one xerx1234 which is a resolver address then uh underneath all these libraries right we ask like you know okay what's the address of the food or east then resolver has the information and retire and the reason we do is i make this uh it it makes it easier for us or anyone to add a new uh address record type sorry record type so that i already introduced uh ecm address type and then you can set like in the content hash for the website uh there's always a support to put like public key or abi or multicoin which is like you know a dodge or a bitcoin these things actually multiple engineering actually initially exists but by doing this like kind of two steps you can change the resolver smart contract to the late the more like up-to-date one or you can actually write your own resolver and then add your own arbitrary uh logic so that's why it has in that kind of two steps and yeah resolver and the reason why i mentioned this is one of the features to be able to set like arbitrary a key and bodies text so that for example in im.i star is you can set a key called test and set the value for testing records so you can always use as your own dictionary set and this avatar specification which i show uh sorry avatar which i showed you earlier is one the specification just using this text record with the key called avatar and we still haven't fully formalized this this whole format uh that's why it's in the just suggest of the uh arc net which is nick johnson who is the founder of ecm name service but the basic idea is like this is my my is ens app page that you can see that it says eip155 column one is a chain id uh basically which is main gap and then slash erc721 or 1155 then it puts a contract address of the collection of the nft then token id 9421 so by doing that it basically contains the full information about the nfd so from the app level you can actually basically figure out whether this token is owned by this address owner optima is so by turning that into the code it's going to look like this that uh yeah so fast you get the result name owner and the one yeah one important thing is so quite often most of nft has token id as some random number you know one like punk 235 or something uh in our case our token id is a label so if you say hash of the label and count into the integer so first you use the library called uh okay can neck two five c basically cha cha two five six and uh but like you hash the uh for example if there's a name italic dot is you have to be targeted then you turn into the integer and you get the token id and by looking at the because it's just a uh ens is another seven to one contract if you have checked all now that token id you can figure out whether he's the address is the owner of the token now and but by doing this all you have to write five lines of code uh we have a metadata information of our ens eth name as api so if you go to metadata.ens.domains and i think you have to put the chain name like main name slash out the slash is meta you can find all the information related to ens as nft including whether it's owner or not uh so that's you could use make use of this api to do something in your hack and also if you go to metadata.esl domain stocks there's a api documentation so you can find more detail about the spec and i think so that's it for the avatar and i have 10 minutes left so i'll just go through these upcoming features and so fast one is called subdomain as nft and second one is about integration so this one is also known as name wrapper so all the other or main specifications i mentioned that's you can't say avatar to any any domain including subdomain by the way subdomain means like for example uh eth is tld top level domain and secondary is like for example is i can as an owner of matokundo is i can keep creating a sub domain like food.is part.is and then i can create some sub domains important thing is currently only mateokundo is is nft in one collection but subdomains are not nfts you can do it for example uh decentraland the decentral avatar uh has a i think you know his name called dcl.east and this year is has uh avatar name so i think i have like dcl.east and this subdomain is also uh nft but you if you want to do that manually i think what you have to do is basically your ukr nft collection as a smart contract and then when you mint you also have to kind of call ens registry to create subdomain as part of the mint so you have to kind of do it uh write its own smart contract which you can do and i think if you want to see the detail you you actually go to the uh controller of the dot is and if you go to easter scan you can actually see the source code so you can read it there but uh name wrapper is kind of ways to ultimately that like if you wrap your name for example is any uh subdomain underneath automatically becomes uh nft on its own so that's a new feature it's actually we've been saying new for a very long time that this contra has already more almost complete and the audi is complete as well so we are just waiting for the us to integrate uh what deploys the contract and our to and integrate with our front end that's the only reason we haven't done it yet but it's pretty much there so if you really want to i think yeah there's one product called sysmo i think they actually test deployed by themselves so if you have brave one we want to try out there we have a replica ens contract which has pretty much all the contrasts related to ens and if you go to wrapper there is a contract there so but you have to deploy by yourself so that's a subdomain as nfd second part is called l2 integration and we used to call it during but we rebranded to ccip read in partnership with the chain link so now the wrapper is in and github.com smart contract kit slash ccip read and i don't go the full detail but the idea about the ccib ring on the our approach is so that uh you know the resolver i mentioned that if you're the owner of mateoku.s you can change resolver so the idea is we provide a new provider called ccipv provider or something like that by doing that this provider resolver currently it returns the ecm address but we our proposal is for this resolver to return that uh http and call gateway where you can call that gateway and then gateway that's the data on your behalf and which if it's l2 uh you can use that information to verify the state on l1 and then the big picture idea is that like yeah we don't pick you the winner yet because there's so many like chains coming up so it's going to be you who decide okay i want to issue sub domains under arbitrage then like you i was i mentioned it as i read it because radioactive announced using arbitrary then you set the resolver of the reddit points to arbitrage and issue some domain underneath whereas for example like dydx who's already in stock where they if they want to issue a sub domain they set the point resolver of dydx to go to gateway which they get the data from starkware i would i'm we are all talking to all these like optimism of travel stuff where we're all talking to them like how we can work together it's soon already yet but we're working with them and so that like you know you can pick uh the l2 of your choice so that's a big picture this one is a bit slow we try to have something out by the end of this quarter uh but like yeah i think if you want to get up to speed uh yeah ccib read wrapper is where all the information is and i think just for the recap so we have a b for more information uh you can check medium or yes you can follow uh twitter yes domains or chat ens domain is our discord url and the es domain is our website thank you very much okay so we i have two minutes left so maybe i don't have time to answer any question or i might be able to i think there's no yeah comments on the youtube section so okay um i've also saved the zoom chat so i can um post a lot of these questions in the sponsor ens channel for youtube yeah um maybe you can just answer the first question um in the chat and then i will have to close up the session because the next workshop is yeah okay so is uh in the back end is this a simple mapping from name hacks address so i think this i kind of answered the question like it's like a there's a registry and a resolver so registry store the name and then another smart contract and the smart contract resolver smart contract is in charge of returning address when it comes to layer 2 is going to be there will be another step up like a resolver points to a gateway url and the gateway is in charge of retargeting the data okay yeah that's it great thanks so much makoto um i will relay these questions in the sponsor ens channel so if your question was not answered on the workshop today um it will be handled in discord uh thank you so much for the really great session um and i hope everyone has a really great day 