foreign [Applause] [Music] so I'm Jessica I'm the developer Advocate at Xerox Labs um so today um we'll be talking about building token swaps with the Xerox API so to start off you know what is token swapping in this world um if you've ever been to a DEX aggregator for example matcha here if you're making a trade from with to die um you might be wondering you know how is it finding me the best price in the back um some other use cases for this could be perhaps you have an index fund so for example future is one of our projects that integrate with us every month they rebalance and so in order to find the best price they use um they use our API to do the rebalancing and finding the best trade-in trade-outs other applications include wallets and portfolios so this idea of swapping you know it's a kind of a little building block that can be plugged into a number of different applications so at Xerox Labs we cover several layers of the stack so starting at the very top matcha is our front-end user application um behind that is the API and this is what powers a lot of the other projects that I was mentioning and then below that is the protocol so this is a set of smart contracts open source smart contracts that handle the trade settlement and I'll dive a little bit into each of these layers so for the remnant of the talk just kind of overviewing we looked at with Xerox dive into how it works and then I'll specifically talk about using the swap endpoint which will be the uh what we're sponsoring prizes for at this hackathon and then sharing some resources that will be useful for this hackathon um so overview of ZRX um so for those who are not familiar with our project um essentially the thesis is that all forms of value We Believe will be tokenized um and we've seen this um expanding more and more from um derivatives to to physical items as in nfts um you know expanding into many other forms of tokenized assets and as this Market continues to grow there's a lot of fragmentation not only across different chains but you know across just different use um sorry across different chains um and also you know we're looking to bridging in different layers and so this just means more and more fragmented liquidity um across this whole ecosystem and we all know that markets hate fragmentation so how do we make this simpler for applications that are trying to build the best applications for their users um so we think of this in the way that um in web 2 there was a standardized protocol so HTTP that standardized the transmission of data um and in this way we think about web3 so we're standardizing the way that assets are transacted in this world um and so kind of the high level mission is to create a tokenized world where all assets can flow freely and so here's a bird's eye view of the Xerox ecosystem um so for those who come from a more financial space you might have heard the terms makers so market makers and takers um so we look at it into like two different parties that interface with our API so on I think you're right are the makers so these are parties that are providing liquidity um liquidity into this ecosystem so this can include automatic market makers such as uniswap Sushi swap as well as private market makers um and then on the other side are those takers so they're searching they ping the API and they find orders that match what they need so this can be wallets coinbase wallet uses us metamask wallet rainbow wallets exchanges we also have capabilities for nft swapping capabilities um but I'll primarily focus on erc20 swapping capability for this talk and we do this across right now I think eight uh different evm compatible chains and so we make it super easy you know if you're looking to build on a polygon we have that support um so like let's dive more into than how does Xerox work so we saw at those different layers right um the protocol which is the Smart contracts the API for those who want to build nft swapping capabilities we do offer an nft swap SDK but the focus of this hackathon is on the API and those applications above um so the API specifically again how it works is we're aggregating across these market makers um so whether that's professional market makers who provide RFQ so requests for quote liquidity um as well as a number of other um other sources of liquidity the API does various routing so it might Source maybe like the best trade is actually through a number of different hops or maybe through a number of different sources at the same time we also factor in gas costs and this is all done behind the scenes and then these applications you know can easily leverage that without having to do that work um on their own so specifically when I'm talking about these orders like what does an order look like so here's a super simplified um transaction um happening so we'll see the market maker so I'm gonna let the gift restart so the market maker here creates an order so here they're saying you know I have this intent of either selling or buying this asset um they create it they sign it and then they push it off chain and then once it's off chain um our API can aggregate the liquidity from all these different market makers and then when the taker finds one that they like they pick it up and then they sign it and then once they sign it they submit it on chain and then once it's on chain we our smart contract autonomically swaps the assets between the two the two parties wallets okay so let's dive into the API swap endpoint specifically um so you know we've kind of seen this Paradigm like repeated throughout the presentation so API is aggregating aggregating liquidity sources um and our API just the taker only needs to make a really simple HTTP request um and then from there the HD the API returns this breakdown of the sources so for example the trade the say the trader wants to trade 1500 die for each perhaps the best price is 15 50 from balancer 25 from Xerox liquidity and 25 from Sushi slot so this is all just bundled together and you know from from the taker side they don't need to think about what's happening and then the response that the taker receives um if you're using any web3 Library you can easily submit that directly because it's just a bunch it's just a Json object that has all the params that are needed say for uh web3 send transaction um so I kind of mentioned the API like very high level but we have three three endpoints that have that are of Interest I will talk specifically about uh the quote one here so quote um for who I guess I should start off an audience like who has done web development before okay okay nice so good um portion of other folks in the audience so this um this request probably looks very familiar to you um so what it is is we're simply breaking down so we're simply submitting a quote to buy die for weef so if we break it down um It's relatively straightforward so the first portion is saying like which network we want so we'll have different networks and you can see a list of on this one specifically for each mainnet the next section is for the quote request so as you'll see swap quote so we're asking for a quote the next one is uh which token that we want to receive in this trade um so here we said we want die and then we're asking say we want to sell weath in this trade and then into some in this uh situation we're selling um I think it's 100 oh sorry one week and so this is in the base unit of the cell token and so if you make that query safe you know from your browser from just like a coral request here I'm putting it in a postman um you'll see you get this Json Json object back and you'll see here what's uh what's in that object you'll install the chain ID up above here it's looking at the different sources um you'll see at Sushi swap proportion is one so this trade was best 100 through Sushi Swap and then as we continue down uh we'll see some other parameters that have are of Interest so you know make your token take your token some other um some other data that's that's necessary for making a transaction and so it's yeah it's super straightforward you're just making those HTTP requests and then you get the you get the you get the values that you need to submit that as a valid transaction um so three simple steps to to use the API and point uh one for those who have not used this uh sorry sent a transaction before um you'll need to set a token allowance and this is meaning we are allowing our contracts to make that transaction for you because as we saw on that gif earlier you know we're going through the protocol and it's it's making that Atomic trade so it's a pretty standard practice and we have some code Snippets to help with that if you have any questions you fetch the swap quote which was the quote that we saw earlier and then you're just going to assign that transaction with your favorite webflow Library um so in code what it looks like is the first couple of constants up above um you might be getting that from the UI so up above where we have the die um the eth you probably get that from the UI um the next section here is the setting the token allowance um and then here is the fetch fetch swap quote and so that's what it looks like in Json if we're using certain um certain libraries to make our lives easier and then lastly we're just using web 3 to send transaction so we're taking that response and then passing it in and then from there it's it's uh it's a submitted transaction um onto the blockchain okay so I just talked about quote um but there are two other um two other endpoints that I want to call out so price I would recommend using price if you just want to query for uh query for a query for a quote so think of it as like the read-only version and I say that because when you use quote uh we're pinging these market makers so you know they have an intent and if they're if we say hey there's a taker on the other side that's interested then they're already set aside this order for for the taker so we don't want to keep pinging market makers um with quotes and then they keep setting aside orders um they're gonna get frustrated there's gonna you know it's gonna block off liquidity for people so if you if you just want to show like a a uh show a price to your user um use price first and then once it's committed then use quote and the the params for that are almost identical you just take a look in our documentation and then Source uh you can see all the sources for a particular Network so yeah it makes it easy to see like where um where we're sourcing from and we're continuing to continuing to add liquidity sources uh for for all networks as well um so for those who are building um there's this tutorial in our documentation it goes through step by step exactly how you could build a token swapped app so very similar to our match adapt um it covers you know how to query a token list so for example if you go to any any swap interaction you know your user can pull up a list so using coin gecko for that and then walking through how to use the endpoint token allowance and then connecting that user to metamask so their trade can be submitted so highly recommend taking a look there if you're building um yeah lastly then is just kind of like why use ZRX so it's I think a lot of our teams that integrate with us they think it's well a lot of what they've said is you know they like that we specialize in this in this field and so it takes the burden off of them um so we have some stats here um you know 99 uptime uh two percent revert rate which is 10 times lower than our competitors and then 1.5 second response time so just making it really quick for uh our integrators and like less on the I guess stats side is some like interesting features that we offer so um for example if there's uh if there's positive slippage meaning when there's a trade being made if at any point um the user could get a better deal um well we don't collect any of that we actually give that back to the user um and so this is kind of a unique thing across Dex aggregators um so we we definitely have our users first so that's a big point of ours and then similarly um slippage protection so baked into our API we have heuristics that look at How likely it is that a certain trade will be attacked by Mev and if it is then we route it away so you don't even need to think about that so it's yeah it's baked into the API and if you want to learn more about how we do that um then yeah I'm happy to talk with you about the data that our team has done to make this in um lastly so we have continuing to build out more and more tooling for teams that are using our API uh one including the Xerox Explorer so this is like a proprietary dashboard for teams that use our endpoint um you can see all the trades that are going through your uh going through your your project um you can like dig into the sort of Trades that are happening um and yeah it's really like it's powerful for for projects and their data teams to have this information um and yeah we'll continue to build this out even more um so specifically for the hackathon let's talk about some resources so at the hackathon we'll be offering three prizes uh so rather open-ended we just want to see how teams are using the swap endpoint um and specifically this is for erc20 trades um and so we're offering five thousand three thousand and two thousand um so here are just some project ideas but you know happy to brainstorm some ideas with you you know we've seen a continuing growing number of defy applications um and there's a lot of different novel use cases Beyond again just the basic portfolio and wallet um as we're expanding more into like retail user use cases like how how can we um like integrate this more say into index funds um even like um like what's it called uh what other things called like gift cards perhaps transactionals um and then again marketplaces wallets um tooling in-game currency um I think is interesting so say you have an experience you don't want to push your users off of your platform you want to you then have the capability to keep it all in-house right so say they're playing a game and you they need to make some sort of trade in uh within the apps then you you can customize that your app can actually um earn revenues from that directly as opposed to like pushing them off to a third-party Exchange and then yeah just whatever you can imagine um here are the judging criterias I'm sure you've seen this um you can also find this on the website so some things I want to call out are um if you could use yeah oh sorry making sure that you use the affiliate address parameter um so that's just a parameter that links to the wallet address that's related to your project and this helps us be able to help generate that that dashboard for you um like other things looking at you know technical information implementation um how creative and adoptable is this project um seal so on the generating criteria side um you've oh sorry these are some of the requirements and again you'll see these on the website um so just making sure you have the description um public repo and then if you have if you could put together a short video to just explain your project I'm sure you're doing this for other projects as well uh so not not much new stuff um and then lastly I will uh share a QR code later to links with these resources so get docs and GitHub repos if you're interested okay um so this is last slide this is just a slide for this deck if you need any resources um but yeah happy to stay here to answer questions and thanks again for taking the time to stop at this Workshop 