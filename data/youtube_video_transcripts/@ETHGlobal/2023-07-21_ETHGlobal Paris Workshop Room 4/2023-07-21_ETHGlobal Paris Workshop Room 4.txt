thank you thank you foreign foreign did thanks thanks everyone for coming in let me know if you can see my screen I think you can write awesome all right so I'm harsh founder and Project Lead of push protocol uh what does push protocol do that's what we are going to find out uh in this workshop and then we are going to dive right into coding so let's get started so what is push protocol uh well push protocol is your decentralized communication middleware using which any smart contract any protocol any app any backend can send notifications gaslessly add data directly tied to a wallet address why so because when you are interacting or when web3 user is interacting with the protocol they are interacting with a web 3 wallet address and therefore notifications or messaging directly to wallet address makes so much sense than any other sort of alerts and that's what push did we started notification for web3 back in 2020 from it Global so we eat Global alumni hackers all right so just to elaborate a little bit more why so daus they are not able to talk whenever governance proposal happens whenever anything happens around voting there's no way that you can notify those voters or wallet addresses and that's where push helps D5 loan liquidates farming epochs all of these things can be eliminated if you're using push notification to wallet addresses and it gets interesting like if you're even building a l22 L1 bridge if you are even targeting nfts anything and everything that we do happens from notification and that's what we want you to use in web3 as well yeah I already spoke about the solution but a little bit about it the solution is blockchain agnostic platform agnostic it's open yet secure and it works with your dabs it works with backend it works with smart contract whatever you are using all right right after that we realized that once you do notifications you have something that we use on daily basis which is WhatsApp and telegram right and that is messaging so notification usually happens from a protocol to user perspective or a one-way communication and messaging is what drives the social nature of uh our everyday life so think about it when we are talking on WhatsApp we are talking via messaging and we are utilizing notification for the engagement and that is the idea of push shot as well you can basically use Pusha to create support charts you can even token gate and create a very unique webkinative Dow chat or you can use it in your web3 social and of course pushat is available right now to build or chart the sdks are out and as I said the group chat enables public or private token getting transaction getting and so much more so yeah just by using these two tools we actually are proud to say that we transformed or terraform the web3 communication era we have from 2020 eat Global to now we have sent over 45 million notifications we have over 95 000 subscribers and over 650 plus integration some of which are on your screen we power notifications and messaging for a lot of partnerswap or socially uh get coin polygon are some of our favorites all right so what's next before we dive into the workshop what we have made a culture is to announce products around it Global because we started from it Global right so we launched push notifications at the global 2020 we launched push notifications or per shot at Eid Bogota 2022 next game push video which is like of his same level video that we launched at Tokyo 2023 and we have a very special video which we are sharing with all of you guys about what's coming next [Music] foreign [Applause] pieces right from each Global Palace 2023. uh what is push pieces well it's just like Twitter's pieces but for web 3 peer-to-peer supports any identity including wallets including dot polygon dot crypto profile any nft profile even and it can be access control which means that these spaces can be token gated and empty gated even when someone is listening or someone is talking so very very cool things that you can do with this and yeah just to announce our messaging and Twitter space launch Partners they are revised socially Xenon Lynch lens play uh these are playing around web3 socials and we would love you guys to check them out all right time for the demo uh the demo video is not accessible but that's cool thankfully I basically did a rework on my technical talk so we can get started directly from the workshop so all right how to do notifications right and before that I'll just uh put this slide out so there's a live workshop and live Discord Link in case you guys want to join that uh I will show it out to you guys again so you don't have to really scan it right now but yeah to get started let's talk about notification first so notification sending notifications is extremely easy all you have to do first is you have to activate your protocol on our protocol and you can the best way to do it is from that app when you do that we call you as a channel and I'll come to why channels are important but as you see when I go to staging.push.org and I'm signed in with a wallet address I see all these channels and chances are important because we don't want user to be spammed right we want users to be opted in to Notifications just like how web2 does it so over here when I go to channels I can see all the channels let's say I want to opt in to Ryan's channel it's looking interesting so I just click on opt-in this is again a protocol level event I'm just gaslessly signing everything you don't even have to come to the tab to do it you can do it from your front end as well but yeah once I'm opted in I'm all ready to receive notification from Ryan's Channel when you want to or uh when you have to send notification you have to create a channel I've already created one but you can if you go over here you will see create a channel instead of the channel name and you can just walk down the steps to create the channel it's very easy just five steps making sure that you own the Proto protocol wallet address that's all uh what push wants to know okay once you have the channel you can send notification from anywhere over here we are going to send it out from the DAP itself first and then we are going to go deeper and deeper so let's do it hackers and notification doesn't have to be just text you can do so much more with it uh you can basically also attach a YouTube link or a match link or encrypted transaction whatever you want to do so over here I want to attach a cat meme because cats so perfect so I'm just going to paste this as a meteor URL it will show me the preview I'm selecting broadcast broadcast means that I'm send going to send this notification to all the users who opted into my channel but it is targeted which is directly uh to a single wallet address and this subset as well which is I'm going to send a notification to a part of the wallet addresses that have subscribed but yeah let's do broadcast hit send notification just sign it gaslessly and you have the notification delivered as well because I have opted into my own channel so you can see it over here but not only that you can see notifications everywhere um where they are integrated so you can see notifications on the extension and very excited to announce that you will be seeing these notifications and chat on Unstoppable domain website and mobile app as well we recently announced enabling messaging and notification for four million of their wallet addresses so it's totally interoperable it's totally web free so yeah just try it out uh so yeah coming back this is one way to send notification but this is basically a manual way how to do it uh via program article so the first thing you need to do or your best bet is going to dogs.push.org and once you're there you can go to developer Docs and you have everything over here on how to get started with the channel push notification web 3 and you can even see how to send notification from so many other things like from a smart contract from push SDK from pushed app even using showrunners which is basically a scaffold framework that we have to get you going uh like in an instant and using subdraft as well because sub graph and graph and push we work together so let's see how to send notification from push SDK so I've prepared some of the things but one thing like only couple of things you have to keep in mind first you need to make sure that you're going to our GitHub and your cloning push SDK push SDK has all the examples about everything so it really really helps to clone it out that's what I've done and the other thing I've done is I've just created a boilerplate npm repo just in advance to show you how we can do cool things with the notifications and with chat all right so over here I've just opened the push SDK and what I'm going to do is I'm going to go to packages I'm going to go to examples backend node but there are examples of content as well and I am going to try uh hitting notifications and over here I have the example of all the things that the notification and can enable and how to use them the scroll is not working hold on hold on let me just restart vs code all right okay as I said notification index and yeah cool so we can see all the ways by which we can send notifications uh get Channel get subscription opt-in opt out all of these things are here but for this example let's let's try to first get uh my notifications so this is I mean internally the function has been named as get feeds but all I have to do is I'll just copy this function out and this is a boilerplate I have created so I've just imported the apis of push protocol import we use something called a captain format because push is the pre-agnostic which means that it can deliver notification not only to ethereum but to binance to Solana whatever and that's why I keep 10 because Captain defines exact blockchain address not exact ethereum address so eip155 is evm 5 is Googly and then you have the address and yeah that's about it this is just one line of code and once I do on sort oh over here yep I can see all the notifications that have been sent so that's retrieving notifications let's look at one more example from notification site which is sending notifications out so you know I think my vs code is a little buggy but yeah uh what we what do we want to do we want to send a direct payload to a single recipient so let's see that so yeah again extremely easy to do just one line of code a couple of lines of code this is because we want to do console log as well cool so I'm using the push API to send notifications if we want we can also have delegate signers which basically means if we go back to our Channel not only we can send notification from our Channel wallet we can add delegates as well and that delegates can be different wallet can can that can send notification on behalf of our Channel just in case you are using backend and you don't want the private key to be in the back end as well you can use this to add an additional form of security layer but for now we have already talked my private key so sign up will be the sign a channel type 3 is targeted notification again if you go to documentation you will see all the notification standards and how to use them so over here you can see notification standards Advanced and basic they will tell you like what are the types and how to use it uh you can even actually go ahead and Define your content to have bold italics or whatever but yeah check that out coming back type 3 is targeted we want to send a direct payload uh to the notification uh wallet uh push basically supports any storage protocol and that basically means that you can send notifications from Smart contract from ipfs from a direct payload or anything else that basically is what identity type is because we are sending it from not from a smart contract but directly as a Json we basically say that then we have notification title and body we will say eat global cats and hackers notification title and body and preload title and body they can be different but in most of the time people usually choose to have the same thing so notification is something that you see on screen and the payload is something that you see when you go inside any app that is supporting push sometimes it's different because it can be a video call right so notification will be someone is calling you but when you go inside that might be the face of the person or the real life field so that's why uh recipient I want to send this to the recipient which is my channel address only so I'll just do what you know what let me have the recipient yeah so recipient in this case because I'm just sending notification to me that's why it's the signer Channel dot address but it can be any address and environment should be staging so I'll just do this and that is it if I run and give it a few seconds oh yeah silent is something that I haven't defined so I'll just take this out run it again and yeah if I go to the tab yeah it's already here so that's how easy it is to send any sort of notification from any platform any protocol any smart contract now let's talk about chat which is also very interesting because you can do support charts you can even do AI chat something that we have done uh and you can do so so much more so for charts I mean I'm just going to chat over here and I'm going to chat with another person over here again user and spam uh controlled or has anti spam mechanism which means that when you send a chat to someone the first time they have to accept the chart request only then the notification are enabled and only them they can see it in the charts but yeah you have the request app that basically acts like an anti-spam mechanism same for notifications like if I send a notification to a wallet address that has not opted in it lands on the inbox but yeah over here let me find this guy I mean I can find this guy which is 792 so yeah take my click yeah cool so sending chat again very very easy to do I am going to go back to vs code example I'm going to go to chat and we have chat with this wallet to wallet chat we also have nft chart which means that you can have your nfts defined as a chat so your body can also talk to uh one another if you want to uh The Only Exception is that the nft chart has a different standard so instead of using eip155 you basically have the nft address standard again it's mentioned in the dogs so no worries around it over here we are just going to go with a normal wallet to wallet chat so I want to do a send chat example so I'm just going to copy this example out and I'm going to explain it to you guys and we work this out together so yeah thanks piece it out and yeah so first thing charts are very encrypted yeah charts are extremely encrypted so the first thing that we need to do is we need to make sure that we are first getting the encrypted chart address then we are doing a staging EnV file then once we have that encrypted chat pgp key which is what WhatsApp also uses that encrypted chat PCP key we put together a decrypted helper function and we pass that encrypted private key along with the address of the signer to decrypt it out once we have decrypted the PCP key we can send charts as as a normal user that's how we achieve end-to-end encryption so that's why you have double way encryption and encryption so yeah once you have that all you have to do is again send your signal signer is the sign the channel in this uh example we also basically did a sinus second account which is a random account that we have but uh what we can do is instead of random account let me just uh to uh copy on this account so receiver address is going to be eip155 and the receiver wallet address notifications has like the chain ID but chart doesn't have the chain ID just the blockchain uh which can be like chart because it's like evm compatible right so it's eip155 which means all em evm and then the chart address and over here we are just going to do staging and hopefully yeah console.log response if everything looks good this should work good so this is done and if I go to charge yeah I can see a chart delivered right now so yeah it's that easy to do just go to the backend node and you configure everything out we also have something called NX control which is a UI plugin which if you install and then you generate a front-end interface or you server front-end interface it works pretty well uh I think we are running out of time so I will not be able to uh explain that to you right now but happy to do it on our booth again the best way is go to docs.push.org and lastly if you go to npm uh you have all the examples of everything that you need to do and how to do it right uh along with the patterns and the expected response we also have cheat sheets which the girl in pink is basically having so yeah just have that and uh I'll Discord and our Discord is 24x7 so is our booth so yeah just scan the link and ask your technical question either on Discord or come to us and talk to us directly the live Workshop link basically takes you to all the examples that we have in the SDK thank you so much if you have any questions yeah got it so of course like those notifications are visible it can be visible on your dap as well so there's self content SDK functionality in which you can have those notification integrated on your dab content and because of that you can show it over there or you can have your app also have a pop-up notification which you can achieve by delivery notes but yeah because it's interoperable all the adapts that support push as well as like as you said Unstoppable uh dab and Unstoppable wallet also supports push right so as long as the users there your notification will be there and that's why we recommend that you add it to your dab as well yeah yeah hi I want to ask you something about this push notification for broadcast so as I see in the demo everyone can send a notification so is there any Wireless option because it can be used as a malicious modification so yeah got it so not everybody can send a notification like that's why you have your channel and only your channel can send a notification to all the users uh or a Channel or a delegated uh person that you have delegated can send a notification on your behalf so we are working like we are powering notification for uniswap and safe and so many more companies using this logic and because of that it's only uniswap wallet that can send notification to you no one can spoof it we also have like a blue verified tick mark which basically allows user to know that this is coming from a legit Channel and not a spoof Channel thank you awesome thanks thanks everyone thanks for coming and happy hacking [Applause] done ready oh sweet are we already on oh cool here we are hey guys uh my name is Jack I am head of crypto at a payment company called unlimit and uh today I'll be going over a little bit of the history of on-ramp since 2015 until now and also I'll tell you a bit more about what we're doing in terms of building a gen 3 on and off ramp um the reason why I think not a lot of people are going to be here today is because we didn't get the bounties sponsored in time so usually people come to these things in order to you know learn more about the API but we joined uh youth Global late so uh but it's all good I still think that we're a really good counterparty to work with so you know um I've been in this space myself for the past nine years so you know come to talk to me afterwards if you guys need any help with payments or banking but um yeah let me just go through this uh so unlimits as I mentioned is an OG OG payment company we are a principal member of Visa Mastercard and JCB and Union paying AMX and discover and also we have our own Swift Code because we're principal member Swift as well you can think of payment companies as kind of like node providers into web 2 payment networks because just about like inferior or Alchemy allows you to you know read and write into ethereum or any EVMS a payment company that is a principal member of Visa or master or you know being a an Inquirer and a processor we basically have read and write access directly into Visa net right you can think of like the Visa net mempool as a place where like the acquirers gets to support us to put in payment requests to the issuers and they'll just get more like analytics while is in this mempool so that's what a payment company does I mean there's many different types of payment companies point being that as an acquirer we're like directly at the source right it's like the difference between like inferior versus gelato or or uh or Morales right one is a note infrastructure provider the other is the higher order API for doing something on top so we are more like uh like an inferior in that sense that's like a web 2 node provider oh and now we are launching an on-ramp on top of our payment company the payment stack that we already built up so imagine if like stripe or like World pay or checkout launch like Moon pay or transact or ramp right that's what's happening we um I have this next Generation FIA on and off ramp that we're building on top of our own payment stack right there's a lot of efficiency gains when you do that because you know as an acquirer you already get basically the Best Buy rates and the best bank FX rates uh which are savings that we pass on to the users right so imagine if like a user went from let's say uh like brl to eth and you're using like the merchant on record that is transact or Moon pay that is based in Europe well every time that Moon pay receives a merchant settlement they'll receive it from like brl to Euro first before they convert the euro to to eighth right uh so so it's not about the transaction fee of like 2.9 plus 30 cents it's about the fact that there's a hidden FX cost in the Fiat of Fiat and then Fiat the crypto conversion that then is put into the spreads that is passed on to the user right so here we don't have that because we're in acquirer we basically get Bank rates like five bips 10 bips as opposed to 300 bips for uh for our crossbuilder FX settlements and these are all savings that we then pass on to the user uh in the form of uh better fees and as I mentioned at first as an acquirer you get to read and write directly into Visa which means you have better analytics for controlling conversion rates so you have like good conversion rates along with lower fees and just wider coverage anyways that was a little bit about myself and and uh and the company and the parent company but uh let's go through like today a history of on-ramps as I mentioned right where you have gen 1 gen 2003 and what the current kind of typology looks like uh so you know at gen one we have Simplex back in the days there was only simplex and then Gen 2 around like when D5 was born in 2018 we had uh wire Moon Patron Zach uh ramp and uh some other like local ones and then over the past couple of years things have been changing really quickly unfortunately instead of having like a Fiat Dell with like a standard API that allows every on-ramp to adhere to this API standard everyone kind of started competing and therefore fighting for the same uh market share within the space as opposed to having a standard API that allows people every developer to then just you know it's like saying if you're using Alchemy or inferior you're still using the same RPC API you're just changing providers you don't have an on-ramp space so I'll go through a little bit about what's going on in the Gen 3 or the current land for what should happen next so here's a form a long form from Simplex this is actually from 2023 and that just tells you kind of how much things haven't improved you see this very long form ux is kind of clunky right it's um I was trying to find a screenshot from 2015 uh through like Exodus wallet and BRD wallet but don't have it anymore they turn it off we're pretty wallet got bought by coinbase and uh I can't find like a 2015 version of this but imagine like a longer form that is basically uh you know not embeddable right and it's completely off chain because you have to copy paste your own address there's no wallet sign in there's no wallet connect right but at the time it was literally the only option right so you know let's give them some credit for being a Pioneers here in terms of uh a company that's enabled on-ramping in 2015 even pre-etherium uh you know but there was just a lot of problems obviously at that time with like high fees super low conversions uh huge problems throughout at the end of the day they had to bow out of the race because uh they could not compete with newer on-ramps at the Gen 2 level so you know they sold to another company called nuve which is like a Canadian payment company that bought Simplex um yeah and yeah so that's kind of gen one like I would say probably 2014 to 2017 the only option available there were some like other original ones like PTC Direct that's been around but um in terms of the b2b2c model I would say that you know Simplex was kind of pioneer there and and what we Define as on-ramps today and then around like 2018 you had like wire come in they raised like a series a like I was first employee at wire uh and uh we were doing like a lot of other stuff before this we were doing like OTC trading and like cross-border payments using crypto as a rail but when when D5 was born we realized that hey why don't we take our licenses that we have in the US with like you know Money Services business or money transmission license and let's offer that uh into the default ecosystem with non-custodial wallets and dapps to allow users to on and off ramp so we kind of like repackaged what we did because if you think of like what cross-border payments used in crypto or rail is is it's just like USD to usdc and the usdc to local currency that's like an RM and off-ramp together right so if you separate it and you say okay well instead of doing an end-to-end flow of like USD BTC and BTC to PRL let's just offer both as like one is an on-rem and one as an off-ramp so so we kind of repackaged and restructured uh the company to you know to become an on and off ramp for defy you know it was very exciting time at that time we did have an embeddable widgets you know we were the first to work with maker this was like literally August 2018 when when the USD to die rails were turned on right imagine that right like we're talking about like the first year of D5 and this was like pretty uni swap days in 2018 and we already had like USD to die which was you know phenomenal I think um and we had Apple pay like if you guys ever use like rainbow wallets and rainbow wallet has like an Apple pay checkout feature where it's not like an embeddable widget at all it's completely white label and it's like literally two clicks and you're done right that I still think that that's the best flow even though you know for some compliance issues you can't actually do that um but you know we were breaking things at the time in 2018 2019. um still there was like some problems once again due to compliance we didn't know if we can do D5 like for example like Fiat to like a meta transaction to so that you can stake into compound at the time like we didn't think we can do that as like a US Money Services business so so yeah so now you know Simplex is dead wire is dead and you know you kind of move on to uh transact right transact I have a lot of respect for what they do uh is the developer first uh company that just has really good tooling and they're all devs before they're payment people uh and uh you know they did build out like all the meta transaction stuff so like you can go from like Fiat to anything right literally like user Payson Fiat it goes to like a transact hot wallets and then there's like an approve and a loud but the function that basically interacts with any other contract through like a forwarding address that decouples the sender's address from the user's address so you can it's almost like you're it's almost like a pay master that allows you to pay on behalf of a user with the ease that transact purchases with the user's Fiat to then forward it over to the user's wallet in terms of like a staking like LP token it was ahead of his days I think in terms of this being done there's easier ways to do this if if we can adopt uh you know a construction obviously but you know this is all per account abstraction so the meta transaction stuff was really cool you know they were able to add more payment methods as well working with local payment companies to to add more payment methods right but still I think there was huge issues there because uh at the end of the day so far like every single on-ramp has very similar issues in that they are a crypto startup that got into the space very awesome people every single one of them but they're not a payment company so they you know had to pay higher fees they weren't in control of conversions because they received back some you know some read access from the payment company but they don't really know why they have no way of like analyzing that data Beyond like well you know they couldn't really fight it right so there's there's ways to fight fraud on the client side um but if you don't have control over the server side because you don't read and write directly into Visa then you're kind of fighting with like one arm behind your back um yeah so you know moving on from the second generation to like kind of where we are today there's a lot of cool stuff this is moonpay right here right so moonpay you know also iterated a bit more you know they got a lot of money from the VCS which arguably kind of screwed the industry because you you know you kind of give them 500 million dollars and they are now trying to become the only one but you know that's not how web3 works right like web 2 is like oh yeah let's back the winner you know Winner Takes all like web3 is like no we all should have collaborate we should create a Fiat Dao that has local on-ramps all across the world it has like distributed notes that can make sure they take care of those countries very well so you know I have my beef I guess with uh these web 2 VCS that gives money to web 3 companies and the influence how they think you know now they kind of Steal every non-custodial Wallace users by launching their own direct facing app right user-facing application so retail application and uh yeah you know I'm not sure if that's good for the space to to do that but um yeah for what it's worth you know they executed very well um well deserved round and uh also part of this kind of Gen 2 on-ramps between 2018 to 2021 right introducing new elements like NFC checkouts uh super well funded obviously you know pretty strong counterparty in that sense right they're not going to die I don't think you know it's not like sample or uh or wire or you know even transact are arguably only raise 20 mil when they should have raised 50 at least right not a not as strong of a counterparty when you think you know on relying on a partner and provider for the long run right Prime trust died as well yeah so you know I think you know moonpay for what it's worth is a strong counterparty but they do stereo users and they force like exclusively and uh at least from what I hear the support is not very good um and then these other kind of like Niche on ramps that are like nft only but are super like Tech first once again almost like transact in 2019 but on the nft side and just like offering really awesome ux and easy developer experience um you know and I think this was very Monumental this happened like two days ago where third web bought paper right I think that's super good for the space it's like you know like you can say that oh from my own perspective as like another on-ramp why would I say that's good because aren't they competing against me it's like no they're not this is good for the space period like we're not competing we're trying to go after like other users in uh in the world right like if you're only fighting after the current block of users where like there's so much rehypothetication happening Founders making money and stop you know Giga bringing themselves into building new stuff like it's super incestuous and it's a super small Fringe space like do you really want crypto to stay Fringe where everyone's just fighting over the same users or are you here to change the world and make an impact and actually onboard new users from the world outside of this Fringe like five percent of users that is us right like I think there's only 500 000 wallets right now they're actually active you know in spite of like metamask claiming 30 million wallets that's like maybe the amount of the Wallace that's generated but in terms of actual users there's probably only 500 000 or less of us right so how do you actually onboard new users well I think third web is doing God's work and that's you know they made it super easy from a developer standpoint everything is now like end to end from like standardized smart contracts to the deployment of it to the whole checkout process to you know the social login wallets um so yeah I have a lot of respect for third web buying paper um my marketing team made this a little bit wrong what I wanted to show here was like kind of like the aggregators on one side and then the exchanges and acquires on top and then the middlemen first movers in the middle and the local ramps and Dish ramps in the bottom right and what that is trying to show is to say that current landscape of on-ramps is such that it is so fragmented and we can think of it as like top middle bottom in the sense that you have a bunch of super big companies such as coinbase paid and binance connect right that are launching their own ramps right or PayPal and stripe and unlimited is not big but it's still an acquirer right it's like the difference between inferior and chain stack like inferior does a 10 billion API calls a day like chain stack does like 1 billion but inferior has like 10 Network connectivities so you know as an acquirer we have a lot of network connectivity um but we're not obviously as big as like stripe or PayPal but the main point being that you have a bunch of payment companies coming into the space that is launching an arm ramp such as stripe on-ramp such as you know Simplex with newbase such as unlimited crypto and then you have exchanges that's diversifying their portfolio of businesses uh you know some like they might have an exchange account but they also have Prime and custody they now have an on-ramp where you can log into your coinbase account in order to uh on ramp right so it's the same kind of b2b2c SDK right that's at the top now so super well capitalized teams uh that are exchanges and requires on top and then you have your you know middlemen first movers that got into the game four or five years ago such as Moon Patron Zach and ramp uh that you know I would say ramp executed the best Moon pay close second best but you know played the BC game very well it's raised a lot of money transact um you know I have a lot of respect but once again they should have probably raised more so those are the middlemen I don't think they have any more Advantage going forward I think they're all going to get squeezed out in theory in theory because because once again they're not an Inquirer so they don't read and write directly into Visa Master uh they don't they're not super well capitalized like Moon pays burning money again uh and they just their position it's not about the money it's not about like how much they raise it's about their positioning right their ass middlemen they're not a bank they're not an acquirer uh and they really only have a good Tech stack that allowed them to integrate with like a lot of other dapps initially because they got into it initially but but their positioning I think will become weaker and weaker over time relatively even weaker than the local or local ramps because if you think of like what a local RM does they they only serve that country right like loopy pay they're just in Brazil they only do picks they might they may only have like a team of like 15 right unit swab only has a team of 30. so you only stay a small team of 30. you don't try to scale to like a team of 500 150 you don't increase your burn rate you just operate a team of 15 to 30 and all you do is just that Regional on-ramp in that one country it could be Alchemy pay and APAC it could be loopy pay in Brazil could be whatever Regional on-ramp you know I'm advising a couple of African on-ramps to help them to think through that on how to become like a strong node right you can think of this as like social layer nodes uh where because it's a physical jurisdiction because they have to follow regular regulation locally so it's almost like a distributed social layer node for maintaining these on and offerings locally and I actually think that that's the best foot forward right there's so many applications there to you know for like FX for example like if DFX has all these different stablecoin issuers locally that use on and off ramps locally then you can technically like replace like a trillion dollar industry with how cross-border payments work uh and how much things like 20 trillion dollars per year like it's move across borders right and that's always been the dream but it's never happened like whether it was like Ripple or Stellar or you know what wire try to do in their early days with the cross-border payments using Bitcoin as a rail and what people are trying to do today with like usdc combining usdc with like on-ramps and off-ramps locally it just hasn't worked for a lot of different reasons mainly because there's a double transaction fee and a double FX right so if you're paying like 2.9 to on-ramp and 2.9 off-ramp and you're paying like some bips for the usdc to us or USD to usdc and the usdc back to PRL like why would you pay double FX with double transaction fee when you can actually go to a bank like transferwise or wise and use like less than one percent fees there because you can get like buy rates are like once again one to five basis points right so so but but if you do have stable coin issuers working with local on and off ramps and they're able to both together bring the cost down basically converting stable coins that one to one and having very low transaction fees then it does make sense to build such an international memo uh soon so so I'm personally more bullish on like local Rams doing this right and the niche ramps too like I think from a developer first standpoint it as long as they stay small and more lean in terms of being a developer first and not like undertake all of this uh like regulated payment infrastructure then like great you know you're more like a hard hat and a truffle as opposed to you know as opposed to like a coinbase and binance right so um so there's space for that too and then the aggregators right so it's like you know exchange acquire uh middlemen and then local ramp and Niche ramps right three layers and then the aggregator that can take care of all of that there's value in that there's new uh there's new teams I didn't put Poco app on here Poco is like a team out of YC that recently launched an arm uh aggregator they're really good too uh on-rampers the OG meld race last year a pretty good team um I think they're like from square cash and some other web 2 payment companies they understand aggregation very well um but uh but Poco is like really cool too uh so yeah so that's that's kind of where the landscape is today um you know I'm happy to be discreet with uh definitely come afterwards to tell me I'm wrong always love to learn um but yeah so that's kind of where we are today as far as landscape I just want to go over a little bit about us again in the context of what we want to build next right we're building a Next Generation Fiat on-ramp I'm taking all my failures at wire uh and trying to apply it here at element crypto you know as a principal member of Visa Master we definitely have a really good position to do this right so you know some of the things I want to do has more to do with like avoiding type of sign-in like avoiding double kyc because when you have like because if you think of like what happens with every on-ramp is like they all have this email sign in and then they all make it do like a kyc and then they all like put you through this like form where you have to fetch the quote and put in the source amount desk amount right a lot of that is redundant because like if I'm already signed into like web3 auth or like magic link or any other social login why do I have to sign into the on-ramp again right that's literally like like not native why don't I just or if I'm already signed into my wallet why can I I already signed up with ethereum basically why do I have to authenticate into this other app right it's almost like an app once again but it shouldn't be an app it should be an embedded it should be abstracted so so that's one module I want to work on in this near future as head of crypto here I want to avoid double sign in right another thing is like double kyc is like a lot of apps have kyc already they're using like with Persona they're using with like sums up right some stuff has an API for reshare kyc Bank said that this was very awesome build uh you know like if we if I'm able to basically say let's have like a multi kyc provider architecture where I can intake like 10 different kyc providers but the schema still falls under my own you know compliance regime to make sure that I hold the pii of the end user and it still satisfies my compliance requirements then great then you know I'm happy to use my partner's kyc vendor uh as my own kyc vendor right so and now you can think about the UI where it's like okay cool there's no more sign in page there's no more kyc page you know and and you're abstracting away these these Pages more and more it's for a better ux right you do like a fresh quote API instead of like a fetch quote UI and everything is now gone and all your land on is like a stripe like payment form right that's kind of the goal right it's like the final line between a fully white labelable API versus like an abstractable widget and that's the line that I'm trying to find for uh we're trying to Define for on the cryptos on and off ramp I have a quick demo to give of where things are right now but I think I'm out of time right so um or maybe two minutes and we can take some questions I guess but uh if you just take a look at this right this is what I mean authentication right now is just email for six digit code it's BS I hate it we're going to replace that with like a multi-sign in process like with a web 3r the magic link so that you can avoid double signing right payment methods are already in there right this is what I mean I gotta slow this down so so once the authentication page is done all right if we're able to save the card token and the user can sign into the payment method then this is all it should be is you should just land on the payment form because the kyc is done in the back end right this is abstracted away you didn't see this because it's not there you went from auth directly into the payment form which is literally the easiest flow that you can do because here what happened was the kyc is abstracted because we received the firm the partner who sent a kyc token from the provider from the kyc provider right so then now all you do is land on the confirmation page in the payment form and uh and you're able to finish a purchase flow in 40 seconds right and that's what we want to do we don't want to be in the mix we just want to get in and get out right like user generates wallets we help them to fund the wallets we do the performance the the fraud checks and all that 3ds2 or any other uh fraud checks that we do on our own back end and you're done you can finish the whole flow and like literally uh 40 seconds right that's the goal at least and I think I am done so happy to take some questions [Applause] yeah good hi um how would you uh relate to this uh new um you know this pay solution yeah for sure I love noses pay uh you know what noses pay did was they basically took their like you know account abstraction stuff that they have uh along with like a partner called monarium which has like a stable coin called Euro e right and then you can basically convert anything into the multi-signant approvals and you can convert anything 2 Euro e and then the Euro e becomes Euro and then now you can use that Euro on a card you can think of that as almost like an off ramp right because you're going from like crypto to Fiat but you're not off ramping to like any bank account around the world you're not offering it to any e-wallet or even cash you're offer them into a very specific branded card that can only be issued to residents of Europe it's still valuable I still think it's a great product I think the fact that they are offering it as a service in terms of letting other teams use it it's really great right once again this is the difference between using like Alchemy and inferior versus gelato and Morales because if you wanted to you can go to Someone Like Us who is a pure play web 2 payment company that is an e-man institution in Europe and you can say hey Alchemy of web2 can I get this card issuance that we have a banking and service API we're able to you know give you that like Fiat only system raw right or if you say hey I want to just use gelato I don't care about that I don't want to deal with you know Fiat systems I don't oh I just want to you know only have this developer tooling then yeah you would you know go to gnosis pay and just use them to issue any brand of cards yeah well first of all thank you for the very informative talk yeah um I just wanted to ask how do you see the path towards off-ramp as well as like the the asymmetric step here because it is a little bit more complicated and uh sometimes it involves more hurdles yeah yeah I think first and foremost you need like people on the ground in every one of these countries who can work with the local regulators and local Partners to just get that web 2 node set up first right that's part of the reason why I'm here I've been in the crypto native space for the past nine years I decided to come across the chasm into web 2 because in order to win this war it's like there's two ways to fight this war right you fight uh on the crypto Anarchy side right stay in the crypto native space or you can shorten your horse in uh and become like a general and just make sure that the war is going the other side's way so you know I'm putting that on camera but whatever's you know um you know I'm not suicidal but but you know point being that I think uh those kind of Partnerships are important right like you have to have local like payment service providers and Banks sponsored Banks working with you first and foremost once you have that and you know that you can scale so let's say like 100 million dollars per day in volume and you won't get flagged okay that means that that node will run with like five nines right it won't go down like that's the first thing and then this and then I think that all the on chain stuff is actually fairly simple like there's actually so much like inner Enterprise like level tooling now to use like a one inch API to swap to anything you can use lead fire and Bridge anything everything comes back to a stable coin and then you use the local stable coin issuers whether it's Circle whether it's you know straight FX go to dfx.finance and just talk to those guys and they're you know they can help with a lot of that right but but yeah I mean the off-ramping piece is first and foremost anything back to stablecoin and then stable coin to that local currency right and so I think the on-chain modules and the unchain uh touring is already there what's not there are people I guess like me that's that's crossing the chasm to make sure that you know you can take care of teams from top down uh so that's you know those rails are stable those notes those Web Two notes are live for years to come uh instead of falling one by one like Prime trust like wire right yeah yep thanks guys [Applause] hello does it work all right um perfect uh thanks coming uh welcome to slope mastering that of sloping yummy data if it doesn't make sense to you don't worry we'll proceed to explain what this is so one query one query is all you need is the claim that I'm giving in this talk where if for you front-end developers I'm claiming that you can extract all the data you need for your front-end application in one query so a little bit about myself I'm a devro at mantle.xyz where Layer Two they just launched last week feel free to check us out mantle.xyz and those are my socials so the number one thing for every dap is the front end I mean that's what your users interact with that's what your users see no one really cares about the back end it doesn't really matter how it organizes logic as long as it uses its aesthetic to the user the user will come back if it loads quicker so the user might come back more often so Albert Einstein the react.js founder famously said that front end is just a wealth bugs reason being because front end requires a lot of State Management you want to query data a data 8 and then you use data a to query data B and use data B to query data CDE so there's a lot of State Management involved so I'm here telling you that by querying all your data in one query you can avoid Auto State Management and reduce the number of bugs we'll go through like a simple uniswap case study and everyone here I assume is familiar with the unit swap model you put in some tokens and you get out some tokens so in this example we're swapping maybe say 10 if to usdc on the surface it sounds very trivial but behind the scenes there's actually a lot going on so um the front end is kind of anticipating how many if you want to swap what asset you want to swap for in this case it's eve how much of the asset you want to swap in this case it's 10 how much of the asset you want sorry which asset you want which is usdc in this case how much are you going to get out from the swap how much are the fees on the network in USD as opposed to if and what is the price impact do you have enough Eve to complete this this swap so and so on there's a lot of complexity going on behind the scenes and a very simple simple example of how one might approach this data extrapolation is with this example in this example whereby you get the if a address and from the if address you get the user's balance when you get the user's balance you can get the user's die balance and then sorry if balance or die balance and then you can get the amount of dye that the user will get swap out given this data this is terrible one mainly because this is blocking you're doing uh to get the if balance sorry to get the die balance you first have to get the each balance and so and so on so this is incredibly bad because it's blocking a naive approach to do this is paralyzing all these queries into a promise so you might call a weight promise.org and query all the promises this is still good this is good this is better but you're still doing three parallel queries and I'm here telling you that you can do any amount of data you want in one query so yeah we can do all of this in one query and so we can do that with multi-call 3. for those of you who don't know what multicore3 is it's a smart contract that is deployed on I think 106 chains all using the create two op code so it's on the deterministic address and so you can use the same address for all 106 um all 106 chains traditionally without multi-call 3 how your dap would interact with the blockchain is by by issuing a separate query for each data extraction for example die.balance off uniswap dot swap amount out and the balance of eth with multi-call 3 is actually a smart contract that lives on the blockchain so when you call multi call Dot aggregate you actually call one query to the smart contract the smart contract then queries all the other relevant information needed from the other contracts so that way instead of using three queries you can use one query the problem with multicult 3 is that it is quite the Bose by default if you're using etis which is the canonical Library these days to encode and you have to actually encode and decode your function into a very specific format so it's not very user friendly it adds a lot of complexity on the front end but it allows you to achieve querying parallel multiple queries in one query luckily Vim I'm not sure if I'm pronounced this correctlyum from Paradigm dot XYZ a new JavaScript library supports Multicultural encoding and decoding out of the box um if you guys would like to check it out I think on the developer docs page you can uh you can see like there's a specific provider for the multi-cultural provider provided that it's deployed on your chain so that's cool multicult 3 is good but it's not good enough because it does not support dependent data and what I mean by dependent data is that it does not support the cases where the inputs to the previous query sorry to the current query is obtained from the previous query in this case we have a vault address obtained from a yield Optimizer we would like to then query that address to get the bounds of our vault address which is simply not possible with multicult 3 because it is stateless yeah so we can't do that multicult three however if we combine two little known hacks on ifcall and solidity we can actually achieve and we can actually achieve arbitrary arbitrary code and arbitrary business logic in a read-only fashion and let me explain a little bit more so for those of you who are not familiar with Eve call Eve call is an RP Json RPC method that is used behind the scenes every time you query every time you use a read-only function for example if on the front end I do die.balance off user address WhatsApp actually be happening behind the scenes as I said I'm calling the Json RPC provider if call and it's providing it with a transaction object for example an address the two address the data blob and then it will return me the data so that's what's going on behind the scenes a little known fact is that you can actually use if core to query data from mutable functions an example of this would be the uniswap quota so traditionally the uniswap quota is a read as it is a write function it's a mutable function for example the function quote exact input is external it's not external View and it's not external pure what that means is that if you're using it based on the ABI loan each query will cost you gas but you can actually do it in a view only mode and achieve the amounts out without without sending a transaction so you can actually query traditionally read functions in a read write functions in a read-only matter so cool that's cool we can read on write functions so what okay hear me out so what if if we hijack solidity and made it return data in the Constructor and write the data extraction logic in the Constructor then we use if call to perform a read-only contract deployment to extract out the data we want does anyone get that that means what if we write average we can write arbitrary code because traditionally solidity does not return any values when you create a contract so what if we hijack The Constructor to force it to return some data and while deploying that contract we get back some values okay again let's recap okay what the dog said for one we force the solidity Constructor to return values two we write out our business logic in the Constructor AKA writing out arbitrary code three we use Eve call to quote unquote deploy the contract and upon deploying the contract it will our Constructor will execute the business logic and return us the data because we've hijacked it to do so so this is how you force the Constructor to return values we we need to go into assembly mode now we have some kind of arbitrary data that we want to return return data we perform our data extraction logic or business logic AKA arbitrary code in the middle section we API encode it and then we force we write some assembly to force it to return some data and that is how you force a Constructor to return values next once we've written a contract to pass our custom business logic we can use ifcor to deploy the contract and by deploying the contract with provider.call which uses if underscore call behind the scenes we're able to deploy a contract with custom business logic in a read-only mana and extract out our data the only thing left for us to do now is to format the data into a into it's it's relevant data types for example u in 256 strings or bytes depending on how you you packed it and that is how you can query all the state you need for your front-end application in one query um some parting remarks is that you know if call actually has is actually really powerful um it has a lot of uh undocumented not well not well-known features behind the scenes such as the state override set where you can actually overwrite the the code or the storage slots behind the scenes you can also overwrite the balances or nonsense of things it's very very useful when testing things gef the um the most popular ethereum execution layer has a graphql server behind the scenes so you can also extract a lot of data if through graphql instead of the traditional RPC methods uh yeah I have a proof of concept on my GitHub it's uh github.com libbm Slash if call abuser that has a proof of concept there if you guys like to check it out yeah thanks for listening any questions oh yes yep yeah I realized I went a bit quick here have you done any uh benchmarking to see what the actual performance improvements have been I mean this is more like uh it's well it's the same I mean it's all on latency you you're offloading the computation to the to the ethereum node so you're not actually on speed wise it's the same because you're not actually doing any additional uh the the amount of data isn't that significant yeah it's kilobytes unless you're unless you're on like I guess 2g or 3G it might make some issues but I think tradition on on most apps it shouldn't matter yeah because there's a contract size limit of adding a few kilobytes are there any other protocols using this in production right now no I'm using it yeah awesome thanks thank you are we on yes hello everyone uh welcome to the workshop to building on ZK singhira by using Fame Masters I am yeah let's start today we'll talk about paymaster use cases to build in ZK sink era and the General agenda would be all around use cases right as we are here at youth Global and we'll attend the hacker the hackathon we are trying to build something that is Meaningful and and the meaningful part would come to the end user how we can onboard the end users to blockchain or web3 and how can we make their lives easier how can we lower the barriers for them to get started so the agenda includes us talking about what is pay masters and why is the reason why is pin master so important for us at dksync and also for our mission uh the features that Paint Masters enables and how is that directly connected to the ZJ sync mission we'll go through the examination of a paymaster how we can build using Paint Masters feature how does that look like on a smart contract developer perspective and then on the front-end perspective what are those key components that connect things together and then we will brainstorm we'll go through each of you guys to ask you questions such as what do you want to see what do you want to see in the next three months if you're here and attending another hackathon if you are like a hacker or a sponsor or a partner that's not important what do you want to see being built what do you want to see for your users to kind of experience when they get on web3 before diving in I am Albion ahoti and I am a developer advocacy person as you guys think uh under deveral team mainly focusing on hackathons and workshops and things like that but to give you an insight for the team we are growing our double team with engineering members so we are very much looking forward for the next three months to provide tools and use cases for you to use on the way while you develop on zksync and yes we had some other conferences that we introduced a lot of things and one of them was the in-memory note so we do have an engineer down at the booth if you want to go and learn what is that and how you can use it Go and search for Nick because he'll walk you through that um yes so uh pay masters and how is that connected to our mission at CK sync is that uh ziki sync is a layer 2 protocol uh trying to lower the barriers and increasing not only the throughput for your transactions but we really want to build on the foundational values and those are the self-solvers self-sovereignty uh freedom and decentralization but not just that we want to have it not just for a small group of people right we don't want to go through the world attend hackathon attend crypto conferences and be free and meet those people once in three months we want all of the world to experience that so and yeah that is connected to the freedom that we want to achieve from a human perspective and then pay masters what can do what can free Masters do from a user perspective or a developer one when they start to build things is that you have the opportunity to remove the gas fees uh in different use cases it depends on what you want to build it depends on the creativity and the perspective and what exposure you were having earlier on in your careers when you were building tools or applications but it's very connected to the application layer of like how do we want to bring those users and use web3 this is one of the ways and we really are relying on this big feature as you can sing that and we want to make it big as it is because I feel like no one is knowing because there's a lot of noise going around Master features or you can pay with any token that you want and then uh yes those are very basic right get those nfts like allowing them to get access to something that is very exclusive or not exclusive or whatever but we were thinking for some use cases that can be like as a developer for the developer experience walk through it's like how can we make developers not suffering to going to each of the POS possible faucets to get some Gorly eat or whatever how can we make their lives easier and we want to build a tools that can just remove the gas for people who are deploying through the tutorials that we have so that is one of the templates that we want to do on our docs for the next three months with our team and I'm very happy to share that and yeah we are on the way so yes uh basically imagine all of the innovative ideas you would want to build on uh ethereum and then uh in getting those users to use your idea without the need for them to pay something with their money so it is based on in incentives and uh it's a very big one and on the code level like what will you see when you go through the uh big example that we have the hello world example that you will see to get started with pay masters is that those three sessions are very important um this pay masters is a smart contract that's it and you can Implement any logic that you want to implement to remove the gas fees and then those two functions which are the validate and pay for pay Master transaction and post transaction are important the first one is the most important where the logic goes in and then we have the built-in flows that are the CK sync era that provides two flows approval based erc20 tokens and then the general for the others uses free like like Hello World example on the side that shows you about yeah when you go through all the custom pay masters tutorial on the docs it's very long but don't get distracted and don't get lost because there is flight at the end of the tunnel and it's not that hard and then on the front end the integration side you will deploy and fund your pay masters via your front-end or application perspective and then based on your logic of who will get the incentive part to remove the transactions for the users then you will add that logic there and then you will just fund your payment Master contract via front end to the back end that interacts with the contract there is a params encoding which is like pay Master payload using get paid master params from ZK sync web3 library and then you have the overrides to send the encoded pay Master parameters as transaction overrides inside custom data whatever these are some specific information that you would want to check checkpoints or that you can kind of go and search on the dock when you go through the tutorial the good thing is that we did created the repo that has four examples real life examples they are not live for Paint Masters and you can go and play around to the front end connect it to those four examples we have a QR code by the end so you will get to see it but I also will go through it on the repo so that you're aware but just search baymaster examples that you can actually use to build on top your hackathon ideas or use cases um those four examples are these the gasless paymaster seamless covers fees for any account allow USB Masters which you can read it yourself now and then erc20 fix pay master and then ERC 721 gated baymasters handle fees for accounts it possess a particle uh nft those are like built up there so you don't have to just having some small examples on the dogs they are already there and then you can just Fork it and go on the way uh we do have the uh Bounty tracks for this hackathon and we uh I don't know how we can kind of expose that users actually can build full stack applications they don't have to focus on web3 something related right it's like do an application to like one demo that I am building right now is um you know the monkey type thing that you write very fast and you like that is like how fast you type basically and they have an open API for like a leaderboard so I just want to give some kind of free nft to people who achieve some type of level so I have to do the full stack app build it up with that API and then just connect it with the results of the incentivizing site that okay if you did this uh you're a nerd then go use this application and that's free and you have you don't have to pay for gas because I have 100 dollars that I can spend for you but yes um we are focusing on those type of applications uh generally based on around social media interaction with users uh whatever it takes when it comes to interacting with users keeping them or building traction whatever you want to build on with your audience that you have on your socials you want to interact in a way or another then you're like okay let me build an email subscription model with pay masters that I can onboard my users slowly to web3 and we can test things out in different perspectives right uh I feel like there is a huge perspective that we never went to think around because we are very focused into uh like very infrastructure level like development but yes uh you have a huge document on our tracks and there are more like descriptions on those examples that we provide another thing that we really want to see being built at is global is a developer tooling as I mentioned earlier our several team and protocol built on in memory note for testing it's awesome I can share on YouTube we have the YouTube from beautiful era Dev day that you organized um we got a feedback of like it's better than uh the tooling at ethereum so it's it's a very good thing to share and for you to go and test it around but yes any type of dashboards that can interact with CK sync pay masters or account abstraction Walks Like workflow uh that you can put alerts and let the developer know what's happening on the way it would be great to be added on a developer tooling perspective developer experience how it is for you to get on boarded we do have Smart contracts that you can write on solidity and Viper uh and then we have our compiler it's different from what you're used to for the evm it's the ZK sulk and the ZK Viper for both languages and then we have our sdks uh the JavaScript one which is the most famous one and also the hard head tooling like plugins over there for deployment when it comes to the um deploying uh zika Singh like smart contracts uh there is the reason why there is another deployment plugin is that the bytecode is different uh when it communicates towards the KVM but yes for more technical diving deeper into the technical aspect let's meet after the workshop and I will push you to Nick and our other Engineers who build it up we do have a CLI that you can deposit funds to the casing era which is one of the most important things we draw funds to layer one and scaffold and hard hat project that makes your life easier so you don't have to go through all the libraries to install we do have hard test plugins as I mentioned the compiler and the deployment the proxy contract the verification unit tests the right tests do not forget to buy tests and also the uh yeah the deployment that I mentioned uh and on the sdk's perspective we do have JavaScript SDK with these CK saying about three Library uh go python JavaScript um we do have a lot of challenges on the way but whatever you go through you give feedback we iterate that's why we are here in a way we are also in a hackathon from an organizer perspective and partners and yes here are some numbers when it comes to uh our position right now this is a little old from another hackathon but yes as you can think it's there's a lot of volume there's a lot of users uh but yes for me the most important part is the Developers so yes these are some links which you will get access from are QR codes here the first one that is in black is the developer relations team and all of the activations that we had here as Deborah's at ECC and the second one is my personal one in one of them you will have the paymaster examples that I showed earlier and yes feel free to go through that and if you do have any questions let me know but I wanted to integrate the audience in this case and to ask questions such as what would you want to see being built in the next two or three months on a user or developer experience like what are your challenges that you're having that you really want to see being fixed from your perspective that you would contribute to being fixed or from some other team's perspective if someone wants to volunteer to share some idea no everything like web free related that you're here in this room I feel like you are around there too world so yes I would like to know more about the audience and get to know from where you're coming from and uh building aspect uh in Layer Two Worlds so yeah if or even an introduction about yourselves and how do you feel about today at UC youth global do we want to start uh hi everyone I'm Claire from blood cells so basically I'm building Smart Control wallet compatible with 437 and very happy to hear actually it's my first like uh hackathon is is global headphone so yeah listening uh sorry yeah I'm with my team together but yeah we are also trying to build another project this year yeah yeah thank you so much hello hi my name is Liam uh also my first hackathon I'm a hacker and I'm building a multi-lender platform for farmers and yeah we're also looking into account abstraction um we need to use it for holding forward four different types of tokens and paying for gases fees so Keen to explore what's out there and uh and see if we can integrate ZK sync as well you're more than welcome to go through the dogs and reach out to us we have a huge ready to help on site also so yep yeah that's awesome yeah I'll reach out to you guys when we're free and uh yeah Keen to Keen to take a look okay can you pass back yep all right thanks uh I'm Sven I'm a researcher and I'm researching iot payments oh through probably suitcasing maybe and yeah I'm still searching for a team of other people that are interested so if you're here and interested in iot payments using second layer protocols just Reach Out great [Music] hi I'm Lucas um I will be building something maybe related to AI but I I wanted to ask you how account abstraction in CK sync relates to account abstraction in the new ERC that is coming for ethereum where there's going to be how whether you're gonna I don't know adapt to the new standard or how we would have to deal with that yeah so our actively implemented and the transaction flow in ethereum with eip4337 is and it goes out of the main transaction flow and it does something over there not that technical to answer that but for us it's like natively supported and we do have like ready the library ready to be used like when you go through the docs I don't know something to ask to share is like just part of our transaction flow and not outside of it yeah well thank you very much for coming [Applause] foreign hi guys oh cool acoustic hey guys take a place we are going to start [Laughter] don't worry I'm not bite to you hi guys welcome to Workshop of gnosis chain so we uh today we will have two parts first is a little more technical about how to build on noises what's the difference and benefits compared with other evm chains and the second part more focused on the business and convert result of your hackathon an MVP we should have on the end and to convert to real work business and yes in in unicorn I hope so let's start from the technical side oh sorry it's not not updated okay so my name is arseni I develop a relations in diagnosis chain it's a list of my useless achievement I previously was a founder of use startups alumni of optimist accelerator and part of developer Dow equipment collapse so when I tell you why noises make makes sense to work first of all it's not just evm chain it's a it's a layer it's a several sister chain to ethereum with Rich history we we're working already approximately eight more than eight years one of the most closest UVM chain to ethereum we have the same we say we have the same we have the same structure we have back and chain with our native token for voting it's a gno but in additional but in execution layer we have X die as a token which you can which in which you pay for transaction fee die is die it's just Bridget the original stablecoin die from ethereum so it's one of the reasons why transaction costs are now chain varies varies very cheap oh and in consensus layer we have a genome as I said we also have SDK Bridge we call it Hashi if you check our Bounty platform they have a few ideas what you can build on Hashi to be eligible for this bounty and it give us opportunity to use agnosis chain as a data data availability layer or as layer 2 to other chains and based on this technology also work in agnosis Pay if you was on the ethereum CC so as I said the main idea of interact of Hashi and other interability chain interability protocols this allows you to convert the UVM ecosystem with separate Channel layer 2 to something like Cosmos if you have a familiar with this system because of real pretty old chain we have a lot of projects which we can partnership participate or can integrate to not implement the same functionalities with already existing and it's already shows that we have users and tvl on our chain so and some useful darks because we give them chain we don't you don't need to learn something new you can just use a ordinary ethereum tutorials to work and some not specific we have in separate documentation uh so useful links by the way could you lift your arm if you're a developer with this previous experience with ethereum okay sorry and not expect that you're not experienced it sorry for this uh in any case so for using cow for using cow chain for rapidly developing we provide you a file set and file set you can have a tokens not for not not only on for testnet also for my net the the price of transactions so extremely cheap so one dollar will be enough on my net to deploy maybe 10 contracts uh we also of course just have Explorer of course free RPC in chain list we have already button which you add our test net and my net to metamask and my contact if you need any technical support or advices so if we go if you want to talk about how to work with with gnosis if you already have experience if with the other give them chain so you can you you just add this configuration to your heart config and this starts working nothing special the same with interaction from Smart contracts you can just work with our chain like with order ethereum or polygon and other Chains It's not as important about the criterias which we expect from the project is first of all it's uh smart deploy smart contracts to the Galaxy chain it could be test net it could be my net it's a choice only uh for you provide provide some interaction with front end if you have front-end to interact with smart contact which deployed on noises chain and have a few confirming transactions as a proof that the smart contract is working not just deploy it and be ideal if you have work in demo Point bonuses we are not limiting you to make a public goods or tooling so but if you can show you that your project allows you to earn money it will be really cool if you can show you how how you're going to make it also will be cool if you make a competitor analysis will be sure that you are ready to continue work on your project uh in the future and we will support you in any case and perfect if you also can make a customer research during the hackathon uh it's a few technical ideas which you can realize um first of all is falset monitoring service because a lot of chains have a problem that the file set is empty and no and nobody can look after this RPC note monitoring service and load balancer like cloudflare but for nodes to form a great job from one evm chain to agnosis chain GBM of course you can make it from the nurses chain to other chain or any one event chain to other event chain and some node Improvement as example you can it's extent if get balanced RPC code and that support of returning balances of receipt 20 tokens as a balance if you're talking about our native breach which we call Hashi you can it's pretty new and we have lack of tooling so you can take the tooling of the bridges and connect it to Russia so it could be of chain actor or just explore or proof of block header or SDK and no message or query message as a bonus I can provide I share with you my hackathon guide which I use during the works it's a pretty short it provides you trick heated tricks how to effectively use a hackathon and key points is a start from the problem not from the court make less features but that will be work use the sponsor as participant as the first users it will be give you a correct feedback and advantages compare with your competitor on hackathon and biggest value it's not a price it's a connection and letter of intense with potential your customers and of of course have fun because it's you spend your time you need to get something from this real time so that's all what I want to say from the technical side and I want to foreign so now that we got a bit of a technical overview I'm gonna go a bit into what kind of dabs you can build on gnosis chain specifically one that I developed with my co-founders were called filevers um it's basically a non-financial Dap we really wanted to show that okay it's time for the new generation of crypto projects that are not necessarily Financial that are not based on speculations or other so ideally this is a dab that you'll show your grandmother and tell her hey blockchain can be useful so this is the QR code just Twitter because you're all Builders I thought that I would just start with a bit of uh Journey just tell you a little bit first about myself and then why we started this and how so for myself I'm a second time uh founder in crypto in 2018 I created a AI crypto app called alithia it was quite successful and now I'm fully focused on fathers and on the side I'm doing my PhD on AI and cyber security at Oxford don't hold it against me um now when we started fireworks it was a year and a half ago and what we really wanted to do is just start with a problem there was one clear problem in our minds and it was one of the remaining points of centralization in our space you go today to talk to any project any Dao any company individual in crypto even hardcore decentralization fans and you'll find that even get going down or the ethereum foundation Foundation itself are using notion are using Google workspace are using Microsoft Office which you know amazing ux but there are a lot of problems with those apps now what problem I don't see a problem a lot of people would say that immediately so let me tell you a little bit about those problems so online collaboration today is extremely predatory and centralized you have no privacy you have no right to exit which is one of the requirements of the gdpr and you have no modularity so our uh specifically for uh with three natives you can see that everyday online activities so no not like swapping on decks which is you know you do that maybe three four five times depending on how dgn you are there needs to be an experience in crypto where every day you log in or you go on an app and you do stuff that are useful so today most people are locked in in those centralized Services there is very little widespread utility for people that are just exploring for the first time web3 and and one of the worst things is that web3 content is stored in centralized Services somewhere in California and on top of that your first experience with the crypto world is high-risk transactions by the ux and high barriers to entry for most people so because you're all Builders let me tell you a little bit about our journey we had this problem we wanted to solve it we went on git coin presented our idea and people loved it so within the first round we we became one of the most successful grants on git coin and so for the next three git coin rounds uh and the purpose of going on bitcoin was one bootstrap get donations and the second was get validation we don't want to just uh have an idea start raising and try to convince people that our scam is worth it you want to get validation you want to see that people are interested in this and you want to have users so this is how we started and probably my best advice is ship ship ship ship ship so we started on git coin people were like okay here's our money and at the end of get going around we shipped a basic version that looks like we transfer you upload the file ipfs end-to-end encrypter and share the file with anyone you want um eight months later this year actually in February we launched favors portal which I'm gonna demo in a second and it was a resounding success so we took what our users and our beta users were kind of giving us as feedback and the comments that they were giving us with the first version of the app we integrated all that in a new version which we call Porto and it was quite successful just in three days of launching the general access uh almost every block produced on gnosis Shane had an average of five five transactions in them over 3600 portals smart contracts were deployed within two days for those that did use our website instead of the ipfs Gateway we logged over 110 countries using the DAP which is significant or a simple reason which is financial adapts in crypto are really hard to access for 90 of the world uh you don't want to go on coinbase have to buy assets in order to interact with the web 3 world we want to give people a clear access without needing tokens and getting the benefits of our values meaning privacy decentralization and zero Central points of failure so after that we were pretty happy we went into whitelisting mode and we're concentrating on 4000 user accounts and getting their feedback testing stuff with them Etc so just a bit of a overview and then I'm gonna demo and finish the DAP is modular we call it a trustless collaboration dab and you can basically think of it as a safe multi-sig so trustlessly manage assets as a group or a loan uh but instead of just assets add files add data data rooms at contracts at branding which is essential for any Dao project Etc so it's modular you can also think of it as a browser you can customize your browser with extensions now you can do that also with your workspace or collaboration space you have the plugin I'm a Reddit meme Lord this guy might be a lawyer we want different we have different visions of what our ideal workspace will look like so you can customize it with plugins ecosystem we've been doing uh organizing hackathon since 2016. this is something we're good at we organize she builds a tech a few months ago it's the biggest gender-focused hackathon in India over 60 percent of non-male contribution which is significant in crypto and it's on chain so this is the link to the portal if you want to try it it's Unique it's a white listing at the moment so you won't get another chance or you come see me after and you can get a cool floppy disk that is for Aesthetics and also with an access to the private link although I don't have that many so do scan that stuff I'm gonna wait one more second two more seconds cool so before I conclude let me show you follow Sporto this is the setup phase it's a super straightforward process like a safe multi-sig I hope the Wi-Fi is going to be friendly like you like you can see already from the start on the URL here you have ipfs you don't have to hit our servers if you don't want to we're not here to log where your your IP or anything like that you can go directly from any ipfs Gateway access our static website and use our dap like you would if you went through our our servers so yeah we have this mental model in the in the in our team which is if we all die tomorrow can our users continue using that app and the answer is basically yes no so I pick my chain I'll pick noses because it's highly decentralized and throughput is amazing agnosis I click on create the portal it gives me a transaction I sign it and now you're deploying smart contracts on gnosis you can do it on ethereum as well and it will take a few seconds usually if you have a really good Wi-Fi it will take literally two to three seconds in the meantime we are entertaining you with uh some blah blah uh okay I was ah perfect so and the next step is it's Timeless it's gasless it's signless you don't need to sign uh stuff whenever you want to interact with a smart contract or update it and it's at the setup space is pretty clear I'm not gonna do the whole thing here I opened another portal just next to it okay yeah thank you um and this is what it looks like once you've set up the signless process which literally takes a few seconds so this is your portal it's still in beta but here you can drag and drop files whatever you want let's take this you can make it private or public private anyone with a link anyone that follows me a new one that has my token or nft or a crypto Punk or whatever you want or my collaborators meaning people I've manually added to my smart contract or you make it public if I click on public no signature you're uploading right now by default on ipfs but you can do it with local storage you can do it with our weave you can do it with whatever you want soon also uh for those who prefer even centralized services but I don't recommend it um now you copy the link you can share it with anyone you want you have the QR code and you have an ipfs hash if you want here I can upload another or I can go into my productivity tools so Google workspace doesn't have this but let's say I want to do something cool like that I want to put that here here I'm gonna write demo demo I can zoom out each I can zoom out and I can literally do anything I want on this on this page on this whiteboard and the coolest part is that you can invite 10 15 100 people on here they'll all remain anonymous they'll be represented by the ens or their address and they'll be interacting with you through peer-to-peer Tech so here I'm putting a title I don't even need to publish it on ipfs or whatever storage option you decided I can just leave and if I go in my files I'll find it in my draft the way that the draft works is with a piece of tech peer-to-peer storage Network called gun gun DB is something used by a lot of political activists so it's quite resistant resilient and quite effective your files are here your folders are here here you can add manually or with the CVS as many addresses you want on your vitalik vitalik dot EDH you can add them manually or with a CVS onto your smart contract which will give them access to create also files on that same portal or other you have some analytics as well you have settings to customize your your portal and I'll finish just with that you also have a public view of Porto so this is me with private access to my portal and this is a public one I want to share that link with someone because I'm a writer I'm a Dao that wants a community Wiki anything like that you can have your files here you can put any types of documents you can tokengate them you can make them super private you can make them public uh here's your profile you can fill in stuff about yourself and I'll show you one last cool thing which is any of the files here are public I'm going to click on this one it was probably one of the biggest requests from our early community members on Dropbox on Google Drive on Microsoft Office you cannot load render 3D files and we have a lot of 3D artists and graphic designers that were complaining a lot about that and they said hey can you fix that so we did again peer-to-peer Tech you can navigate any 3D file that an artist or whoever or your nfts without needing to go on openc and you can navigate and you can even chat with whoever shared that file with you hello I'm represented by my address it's end-to-end encrypted there's some analytics about the file I can upload a new version I can edit it a little bit Etc and I can download of course uh uh the file so I'll stop here I hope you liked it I hope you'll share it please talk about us on Twitter um because yeah I think that next Bull Run it will be very important to have non-financial dapps dabs that show that the space is not only about speculation and it's about Reinventing the web tool world with better values privacy no Central points of failures Etc thank you [Applause] thank you sorry okay so like I said you uh you start on git coin best place to start building the in open we were open source we were free we still are uh and applied to Grants and the most important advice I can give you as Builders is get validation get traction and validation show people that you know users come to your adap they're seeing the same problem you're seeing and the same solution you're proposing so that's the best way to bootstrap and make sure your idea is not just a great idea in your head but a great idea for everyone else and once you've done that so we've been doing that for a year and a half then you can start testing stuff you can start monetizing with some users dowels who might have communities of a thousand people and might want to customize the smart contracts Etc or you fundraise and if if you fundraise you know maybe go more toward angels and protocols not necessarily in crypto I would say it's Bitcoin get coin Twitter be good meme Lords spam Twitter with anime stuff like that you know and try to be uh try to feel the vibe of crypto and respond to it and if you want to expand the Beyond there's product hunt there is Reddit there is places where you can also go and try to fetch a non-weathery users and introduce them to the web 3 world I'm putting the link here one last time in case anyone has missed it cool and also yeah floppy disks the DAP is on the back QR code and URL a bit of a description and inside some of them have some Easter eggs you might have Doom compressed on it you might have a private key you might have a a vulnerability no I'm kidding but yeah that's it if there are no more questions I'll I'll stop here yeah super questions we're good all right well hello everyone I'm Penryn I lead developer relations at worldcoin and I'm here to talk about global proof of personhood with World ID uh the protocol developed by worldcoin and tools for Humanity uh supporting the world coin ecosystem so in this workshop I'll go over what world ID is why worldcoin created it what you can do with World ID and the most important part how to integrate World ID right so World ID answers this question of like how do you know who or what is a real and unique person um worldcoin started out as a project that wanted to give everyone in the world a little bit of cryptocurrency to introduce them to this digital economy but in order to do that effectively and fairly and not get a bunch of money taken by Bots you basically have to solve the Civil resistance problem um so we did right that's why we built World ID which also fun fact as of yesterday is now publicly available so for those of you who have hacked on world ID before and remember having to scan a QR code get access to the dev portal that's done all of you can build on world ID now which is great right so we need World ID to be private inclusive and robust right we want this proof of personhood system to not unnecessarily disclose any information about who you are and keep that privacy and anonymity wherever possible we want it to be inclusive right this needs to be something that as many people in the world can use especially when our mission is introduce the entire world to this new digital economy and we also need it to be robust right we need to make sure that every real person can only get one account right so as many real humans as possible but each one only gets one and we also don't want to know which real human you are just that you are a real human who's unique so when we look at ways that we can go about sort of building this system right we looked at like verifying emails or phones which is nice and simple it's super accessible it's also not robust in any way right I myself have multiple emails and multiple phone numbers and that just breaks one of the Three core pillars of what world ID needs to be we looked at doing kyc on official government IDs but the problem with that is that less than half of the global population has a digitally verifiable government ID it's just not inclusive enough for us we looked at web of Trust Systems but the issue with web of Trust Systems is that you know when you start with a core verified set right of a hundred or a thousand to scale that to all of humanity you have to get a lot of hops of verification away we're like person a verifies person B person B verifies person C and eventually you're like 20 hops away from that initial verified set and every single hop is less trust that you can have that that web of trust actually is working effectively so with that we settled on Biometrics which initially sounds scary and skepticism about it is a good thing but we do manage to do it in a privacy preserving way when it comes to the Biometrics that we use we looked at fingerprints and face scans and palm scans but the issue with those is that there simply isn't enough information to distinguish people on the scale of humanity Touch ID and face ID on your iPhone can distinguish about one in 30 million people which works just fine when you're trying to prove that the person in front of the phone right now is the same person who is in front of the phone you know months ago when they set it up right the odds that like the person who steals my phone in the United States is one of 10 people in the country who would also be able to unlock my phone I'm happy with those odds um but when we're trying to prove that you're different from everyone else who's in like the global population one in 30 million doesn't cut it for us we also looked at DNA problem is that it's highly invasive in every way it's impossible to do that in a way that doesn't tell you a lot about that person um so that one got cast aside pretty quickly and we settled on the iris right the iris has far more entropy than fingerprints palm prints face scans it's well studied and additionally it's really really hard to do it without someone consenting to it right if someone is trying to like scan your iris you can close your eyes right and it's the kind of thing where at the level of detail that we use with the orb um it's not something that you can do passively it requires your attention so that like consent is sort of built into the system as well which is important when dealing with biometrics so then now that we've settled on Iris verification how do we actually want to implement that phone sensors sound great a bunch of people have them problem is that the quality isn't super great and it's also not a trusted Hardware solution um you know you can't you can't be sure that someone isn't just piping in a bunch of fake data to the camera module right for off-the-shelf Hardware similar situation it can be a more trusted environment but it still is not fully trusted and again we ran into issues with the quality of the photos of the iris it was able to take so we settled on building custom Hardware which taking the leap from we want to give everyone in the world a little bit of cryptocurrency to we're a hardware company it's a really big leap and I always just think it's really funny how that's what ended up happening but this is the custom Hardware we built the orb um we have four of them down at our booth as well so what the orb does or sorry the orb's been in development for quite a few years now it started development right before the pandemic hit back in 2020 it's gone through a lot of Evolutions in order to make it more secure be able to scan people more quickly things like that there's an incredible amount of engineering that's gone into this device so the orb make sure that you're a real human right it can tell if you try to put a cat or a dog in front of the orb it takes photos of your irises and on device without ever needing to store those photos anywhere calculates an iris code a digital representation of the entropy of your iris and then once it's verified that that Iris code is unique to all the other Iris codes that have been signed up your world ID is then verified so your world ID is a self-custodial identity stored on your mobile phone and when we verify that we actually take the public key of that identity put it into a Merkle Tree on chain so that you can then generate zero knowledge proofs in the world app a testing that you are one of the identities in that set without revealing which one so that you can maintain that privacy and anonymity that we want to help you maintain while simultaneously proving that you are a unique human and being able to prove that you're only taking a specific action once so when it comes to civil resistance and knowing that someone is in a bot it's an incredibly powerful solution to do that when you don't even have to tell worldcoin your name right so yeah World ideas like this it is a global digital identity protocol somewhat like an internet passport these credentials are like stamps in that passport so or verification is the strongest credential right now we also offer phone verification which is a much much weaker credential where you verify that you control a phone number in the app it's useful in some situations but for a lot of other situations you'd want the really strong proof that or verification provides which is why that you can configure which one you want to use when you're using World ID and I can explain more about that later right okay I went over these credentials already so World ID is built to be privacy first it's decentralized it's decentralizing right and it's open source so decentralization is a gradual thing for us if we had started out fully decentralized immediately as a Dao then we would end up a lot shorter than we've gotten today right building things is tough especially when there's Hardware involved but we want to decentralize as much as possible that's why we have the world coin Foundation that stewards the protocol whereas tools for Humanity is the corporation like building the orbs and things like that and it's open source so the smart contracts our front end widget all of that is available on GitHub there's a lot of different use cases for this proof of personhood system right voting is one that makes a lot of sense you want to let someone vote know that they're only voting once and also de-anonymize themselves between their different votes or sorry anonymize themselves amongst their different votes right so that you can't just look at someone's voting history um for customer incentives this is one of one of my favorite use cases where say someone's orb verified you know really strongly that they're only going to be able to claim that like sign up discount once maybe you give them 50 off their first order whereas if their phone verified it's a much weaker credential you still want to give them something maybe five percent off their first order and you do that because the phone credential there's a higher chance that they're going to be able to create another account verify again right like I know I have gotten months of free Netflix out of spinning up new emails to get that two-week free trial and we built World ID also to be super easy to integrate you can use it on web on mobile and on chain and there's two main ways to integrate World ID you have sign in with worldcoin and Anonymous actions uh so sign in with worldcoin essentially wraps it wraps World ID in an open ID connect provider so if you've ever implemented like sign in with Google in an app it's extremely similar Anonymous actions are a little bit more flexible that's where you can ensure a user is doing something only once uh for the stable resistance and Anonymous actions you can do both you know just on the web as well as on chain so let's start with talking about signing with worldcoin and let's see how it works so I will actually demonstrate this for us right now by signing into our developer portal right and we can see my my phone right here so for me to sign with World coin which we have to use for our developer portal all right I click login pops up this QR code for me to scan I tap the button in the top left in the app scan the QR code oh come on don't fail me now let's try this again refresh the page it's wallet connect underneath oh interesting let's try it this time and see if it works here we go so I hit verify with World ID and that zero knowledge proof is generated on my device and now I'm signed into our developer portal yay um and I'll walk us through that a little bit more later so there's a bunch of different ways that you can integrate sign in with worldcoin we have an integration with auth zero now so in about five minutes if your app already uses alt zero for sign in you can add sign in with worldcoin we have a nextdoth.js template so if you are building on next you can Implement cyan with worldcoin super easily that way if you're using some other authentication provider you can use the oidc well-known file or you can custom build your open ID connect flows or you know there's plenty of different ways you can do this but I'll walk us through how we would integrate it with nextdoth.js this one configuration file is all you need to integrate sign in with worldcoin using nextdot.js you're just creating a single provider for next off you give it the well-known file from an open ID configuration which is part of the standard uh you have to pass it the client ID and client secret that you get from our developer portal and then we map the uh the information returned from our openid connect provider to that user in your app right so if I want to create a client ID and client secret first let's start with creating an app I click up here add new app let's just call this uh Paris test so don't you say I want to go straight to production if I want to use time with worldcoin I have to make it a cloud action create new app I click sign in I can get my client ID here which is also the same as the app ID and then for client secret I reset it there I copy it I put it in the configuration additionally I have to put in a redirect URI so if you use our template that's explained in the readme it's just a specific route that our open ID or our signing page knows to redirect your user to after they've completed the verification with World ID so once you've done all that sign in with worldcoin is already just implemented it's that simple and now let's dive a little bit into anonymous actions so Anonymous actions you're you're able to know that your user is a unique human doing something once with a specific signal right and that signal is a lot more useful for on chain use cases generally so one example there is that if you're offering an airdrop and you want to make sure that your user you know your users are real humans they each just get to claim that airdrop once um what you would use the signal for is the wallet address that they are claiming that airdrop to right that signal gets used as a little bit of information included in the proof generated on the user's device that you can ensure hasn't been tampered with right so it would really suck if someone were to like man in the middle attack your app change that address and then the user accidentally submit to transaction claiming their airdrop to someone else's address but using the signal prevents that because if that gets changed the proof won't verify on chain right so let's see a quick demo of what using Anonymous actions looks like so I have uh My Little World ID playground this is based on our Cloud template which is freely available for all of you to build on top of as well let me make sure my phone's unlocked so I clicked verify with World ID and this opens up ID kit our front end widget which is used for any situation involving Anonymous actions so I'll go ahead and scan this like the flow for your user is very very similar oh this is a staging action my bad how about I use the simulator then um so when you're testing things right we have a simulator for that especially if you're testing civil resistance if you only have your one world ID on your phone to test with kind of sucks simulator helps fix that where we have a bunch of identities here there's five and you can always just add more they say unverified that will change in a few seconds all of these identities in the simulator are already phone and or verified um so if I want to go ahead and verify here with the simulator I can actually click the QR code to copy the information there go over to the simulator I click manual input since I'm on desktop you can also use the simulator from your phone I click submit and then here I can select which credentials I actually want to use as part of that proof so if I wanted to test being only phone verified I'd uncheck Biometrics only or verified unchecked phone both leave them both checked with our proof system we actually just return the highest credential so phone and Biometrics both checked versus just Biometrics checked won't actually change anything but I'll go ahead and click verify with World ID if I go back here successfully verified and it tells me about this nullifier hash that nullifier hash is sort of the unique identifier for a user in the context of an action right so if the same user tries to take the same action twice they'll generate the same nullifier hash which is how we can Implement civil resistance so let's go back to the slides right everything using Anonymous actions starts with ID kit it's one react component you can also use it with vanilla JavaScript and you have to give it information about the action you're performing so the name of the action your app ID for that app you've created in the developer portal the credential types you want to accept it's an array of photo orb this is also typescript if you're using non-type script JavaScript then you would just have strings orb and or phone there's two callback functions on success is mandatory handle verify is optional handle verify is it shows the user a loading State while that's being called and waiting for a response on success is what gets called after the idkit model is closed um there's plenty of other uh things that you can configure and our docs go over all of those but this is basically everything you'd need you also have to pass it a child like button that opens the the component when the user clicks on it and then once the user is finished this flow with idkit this is the response that you get you get a Merkle root so the root of the Merkle tree against which you should verify these proofs you get the nullifier hash the unique identifier for that user in the context of that specific action you get a really long hexadecimal string that's the proof and that one you don't really need to worry about too much you just pass that either to our API or the smart contract on chain when you're verifying that proof and you also get which credential type that user's been verified with right but you have this response you still have to verify it um because that proof is sent directly to your front end from the user's device right we use wallet connect to create that connection between your front end and the world app so the user can pass that proof to you we do that because we can't monitor that again like we don't want to be able to associate actions back to the same user so when we have a direct connection between the user's proof generation on their device and the thing they're trying to verify with it helps keep that anonymity and that privacy and you can verify that proof either on chain or with our API so if you want to do it with our API you should first pass information for return from idkit to your back end because if you try to verify that proof with our API directly from your front end the user can still manipulate the response right nothing in the front end is secure the user can always modify that so you should pass it to your back end and then call our API so developer.worldcoin.org API slash V1 verify your app ID um you pass it information about the app ID the action the signal if you're using it because the signal is optional and then the Merkle root the proof the nullifier hash everything like that again our template repositories already like handle all of that for you to make sure that you can't do it wrong and it's all of the required parameters for this API call are gone over in our documentation so then if you get a 200 response from our API great you should go ahead and like Mark the user as verified in your database or whatever else it is you want to do after you know they're a verified human and then send a response to your front end to let them know everything is good for on-chain verification it's a little bit more complex um so in the Constructor you'd set the address of the world ID smart contract that you want to verify against if you're looking at our docs you'll see contracts hold the world ID router those are the contracts you should verify against they are available on ethereum optimism and polygon both main Nets and test Nets so for test Nets it's ethereum girly optimism girly polygon Mumbai that is a new change that some of you who've hacked with World Eddie in the past might be kind of surprised about we just finished our migration to optimism yesterday so we're super happy that now you can use World ID on a much broader variety of chains than just polygon and you can find the addresses for those contracts again in our docs we have an address book that goes over everything there um the app ID and action ID are generally things that you would set in the Constructor as well so that those can't be tampered with and it also keeps things more gas efficient the external nullifier is basically just the identifier that [Music] um that seemaphor these are an entreproof system that were built on uses to identify that action the user's taking it's a combination of your app ID and action ID and then your verify and execute function will take in a few different parameters like the signal the root of the Merkle tree nullifier hash and then that proof first it checks to make sure we haven't seen that nullifier hash before because you have to implement the Civil resistance yourself in a smart contract we call the verify proof function on the world ID smart contract the group ID is zero for phone credentials one for orb credentials you can also set that in your Constructor if you only want to accept one or the other you pass it the other information you've received from idkit and then if that doesn't revert everything checks out you add this nullifier hash to the list of nullifier hashes we've seen before so that you make sure that user can't do that same action again once that's all done then you would mint them in nft let them claim an airdrop whatever that may be and in the sackathon we've got 20 grand of prizes um I don't need to read all of these to you you can look at them on the website or just read them right now um if you have any questions about them feel free to like find me at our booth and then we have a bunch of resources for hackers as well so worldcoin.org parish23 will take you to a notion page that goes over our bounties links to our template repositories or documentation everything you need in order to build on world ID I'll give everyone a little bit to scan that QR code I mean it's just my closing slide after this I might as well just leave that up for everyone any questions I think yeah you there yeah uh thank you so much for the talk I in the very beginning when we entered you mentioned that when you generate the ID or the like based on the orb with iris of the human eye you check that it is unique yes right um two things have you mentioned the cases when it's not unique and what you do if you get the same thank you yeah so the way that we check that it's Unique uh is that that Iris code and the public key of your identity get uploaded to worldcoin servers and then our servers compare that Iris code with all of the other Iris codes that we've seen before um we don't actually check strict mathematical uniqueness we use the Hamming distance so how different are these two Iris codes When comparing one to n uh because your iris code can change slightly over time right your iris will just change a little bit as you get older uh and then it's like is it different enough from all the other Iris codes in the situation where I use we do have a user whose Iris code is too similar to one that's already in the set we simply just return like hey you're you've already signed up right the orb will tell them that the verification is not successful um and then we don't insert the public key of that identity into the Merkle tree we just turn them down right because for us like our algorithms on the orb right now we are extremely confident they can handle one in a billion today so the odds of a true Collision in that Iris code is so unbelievably low uh what about yeah what about the identical twins I'm sorry what about identical twins the twins oh twins have very different irises okay even identical I didn't know that okay thank you so much hi uh could I somehow take a full list of verified users no on chain I mean no uh like you can have the Merkle tree of the you know public keys of the identities right and one thing to note is that the keep air for your identity is completely separate from the key pair for your wallet so like that Merkle tree is publicly available but the public key of that identity is only ever revealed when you're getting like verified at the org because anytime that you are using World ID to verify to some other app you're just generating a zero knowledge proof that you're one of them in that tree you don't tell them the public key of your identity so we do that again in order to preserve users privacy so no you can't see just a list of all of the identities that have been verified um could I be able to get such least after the Airdrome would they be able to take a such list of all of the verified users after the airdrop I mean the world coin well it with world when we do token grants over time so the token is still not yet live um but users can claim beta grants to the Token one per week um so yeah there's not like one moment uh hi I have a great idea for the hackathon which is the centralized science getting responses from the real users some behavioral economics if you are looking for the team please join me the centralized science and tapping into unique users running some social experiments Behavior behavioral economics please join me thank you okay this guy's had his hand up the whole time hello thanks for the um thanks for the presentation so um I have a few questions I mean how much time you have I don't know but let's let's go with the first one so um what does with the data what happens with the data in you know the orb scans my eye and then what what happens with that data so if you didn't opt into having the photo store they get deleted from the orb if you did opt in they are uploaded to our servers in Germany using sealed box encryption you can choose to have them deleted at any point in the future and then we there are two things that we would use those photos for one is that if we significantly upgrade our like Iris code algorithm in the future we would be able to just run that algorithm on the photos that are stored for users who opted in whereas users who didn't opt in would have to go back to in order to re-verify we can also use those images to help improve our algorithms and make them more secure okay and um what guest stores don't change the only thing that stored on chain is that Merkle tree of the verified identities and what's inside the miracle tree uh just the public the it's the identity commitment right essentially the public key of these identities that never gets revealed in any other situation but but it's like a hash it's the public identifier of that identity I like I'm okay it's just like you have the wallet address of your wallet this is the public key of your identity thank you very much thank you [Applause] thank you hello hello uh hi hi everyone welcome welcome um yeah good to see all of you uh welcome to the Falcon top uh fall coin fvm ipfs um my name is Sarah let me just slide show this right my name is Sarah I lead fvm developer experience but I'm also representing Falcon and we have various tools you can use for storage in in our ecosystem so I'm going to kind of run you through what you can use in this two-day hackathon also being super realistic I know it's super stressful to finish a 2d hackathon and produce something great so I'm going to show you one easy demo and also give you options for more technical versions if you choose that you don't want to sleep tonight so it's really really your choice here right giving you all the options I'm available on Twitter here so if you have any questions you can always DM me and we have an fbm Dev Twitter account we've been featuring really great depth I've been partnering with us in the ecosystem like zondex and other partners and early builders that have been helping us out so yeah and if you want to tune in on a twitch we have occasionally live coding sessions where you can kind of see us try stuff out it breaks we fail and then we try to fix it and figure it out together cool [Music] hours and you're like what I do my storage right so some simple options for you we're going to run through them um so we're talking about leveling up right so I'm gonna get from simple uh super easy to deploy uh to get a little bit more um well not complex it's still really easy um and then lastly uh super super complex but you know you get more programmability and more logic and more customization together with it so on level one we have uh pinning on ipfs which is webview.storage I'm sure many of you know ipfs or fans of it usually show of hands ipfs use that see there you go there you go um so yeah all of you are familiar with that if you use webview.storage they have a super easy SDK I just did a demo at encode hacker house so I think I see some familiar faces here so I will then focus on the level 2 which is around Lighthouse so Lighthouse dot storage is similar to webview.storage but they have more functionality on the back end so webp.storage was really meant to be super super simple to use depending on ipfs retrieving it your data could disappear over time because it won't be pinned there forever Lighthouse dot storage allows you to pin on ipfs they also back it up onto Falcon by making a storage deal for you on the network and very very recently like literally two days ago after the last minute we have been fixing out our verifiable proof for small pieces of data so you not only do you store your small image as part of a larger data deal on the filecoin network but you can also verify that your small piece of data is stored within a larger deal and exactly where it sits so you could rather than unsealing the entire data deal you can just try to look up for that one small JPEG that you want and then retrieve that so very cool functionality coming in there and then lastly level three we'll be starting on file coin so you're storing it directly from a smart contract this is enabled by the Falcon Virtual Machine so anyone here has used the Falcon Virtual Machine yeah okay the numbers are increasing hackathon and hackathon okay awesome um so yeah if you use Falcon Virtual Machine we are because of that we are fully ethereum compatible so for the first time you will be able to interact with the falcoin protocol uh prior to that for the past like seven years that we've been building our Network you couldn't really interact with it unless you are a storage provider and you want to run your own node make the deal yourself with the Falcon Virtual Machine we're now fully ethereum compatible you could start a storage deal from a smart contract and from a solidity smart contract so perfect for each Global um it does take a little bit longer about 24 hours for a deal to be made but I have seen people submit projects where they show proof of concept of it working the deal doesn't get made and that's totally fine as judges because we know that it gets it takes like 24 hours or so right so but you can definitely include that in your project and the cool part here is that you will be able to add whatever you want to your solidity contract so you can write logic around native storage Primitives we have created a library called falcon.solidity that will allow you to use solidity calls to then interact with the file coin storage primitive so you could do things like get deal status what is the you know how long is my deal being stored for can I renew my deal and and so on so a lot of things there um I have a if you head over to the booth later I don't think I have it in my slide this is the tutorial for our main contract that allows you to make a storage deal and you can play around with that but if you need more resources I will be at the booth and I have a cheat sheet for you that will have all the fbm resources that you need so this is how you go from level two to level level one to level three um and yeah I've tried to simplify as much as possible so you can kind of like see straight away like what are your options for the hackathon cool so I'm going to run through the architecture a little bit just a quick tldr for anyone who's new to our ecosystem I know that sometimes like for me I joined Falcon and for like three months I thought ipfs and Falcon were the same thing they were not the same thing so surprised um to me and um the difference here is the ipfs is a P2P Network so this is not actually running on the blockchain what you'll be doing is pinning your data to nodes that are hosted by a community or you host it yourself so these are these clusters show three different options that you can use when you use ipfs to make sure that your data is perpetually stored uh somewhere uh well technically it's not stored it's pinned right um You can run your own notes you could run notes of your community or you could pay a pinning service like pinata to do so for you however with the running your own notes and running with the community it's hard for you to guarantee that your storage is going to sit there forever because if you're if you break up your friends or you choose not to run your notes anymore your data could just disappear right so that's why we've created the Falcon protocol so TR they are for those who are new to this the way that it works if you look at the top over here which is the dollar box here you will make a deal via with a client and a storage provider you would then handshake start make a storage deal and negotiate a deal how long you want to store it for how much you want to pay once the storage deals once the terms are agreed upon the storage provider will then make the storage deal and publish it on chain so on chain will show like your deals metadata right how long you want to start for how big is your file size and so on but the file transfer happens off chain and that is represented by the network you see over here which is All Storage providers here they would then represent themselves on Chain by periodically posting proof of your storage deal to show that hey my data is getting stored every single I think every 24 hours you have to prove they have to submit some kind of proof proof of space-time and so it'll prove that your data is being stored continuously right but then they'll store all your data off chain so it's really up to them how they want to store it and you can choose what kind of storage provider you want to work with based on the profile that you know so some might start in hard drive lives honestly some might just print it out and store it in a box but that's really you know your choice it's a preference right so that's how the Falcon protocol works so it's because it's incentivized as a storage Marketplace it will then guarantee that your data is stored perpetually or for as long as your deal lasts right the way that we usually use it now so uh on a realistic note when you store your data you then want to retrieve it right if you're starting on filecoin and you want to retrieve your data it does take longer for you to unseal the data that has been sealed cryptographically by the storage providers so it could if your deal takes up 24 hours to make it could then take multiple hours to then until and retrieve your data so um unless your storage provider has agreed to terms which some storage providers do to put an unsealed copy together with your seal copy so that's me that means that they store double the amount of data but that is their choice and we have a really easy tool called Lassie that you can then retrieve your data from so if you're using level three which I showed you just now the Falcon Virtual Machine client contract if you clicked on that tutorial you could then use lessee as part of that it's within the tutorial you can use less YouTube than retrieve your data pretty quickly if it's unsealed and on the test net it is right but realistically and on the main net it probably most of the time is not so um the way that you will normally store data we do recommend that you use filecoin together with ipfs so if you're planning to build a project um that's something to keep in mind so ipfs will allow you to pin a copy and then you store it and back it up onto filecoin ipfs allows you to do quick retrievals so that's how you can quickly get your data however you need it so far I know it's like quite a lot all good everyone stay with me yeah great great great okay so this is an example of the metadata of your storage deal um I know you see a lot of words but I'm going to walk you through it so if you look at the backslashes you'll see p size verified deals start Epoch and apple how long is being stored on chain how long your deal is supposed to last for storage price per airport how much you're going to pay and offer your storage provider and provider collateral is not for you client cholesterol is yeah how much you want to put out for the deal to then make the deal proposal and so on so these are all the meta metadata within your storage deal once like once it is accepted it gets posted on chain right so why did I show you this because this is kind of important for the next point so talking about fem so if any of you are new to the valcoin virtual machine what it does is that it manipulates the storage deal metadata so all this metadata that you saw over here that is what the Falcon Virtual Machine will be able to manipulate so you could write when you write logic within your solidity contract and you're using our falcon.solidity library you are manipulating all all that metadata of how you want the file to move around so you're not actually manipulating the data that stopped within the deal you're manipulating the metadata so I just want to make that point really clear um yeah and I'll talk about price structure in a bit but if you are looking for computing the actual data fvm is also really useful together with bakayal so bakayal is a decentralized compute framework that we have if you want to know more we are at the booth we have a mental there from the bucket team what fdm will do is allow you to send you know by manipulating like hey I want the storage deal to be sent as a job request to bakel so bakaya would then do the decentralized computation off chain and then post a result back for you so that's how you use fvm and that's what fbm really unlocks there are a lot of a lot a lot of use cases that you can unlock with fvm and we're continuously improving the depth ecosystem to make it even easier for you to build Solutions on top of it right early days we just launched a match so you know a lot of good Integrations coming in so do definitely look forward to that um so I I just want to give you a little bit of so the green part the green circle over there that refers to how it's manipulating the metadata around the storage deal and then that enables you to then do whatever you all the magic that you want to do on the layer 2 on top of that so all the solutions that you want to build you can then build it uh with with those options there so that's how ipfs Falcon and fbm work together yeah so I this by the way this took me like six months to like digest and put into diagrams so I'm trying to give you like a really condensed version but um yeah if you still need product clarifications I'm at a booth you know a hackathon is to learn so if you want to learn more and then build later on that's totally cool we actually have a really big hackathon coming up as well end of August so you can participate in the open data hack there and like get in all this like cool data stuff yeah all right so um before we get into the demo I don't know I put this here I should put this at the end but the for the prizes we have like three uh we will give out grand prizes three grand prizes um anyone that is using tall coin ipfs or IPM so as I talked through the demo and some of the use cases do have a think about what it is that you want to build um best project integrating fvm with bakayal so I talked about Pacquiao a little bit earlier on that is the decentralized compute we'll be giving two teams 2 500 that would be a special price so definitely do check that out and run us runner-ups I think any project that impresses us and you know that is really really cool will give up to six teams part of the pool price which will be yeah really really fun so um have a think about these as I go into the demo okay so I'm going to demonstrate I demonstrated earlier at encode hacker house around the web 3 storage um piece I'm going to demonstrate the lighthouse piece over here Lighthouse itself is really cool so I'm gonna if you scan this QR code it'll bring it to the documentation I'm gonna show you the page and kind of show you the options that you have and what it is that we will show today this is big enough yeah okay great great thanks um okay so if you head over to Lighthouse documentation uh remember do not use the CLI commands part that actually post the mean net not the testnet so you want to use the SDK over here so if you are building your front end esjs you can actually easily click over here for code samples and then I will be demoing for the node.js backend so you have options the cool thing about the difference between webview storage is that web3 storage is a simple storage of any data if you want to have encryption Access Control you can use lighthouse.storage they actually have it in built within the SDK so it's super easy for you to use as part of your project and it shouldn't yeah it should just be on top a layer on top so it should be easy to use and Implement so we are going to try this one out all right so okay okay all right so we're gonna start with this we're gonna do a really really easy one um okay we're gonna create our npm package and um and then we're gonna npm install the web3 storage file so all you have to go is over here and you can very easily just copy this it's up to you I usually use this method um is the wrong one whoops no no hold on where did it go where did it where did my ideas what oh okay I found it I found it all right awesome thank you all right so we're gonna install this and once you get that set up um at the same time um they also have instructions for creating a lighthouse.storage wallet so you can then run um the storage deals that you want to run so we're gonna open up the folder trust it and we're gonna pick it back up so over here I'm just gonna create a upload.js and you just have to enter the into the code and copy it over here so super simple and I'm gonna upload it from a file directly from my computer so I've really created like a test file over here oops let me see um let me create a new I'll create a new text file over here so I guess you can see like hello oh sorry we're in France uh bonjour okay and let's see if this um youth global test one awesome okay now we're gonna get the path all right okay I'm just gonna drop this in here for a second and uh we're gonna create the file from here so I have my I generated an API key earlier on if you want there's you can easily do this here so I do use this UI commands for creating the API key I just find it easier you can just easily copy this in and generate your API key to use it so let me just check first hold on be great so I created a wallet earlier on if you if you are new to this you would then have to keep oh get over here and create a new wallet I'm sorry I missed that step um but I've really created a wallet so you create a wallet first once you get your wallet set up you can easily head over here and then get your API key so I have it over here which is great and let me just copy this back over here yeah hold on let me key in my path first this one this one okay over here great all right so yeah if you want to upload any small documents that this should be a super easy way to use it and then what you want to do is add in your API key let me just check this first save it where is my API key [Music] oh I did generate one already okay okay so I'm going to copy this again and I'm gonna paste it back up here cool and I'm Gonna Save it and hope this works no this doesn't work but um because I will add in the type here so so yeah if you hit this Arrow definitely go in and hit this this often gets me going and let's give it a shot module not fun did receive it oh okay and yeah so once you have your file you have generated your Content ID so for ipf and the falcoin we we ID our data not by location but by the content itself so this is how you'll generate your content ID and when you want to view it it's super easy to just head over to an ipfs Gateway so I like using brave because they have ipfs plugins in there already so just key in here and you should be able to open up your file so once you download it um let's try it out great so that's a really just easy way to show you how to add storage to your project again they have many many different functions here that you can use there are different examples especially see this used a lot for yeah for teams that want to use encryption so that's a really cool feature and that would be the lighthouse storage demo so um pretty similar for webview.storage you would have the tutorial link from the earlier QR code if yeah if you want to check it out this is the QR code from lighthouse.storage um some cool Innovation coming I just want to kind of show you guys a preview of what's coming up but um we have this so like once so basically what you saw just now was your file being pinned to ipfs and you're retrieving it from ipfs Gateway but what I'll do on the back end is it'll take like about five to ten minutes on the test net to generate the deal on the test net network but in in on the main net I'll take an hour or so but once your deal is generated you could actually retrieve proof for the small pieces of data like I mentioned earlier on this will be via API requests we literally got this running like two days ago so I haven't really put this into my demo yet but to kind of give you guys a sense that you will be able to retrieve all your different pieces within a single deal so you can actually check that out and once we get it integrated with our Explorer you can actually just key in like your sub pcid so not just the CID for your deal but the sub pcid for your small image and you can actually view it and see where it is sitting within the deal itself yeah so just a quick preview there not not available for this hackathon but by August 30th um okay and then just a quick one uh if you're thinking what else you can build especially with fbm and Pacquiao a really good idea would be around data dials um so if you check out our documentation you can get a better sense of what data dials do basically your data dial is a dial formed around a very important data set that you want to contribute data to together as a team and then manage the data set right so and a quick example of your pet owners you can contribute your core data into a data down into a huge huge data set and how you're going to end up using bakayal so let's say just an example here you're using ZK verification via your solidity contract so if you head over to level three just now you would see again I have a starter kit for this using the level 3 version that you saw just now in the earlier slide so do check that out but you could then add ZK verification in to then verify that you are a legit contributor and you can upload your data via the client contract into your data set and once you do that you can also add in another layer of contract to then generate tokens and you can use your tokens to vote to then train an AI model for example so if you look at the top example there think about how you can connect fvm to buckeyeal connect your data to a decentralized computation framework and you can get access to those two other prices yeah and there's also access control but you know you can use Lighthouse for that so just an example but yeah this is the data starter kit so if you want to use it for this hackathon super easy piece there so I know it's a lot of information but yeah we have a lot of cool stuff for you guys to play around with great yeah that's more or less it I know we're almost at time so yeah thank you [Applause] yeah uh any question hi so did you say that Lighthouse is available right now or did you say it's available right now okay and uh so as far as I understand you upload to ipfs and then I didn't understand what Lighthouse is doing on top of that yeah so uh Lighthouse is like an aggregator kind of so it will take your data um they provide a really easy SDK for you you upload your data they pin it to ipfs for you and while you are you know you can access the ipfs pin data it also takes out data and puts it into a storage deal and gets a storage deal made onto filecoin for you so backs up your data it pins it centralized by Lighthouse and then also makes a deal in filecoin which is decentralized right yeah um just a FYI we're also working so Lighthouse is an example of a centralized aggregator uh one thing that we're working on in the next few months is a decentralized aggregator so we are providing we're writing specs right now for you to be able to build your own decentralized aggregator yeah cool uh any other questions around storage thank you very much okay cool thanks so much [Applause] hi everyone 111. Hi everyone thank you for coming uh we will do a presentation of polygon ID and my name is Dima I'm developer of polygon ID of the core protocol and the Sasha is also a developer developer and team lead of our protocol team so Sasha will do the presentation and explanation of the core concept and after this I will do the presentation of the demo tool in and how you can build with polyvinid yep thank you so what's uh polygon ID polygon ID is a self-solving identity solution it's built with [Music] zero knowledge proofs technology and based on verifiable credential standards and and serialized identifiers so we in this concept of identity we have three main parties it's a user identity holder we have also verified the one who receives data and and consumes it and also is sure it's a source of trust who is issuing credentials to the user so in let's say we have issues that is a kyc provider it could be like we know jumia or on Fido let's say that have done kyc verification of your identity and then issues to you credential that has for example your passport data country of residence date of birth and so on and then later you apply for a job and you need to to prove that you are eligible for example uh for for this uh a dow Grant or whatever and you need to prove that your from non-sunctioned country and that you are over 18 and so on So based on this verifier can ask you a question are you over 18 and and so on and you as a user can just prove that this is true that you are eligible without revealing any of the data it's just that that yes I have a credential that states that satisfies them requirements that the verifier have set and for [Music] this to work we have created a set of tools a protocol and um for for each of these parties we have a number of tools to to be used for for the users and for the wallet providers it's a mobile application and also sdks to to embed it in into existing mobile wallets and also maybe web extensions and snaps then for for the issues we have issue node it's a application that can be run on on your server to issue credential to to the user and then you user would be able to fetch it store on his own device and prove some statements also for for the issue we have schema Builder because verifiable credentials they have built on top of the schemas and to facilitate this process to make it easier for for the issuers to create credentials we have built a schema Builder it's a just a very simple interface and Dima will be showing it today how to create your own schema upload it store and then import later into the issue node and actually use it to to issue credential this is also used this the schema is also used on the verifier site verifier needs to ask questions based on this schema like do you have credential of um password type and then based on on this credential and this schema would be asking additional questions like IO over 18 country of residence and so on and for it to make this query easier we have built another tool that is query Builder just because we have it's pretty simple but but still you need to know how how to use it as a key query language and also it's still in in development but kind of available for early adopters and early testers just on the test net we have unchain is sure it's a decentralized issue that [Music] could be trustless in the way that in usual models we have issue that is working somehow of chain it does processing of data and then later issues credential but this process is not transparent to to anyone and on chain issue is solving this in a way that all the rules everything on how credential is issued what data was supplied is it true or not is done every single chain that's why it's a um fully transparent and auditable how it was created to whom and so on and here's QR code where you can get our tutorials our documentation and read about everything and now Dima will show how it works okay Showtime so we will start with a schema Builder so we'll build our schema then we'll create a create credential fetch it to our phone and perform verification with zero knowledge proof verification on the back end we have limited time I will try to be like very fast okay so this is our schema Builder so we can try to build a schema let's call this this global page mobile version 01 just yeah then we need to define the attributes that will be stored in our schema I will call this maybe score score and select the type so the data types this is very important because this is types that you can then verify in zero knowledge proofs so here right now this is supported types that we have it's like integer Boolean numbers and strings the most might be important this is integers because you can do some query operations inside zero knowledge with strings but the rest is also possible but Boolean technically this is zero and one which is obvious but strings will be stored as a hash of your data inside the circuits and you can do selected disclosure maybe you will have a document and verify will ask you hey can you disclose this value to me can you disclose this document for me and you can show the whole document and prove that this document actually store it in your credential it's not maybe like useful for all of the cases but for some kyc and various like specific verifications that's very important case so we will do something with integers this score okay I need to connect my metamask to publish this on ipfs so what are the changes for our schemas right now we are publishing them for schema Builder on ipfs so schemas can be stored on ipfs this is not necessary you still can store them in some like on GitHub in like on your HTTP server but for the like our schema Builder we decided that they will be stored on the ipfs so up to you where you will store it but if you will create this on in our schema Builder and they will be publish it to ipfs but you can download there is a button to download and you will have the bundle with the schemas I will do the publishing category okay so this is a schema right now we can create a credential with the schema so I will go to our UI first thing that we need to do is just import the schemas that we created I just okay I just import the schema I have this is global and I can issue this to my wallet so like couple worlds about this uh like credential link and data directations for direct editions you need to know in advance identifier of your user for example if you will build a platform or like some Dao you will know because users will log in so you will know the identifier of the user then maybe you will pass some kyc maybe like joining the groups and so on and you can like issue credential and send push notification with this credential if you don't know the identifier in advance and maybe we want to just distribute these credentials to your group members maybe through the Thousand Channel or just put the QR code somewhere on the East Global you can do this through credential link for example I can put here like 10 credentials this is maximum number of credentials that can be issued so first 10 people will have this credential maybe this is you can do some campaign maybe some game or like I don't know some event based on this can just engage okay 10 first people who who can get this credential can go to my website to my the app and will be rewarded for for this interaction Okay so I will put here a score I know 100. it's good looks like a good score okay proof types we have a signature type this is just the roof type that issue just sign your credential you don't need to publish it in anywhere just signature that's it for Merkle tree proof types this is credential that is anchored on chain for this you sure need to send transaction on chain and publish his state so this will mean that your credential was issued at some specific time like timestamp so for some use cases it may be important or maybe for some Unchained use cases can be important but it's up to you for signatures this is just kind of free issuance you don't need to spend like gas or like anything Okay so expiration date you can embed in your not can but you have to embed the expression they in your credentials because during the zero launch proofs verification we're also checking the expiration date so with this you can play with short-living credential maybe a credential common leaf for one second for one hour or like for for a few years it depends on your business cases and business requirements so I'm creating the this link and now I'll check credential to my phone just a second I'll try and to share a screen okay so connect with my wallet internet is not the best here so if we need to wait a little bit yep so the thing that I have done right now I just did authentication so right now okay I need to receive the credential on by push notifications but maybe because of the lack of the connection I just fetched through the in this QR code okay while I'm waiting I will show you the next step so so right now your user has a credential on his phone right now it's just a responsibility of the user to communicate with the verifier so and for this verifier you need to build the request to the user so as you have a schema and your hmm your verifier you can get this schema and okay not so fast I can build here just Rebuilder I can I can build the the query so I put the my URL I select the type embed it in this schema and now I can just ask some specific questions so this is a score and I can ask okay put a condition it should be less than 200 so this is you so you can copy and just pass in your JavaScript code but I will show you on our like demo application how to perform the verification so here we just put the same URL select the type from from your selection select a field score and ask that Fields should build less than 200. so now I have a query from the verifier and this must be embedded in your website and usually in majority of this like verifications will be embedded in your Arcadia platform or what you're building one this can be embedded in the smart contract so smart contract also can ask you the same question like is your score like less than 200 this will be questioned from the smart contract and you can generate a zero launch proof and send directly to the smart contract so here let's count this QR code and share my screen okay right now on the screen you see this is request that was embedded in this chrome in this query so if I have the credential of this type and the value is less than 200 so I just approve this request so right now is zero knowledge proof is generated on my phone so I'm not sharing the credential itself I'm just sharing the proof that I have this credential and the requirement is fulfilled that field okay soon you want to run okay one more time okay since I don't have the internet connection on my phone so oops sorry so the zero output launch proof should be generated but as usually demo file and we will send zero launch proof to the user or sorry to the verifier backend on the back end we'll refine the zero noise proof and that's it oh yours we send it to the smart contract then smart contract perform the verification and just give you access to to the website to the dowel or like to your specific web case so what you can potentially build you can build like decentralized down which will endow or like Ico where you can ask user to fulfill some criteria so that maybe you should be about 18 or you should be like from a specific country or not from a specific country or you should have or be a part of the specific group and this is just up to you I would say what use cases you will cover with this okay I think that's it any questions [Music] comments okay now if you will build that with a polygon ID will be here oh okay I this SDK is in Swift as well or is react native only I'm sorry the SDK is in Swift or react native uh SDK right now the ins on the flutter are flutter kotlin flutter kotlin and JavaScript we're working on the Swift as well and on react native so I hope till the end of the year we will have a mobile sdks and all of the platforms also we have a JavaScript SDK so like some companies just embed the JavaScript SDK in their mobile application for example you can generate a proofs we have approver for the mobile applications we have approval for like web browsers like of course for the desktops but this is up to you I think the majority of the platforms you can build right now the same for verifications you can we have verification libraries written in Google and JavaScript which is right now should be good good enough at least for the beginning okay thank you very much yes thank you 