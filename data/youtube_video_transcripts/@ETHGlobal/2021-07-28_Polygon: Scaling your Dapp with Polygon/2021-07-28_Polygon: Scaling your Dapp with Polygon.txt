we are live hey everybody welcome to the scaling your dap with polygon workshop uh here we have yuling ma from our sponsor polygon and she's going to be uh running this workshop for you guys if you guys have any questions feel free to throw them in the chat she'll try to get to them at the end of the presentation um you can go ahead and get started viewing thank you awesome awesome thanks hi everyone my name is yuling ma and i'm the integration lead at polygon so uh it's a privilege to be here with everyone at hacc fs i know it's a super exciting once a year event so uh i hope that you're having a great time so you know just uh to start today's presentation for uh skilling with polygon i would like to first talk about uh polygon so then um polygon it's uh it's a first well-structured easy-to-use platform for ethereum uh scaling and uh infrastructure development it was first funded in 2017 with the mission of making ethereum infrastructure ready for mass adoption so basically it aims to tackle poor ux uh from pain points like uh high gas fees slow speeds network congestions um and doing so without sacrificing on security and uh so then you know uh with that said um we can quickly uh take a look at the current polygon architecture that that supports this skillability solution and let's just uh come to uh this one so then you know like currently polygon provides a plasma um solution and also the the uh pos site chain solution so then we call this as a hybrid plasma pos sidechain solutions right so so basically um it depends on the need of your specific project you will be able to use uh either plasma or pos or or the combination of those two so then you know um so so uh with plasma bridge which is what polygon first offered back in 2017 when when uh it was still called as matic network um it's it's super secure as many of you may have known um the security it basically is piggybacked on um ethereum so then um so then you know just choose to secure the huge amount of asset uh it's it's really uh nice to be able to use plasma solution for the skilling however uh there's like a seven day challenging periods that um you would have to um take when you are ready to exit your asset from polygon chain uh back to ether min net right so that apparently this would not be an ideal solution for like gaming or nft or some of the device solutions and that's when polygon evolved with another solution and which is the pos site chain solution so so with that uh we basically have uh this three-tier architecture that you see in uh this graph here right and um and then you know just um on the very top part you see uh there's ether minute and uh that's where the staking happens um and you know just in order uh to be a no provider or you know just to be um to be a validator uh for the polygon chain uh so then um so then on the second layer you would have the checkpoints notes right so then uh that's the validator layer in polygon that we call as handle layer so you know just um it's uh like for all the transactions that happen on polygon site chain uh which is what you see here it's gonna be uh packed together and uh you know uh it's it's gonna be um check pointed to ethereum midnight through the merkle tree route and then at any point of time if there's anyone who challenges the validity of the transaction that happens on polygon is able to do so through the checkpoint submitted to the eastern midnight so because of this um a lot of people would like to call polygon as a commit chain instead of a sidechain right because the transaction finality it actually takes place on eastern midnight and then at this point the valid data we have up to 100 validators at at this point and then the auction uh is gonna uh take on you know like uh take take place to take new validators and then you know just for uh for this um stand alone board layer uh this is a block producer late layer uh it basically you know just uh produces a block at a very high speed and therefore not only it's able to provide skill ability but then together with the validator layer um and the well like the pos chain as well as the finality through checkpoint on ether and midnight it's able to provide you know like a blazing fast speed and a decentralized validate data layer and also is able to provide very uh secured transactions so then so then uh this is a quick overview about its architecture and now of course for transactions that takes place on internet mean that stakes think mechanism is um is put in place to basically sink the state uh information between the israel midnet and the polygon chain so you know um so then just uh with that said uh let's just take a quick look at the current uh problem statement facing the scaling solutions right so that apparently there's no one-size-fits-all scaling solution so then with that said uh just uh as an example uh that i shared about a plasma chain and also the pos chain we can see that uh different apps may have uh different requirements right uh so then you know just with the um benefits from different skilling solutions they may also come with the restrictions as well right so then just from the um from the plasma chain to the pos chain to the hybrid plasma pos train uh we're able to see that uh there's no size face-off skilling solution currently but um another thing said uh you know uh it's it's a positive thing uh there's always new innovation in scaling uh that's uh taking place right so so then uh just with that uh the old ones gets um replaced by by the more innovative ones you know uh so so now like people have been talking about optimistic roll up uh and uh z z k roll up um so so then all those basically uh would be nice that there's like a formalized framework that offer different solutions right or you know just to be able to consolidate all those different solutions onto one platform or onto one framework that way it can hand over the freedom back to the dev or to the project to be able to pick and choose which one will meet their need the best and then of course you know there's a so-called israel killers that's constantly trying to take the resources away from israel right and of course they they also offer their own skilling solutions and then stuff like that so then that is the current uh situation that we're facing in terms of uh scaling and so so then what is polygons solution to those uh problem statements uh so then if we just uh take a look at the graph to the right here right so that you can see like uh in this graph we basically have ethereum as a main hub in the center right and then we have a different scaling solutions surrounded and which form a polygon so then um so then here we see the pos plus minus chains that's currently offered by uh polygon and then you know there's like a stand along side chains uh just like our po pos chain um and and then there's also secure chains right uh like zk roll up um optimistic roll up as well and then there might be a enterprise chain as well right so so so then uh those are all included in this polygon and um and then the inter operability is also um offers through the connection to the ming hub right and uh and then uh they're also able to communicate or operate with one another so then you know just uh the ability to support all those different skilling solutions should that be a secure chain uh so-called layer two aggregators right uh the the uh so so basically the security would be um provided by ethereum maintain right uh or the standalone chains like pos chain um or side chain right where they basically would provide their own um validate data um layer right and uh and then they would be able to secure their own transactions so that either way um it will be aggregated into this big polygon and then it will be offered um with with this single framework or a platform so then by doing this it turns ethereum into a fully fledged multi-chain system and then we would like to call this as a swiss army knife solution for israel skilling and also infrastructure developments because of this and then the next the current power polygon so then currently there are over 500 dabs on board polygon platform and um and also you know with the current value locked it's uh over 10 billion dollars it um and we have seven million plus daily transactions and uh two billion mad token stick for security so you know like the figures of course they get updated very frequently and uh just to look at some attributes on polygon network so the current uh block time finality maintains two seconds and uh the average transaction cost here you can see it basically is just like a a very tiny fraction of a cent right so so it's like near zero and then um it's it's a evm compatible chain uh and uh this is also why dev loves polygon because all the tools that you're used to when you do um developmental ethereum you're able to use them on polygon and you know there's no new skills are required for you to learn in order to have your dapps uh migrate to polygon and uh and um yeah so so that it's just a very easy way uh for devs to start using polygon and then save big um on gas v uh well you know with with um with high uh throughput of transactions and you know just for um and uh just for uh the way that we actually do to deploy your smart contract on polygon i will be demonstrating on those in in a moment so then because of all those improvements right like the skills uh solution that it offers in terms of the block time finality you know and also the extremely low um transaction cost we're able to focus more on the high user experience right and also you know it actually makes a lot of sense for us to be able to provide meta transaction uh or guest list transaction services right just to uh make our debt you know like uh gas free for the any users to be able to use just because the transaction cost on polygon is so low and then we you know we often say if you just have one meta token which is the native token of polygon it's very much like ether ethereum in the way that you use the mathematic token to pay for the gas fee for the transactions right so just with one single medic token uh it's it's able to uh last you a long long time and then you know you are able to many uh to do many deployments and thousands and thousands of uh transactions on polygon so then you know because of this uh it's definitely more affordable um uh more practical for a dab on polygon to be able to provide meta transaction and just to cover the gas cost and then therefore to help with the major adoption of the debt and you know of um of the dap and of the blockchain um apps in general right so then so then um yeah that's what we just talked about why uh it's easy for uh developers there's no new skills are required to build a polygon compared to ethereum in terms of the dev tools or you know like the smart contract um programming languages uh and uh yeah and the wallets and then stuff so then we will go over go over that in a bit as well right so then um so that in the case that you already have a dev uh like on ethereum you basically just utilize polygon as a high performance transaction layer and so that you can deposit your asset from ethereum to polygon through its cross chain bridge pos bridge or plasma bridge and then you can do transfer access between different accounts on polygons save huge on gas fees right and then uh like when you feel like taking out your asset from polygon to ethereum you will be able to do so through the pos bridge and plasma bridge as well and uh so then those are different uh infrastructure toolings that uh currently um you probably use with ethereum um and uh those are all you know like available for you to use the same way pretty much um polygon as well and those are currently uh polygon adoption so then we see huge list if you just check check out uh awesomepolygon.com you will be able to see a very impressive list of different white wi-fi adapts gaming devs uh ft's and and also uh different tools that currently support polygon um and um the list just goes on uh all right so then before we come to bunty's parts um i would like to do a demonstration of how you would uh do deployments of your smart contract and polygon but i wonder if there's any questions uh at this point okay let me just um open this [Music] no questions yet awesome okay thank you so then uh so then with that said uh let's just uh quickly come to polygon stock which is docs.matic.network okay so so then like you will be able to find a lot of detailed information here and then you know just uh when you come to develop you will be able to uh find all the network details here on on this link network details and you know just for uh polygon for its main nets as well as for its mumbai test net so then you know just um in order for you to first uh deploy a smart contract on polygon of course you would uh need some guest token right so then um so so then you will be able to go to medic faucet here and then you know just uh if we're to use metamask at this point and then you know first you would like to define a polygon either it's testnet or it's midnight here so then the way that you do is just like the same way that you usually do to define an on a blockchain rpc which is that metamask you click on custom ipc uh our rpc at this point and then you just copy over all the information required here right so then uh you will be able to see them on this page and then if you are to connect to the testnet then you will be able to find this one here as well right so like after you uh specify all those information and you click on save and then there you will have this connection specified here through the rpc and all the um other required information right so so after you have this uh make sure that you copy the account information in that mask that you would like to use to deploy your smart contract on polygon and and then you would come here to to this site faucet dot matic.network right so then uh so then at this point you want to select matic token and uh we're doing the deployment by testnet and uh here you would paste your account address from metamask and then you do submit make sure all those information is correct uh and this is the matic token badges for uh polygons guest token so then you click on confirm and uh your um accounts ematic will be able to get um 0.1 medic token it doesn't seem to be a lot but it like i said it's gonna last you a long time so then uh so then um those two steps right so first we specify polygon uh network in metamask right and then uh you get some testimatic tokens and now we're ready to do the deployment so then uh so then the first one is with remix right so then here i basically just have a very very straightforward um vanilla smart contract counter and um and that at this point you would want to make sure that um you select injected web 3 right and then with net mask make sure that you select polygon so then in this case i choose the test net and which you can see this is a chain id for polygon testnet mumbai and after you choose injected web three and then have the correct chain id here list is uh you will be able to of course first uh compile your smart contract and then once it passes you will be able to deploy it right exactly the same way as what you would do in uh for instance a smart contract right so then you would uh confirm the deployment and then uh here you will be able to see your newly uh deployed a smart contract right here right so then um so that if i if i'm to copy this smart contract address i will be able to see all its transactions in polygon explorer which is actually implemented by ether scan team this is called polygon scan so you access that through polygonscan.com but uh but then you know since we use mumbai and testnet so you want to append mumbai uh in front of polygonscan.com and then there once you just paste your smart contract address um that you will be able to see that we basically uh just created on this contract right so then this is like 46 seconds ago and then it were to do some very simple uh interaction with our smart contract in this case in remix uh it's very straightforward you basically do count which is the read transaction and then you can do increments which is going to be a right um transaction right so then it's going to ask you to confirm and um and then uh once that one's done and then you do count you'll see that there's a change right but then uh you can also again just to uh refresh this and then you will be able to see that there's a new transaction that just came in which is the increment right okay so so then that is a very straightforward way to do the deployment on remix so what you do with um truffle uh as as you you needed to deploy that uh it's actually uh just the it's actually just the same so then you know just uh here we we basically just have a very very straightforward smart contract that we call tutorial token right so then here you can see that it basically just extends open zeppelin's erc20 smart contract right um and so so then um again it's the same as you would do deployment with truffle is that you create an entry for the network in the truffle config file and um so then you will be able to get all those information on polygons uh doc and uh you know so then if you just uh come here and you will be able to see deploying um matic right uh that's the previous name for polygon and then you know here you will be able to see all the different steps for deployment on truffle or on hard heads and then you can just copy over uh this specific entry for matic and uh once you paste it in your truffle config file here you're good to go uh and then here i basically you know just um uh applied for a free dedicated rpc um uri here you know just uh for a smoother transaction experience so then feel free to do that as well or you know otherwise you will just be able to use what we have for uh for uh you know just uh for like a common public rpc uh as here right and of course you will be able to find all these uh information from the network details here those are the public rpcs that are available right so then uh once you have all those information uh then you would uh be able to you know just to do truffle migrate network polygon or if you call this medic it works as well it's just a name and then dash dash reset and then it's good to go so then now it's gonna use travel to compile and to do the deployment so so then as you can see that uh it's uh the way that we do deployment of polygon is very very straightforward right so then uh this is like when you um just want to do direct deployment to polygon so what if you already have a dab as what we mentioned just now right so so then what you can do is that you can basically map your uh token um contract i would say you know just for like erc 2721 1155 those are all currently supported or uh just to map your you know arbitrary smart contract through the mapper tool that we provide on polygon that's how polygon is able to know uh the mapping to the smart contract on the parent chain right which is ethereum chain so then uh so once the mapping is done right and and then the link is going to be established between the child contract and the parent contract and then you are able to use the sdk uh that we provide on polygon just to do a very uh straightforward interaction with your smart contract of course the web3.js and ether.js works just as well but then with uh matic.js sdk provided on polygon you are able to uh have a lot of heavy lifting taken care of for you and you can just recall very um some simple uh apis for the cross chain uh transaction uh interactions uh for the cross chain transactions be between the maintenance um and uh of ethereum and polygon minute so then uh this information again is available here right all right so then um so then um i basically covered how you would do with um deployment on polygon and also how you would do with uh cross chain um transactions right and i just want to quickly check uh do we do we still have time um we're actually out of our scheduled time but if you have like something that'll can be covered in about like five minutes then we can go a little bit over awesome thanks a lot okay so then uh i'll try to wrap this up in five minutes uh there are just a lot of amazing things uh that we offer on polygon um so then you know just feel free to check out the docs uh so then so basically at this point we covered how to connect to the rpc you know uh connect your tool like metamask with polygon and uh how you would switch to polygon and uh and also you know there's a network agnostic feature that we offer uh here in polygon and which is uh i can just uh demonstrate that very quickly um it's uh nft uh today uh this one is actually for the test net it basically uh is a tool that we provide to the community to be able to meant nft tokens uh free so then this one not only it demonstrates meta transaction that we support on polygon which we use economy and of course uh you can also just use other meta transaction framework that you like um and um and um so you know just to uh support this guestless user experience here and also it utilizes um fpfs for uh for uh storing and um and then with that said i'll just quickly demonstrate this so uh just okay so then here you're able to see that file is being uploaded to uh ipfs uh and uh actually i think it would be nice for me to actually switch to a different uh network here uh this may not be the best account okay so then i'm gonna use uh this account because with uh this account you can see that uh i have no guest token here and then we're actually connected to kovan testnet so then just with uh this one and also let's just do title and then of course i need to connect wallet just to connect this button here and this is connected as you can see um i think we may have to refresh this page because it seems like it's connecting to the previous accounts so then [Music] so files being uploaded to fpfs and then we can just click on next right and then we see that uh json metadata is being uploaded to ipfs as well and um and then again uh this one is actually connected to polygon test multi and then you know you will be able to test it on your own and uh we also have men's uh an ift uh that's connected to the mainnet i think uh is that network nope okay because uh it's just uh today so then first you want to connect to your wallets and then you know here uh switching back we see that uh nft is already minted at this point and then you know if you click on the transaction hash you will be able to see uh the the ft token information here right so then we have this token id um and uh there you go all right um so then um this is the uh information that we are covering today and you know um there's actually also a network agnostic uh transaction provided as well crosstain as a transfer we briefly touched it right that you can do deposit and uh withdrawal so now as i said uh i would like to quickly come to bounties um that are currently offered by polygon so then feel free to check check that out and you know if you have any questions please feel free to reach out to polygon team on discord and you know just um happy hacking here thank you so much ewing for running this workshop and thank you polygon for sponsoring hackfest 2021 um just like what eling said reach out to them on the sponsored polygon channel on discord and yeah have a great day everybody bye 