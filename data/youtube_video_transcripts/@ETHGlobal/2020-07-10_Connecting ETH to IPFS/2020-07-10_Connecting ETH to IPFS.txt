clothes relied that's your cue go retweet okay oh go retweet - okay so it's gonna show up I'm looking I'm looking we're live we're retweeting way I don't see it yet there there it is there it is tweeting okay we are Lee that we're full circle that's a full devil ooh we went into em there I can see it live on Twitter retweeted it here we are wash yourself talking it's great yep though yeah all right quick intro before we get started welcome everybody to this a confess tutorial session with none other than Austin Griffith if you don't know Austin he's been building and experimenting and hacking stuff for a few years now in the etherium space and we're very fortunate to have him together a very specific tutorial just for hack a fess and he's gonna be going through that today and we're I know I'm stoked let's see any with just except over staking deadline was yesterday so hopefully everybody here has staked like I said in other sessions we're gonna start and uprooting the slack to people that are gonna stay around for the next 30 days or so I keep forgetting that it's we're already at the end of week one which is pretty incredible it started already going fast so it's gonna be not 30 days but three three ish more weeks until submission so exciting - moving fast we're learning stuff and Austin's gonna be going through this tutorial in a minute but before that let's just get a quick poll of the audience give me if everybody could turn on their video if you can't that's okay but if you are able to that's fine let's see if you've heard of or used let's stick with used Austin do you under used or heard of which is this the ENS one now the ethers yeah whichever one you're using basically your preference even if it's just heard of or something have you used or heard of web three just give a little wave with your hands alright okay and then if you've used or heard of ethers yes a little wave okay a little bit more people for web three alright give me a wave if you know what ENS names are give me a wave if you own an EMS name Austin has three hundred doesn't count if I lost the wallet you own it in your heart how about that alright cool that's it's a good good sampling got some idea Google's experience Austin that's great it's is it time yeah I'm ready okay alright let me so hi I'm Austin Griffith a builder in the space I have put together a ton of projects many of them were failures and that's part of how this hackathon process works right you'll you'll you'll build a lot of things before you find something that really sticks and that's just part of the grip that it takes to work in the decentralized web so let me just share a screenshot our screen here and I should have the hack FS website we good so I wanted to do a tutorial that would prepare you for hack FS in terms of being able to build something so if if you're interested in the fundamentals just kind of how web 3 works how etherion works this this is a good place to start I would go to eat stop build this is a pretty fun video but then after fun promotional video there's gonna be a lot of good content there that just talks about like what the heck is a key pair you know how was it distributed ledger different than blockchain and how how did we get to there and how proof-of-work kind of changed things and there's there's just a lot of like little tidbits here that will give you a lot more context into how theory works and then kind of how smart contracts and transactions and all that work but I won't dive into that stuff I'm gonna assume that we kind of have our bases covered in terms of the fundamentals and we're going to move to how the heck do I build a product in a couple of weeks on top of aetherium and ipfs so i would start with this tutorial which i will paste into chat sorry to interrupt but I don't know if you mentioned it but if people do have questions just oh yes either drop it in the chat I think that's probably the best way you could drop it in the chat or raise your hand and then awesome we see that yes or sure chat is hard to find when you're sharing your screen got it okay yes there we go okay so that is the first tutorial it's it used to be called like ipfs too long didn't read ipfs aetherium I change it to connecting e to ipfs to be a little clearer about what we're doing but we're going to just kind of run through this today kind of step by step take our time please ask questions let's just let's just get started so I do a speedrun where I do this very quickly this will be a little bit slower and we can kind of talk about it a little bit more so the prerequisites are you're going to need node I think version 10 or greater yarn and get all of these links will take you right to those again I talked about kind of core aetherium concepts there's some links there in the article to go check that out make this a little bit bigger there we go okay so I'm just going to clone this down and we'll get started let me get a console over here and get it zoomed in all right whoo that's too big too big okay so we're gonna clone they'll already have a hack FS its name is something else this will be ipfs demo okay and it'll take a while to install so we can kind of look through it as we get to it but this is scaffold eve scaffold eath is not technically a product itself but more like a stack of existing products kind of like a lamp stack will do let's see we need to check out the IP FS example and we need to yarn install okay so this is gonna take a bit to run we'll keep that over there but while we're at it we'll bring up a new console and we'll just go look at the code just to get familiar with the code base okay so ooh but that's gonna be hard to see y'all have to trust me here I bet that's pretty hard to see but we've got a bid ler folder right here and we've got a react app folder here those are your two main directories within the bid ler folder you'll find a contracts folder and there is our a tester so we're gonna make a smart contract called a tester that will let us write stuff to the etherium chain to attest to those those strings and then over here in the react app we have the source app dot j s and this is your front end application if you're familiar with react development you'll be right at home with this we're gonna get into the hooks and components a little bit more let me it looks like our installation finished now you might be like oh no you got a giant error I've got to fix this actually this giant error is it's an issue with dependencies with script with old node you're actually fine it's a warning you should be able to do a yarn start and fire up your front end but this will this will spin out of control if it gets set up because there's a couple more instructions and you'll see those in here it's gonna say be careful your CPU will go nuts you also need to do a yarn run chain okay and that's going too far fire up your blockchain and that is is backed by bit ler and bit ler is a wonderful speaking of the stack the the L the L in in my lamp stack is bid ler its might be I guess I think they're changing their name so we'll see what I think I think it's gonna age that's a Loki Loki inside knowledge but bit ler is up and running now we have accounts that are loaded up with eat this is similar to ganache or other kind of local block chains that you can have up and running and then once we have all of that we're gonna do a yarn run deploy and let me zoom in on that that will take our smart contract compile it into bytecode and push that bytecode to our local chain and if everything works we should have an aetherium app that comes up and I'm just gonna bring it up here and let's see can i zoom in a little bit well look okay that looks okay okay so this is our tester and before we get into the code let's just see how it works basically you can take a bunch of data you can type in hello world this can be image data this could be compressed data this could be a whole number of types of data but basically what you do is you push that up to ipfs and you will see that API in a second but basically that goes up to ipfs and comes back with a hash so this is how ipfs works you you give it some data and it's content addressable so whatever data you put in there it basically takes a fingerprint of that data and gives it back to you and what i can do with this fingerprint now is take this somewhere else you know some kind of disinterested third party some some gateway that is also reading off of this shane and there we go we see hello world if i see the way and cool oh man is it gonna be zoomed way and if i reload okay good so so how does that work how what are we doing here what's going on here while we're pushing stuff to ipfs well if we go look at this app it's going to give us the the code is actually very simple for for pushing something to ipfs we bring in the client so you'll do like an NPM install of this client then you bring it into your code and we're doing that here's somewhere yeah right there okay and then you're gonna need to connect to some note if we think of ipfs like a theory and we've have like all these distributed nodes all over the place and you have to connect the one to kind of start participating in the network and you're gonna use a key pair to sign things just like you did with with an aetherium key also so once you're connected to the network we're going to connect through in fira so in fira just like they provide us with an endpoint to main net or rinkeby we're going to also be able to connect to in fira to deploy stuff to ipfs and that's that next line there and it's a little slower but it's it's a really nice kind of public offering to have that they're available so you so everyone doesn't have to run their own node then we can do an IP FS get and we can get some hash just like I pushed that hash to that website and got it back or we can do an ad so that the API is very very straightforward very very simple you're you're connecting you you know you bring in the library you connect to some some node that's ipfs and you do gifts and and ads you do get some ads I got to do that the right direction okay so let's let's dive into this a little bit more and see what what the blockchain side of this looks like so going back to our a tester once we once we have something once we have our hello world pushed up to I Fe FS and we get the fingerprint Bratt back oh also if I change this at all like exclamation point that's gonna change our hash see that if I do that it's a little bit different hash so since things are content-addressable since you're getting a fingerprint of the data the data changes the fingerprint changes makes sense content-addressable stuff content content addressable content happy bowtie Friday okay here we go so now we want to attest to this on chain what we want to do is let's go look at our contract we have we have a hash of a thing that everyone else has and now we want to kind of sign that hash in a way that proves on aetherium that we're that we're attesting to it and so what I did is set up this simple contract that does nothing more than has an attest function that takes in a hash and then using the message sender which is whoever signs that transaction they we save that and we emit an event so if I go over here and who is this no I'm gonna get out of Menem ask for that first okay so well it's not gonna let us do any wait we need to do hello world again and we need to upload that to ipfs and get our hash back but it's not gonna let us do anything so we don't have any gas on the network so the first thing you do is scaffold eath usually is dive in and give yourself some local testing that Ethan you can see that kind of flow in there right now when we attest to this it's going to make a call to this contract and it's gonna pass in that hash and then we can see if we read from our chain we can see that this address is attesting to this information cool and there there it is that's probably not that's rank of year localhost looks like I'd applied that to production earlier okay now let's let's like dive into like what the heck is going on here so this this is a scaffold eath app and it has a lot of stuff provided for you you'll notice that like if we get in and look at the wallet there's an address entry and I can do things like ENS resolution right I can do things like click here and it'll be my scanner I think yeah hello right so I can scan a QR code things things like oh I can put in 100 USD and I can swap that back and forth between eath just little nice things about building an app a lot of those UI UX niceties that you'll get scaffold leaf has those for you here when you try to you you know you want to create a component let's go to scaffold even let's look at those components if you want to create that address in point it's just an address endpoint component input component that you put in so there's a lot of components that are already made for you and if you're getting started with scaffold leaf I would start with this decentralized centralized money let me paste that in the chat also this this gets you just a good kick off of how scaffold Eve works and how it compiles the contracts are compiled and along with these components that you have they're really nice token balance providers faucets block ease balance input all the stuff that you you find yourself using over and over again when you build a decentralized application those components are all here for you PR is welcome if you want to help out and then hooks are the second thing so a lot of times you will need to say let's see we're getting the gas price here right if we want to get the gas price yes you could go to an API and you could build the react components yourself that'll go out and get that stuff but wouldn't it be nice if something was already built for you and that's the gas price hook or the exchange hook or maybe you need to load a contract or read from a contract this contract reader hook is really really useful I use it all the time it's just like go to this contract tell me what the value is for this and then pull for it and keep it up today and that is so nice to just be able to say use contract reader this contract this is what I want and then I just have it in my app and if you don't have that you'll find yourself building it so instead of reinventing the wheel try try using some of these hooks same thing if you need the block number you need to balance the time stamp from the from the chain token balance all that stuff is here you need your transaction count so there's hooks and there's components getting started with scaffold eath would be decentralized programmable money but once you get here you're you're going to be familiar with okay I've got a contract I can compile it automatically injects itself into my front-end I can talk to my contract here we're talking to ipfs in this example basically we've got sort of a working app sort of ready to go right we can we can put in any data we can upload that to ipfs using that that code let's see if I can find it before it gets back that code right here we're using this add to ipfs function and it's still going so it takes like 15 or 20 seconds to put so this is brand new content and so it went back and forth and said oh I got a really upload this thing and so now that is going to take some time going through and fira and we'll dive into kind of how we can do that better at the end of this call ok so there we go that for the first time ever that data is probably written and if I go to ipfs io / IP f / this hash it's probably o but in that's pretty quick pretty quick okay cool and then if we wanted to attest to that on chain we just make a transaction okay basically we have our app it's built let's let me go to meta mask I know I'm gonna need to reset it so if you use meta mask so basically to bring that a mask in there's a connect button up here and you connect your meta mask and it's gonna detect things like your ENS you know address displays do that automatically with scaffold eath but you'll need to make sure you're on localhost and one last thing you have to do this all the time but go to settings advanced and you'll have to reset your account because the nonce needs to go back to zero every time you restart this chain and there's there's really not a great way to do that right now so that's just one of the little gotchas kind of why we why we go through this but if I reset this it's gonna set my account nonce back to zero now I can give myself some money from the chain you'll see that happening over here and then I can say hello world and we'll get that back quickly and now I can attest it Aton chain and all the way over to the left for some reason let me go get that meta mask dialog here it is and we can confirm and that's going to write to my local chain and notice bonus points we've got a console log that's saying what address attests to what and that's coming out of our contract right here console log right and solidity boom props to the biblical for that I think they had to rebuild a holy vm just to get that to work but props there look at that I got a console log I'm attesting to something with my meta mask basically we're done with part one we've kind of figured it out we've used it with both now you've got ad app you've created it with scaffold eath actually let's take a let's take a second to pause and see if I have any questions here localhost crypto wallets building locally yeah building locally is some kind of trick you kind of want to have your own chain and everything up if you do need to interface with other things you kind of want to use the fork function from ganache until bit ler gets that built in yeah the meta mask I wish metamath could do a lot we're gonna get into the ENS app it's gonna even be more complicated then where can I find more about the nonce issue okay so basically it's there's not there's not a bunch to it basically when I restart this my transaction count is going to go back to zero right but meta mask is keeping track of my transaction count over here and so I just need to reset that back to zero if I try to make a transaction with a nonce of three it just won't be valid on the chain and I think they're working through something but I talked to the guys this morning there's that still isn't it's it's still an open issue there so what you'll do honestly you'll reset this you'll get in here your stop messing around with scaffold Eve you'll connect with meta mask and it'll fail and you'll go what the heck is it failing for first thing you should check is resetting that nonce cuz and then the second thing you should check is your gas price and if you have both of those it's probably gonna work and it's probably a failure within your contract and you can debug that really easily with bid ler which is awesome okay so now we have built an app we've used scaffold eath we've used all these tasty hooks and fancy components to put together a decentralized application now what is next how do we deploy that right like it's all working locally what do we do to go to production and so what we'll do is we'll go to just rinkeby and an IP FS for our production deployment but the motions that we'll go through here you could just replace rinkeby with maintenance gonna work the same it's just gonna cost a lot more but we'll and take a little bit more time but we'll go through those steps as if rinkeby is main net but I'll just use rinkeby now because it's cheaper and quicker okay so this is decentralized deployment this is basically part two so if you go to this and scroll down there's probably part 2 of 2 and this is part 1 of 2 and I just deployed this this morning so there's probably yep see that error you that error you're gettin might be did you do an NPM and so you need to do a yarn install whoever is getting that error you want to do a yarn install first okay here is the second article this article is well yarn add I don't think I understand yeah that that looks like it's doing a we're doing two different things here oh yeah and so yarn install yarn add yes yeah yeah yeah do your an install there we go okay here we go Park team Park to you time to deploy so we've got our app built it's it's accessing our local blockchain and it is actually deploying the the half of the text to ipfs and coming back and we're attesting to that right but we're attesting to it locally we wanted to test to that on a higher value chain and so how do we deploy first our contract but then also our app to something that basically what we want to do is create something that even we can't stop right we want to really build something that's unstoppable and let's let's do that so let's see the first thing we need to do is put our smart contract out on a real chain and what you'll need to edit and if you follow these instructions it'll tell you packages bid ler bits are config which is right here your bid ler config is gonna have some stuff from me and here that helps you send stuff and get balances for instance I can say you're on run balance of some address and it's going to tell me what that that addresses balance is I could do yarn run send and send some some money from from one to the other get the block number just little handy things like getting the account but at the bottom you will see that there it's bringing in a mnemonic and it's connecting to whatever network you're using your compilers there too if you ever get too deep into things but what we need to do is point this thing instead of at localhost let's point it after rinkeby okay now we're gonna need a pneumonic it's gonna read this so this is gonna fail because it doesn't have what's called an HD wallet that what we need to do is basically create an account so let's go to am I missing something in chat let me find yeah but yeah post your question I don't think I wanna get also I'm YouTube encrypt a wall up to this lab and so I'm just I don't see how you connected that bullet to the app that we built so I grabbed some of the accounts of the deploy right so we deployed started the chain we have all the accounts of them and I'm trying to use the account with the app started so I'm not seeing where that is so that account from the APIs is a burner wallet basically how you open up localhost in incognito you're just gonna get an account and all you got to do is just send that account some money from the faucet is that what you're asking about that was absolutely the question I perfect yeah yep yeah so this gives you cool cool awesome no problem okay so and this is where it's gonna get a little tricky here because we're gonna have to do a little bit of magic but what we're gonna need to do is what what bid ler is going to need it's an HD wallet it's what it's called and what it wants to do is it needs to deploy this thing to rinkeby so what we're gonna need to do is create an account that has some rinkeby eath on it and so what we'll do I think I have a handy eath build laying around here somewhere actually let me just go to sandbox daddy that build and see if it just shows up it might already be here yep okay here it is let me just share this with everyone right here in the chat if you're interested so what we're gonna do is I'm going if if you're familiar with a mnemonic it's basically this phrase right and this phrase is used to derive a private key which then is used to derive a public key which then is used to derive an aetherium address and if you want to create an account on aetherium all you have to do is generate these random 64 characters to get that account and if you do a good job of generating a random account no one's ever going to be able to find it so what we use is a seed phrase we use a twelve word seed phrase to generate this the key and what that is is it just makes it a lot easier to share this or to save this or to put it in our underwear drawer to be safe fish right so what we want to do now is I'm going to hide that so no one can see it and I'm going to generate one all right so here is going to be our address right and what I want to do is download that and I'm going to put that out on our desktop and call it mnemonic dot txt this is cool there's some there's some real some real blockchain stuff right here okay so now we have a twelve word seed phrase and just to verify let's just keep keep an eye on let's see let's put it here let's put it here OOP OOP OOP okay so that's I'm just saving our address okay and then I'm going to regenerate it so it blows it away whatever changes we had now if I bring in this pneumonic and I drop it in here oops I did something wrong there bring in this demonic and I drop it in we should have that same picture okay so now we reliably have this pneumonic what we want to do is put it in this folder bit ler so now our pneumonic is here so now when I try to deploy on rinkeby it's going to use that address but that address doesn't have any yet on rinkeby so let's send it some and we can see that by this guy's actually going out it's taking the key pair getting the address asking rinkeby for its balance and getting zero so let's send it some ring quote real quick so we have money to deploy this contract so I'll change my network to rinkeby I'll hit send I'll paste this in have to put that or the UI locks up Thank You Metta mask and let's send zero point what do we need zero five that should be enough right can I send I hope that's enough eat we'll see so in 15 seconds we should see that go through and then we're watching this number here in eat build come on test blockchain come on test nut block Wow okay still waiting for a rinkeby transaction there we go confirmed okay so now this guy should eventually load and I'm worried about this rinkeby let's try this real quick just in case just in case that in fira is overloaded yeah something is not oh no oh no oh no we have the wrong name here let's we need to put our pneumonic file back in here a show in finder sorry everybody you need to get that pneumonic oh where did it go it's lost in my windows here we go here we got it got it got it okay we need to drop this guy in right here and then it'll set the address right and then it should be reading from the chain correctly it is not let's let's set this back to rinkeby making sure I didn't do something wrong there everybody we got it okay so there we have a wrinkly balance I could have just copied this and gone to rinkeby but I had to do it the hard way for some reason if I pay seven we should see this guy five okay we are ready to deploy sorry for sorry for the slowness here we go i PFS demo so normally we just did a yarn run deploy and it shipped our contract to our local chain that's because we had oh there's my mnemonic don't go get it Kim give me a second to deploy this before you steal my rinkeby eath okay that that looks good we've got this in here okay I'm gonna go for it I'm gonna say we want to use rinkeby to do our deployment this is saved here we go yarn run deployed now hopefully this will compile and deploy our contract and and this could be oh now okay we're not getting a good response that means that my my in fear icky is probably slammed which I have a lot laying around money let me find another one okay here we go this one alright let's try again with a new and fura key if you're interested there's a link to and Fira though it's taken longer now it's working it's working we're deploying we're deploying 15 seconds boom there we go okay so now let me just paste this into chat you guys can actually take that and put it into rinkeby rinkeby ether scan and it should think that that is a contract okay and also this is injected into our front-end so now that our front-end is set up if I do I think let's just go back to the okay we use the eath build we got our 12 word seed phrase we did the deploy okay so that's gonna take a little bit longer now yeah we want to go look at our address whoops what's in rinkeby and see that this thing is out there and live there we go yes it is a contract it thinks it's a contract that's good it knows it's a contract cool and we know who created it there's our okay cool so a disinterested third party has validated the fact that we have uploaded our contract and our contract is live that could have been main net it would have just cost a little bit more the steps are exactly the same you just get your main net thing here and put it in there now our contract is up and the artifacts for our contract like the address and the API are injected into our front end sort front end needs to be we'll make one more change then believe we talked about that next oh yeah we can we can even if you want we can prove that our front end has the current address look at this so we're looking in the react act remember there's two packages there's bid ler where a contract is and then there's the react app where our app lives and this is just proving that the bid ler artifacts have been ejected into our app and our app will basically talk to the rinkeby contract now and the problem with that is our rinkeby isn't our app let me go find it our app is actually still set to talk to local host and I can set the react app provider environment variable or I can just do some thing like this where I'm just gonna snag this and tell this to go talk to rinkeby instead and just knowing that this might be bad I'm gonna go ahead and replace that so we have a good token in there there we go so now we've got an inferior provider that's talking to main net for things like ENS we have our local provider that's just hard coded to rinkeby so when someone lands on the site we're gonna go talk to rinkeby to find our a tester contract and we can test that locally if I reload here I'm gonna need to make sure I put my meta mask on rinkeby and if I do hello world it's going to go to ipfs exactly the same but now when we attest to this we're going to be a testing on a real chain not a local chain even though it's a test net could be main that but all real kind of chain things now apply right I am I'm gonna have to wait for that block to get mind I'm gonna have to wait for my transaction to go through but now you guys can see you could go look at that contract and you could see that I attested to hello world as soon as this transaction comes through so even if I was being censored in so many different ways you guys could still get to this and see you could get to the contract and you can get the IP FS information okay so now we've got our front end talking to rinkeby now and it works and we've tested it locally now we want to deploy our code so when we'll need to do a yarn run build and this will take a second I'm not gonna lie sometimes you run out of RAM you have to have a decent machine there's a lot of dependencies that go into building a decentralized application so when you packages it it up and get it ready in a static site it just will take a while let's see any any big questions let's seize contract integration do you have to build oh the contract injection so the contract injection functionality is is automatic and part of scaffold eath if you go look in the bible-- or folder here there's scripts there's a deploy script and what you'll find is right now it's doing an auto deploy it's taking all the contracts just shooting them to the chain you'll you'll end up saying okay I want to actually deploy a token and then take that address and put it into the constructor of another contract so you'll you'll have a more exotic deploy scheme and you can kind of comment out this auto deploy and start customizing it but out of the box scaffold ease just tries to figure it out for you and an auto deploy it same thing with the publish the publish is just going to read bid lers artifacts and then pushing those into your create react app and our create Etha is what it is that's the kind of the second letter and the stack is create e F by by Paul Berg it's it's like kind of this minimalistic it's like create react app for aetherium where you can bring in some kind of ABI and address it kind of I think Paul's working right now in kind of creating like what does the template scheme look like like when I bring in unis WAP I'm bringing in an address and some other artifacts but can we standardize that and once he standardizes that I'm gonna standardize this publish to use whatever method he comes up with so so that's kind of like it's kind of raw right now just trying to figure it out but good good kill kill in time because we got our app to deploy so now we have a built by doing LS we can find that there is this build folder it's it's buried in there let's see if I do an LS packages let's see react app there we go this should list there we go so that is a list of our packaged up app now if you're familiar with a static app you can put that anywhere right I think in in here I talked about this is normally when you're building an app you would yarn run Serge you would you're on run s3 you would get that static content out to some edge servers right where it's hosted where basically you know DDoS isn't even going to shut it down it should be able to handle some traffic but like we could still shut it down right like if I deployed this a tester and I attested to I love blue popsicles and the next day I decided I like purple popsicles and I want to shut everything down if I've deployed this to a static place where anybody can get to I just go take it down right but the point of a good attestation and something important is that no one can mess with it right and that's what we want to do basically these these traditional static deployers couldn't can be shut down by at least you if not some other folks definitely running servers and stuff amazon regions and whatnot so what we're gonna do is use IP FS just like we're using IP FS to attest to some information let's actually put the ax tester itself on ipfs so you don't even have to go to right now you could go to scaffold eath let's see what's a good example of the instant wallet right this is something that I'm that I'm building with scaffold eath right this is just hosted on AWS right I could shut that down or the nifty docking project that we're working on that that's on that's not an IVFs this stuff is stored on a server and could easily get shipped down don't know exactly where I was going with that but let's let's jump into ipfs just like we're using in fira to push our messages or attestations we will push our code and that's actually all ready written for you in scaffold leaf you don't need to do anything other than just do a yarn run ipfs and so let's go find that deployment I wrote it this morning it's in here somewhere IPF SJS okay there's a lot of stuff commented out but we can see again oh we're bringing in the IP FS API we're talking to and Fuhrer we're doing a little bit of stuff where we make it recursive so we can send a whole whole block but basically this and this could take some time this is going to take our website and it's going to one asset at a time push each thing into IP FS in a recursive structure so we're left with basically a hash pointing to the directory of all the information and all of it lives in ipfs but this could take longer than a demo is worth waiting okay so let's just imagine that just went to ipfs let's see see what the next steps are yeah so basically it's gonna go for a while and then it's gonna give us back the CID which is that I think it's called a dag I don't know a ton about IVFs there's like a hash and a dag and I don't know the difference but if you just think about it as there's a hash dressing your content this is this is the thing that is the address to your content I could take this right here and I could put this into ipfs dot IO and I could go get this information any questions while we wait for oh no we got a gateway timeout okay so it's it's not even yeah in Fuhrer is not even letting us push content to them I've probably hammered on it too hard which is which is why we're going to need to get into hard mode in the first place okay so this if this doesn't even let's let's try it again let's see can I set the timeout the timeout set at zero I mean it's just gonna wait a while come on i PFS actually let's let's just I'm gonna short prep this here's one idea here's what I do I'm a I'm a pole I'll pull an audible I'm gonna bring in a little secret let's see what's it called its called Penner bringing a secret Penner dot oh what's it called nifty dying I think this is it and this is this is probably wide open and anyone can hit this but let's try using my own pinning node nope okay so it's not like in that maybe it's ipfs there we go okay so I happen to be running my own ipfs know just like in fira is but it's set up just for me and I'll show you how to do that in a second but you can see now it's pushing those static assets out and there we go we got this hashed back and we could even locally tell our own no no we don't have a local node yet that's not right we're not ready for yet okay so this came back and we could double check it right just like we're going to ether scan and we're going to that kind of disinterested third party you can find any ipfs gateway and you could type that in and you could wait for a long time but it's not even oh there's a package there's a there's a gotcha here let me see if I can find it so I get this right it's homepage dot okay you need to in your react app set homepage does and I didn't even that in the article they put that in my notes to make sure that goes in the article okay okay the home page dot basically our routes it locally so you won't get this weird dead page okay so let's see we're gonna save that we're gonna yarn run build and and yarn run ipfs but we are getting we're running out of time so I need to probably jump forward a little bit let's see we have let's look at the article where are we in the article okay Ian s so the next thing we want to do is if if we get this working and actually this will work without that so I can just grab this so yes yes is like DNS it's basically you know you've got you can ask for an address it does the thing where it translates this nice name into an ugly name like for DNS we have you can go to Google i/o instead of having to put in Google's IP address right so Ian s will do the same thing as DNS for our our this hash right here so we can use this as a Content hash so I'm going to go to e NS and this is this is you don't want to do a live demo let's see so let's get it on maintenance this is the demo gods are laughing at me right now trying to pull up the e NS app but we're gonna we're gonna go for it alright if you go to you can basically register anything dot eath I think it has to be a certain length I've already registered scaffold dot eath and I'm gonna just set up a sub domain there we go so built and it's gonna be ahead of me okay so this will be let's just call it hack FS now you got to be very careful here I'm gonna hit save and a meta masked dialogue is gonna come up way over here and the gas is not going to be set so you're going to have to manually set your gas like it's 2017 and it's gonna cost me 75 cents to do this but here it goes okay now you can I don't think you could leave the page like you got to be really careful with this but I think we're I think we're waiting I think that I think you don't leave the page for the registration like the commit reveals the you're probably fine once you fire that off to leave the page but I mean like superstition I'm not even touching anything electric right now hopefully there we go okay a good what what what is that why did it get set to the name and not that there's no resolve oh man this is great yeah yeah this is this is nice what what is that okay let me try that one more time I don't I don't even know one more time I would like to register this I'm going to hit save I'm going to grab my meta mask from all the way over here I'm going to manually edit the gas so it goes quicker and save and confirm and another transaction goes what is this I mean what is even going on one more time one more time worked okay so the trick with any web 3 app try at least three times you never know here we go I guess yeah I'll always always up the gas but I think I mean like I was like 40 something that we can go look at the transaction something weird happened with the way it translated the text to hex I think okay we we are very very close here now it already has a resolver set you'll see over here a record we're looking for content ooh content what can we do well we can go back and we can find this hash that we deploy to ipfs and we can come in here and we can say this is an IPSS content hash and we can save and we can go grab our meta mash dialogue all the way over to the left and we can edit our gas price and make sure it's turned way up cuz there we go all right all right the blockchain gods let's see what happens here hopefully what happens here is we take a name one more time scaffold II and we associate it with the content that we put on ipfs but that association is also in a smart contract so we have our smart contract that we're attesting to something from a front-end that's pushed to ipfs and then registered in another smart contract so all of this stuff if you were if if you were in a place where you could hardly get internet and everything was censored you could figure out a way to run an aetherium note and run an IP FS note and do all of this stuff without getting sensors so let's see here we go if I put in what we're linking to here let's just let's go to it right it would be one more time Capaldi --the dot link you have to add the dot link on the end and there we go oh man what okay so does this work let's let's work backwards here's the link it gives us oh wait there we go there there it goes to the Gateway and there's our tester okay so then why link it it it's set up here we can see that we we have it linked and the Gateway works so so yeah they post that into chat at least we could see that this guy is very decentralized other than that gateway right that gateway could go down and we would have to find another gateway I I'm at a loss for why this that worked earlier isn't working okay we got a speedrun we got to finish it up Oh someone someone else can go to one more time let's let's try that let's try that do you guys get the app if you go here maybe you let me try HTTP just in case page not found no no no one gets the app everyone gets 404 maybe maybe I built something around here maybe this no because it comes up I don't know I don't know we're about out of time let's see what is left in this dock basically exactly what we did but normally you will find that you can go to this address and if you have ipfs I mean it's set exactly like I have it and when you click that and this goes to your gateway that doesn't go to the Gateway I don't know this this worked exactly when I click this it goes to the gateway and that works fine not sure if what's going on here let's let's do ok hard mode let's finish this up with hard mode so it's muttaqeen yeah for you get it it goes it works for you yeah it's looking good so maybe you're closer to the master IP FS note or something I don't have blocks I don't know why I don't know what's going on the baby maybe just take some time to propagate yeah yeah by the time you are watching this at home you should be able to go to one more time dot scaffold F dot link and see it it all worked perfect okay all right so there's there's there's a kind of a weakness in our chain of stuff here and that is that we are talking to in Fuhrer for for a lot of this stuff right what you probably want to do is run your own aetherium node and run your own ipfs node and it's going to go a lot faster if you're pinning them on your own nodes so let's just go through that you you just go get it's called go ipfs you go download that you extract it you CD in and you install it and you'll notice that see if I can bring up this ipfs we want to run daemon right let me zoom way in on that too far here we go so now I should be able to run a local node there we go and so what he's gonna do is he's gonna swarm up he's gonna have a bunch of peers that he's talking to they're all gonna do decentralized thing no one's the leader all sorts of problems with what happens when a network is decentralized and there isn't a centralized leader that very hard problems that much smarter people than me are solving but what we can do now is we can replace anywhere we were talking to ipfs with now let's go talk to local host so let's go let's go try this out let's grab where's my cup where's my cup am running out of time let's grab this okay so instead of talking to my cool penning node basically we were hoping that we could use this and it would it would it would be slow but work but I think it took so long then let's now use our own local host node and watch how quick this thing can pin this stuff so now if I do yarn run ipfs right it's basically just pinning it locally right and then then if someone wants to get that content they're basically gonna have to traverse the network and do all sorts of magic stuff and find my node that has it and then they grab it and maybe they pin it so now there's two people holding it and if you need it I don't know exactly how how that all works but if we were go to go ask ipfs I slash ipfs what this is we should get our app yeah cool there we go there's our tester just just one more time can I do one more time come on nope okay now that we are talking to our local host we can tell it that we want it to Penn oh I bet this is the issue we weren't pinning it right okay so we were just adding it we weren't pinning it so we're gonna do a couple things here I'm going to first I'm going to tell it to just pin to our node immediately and then we're going to bring in a second phase of ipfs that's called IP in it and that is IP it's like a name service right so IP NS is a way to have kind of a hash on top of your hash so every time we make a change to our app our hash is going to change we don't want to have to rewrite two ENS every time that new name so what we want is an IP NS name in the middle kind of unfortunate naming the way that rolls off the time but what we want to do here here is we're gonna do a ipfs again let me make sure I have everything saved over here but this time it's going to pin it locally and then it's going to try to get that name service piece going so it's gonna take that hash and it's gonna try to submit it to IP NS now that is also going to be slow I'm going to I'm gonna just cut its love since we have very little time I'm gonna point it at my node and I'm going to tell it to pin and go to IP and s all that kind of stuff on that note that's kind of like it's out on it out in the cloud so I'm assuming people can get to it easier and then I'm gonna do one last DNS ens set and see if we can get it but that is that's basically it once you have the IP NS then you have basically a nice hash that sits on top of your moving hash and you set your content to that the final gotcha is this wonderful ENS app does not let you set IP NS yet so you will have to make a custom transaction to the smart contract to set it to this value because they're lovely form won't let you set it yet there's an open there's an open issue there's an open issue I should open up an issue about this gas problem whatever okay I think we're about done let's try let's try one more sub-domain just let's see did this thing upload yet did it - right there let's try one more time my name's scaffold eath we got five minutes left I'm gonna open it up for questions anybody out there ask any questions while I'm working on this I'm open to whatever what are we gonna call this SD right good testy save ipfs is way over here go manually set your gas like a peasant hit save it's gonna cost me 76 cents hit Send hope hope hope it works any questions out there just shout them out in their turn turn on your mic and jump in anything about scaffold ease each build building on aetherium ipfs whatever you're looking for all of that should be in this app it'll work the third time I promise all right let's go to a testy tonight comment you are stressed you are totally crazy in it awesome thank you that's that's thank you for the kind words so we could do ipfs here right and I'm gonna save that now what I would really like to do is do IP in s and put that right in there but it's not going to let me so we'll do ipfs and if I use the IP and s name I don't think it even works here so you can't even do it but I will try the IP FS link just to see if we could oh I almost hit save there if I would have hit save that transaction would have gone out I would have had to speed it up okay one last try we're trying to set a record we're gonna see if this works we've got this pin to a server in the cloud you know what I should do is I should pin it let's pin it everywhere so if I take this I can pin it on my local node by saying ipfs pin add and then that oh yeah appended recursively oh yeah and if I ssh into my Pinner i think it already is set but let's just be sure we want to make sure this thing is out there when it goes looking for it oh yeah it's pinned on both okay and now we've got the content set so if I click this it should go to the Gateway okay I don't dare try to type in this all right here we go take your ENS name paste it into here and do dot link here we go drumroll come on oh now a 404 page okay so there must be something wrong with my deployment that's that's the only thing I could think is this this website dot thing is not working exactly I think this is working I think it's actually hosting our site but something something's wrong with his homepage thing so I will update the docs and make sure that the next time you read through this tomorrow it will sum this up a little bit better with a better conclusion than I can deliver without figuring out what's going on with this static deployment but thank you for checking it out check out eath dot build console of King yeah yeah let's hear what was also what King oh it's working for you okay yeah do you have any special plugins or something to do anything weird with DNS no okay mmm ooh there's a cool resolver let's see if I resolve that same yeah so it resolves for me oof okay well the kind of illusion yeah yeah well my second well my secondary DNS is eight point eight point eight which is Google that Oh actually set okay like set my own machine to go talk to Google as my my resolver instead of whoever else I'm talking like Comcast or whatever oh disabled unstoppable domain I don't have that turned on I'm pretty sure I'm doing something weird with that dot because what wait wait what if I do index dot HTML yeah that's weird okay I'll figure it out I'll solve it I'll put it at the bottom of that article this decentralized so yeah check out eat build check out scaffold eath it's to github repo you can clone it or you can just fork it and run with it the docks are all here there's a speedrun of me going through it but you've got all your different providers talks about the helpers it kind of has a transaction helper to you know give you more feedback about your transaction there's hooks we kind of covered those components there's there's a lot to it but basically it just kind of stacks up all the cool tools you're gonna need and hopefully kind of abstract simha well you need them trying to make it as easy as possible to quickly build a product like a hackathon product any other question hello yeah I actually I had a simple question like I have started just learning aetherium and everything so I was working on a personal project of mine so I had to send censors data to the etherium blockchain likes temperature data or something so for it every time I can't ask me Thomas to pop up right for every data to send yeah so any alternative or thought on it oh yeah yeah so what I mean like first of all all you need is a key pair right like there's a there's a private key sitting here yes and I so so what you could do is I would just go look at ethers jas and look at how it's doing things like making a transaction and basically what you'll do is you'll just just the same thing we did with that mnemonic where we created that pneumonic and created that address and we set some rinkeby to it ethers will take in some kind of mnemonic or generate a private key for you what you just need to do is fund that private key and then you'll have a script that well we don't want the legacy documentation let's see ethers jsv five what you want to do is basically create like an HD wallet right in your code and have it what part of that diode will give my private key in the same code right like D yes but yeah don't don't ever put a prime don't ever put a private key in your code like put it in like we had that pneumonic file right yes right so like if I had here's how we do it here you'll do it similar to this but probably better I just have a mnemonic and it tries to read it and if it's not there it just silently fails but if it happens to have that mnemonic that's what it's going to you when it talks to occasional or it won't every time ask it right you do not omit the process yes yes it will automate everything yes this thing well yeah you can with with a private key here let me let me send you this exact page too so with this page right here you can basically just send it in a private key right so this this will give you a wallet and you could you know make a transaction I'm sure you said a transaction here somewhere Thanks thank you so much yeah yeah for sure yeah send transaction right there so you'll you'll basically create that thing with that private key and then you'll do a send transaction I think your mics messed up I'm not I'm back again so just speed up your tinkering what we're talking about that key pair where does that private key come from right if you if you are here and you're like oh I got to go get a private key same thing I just use each build and I go over here and I just generate a private key like all this is is a random number but this this allows you now to grab an address it allows you to you know grab a blockchain and check your balance on that chain right you can even if you want to get crazy with it you can you know craft up an actual transaction right you can bring in your meta masks and craft up a transaction you can create a wallet that will craft this transaction for you and you can plug that whoa there's what the wallet looks like on the inside no one wants to see that and then you know you hook up your blockchain you hook up your private key and you can do some transaction right here and each bill but basically all you need is a private key signing those transactions that private key needs to have funds on whatever network you're talking to and you can have that thing automatically doing all sorts of stuff let me jump in really quick you mentioned this second ago about never never including your private key anywhere we actually had this problem a few times for tech money so it's worth mentioning to people who maybe are getting into tools that they're not familiar with or just may not be familiar with exactly what we're doing be very very careful about how you commit things and where your private keys end up going so we had some people they would be sharing some code with some of the sponsors and they would drop dump it in a channel in Hackney and we actually had a few people end up losing funds because they're just not aware that it's linked and then also when you're committing code to github sometimes you just do it inadvertently be very very careful about how you're setting things up and where you're actually committing I'm sure Austin probably has some very specific best practices we should probably write them down get them distributed but it's worth just bringing up again now that it came up I lost to hunt it one time I sent a hundred bucks to one of my buddies and he had posted his seed phrase for that account on github and it was gone instantly and you can imagine this probably even people trying to front run that right because like if you could get free money and he can get free money your basically whoever sets their gas price high enough is going to get the free money so you'll you know you could try this out try this out put it put a seed phrase on github and then send it 50 bucks and watch how much well don't send it 50 bucks but send it five bucks and watch that much of that five bucks they use in gas just to get it back just to steal it from you yeah there are definitely scrapers running sorry to segue into this but be very very careful where these private keys and it happens you just have to be careful like yeah it happens to the best of us I couldn't go - you don't don't don't ever use your mean wallets for all this testing have to sting up wallets for testing yeah don't don't like get into your meta mask and grab your private key and pull it out and use it somewhere else don't do that create another account somewhere else and send some funds over to it cool yeah there were a few questions oh sure let's see I can copy them down there's one from uh TJ rush happy dad rush what up man at the bottom oh yeah for sure yeah yeah I think that maybe that was asked before I started running my own note but basically the you know the key here is run your own etherium note and instead of talking to in fear I talked to that and and set it up to talk to that right so then basically you're talking to ipfs to get the content then you fire up the content and it connects to your local node and your local IP FS note reference yeah the question was there's a fair number of web to stuff in here into your ideas do you see a path ripple density centralization already or are we waiting for something that was a question awesome like that is it too slow if you're not using like whip to stuff or is it usable yeah I think to make it usable you probably are gonna have to infer up yourself right like you'll probably have to create a couple penning nodes put them on these edge servers and do that kind of stuff like right now what what basically what is missing to answer that question is file coin or or probably probably a sponsor of this but basically some way to incentivize people to pin that information like if I had something important what I want to do is write to an aetherium contract that I'm willing to pay some some like some protocol where it's I'll pay for people that have this thing live I just remember reading the file coin white paper years ago thinking how complicated it was going to be to figure that out but you know we've got got good guys on the job yeah okay we're good yeah yeah I think so yep and and really like thank you like I'm not getting censored so I can't even like I think all of this stuff is decentralized right but you don't know right I don't know I don't know how well decentralized it really is right you'd have to be in a place where that really mattered and find out great great great session thanks DJ rush thanks for coming man is that one more I just got me down for you oh shoot okay from what I see here the ax tester is a custom contract here there are any standards around storing ipfs hashes in a contract I would look at like the open sea stuff like open sea kind of has pioneered a lot of kind of the NFT space and and some of the standards there and what you'll find is in an NF T you have like this URL that points to the metadata of what that collectible kind of contains its title and link open sea nice link great where I would dive into their docks and see how they're good because it's obvious like oh I have this expensive-ass maintenance mark contract that's referencing a URL that is just my web - website like there's an obvious like that needs to be decentralized - you need to distribute that content somehow so I know that with Nifty's on open sea the the kind of state of the art is to have the NFT URL point to something in ipfs that's you go query and then inside of that manifest are usually more ipfs things that you need to go get so I bet that the open sea standards would be a great place to look at who's kind of pioneering that stuff happy Friday y'all any other questions it might be it I think you also you you probably hit a fair number of the edge cases you had not expected so right prop product yeah fishing through all of them did not work out for me I'll figure out what it was and put that in the bottom the dock I'm pretty sure I broke something what do you mean by breaker in your Twitter profile just oh I break things I break things all the time right I just broke things like you you I'm not a very safe person let me just put it that way I'd like to get into things and I like to crush them and I like to figure out how they work a lot of times I have to take them apart to understand how they work I grew up in the early 90s when you could still just take stuff apart and understand how it works so I apply that kind of skeuomorphic ly to software awesome awesome I think we can probably wrap there Capaldi 'the go by CFS anythi reham mmm right alright cool thank you again Austin thanks guys thing and I'm sure a bunch of people are gonna reference this recording as they're building other things i'm yeah i mix hopefully like these these these templates just give you basically an app ready to go that's already talking the ipfs and you can focus more on building the actual application you want to build for hack FS and not all the underlying junk obviously some of that underlying junk is still a little shaky and we're working on it but that's part of web 3 awesome yeah and just for reference if anybody is going through this again they got lost and just want to kind of do it again on their own Austin's in the select as well the heckuva select so reach out and hit him with any issues you're experiencing said I'll only help to improve this tutorial and in the project itself at Austin Griffith on Twitter and telegram and all those - yep cool alright thank you so much thanks guys happy bowtie Friday 