foreign [Music] foreign [Music] foreign foreign [Music] foreign [Music] foreign [Music] thank you thank you foreign thank you thank you foreign [Music] thank you [Music] foreign [Music] foreign thank you [Music] thank you foreign foreign thank you [Music] thank you foreign [Music] foreign [Music] foreign thank you foreign [Music] thank you [Music] thank you foreign [Music] foreign [Music] foreign [Music] foreign [Music] thank you foreign [Music] foreign thank you [Music] thank you [Music] foreign thank you foreign [Music] thank you [Music] foreign [Music] foreign [Music] foreign foreign [Music] foreign foreign thank you foreign thank you foreign [Music] thank you [Music] thank you [Music] thank you foreign [Music] thank you foreign thank you foreign [Music] thank you thank you [Music] foreign [Music] thank you [Music] foreign foreign [Music] thank you [Music] foreign foreign hi there it's me no oh have you missed us but there's so many more of us now and we have missed you where have you been so much has changed since the last time we saw each other so many new things so many new opportunities so many ways to be exciting but also a little bit frightening together we want to play a game with you it'll be fun promised bring your friends we invited all of ours they are really looking forward to meet you it's a very easy game there's only one rule you do what you want what you always dreamed of do what hasn't been done before create what is missing the best thing is that you get to do it with your friends old ones and all the friends [Applause] are you excited we are so excited not only to play with you but to see what you will come up with let's create good morning good afternoon good evening everybody my name is car take one of the co-founders of Eve Global and I'm super excited to welcome all of you to metabolism I want to quickly thank Yuri for that amazing piano performance uh we just took so many requests from the audience I just had a really amazing intro into getting started with what the next week is going to look like so thank you so much Yuri for doing this thing we hope to bring you back all right so to everybody that's joining us for the first time we're doing all of this today on eat global.tv this is the platform we'll be using for the rest of this Summit as well as this hackathon so for all the talks that are going to happen for the rest of uh today you can ask any questions in the chat you can sign in and talk to everybody including us and the speakers and anything that we uh you have uh you want to know we can relay those questions and comments back to everybody on the live stream also for everybody that signs in we will be giving nft collapse to uh to you for participation so thank you so much and excited to get this going so this event is brought to you by Eve Global and for those of you who don't know if Global is an organization with a very simple Mission our goal is to onboard thousands of developers into the what three ecosystem and we do this primarily by running hackathons and summits and this week is no different so I want to First quickly talk about what we have planned for the next six days in terms of summits there's going to be two Summits today is the Zora technical summit we're going to be talking about a lot of things around what's happening in the Zara ecosystem as well as how you can enhance all of your nft experiences and then we have a creative Summit on Tuesday uh so next Tuesday five days from now and we'll be talking about all the amazing things that are happening in the rest of this broader ecosystem so stay tuned for all of that shortly after this but first the next 25 minutes are about what is happening with the metabolism hackathon so the hackathon is off to an amazing start we have over 380 hackers from 61 different countries participating in this event uh and they're spanning over 16 time zones so we're going to be talking and interacting with so many people from so many parts of the world we kind of put everybody on a map to see where they're all joining from and it's still incredible to see so many countries continents and regions represented and we can't wait to welcome and talk to all of you not only that we also have 28 ecosystem partners and 55 ecosystem mentors that are going to be here on Discord on the on the Summits on the chats and doing workshops talks answering questions and helping you succeed in accomplishing your projects uh for this Sunday's deadline and all in all we have over a hundred thousand dollars in prizes that are going to be given away as part of this hackathon so I'm going to cover what all of that is about but before that I want to quickly thank some of our amazing partners that without their support they say that would not be possible so of course Zora is an amazing partner we've been working with and one of the things the world for making this event come to life on top of that I want to thank Live Peter NFC storage polygon and lip protocol and then spin amp rtiva choose Fox refraction make fun African nft Community sound obsessed developer doubt and Noom I also want to thank sign spores heat pass mutual love felt about time um heat tech she said so friends with benefits and star union and mochi float Ulta anchor and archive Labs so thank you so much to our amazing partners and uh we can't wait for all of you to see what comes out of this and have so many incredible projects use all of the work that you've been doing and building upon so uh I want to cover a lot about what this weekend and the next few days are going to be about the goal here is to talk about logistics I want to talk about anywhere from team formation how you can get help all the prizes all the talks and workshops judging and submission how that's going to work and of course we're going to then jump right into the summit which should be beginning right after this in 20 minutes so the first and the most important piece here is communication uh everything that we're going to be doing as part of this hackathon is going to be on Discord for all of you that have been confirmed as our hacker from your dashboard you will be able to connect your Discord and you will see you'll be seeing this Discord metabolism header on your sidebar so please make sure that you're able to see all these channels that are in the screenshot because that is controlled by um our internal dashboard that gives you access based on what your role is at the event whether you're a sponsor or a hacker or a mentor or any of the partners so everything that we're doing is only open to the hackathon participants which means that only people who are in one of those three 80 to 400 group are going to be able to chat so you can talk to everybody there you can talk to all of our partners you can learn more about any of the prizes and ask questions if you're stuck on using specific apis and sdks and and that's also where you can get direct help so if you have any questions you can ask any of the mentors in the mentorship and help Channel on top of that we're also sharing and sending out calendar invites for talks and workshops so you can be informed of some key dates like submission deadline or when some of the Summits in the kickoff and the finale are starting we're going to be talking about everything that comes out of this event on top of all that everything that is going to happen over the course of this event is going to be published on the website which means that anytime you go to the website what you see there will be the source of Truth so all talks times Workshop speakers everything that you are that's going to be happening will be relayed on the event website and really want this thing to be asynchronous there's 61 countries already participating at this event and we really understand that not everybody is available at the same time to do all these things so everything is designed to be Discord first and recorded and for a quick reminder the website is metabolism.e global.com so let's get into how the hackathon itself works so officially the hackathon begins now which means you can start working on your projects now and you can work on your projects with up to five members in a team uh you have the next few days to hack so this gives you until Sunday and the submission deadline is 3 P.M Eastern on August 7th as a quick note on how everything is structured on the team you can have up to five members but is not required for you to have a team which means that if you are interested in working on something on your own or you are just using this an opportunity to get better at something that is totally okay you are more than welcome to submit individually and participate at your own pace we also keep the rules and the criteria for the event simple everything that we're going to be doing from the submission standpoint and what you're going to be working on as a project is and should be done from scratch which means you cannot build on a pre-existing personal project and you cannot continue adding pictures to something you have done before or submit something that you did not start as of today um this is meant to be a place for us to keep everything fair and we want to really make sure that everybody that's participating in submitting something has been part of the exact same rules which is starting today and ending on Sunday on top of all of that every submission must use something in the Zora ecosystem or the apis or the sdks or the craft API to be eligible to compete and win in the projects or win any prizes so uh please make sure that you are meeting those two requirements and on top of all of those things only RSVP hackers are eligible to win prizes which means that if you are working on a team and your team members are not listed under the team section on your dashboard and they are not confirmed and rsvp'd at submission time and you win a prize we will only be honoring the delivery of prizes to the members that were listed on the team and not anybody else that was officially not registered so if you still have a friend or team member that is outstanding or has an RSVP from their Dashboard please make sure that they are confirmed and ready to attend by end of today of course this means there's also going to be a couple of edge cases and we're more than welcome to help out and answer any of those questions or clarify certain things if you have any questions please reach out to us uh on Discord or email and ping anyone on the global team and we'll be happy to clarify anything that you have they'd like to know next up is judging so this is the most critical piece on how everything is structured so judging begins after submissions end submissions are going to be due on the Sunday at 3 pm Eastern so Sunday August 7th it gives you a few more days to kind of work on everything and the way everything is structured is that at submission time when you submit uh and finish the uh filling out all the fields that you need to specify whether While You're Building screenshots prizes and everything else those submissions will be locked in and everything that you submit at that deadline will be used to evaluate everything from our our partners and for any of the process then the next day is when judging officially begins um starts on Monday the 8th and judging is going to be split into two streams one of them is the main judging if you are trying to be a finalist for this hackathon and then one of them is the sponsor prize judging which is going to be asynchronous and run also in parallel for the main judging it's going to be a live call where you as a team are going to come on and present your projects to our judges and they're going to come on and and ask questions and get feedback and do that directly uh synchronously on on a zoom call in parallel if you are trying to win a prize from any of our partners your project will be given to them to look at and evaluate and they'll be going through all of those uh all of your details for the prize and how whether it's your demo or your video or anything that you submit asynchronously and if and only if they have any questions they'll be reaching out to you directly to clarify or answer and go dig deeper into anything they let you know from there they'll be announcing and picking who the winners are and all of that comes together on Wednesday which is the finale where we're going to be talking about who won what prizes and in the middle of that is Tuesday which is going to be our creative Summit so while we kind of compute everything you get to enjoy some incredible speakers talking about everything that they're excited about so the main judging is structured as follows you will have four minutes to demo what you built uh this will be up to four minutes which is a Max limit but you can also obviously do something that's less than a four-minute demo and to simplify this process for everybody and make it really easy for us to review everything and make sure there are no technical difficulties every submission will be required to do a everything will be requested a video submission which means you're recording it up to four minute video of what you built which is a live demo introduction to who you are what you built and why and uh that's what you upload on Sunday uh having kind of gone through this thing a handful of times we'd really recommend that you do not leave this thing to last minute because you will run into situations where you can't fit everything that you want to show off in four minutes so please make sure you have at least two hours blocked to be able to work on the submission video as well as all the fields that need to fill out on describing what you did and how it works so please don't leave this till last minute and all that happens to your dashboard which means that right now you're working see the ability to create and update your project but you then see a proper submission flow that lets you specify all these things and upload that video and talk about all the prizes that you would like to qualify for and all the details that are needed accordingly and of course the next piece is what if I'm new to all of this this is the most kind of common question we've gotten and we want to make sure this event is beginner friendly and the way we have structured this is that we are making sure that we have content structured for every type of audience and skill set so there's going to be a lot of work being done and content being ready for beginners intermediate experts and obviously there's a lot of talks panels and workshops and also interactive sessions so you can meet other members for the hackathon and go anywhere from form teams to share ideas we're also obviously doing a summary right after this thing that goes deeper into how solar protocol works and all that information is also going to be listed on the metabolism infocenter but also if you can attend all these things don't worry everything is recorded as well so as soon as it ends it will be immediately available on YouTube and you can find out all these things on youtube.com youth global foreign what's going on whether it's the submission deadlines or the speakers or the talks or any workshops you can head over to metabolism.heathglobal.com to find the latest and of course if you have any questions please feel free to ask them on the chat and I'd be more than happy to answer them here live but of course the second this live stream ends you can watch this video again or if you are on global.tv right now you can just hover over the video and drag it back and watch the replay on demand all right let's talk about prizes so as a lot of amazing prices have been that are being given out and uh when I spend most of the time on talking about all the things that you can win in the Zora ecosystem so Zora is going to be giving away five eight in four of these categories so the first category is the best uses our protocol on API the second one is going to be on the best Integrations of projects that look into online music ecosystems there's also a lot of prizes to be one or a lot of eighths to be one for Integrations and projects tackling down tooling and we also want to make sure this attracts developers as as equally as well as creatives and if you have interesting nft experiments you are also able to qualify for specifically winning a lot of Youth in that category so these are the four places where you can qualify to win Super prices on top of all that we have of course a few ecosystem Partners so polygon will be giving ten thousand dollars in prizes for best Integrations that also interact with the polygon ecosystem and to make all of your lives simpler in terms of uploading and managing uh your nfts um nft.storage is also giving 7.5 K and prizes to use the nfid.storage platform and we have lead protocol live here if you are interested in building things around permissioning and live streaming uh you can also win 5K each from them in prizes and I won't go into the details of all of these things um here but to find out specifics about what these prizes are the documentation uh to learn about links on what me what it means to use them get sample code all these things are available on metabolism.eakopa.com prizes and of course as we end this and run into or get ready for our Summit I want to make sure that you are pacing yourself as part of this event I know uh four days is not a lot of time to kind of spend all the the time working and building your projects but we really don't want this thing to be exhausting for you we really want you to have fun this is very much about experimentation and learning and largely just being able to meet really incredible passionate people who also are interested in the same things as you so please take your time and make sure that you are using this as an opportunity to really understand what's happening learn more about what Zora is doing um and you are meeting people with different ideas and interesting backgrounds and interesting stories and finding a way to collaborate with them to work on something that all of you can be excited about so that concludes all of our Logistics I want to wish all of you happy hacking we'll see all of you on Discord and of course if you have any questions we can happily answer them here or on Discord so thanks again to the hackers and with this we are ready to start our incredible Summit so the next few hours are jam-packed with a lot of technical content so I want to quickly jump into what is going on with the rest of the day so before we introduce our first Speaker I want to just quickly give an overview of the schedule so we're going to have six amazing talks uh we're gonna kick off today with bringing on Jacob from Zora uh talking about the Zara Playbook and learning a little bit more about hyperstructures I'm going to have Max who's going to be talking about how you actually build with Zora directly as a developer it will be more of an interactive in a technical Workshop then Ian is going to talk about Zora's create tools and how you can leverage all that work that they've been doing and we're going to have Jim talk about custom interface for erc721 drop extension and using that to build 100 profit and then Isabella is going to be bringing talking about Zora's API it's something that will simplify your life so much especially as you're looking to explore the projects this week and then Dana's going to talk about how do you actually build great user experiences and how you can leverage some of these best practices to really make sure that your act submission is perfect so without further Ado I'd like to start a little bit early and bring on Jacob from the Zoro team and uh yes well I'll let you turn on the video and uh get started with your presentation sweet all right I'll just uh share my screen okay let's get a full screen cool can you see um see the the big white slide here not yet I think we're seeing that yeah but not the slides so maybe the window pane must switch okay you see the full desktop yeah yeah I'm gonna play around with this sound one second and here we go we're all sad about that cool that working everything's good sweet cool um hey everyone my name is Jacob um I'm one of the co-founders of Zora really excited to be kicking off the um hackathon today with a presentation kind of going deep on the concept of hyper structures um so I'm going to be speaking about like what hyperstructures are why they are important and then some of the implications of what they mean in terms of um how you build on the blockchain how you build in web 3 and then some of the cool and weird circumstances that I think kind of arise from this new paradigm okay so what is a hyperstructure very simple definition so hyper structures are crypto protocols that run for free forever without me to this interruption or intermediaries um this sounds very simple but it is a very very powerful idea that is um Native and kind of a net new form of infrastructure that is made possible by trustless blockchains like ethereum and hyperstructures exhibit um a number of characteristics and you can kind of use these characteristics as a checklist to like kind of pick a protocol run through each of these characteristics and you can kind of um you know have an objective measure of like does this satisfy the structure definition or not so I'm going to go through each of these individually um starting with unstoppable okay so if we think about like traditional height like uh infrastructure so like power grids highways you know railroads uh you know any form of infrastructure to keep these things running and operating they require consistent maintenance by a trusted operator and they require a trusted operator to make sure that it's um you know the power is still on the roads aren't falling apart you know trains can still operate and go where they're supposed to uh which kind of introduces this kind of dynamic we're used to with infrastructure which is you typically see a single entity that runs the entire thing and then an economic system which often means that that single entity gets monopolistic control um and the ability to like seek rent from those systems and that's not inherently bad it's just the nature of that type of infrastructure because we have not yet figured out a way for these things to magically operate themselves uh in perpetuity but with uh blockchains when you deploy a protocol uh on a blockchain you can actually do exactly that you can deploy once and then your protocol can run for as long as the blockchain does uh so this means that you know if you look like the unit swap protocol for example deployed once and then that team could disappear off the face of the app that website would go down uh that could but their protocol will run for as long as the blockchain does um with no ability to stop it so unstop ability is kind of this like very core and unique superpower to deploying protocols on a blockchain which kind of unload unlocks like a huge amount of new possibilities for how I think about the economics of the system um and like how to basically build these things and it's just to kind of like give some examples as well to help understand the difference between something that's Unstoppable or not Unstoppable if you think about like uh exchange for example you know coinbase operates off-chain the market kind of lives and operates on trusted servers you know which gives it great features like being kind of free to interact with and very fast but it means that you know sometimes that service goes down versus unit swap um by running by Nature running on chain does not stop runs as long as the blockchain does and you know the website may go down but you'll always be able to interact with with it through either scan or through a node directly or how maybe other websites that are built on that very same protocol uh and then same thing that tastes like too so uh you know for openc like uh the the market runs off chain in their in their servers and databases which you know gives the you know superpower feature of being free but also prone to stopping sometimes because you know running large scale systems like that is very difficult versus something like a Zora protocol which you know runs on-chain and gives you all the benefits of running on chain which is it does not stop um our website May that may go down but there are many other websites built on that same protocol so if you really need to interact with it you always can um so what this means is that there is really no further labor or Capital required to keep protocol running since I was saying like if a team did disappear that after deploying a protocol that isn't necessarily bad because the protocol will run exactly as designed for as long as the blockchain will um so this unlocks a whole bunch of new superpowers for as a developer when you're building a protocol like this and then you know importantly changes I think the like the economic nature of how these pieces of infrastructure run on the internet um so let's talk about like kind of the first thing which is the the level of freeness of these um protocols so because there is no uh operating costs I think the default natural state for these protocols over the long term is that they will always default to running exactly at cost so there will be no like you basically just pay the gas costs required to interact with and utilize that protocol and I think it would be very very difficult for protocol way wide fees to be added on top um because the the cost of fork is is negligible um you know all of these all of these Protocols are deployed on public blockchains it can be quite simple to fork and if you introduce a fee you introduce the incentive support in a low-cost environment um but there are fees in these protocols and there are fees that are very crucial I would say to the success of these protocols and I like to kind of make a distinction between you know protocol wide extractive fees and then protocol-wide expense fees and expansive fees are basically built-in business models or incentives that can be utilized by anyone adding value on top of the protocol um so these fees like transparent anyone can see them anyone can use them uh which kind of incentivizes third parties independent parties to build on top of your protocol because they have a built-in incentive to do so and examples of fees like this uh I think like the most notable is probably the unit swap LP fee so this is the built-in incentive for LPS to provide liquidity directly to the protocol and importantly that those fees go directly to the LPS themselves not to the normal swap protocol and then similarly in the Zora Marketplace protocol we have a notion of finders fees where it's like any developer with their own front-end or application or their own protocol themselves if they're finding bidders and buyers or people listing they earn fees directly from that and that goes to those developers it does not go to Zoro so what this means is that you know the there is an incentive to basically propagate and pro like proliferate this protocol or the product like the hyperstructure as far as wide as possible because there's a direct incentive to do so which expands the expands the behind the structure hence the term expansive here um okay another really important characteristic is permissionlessness uh it's probably a word you hear all the time in in crypto and web three um but and you know it's widely associated with a lot of the chaos and adversarial nature of web free too but permissionlessness is important because it means that the protocol is universally accessible to everyone and anyone can utilize it without prejudice there is there is no way to stop anyone from using that protocol and then importantly it also means that the protocol itself cannot be changed so this is like kind of directly related to unstoppability in a sense too but it's that once deployed the operating functionality cannot be warped or changed or augmented um which is you know again kind of like a net new capability that comes with deploying something on a blockchain that creates very important conditions that allow for these hyperstructures to kind of Thrive and be adopted um and like you know from a developer standpoint if you think about like a lot of the pain points of web 2 you know there's no API Keys required to utilize or build on a hyperstructure that has no idea platforming there's no censorship there's no ability to be rugged um or you know if you're building a business on top of this and you basically get the blockchain guarantee itself that it cannot be ripped out from under you which is which is huge if you think about like early social networks or Twitter API key is getting turned off or Facebook platform getting changed and ruining you know entire companies on a whim that that is not possible in this environment um which kind of you know leads to this kind of state of uh credible neutrality which is you know if you haven't read this essay by uh vitalik would highly recommend it that kind of um kind of Pops at this point which is you know the hyper structure is incredibly neutral because the proven way do not describe discriminate for or against any specific people or you know developers who are building on top of this infrastructure so the sum total of all of these things leads to this kind of positive sub-environment which means that you basically can see competitive actors utilizing the same shared system instead of everyone trying to do it themselves we do not see LPS all trying to create their own unit swaps we see all LPS trying to use the same unit swap because you know there is this like Collective benefit uh liquidity effect and network effect that comes from building on that same environment and the fact that there's no protocol-wide expansion there's incentives for them to do so and then they get the blockchain guarantee that hey this thing isn't going to go down or you're not going to get kicked off it means that there's really no reason for competitive actors to Fork that system unless they have some new or novel addition or Improvement to the the underlying system itself um which uh yeah again positive so environment means you're going to see this like continually expanding network of people who are competing against each other which is um kind of a core property to see and then I guess the kind of big open question at a very like uh timely debate right now is it like okay like if you have these protocols that you know deployed only once there's no further waiver cost to maintain or operate the thing and there's no protocol wired extraction is this valuable or not um I think if you look to kind of like the uniswap um fee switch debates right now I think there's like uh uh I mean there's two sides as the side that's like well maybe you're gonna swap protocol can turn on a fee um and that there is enough stickiness to that volume that you know that can be protocol wide extraction that is defensible and although there there will be an incentive to create a fork that perhaps that the current implementation could um survive that and then there's the other cap which is like well uh the switching costs are very low and it's very trivial for someone to redeploy a version of this protocol and LPS it can LPS can easily move across like you know this is uh this is something that should remain free but obviously there are other governance controls of that protocol that sit outside of um just fees that are important and contentious to control and that's where a lot of value is being derived and then I guess the reason the nouns goggles are here the announce glasses is that uh there are now new Dow constructions that earn value and treasury outside of any fee extraction or Revenue extraction at all it's purely brand-based ownership and governance control which may be conducive to actually governing public protocols themselves so it could be the case that you know the uniswap protocol may be better governed by a dow that follows a similar economic structure to announce if not nouns itself um so we're at a really interesting time which is we have a new type of infrastructure that is kind of live working and operational that changes a lot of the established models of both operation and then also value capture so we're heading into this whole big period of the unknown and experimentation which is like well these things clearly work these things clearly power a huge amount of value exchange on the internet and a very important and increasingly going to be so how do we value and relate to these things and what does it mean to build around the edges which is you know where we're heading into this very exciting phase um right now um so yeah to summarize like hype instructions um they kind of exhibit the following characteristics that are unstoppable they're free they're expensive permissionless incredibly neutral positive sum and then valuable maybe with a TBD uh right here so when building hyper structures I think there's a few things to keep in mind that I kind of just like copy pasted this from the original essay I wrote but I think they're important to call out especially as we're in a hackathon so if you're planning on building a protocol these are some great things to keep in mind I think one of the the core like what yeah I think the thing at the top here is probably most important which is like when you were building something a hyper structure like this you need to be thinking about millions of interfaces not just your own so any any like design trade-off or implementation trade-off that may make it easier for you individually or as a single platform may come up with a trade-off of compromising the easiness of other platforms building on top of you so to the extent you can keep the protocol as generic and as simple as possible is kind of one of the core decisions you should be making the whole time um because you know your hyper structure will only be successful if there are multiple platforms and competing platforms built on it not just a single one um think about fees as a way to expand and incentivize adoption of your protocol not extract from it um it may be the case that you know there could be protocol-wide extraction in the future but that's not something you should be thinking about in the short term in the short term you should be thinking about how can you convert as many platforms and competing platforms as possible to build on the shared infrastructure um and this yeah maybe somewhat obvious but if you're building a hybrid structure like the hyper structure is the thing to focus on so developer adoption is crucial uh maximizing Integrations and then you know build that Network effect that can send like kind of cement your your protocol as the neutral thing in the default um and then yeah liquidity is kind of like a core Network effect that I think a lot of people um and developers obviously look to um you you may find that there's always an early subset of developers and platforms that want to take the week because there's no other great option which is good but as you become more established liquidity will kind of be a core measure that the ecosystem will look to to decide if they build on a protocol or not um and then when you think about governance uh I would say that the most important thing here is remove as much governance as possible um if you don't need an admin for a thing or you don't require an upgrade for a thing just remove the option entirely because the lease the lesser amount of governance the lesser amount of surface area for things to change the more confidence that platforms and developers in the ecosystem have that they're not going to be de-platformed or rugged or I'm going to run into any critical errors or flaws in the the protocol um and then I guess the the general approach for deploying protocols although it's software it kind of feels more like a hardware development cycle just because you you see these large deploys it can it can be um it can take a lot of energy to you know migrate the ecosystem from one version to another um and then you know you need to go through because you're deploying things one way uh any mistakes will live on forever so it's very important to test and audit and go through public review and and those all things those things all add a lot of time into the build cycle compared to you know shipping something onto a website and be able to deploy a hot fix minutes later you can't do that in this context so it's um it's important to acknowledge that there's a longer build cycle here um and like the General State of Mind is you're building a thing to be built on so it's just like that's that's kind of like a simple phrase and thing to keep in your mind is you know as you're building protocols like this you're building something to be built on um it will be eventually used and precipitate up into you know user interfaces and apps and platforms but you're you're building the builders um and like why does any of this matter well it's like well if web free is you know going to achieve its Ambitions of being a new internet then the protocols that are being built right now will eventually be powering most if not all of society's value exchange so if crypto is giving us the opportunity to create this public infrastructure that can be free of Monopoly like monopolistic control that's an opportunity that we should probably take and then that is something that we can aspire to and measure against and I think the hyper structures essays in definition is meant to illuminate that like one this thing is possible and then two let's like create a shared kind of checklist to actually make sure that we're like holding ourselves to those ideals um and yeah I guess like given their immutable and permanent nature like we do have that opportunity to create essentially civilization civilizational scale infrastructure that can Outlast even our own lifetimes given the permanent sure and the unstoppability all of which is native to the Internet so we just happen to be the lucky people that get to do it first and experiment it which is kind of wild but a lot of fun and exciting so you know if as you're building through this hackathon like it's good to always remember that it's like well damn like yes there is a lot of complexity I think there's still rough edges and developer tooling generally and you know most of the things that are to be built are yet to be discovered and understood yet so yeah take the opportunity for hackathons like this to think about the most out there version of what you're trying to do and put it out there and you might find people that want to help you do that very thing so cool with that I will end it and then yeah we can go out there and the hackathon and time to start building but yeah I'll pause there and thanks for listening awesome um thank you so much this was a super awesome intro and I'm glad they do cover so many interesting things and and also just the framing around how do you actually apply that um for this hackathon was really good um I'm going to quickly see if uh so well the good news is that we're actually ahead of schedule which usually doesn't happen often but uh we'll see if there's uh any question from the audience but uh if you have anything we'll kind of ask them and uh for people that are the kind of common requests are coming in it's like it would be great if you can get the slide deck um to be made available for uh the attendees so I'm just going to share that but of course for those of you watching this if you are just the video exists you can scroll back on the video and see the next uh just catch up on what everything was talked about but we'll try to get the slides to you soon maybe the most obvious kind of question is like are you able to sort of in a way indirectly answered this thing too but are you able to answer that directly for how's the rise applying all these principles and then sort of what does that look like in terms of how you improve the protocol moving forward um yeah I guess like we kind of use this as our launch checklist um so but we One Way deploy everything we do not have protocol white fees that are turned on we um yeah like any upgrade has to go through basically a new a new deploy um so yeah like I think that we kind of hold ourselves to a pretty high standard which can make our build process like pretty painful sometimes but yeah we basically use this hyper structure checklist as part of our launch checklist so um in the in the essay as well which I kind of um I can I can give a link I kind of use or as like an example against each of these things as well as unit swap as well because I think that that's the most prominent working example of one of these types of infrastructure today yes well um I don't think I have anything else uh it'd be great if you can get a copy of the slides and what we'll do is that because we are a little bit ahead of schedule uh we will take a short break and uh we'll just kind of turn on some of the amazing low five beats uh for everybody to enjoy and then as we're ready with the next speaker we can resume with the rest of the summit so uh that means we have about I believe 25 minutes to go um so please enjoy and take a quick break and then we'll be back with Max's technical workshop on how to build directly with Sora so thanks Jacob and uh thanks see ya see ya hey everybody welcome back to the metabolism Summit I hope you enjoyed some Lo-Fi beats as we took a little bit of a break there um and looking forward to having you all back with us for another awesome set of talks with the Zora team um so uh just as a quick intro clearly I'm not partic my name is Jacob I'm also from the youth Global team uh I know we could be emceeing for the rest of this Summit today um and yeah I mean I'm gonna get out of the way because we have a really exciting talk coming up um with Max from the Zora team and basically we're going to be chatting about how to build a source so obviously a lot of people over the next week or so or a weekend or so are going to be building on top of Zora so this is going to be the talk for you um so without further Ado I'll introduce uh Max from the team Max feel free to unmute and share your video um and uh I will get my screen share out of the way in just a second how you doing I'm good how's it going cool to be here good yeah awesome well we're thankful to have you here um and like I said I'll stop sharing my screen now in case you have something to share um but otherwise the the floor is yours and uh yeah looking forward to your talk awesome um okay well sweet uh first quick shout out to just the whole youth Global team they've like set up all this infrastructure for sharing all the videos getting all the resources and playing a lot of the sort of logistical stuff with the hackathon so couldn't have done this without them um so yeah quick intro my name is Max you might know me by um frankie.eath on Twitter in this whole digital world that we live in uh I am relatively new to coding and development in general um quick context I graduated two years ago was working in the noble energy industry long story short ended up quitting my job about six months ago to just die fall into full stack web3 development I'd never coded before so had to do the whole thing learning HTML CSS JavaScript react solidity graph all that stuff um ended up interacting with the Zora team along the way building some cool projects and then just started as a community developer Advocate or about three four weeks ago so my position is all about building out Integrations and making it more easy for people to interact with the various pieces of the Zora sort of toolkit in general um so yeah let me get started getting into this stuff I have a screen over here with some notes just in case you see me um peeping over there foreign here we go so I just wanted to start off with this I know Jacob just gave this talk about hyperstructive essay but just so to sort of give you an idea of like my context on the type of stuff I'm doing um this line right here um taking a protocol first building approach focusing on develop developer adoption the the work I do in like the way I think my time at Zora is while we are still currently in the like Central small team that is focused on building out this protocol and hybrid structure in general I try to remind myself that this is actually like a much longer term thing and that the longer term vision of all this is the um sort of like doubtification of everything you see so with that being the case developer adoption and making it as easy for people to add Integrations add custom platforms um you know create value in the protocol by adding liquidity and just user interaction and attention to it is kind of like of the utmost importance so I try to you know keep that Long View um because that's you know what we're really trying to build there so just wanted to say that as sort of like a context to all the stuff I'm doing um so yeah now I'm going to go through the Twitter thread that I posted yesterday um it's pinned in my on my account it's also pinned on the Zora engineering account um but this has just like every resource you could ever want um for getting started with building um on like the silver API these are greater contracts and the protocol so I'm just going to go through all that um and explain sort of like how the best access each of the resources what you can do with all of them um how to integrate stuff and yeah I'll end with a little live demo of getting um something running on your own um site and then some q a so the first thing I want to do is show the Zora starter kit repo which I just um updated a little bit so that the code is is a little bit better it was pretty um a little janky before there's a lot of unused code and stuff um but this is a repo for interacting with the Zora API the Creator toolkit and this the marketplace hyperstructure protocol it's pretty basic but it provides like that core functionality to each of those pieces and I would say my favorite actually let me get this open so you have a better visual um so this is what it is this is what if you Fork this thing locally and open it this is what you would see it has this um sort of like API page which shows like a brief um sort of like what what could you do with the um the zdk and let me actually switch this to oh no I don't want to do that um what you could do with the zdk in indexer um that's what I want to do what you could do with the zdk and the indexer um what you could do with the create tools how to create your own custom create interface and how to create your own like kind of like protocol interaction so this just does something really basic touches all the nfts and the users wallets sorts them um from highest to lowest balance that gives you the top ten here you can put in any collection you want so these are just you know so that's just like a very basic implementation of how to get started with the CK and integrating with the API you have this create um interface which so this is kind of like a different version of create.zone.co um where you can interact with our contract factories and deploy any contract whether it's like an Edition style where the metadata or like the image is the same for each of the tokens or a different sort of like kind of more like the typically used in the 10K pfp thing but not um reserved for that in any way just as a source of reference where you would have different images or metadata for each piece you can use this deployer over here um to let you create contracts like that um and this is all of the Zora starter kit and then the final piece is what I personally find the most useful out of this um is sort of like a protocol interaction page where with all of the different modules we have the ask module which I do list and buy nfts for a specific price offer module which lets you may kind of like make and receive unsolicited bids on nfts and then the auctions module which lets you host sort of on on chain auctions you have all of the different read and write calls that you would want um for each of those modules of our Marketplace protocol which is really nice because I componentized all of them I don't know if that's a word but so like for each of these little things you see so like if you open this up ask module writes this is like you can create and ask with any token you throw in here you'd have to own it for it actually to go through um to create a new listing but you can like go into the source article go into the components go into the ask and then you can just grab this um you can just like copy paste this in or sorry what you would want to do is actually just um let me go back to this page um protocol you can just put in the whole ask component um which we're calling ask right disclosure um so you can just put ask right disclosure in and you would get this whole section of functionality now obviously you can take out bits and pieces you want you can change all the styling this is the whole starter kit is like the really basic like um like typescript reacts uh wag me rainbow kit CSS Tailwind um so you can put in your own styling if you need um but you can also use the stuff that's already there so kind of just like a simple opinionated user like interface for getting started with any of this stuff and yeah just something really helpful you can fork and this will also this is like a very early version of it but it will grow over time as we add new functionality this will kind of just be like where you can always go to to find the latest or functionality with like reference implementations and docs to get started with all of it so um I was really excited to do this this was like the first thing I made um when I started at Sora and yeah we'll just keep going on from there so how does the Zora starter kit um really helpful for if you're trying to just get started with some basic functionality for the hackathon start building up an app it leverages things like this nft components Library so Zora has a lot of kind of UI focused or react hook packages just for easy data manipulation or some like basic functionality that you would want out of um like when you're interacting with nfts there's a lot you do a lot of the same thing a lot of time like you want to get the user address you or like you want to get the owner address you want to get like maybe the current listing status you want to show the image or you want to um show the Providence history and there's things like that so things like nft components um which is this package right here it's in the RZR um GitHub it's also installed it's like a dependency in the source starter kit so pretty much like all of the Zora packages our dependencies in the Zora starter kit so if you Fork the Zora starter kit you'll automatically get access to all of these um but there's one in particular there's one component in here that I I've used in like every project I've ever made um which is this nft preview component um it it's really cool because the way it's set up is it can automatically respond to whatever media file you're passing in so if you're passing in like a strict mp4 file or like a video file or um like an HTML file um because we do kind of like HTML rendering um it just automatically it has logic in it where it can just pick the mime type and then render whatever it is so right now this is actually showing the Feld Zine Garden um of the lights project that I actually built before I started with zor or I did the front end development um with their team and just as a little shout out to them but you can put in anything here and then you can interact with anything but yeah this nft preview component super helpful so if you're looking for sort of just out of the box nft rendering that is a good place to start um the nft components package is built on top of nft hooks which are kind of like more specific um like granular um hooks that like can get at different information you want so when you do the nft components and if you insert nft preview it's kind of just grabbing like all the information that we're indexing about in nft or all the relevant information for like rendering it and like rendering some of it's like history but you don't necessarily always need that like maybe you just want to grab the um ipfs link or whatever the metadata URL path is because you want to put in your own custom rendering component you can use the nft hooks package and hooks like the use nft folk specifically to just grab like specific um pieces of information that you want so this is the repo for that again it's a dependency in the zorus Articles if you download that you're already there or you can just install this right away and then you can use this to just fetch like I said kind of just like more specific information um it's similar ish to the zdk I got this question the other day where they're both providing just like abstractions of interacting um and grabbing different information about nfts I'd say the zdk has like way more and I'll get into that but like way more information and accessibility of like other just like on-chain data and off-chain data but this is more for like getting stuff for using nfts in like a website so this is really cool um the use nft hook specifically is really nice and then other interesting stuff is you can actually put in like a custom back-end solution like let's say you wanted to use a different API for whatever reason you can configure the back end strategy that you're doing so these are the ones that are provided so like zdk fat strategy um this is like the old one but you can throw in like a graph back end ether actor is something that one of our devs named Ian built and then like you can put in the openc API if you wanted to for some reason um so yeah that is nft hooks really useful hook packages for interacting with nft data and again this is all in this big thread that I posted before um the hackathon it's pinned in my um account and it's also pinned on the Zora engineering account so next thing I'll do is a little deep dive into the zdk stuff and let me see exactly what I should what I want to show here um so there's this repo which is really nice I mean this is where you can like Fork again another dependency of these or startle kit um so it gets it gives you some like basic implementations of like how to get it started you sort of like get the API input going um and then sort of um like General things you can ask for and like it describes the settings um but I would actually say a better place to start is this where is this boom um here we go um this provides like full code references um of different doing different things so this is the docs.org.com there's like a zdk section and there's a lot of sort of like full reference implementations for like how to get started doing different things so you want to get aggregate attributes is how you do it um like getting nfts for an address like this is how you um this would be not using the cdk that would be sending full graphql queries or so so I guess that is the difference um the zdk abstracts having to know graphql and knowing how to like send those fetches and it just does everything for you so it's really nice it just passes you back sort of like objects of like like Json data and then you just you know grab whatever bits and pieces you want so let me show you some some stuff you can actually build with the zdk um because this is just like super cool so this is a nft historical data Explorer provenance tracker whatever you want to call it um that daiwat bill daiwat is a really cool that he works at anchor and he will be doing a talk on how he built this actually um but this is fully using the zdk to fetch information and then obviously adding a UI to like render that information in an interesting way um but stuff like this where like let's see let's see if we can find mine yeah okay so this is mine really easy super fast um you know like you just saw how quickly that just re-rendered when I put in the new token ID um so there's stuff like this that you can build and I'll show just actually we showed the code example already so that's fine and I'll show this as well so what the zdk is actually doing is it's abstracting those graphql queries I explained and if you want to sort of like test queries first to see what the returns will be before you like Implement a DK strategy you can use this playground.api.zor.com tool to like build out any of these queries that you want so like floor price nft owner account like there's all of these options um for stuff you can do so this is a good way it's like okay I want to implement the zdk let me test out some queries let me see exactly what I'm asking for and then let me see if I can Implement that with the zdk most things you can put just directly there will just be like straight zdk hooks you can do um more complicated queries you will have to implement with graphql but if you have questions there you can always like reach out um to us so is that everything I want to talk about the zdk um oh no there's a couple more things the zdk and just like the API index error is like really cool in general because it just like unlocks so much ability um in terms of you can just now fetch almost any information about anything that you could ever want so um in terms of like anything related to like ERC 721s so yeah this is a list this is also in the Twitter thread everything I'm telling you by the way is in that Twitter thread so this is kind of me just like giving you a map to where you can start um if you're looking for ideas or looking for help building certain things so this is a link to all the hackathon submissions from the last hackathon if you have if you need sort of inspiration for what to build boom go here a ton of stuff this is really good and then I'll just drop a couple pieces of you call Alpha maybe a little bit um rink B test net indexing is now live as of like last night or early this morning um and it should be picking up all new ERC 721s deployed um so if you are deploying new collections um using the rink B drop contracts by either using testnet.create.org.com or using like that starter kit interface I showed you you should now be able to open up a ring B so actually let's do a live check networks chain mainnet oh look at that that's so cool okay so we have Rigby going um that's awesome so that is cool that's a new thing that the indexer is doing and another new thing is that V3 auction event indexing is also live so up until now the only Zora Market module that we've been indexing is the V3 ask module which is for buying and selling at like specific prices but now we've got auctions going so just another another a couple things that are new to the API indexer and we'd love how testing um and finding problems with so if you want to do something cool related to those that would be great and let us know if you weren't any issues so that is the zdk for you um the drops contracts the drops contracts are are kind of like full contract Factory architecture that currently are powering create.zower.com which maybe you've seen before um they also power testnet.create.org.com which is kind of like uh the wrinkly version of this so before you deploy stuff on mainnet you can use testnet.create.zura.com um they also power that thing I showed you before and the reason I'm showing you all these things is to show that these contracts can be used by anyone they're like fully permissionless um you can just send in um send in kind of like contract inputs um and you deploy like you get a new a fully new like nft contract out of it um that you own so like Zora doesn't own the contracts that you're producing out of our contract Factory which is really cool um they're also extremely modular and extensible like just the way they're all set up I would encourage you to dig into kind of like the solidity on how all this works but Ian and Jim are actually going to be doing kind of deep dives into all of this and like how you can make a lot of custom updates to them because what they seem maybe kind of limited if you don't actually understand the full architecture but actually the way they're set up you can make any nft collection with any attribute with any type of logic they're really interesting so I'll leave it at that and I'll let them talk more about that after um let's go oh and a nice start I started at 1 15. okay here we go I need to speed up a little bit so we got the V3 protocol um this is where you can find all the solidity for our um the V3 Marketplace modules which are asks offers and auctions that is what you can interact with here reference implementations here and this is if you actually want to like dig into the contracts um they are right here and I would also just call out that in this tweet thread I put a link to the deployment um the list of like deployments of everything so like if you're trying to find like oh what is the erc721 transfer helper address on mainnet Boom like there you go so this is really helpful if you're trying to integrate some of the protocol um all right next thing is the finders feed finder app and let me clean up some tabs before this gets too crazy so this is an app that provides a reference for integrating a finder's fee so if you're not familiar with the finders fee it's kind of it's an expansive incentive um that is core piece of a hybrid structure that Jacob talked about that incentivizes um curation using the marketplace so let's say you put up in nft for sale you list it at a certain price and you say hey I'll give someone five percent of that final sale if you can match me with a buyer so that's great but and actually in order to make that useful you need interfaces that are surfacing that functionality so the finders we finder is one of them this is currently indexing every active listing on the the V3 like version 1.1 asks module um it's every active listing that has a five to three greater than zero so you can go through like everything like you can see like there's tons of different stuff and then what you can do and this is what's so cool about it is you can create share and if you create share it generates this by custom link and that you see down here it says curated by um curated by and then that's my address so if someone buys I can send this link to someone and then if someone buys this nft using my link I automatically receive the finders fee it gets passed in um in the contract call to my address and then I receive that fee so this is a basic but I think like important thing that can be expanded upon um to sort of make more use of the finders fee in general um because I think that's sort of an underutilized aspect of the sort of protocol um in current situation because it requires a lot of curation and like community outreach and like people being bought into using your platform and others you know so it's not actually that easy to set up like drive a lot of liquidity um and like attention towards it um open call for requests on this let me show the repo um there's a lot of stuff that this could become better currently it's only doing ask modules but like I said it is now we are now indexing the reserve module the reserve there's a reserve auction finders each module which allows you to do finders fee with Reserve auctions so I'd love to get those added in it also um uses the old indexer I haven't transferred it over because I made this before at johnsor um which is bad so if anyone wants to add anything add in the new indexing strategy like move it over to the new index they're adding Reserve options I personally think that would be a great um hackathon sort of like like if you're looking for a topic or something to build make this way better and make the UI cooler and everything um I would appreciate it um but also I think you know it's just this is currently one of the better um references in terms of how to you know integrate finder feeds and like incentivized creation and stuff so enough of that um that is cool but I want to show something that um one of our residents Community engineer technologists people um named Dane built which is this template um Zora mint house which lets you kind of insert any active addition um or like collection using the Zora contracts because they all use the same underlying ABI and mints on them so this is amazing if you're trying to set up like a your own minting interface for people um this is a great place to start um you can spin it up really easily um as here there's like a nice whole getting started thing um so this is really cool and it currently like while it's currently set up to only mint Like Ur to interface perfectly with all the zor editions you can obviously change the minting strategy um change like the Target apis and stuff like that um but also just like great UI great interface um for building stuff um which is if you're not like a front-end designer or like a front-end developer then having all the stuff provided out of the box can be really useful like for myself um so that's that another thing is again just want to call out all of this stuff is in this thread so I just am trying to highlight like all of these things so that if you need templates references you're curious on how to do certain things this thread can I'm adding to it over time as we get new submissions but this thread can be a place to get everything and I think my talk is my talk done in five minutes wow it is okay um I'm just gonna get through these last few things then so this is a Marketplace example um built fully on the Zora protocol by my friend Javier down in Buenos Aires this is a place where unlike the previous example I just saw Dan's thing which is like a mint house this is a I would call it like a buy now house or just like a secondary Marketplace for buying and selling nfts for a specific price using the Zora protocol so you can see this is like super clean UI it's a really simple repo too so it's actually like very good for navigating if you're like a kind of new into development you can just like Fork this pretty quickly um and then get going change out the UI and now you just have like a custom Marketplace change the cost change the nft collection that you want everything to be indexing and then boom so another great place if you're trying to build your own interface and the last thing I'll just call out are some of these um partner Dev tools that we got in recently so do we have a ton of really cool Partners building stuff um and doing presentations that you'll continue to hear more about sporesdale um just dropped the sports kit which is a repo for integrating spores it's kind of like a it's really interesting it's like a music remixing um like like on Chain music remixing royalty sending just like contracts plus UI plus interesting ways to actually like save that metadata to ipfs and then like like sustain that so you can always access it so this is a really cool thing if you're interested in building kind of um in that music category that's one of the core categories of the hackathon similarly spin amp just put out their kind of spin what did they call it the spin up SDK so easy ways to integrating with their apis their index error hooks for getting playlists and stuff like that so it would also point you there if you're trying to build things rather than playlisting or just like indexing um music or adding curation and the also new network uh they're kind of like the open source version they're the open source like data focus of Hi-Fi labs and they have a ton of stuff related to metadata and indexing as well that is really cool all open source so if you if you're interested in getting involved in music metadata I would hop in there um and then I want to call out this because if there's anything that gets built during this hackathon this is what I want to see built which is this app called each pass I'm not going to run the live demo right now but if you open it and go here it's pretty much just like the best way I've ever seen for it renders all it like grabs all the nfts in your wallet and it lets you generate an apple wallet or a Google pass in like 30 seconds like I swear go to this website try this demo you can get a fully functional like nft pass as or nft like apple wallet Google Wallet pass in your on your phone like super quickly and then eth pass has a docs and like an SDK to integrate with to actually like build a Marketplace on top of that and allows for like authenticating in person so I would love to see a full stack just um Marketplace built on this um because it's like that I that to me still feels like it's missing like yes there's people doing ticketing but why isn't there like an open source thing where you just like to run your contract address and boom now you can just have that Mark you know like a secondary Marketplace for buying and selling tickets that then people can download and use in person like right there like with each pass and with Zora and the indexer you can do all of that so kind of just like a call for that and I called for someone to build that because I just want that personally um and that I think I'm at 30 minutes I was going to show a demo for how to Fork the starter kit locally um but I don't think I had that so let me like pause for a second um I'm gonna stop sharing and mute myself Jacob what is good should I do I stop now if I oh did I just go over or what's the deal no you're you're right on schedule so uh I mean I think it's we can definitely pause here if it's a good natural place to pause uh we have even Ian ready to go but um yeah that was that was awesome it was a quick overview I shared the link to the tweet in these Global chat as well on global web TV so if you're looking for the Tweet that's where to find it um yeah I think it was an awesome overview I think I think you covered like as much as uh as I think you possibly could honestly yeah yeah that was that was the whole thread and I'll be adding to that thread over time also if you build stuff with Zora before I know there's all of you people from the previous hackathon probably on this call and you've built cool stuff go to that thread and drop it below because like that's just a place ideally where anyone in this hackathon and in the future can just like okay I'm trying to start building on Zora where do I start here's all the resources go crazy so please if you've built cool stuff before share your share your knowledge all your resources in that thread as well awesome very cool okay well thank you Max I appreciate that um of course Everybody is watching this I know there's a lot to cover it's gonna it's already recorded so it's going to be available afterwards as well and we'll put it right on the prize page um for a lot of the partners that um max is mentioning at the the end as well they're also on that prize page so just metabolism.youthglobal.com prizes uh and you'll see all those resources there as well um but again the thread also has all of that so um amazing okay cool well thank you so much Max appreciate your time um and uh yeah we're gonna jump into the next chat sounds good I'm gonna peace out and we'll sink into the background and watch the rest of this see you everybody awesome yep see you on the Discord chat okay great so yeah up next we've got another awesome talk uh by another member of the Zora team got Ian um here with us chat about uh create tools as Max mentioned um they're going to kind of go a little bit deeper uh into uh into what can be done with uh with all the tools that Sora has so um without further Ado I'll invite you to come up on the onto the stage here um and share his video shares audio do all those good things um and I will also stop sharing my screen so that you can take over as well um so whenever yeah thanks for the introduction Jacob um yeah so what I'm going to talk about today is adding on new user interfaces for creating custom Edition content types and how the Zora drops tooling works for both the additions and the drops so the idea here is creating a Zora drop contract with our creator factories and all the on-chain infrastructure and all you need to build is another front end so there's no solidity involved and this really just uses what solidity we've already deployed on chain and kind of how some of it works behind the scenes just going to make sure I have the chat open for you guys and start sharing my stream give me one second there it is all right so we'll start off with some of the officials or documentation because it's a pretty great way to understand how our smart contracts work so if you go to smart contracts and then create an nft collection this does a pretty good overview of all the different nft contracts that are a part of our drop tooling the way the contracts are structured is there's a Zora NXT Creator and it's a factory that creates the erc721 drop and it's a template nft contract that creates a new addition the idea with the ERC 721 drop is that the metadata that is generated from the drop contract is generic so an example of that is in for instance a Edition you want to have the metadata pretty much the same except for just the addition ID that changes however with a drop you want to go into a folder either on a server or on an ipfs or our weave instance and grab the specific token ID because each different token is a completely unique artwork and those are the two main distinctions we actually have a repository open sourcing soon that provides more interesting renderer approaches one of them allows for products and redemptions one of them allows for creating groups of additions so if you have a hundred that want to be one to another 100 that want to be another so there are a lot of fun things you can do with that but it's solidity and I wanted to keep this talk really into how the JavaScript interface works so if we go to the Zora nft Creator here you can see these are the arguments you're creating a contract and here there's a function to create an addition and a function to create a drop now this function does the creation in one go so a lot of things get done at once and we can break down a little bit more specifically how this works and what the JavaScript interface is in this create Edition function so an interface you guys might be more familiar with that I'm going to jump to is the etherscan interface just to show how this is not really proprietary Zora but it's just general web 3. we can have the create drop here that takes the name symbol admin Edition size royalty BPS all these different arguments we'll talk about in a little bit and then one for addition and then there's another one that's for generic stuff so this is if you're doing solidity extensions you can utilize that um going here so the first argument is the name it's the erc721 nft standard we all know and love and it's actually for additions the name of the nft so if we go to test to create.zora.com we pick the Zoro Genesis hackathon nft and then we go to etherscan for that address you can see that the title here matches the title here and the metadata for the nft is informed by the contract title now one thing to think that's a little problematic with this is that typically indexers don't support changing the name in the symbol of an nft contract meaning that a lot of the stuff you can edit after the fact but Neiman symbol are two that you just can't really edit unfortunately the next is the addition size Edition size is interesting it is the maximum number that can be minted and this is a level of creating scarcity it's a useful way to sell nfts if I told somebody that they could buy a hundred and then I actually could have sold a thousand those hundred would be less worth less in some ways because they're more people willing to sell the same item if you set the addition size to one you're creating a one of one nft and this is actually a nice way to use these contracts if you want to just mint a bunch of specific nfts on a front end that are yours and they're not being sold in large amounts the other thing is we have a concept of open editions with this Tooling in open editions is an addition that can be minted um to any size but it has the ability to be closed so after the addition is closed it's the open Edition here the addition size is marked as the number that were minted in the sales period so this would be 18 546 and then there could be no more minted after that point so it takes the full set possible number of mints from the ethereum blockchain and then shrinks it down to the number that are minted and there's a contract function to do that the next is royalty BPS um this is the on-chain royalties in bits per um share and BPS essentially is a hundredth of a percent so if you want one percent you put in 100 if you want ten percent you put in a thousand if you want ten point zero one percent you put in a thousand and one the reason this is not just a percentage is that solidity doesn't support a decimal point and it's a pretty respected Financial way of setting the percentage so you can see here I'm doing a 10 royalty that's a thousand BPS a thing to do too is if you're unsure how this works you can just do BPS from percent into Google and you get a nice little calculator here in the chart and there's some yeah this calculator is quite nice so I can type in 10 percent it will give me the basis points continuing onward you have a default admin so the admin address is the address that manages the entire contract can do anything that the contract has ability to do funds recipient is the address that gets the funds now the reason these are split between two different addresses is if you wanted the funds recipient to be a split another way is if you wanted to fund juice box or you wanted to fund a dow from your nft sales or you wanted to put the funds into multi-sig but your personal wallet would manage the drop so it allows for some flexibility the next is sales config sales config is complex we'll talk about that in a little bit this determines when the nfts for sale who's it allowed to be sold to how much it costs and all those sorts of things it's the arguments for the lazy minting description it's a string that you can see in here it's just this string now one thing to note about descriptions for additions is that they're stored on chain and we can actually see that by going to um by going to this contract here and then since it's a factory each nft is its own independent wholly owned contract and then I get to the Met renderer and then I can ask for the information associated with that token and then boom we have this whole description stored on chain now it's stored on chain which means that the cost goes up with the more content that you put in the description the reason we didn't use off chain media for the description on additions is that it would require a server and Zora is really trying to be decentralized and wholly owned by the individuals that are creating the media and a great way of doing that is to put the as much data as possible in the contract that the nft ownership is held by and most people don't really mind the increased cost because this one description is used for tons of different nfts so it's pretty efficient in the end for instance this nft was minted 165 000 times so copying this description once for this many nfts totally makes sense if you're minting a thousand individual unique nfts with a thousand different descriptions that doesn't make any sense and then we have the animation URI in the image URI these are part of the erc721 or the image URI is a part of the UFC 721 spec it defines the image shown for the nft in this case just this image and you can go down here in the Zora interface and you can see that image URL and this loads the full sized image animation is an extension that's pretty well accepted made by openc and it's used for any non-image content animation being web page audio video um even 3D objects are supported in animation URI and this is kind of what we're going to be getting into with our little demo after this the demonstration project will create a web page using this animation URI field if we go down here's how you might call this in JavaScript we'll talk about the sales config in a minute but my essay so this is going to be my name symbol essay 10 it's an addition of 10. so after 10 minutes there can be no more made it shuts down sales even me as an admin I can't increase that number 10 the only time you can change the addition size is when you do an open Edition and then you close it so there's no way to increase the addition size there's only a way to decrease it really in a very specific case here we next have the royalty BPS default admin funds recipient for small projects it's worth just setting to the address to the mentor so it's set to the address of the mentor here sales config um you can pass in a default sales config and that'll just disable sales and then you can go ahead and use the Zora create tools to set your sales settings or you can go and set a sale to start right when somebody mints it's really up to your use case here we have the ipfs URLs now if you're familiar with you know typical HTTP what is ipss colon it's just a way to specify that the asset lives in the ipfs system rather than on the web HTTP https you can totally replace these URLs with HTTP and https but it's not recommended because it's not a decentralized thing if your server goes away the nft image becomes broken but it's really up to you okay now we're going to talk a little bit about the sales configuration the sales configuration is one thing to notice is this is a solidity extension that takes in a different size compared to a full number a full number in solidities typically defined as 256 bits this clamps down those numbers quite a bit into 104 32 64 bits in order to save space and this saves deployment costs which saves you ether first is the public sales price it's in the number of ether and you are going to specify that to 10 to the 18th you easy way to get that is if converter.com so if I pass in one each it'll be 1 to the 10 to the 18th um way and this is a wave field so you would put the way into your public sales price Max sale purchase per address this is how many you can purchase per each address and if you set it to zero that means you get unlimited bins per address but let's say you only wanted one addressed in four or five so they couldn't buy up all of the nfts in one go or even just one you could set that to that number now the thing to be caution about or to be cautionary about with this per address field is that somebody could always just spin up more addresses but it's a little bit annoying and it does slow people down so it can hopefully encourage people to have more unique buyers but you know it's very easy to get around if somebody wants to public sales start is in un64 and it's stored as a block time stamp so that is a Unix time it's the number of seconds since 1970. if you want to get the current Unix time you can just type Unix time and type.go and it'll tell you the current time um I can do 2022 0202 T12 00 um actually for drops what I typically use for Unix time is well from Alpha so if I go to well from Alpha and I say you next time yesterday 12 p.m um CET Central European Time it will say convert yesterday um at 12 EDT okay this is not working you next time 12. P.M August 2nd CT so convert 12 pm C EST August 2nd To You Next Time Boom we get the timestamp right there and then we can just take that and put that into the contract it's a nice trick especially when you're dealing with drops across many different time zones to just quickly get that number for your sales start and sales end if you're building a UI you probably will use some sort of calendar so it's not a big deal if you don't want to start with a public sale or a private sale that's a pre-sale you can just set the value of all of these time stamps to zero if a sale starts at the beginning of time and ends at the beginning of time it never happened pre-sale start so pre-sale is determined by this Merkel route the Merkel root is a predefined way of determining all of these different users if they exist within the set and if a mint matches the Merkel root then it can be minted under pre-sale and the Merkel root includes the variables for sale price and Max purchase per address and address so there's no settings for that in the contract it's taken directly from the Merkel route if you're not using the Merkel root it's safe to set a Merkle root of zeros and the reason you choose zeros as opposed to anything else is that zeros are cheaper to store on the blockchain so when you're making an empty Markle root just set it to be a bunch of zeros don't choose something like ee or n n like it's it's all the same thing as zero the chances that there's a valid Merkle root resolving to that is basically zero so you wouldn't have that concern but the concern you would have is just saving storage space and this is how you would import a type and typescript from the Zoro Labs nft drops contracts package so you don't have to manually check every field you can have typescript check it for you as well and we'll get to what that looks like in the example the docs links are here and then I can share the slides in the chats okay let's go through some code so I made a little demo project for this that allows you to Mint markdown essays with the Zora Edition tool and we can actually take a little a look at the current version at this link here it's hackathon quality code so don't judge me too much Jacob are people able to see the chat and I believe there's one environment variable this mentor needs to set up so I'm going to go and set that really quickly and show you how it works okay I don't really have great ideas for this essay but um I can give you a quick demo on my local apps so let's do that and then I'm actually going to take some of my presentation code um and put it in the markdown editor the markdown you can do this to create a code block and then we can add a header and then we can add another section for sales configuration and I've already connected my wallet to the website so you can see I'm on the rinky B test Network and I'm connected to this website and we can add in sales configuration slide and then I'm also going to add in a GitHub repo and let's make the link pretty so here I can just take this GitHub repo oops I think I deleted it there and I want to make it a link and if we look at the preview this is wrong I think it goes the other way Gotta Love markdown yep and then we just delete this line here and then I can go ahead and publish so here it's posting to my local server to the publish route and then the publish route is returning a response here with the sac ID and the image CID and if we take a look and see what these are this should be an HTML web page of the essay I just wrote so looks good to me create an addition there's some code and you can take take a look here and this is the rendered HTML from that markdown editor and says publishing so if I go over here there's a contract interaction and I can go ahead and take a look at the hex data for it um and if I turn this into uh we can just see if this works I've never gotten the metamask data parser to work all right it doesn't work we will confirm the transaction it went through and then the easiest way to determine where the new drop address is is to look at the events on etherscan and you're going to do the same thing in JavaScript we can actually add that in if there's a little bit of time because right now it does nothing it should redirect to a page where you can view your essay when you're done making your essay and create drop the second address would be the Edition contract address so this is our new contract we just made and if we look at the contract we can do read um see I think I need to set it as a proxy and we can take a look at our name um of the token and the descriptions that would be in name metabolism and then there's no description but we can then go over to our metadata tool to pull out the description the metadata contract is generic across each of these additions which means that you pass in as an argument your contract address and it'll give you your information so we have our description creating a drop presentation looks great we have an image URI so if we go to Zora ipfs and we look at that image boom that's exactly what we just saw and then our animation see if this works yep okay so what does this look like on openc well we can take a look after we mint something so since I'm currently the admin of the drop I am going to Mint myself an f t I made myself two we can pull this Edition up on our test net View the right address let's see okay this did come through maybe it takes a few minutes maybe let's see and then the mints get went through perfect and then right here we have our essay metabolism this is the image is used as the preview that's why we have to create an SVG it could also upgrade this to allow somebody to upload a preview image and then I open up the essay and boom I have the essay here something to note is in the sandbox view um GitHub will not allow blah blah so I need to go and open the site in a new window but yeah you can render markdown you can add some styling you could even add themes in the editor so if you were to go to this here you could choose the theme and then it would update this preview over here and then that same theme would apply to the site right here and you can actually questions Fork this and do whatever you wish with it and there's a nice little GUI editor here for those that like that something to note is if you link in an image it should work but it would be best to link in an image from something like ipfs and you might have to go and work with your favorite markdown Editor to add that option in now that I've created this Edition though and I can see on the open C which is awesome and I can actually probably see it soon on the create tool I think it's just cached see nope how would we view this information locally and actually let's let's back up a bit and go through how does this upload flow work and how is this app working behind the scenes so the main page here is the create page and the sale starts off at zero and ends in one week and the reason is seven let's start 60 so it's seconds seconds minute then 60 minutes in an hour and then 24 hours in a day and then seven hours in seven days in a week so this that's the sale to last a week disables pre-sale sets 100 purchases per address and a 0.1 each sales price can go ahead and see that works by going to our drop and calling purchase purchase 0.1 I one of them oop that'll fail one that's successful and then this is all pretty standard react so this here is used to disable the button when publishing here is content for essay title and description and then this is stuff with wagme which is a hooks library for interacting with ethereum and then this allows us to connect the Zora contracts with wagney here we have a fairly simple form it takes in a title description in essay I'm using a third-party markdown editor it acts in react just as a standard text input and then a button for publishing I decided to use the g-gen toolkit but you can use any type of front end or your own component library to build out the components when you push the upload button the first thing that happens is it sets the publishing to true and then it gets the sa HTML from the editor preview it's a bit hacky but it works I didn't really want to re-render myself and then it calls API publish now a lot of times you might think why doesn't it just call pinata right here well two reasons one is mainly for security I don't want to expose my pinata URI and then two it's just a little bit easier to get those API calls done on the server you can batch it into one request and add in better air handling on the client and you can also render things on the server side the response then comes back as Json we grab the ipfs hash from both the image and the essay this is just for debugging and then it calls contract.create Edition the ABI is pulled in from the node package of the Zora contracts all the Zora contracts have node packages with type chain and apis published and you can take a look and see what that syntax is in the node modules package it's a pretty easy way you're not going to find it directly in the repo since it's compiled automatically down that you have deployments folder and you can choose the specific version of the deployment you want to use in your application disk folder which includes the artifacts now these are the Json files with the apis in them and also type chain and these are typescript definitions and JavaScript files to interact directly there was a conflict between the markdown editor and our type chain builds so I was not able to use type chain with this project and I just instead use the direct ABI files can take a little bit of a look into how the API works I found pinata publishing from a string to be quite annoying but this seems to be working pretty well this is a very simple HTML web page given the essay content and the title it just spits out a web page could probably improve on this quite a bit then I'm doing a request to pinata directly I'm not using any of pinata's tooling I'm just doing a standard HTTP request so I set the CID version I added the type essay from pinata metadata not necessary but nice when you're in the dashboard it'll show all the essay types in one section and then I'm just using the isomorphic fetch Library which I believe is included as a part of the nyxjs framework to then send the response to pinata with the form data now the reason you would use form data is to allow for adding on a file Json can't really encapsulate files very well so solution here is to just append a file onto the request and then it splits it up into multiple chunks for you and you don't have to do anything for that it's all automatic passing an authorization header so this is coming in from next.js as the pinata key and then it calls the HTTP response and then returns Json probably needs to have better air handling but this is the r upload to pinata function short and sweet then this is the Handler this is the next JS function that gets executed when this API route is called first it checks if the request is a post it's going to ignore get requests and then it parses the Json body to grab the title description and Essay fields and you can see that we pass those in right here Json stringify image CID so this just uploads to pinata a function make SVG card with the title and description the content type shtml make HTML page same as making SVG card it's just here the make SVG card is used both the same on the server and the client so it's in another file and I exported an sdg from illustrator and threw in the text that's why the scaling is a bit weird it's probably better to manually write your SVG but time the next step is to upload depending out of the essay and then I just returned the image in the essay CID and the CID is the content ID field it describes the file on ipfs so when your url looks like IPS colon slash this is where the CID is put if you're addressing a folder you just add the folder after that and a bunch of files can fit into the ID but these are just simple cids that include only one file directly there's no folders involved here this is a bit of a hack to create our symbol field you can take a look at that here so the symbol of the nft C drink B fresh here now it knows so three metabolism I don't know why meta got removed oh substring one through ten which should be substring 0 through 10 maybe eight so it just takes the first eight uppercase letters that are a through z zero through nine um and makes that the symbol and you can see our purchase went through here and let's see if it shows up on the zort Creator testnet shed at this point yep it's doing something there we go metabolism 22 hackathon creating a drop presentation and right here is the mint button and then here's the treasury so I can run or withdraw here now I want a better preview page than this so now that we've covered how the upload works and how the CID is then added to um how the CID is added we can then now look at how we retrieve this published contract so if I go to additions ID I wrote a web page that does a call using use contract reads and has an index page so if we go to additions slash the addition I want let's see what happens loading loading right there metabolism 22 creating a drop presentation and then we got our ipfs another ipfs so let's do this data it would be data [Music] zero one and two zero one two so data okay so or nothing and then our data field and we know data's got to exist so now we can do title image essay equals data and then we can return header heading title one make it real big we can embed the web page since this is a full web page I'll just pass an iframe source pass replace this with an HTTP Gateway this is all reactive stuff foreign there we go create an empty Edition and then it looks like there was an issue loading the essay um not sure what's happening there but I think that's time so to play with this repo and to continue on you can take a look at how all this works in the code in my GitHub just mark this down and I will publish the latest changes to GitHub Ian Nash Zora essay Edition Mentor thank you so much and I hope somebody makes some cool weird P5 JS HTML interactive SVG generative I don't know if there's some really cool things you can do with this so have a good rest today amazing thank you so much Ian that was uh that was sick I think it was just being able to go through all that in one Fell Swoop and uh wow that's awesome yeah I think that's gonna be an amazing resource for people as they build over the next weekend um thank you so much for taking the time to roll for that with us really appreciate it of course awesome thanks Ian um okay well we're gonna keep the talks going um so up next uh we've got another awesome talk uh this one by Jim gold I'm also on the Zorro team um titled beyond the addition custom e-i-e-rc 721 drop uh extensions for Fun and Profit um so yeah really supported this one Jim thank you so much for the time as well um and yeah feel free to unmute um I'll get out of the way so you can share your screen share your video yeah you're already on it so awesome thanks so much for being here Jim sweet thank you so much Jacob and thank you Ian and I hope that these two talks will pair with each other quite nicely we didn't plan this so we'll see how it goes let me just share my screen awesome perfect looks good thank you yep sweet okay cool I'm the only Edition custom ESC 721 drops extensions of Fun and Profit this might be a tongue twister on The Talk okay so we recently launched Zora Creator I'm Zoro Creator is the simplest way to create additioned ERC 721 tokens on artistone contracts it has a super simple interface and it's the most user-friendly way we think to create additions for images for videos for audio files things like that at its core Creator is an interface to managing an underlying contract DRC 721 drop it's a really good contract it strikes the balance between being fully featured and customizable and it's also extremely gas efficient I'm when I say gas efficient you'll see price fluctuates based on gas prices eat prices and things like that earlier this week it was you know in the ballpark of me I'm spending maybe fifty dollars to deploy my own contract and mints for collectors on that contract somewhere in somewhere in the ballpark of three dollars and this is on ethereum L1 there's no um you know there's no price savings from being on L2 nothing like that this is um this is full fat ethereum L1 as an artist I'm old enough to remember February 2020 where minting even single tokens on other platforms shared contracts cost hundreds and hundreds of dollars on so needless to say this is a really great contract this isn't a talk hyping up how efficient our contract is out of the box Ian has already showed you some amazing things you can do with this contract building your own websites and police contacts and I want to take us in a different direction foreign out of the box ESC 721 drop doesn't actually do everything that you need it to do what if you want to go beyond the functionality available ESC 721 drop for example has a robust system for managing public sales and with options for sales that are timed or open-ended for sales that are free or paid available in fixed quantities or maybe unlimited runs we have lots of options picked into it but we also have no assumption that this is the only way that you might wish to distribute your nfts as an artist as a Creator as a community perhaps you might want to gate access to a pre-sale based on holding a threshold of your dowels erc20 perhaps you want to give a discounted mint to collectors or the previous ERC 721 token if you want to do batch pricing or bundles things like that you might want to experiment with pricing on a bonding curve you might want to prevent people from minting tokens on on the Sabbath these are all good use cases the same is true for the content of your tokens additions as you've seen them on Creator a pretty simple they store a reference to one piece of media on ipfs that's you know whatever it is that goes um you know whatever it is that goes in here um that they store a reference to a piece of media and that is one piece of media the same for every token in an audition and this is great we use this and we use this ourselves for our drops and many many successful drops have come out using this exact methodology this is great but obviously that's not everything that you might want to do um with an nft right maybe you're a musician and you want to store meaningful metadata on chain with each token maybe you've designed a tarot card deck and from an array of images from okay I'll hold that maybe you just want to pull one card that was upside down um for each mint on the platform right um sorry maybe you want to pull one randomized image for each token that is minted maybe you're a generative artist and you want to do a project with a live code based renderer and a randomized seed per token along the lines of platforms like art blogs or FX hash or you know our favorite drops like Solomon seed and Silk Road you know the type of job thoughtful handling of metadata is at the heart of every nft project and having people creates a control of it is absolutely pivotal for creators doing the Paradigm pushing work that we are obsessed with at Zora and as individuals so if you're running into any of these scenarios you might be tempted to say oh my God Zora's contract sucks because it didn't consider my Niche and didn't mean specific use case you might write a new contract from scratch maybe using base templates from open Zeppelin or soulmate in my local contracts tweaking the codes so they work as you like and deploy your own version this is a hackathon these are all completely valid um these are all completely valid approaches right uh contracts are on GitHub and open source you can find them and go wild but we think there's a better way to go about it a way to keep the majority of ERC 721 drop as it is and to be able to rely on knowing that you're using the exact same base contract as we do it's optimized it's efficient and it's loaded with features that we think are really useful for creators who are doing industry leading work it turns out that our additions contracts as you've seen them on creator um kind of just the tip of the iceberg really the features that you see on Creator the you know the ways you can instantiate an addition um on this screen is just one option for configurating an extremely customizable architecture of contracts modular contracts rather than forking ERC 721 and tripping over yourself trying to keep your own domain specific customization separate from the majority of the Zora contract logic instead we have a way that you can extend them with discrete reusable chunks of logic these can even be designed in reusable ways so that when you deploy into mainnet your internet brands can use them for their projects as well we've seen a handful of drops using these techniques already but it's definitely not immediately intuitive I'm just going to say it well the contracts are well designed and easy to read and honestly they have really sick ASCII um ASCII diagrams in the comments that Ian made should check them out if you haven't seen them there's still a lot of moving pieces I know from my personal experience that it can be kind of overwhelming trying to figure out which pace which places to poke around in first don't worry we've got you um for the rest of this talk we're going to show you how you might get started with two of my favorite Pathways for customizing our drops contracts making custom metadata renderers and making custom minsing modules um before I get into that I want to stress that this is kind of advanced stuff you might not need anything more than our standard editions contract do it deployed straight from Zora creator okay ski that's great this is just an option available to people who want to push things further um then they can get with the out of the box contracts it's not an insinuation that you have to do things this way or this is what Zora wants you to do these are um these are just options available to you with that said I think these techniques are really exciting and if you do something based on this I'm going to be stoked to see it so you know um this is also going to be a pretty solidity heavy talk um you don't need to be a solidity Galaxy brain for this talk but you also might you should probably have done you know [Music] um an intro to solidity course you should probably have understood like at least like the basics of how an arc 721 drug um works at its core I'm if um if you listen to some of the examples that I shared a few minutes ago and you're like yes I want to do that um but maybe you don't have the solidity skills to implement it that's completely cool and I think hackathon's are really good opportunities for you to pair up with people who do have that experience maybe you know get together and learn a little bit from each other so I just wanted to share that because this this might be a little bit um this is kind of Zora 201 or 301 maybe but okay um also as Max said earlier we have a suite of composable tools that you can use at whatever level of abstraction that you are comfortable with so if you if you don't want to dive in to playing with Zora toys um and at the contract level well you know you can tap into whatever field is best for you and your level of programming experience and that might be using a typescript client that might be using the protocols uh graphql API that might be using our react hooks that might just be using create.zora.go kind of as it is and so I just wanted to shout out okay so let's start with custom metadata renderers as Ian kind of touched upon earlier on the best place to start for this really is looking at how these um contracts are created now the heart of this system um is a factory contract called Zora nft Creator V1 as we get into these um code leaning slides I just want to say my slides aren't online just yet um I'm going to format them a little bit more after this talk and I'll publish them probably sometime this afternoon so you'll be able to find those on Azure engineering um Twitter account I'll post Those ads I just wanted to say that before I get into filling the screen with code so we have Zora NFC creates a B1 and if you look through that we might see a function called create Edition which I believe Ian was talking about it contains some pretty standard stuff for instantiating in ELC 721 a name a symbol details about the addition size and about the sales configuration and then down here the bottom I don't know how to change the color of my mock-up but that's okay um down here at the bottom you know we have the details that you may expect from if you've used if you've created an addition on a website basically an animation URI an image URI and a description there's a sibling function um in this contract called create drop and similarly you know you have all your kind of standard ERC 721 bits and pieces here instead what it does is it asks you for a metadata URI base and a contract URI this is really useful if you have your metadata that lives on a server somewhere um or you have um meditation that lives on ipfs you know based on a URI base so you can configure it these ways you can interact with both of these contracts and however you like and you know whether that's in eposcan whether that's in Foundry whether that's ethers personally I've been deep diving into Foundry recently and I've got over the harder one I love it now so shout out Foundry team um it's my favorite way to play with contracts from my text editor but you know if create drop or create Edition don't suit the needs of your project well I promised you would go do this so let's go a little bit deeper under the hood um each of these contracts the cool setup drops contracts and not yet again it's a public publicly callable function in um Zora nft Creator and instead of passing in an image UI animation URI Etc to it when you pass in I wish this highlights it was a different color um it's an i metadaser renderer okay um and it metadata initializer so let's figure out what I meant as a surrender is because um because it's kind of at the heart of all of this I am at a data renderer it's a really simple interface that we create and um has three methods it Returns the token URI for a given token it Returns the contract URI the general contracts and information for a given contract and it has a lot of function that we'll get into a little bit later that allows you to pass in some data from it from the factory or from wherever you initialize it so looking at addition metadata renderer this is kind of the um this is the this is the standard thing that we're all kind of familiar with at this point maybe um the addition metadata renderer is just one possible metadata renderer that can be used by any erc721 drop it just so happens that on the xor create website we have currently only implemented Edition metadata renderer there are more coming soon you can create your own which is I guess what I'm talking about right now I'm how Edition metadata renderer works it's pretty simple I'm like all we're doing is we have a structural token Edition info and we pass that description and image URI and an animation URI and then this renderer is shared between different contracts so multiple drops can use the same renderer without having to deploy it over and over again and this is really nice the you know it's nice and gas efficient um okay um we store this in a mapping um from the address the address the address of the EOC 721 drop to the Token info and then in token URI you know if you've done any ERC 721 project before if you've used opens up when you know if you've done um uh you know celebrity zombies like anything like that you've probably kind of seen something like this before you've seen your token your eye function that takes a that gets past the token urri and returns back and returns a string the string is the the Json of the metadata right so the simplified version of this contract is that it gets the address of the drop from message sender oh the thing that I should explain is that these drops basically the drop contract will Farm out it's called second URI to the underlying metadata renderer so all it's saying is instead of having this token URI logic in my drop I'm just going to store it somewhere else in a different uh in a different metadata renderer um and delegates that so we get the address of the draw from message sender we find our token info struct from that address here and then you know like I said this is just an Edition that has the same um it has like the same information token ID so like that's all we do and then we return it however you like to concatenate Json so yeah and you'll see sorry Edition metadata under uh if you take a look at the code it's all in GitHub and Azora and addition metadata to render it implements a couple of other functions it has some helpers that let for example like the contractor administrator to update um some of the information and it has it has some bits and pieces it has some events that it admits and such like but under the head it's it's pretty much it's pretty much this it's pretty relatively easy to follow so you might want to start by taking a look into that and with that said it also means that if we you know if we want to create our own meditate surrender we really just have to follow this pattern on of implementing the I metadata renderer interface this thing coming back we would pass it in when we're calling so that set of drops contract we would have a deployed imeta data renderer and we would pass it in here so I just want to take a look at some patterns that might be useful yes last night and type highlighting here um take a look at some patterns that might be useful and if you're creating your own metadata renderer so one thing is that um you might wish to make a meditate to renderer that can work with multiple drops so instead of having one metadata to render work or one drop one metadata render after another drop deploys that gets pretty as heavy um you know you might want to say there is um a common set of reusable logic that different contracts can use and different drops contracts so what you might want to do is store this is exactly what um Edition metadata renderer does as we store a mapping from an address of a drop to some data type that could be you know A Primitive it could be a string or a Boolean or whatever it could also be a struct like we do in token Edition you may also want to store some data that is mapped both to the drop contract and also to a token IDs in that case I would probably do something like a mapping of a mapping and or whatever data structure feels good to you in that case to store data on a per token basis it also may be the case that you have an extremely extremely Niche metadata renderer and you actually um you don't want to you know you don't want anyone else to be able to reuse that without redeploying it in which case go wild to you do you I'm just saying these are some patterns that might be useful if you're implementing a metadata renderer this weekend um and you're looking at our code and you're like what is basically what is this first address parameter okay so with that said let's say you're making a music nft metadata renderer I hope someone does um and let's say you know you have assignment data that is useful to be stored on a per drop basis but you also want to have um data that can be initialized once I am just when the contract is deployed this is something that we do we have a library that you're free to use you're free to not use called shared nft logic which handles things like um you know has our Json helpers and things like that you're free to use it you're also free to use a Constructor you can pass that into the Constructor and your free to use a constructed wherever you like and this is at the global metadata renderer level on kind of a sibling patents this is like cool okay well let's say um let's say you have your one deployed renderer and you want some custom data to be set for each drop that cools it again we do this in um in the addition metadata render and a couple of others so in that case the way that we handle this um to keep the function signature of I metadata renderer kind of consistent is to say instead of parameterizing it um based on different variables what we actually do is we ABI encode those variables whatever shape they are whatever type they are and I've tried it with like strings and booleans and numbers and such things like things like that I presume it works with other things that can be API encoded and we call initialize the data and this is the other parameter that we passed to set up drops contract so we're passing our initialization data top tip if you don't need to do this pattern at all that's great you can just pass in an empty string when you call this function C Patrol you don't need to do this this is just an option but this is really great but this is exactly how it Implement um you know in this case we want to set a custom image URI description animation URI on a per drop basis so we would pass this in despite data and the API decoder you kind of it's kind of like destructuring um JavaScript if you haven't done this pattern in solidity before set whatever data type it is and then we're free to use it however we want another sibling pattern that might be useful is um well this is kind of got along it's using metadata render admin check so in the case that you um you know have a contract that is owned by a particular account um and you wish to um you wish to have some protected functions in there so in this case we're just storing mapping from an address to a string called token data see we only want our admin to be able to update this we have some we have some little helpers if you just poke around in these or drops contracts repo um you see this this one's called metadata render admin check and use import that and then you have a modifier that you can add to your function here so this is actually really simple um kind of it's the other one was like kind of complex um also kind of relatively hard to do anything dangerous costume mentors I'm just gonna say be careful doing this it's in terms of like the code to implement it it's a relatively simple thing um you'll also have the potential to rank your whole projects so with uh with great power comes great responsibility I guess okay so with that said all we're going to do to um create a custom Mentor is from our drop so this is our drop that we've already deployed and again this can be there's going to be a drop that you've deployed from upper scan you can this can be a drop that you've deployed from UI on create.zorrow.com really kind of however you want to do your job and we have a drop um and we just want to grant our role of mentor um grants a role of mentor to be Mentor contract now these roles was just using the open zaplan and permissions multiple and these roles can be granted to other externally owned accounts so you can you know give this to your friends on the team then they can rug the project as well um you know it's either humans and you can also say um you can also Grant this to a Smart contract so that's what we're doing when we make a custom enter so all that you have to do if you've granted a mentor contract this role but you've done a scan or whether you've done that and I do it on Foundry just because I don't like typing the same thing over and over again and later this is in your um in your Mensa contract you can just call admin and and it it's like a back door to Mint into the contract that bypasses all of the traditional sales logic and again the nice thing about this is you can reuse them between all different drops so many different drops can just add these different minting modules without having to change their underlying erc721 drop implementation you just Grant one of these a specific role and then you're good to go I'm going to leave the implementation of these up to you because it's extremely you know domain specific again I guess and you know again I'm just going to say it you probably want to be testing these functions we've been using Foundry writing a load of tests and Buzz testing for things like and checking prices and stuff that's beyond the scope of this talk happy to help you later um but this this is basically how this contract doesn't Implement any particular interface there's no particular signature that it needs to inherit or anything like that what we're saying is that we have a function doesn't have to be called purchase either by the way this is just what I call that okay so we have a function called purchase that implements our custom logic now again this is like this is the skeleton you want to fill in the blanks here yourself so actually let's just look at the signature for what I've done I'm the signature takes a Target and again this is an address of a drops contract you could also pass in the Target in the Constructor but again it's and you know just store it um on the contract but it's kind of nice again to have these modular drops that will work with anything where your contract is an approved Mentor so you can't call it on any contract this contract has to be approved but there you go um and all we're saying here is exactly like it was in the last slide and try admin minting to the message sender doesn't have to get an answer to Sender it can be whatever you want it to be quantity is that's part of the signature of adminant here this line up here or this the missing lines this is the fill in the blanks this is you want to be checking the price that you're I'm letting people meant for you won't be checking any logic if this if you're token getting something this is where your token gate you know for the last weekend for zoretopia and oaklands we implemented signature minting so that's where we do our signature checks again all of this is kind of out of the scope of what I have it's time for in one minute or maybe 30 seconds and we're happy to help you if you have specific details but this is kind of uh fill in the blanks it's also the kind of happy dragons the other thing that's kind of useful I think um is this little snippet that we have here which again I'm going to publish these slides later um all we're doing here is saying um if the value that you're purchasing for is greater than zero basically if we're sending money into our Mensa contract we should just afford that to our drops contract otherwise you're just going to end up with like money spread between um different contracts and that's kind of messy so yeah I'm really like implementing mentors is pretty simple um and also kind of dangerous I guess be really careful write your tests make sure you're only granting that rule to contracts you trust etc etc um but that that is kind of the modulus or a way of creating these reusable chunks of logic that you can use across all of your projects you can configure in different ways and you can share with your friends and then again to recap if you want a custom metadata scheme that doesn't really work with our drops metadata renderer Aura Edition metadata surrender by just implementing I meditate to rent her and I think that is even more than I have time for right now and thank you so much thank you Jim this is awesome yeah simple and dangerous those are two words that uh LED together again uh lead to amazing things and also very explosive things that's awesome gotta you know got it gotta live on the edge gotta live on the edge well thank you so much for the for the talk and for the intro there again like I think another just back-to-back awesome talks uh from the Tsar team so far so lots of amazing resources for people as they build um I love that this one went even deeper um than the the last talk so yeah I think we did a 101 at 201 and now a 301 so um thank you so much for being here thank you looking forward to seeing what everyone builds and sorry the last post script is that if you run into issues with this please reach out to us and saw our engineering on Twitter we're not just posts and memes and please ask us for help doing that stuff so looking forward to seeing what everyone does thank you thanks so much okay well excited to announce our next talk um which I think is maybe even the newest product uh that sorry has put out for developers up there which is the Zora API um so I'm going to introduce Isabella from the Zorro team feel free to come on up and unmute and share your video um who's gonna do an intro to the to the new API that they put out recently um and it's uh it's super powerful so I think I am very excited to see um what people build with this and without further Ado I'll uh stop my screenshot here so that Isabelle can share hers if she'd like and yeah welcome to uh to the show Isabelle thank you so much for being here yeah thank you for inviting me I'm excited to kick this off uh let me share my screen cool um just gonna present and yeah we're just checking cool okay cool uh yeah so I'm Isabella I work on the back-end team at Sora and today I'm gonna be giving a brief intro to the Zora API so what does the API do I know API sounds scary but I promise you it's not and if you've never used an API before it can be a little intimidating but we're going to walk through it together and break it down so it's super simple and so you can get started at its simplest it indexes ethereum events and it turns us into readable data and you can access this readable data via graphql through something such as our API playground oops so what data can I find in the API we're always adding new data so every time you check the API there might be some new stuff it's like a little Treasure Chest you know every time you check uh we'll just go through the list uh some of the things you can find are sales so we have sales events from different marketplaces such as Seaport Foundation super rare Etc mint events so if there's like a new token project that has been minted you can pick up those mint events so for a collection if you wanted to query all the recent tokens that have been minted that's possible uh we also support multi-chain So currently we're mainly supporting ethereum mainnet but as of right now we have rink B type of chain going so by tip of chain I mean it's pulling like the most recent blocks of Rigby we haven't done a complete rinky backflow of all the wrinkly data history uh but you can start playing with that uh we have events so events are basically every event signature that we want to index we emit an event we not a main event we pick up emitted events and we Index this into our API so for example if you wanted an auction bid an auction settled an auction created event those are types of events you could find in the events endpoint and for markets markets is kind of the final state so for example if a auction was created and then an auction was bid and then an auction was settled if you create the market endpoint you would see that the auction settled event and you would see the auction in its final state uh we also support search so if you wanted to query it across different Collections and tokens and you wanted to search say something like zorbs you would see a bunch of Collections and tokens populate that are sort related we also support token queries so if you wanted to query for different tokens based off of transaction hashes or you know like token IDs across multiple collections that's possible as well who are also starting to support off-chain orders so if you use our API you can go see that we're supporting Seaport off chain orders so these are orders that are not on chain so if someone's put a listing up and you're able to execute these orders through the call data and we also support media encoding so media encoding is really useful for example if you find a collection and all the tokens are say 4K images and you want to load this on your website your website's probably not going to have a good time and it's going to be very slow but if you use something like the encoding you can create performant images so we can basically convert the images into a different size so we support things like svgs jpegs pngs videos and gifs and there's a whole bunch of different media encoding types that we support but I think the best place to find more information on that would be our Docs so what are some of the contracts we index we index a lot of contracts and this is always changing as well and if there are contracts that are not currently supporting that you want to see supported like DM me DM anyone on Zora back end and we'll try and get it in but some of the contracts we support are Seaport sales Seaport off chain orders Foundation sales uh wyvern sales nouns we actually support all nouns events so such such like uh like a bid a saddle a uh you know a auction created Etc and we support that for little nouns as well so you can get really data Rich nouns and little nouns auction Divine history super rare we support super rare sales crypto punks we support crypto punks sales across the marketplace uh we obviously support Zora we V1 Zara V2 and sort of V3 uh we also support looks rare sales and loads more and we're continually continuing to add like new contracts every day so if there's something you want you're not seeing it here let us know uh how do we index events so this is an example of going from something you'd see on etherscan to the actual data in the API so as you can see this is a nouns auction event and it's a bid so you can see that the sender has placed a bid of this is the raw ethereum value and you can see it here as well and you can see the sender and you can see that it was extended so here what we would do to get it into the state is we would be picking up recent blocks on ethereum we would say oh this matches our event signatures that we want to track we would label it through our classification process which we basically say you know when we're attaching a label it's basically saying like oh this is interesting and this is something you know we want to extract and get into the API later and then we would extract it which means converting the raw byte code into something that you know is readable and something you can actually query in the API so there's a bunch of steps but essentially we're taking all these raw you know event logs on ethereum and getting it into the API into something that you can query using graphql uh so together we're gonna build a query so I'm gonna walk you through our API playground and we're going to build a query together so as you can see we're gonna head to strawberry and we're gonna do so to do the same thing if you wanted to follow along you can go to api.star.co backslash graphql and this is our playground so together I thought it'd be fun if we did a little sales query so there's all sorts of filters and things you can do and I'm just going to show you how easy it is to build a query really fast so sales types I want to do a nouns auction sale and I would like to get information about the token ID I always like transaction hashes for me because I can put it up on etherscan as well I'd like be um price I want to know so we have for special for prices we support a lot of pricing data so such as like chain token price which is the ethereum native priced use uh UCSD price at you know the time of the event so you can get a lot of really specialized data so if we query this you can see cool so we can see a bunch of nouns auctions that are populating so these are auction completed so you can see that nouns ID 325 this is the raw value this is the price in USD yeah that's how you build a sales query really fast and you can quickly change this for you know different different collections different contracts and it's really easy to build something that's super powerful very quickly cool so ideas for building with the API I think the API is really fun and it's fun to just I love playing around with it on graphql just to get a feel of what's out there I'm fighting you that's of data every day that I didn't even realize was happening on the blockchain so I really encourage you guys to just even just get started by playing with it uh some ideas to help with your brainstorm or something like sales Bots collection dashboards auction marketplaces nft art galleries uh even trending Collections and you know minted token trackers the possibilities are really endless and I think if the thing I'd like to know is just you know just get started with the API just start playing around I'm sure as you're acquiring data these ideas are going to come to you yeah uh where can you find more information so api.star.co is the best place to go that's where our API landing pages and if you do backslash graphql that's where you're going to find all of the that's where you're going to find the playgrounds and docs.or.co is where you're going to find all of our docs which has really detailed information on queries you can make how to make a query with curl what types of media encoding we support um what contracts we support and more so it I really if you're lost or you just want to learn how to get started I would head to Docs as the first thing to do um yeah other than that like I think if there are things that you want to see and you have feedback or you know you want to help index I'd say hit us up uh my DMs are always open and yeah we'd love to get feedback and continue improving yeah with that uh do we want to go through questions yeah let's see um everybody has any questions feel free to drop them in the chat um well we kind of wait for that uh I think it would be maybe helpful to just go through on the um maybe just explore a little bit more as we have some we have a decent amount of extra time just like explore sort of what's possible on the playground yeah if that works for you like maybe that would make sense just sort of like jump through some of the different options and what's available there yeah yeah so we can head back to the playground um so what I love it's really easy to just like take away queries and start pulling new queries uh really quickly so if you wanted to search for a token and you wanted to you know see all event types for a token that's possible um for mints we could do a mint query so you can see collection address you can see here like you can get into images and as well so you can do a lot of different fun queries [Music] um so if you just wanted to see like recent events doing some upgrades at the moment so the queries might be a little slow um you can see a bunch of tokens that have been recently minted and uh we could actually continue to expand upon that um so we could look into transaction info see if you wanted to look at block number so you can see all of the recent transactions uh we can order this in different directions as well so there's different filters for orderings you could sort in different directions um there's ways to do aggregate stats across collections as well so you could do um across floor price across a collection so if we had a collection address I don't have one off top of my head but if we had one we could do a aggregate stat with the floor price for a collection as well and you can do similarly you can do nft account you can do owners by count uh sales volume as well so if you want to do sales volume across a collection that's possible too uh I forget attributes you're able to do different aggregations here search this is where we're able to do different search queries so if you wanted to search for Zorb with a an entity oops too many things um yeah in the chat actually has a specific question about search and um basically what What fields we can use we can search on basically so what like what Fields do does search use to find matches is a specific question yeah so search is like continually still being developed and like this is I think the one of search um we do matching I believe off description and collection address names and I think this is still like growing in development um but yeah it's still it's still being developed essentially cool sorry I didn't mean to cut you off there oh no that's okay um yeah I mean I can keep going through Aquarius uh like we could see all approval events so if you want to do different event types um so we could do nouns event the event types so you can see these are all non's auction events um foreign but yeah you can get really detailed queries very fast with the playground versus just you know writing a curl request cool um are there any more questions foreign doesn't look like any are coming through right now um but uh yeah I think we can probably take a quick Break um just before Dane's next talk if that makes sense um anything else you wanted to uh to chat about before we wrap up uh that's it for me awesome okay well thank you so much appreciate you too thank you thank you for having me no home awesome and then yeah for everybody in the audience uh we have one more talk left for today um it's going to be coming up in just a few minutes we're just going to get Dan up and up on the stage so we'll probably take about a five minute break and we'll come back at around 3 20 22 p.m Eastern yeah in the meantime feel free to play around with the playground yourselves it's really easy to play around with um so yeah and thank you again Isabella for joining us today thanks bye pictures hello hey Dan hey Jacob thank you for being a little bit earlier appreciate that yeah sure um no problem am I live you are live yes welcome to the stage okay cool awesome um yeah just in a second but yeah excited to hear kind of about you know building great user experience and everything from you this is our last Talk of the the whole set so we've seen Zorro 101 102 103 Zara API and uh obviously it's one thing to build everything but then it's another thing to make it usable and make it for humans so I'm excited to hear about where to go from there so I'll get out of the way here I'll stop sharing my screen I'll let you take over um but yeah thanks again for doing this team sweet uh TTT um hello um I think I'm live here um I my name's Dane and I am a product engineer at Sora um so I guess uh what does that mean in the larger thing scheme of things um I'm doing this presentation today called how to build engaging or you know fun or whatever you want to call it user experiences um and you know it's aura in my time there we've crafted an amazing stack of technology to build whatever really whatever you can imagine on top of it um and I've been fortunate to build a lot of interesting projects over the last year um so yeah I just wanted to talk about those first and sort of the context that that I've been working in um as a product engineer um yeah I come from a design and development background um so I've been sort of building websites if you will for quite a long time and one thing that uh really excites me about the medium is that you know you're you're working with you're building things on a computer for the computer for this network and um yeah I think like having a heavy influence with design has kind of helped guide me towards what I think is interesting to build as a front end um so um I just want to um sort of Step through some different projects um I first off I embarked on this um sort of fun personal project I guess but um you know we've been obviously iterating over this notion of the decentralized marketplace for quite some time um when I came to Zora I worked on quite a few auction houses um the first project being this Doge auction house um and um yeah and then you know soon after that um we sort of took this concept and iterated further on it um by collaborating with um Holly Herndon and Matt dryhurst to create um this auction house or a project a fascinating project that they were they've been working on um creating a voice model of Holly's voice and opening that up for the public to build um to use to create audio tracks and so it's a really interesting project we started off auctioning The Voice model itself and then uh yeah just some of the data around that and then we and then there was an open call to the community to create tracks and eventually we um built out this experience to Showcase them and also to auction them off to raise to raise funds for the Dow to further the research um so yeah this was like super exciting because for me um because it represented this intersection of something that I've been passionate about for a long time which is um design specifically in artwork that contextualizes music I was you know probably like many other people attracted to graphic design at a really young age because I got into record collecting and I thought that I really formed this opinion that it was fascinating how the album packaging could really add this extra layer to the music that it was presenting and I feel like now that we've moved into certainly a more culture and Hyper media and um you know everything's online we have this really exciting opportunity to kind of think back on that materiality of um you know out like music packaging and translate that over to interactive experiences you know that provide context for artists release releases that labels you know labels whatever you want to call it um and so I think that like again what's fascinating about um you know especially like the music nft ecosystem is that you know more or less the the media is available from any client and so this gives a really cool opportunity to like really in that like kind of push the idea of like what is a music client um and what is what is how do we contextualize um digital audio um so yeah so I think you know like this this Holly plus project really um I think leaned into that on multiple access that were really fascinating and of course at the end of the day you know you can listen to the music um and you can listen to in all other different contexts as well you can listen to it at zora.co you can listen to it I don't know from wherever wherever it's being rendered and so that sort of segues into this notion that you know we have this amazing data registry we have these possibilities for all of these interactions that can happen on chain and um we also have this layer of being able to I guess I'll just use the word publish to uh publish media through the blockchain has an immutable um sort of content referencing system um and so yeah I think you know that when the interactions happen for instance on these auctions are taking place and there's a lot of activity around them like we saw in the Doge auction and other you know sort of like high profile auctions um you really get the sense of you know this buzzing network of you know activity and again I might be standing obvious to everybody here but um again I think that that really presents a unique way to think about how oh how do we render this how do we present this type of activity and how do you present the media that's associated with it um so you know another project that I did it Zora um and again all of this work is like collaboration with our team I it's just amazing all of the hard work that goes into every different aspect that every team member here um at Zora contributes and it's really it's really exciting to be able to kind of play with all of this stuff um at the hot the very most user-facing levels so this project was a lot of fun this was a um this was a big mint drop uh like the sort of 10 000 pfp archetype um again like we just wanted to sort of really lean into giving the artwork context um and just creating like a real white label like a white label experience for this media because again the media is decentralized you can view it anywhere that there's a render these large marketplaces like Open Sea for example uh Foundation whatever um you know they they serve a wonderful purpose as an Aggregate and being able to sort of display large amounts of you know or everything um but what's important is to kind of to like separate like the actual artwork the music and um yeah just just like again contextualize it and package it in a more um unique sort of experience and so you know like while this meant was happening it was again it was exciting to sort of see a lot of the activity um we iterated further on this auction house concept with you know web map just taking various um high profile Collections and creating auction houses around them board Apes of course um you know a little design ideas like referencing the Christie's logo because uh you know decentralized auctions are very different from auctions that happen in large sort of auction houses if you will um yeah and then we build another one for crypto puns and this sort of led to some interesting things where um you know when the war broke out in ukrained weed um were contacted and I broke off and worked on this sort of individually but we helped um build out you know using using some of the tools that we've built the source tools a fundraising um auction and to raise funds to help out people trying to defend themselves in that country so um you know this was a yet again another fascinating sort of um example of This Global network activity um coming together and interacting on a platform um that is displaying and also allowing me to interact with something that's happening at that moment um let's see um yeah so that sort of that leads me to the next phase which um has been we've we've been iterating on sort of like larger Marketplace Concepts and something that we've been developing in the last few months is a Marketplace specific for nouns and nouns derivatives um and again this is another example of um you know taking this idea of a sort of limited aggregate um of various contracts and highlighting them in a way that um feels like more attuned to not only like the brand but also the attitude of a particular you know grouping of artwork or you know Concepts Etc so what's fun about this is that again you can go to this Marketplace you can get a larger bird's eye view of um Paula the tokens we can look at um we can look at like auction history um which again is really fascinating for the primary auctions and um yeah I mean you can also if you own a few you can list them um if you like and you can buy them if they're being sold on chain um with our v3s module and this is sort of this is a work in progress definitely um we will be folding a lot more features into it but that it's also been an exciting um project for me in the sense that I've used it to iterate on a template if you will um uh that I've been cooking up um that attempts to generalize a lot of the functionality the componentry that we've been developing um and so this repo will be linked um it's you know I I I'm building it as an example more so than a de facto white labeled um template or starter kit if you will um so I just really invite and I'm going to be working on it while this hackathon is running and adding features that I think are interesting building them in ways that seem to make sense you know I project that for other developers might be handy you know really focusing on making a lot of the functionality um Governor code base a lot of the sort of like the groupings of functionality for instance if I go here and go to a collection um you know something like filtering we see this on a lot of marketplaces that um yeah how do we how do we make these filters available um for developers to kind of slot into their projects without having to you know build the whole thing themselves and so a lot of what's going on in this is this repo is um you know just exploring that that notion of you know if you're going to include a filter um sidebar or something like that into some view that you're building in your application um you know like how how does that slot in and um how you know how how many sensible defaults can be included in building out that component tree um you know like how much user configuration do we want to offer do we want to keep this in the context of a template do we want this to be a npm package that people can easily include into their projects like a plug-in for example um and so a lot of these sort of open questions are it's a work in progress and a lot of these ideas are being sort of iterated on and worked through as exemplified in this repo um so yeah I mean I'll just spin around um and kind of talk to what I've been building over the last couple of days um you know one interesting um development is this is the additions contracts that we've deployed and the super amazing app um to create them um and I've been having fun creating some for myself I've been making some music and put some tracks out and uh yeah it's just it's a it's a really exciting and really interesting way to um sort of interact with this concept and clearly it is because a lot of individuals have been and groups of people have been using it for many different purposes but um I think for for myself I was wondering how how do we how do we contextualize these additions um in the context of like a sort of general purpose Marketplace or a Marketplace that you could you could um you know build yourself um and you know one interesting thing obviously is that each every token is exactly the same and so while you know if you go to like a collection um you know all these these are all one-ones but whether they're generative or and carved each nft um if you go to a view like this they're not all the same um inversely if you go to if you're looking at an addition for example um you know they all are they are all the same and so I've been playing around with this notion of like how do I render the contract metadata um I've got this little debug button here I'm pulling down like contract metadata and a lot of the props associated with the um the minting contract um how do I represent that in a way that's interesting that sort of leans a little bit more into you know just just building portable UI around this notion that yes all of these tokens on this contract are identical um so maybe I don't want to just look at a grid of four or five hundred or five you know however many have been minted unless I kind of want to know who's been minting them and I want to see the ens names or Etc et cetera if somebody's like if the Mint is out and somebody's started listening a few on the secondary Market um like with our with our ask module um so yeah so yeah I'm kind of like knee deep in this right now um I just took this that Bond as an opportunity to kind of jam a little bit um and specifically focusing on a music player and so if I'm going to um incorporates and ideas from this um embed product that we released a little while back that has a uh music player in it and apply that and then of course add the mint button so you can go to this platform whatever it is and for whomever it is and um go ahead and then um one of the additions if anything's still open um so yeah so you know my my method of working is I make a new folder up here I'm trying to keep everything a little segregated um so that perhaps it's a little bit more it's a little bit easier to make that connection between what this is meant to do how it slots into the application and um yeah and again like trying to make things portable um I feel like many developers if you start building certain types of projects just to jump back to this contextualizing music for example if I were to start making a bunch of projects for musicians again um or labels or whatever I really just want to have a good place to start so I can really spend a lot of my energy and time focusing on how do I differentiate differentiate this experience visually how do I differentiate it with perhaps like a interesting approach to the user interface how do I add new features that might be exciting to open source like like a music player I don't know you know whatever the sky's the limit but we're building all of this on top of um of course our protocol layer and then also um the API that we constructed which is just fascinating so so um so yeah um so sorry just just checking to make sure I am not rambled on indefinitely um I started a little bit early so kind of lost track of time here clearly I enjoy talking about this this stuff um so yeah I mean maybe I'll just continue to go through the uh uh um I'll just continue to kind of like go through the repo walk through it and then a b with what you're seeing on my uh block secret XYZ um site um and sorry excuse me um yeah so where to start um I created a fairly detailed readme I think um but if it if nothing is very clear um you tell me um the the one of the sort of interesting Concepts behind this approach and this was informed by the nouns Marketplace is that you know by default if you go to like Collections and then the address for example is a route um if you don't white label certain contracts um you know this user interface that you're building really could just render any nft collection or nft out there um that exists um and so I think that like while that is a extremely uh fascinating uh I would say concept A fascinating reality um that one could build around um you know you don't want that for everything I guess unless you're really curious if you come up with some really funny design I don't know what and um you just want to see like what what do all these tokens look like um and I've tried that um I started collecting some pretty um interesting um nfts um on the free mints that uh the super cool site mint.fun exposed um under the pseudonym pseudonym crunk collector.eath and so you know there's a wallet that has just a bunch of goblins and things like that and I plan to make something kind of fun to represent that at some point um it's super easy with the um with the API that especologist demoed to do stuff like this um so yeah it's just like one more layer that's kind of solid and then you get to play around um but uh in any way um back to this um so you know this is like here's the landing page let's look at the ages this is the next JS app um which is the de facto framework for these types of um projects um if you're working in some other framework um kudos to you but all of this a lot of this work just is sort of built in the context of like JS um so yeah let's just like I'll go to my index page and have my Landing composition here and to go to compositions Landing um here's my uh layout and I am using my collection filter module filter provider um and I'm essentially hiding everything so it just functions as a lazy loading Grid or table uh all of the contract keys that I've thrown at it um so and then within that I have my little Landing nfts uh grid and I I've created another component called nft grid uh and it's right here and uh and um another pattern that I like to use is um just just taking advantage of the provider book pattern that it's so common react um it makes it makes it really like I think especially when you're building a lot of apps um and you want flexibility you want to insert a custom renderer for example um you know if you if you use like a provider for all the nft data then of course you don't have to do prop drilling not to you know you don't have to like drop a bunch of props and map them all out and type them et cetera et cetera it just makes things a little bit more flexible so I as you can see if I jump back to this uh right there's like a lot of code in this repo so and a lot of people have contributed to it uh so uh have fun looking through it um but uh yeah so if I go back here to my landing at FTS I can see that I've actually created like the custom little render and this was to render the component the nft data as I wanted to on the landing page here in this kind of go style um so yeah so if I go there you can see that um I'm using my NFP provider um data and then I'm just going ahead and yeah slapping all this stuff together and um you know adding some unique styles that are possible now another cool thing that's going on in this repo is that we've been working on a U UI Library essentially we've built it called Zord um it's cool we've built it on top of vanilla extract which is a really interesting um JavaScript to see it for CSS and JS Library um what it does is it actually extracts and compiles um static CSS like style sheet essentially so it's if you've been around a while you've probably used like sass or less or one of these CSS preprocessors vanilla extract works very much the same way yet the interface is such that it allows you to um essentially like write all of this styling as you would expect in JavaScript and um one of the really cool innovations that um that is that is um exposed in in this um in this Zoro labsword package which is now public um it is in beta there is not we have not created heaps of documentation for it yet um so really here's an example of it in use but there is not a formal reading or anything like that um but I think if you're familiar with CSS then you might be able to explore this relatively quickly and also it's important to read the little extract documents because that takes a little bit of time to uh get your bearings with especially if you want to start writing custom class it's like that um but what's super cool about this is that um all of your sort of very basic CSS um uh I guess rules are typed in the components themselves and so if you look here stack this is essentially a div that is a flex column um and I've I say a gap margin top adding X padding Etc this is probably like this sort of model and pattern might be familiar if you've used utility CSS libraries like Tailwind or bootstrap or you know whatever um it just like the speed that you can compose with this um is pretty amazing once you get the hang of it just feels so intuitive to just like start building out components um and then you can start to think about ways to sort of add your own spice on the top if you will and you know we we are we have been conceptualizing the sort of strategizing around what a theming interface would look like and um I think that that is something that we're excited to kind of know what users would like um you know to what extent do you want to be able to theme versus like if you're comfortable writing CSS you can just go in here to you can just create like Global CSS file make some CSS variables super powerful it's CSS at the end of the day and you can create classes you can slap those classes into your um Zord vanilla extract elements um you can make you can use this Global style approach which will make many people cringe if they see this little flag at the end of the style but um all I will say to that is that again if you're like me and I enjoy sort of designing encoding together um you know it's kind of like by what everyone's necessary if you tell there's some Alternatives um and so yeah I don't know you know like here I'm just playing around with colors and organ you know or the way things are organized I thought I would make a slide out menu instead of a popover menu like this but the repo is set up in such a way that you can just uh let me go to the menu you can um I think I yeah you can pass a prompt and you can say pop over or pop out um so you know again who knows maybe maybe I want this to be a pop-up on mobile on a slide out on desktop or something um uh yeah just you know just constantly trying to think about how to uh when you're building something use configuration um as a mode of um sort of exploring different layouts and composition design ideas Etc um so yeah I um whoops it's not running locally um these are some nfts that I created um for the last eight Global hackathon I've been minting my kids are I hope that's okay with him um but I think it's pretty cool so um yeah I I um I guess I'm kind of coming up on my formal time um I am wondering maybe if it is appropriate to open this up for questions um having no audience feedback I feel like I'm talking at a wall um but I know I'm not and I see Jacob um dialing in here okay you're here was I even was I even being recorded that the people are just like there's like 200 people watching it don't worry well we'll see if anybody has any questions um I did see your your uh exclamation point important sins don't worry I'm paying attention so yeah we'll just open it up see if anybody has any questions um over on the live chat um but uh since I know we just had a bunch of calls it's false or a bunch of talks back to back it's possible that uh people are more in the consume than necessarily the engage mode their their eyes are just kind of you know it's just so much information I mean I I will never be able to um you know Isabella is a Powerhouse and I know what she shared with everybody probably got people's brains just reeling so um yeah but you know if anybody's around if a if I can't answer any questions I'm happy to um awesome well I'm not seeing too much come through on on our end so it might be that people are sort of uh you know happy with what was presented but I think this was awesome I mean it was fun to kind of explore like um what was possible I think somebody asks you know can we use these in our hack and I think like the answer to that is like probably yes because everything you use to sort of like just out there anyway basically yep it is now so yes absolutely um all right great well maybe we'll maybe we'll leave it there um well thank you so much Dana I really appreciate you uh you're rolling through that with us and um yeah really awesome to kind of see the the journey as well and and kind of what's possible okay cool all right well thank you thanks for having me um thank you you too cheers all right and thank you everybody for for tuning in brings us to the end uh of our metabolism kickoff um which is of course just day one um so keep them keep in mind um you could start hacking if you're not already hacking uh so please uh you know get building um and you have a whole weekend to do it um theatrical projects will be due on Sunday afternoon so it's 3 P.M eastern time that's the same time zone is New York um so yeah we're really looking forward to seeing what you build um and yeah with that being said you know happy hacking I'll see you on the Discord if you're not already on the Discord There's the link to join um and then once you off through your hacker dashboard you'll be able to see all the meta metabolism channels um and yeah happy hacking if you have any questions um or you want to review this of course this is all uh recorded you can head to our YouTube channel uh we're also going to cut up all these videos by the end of today uh this will be available for your easy perusing um but yeah otherwise I guess we're officially kicking off metabolism um and we're really excited to have you here and happy hacking 