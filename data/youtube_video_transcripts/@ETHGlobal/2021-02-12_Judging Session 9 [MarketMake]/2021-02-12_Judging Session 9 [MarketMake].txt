all right we're live everybody okay so welcome to group nine judging uh we are the last group uh of market make uh but last but not least um so yeah so i mean market make it's been an amazing event uh it's our first event of 2021. um we're really excited to be running this alongside with the audi team uh and of course we have jordan for mavi here as well uh helping out on the judging side so we're really excited about about that um quick little summary about the event uh we had 490 hackers join us um those hackers are of course across the world uh 58 countries and 17 time zones which is basically every uh habitable time zone on earth uh which is always cool to see um and always fun to schedule for so yeah really great event uh really excited about the project quality um we had 120 projects around that number come out of this uh today we're going to see about a dozen of them uh come through as part of this demo presentation here and just kind of give you a sense of sort of what to expect over the next maybe a couple hours or so um so the judging format uh everybody has prepared a four minute video demo um up to four minutes uh so let's spend time for the video demo um you'll play that video um of course everybody here has been through the green room already and kind of knows the deal after that we'll pause for four minutes for questions um so the judges can ask one-on-one questions to the teams uh we'll have a nice question period there and then we'll take a two to three minute break every four teams give the opportunity to kind of stretch your legs um judges can chat a little bit about how projects are going if they have the time um and halfway through we're gonna take a ten minute break um again to sort of stretch legs uh let the judges get on uh uh get together and kind of hash out how things are going so far um and uh we'll carry on from there so wanted to briefly touch on some of the judging criteria that our lovely judges will be going over um so we have five different uh kind of ways that we we judge projects so technicality uh so how technical a project is how difficult it is uh to actually build uh originality so this is kind of basing on the idea of the project how original is it has it been done before is it you know really useful is it interesting practicality that's kind of definitely more the useful piece you know is it going to be something that's going to be used in the ecosystem uh is this something that's that's really reasonable to have as part of the uh as part of the ethereum ecosystem and d5 in general um fourth category is ui ux uh dx so sort of what does it look like how does it perform kind of how are those flows feel um is this going to be a product that kind of anyone can use or do you need to be really specific um and then kind of a catch-all category the wow factor so it's hard to judge everything based on only four categories so if you're blown away the last category is the wow factor which helps sort of capture things that otherwise cannot be captured in those other four categories the intangibles if you will so a couple important notes i mean this has been the case since day one of global so you know this isn't a competition right so people are here to learn um we're gonna have a wide variety of projects from people who are experts and people who picked up crypto or d5 or blockchain for the first time ever um so we're not all playing on the same field and that's important everybody's learning and uh we're all looking to to grow um as both an ecosystem and personally as we build and learn new things um these projects also aren't necessarily built uh to be businesses uh they're built to be interesting ideas and interesting ideas executed on so you know it's important to realize that they might not come with a business plan and that's okay also it's blockchain so it's definitely okay um and also hackers are here to get feedback right so this is meant to be sort of a step in the milestone milestone of taking that project uh to complete fruition um this is a great way to get feedback from industry experts and also show off what you've built in such a short amount of time um last but not least uh you know big thank you for the three people on this call that are spending their uh tuesday morning with us or tuesday afternoon or evening with us um so we have judging with us we have jordan from ave we have david from many things i put on this list just d507 and then we have dimitri from bollinger investments okay awesome so with that being said that's the end of my presentation i'll jump into the demos and we're going to start with team ave wasabi so if you can raise your hand which i think you already are we will promote you to the stage and you can click the computer share audio button and share your video guys are we supposed to see anything right now because i'm not saying i think jackie's still trying to join okay i was just wondering yeah me too there we go all right um okay cool looks like we've got that all set up and we can see everything um and also i'll turn it over to you jackie hey i'm jackie and this is for ave wasabi so what is it in a few words it's markets to buy and sell risk what does this mean as an example say we have someone who wants to open a highly leveraged position at 4x 5x 6x leverage it's a good idea to hedge your position with the protocol we can do this in the worst case if there's a huge loss protocol will be able to cover some of it in the best case there's a profit in both buyers and sellers sharing it well concretely in his current iteration we just used a protocol like we use on liquidity markets in ave air compound with borrowers being the sellers and lenders being the buyers now here's a demo of what i've gotten done in this scenario we have a deposit that represents some users who just want to get the yields next we have a deposit that represents users that are leveraged going long on e they take out enough usdca to enable lost coverage in my terminal here i'm artificially collapsing eth price prompting the users to close their position at a loss now when they repay their debt to unlock their collateral the protocol allows them to pay less than they need to to unlock and withdraw so what's going on all deposits in the protocol are actually deposited into ave and the borrowers come from ave too lenders get ave's yields with the lost coverage and profit sharing subtracted and added while borrowers get obvious interest and the protocols lost coverage and profit sharing on top once the position is closed we either reduce the bar's debt or increase it based on whether there was a profit or a loss from the prices at the time the position was opened the rates for this are determined algorithmically based on supply and demand for example at its core the cover rate is simply the solution of the constant product equation the properties of this curve incentivizes opening positions or rates quickly decay as demand increases to maintain protocol solvency you can learn more about this in the documentation so what's next more analysis on the protocol rates lots of safety improvements to able to handle real money moving away from borrowing and lending terminology for general risk markets like for more complex risk packages like cooling leverage that's my time thanks very cool so four minutes for questions from the judges and you know jackie if you're able and you want to share your video that's always better oh hey uh sorry uh my webcam is having issues uh i can't share my video no reason uh it wants to kick off i guess i uh i could um great job uh i think uh leverage is something that we know has uh product market fit in crypto so so it's it's it's interesting that uh you're uh you're kind of building with that and i think uh uh this will probably find some some interest with uh uh our uh you know your typical uh uh default user um i'm i'm curious what uh what's the um the difference here between um just using less leverage uh instead of um just selling off a a portion of that leverage uh sir you're asking uh what's the difference between this and using less leverage as in just uh not uh you know making such a risky position yeah yeah so so it's like you're uh you're hedging a leveraged position and how um how is this different from just taking less leverage uh in the position in the first place um so with higher leverage you have a greater profit but um if you take less leverage you obviously get less profit so if you take higher leverage you get more profit which you can share with the entire protocol got it so you are keeping the same upside but you're capping your downside or are you also capping your upside here uh so if you make a big profit you do share some of that so you are uh taking less profit but the idea is the the risk is mitigated um but the profit is it's not the same but it's higher than you would have if you had uh less leverage but with the protocol you you still have the same sort of like upside but with less risk got it that makes sense yeah yeah yeah awesome thank you awesome if i if i can go i was just wondering like how how do you uh plan to incentivize the uh the other takers the wanda like basically helping you to edge uh the risk you yeah so you if the people that take out uh positions to leverage uh they share some of their profits so that goes on top of the yields that you have so if you if you're a supplier and you expect uh like eth to go long then you're expecting people to leverage and then you expect them to profit from that so there's also like a short pool and if you expect the profit to go expect the east price to go down they would uh supply in a short pool because that's where you expect the where the yields where mo use would come from people uh shorting you yeah okay so those lenders get uh get that share of the profit on top of the existing ave yield you said right yeah but you have to make sure that if uh you're you're landing on the long pool like you're you're fairly confident that it's gonna go long if you're winning on the short pool you're uh more certain that your youth price is gonna go down so you have to be careful about where you put your uh liquidity capital gotcha awesome yeah that's that's amazing thank you cool so oh yeah just one more question um uh who did you build this with oh uh solar projects my first time uh i wasn't very confident going into this so i thought it'd be better if i just uh you know didn't uh try to uh make it too complicated or like anything like that yeah no you have to start somewhere yeah awesome awesome good job thank you awesome thanks jackie very cool so hacker first time love to see it um okay cool up next we have team uh d log so he's promoting them now welcome team thanks for sharing awesome i'll turn it over to team d lock oh it doesn't look like the sound is coming through so you'll need to reshare with the share computer sound button toggled hello we are team death lock we are a premier dap development team focusing on simplicity video isn't showing up by brick that adds time released ownership anywhere in the d5 transaction stack in death lock a wheel owner can deposit raw ethereum or a token ownership into wheel structure we're not seeing the video owners can continue to deposit the audio is coming through but it looks like you shared the wrong window on that one we are a premier dap development team focusing on simplicity death lock is a simple d5 brick that adds time released ownership anywhere in the d5 transaction stack in death lock a wheel owner can deposit raw ethereum or a token ownership into a wheel structure owners can continue to deposit or withdraw from the will at any time after a deadline a beneficiary address can also withdraw so here we have the scaffold sketch of our front end on the left is our deployment address standing by with the wheel creation page on the right we have the second address watching our will management page which runs on top of the graph we begin by creating a will by copying our intended beneficiary address then we choose to deposit one ethereum into our new will we could also deposit any number of tokens from the list of our usual suspects we've also deployed stooge tokens for use in local testing we'll choose to deposit zero larry coin into this will we can select our wheels deadline from this handy pop-up calendar or for handy testing purposes we've created this now plus one minute button when we press the create button the will is initialized and caught by our the graph management screen listed under all wheels we will switch the owner over to the manage screen and the other address over to the create tab now we will create a second will with the address rules reversed we'll set the deadline out a bit further and deposit some lyric some curly coin this time along with another f with an all wheels refresh is issued to tidy up but with some poking everything does display correctly next we'll test the owner update function which should always work here we shorten the deadline to something a bit more lively our first wheels minute is up so now we can claim funds from it we observe our beneficiary funds increased by the one f and the claimed will balance drops to zero wheels are immutable so the structure remains inactive or active forever for further management we still have a front end update issue on the left management screen but a bit of poking resolves it our owner withdrawal function does in fact work but our graph refresh needs some work our scaffold react front end is still notional for example here we have the proxy interface showing the textbook design patterns ownable possible and something i call accountable meaning it tracks loose ether sent to its address as tips and makes it available as salary to the owner future work obviously includes finishing the front end unit testing and deployment to up the chain towards the main net team lodge would like to thank you for your time and consideration we look forward to seeing you all around the developer community amazing feel free to share your videos if you're comfortable with it and turn over the judges for questions very cool guys looks like uh this was built with uh scaffolding yes how did you guys find um building with that did that kind of simplify the development process a lot yes and no the learning curve was kind of steep it was a new tool for a lot of us okay but once we got it there was a lot of legos in the box to play with hi nice nice yeah so uh if i can ask the question or david you go ahead yeah so thank you i was i was wondering so you basically want to force push people to look like so they they don't basically uh like you put a timeline on on the locking of assets and i was wondering like did you think about for example depositing some assets uh in ave so they can earn interest while they they are locked uh in the in the desk lock so let's say that you you put a lock on ten years might be interesting even like if on landing protocol the ith rate is not that great on ten years it's still like a very interesting or even like you put stable coins for example like it could be interesting to consider yes uh we were considering depositing on assets on off we just didn't have time to implement that okay yeah um yeah in general i i really like the direction of the project here i think you know going cross-chain and and having bridges is important so it's a great stuff with the direction i'm curious in general what was the hardest part about building this well we are a premier team we were just here to survive the hackathon and see what it's all about so we will come back with a more complex project next time cool and and and and with this one it sounded like it was uh pretty straightforward for you guys or or was there anything that that you thought was relatively complex solidity was straightforward uh the front end we had a ringer whose career wouldn't let him participate so we had to wing it on that we were hoping for more yeah well i i i i think it's a good first step for sure just one more question about the the contract so each will has have a single owner that has to kind of do that keep alive yes each bill tracks one owner one beneficiary and one token okay and that and can the will owner withdraw early yes and okay they can withdraw at any time gotcha gotcha um and they are the one that has to send that keep alive message yes gotcha might be cool i don't know if this is something integrated it might be cool if that could be separate accounts because you might want like a cold storage account to kind of that has access to the funds in a separate one where you can like send these keep alive messages there are several applications we thought of and that would be one of them just mixing and matching where the address are coming from and going to for example uh key recovery if you are your own beneficiary yeah yeah that makes a lot of sense cool well very cool thanks guys yeah great job you kindly awesome thank you team d our dslog sorry um all right next up we've got team simple fi and let me just find raphael there we go promoting you know okay raphael when you're ready feel free to share your screen tick that share computer audio button and we'll be off hi hi i'm rafael and this is simplify my market make project all right so the problem that simplify solves is that it's really hard to keep track of your d5 investments right uh we've all been there we've all seen like this crazy opportunity that's offering 100 or 200 mpi we ape into it we put in our money and then we look back a week or two weeks later and we've actually lost money and we wonder what's what's going on um and that's when you can actually calculate it sometimes it's just really hard to figure out what the return has been and if you're like me sometimes you even forget where you've put your money so the solution is simplify it's just a one-click tool you connect your account and it will show you exactly what you own so the underlying assets that you own how much money you've made and it will also allow you to combine your returns from different fields and different strategies okay so welcome to the simplify homepage this is where you can connect your wallet via metamask or literally just check any ethereum address so we'll do that we'll just look for someone who has a die that could be a good test subject so let's look at the holders here and just choose someone randomly and plug that address into simplify simplify is going to look at their investments rewind their positions and then show us the combined roi of these three investments that they've made so two earning fields with so liquidity provider one farming field and in total they have five tokens that they're holding of which 99 percent are invested so we can check here what those tokens are see that there's a bunch of dyes but also some usdt some usdc and we can see that a lot of these tokens are actually fully staked or provided as liquidity so we can see where they've been provided as liquidity the first one is obviously in the in the of a die deposit pool so click on that we can see the roi and we can also see that it's been that there's part of it that's in the curve of a pool which is great and here we can not only see the roi from this field but also we can see if there are any yield farming fields that are related to this one like for example the curve rewards gauge then we can add the farming roa on that and see the total roi from those two related fields so we can see that there's an roi of a hundred dollars um from just the core earnings and that the farming on top is 619 dollars and so if you combine both that makes a much bigger roi and finally we can just see details about the farming field itself so that's the the curve of a reward gauge um so there's 619 of unclaimed curve for the time being for a total roi of 2.48 the way that simplify works is essentially a lot of data fetching so some of it directly from the blockchain some of it from subgraphs and coingeco and etherscan what simplify will do first scan for your surface investments and it will then rewind that position to find what the underlying fields are and then finally it will boil it down to the underlying assets which are going to be dye usdt and usdc and then using historical price information it will then calculate your roi based on your past transactions thank you very much for listening wow that's super cool that's useful thanks i think this this is like one area that there's just like countless opportunities for growth because it's like one of the best things about like blockchain and d5 is that you can have a bank and you can have other people build a ui for your bank you don't have to use your bank's ui that's super cool um one question i had was um i mean i know that like uh this is a lot of data you guys are indexing and it was cool the way you described the way you've kind of rewound that um i was curious are you running any of your own like how much of this happens on the client side versus the server side and are you guys running any server-side infrastructure or is it just um you know like the graph as you mentioned uh yeah so there's um there's a very simple back end that basically holds uh the the contract addresses and things like that so it's not to color the or clutter the front end so yeah but the the rest is mainly on the client side mainly on the client side so some of it is pinging coin gecko some of this being eta scan particularly for the token transactions uh and then things like the graph for use depending on the protocol um so there's no need to use it for curve for example because you can get most of the information um from the controller gauge contract that they have for example but with rv the the big challenge was that it's continuously updating the balances so if you're staking something it would show on the transaction history that you're actually taking out more than what you had so the graph is used to take the to get the uh historical balance got sure very cool yeah this is great um i i probably don't know where i put a lot of my money so something like this would be very useful for for me as a user um i'm i'm i'm curious um how do you i guess how do you support additional um protocols uh whether in the ui or or uh or in the back end what does it take to uh to include uh another protocol here so adding another protocol it um it it will depend on the protocol so you have to figure out every single time what the um what the methods are to actually go and query the balance so balance is normally it's quite typical it's just balance of uh but then you know it's earning and then sometimes you have to add the account address as well the asset address when there are multiple assets like in the in the curve pool so it's just um yeah it's it's just about specifying those and and switching them routing them inside on the on the front end got it and then you would do that i i guess usually to understand how that other protocol does that uh yeah exactly and some of them are easier than others like ave is great because the documentation is awesome the subgraph you know is like really clean it helps a lot you i think it's a it would be very useful and i was wondering actually like have you sold or do you think it would be easy to get like a csv export of your uh all the assets so you can basically get like for even like tax purposes so you could like have a direct uh like excel sheets with all the things that you are putting in in the ui uh that would be actually very useful too yeah i think i think that would work i mean i right now i don't think you should trust exactly what you're seeing but yeah no definitely um it could work i didn't use this i can't click my taxes yet not yet someday yeah awesome congrats thanks yeah thanks raphael awesome thanks rafael good to see you again um and also we'll move on to the next team so up next we've got team polaris so i'm going to invite them up right now and i'm gonna kick you back down rafael thanks again thanks okay cool uh team porris whenever you're ready to go this is the polaris group we build blockchain games our team consists of four members and i am je we are all students from chiang mai university so our project is a decentralized transparent and fair gaming platform utilizing the layer 2 solutions on matic to lower the extreme high gas feeds on ethereum network to provide a quick and also affordable and fun gaming experience to our users it also offers borrowing options using always credit delegations to allow users borrow tokens from friends to play our games and return the tokens back to them after winning so this is a summary of our project we implemented a simple rock paper scissor games it is uh one player versus the smart contract right now and is deployed on thematic network using the mavic layer 2 solutions so it has extremely low gas fees when players play our game it also has a p2p credit delegation feature using obvious credit delegation it allows users to play games without owning any tokens up front and they can return tokens back to their friends after winning our long-term goals are using zero knowledge proofs and to explore the possibilities of p2p interact interactive games on the blockchain and also to enhance the privacy of our users data and we also want to issue our dow tonkin for governance next we'll do a demonstration of a project all right so here's our landing page you can see our logo right here in one sentence description of what we do if you head over to the app page this is where the user interact with the smart contract i'm playing the rock papers through the game so you first need to configure your wallet automatic and you connect mana mask to it and you can simply make a choice between rock paper and scissor and each round of the game is tellmatic so now i hand it over to brian to talk about the ave part so here we have the section for lenders where you can deposit your collateral and then you can also withdraw it and then check the amount that you have deposited and here's a section to delegate and when your delegators then you can use this function where you have the delegate t's address and then the amount that you want to delegate to him and then you hit confirm you can also check how much you have delegated for uh with that delegate and as a delegate team or the borrower you can just borrow the uh borrow the money and enter the amount and then the address of your delegator and as long as it's within this allowance then it should uh this confirms your work so all of that was uh the alley part and after user borrowed the money user can go play our lottery game which is implement which is deployed on magic network well to solve the extreme high gas c problem on ethereum network here's the flow of our project you have ethereum and we implemented the front end they allow you to do borrowing and landing on albe and then you can use the money data bar or the ones that you have already to your matic and you can play the gamma matic and then afterwards you can transfer it back to ethereum and hopefully win some money so this is our project we weren't able to implement all the features that we wanted due to time constraint but uh we really enjoyed the time building this product and hopefully you like it too and thank you for listening awesome congrats thanks guys one quick feel free to turn on your cameras sorry to cut you off there typing and uh yeah turn over for questions that's it one quick question i had was i was just trying to understand the difference between or so it's a lottery but there's also the rock paper scissors so is it if you win the rock paper scissors then you earn the lottery or how does that work yeah so our ultimate goal was to build a gaming slash betting platform so we don't we want to implement interactive games but at the same time we also want to implement a um a lottery kind of like a lottery platform where users are allowed to make predictions on like um esports games nba games okay cool so you see this like scaling up to being like all sorts of different games blockchain sports all like all different kinds of things in the same place yeah that's like what we want to build in the future like we want to add more features onto our platform awesome very cool yeah so i i picked up the the betting part and i was wondering like have you had the the idea or if this is something that you you thought about to do like no loss betting so this you use the basically the interest generated so you bet only the interest of your of a deposit for example uh like the using the credit delegation is very good but uh it's quite difficult to always find someone to delegate your credit but if you could uh use only the interest generated from ave to make those bets it might be easier or even like just using delegating that's that interest for example that could be interesting yeah yeah that's a good suggestion and we also thought about uh implementing like a no loss lottery like pool together i don't know if you guys have heard of it so where users just like put money into the lottery and they get a ticket to to be drawn in the next lottery to win the total uh money that they that we win from like the interest in the always landing pool that's what we thought about doing too yeah that would be the case if we could kind of issue our own token and user can deposit their ether and then we can issue our token and then we can put the ether into off a to our interest and then that way is they could just uh they could be just on the lost lottery and it's pretty good everyone wins awesome and how was it to build with uh with matic as well like the uh you use the uh matic usdc the m.a usdc built by the guys of avigochi or did you build like your own bridge to bring the assets there uh can you repeat that question again yeah so recently the the team of aviguchi uh which is a previous actually academic project uh they built uh a bridge uh ave asset so a token usdc automatic and i was wondering like if you use their solution or if you build yourself uh no we didn't use uh avikachi in our in our project this time okay oh no i was gonna say this is great and and i think uh it makes a lot of sense to to to build on l2 with games uh you know just gas fees uh the ux is very very pleasant on on l1 um uh if you had more and what other games would you like to implement here i think blackjack is like a very popular game that everyone would know how to play so that would be our other choice nice opinion i think we're out of time but thank you team polaris really appreciate you demoing and and great job thanks guys so great so uh since that's our first four teams we're gonna take a quick two to three minute break uh so judges if you want to sort of uh stand up get the blood flowing reorientate yourself feel free to do so and uh we will be right back in a couple minutes yeah cheers all right let me know if your back judges um and then in the meantime team digiulab uh if you're in the chat can you please raise your hand just like i can promote you like david you've like completely changed trans i've traveled to a different place across the apartment crazy uh okay the last call for digiulab uh if you don't raise your hand in a sec we can just move on to the next two it's just the button in the middle of your screen it says raise hand okay cool we're gonna move on to team alchemy if you're here please raise your hand here we go we gotta take her okay sweet promoting you now team help me okay cool uh when you're ready feel free to share your screen with your computer audio sign ticked and we'll let you take it from here we are team alchemy and here are the members of our team inspired by vitalik's post on the need for social recovery wallets we created a layer 2 wallet that enables users to recover their seed phrase anytime anywhere in a secure decentralized and anonymous way we need a better way to safeguard seed phrases what differentiates us from other social recovery wallets is that our guardians are chosen randomly instead of by the user financial awards have also been integrated to incentivize guardians to assist with seed phrase recovery for otherwise complete strangers here's how it will look for the user welcome to alchemy the guardian of wallets our user will be prompted to log in by entering their password and importing their wallet once imported they will be brought to the home page where three options will appear protect a wallet recover a wallet and view stored wallets to protect a wallet you will be asked to choose a wallet choose your level of encryption and entering your master key once confirmed your seat phrases will then be encrypted and sent to your guardians encryption complete to recover your seed phrase you will be asked to choose your payment method entering your master key and requesting recovery your guardians will then be alerted they will then send your seat phrases to you now that you know more about guardians of oled let's dive into the technical part a user will be able to ask to store his password securely to the smart contract the smart contract would retrieve all the guardians and choose randomly people who are gonna actually store your password it's gonna return a list of the guardians plus their public key you're gonna be able to split your seat phrase into multiple pieces encrypt each of them with a master key plus a public key from each of the gardener once it's done you're gonna send each of the guardian a piece of your password securely off chain you're gonna then be able to store your contactless or the guardian list into ipfs the same goes for the guardian who has your seed phrase but has no idea you who you are because he is only storing an encrypted password a piece of password plus an alias that only you know he will be earning interest for holding your password and of course every time you request your password he gonna get more reward which can encourage him to keep your password safe quick end-to-end test for our smart contract you can always look at the code in the github to know more about uh the application and also it's it's we want to mention that we're gonna make sure that the guardians have the password so we're gonna check in um every month to see if they're still keeping your password so they can still keep their reward so what happened here is an invitation has been sent to the guardian uh the guardian will be uh able to accept the invitation and we're gonna select random guardians in this case we're only taking one one guardian into consideration the seed phrase will be uh then encrypted with your master key and then encrypt it with the public key then send to the guardian uh who can then store it securely at the same time you can store the guardian list on ipfs in order to request your seed phrase you just need to call the smart contract and again contact all the list of guardians that hold your password by providing them with the master key of course always encrypted with their public key so it could be secure even if it's off chain also feel free to share your videos and we'll turn over to the judges for questions sure well well i think this is awesome i mean beautiful wireframes uh it it just looks like you put a lot of time into this um so so just a great job um do you guys build this in three weeks yeah it's gonna be we we're actually still working on it uh we even made some changes to the design that i wanted actually to talk about um for the guardians actually when they're storing your password they're going to have like a random reference that only you have so even if some somehow this guardian want to go and check out oh i have a piece of password let me find someone else so you're going to find another person we had a random reference only you know an encrypted password that is for him useless and we keep we keep adding layers of security uh to make it fully decentralized and more secure that's so cool three weeks like no it looks like that sleep sure and then you're splitting are you are you using like shamir secret sharing to uh to split the keys exactly yeah so very cool um sorry so one question i had that you kind of answered in your videos was um you mentioned that like uh we're going to kind of keep pinging the guardians to make sure they still have the the past phrase is that like kind of a point of centralization at this point and and if so something you plan to expand uh actually well the user gonna pay for this service right we're providing him with a service so um in order to secure his password i'm sure a lot of people is like you paying for banking fees uh so you're gonna pay either monthly or or or pay a year and you can have like a small extra piece every time you recover your password to to encourage more guardians to keep storing your password uh the idea is also to go from ipfs to pipeline so keep to keep sure that the password is actually there so we don't want to disappear after a moment so yeah those fees are are being paid by uh by the user and uh interests are actually uh there is extra reward that we're going to put on apple every time someone recover a password and it's confirmed the contract confirmed he's going to get like the best robot which is extra because we are interested so i think it's it's really it's really uh some i know some projects like let me let me get this straight so like you i have the app and i get like randomly chosen uh to keep the password like part of the the password of someone else and since i was chosen i start getting like a piece of interest uh from like your treasury or something like that that is like working in ave and then when someone uh want uh basically when i'm someone wants to recover then i also receive a payment uh because i okay yeah yeah this is uh just more people about it it's something we just had actually a guardian need to register so we're going to have a list of guardian if you want to be a guardian you're going to register and you're going to be paying extra fees like registration piece it's going to be very small we don't want everybody we want we don't want to it's you need to have the app so we need to know you because we're storing the list of guardians uh in in addition to do not say the request to everybody so you registered to become a guardian and then we're going to contact you and as well like uh as you said at the end you're going to get like your wife okay awesome yeah i think this is what i understood as well this is a very cool project and i think it's uh even more interesting because it's like something that has tried to be solved many ways and i think that's a very original solution so uh yeah excited to see it scale awesome thank you well we already we already have natick coming in to talk to us just randomly i think because we have the project and they like it and they probably give us like a small help in the development so um we are working it we i already have like a road map so it's gonna be it's going to be something that hopefully we can see soon awesome congrats nice work guys thank you awesome work thank you so much team up me of course awesome uh we found dgu labs so we're gonna promote them right now and uh they're gonna be up next um okay cool so i have instructions to share this video from my end so i'll be doing that right now hello everyone we are dgu lab team we are part of the dgu dot ai project one of the top three crowd investing projects our goal is to create a cross-chain swap between ethereum and binance smart chain blockchains bsc is a functional clone of ethereum but much faster and has a lower transaction cost we create our own bridge between these blockchains we use chain link to do that in binance smart chain the only liquidity entry point is binance it issues its own tokens packed to traditional tokens such as ethereum or usdt therefore if you have usdt erc20 you need to give them to binance to get the packed tokens for bsc so currently by non-spec tokens are used in bsc and secured by binance's honest word as binance bridge is centralized black box we see this as a potential problem that we can solve by providing people with decentralized and clear cross-chain bridge to swap their assets so we create a decentralized exchange that uses liquidity pools in different blockchains and transmits cross-chain data using chain-link based bridging technology it should be noted that this solution will work with any blockchain that supports evm and chain link our prototype works similarly to the uniswap protocol let's look at a prototype cross chain exchanger we have improved the user experience by using our application to simultaneously use the connection of two wallets set up on different networks let's do an exchange between ethereum brinky boy and finance smart chain test nets first let's run the approve please remember the balance of the pools after the exchange they will change the operation of our pools is provided by two smart contract pools filled with liquidity aav rink bay network test tokens and unibinance smart chain testnet when the transaction is confirmed you can click swap we need to accept the offer and confirm the transaction it puts the aave token into the pool and initiates a client contract call in bsc blockchain using chain link now we need to wait until the transaction is confirmed the connection or communication between the blockchains is provided by the two chain link nodes we deployed when the transaction is confirmed the node that is connected to the rinkebay will run the job this job will initiate the sending of uni tokens from the binance smart chain pool we need to use chain link token to call oracle's chain link services you can see this in the transaction here let's refresh the bsc testnet explorer page to see the incoming transaction as you can see here we've received the requested amounts now we can check the received amount and compare it with the amount we've sent in the spoke interface before we clicked swap also you can see the change in the cross chain pool balances we've also developed an ad liquidity operation it uses similar principles even though it's a bit more complicated thank you for watching our presentation feel free to ask your questions very cool all right bogdan i'll turn over to you feel free to share your video there you go and uh over to the judges very cool um yeah like cross chain liquidity it's becoming clear we're going to need lots and lots of bridges and ways to move between chains as we're moving away from kind of this single chain world one question i had was um yeah i guess i'm not as familiar with how uh chain link works so is this basically using chain link to read the balances kind of using chain link as the the bridge to relay like oh this has been deposited in one place and sending that message to the pool on the other chain is that basically how it works uh we use chain link both both ways we okay to read the data is the most simple way but uh also we use chain link we wrote we have wrote chain link script challenged external adapter script and it actually calls a course a contract method on another chain so we have the whole mechanics working all right very cool that's kind of unique and we have you know we have uh for now we have the smart contract it's the same it is and uh now our dex pool smart contract is uh mirrored in both chains you know and it have two methods i mean even the method is this is the same if you if you want i can show you i think that's that's that's very cool thanks and it's working this prototype it's working just for one yeah for one you know for one token in the one chain and one yeah and on rink but still that's awesome yeah that that's quite quite nice uh uh congrats congrats on the project i was wondering like do you do you see this as like first step to have to bridge uh ethereum and and uh bsc and do you like do you have plans to to build like other chain uh using the same uh i saw in the presentation that it was compatible but is this part of your plan or is it just like a statement no sure we want to uh actually we have plans to [Music] to design real pool real liquidity pool with mixed liquidity from different chains and of course we want to we want to we want other chains to participate in it also there is no limitations any ethereum evm compatible blockchain we can configure it and it will work nice nice nice awesome yeah i i echo what david said around um you know just having more um cross chain bridges i think this is awesome um i'm just curious like what do you think was technically the most um complex part of this implementation actually the most complex the most complex thing is in front of us uh uh is to make this decision decentralized because in in this prototype what we showed you our our uh this external adapter which runs on the on the uh chain link node it's actually becomes a single point of failure you know so there is no uh in this implementation there is no no there's no decentralization but what we are thinking now is uh to make uh to make uh to make uh such adapter that that it can become really decentralized that we can let anybody to run it and it it it should be trustless and we have some we have uh source how to do it but we didn't implement it yet yeah uh that makes sense that definitely so this is the math the most uh complicated because across because you know uh in my level of understanding of chain link now that um what do they do what do they sell they at the moment they sell price fees but price price fits is a little bit different you know you can they they for example you getting prices from 20 nodes and you can you can see that maybe one node is malicious and you can throw it out it's it's okay but uh our goal is to make changes on another side so you know we have to do some like protocol love like how adapters should negotiate between each other's or it's one way or a second way is maybe to embed it into chain link code you know so there is a lot of different ways to implement it yeah yeah for sure that the that definitely sounds um quite complex but but i think what you've done here was awesome and uh i'm looking forward to to seeing where you take this project and actually you can and you can test our web application and there is uh there is two facets in the right upper corner you can you can uh press facets and you you just need to to add token into the wallet awesome awesome all right we gotta wrap up here uh on this one but thank you team did you lab uh awesome project and uh excited to save the future for that one yeah thank you very much yes okay cool up next we've got uh team hush hush uh so i've already promoted you guys so feel free to share your audio or your video with the audio button checked um and i'll turn over to you start representing households improving anonymity on savings accounts so the problem is that we want an on-chain savings account but just having atoms in a wallet is not private and leaks a lot of information we could put a tokens into a tornado cache a pool that would be great for privacy but it's very inconvenient if i want to continuously use for me so say i want to deposit thousand dollars and then withdraw half of it at some point i cannot do that our idea is fire charge which is a sort of tornado case with a twist we have fixed deposit amounts but variables withdrawals so we're doing this exactly how at the same manner as it's on allocations by using ck snarks and seeks now it's really just a proof that proof that something is true without showing you why it is true so to deposit we don't have to provide a proof the user simply provides some secret knowledge which is k and then the contract computes a leaf and inserts into a tree and then it pulls funds from the user's balance so first part of the withdrawal is what do we actually need to prove um so to be able to make this continuous deposit we have to provide a change leaf that is inserted into tree and then we have to prove that we know all of the secrets for our inputs and that we are not creating any funds out of air and to ensure that we cannot spend the same funds multiple time we provide a nullifier beyond just what we have to prove we also need to think about how we can publish the proof so if the user publishes the proof himself it destroys his privacy but we have to keep in mind that regardless of who publishes the proof the proof should be is valid so we can have a layer do it instead and then as we're having a fee inside the withdrawal um we can have this fee go to the message center meaning that if the fee is larger than the transaction fee it is an ebi easy arbitrage and and then we also need to recall that because we're using snark the publisher cannot change any of these inputs without it validating the proof so to narrow cache has better privacy as it is more limited on what users can do and then we also have an issue if we cannot run in the browser currently because of some issues with nike js future work would like to have like publish encrypted versions of leak relief contents just to ensure that people not throwing away at funds set up a network of full layers and then have input transactions and then we have a small demo you also turn over to the judges for questions nice uh great job um yeah i think this is probably super complex uh uh to do i think it's um a pretty uh glaring gap at least in uh in in my view i think the uh transparency of of uh of public blockchains is both a blessing and a curse so so i think this is a really useful thing that you've built so awesome i'm i'm curious how much gas do you think this would cost to do a a withdrawal on ethereum l1 today so it is really expensive especially so the hash function cannot we are not using a sha-256 as that is very inefficient inside the snark so we're using memc and then depending on the depth of the tree you're using around fifty thousand gas per hash so say the tree is uh the same size as tonight's case so twenty step deep then you're almost around a million gas um and then for the withdrawal you're also having did the snark and withdrawing the atoms themselves so and we also had to make a calculation so because we're inside the proof we have to have a specific amount not an amount that is changing over time we're using like this we're using this scale comp balance of the tones we also need to take the scale balance compute how much would that be in current balance and then we throw that from from the pool so it is currently very expensive to do so we thought about making some of the verifications move more of the verifications inside the snark but then we have some issues as then you have to be a the next transaction if the state has changed just not will be invalidated and that would not be that nice so you would be around like a million gas uh to deposit and then just a bit more to to withdraw so it would be fairly expensive yeah which you know for some users that's okay too you know like if you have a large enough balance and and and and you want privacy maybe you're willing to uh to pay for that um if you were to build on uh an l2 today which one do you think you'd do it on uh so i think for something like this it would make sense to look at as something like ck sync or talk with the aztec guys um as you could have a recursive snark so you have pretty much a roll up of the snarks um so you just validated that on the main chain would which would then be yeah just just the snarks around three million gas and then you have a set of uh of notes that will make the like off-chain computations i think uh yeah just congrats that's a very cool very cool project uh i don't think the the gas is that an issue like dimitri was saying like uh user potential user of that uh would be large uh like large accounts so for them like gas is not necessarily an issue i would not like uh put that as the main focus uh the gas accumulation is always cool and that's like gas is pretty close to tornado cache so i think it is sort of like the same user base as well yeah and yeah i think it's a it's a very cool uh project yeah congrats yeah it's very impressive um in terms of the cost and stuff i feel like especially when it comes to zero knowledge stuff um you know this stuff tends to advance kind of um exponentially and so i imagine stuff that's expensive and difficult to do today will be uh you know a year from now quite easily um can you just talk a little more about the the cryptography side of it i mean i'm not a cryptographer at all okay so we have this state is pretty much just a immigrant tree so when you make a deposit you don't have to make a proof you are inserting into this merkle tree and then so we use um an incremental murdery meaning that when you insert you pretty much compute the path to the leaf and then you insert the new leaf like a proof you have to submit a proof or uh yeah it's not really a proof when you submit you just submit the um and then you insert oh it's just a leaf okay yeah because is the whole tree is the whole tree stored on chain or just the tree is pretty some of the values are stolen chain you need enough values to have some of the intermediates to make it easy to compute but you don't have to have the health tree on on chain and isn't it possible to work back the balances by the interest accumulated so like maybe you could get doxed by the the interest that you you accrued so the idea is that the withdrawals themselves are anonymous but you can see who deposits in so say that if you're the only guy who deposited in then really easy to to figure out who you are um but you could also just withdraw some of the funds um at a time and then it would be fairly hard to see if save 100 people have to pass a thousand dollars and somebody withdraws 200 then it's very difficult for you to to see who it is so that is also why we have limited to a fixed amount that you would deposit so if you you have to pass it the same scaled amount so say that at one point deposit would be a thousand dollars then at a later point if you have to deposit it would be eleven hundred okay very cool yeah you should you should create like basically a private market on the other protocol very cool um awesome okay thank you team hush hush yeah thanks so much all right we're going to move on to team interest simulator and i have a video from anna that i'll play on her behalf all right hi my name is anna and i'll be demoing the avi interest calculator for you today it's a simple tool designed to quickly estimate how much interest you would have earned if you were to deposit an asset on avi version 2 or how much you would have had to pay if you also decided to borrow against it so here we go this is all powered by the graph by the way um here we have the graph you can quickly see um that there's definitely periods where you don't earn much interest at all and then there's jumps and you start to earning interest more regularly this is specifically for the bat let's go for a different asset maker so here we can also see um that by the end of 30 days you would have earned um about 100 and we can also definitely borrow against it um here we go so here if you board 100 to usd um the interest has lowered but you're definitely still earning interest and if you borrowed a bit more you're going into the red territory and you would have started owing interest on your loan here it's actually a little um not intuitive that owned internet owed interest is still higher that's because it's not normalized so used if we switch to usd you can see earned interest is higher and there's also the rate portion and you can see the rate is highly volatile this just gives the user um a better understanding of the ecosystem and which assets are more volatile which are are less if i had a bit more time i definitely would have loved to integrate a wallet and read all the assets that the user already owns and show them the accumulated interest they would have earned and maybe even just having multiple inputs for the deposit so they can also do that manually thanks oh sorry turn over the judges yep there you go yeah it's congrats on the uh on the interesting mediterranean it's really useful i know that a lot of the uh the user in in d5 and in ave particularly are always eager to to make those simulation uh before they make some deposits or after to just like see the opportunity also like the potential gain so i know this has like already a market that is not yet really uh tapped in so yeah congrats thanks yeah i have this makes me think of i have like a apy vision like pinned in my tab which is like uniswap stats and i'm like always checking that and i feel like if this was live it would be pinned right next to it it's like check my units off check my ave um super useful tool uh you got any thoughts or ideas about adding other protocols i imagine this would be useful for kind of any lending or interest bearing protocol uh so so far it's just on abbey i kind of just i had a hard time coming up with an idea to be honest so i just went off one of the rfps that avi had on their website um so yeah definitely an opportunity to integrate other protocols and yeah that's not an issue awesome and what was the uh the most challenging part in building in building the uh interesting model i think i had a hurdle with the actual formulas for the instantaneous interest because the documentation is a little misleading um and yeah just reading the graph because the historical data is limited to like a thousand um entries so just figuring out the graph for that and learning awesome don't hesitate to to keep in touch to explain like the uh what what part of the documentation was not really clear okay um congrats yeah this is awesome i i i would echo what um uh what david and jordan said i think in general users in d5 just need more analytics and tools because i feel like they often just don't know what they're getting themselves into um so so so this is great um uh on on that formula part is is part of that difficulty and i'm not sure if if this is true but this instantaneous interest or like the fixed rate isn't actually fully fixed and so it's still kind of like fluctuates and so is that part of the uh the difficulty with calculating it or or was it something else uh no it was just a technicality um making sure like my rates are matching abby's rates got it um and and a really small point uh can you adjust the uh the date range because on the ui it was last 30 days yeah so right now yeah it's only 30 days um it's another thing that you can easily adjust and add on to the project if i had more time is this is this live anywhere uh no but i can make it live you should do it like i want to use this yeah definitely make it live we will promote yeah great work thanks all right great job well if ave promotes it now you've got to make it live you don't have a choice um okay awesome thanks so much anna and up next we have quick zap and then we're going to take a longer break after that one so team quick zap if you could raise your hand if you're in the chat here that would be helpful all right there we go awesome so when you're ready feel free to share your screen and tick that share computer audio box all right let's take it away quick zap is a defy payment gateway it's the easiest way to make and accept decentralized payments from customers anywhere in the world to make use of our api you just need to click on the get started button you could copy and paste the api in your code and then load your page now this is a sample page on how the api works like i want to make payments for this um shopping cart and i need to do is to click on the pay now button then it pops up i connect to my wallet we select the token you select the token type when you use to make payments then i click on pay then i i've made payment which shows you how you can use any form of erc20 token to make payments at any store now we about three in our team these are the team members that that made quick zap okay we'll turn it over to uh the judges for any questions great jobs them um uh i think the more um fiat honoramps and and and and the more you could connect uh uh uh defying crypto um uh to uh uh i guess the the the traditional economy i think that that that benefits the whole space so so it's a really important work here um i'm i'm curious what does the merchant have to do on their side um well is there anything that the merchant has to do to to uh accept a payment um like like does it have to um uh convert to fiat on their side or or do you have a sense of like how how you'd want to build that out okay um for the my chance to make use of the to receive payments all what they need to do is just to copy an api so there's no to make make it more easy to implement so they don't need to make use of any api key so how what they need to do is just to copy the code snippet and paste it in their code and they pass in the amount and they pass in the token type they want to receive payment probably maybe an ounce recipient in half or maybe you know any form of reactions fantasy token or or instable coin so then i said i said look inside so then i once i put the code in my website or in my app then by the time i like load the page of my app when users come comes to my store they want to watch me something they can just click on the hey button and it pops up so they select the type of um erc20 token they have with them to make payments so we're actually planning to roll this out for public use right now we're working them already so um the goal is also to also include other um in the future in the future to include other other blockchain technologies whereby you could switch from maybe ethereum to polka dots from polkadot to um just having a combination of of all the tokens and coins in one place right so see they can use it to make payments so just like for example now um i need to do something in place from emergency emergencies whereby i have some tokens where i can use for my day-to-day activities so that's what came up that one brought up the idea got it okay thank you yeah congrats congrats also on the uh quixot projects i was wondering have you thought about like using the uh interest bearing stable coins so like uh instead of using die a stable coin using a die so that your merchants have directly like interest bearing treasury uh since it's always like one to one to the uh underlying yeah we've talked about it but because we thought about it also like well because of the at the time was not enough for us to make us make the development so we're trying to rush so our plan was to use chain link in getting changing to get data for the currency conversion conversation we can use like building a chain link api but we didn't have that time to integrate that so it was we saw that it was already close to the so we just have to quickly brush up this yeah very cool thank you awesome if that's it thank you team quick zap all right awesome so we're going to go into another one of our breaks thanks again so basically judges just to give you an idea i would probably take a couple maybe five minutes or so uh kind of stretch your legs feel free to jump into that side call if you'd like if you want to mute here and go chat there if you want to exchange answers so far but good opportunity as well to sort of see how everybody you've seen ranks so far and we've got four more after the break all right see you all in about five to ten minutes cheers hello everybody getting ready to get back into it i am yeah awesome all right looks like we're all here i'll share mine too there we go and another corner of david's apartment very good that's the first one very very good all right cool um all right so like i mentioned we've got four last projects up up next last but not least um in terms of next projects we have team xcfd which is nathan so i'm going to invite nathan up to right here and nathan i'll be playing your video all right we'll let nathan get all set up all right and here we go hey welcome to the demo for the beta of xcfd it's decentralized protocol for buying contracts for difference on ethereum uh you can learn more at xcfd.org docs but i'm just going to jump right in with a demo uh if you want to learn more about how what i'm doing works you can just read about it here so i'm going to go launch app in the top right that'll take me to app.xcfd.org i'm gonna click buy in the top right here so i'm gonna get ready to buy contract the first thing we need to do is connect uh an ethereum wallet so i'm using metamask for my wallet provider it's browser extension it's free i highly recommend it uh one important thing is to make sure you're on the coventest network if you're replicating this yourself because it's not on main yet yet mainnet but i will uh put it on mainnet in the future so i'm going to go ahead and click connect wallet here in the top right there'll be a little pop-up window it's going to make me sign or not signed but connect meta mask to this website so i'm gonna click next and i'm gonna click uh connect yep looks good connect okay so we're good and if it works i might have to refresh the page but it should have your wallet address or at least the first part of it here on the top right i'm going to click buy and i'm going to click um february 14th because not february 14th yet important thing about citing an expiration date is for your transaction go through you need to make sure it's a future date uh and cfds expire uh on 10 pm utc as per recommendation of uh uma documentation and uma by the way is one of the primary protocols i'm building this dap on so without further ado we're going to click um looks good uh ether by the way is the only token to support it right now but we're gonna place order and we're gonna click confirm transaction and i'm just gonna check the console to make sure everything looks good uh yep so we have a contract for difference on ethereum now um that's gonna expire on the 14th so that that's it in short there's a lot more that needs to be done here this is kind of a partial slash incomplete uh demo but i figured it's better than nothing i'm going to be working on this a lot i'll be active in the uma discord and uh be uh pushing updates for this and hopefully launching a mainnet v1 as soon as possible with many more features it's pretty busy this hackathon but uh yeah i think we got a lot planned for the future so thank you for your time watching this and if you have any questions you can always let me know all right thanks bye all right awesome turn over to the judges i think uh congrats cfd is like uh one of those primitive days a bit missing in the uh in the current space so yeah glad to see glad to see someone to building it like what was what was like your main challenge in building those yeah i would say just the implementation so like there's a lot of ways you can go about doing it uh but ultimately i'm just trying to like not only build new financial products but also like migrate old ones existing ones that people are already familiar with um to the d fight ecosystem because it's just good for adoption and just be cool to see yeah do you mind just giving me like a one sentence or if you like what is a cfd uh yeah so it's like basically an agreement between the investor and broker to exchange the difference and the price of security between the time the contract opens and closes with like a set expiration date uh and usually there's options like roll that expiration over but um i haven't implemented that yet gotcha that makes sense thanks yeah very cool always good to have more um more of these primitives right like we're pretty much going to port over every primitive from the traditional financial system to this yeah be cool to see awesome yeah really great uh to see more folks building on a uma i'm i'm curious is this a purely peer-to-peer model or is there an order book hosted somewhere for these cfds uh so this is actually using the price feeds through uma dvm um which is like basically whether oracle's so um yeah got it and and and could you walk us through what happens at experience uh yeah so essentially um if there's not um over 120 collateral um so like the contract will get automatically liquidated if collateral exceeds a certain amount but uh basically if it's out the money a certain amount but um otherwise it'll actually just go through to expiration it'll automatically liquidate um so yeah that's the cool thing it's like basically contingent orders um without the user having to confirm a transaction at expiry got it and how how does it uh well wouldn't you need um bots to trigger the um uh uh the uh the liquidation or or is that not necessary in this model uh yeah so so when they sign back in they'll have to uh uh uh they'll have to confirm something but yeah got it okay cool yeah this is awesome yeah a lot more work to do on this but uh yeah it was a cool little cool demo i thought i'd submit it anyway so yeah yeah i know for for sure and i i i um yeah like jordan said i don't i don't know of any other um uh project live doing this so so that'll be fun to kind of get it out in the open and and see who's using it and get some feedback nice okay cool awesome thank you nathan um and uh we will move on to the next team so up next we have ave teller machine so chris i'm going to bring you over now and chris when you're ready feel free to share your video with the share computer sound ticked hey guys how's it going all right and i'm going to share my screen here really quick and share your sound you guys see everything yeah that's great so yeah i'll just kind of walk you through this really briefly i have spent the last couple weeks working on a thing that i call very lovingly the av atm machine the atm machine is actually physical cash liquidity provision so in my hand is 100 bill uh but uh we'll talk about uh how this becomes a hundred dollars and die here in just a moment or a die actually so anyway let's show how this works what i have is a actual physical atm machine made by a company called gen mega jet mega makes most of the atm machines uh that you see in bodegas and other places in the world you know you just see one in the club the one that says get cash you know that's a gen magnet so if you've seen it um that's the the thing that i have and i'll show you guys here in a moment i've reverse engineered all of the functions of the atm machine the pin pad the cache dispenser the bill acceptor uh the screen all the stuff too to basically make it an ethereum uh contract front end so uh the team is me hi i'm chris uh and uh yeah i'm actually a very good hacker so i should i should actually say that first i'm internet famous for being one of the first humans to jailbreak the iphone so uh embedded engineering is something that i get like very well um so yeah let's talk about uh a couple of the use cases that that this machine does and then i'll actually walk you through physical uh liquidity provision so in this case we've got an alice and bob uh this is an atm machine at a bodega uh somewhere in brooklyn we'll say not too different from where i used to live and alice is a bartender at the levy and she's got about three oh we'll say a hundred dollars in cash and she's walking over because she doesn't want to like ride the l trade and with that cash on hand because people are weird especially nowadays so walks into this bodega and physically sees uh you know this ave atm machine uh in this case uh uh actually let me go ahead and let me do the physical that's that one i'm just slides her out of order so she walks in deposits 100 in cash inside the machine the machine also has a adjacent smart contract the smart contract has the shop owner who owns the let's actually rewind a bit you have an atm machine in a bodega one of the most important things to understand is that the shop owner also owns that atm machine it's just like the the teller that they have on the counter the cash that's inside the atm machine is equivalent to the cash that they have on the counter it's basically one treasury through the all the way through so what i'm proposing here is is that uh and it's actually the atm the cash that's in there about four thousand bucks is sitting there not connected doing anything now i have some better ideas on what to do with that in the future but like for this use case i'm just saying for now uh the shop owner also puts up let's say a thousand dollars and eight in in a die liquidity so what ends up happening is when he gets a physical 100 bill that is displaced by the a die and pushed into the contract so the and we have it working two way the ability to put cash into a machine and the ability to reclaim and so uh without further ado oh and then also let's let me go another use case uh one of the options that i could do is use uh physical liquidity providing as a way of doing a remittance transfer if you will so i can provide cash again the same story that we just had but assign the credit delegation to someone else maybe my abuelita and el salvador and so this is a way of in which to provide a really interesting uh you know potential cross-border payments again this is cash that exists on both sides of the atm and uh it's simple software and an upgrade so without further ado i'll just like pull my laptop into the next room and here is an ave tm machine now um i've got it set up right here i'm gonna deposit some a dive but i can let me let me just go ahead and show the physical cash work through first so here 100 bill i'm gonna go to my bill acceptor page here you tell me bill reload of course like every demo let's do this crazy thing about atm machines they run com components no guys i've had to reverse engineer so much stuff in classic windows calm but uh but yeah like i've got bill acceptance return let me go here so accept bill initialize accept bill accept bill come on oh yeah now it's green see that it's green now i push that in i get a live bill accepted notification that dings an internal smart contract that i have here and that just pushes die directly to the wallet address that i have paired up here so when i go look at my physical wallet now uh once that happens a transaction notification happens and basically in ethereum time it'll take a little bit but the human can just sit there and uh they don't have to be in front of the machine to physically interact with it and so uh yeah i'm basically working on all of the components of the cash uh acceptance and payout and while i've got you guys on the phone why don't i just do this let me introduce you to the ave atm bot which uh is here let me just paste uh if you go to telegram i want to make sure we have time for questions as well so no worries eight minutes total and i think we're already at about seven so you know um all right well let me stomach here i'll go here to the chat i'm gonna i'm gonna paste this this bot there if you go into it and one of you guys sends a dis slash dispense notification to the to the chat you'll see it'll spit out 100 here on the other side of the machine just connect slap there you go all right cool judges do you want to ask a couple questions real quick yeah for sure i mean uh in general i love the name uh atm i get it uh and i applaud you on the bravery of doing a live demo uh especially with a hardware machine that's not easy um yeah i feel like i have a ton of questions and and and there's not enough time to cover it um but can you just um clarify the workflow for me again on the deposit um uh we'll we'll say bob is the shop owner alice is the depositor right but so when i deposit i go to an atm and i deposit do i need to specify uh my public key a and b so no it uses wallet connect i didn't show you guys i didn't show you that part of it but i can show you that i can connect with wallet connect and it just that's how it gets the address got it and and from which account does uh is the die pushed from from bob's the shop owners so he needs to first top up that account with crap and he'll have notifications as to how much is inside his wallet uh i mean you know it's part of the running a crypto atm got it awesome thank you yeah yeah i'll give jordan a question just because i'm sure he's never seen an atm running his software yeah it's like he's crazy like uh awesome chris i have like many questions as well like uh everyone else um i'm around all day yeah i think i'm working on this stuff i think we've contacted maybe just do you always got like an atm lying around in the garage i mean so so the fun part about this is i was actually uh tapped by a by a group that that does this right now they actually manage physical atms in stores and these are actually the ones you're most commonly used to so i didn't show you this part but i've also reverse engineered these two um but that's that's a bigger story anyway yes uh basically with the code modifications that i've made uh my software can run on i would say eighty percent of the world's international atms and make them crypto atms overnight awesome yeah i have plenty of questions and even ideas so for sure i'd love to talk to you guys about them too i was going to ask if some bodega knows that their atm is missing yeah it's like but here's the thing imaginable like the like currently this is a cost basis for them for the most part uh and now it's a thing that can uh can actually give them you know yieldable money like there's like when we get into the remittances market you see how big that is you get into the yeah it's just the atm fees market the free atm like an atm that has no fees like except for the ether ones you know anyhow that's it super cool chris thank you so much this is sick um and uh yeah i mean hope to see one in uh bodega near me let's hope so thanks for it take care okay cool um up next we've got team uh finance club uh so feel free whenever you're ready to share your screen and computer audio and we'll turn it over to you we are up i'll play the video now greetings we are team finance club here to present our project the problem we are trying to solve here is that many people around the world are hesitant to invest in the stock market or cryptos due to lack of knowledge about the assets hence reduced financial inclusion around the world but all of these players or users have a lot of knowledge about their favorite sports and their favorite sports stars so we want to build a platform where users can trade their favorite players thereby getting an roi for their income using cryptos now the platform is being built as an erc20 exchange platform where you know each of the celebrities or the sports stars will be listed there as an erc20 token the users will be able to buy and sell these tokens for a particular price the price of the sports players will purely be determined by the supply and demand for that player for example if a player is predicted to be doing well in the next match the price of that player will increase and so on now the platform is being built using ethereum and layer2matic we were also identifying opportunities with awaigochi after attending this webinar by them let's take a look at the demo of our platform the demo has been launched in dapp.finance.club if you go to the home page we'll have five different players and two different sports here for the mvp now any of these players can be bought and sold from the exchange trading page when i look at the wallet this is where matic comes into picture where ethereum from the ethereum network can be converted into matic with or tokens automatically using the matic widget that we have used but let's take a demo of the actual extends trading page itself now looking at mahindra singh dhoni he is a favorite cricket player in india so this player will be listed here all the buy orders and sell orders and the trades will be listed here now when i go to some other player the entire history of that player will come in so when i want to let's say buy one of these tokens i can either click on here any of the sell orders and fill that or i can enter that manually as well here so if i want to fill this sell order i can buy and it opens meta mask automatically so currently it has been deployed into ring b test network for testing purposes soon will be launching under matic main net so once i confirm this order and the order gets placed and confirmed you can see that this sell order gets executed once the order is played i can also see that in open orders and history now that the confirmed transaction has been confirmed i can see that the 100 tokens that i have bought for a price of 0.0013 has been filled and also there will be a change in my candlestick chart automatically so today there is an open of 0.001 and a close of 0.0013 so this is about our platform one of the uh most important questions that we get when we talk about this platform is about the licensing so finance club is a game of skills rather than a game of chance and hence when you are predicting a user's performance in the future it is not like a lottery where you take a game of chance and hence we won't face any of the copyrighting or licensing issues from the players even if it comes we have a reserve fund that will be maintained for all the traded sports starts so we'll be able to pay them a royalty based on the reserve fund the future work that is in progress is mainnet launch on the matic network uh we are planning to use bikonomy for gasless transactions we are launching our own token which is used for fee payments on the exchange platform and integration with chain link and integration with away gotchy is also in the box that's finance club and you can check us out at www.finance.com or dab.finance.com thank you awesome turn over to the judges yep thank you very cool um one thing i wanted to say is like i love the ux uh sorry the whole ui looks really beautiful did you guys build that whole ui just in these couple weeks and can you say anything about uh the front-end side of this project that's right i've used react.js and drizzle which is a truffle component for getting all the contract-based data so truffle press react is what is running here i'm also planning to use firebase to store the user's email id and a nickname for the user so that i can show real-time updates on who's buying the tokens who is selling the tokens that will add more excitement to the players we are also using apis given by quick info and a lot of other sports websites to update real-time scores of tournaments and current matches also we are planning to play uh live commentary in our platform very soon once it is launched awesome very nice thank you yeah some congrats uh on building this so fast as well like i always love this kind of like human tokenization because it works both as like representation of the the presents uh for the sports but also like kind of uh like prediction markets when we expect things for for different uh basically sportsmen so yeah it's uh like how how do you see it scale like what would you be doing in terms of the i guess like there is like even like business model behind it uh so like where do you see it taking okay uh the first place where we get the revenue from is through an ico for every new player that is launched there are going to be a few tokens which are maintained by the company as a treasury uh for the royalty and in the future we are also planning to bring in uh complete decentralization of this where users themselves will be able to tell us recommend some players which they want to see in the platform and when they launch it when they create that token they get a portion of that as well so that's the first part of the revenue second part of the revenue comes from our fees every or exchange trade that happens will have a one percent fee and that will go to the eic20 uh token owners and we are going to split that as governance and future so uh that's how we have planned the entire revenue we also have our own fancy token which can be used to pay fees uh it's like bnb tokens on finance so if you pay using the uh base ether you you pay a lot of fees and if you pay using bnb it is 50 percentage so you can either pay using ether or a fancy token fancy token will be half of ether fees that's how we have planned the revenue here cool um yeah agree with david really like the front end here uh really beautiful um how many instances of each player will there be okay the we are still working on the tokenomics part of it uh how many uh tokens have to be launched for a particular player so for example cristiano ronaldo should we have 1 million or 10 million tokens is a question that needs to be resolved probably all the people i've got from discord using this market make can help me uh get into this tokenomics part of it but for now i've set it as one million uh to cope the supply oh got it uh have you considered then using like an erc 1155 or is that does that introduce uh difficulty with trading these things uh i've looked at es 1155 but i've not decided whether i have to go with that approach yet uh so i have to do a lot more research for now it is esc20 but shifting into es1155 is not going to be a difficult task as well so that's can be done uh if required for sure got it yeah because that might introduce some some scarcity um and then just a comment you know i think um uh fee tokens they add friction to the ux and i think if you could have a model where you accept payment as an eth or stablecoin and then you still have the governance token and then have a portion of that go to a treasury that's um controlled by the governance token that's a much smoother ux and i would just encourage to uh uh to look at that because i think um a lot of the payment token models from around 2017 um it hasn't really worked out and hasn't really accrued value so i feel particularly strongly about this so so just encouraged to uh to look at uh ways to make it as easy for um and users and especially here which are probably more retail um actually use the platform sure we'll look into that definitely thank you thanks for the feedback yeah jacob you're muted oh man always once uh thank you so much uh fandazzled uh project um and i almost made it to the last but uh last but not least uh we have hella tick and flash clone uh so yeah when you're ready uh hopefully you shared the computer sound but you can take it away from here hi just a minute i'm sharing yep hello for the hackathon i'm i have taken a simple thing called flashlaw which is already the code is there i'm just using the logic to unwrap it so i'm using the whatever the tutorial now connecting the project my hello flashlight project connecting to this with the local ganache sitting at the available this is the lending phone address then now i'm going to deploy the flash loan version 2 which is this one so i have all these codes in the this directory flash loan which is it contains this contract version one so i'm going to deploy that i'm uh i'm still learning about ethereum and solidity so it is like a first hackathon for me and this is the contract for the uh ether wrapper w which is a wrapper of ethereum the contract so i'm i'm setting that as a thing or two to make a flashlight so i'm calling from the account zero to transfer uh requesting to transfer one ether to the thing this is the transaction id so now uh one each one one meter is of rw this transferred so flashlight is executing this is executed so we have to introduce as per the documentation we have to introduce the topic uh here i uh we have to use i'm using i'm planning to use uh one inch protocol to get the price step here what i will do get a loan from away and then unwrap it and wrap the way then slap that with the one inch protocol then with the die then uh again uh keep the swap with one inch then wrap it again so then what we will have we will have advantage of uh from this text so this is what i am trying to do uh this is i'm uh using uh combo as a test uh i'm impressed with this time i wanted to do similar project uh since i'm not having some time and time and uh so i have i have come up come up to this thank you very much for your time judges thanks a lot okay great turn over to the judges hi idea is that you you made like a way to have like a simpler simpler way of making flash loans right yeah that's where that's the idea like i i'm just trying to understand flash alone is very fascinating to me now start um yeah flashlights are like one of my favorite uh features of d5 do you think this um do you see this stuff you've been working on as mostly for looks like this was for arbitrage but do you have any interest in kind of using flash loans for things like uh other uses like rebalancing collateral pools or things like that yeah initially what the arbitrage is the big biggest thing actually which i want to do because uh since from one exchange to get one get uh loan from away and convert that and sell uh in front get it from one exchange and sell it to another between there is a arbitrage right so recently uh some somebody exploited as uh for some 360 000 so i'm just trying to find what is the gap how it is uh uh just till i'm exploring and then the other motivation is i want to make it like a fur combo easy easily anybody can even you don't know coding you should be able to uh assemble your flash alone with uh scratch like of blocks like a block lead from google's they have a blockly thing right i want to make it something like but uh with a block any now every kid also know that scratch programming so that is another name like instead of having a big stuff like make make it a simple uh blocks like lego blocks so that people can anybody can understand like it's not like a rocket science so that's one of the aim to take it forward very cool thanks yeah yeah really glad you're uh you're kind of diving in and and [Music] it's a learning curve but i think uh uh this is a great start um i'm i'm curious um it looked like you were using um one inch for uh to fetch an oracle price um yeah any rationale on using that versus the uni swap v2 tiwa one thing is that gas fee is very less let's say the promote the other thing is i want to have a uh i believe i i will use the one inch as well as limit swap and then compare whichever the best price then so that you can make a little bit of money so that's comparing the oracle one inch is one of the uh basically i want to try what is there is any gap between various different oracles so that's what that's one of the more divisions awesome congrats i'm sorry thanks a lot that was my first trackathon and yeah i think it's very cool to see you learning uh solidity through to flashlight i think that's uh you start at the right point thanks a lot thanks okay cool awesome thank you so much with that uh we are all wrapped up on all the projects uh for this group so um thank you everybody for for coming out uh thank you everyone who demoed um as mentioned you know this is part of market make um we're in the final days here with our finale on thursday uh we will be showing off some of these projects and projects from other judge rooms as well so keep an eye out for that that's thursday at 12 p.m eastern time um and yeah big thank you again to our judges thank you to all the people who came out and demoed their project and uh we will catch you at the next eve global hackathon yeah thank you and congrats everyone thanks everyone thank you for coordinating yeah this has been fun thanks to uh and thank you to jacob as well and all these global for organizing yeah thanks everyone 