good evening whoa well I suppose some of you wanted to sleep so I'll try to get directly to the matter my name is Dimitri I'm doing engineering it slaps and today in a couple of slides in a couple of slides I will tell you about what is fluence and what's the reason for it to exist and I will just focus on white matters on hex on then I will tell you about the fluence definite sorry well I hope that that's the right presentation mmm doesn't matter then I will tell you about what what is shape it with definite and then I'll make a quick demo of what could be done with definite so what is what is fluence and let's keep some fights listen is not a black chain influences a network of application-specific like chains these are shared secure to wear so while black chains are usually focused on monetary transactions on tokens reaching tokens and so on usually they store transaction history forever and they have huge ball chains well for affluence all of this is not true fluency is mostly focused on generic applications general purpose applications with fluence you could run for example high performance these are applications like destroys applications back ends right now usually EPS as some part on the chain and a lot of things you know instance revised environments poor for example you may launch database REST API and similar things the key idea of fluence is a hybrid architecture so the network is divided into layers the speed layer which consists of very small clusters combined together with betterment and running web assembly and a security layer which checks keeps keeps running fast clusters in check to make this possible we delegate some job on existing solution existing networks namely theorem and swarm speed layer is what could be used right now and what could help some of you maybe do something maybe we have just a few workers per cluster it's key to have a cluster of four workers or even of one so each cluster is dedicated to handle just one application so one application one cluster and the client interacts with the cluster directly each cluster stores all the data required for computations for state transitions for responding to queries locally and you know you do this small size of the clusters we need to have some means to access the data of the clusters from the outside to verify that they behave and to make possible the real-time cluster store the data to the swarm also we have security layer well actually if you have any question about security layer I will tell you about out works but for now let's skip it we have compaction it's wonderful this with resolution wonderful we can make sequel also wonderful it it's much more secure the interesting shards for example and that's also wonderful finally the qualities of the fluence network our speed security and cost efficiency everything in destroyest manner and that's my possible with two layers or speed and cost efficiency we use speed layer plans do not wait for validation to be performed before clients could have the results of their transactions we have a small clusters so the consensus is reached with just a little delay and we also don't need to pay for many workers which helps with the cost efficiency and we store data locally so there's no need to traverse back and forth through the network fetch the data required and we have security layer which acts well as its girth layer as a delayed validation layer so let's switch to practice good uses that have net which is a speed implementation of fluence is already life and these possibilities to use learns are not theoretical but practical we have several examples of what could be done with fluence wish you could just eat clone try and so on for example we have a decentralized sequel database or we have a probably fair gambling with a tie scheme I will show it later and end yep that's how our timeline looks like what what our timeline looks like currently we was error dev net means speed layer implementation then we are planning to implement security layer over this year to reach the test net milestone and while we have incentives ation it would be the minute during that dev net parrot to fix the availability issues we offer ability to pin applications to your euro nodes so that even without incentivization you could have decentralized available applications there are some important links we have a network board I will show it in a couple of minutes we have a affluence book on the condition and in case you have any questions next morning probably you could join our discord and we will happy to answer them in general if you're curious about the Deaf net and about the possibilities which flows could bring to you here we have the most variable links on a single page then store network / links let's take a look on this page and make a short demo and to do it I need switch from mirroring from almost standing to mirroring so it's the links and text repository Twitter and so on and we have several examples we have sickle database tic-tac-toe game guessing game based on rust tutorial and edit game so if if you're curious we could take a legend look on on anyone any suggestions let's take a look on a dice game because that's so well well I just love playing it it's it looks quite trivial I can set a bet this number and then roll dice and probably I will get rich usually it takes around a second or less that's how it would be yep so that's how it works you could take a look on it at dice dot fluence dot Network and this is the most explained the most explained example so we have the food tutorial here how to setup rust how to implement a state management that's how you could make a persistent state which is kept between the cause does the public variable here we have a as a gateway function to make a gateway function the only thing you should do is to add a notation when I did the function is the invocation handler annotation so it really all you need to do to enable fluency execution of your Rast application is a couple of lines of code in Proteus decay and set in location handler we have CLI tool we have a network dashboard let's take a look on the dev board you have a few applications deployed now I suppose the dice game is application number one here we have the members of the of the cluster which holds this application right now they combined with a general mint if you're familiar with the tender mint or familiar with tender mint this information is enough for genese block we have the next time and these are public keys of tournament this information is stored in the theorem and we could check the cluster this is the height of tournament chain so we played a lot the dice game the same four notes notes has capacity is the number of applications which could run currently we just assign the same capabilities the same amount of a CPU and memory for each application but in future we are planning to make more fine-grained control of the resources nor could be private private note is the one which serves as a developer privately so it wants only applications of all this developer that's for availability just like pinning in ipfs so that's all I could show in a 15 minutes we could take a look on a sequel database for example just for for fun and for being curious we took Lama dB have you heard about Lama DB in your life why my DB is a very simple implementation of full feature the sequel database in rust we haven't coded it we took it edit those two lines and it works it's deployed and yep so let's play tic-tac-toe game oh I need to login I'm not sure Russian letters will work it should but I'm not sure could play with machine it's not very clever I mean for each of these examples we have a tutorial and each tutorial and suiza but not for tic-tac-toe for each of the dice game tutorials we have open problems in the bottom for example you could implement the leaderboard or all the players of the dice game to find out the best one the most skillful in playing the dice so that's all for now in case you have any questions about the real practice is let me know when are we going to go to sleep the most practical question yep so thank you for being a wife after 1 a.m. I see you tomorrow please give fluence a chance by visiting our website when your mind is fresh [Applause] 