talk and this is one i'm super excited about this will be a conversation between austin and kale and they'll be talking about sort of what actually gets enabled and unlocked uh by developers in the world of ethereum and uh austin and kale have been in this community for quite some time and uh they have a lot of amazing insights so i'll just sort of let them kind of come on stage and uh get the conversation started so with that please welcome austin and kale how's it going guys hello this really is just going to be a conversation right like our plan was let's not plan anything that's not like put a bulletin bullet bullet point list let's just go back and forth and rap about uh building on ethereum and i like what that unlock unlocks too i think earlier i heard someone mention something about like we keep building the same web 2 thing over and over on web 3 and that's really not the answer here so it'll be cool to talk about you know what things are also unique to web3 and then i think kale in particular you like to dive into and you have some a great perspective here on kind of public versus private and also enterprise verse public maybe maybe you want to jump in on that first and start start driving the boat and we'll see where we go from there also yeah thanks for having us global yeah thanks everyone for uh having us on here and uh talked to austin quite a bit and a few a bunch of others in the community around this but you know i from being from microsoft you know i spend quite a bit of time on the enterprise side but you know over time and i've always been a big believer that uh public mainnet is something that um you know is going to be embraced uh by enterprises uh and that's happening it's already happened uh but we're seeing more of it right with things like baseline and some other projects that are spinning up and so you know in my the back of my mind as we've been building stuff at microsoft for this as part of the community and whatnot it's always been a thing to like make sure our tools are compatible when we talk about like dev tools uh between both we don't try to make something that's just to work for like private networks it may have some features that are kind of centered around that but the core is always you know to be open right to be able to have that reached into the public side too the the open source nature of the ecosystem is is so cool just like judging hackathon projects every once in a while well and and i am guilty of it myself when i try to build something you you get this really big ambitious pitch of what we want to build and when you get in and you start building something there are some holes along the way right you find these missing pieces and you end up having to focus on building that tooling and but but but then you kind of like provide that back to the open source ecosystem and that becomes you know a building block for for the the next folks that come along that want to build there and so i'm i know that you guys have uh uh some extensions and stuff what what kind of stuff are you like what what in the private world gets built and then pushed back up to the open source level where other people can can tinker around with it yeah yeah it's a great thing and i agree 100 and i've been in those hackathons myself in the same seat it's like great we're going to build this like decentralized x right and we started building it and next thing you know it's like we're in wallets and that's where we live for the next three days you know and it's like you know after seeing that a few times and also working with you know customers on that they do hit the same things right everybody's hitting those same kind of uh bumps so one of the things we were trying to do with some of our like you know vs code work and some of the sdks we built is kind of lower that bar to entry so the idea is enable people to do stuff fast so it's not like a black box like they don't know what's going on but if they want to be kind of oblivious when they first get started and say hey i just want to build something i want to write some solidity code i want to get this thing up on to maybe a dev network or or something even bigger like something in azure or something we want to make that like right click right just right click deploy that thing out there and get going but we also don't want to like restrict it right and say like that's the only way you can do it and pay no attention to the man behind the curtain that was doing all that stuff for you like for the advanced users you know i want them to be able to go that's cool but i already know how that works i want to tweak something and i want to get in there so then they can get in there and do that and we're not getting in their way right so that's i feel like that's like the magic right to making some of these tools is like make it easy for guys who are like novices who don't know what they're doing and like you said remove some of those stumbling blocks that's going to block them but then don't lock the other guys down right we got to make sure that it works great for advanced user the champions yeah it's it's hard to know but one just really specific thing is my inferior key when when i distribute scaffold eth i want to take care of as much for you as i can and i want you to get in there and start poking around right away and really start like making queries on mainnet which means i need that infrastructure but with my inferior key i just like plug it into my repo and send it out to people and so all these other people are using my inferior key and infuria is like what the what the heck is going on here so it's funny they put me they just put me on the rickmoo plan which is the ethers.js it must be how it's distributed or something like that but uh the the the inferior key will come with scaffolding and it will work for a little bit but then it'll shut down on your ip address pretty quickly and so that's yeah just another piece of that that infrastructure that i i mean like we i i keep talking about our tooling is sort of it's i i've been saying this for probably six months so maybe it has already happened but we we really are at this like changing point in terms of our tooling where the tools aren't just built to get the job done anymore they're they're built to get the job done well and also be a delightful experience for the developer and and i think the ethereum space in particular is is like finally hitting that stride where we have tools like biddler or hard hat biddler crossout hard hat where you can you can compile and and and deploy your contracts and get console logs and get a lot more information into the evm and a lot more just like exposure to what the heck is going on within your solidity and i think that is a sign of a lot of other tools i think they're even working on a vs code extension i don't know if they've reached out to you yet but i bet the nomic labs guys will be hitting you up for that too yeah yeah the other thing um it's a little bit of a plug for austin but i'm going to go ahead and do it anyway because i got a plug chilling and chilling owaki would be proud of us yeah the videos uh that austin's put time in on eat.build if people haven't seen that again this is not like i'm not trying to like pimp something or anything like that i'm just saying like if you're somebody who can basically break down how a wallet works how a transaction works how some of these core primitives that you need when you're doing a hack a hack you know you need to understand these things austin's amazing at that right which means he really understands the ecosystem really well because the only people who can really explain it like very simply and have those tools to do it is someone like austin so hats off to that stuff and i highly recommend that for people who are just getting started with web3 go check it out because you need to understand some of these primitives about like what are these keys and like how do they work now that kind of parlay that into like enterprise side you know one thing we we've worked on for a while has been things like hsms which are hardware security modules uh inside the cloud those things are really hard for you to do on-prem right you have to have a lot of money uh first off you have to buy one of these things and they're like a crazy programming language so there there's quite a bit of stuff there to run and we make that dead simple like in the cloud and that's one thing i feel like really crosses that bridge between public and private right we build private networks utilizing that stuff they can also be used on public ones right you need a good place to store your key you need a good place to mince your key like so it never leaves the hsm we got that there right so a little plug for azure there but i think that's uh some of the areas where we work on to try to bridge that gap um the other side is a little bit like kind of what austin works on a lot which i will call like low code kind of deployments we have some you know things if you're familiar with azure functions or even in amazon if you understand lambda where we have these like serverless like pieces of code that can run we built a lot of connectors over there for ethereum as well which work public private doesn't really matter uh you just need an rpc endpoint and some accounts to use and you can essentially like deploy a smart contract call them and very little code to write right you can use our you can use some tooling to basically generate the apis like compile them and things like that you bring it up to this tool it plugs everything in it can like interrogate that and tell you what methods you got you can start calling methods on them and you don't have to write a lot of infrastructure code you know i think i saw you do a demo of this one time maybe you and i were on a zoom and it was like it was kind of like a form feeling like you were you were you were orchestrating this infrastructure but in a very like web 2 kind of wiring things up way it was it was very cool and it's funny how that like that that infrastructure when we're trying to provide it for a developer going back kind of rewinding to the inferior thing and what we provide for them and what we don't provide for them and how how uh we're thinking about a docker container for scaffolding right now and i've been asking developers like is a docker container too much and i would say about 25 of them are just like a hard no on installing that docker container and we're thinking once we once we dockerize one thing we can have all sorts of things like you could have a local block explorer you could have uh like a local node running on whatever network you want to have right like once you have one docker container you could really do a lot there but then you got to convince them to download uh you know that extra infrastructure to run the docker container and stuff like that uh i guess i don't really have a question there it's just kind of like that's one thing that we're working on is like what if if we took that container we could deploy it and we could give them a web experience at first and then maybe they transitioned to like a local dev environment and you see that on ethereum.org too that that would be a good plug right now is if you're a developer thinking and thinking about getting into ethereum of course ethereum.org developers is a great portal for that and there's a lot of great resources there uh to to get started um what's uh we were trying to kind of do in public and private blockchain i was thinking we could talk about the so the the tooling going between the two kind of is agnostic right it's going to work either way what about like security or attacks when when we we've talked a lot today we've heard it a lot the the the flash loans right when when someone figures out or i mean because like that that to me i think i just learned about it at east denver like what the heck a flash loan even is and then once you understand it's like oh like what what else can we do with this and when when a new paradigm like that enters the scene and they do so quickly because things are moving so fast in ethereum how does how does that look on the private side how does that look like on the enterprise side are they thinking well are they going to flash flow in this or is it even a concern yeah i think there's always interest there right so like a lot of enterprise when they hear about these things that are happening in the news typically you know when they say like oh this defy thing is like blowing up and things like that to be like so should we be doing that it's like okay we should probably talk about like what it actually means like are you uh you know building tokenized assets and things like that that could use some of those technologies but i think like one big thing um especially from a security standpoint when people start building apps especially if they're really serious about it it's not just some sort of like poc or proof of concept or something uh is you know using things that people have built you know standing on the shoulder of giants like uh open zeppelin type stuff right so when we have these like nuggets of really goodness out here for smart contracts uh you know a lot of people especially when you first get started they don't know where that stuff is and they tend to have to build that themselves and then they're going through a lot of pain right to kind of get that through but uh so that's one thing we tried to like plug into our tooling as well and there's others uh open zeppelin's just one of them but having like audited snippets or full contracts that people can use and take advantage of and have like a strong versioning thing around that's awesome right and that's going to help people like not trip over themselves as they're trying to you know do transfers and they don't understand what that means and like how do they protect against some of these type of attacks because the reality is like at first people are like well it doesn't really matter because it's a private network so we're all among friends here there's not gonna be a problem but as soon as we start talking about public maintenance like whoa we gotta be careful here now like if these contracts are actually gonna go out on main net now we do have to consider those things so we've kind of like been pushing quite a bit for like saying hey just do it from the start right just pretend that you're on public maintenance because you're probably going to be there at some point you know and i think yeah paul brody actually he kind of alluded to that it's basically like it's gonna end up on it's so fun to hear it like it's so it warms my heart so much to hear all these enterprise guys say it's going to be on ethereum like 50 did he say that 50 the next 10 years something like that but he's saying like basically you're gonna be on a private network uh or public network private technology is growing though right there's a lot of interesting things going on so public network but with a lot of privacy tech may be involved with that also but yeah with with the attacks that could be uh really interesting the the open zeppelin thing really reminds me of kind of i do a lot of mentorship with developers and when we're just writing solidity and kind of getting going i show them the ownership pattern but when you can just carve all that code out and that's just a little bit of code when you can carve all that code out and just put in like oh this is ownable now and and you get that you know audited code from open zeppelin you get that right out of out of the box and you see that it works then it's like oh what other tools do i have and it's just like you said you can just go through the opens up from the repo and find all the different tokens and find all the different access models that have have been poured over by many many many uh you know developers and researchers in the space that have really audited these contracts maybe maybe auditing is even a good thing to talk about right auditing is really tough right now like if if you you can hear a lot of the hackathon hackers talk about how they're hoping to raise money to get audited and it's like oh man they should be raising money for their developers to be building stuff auditing should not be so hard but audits are still really tough in our ecosystem is it different between public and private or enterprise and not not uh it's a it's a big deal right especially when it's something even if it's not public yet like on public mainnet uh if you're working with something like a financial institution on some of these apps it's heavily audited right uh they have to basically go over all that stuff and make sure there's no loopholes and uh you know it's heavily poured over and they will spend you know quite a bit of money to have those things audited by third parties um so yeah there's there's quite a bit of uh there's a good business model there uh for those who are building this right right that's why it's so hard all these auditors are charging so much we need we need more we need more competition we need more and it's i mean it's it's something that i talk about in my sessions it's it's actually thanks to this change in in tooling it's actually really easy to get started it's pretty darn simple to actually build a proof of concept decentralized app you know in 30 minutes to an hour you can sit down in a session and really build a dap but building a very secure one and building one that can handle you know that all the bad guys attacking it is is a completely different game and being able to think adversarially is like i i didn't even understand this i have like a an engineering background and when i got into ethereum it was there's so much more to it right there's economics and and there's you know i've i've learned so many and even in the last like six months like i'm impermanent loss like i'm googling all day long what are these things what are these new tools what so there's there's a lot of neat things going on i wish i really wish audits were cheaper though i i don't know where i'm going exactly with this but i wish we could figure out some way to have like a much easier like spot check auditing system for just everybody in the ecosystem and i don't know how that would work or scale or anything i mean to talk about the open source side there a little bit there are a few partners out there or people building uh things that are more i won't say that are like static testing uh so when i mentioned static testing saying hey there's a fingerprint of something here and we check to see if your code's doing something like that and then we tell you if you're doing something bad versus something that's more like a learning type platform where it's much more dynamic about like how it's looking at your contracts uh fuzz testing you know if you understand what fuzz testing is of like trying a bunch of different parameters that go into your program to see if the predictable outcome comes out or something else comes out so like i know microsoft research has has built they're actually they actually have a plug-in that they've been talking to me about like hey should we put that out as part of like vs code or integrate it with some of your stuff that allows people to do like fuzz testing and things like that on their smart contracts i know like travel bits and a few other guys out there have been doing similar things right they have really cool tools for that um it does i will say that uh you know they some of them are free right you can just use them but you do have to kind of there's a lot of sharp edges there and that's not a negative thing i just mean like you really kind of understand have to understand how those tools work so i think there's definitely an opportunity there for us to make that a little more smoother like onboarding process for people to use them but definitely something you know you're right like and then when you do get to the point where you're going to have a billion dollars in your application then it probably makes sense to go pay those guys you know for the big audit you know yeah for sure and and with i mean like on top of the the open zeppelin contracts that have been audited on top of biddler and hard hat and these great tools now there's all of these other components in the ecosystem that are just becoming more and more mature and we have these new building blocks and each of these building blocks themselves are audited in some form whether it's now there's 40 million you know total value locked so it must be audited in some way or or you know you get a formal uh audit but one thing just during the hackathon and seeing the tools that everybody is using it's crazy to see the jumps and we see i mean we say it every hackathon the jump from the last hackathon because of this composability because of open source because of just the nature of how the ecosystem works it's just it's so exciting to see each new piece just come into into the world and let us be able to use it so i don't i don't again open conversation don't know exactly where i'm going but i just love the composability of the space and open source really kind of nudges that along a lot yeah and some of the components we've talked about before like we'll call them lego blocks right of uh you know not just the smart contract but the client application when you're using web3js or ethers or something like that you know having these composable pieces kind of like if people came from the web3 component where or the the web component world of web 2 having these little components that allow you to easily like kind of plug that in i think austin's done great work there as well i want to keep building on that ecosystem keep building more of those reusable components that people can use so not only can they go fast at the hackathon but if we get a lot of people using those things then again they become hardened they become you know something that you can really rely on to build production scale app you know one of my theories for open things that needs to be worked on it with this where what i'm doing in the scaffold ether is it seems like when i build a decentralized app now with all the tools ready to go i end up spending way too much time centering divs and getting getting getting the product to look right and i feel like that's that's still somewhere where we could do better and and you know like that's not exactly ethereum like the the ethereum stuff is coming in there but being able to handle like i put out like an allow list the other day where it's just like here here is an allow list that is connected to another contract you can add and remove addresses to the allow list super super simple primitive right but it's something that's like you don't have it packaged up with the ui you don't have those app those things packaged up with the ui so i keep trying to what what can i build what can i build that's kind of missing tooling wise but also provide the ui on top of it and just give you out of the box a bunch of components that a good example that we don't have yet that we need is just like an exchange you need to be able to you know deploy two tokens and set up an exchange and just plop plop that little component right into your react and just have the exchange right and i'll bet you like in three months that's that's available if it's not already yeah i know you could just like fork uniswap and get it going but i'm talking about like meant to be built like rapid application development like can i just grab an exchange out of the block can i just grab a bridge can i uh grab some kind of like lending mechanism and just throw that in there so i'm as excited as i am about the composability and the new stuff is it's like if we see these big jumps from hackathon to hackathon i can't wait for the next hackathon right 2021 what's what's the next big hack about i'm ready for it i want to see what kind of tools and uh other composability lego blocks get built there too yeah the other thing that um is something that maybe not on the surface seems like a big deal between like public and private has been gas so anybody working in the public space obviously understands what gas is because they're probably paying a lot for it sometimes and uh so what that means is like from a developer perspective is though we want to make the most like smallest amount of code or smallest amount of execution that we need to do there to keep our transactions as small as possible pay the least amount of gas those kind of things so optimizing for that beyond just the security implications but on the private side for a while it's been like hey we can spit up these private chains we'll basically like negate yes it's there but we're not really doing anything with it and it's a little bit of like hey you know i don't know that's going to lead us to a great place because ultimately like the evm uh in the current ethereum does have like limitations around like how much we can execute in one transaction that we're gonna do and i've seen enterprises like build code that's ridiculously big and they're like oh yeah we have to like jack this up because we can't execute i'm like there's gonna be some downstream effects of you having something that heavy running every time you do this thing you know so and also this future world you know that's not going to be feasible so maybe we should look at your code there and see if we can break that up or uh do something more simple or things like that so i feel like that's an area too where enterprises are learning hey maybe we should like think about things a little bit more like the public guys do at least from a gas perspective the the mental model there is good it's it's like uh when when i'm when i was building my games i didn't want to think about gas at all like you're saying i was in my private world i wanted to make the game a really fun experience and i wanted to build it on ethereum and use ethereum cool things but when it came to deploy it to ethereum there was no way that game was going to operate on public mainnet and i found i found xdi eventually a sidechain that was cheaper and it was like you know less security whatever but i was able to deploy my fun games over here and it made a lot more sense but i still like bridging like you're talking but bridging this idea of uh you know building it exactly the way you wanted it to but verse building it the way that like it works better on a gas intensive network one one example would be like the proxy pattern where when i go to ether scan and i go to inspect some smart contracts code i don't want to land and go look and find out it's a proxy i want to get in there and see what the guts of the the thing are but that's the way it works for gas right you deploy the the logic once and then you redeploy little little versions that are proxies but if someone wants to get in and inspect that they're going to find the proxy not the contract and so it's kind of like you you add these small layers of abstraction along the way for gas purposes to make the deployment cheaper but then for for the the noob that comes along that wants to learn more you've just made it a little bit harder for them to kind of like get that exposure and get into that too so it's it's it's a double-edged sword for sure yeah i think it's uh it's the same like it that this is not a new problem right so like yeah it's funny you mention games but like building video games when you're doing stuff like that sometimes in some critical code section you'll basically write some assembly code to do it because you're running on an xbox or you're running on ps4 or something like that and you only have limited amount of resources there right so you'll do that but then when you do that you know it's hard for people to read they're like what is this like why why we have this thing like this nice object-oriented programming now we're over here in sea world like what happened you know like or assembly you know and uh i feel like that's the same thing so i don't think there's like a magic bullet there i feel like i feel like build you know build what you want right let's build it right now but we should keep these kind of things in mind of like hey be aware like if we're going to move over to public mainnet let's not make such gargantuan code over there that's kind of break it up a little bit so there's a balance for sure you know it you hinted at it earlier is it you stop thinking about deploying it into the perfect world you're not going to have your little plus your little private blockchain like you need to be thinking about mainnet ethereum and thinking about how you even back to that using some other l2 solution or something else the the mental model definitely i i think it is shifting hearing these enterprise guys like i said earlier with that it's so it's so much fun to hear the the big guys say that uh they're going to start backing to ethereum and less less private chains where you get a uh you know control the rules and then then when you want to change something you're like well we just need to make the rules a little bit different over here like you said that's that's not going to work so it's cool to see it's cool to see things moving toward the the main net but also the main net also filled up earlier right we we had uh gas prices get crazy with with d5 which which maybe kind of could be we could we could be plugging for developers we're seeing a lot of great adoption on ethereum right like this is this is a cool problem to have because we're seeing so many new users come in and and they're financially incentivized in some way and they want to play around and they want to use new tools and use new products so there's there's a huge opportunity for great developers to get on the platform and build something cool yeah for sure and i think um as you said i mean the the goal here for us is like at least from me like my background like what i'm working on is i want to make that as easy as possible for the novices uh not get in the way of the advanced guys and so you know working with different guys uh you know we've worked with the truffle guys for for a long time still do uh open zeppelin you know we're very close with them the bible guys you know have come along and just a bunch of different like people building hardware stuff or like platforms like in fiore you mentioned alchemy's got some stuff out there too it's been really cool to see again i see them all as like big lego blocks it's like okay i need to do something on public i can just plug in fury in here really quickly and i'm off to the races like i can start doing that thing that's amazing because like you know you talk about years ago when you had to like stand up your own node it was like oh my god like you know yeah yeah you would to participate in the network you would download something and then like wait hours if not days for it to be synced up just so you could talk so you could start participating yeah for sure that's that's good but on the end the enterprise side again like not to plug baseline but that's been a great group of guys for those who don't know baseline's a project that's basically bringing that that world i think paul brody was on here talking probably earlier about there might be others but you know it it's uh bringing the enterprise and the public together you know to say hey how are we going to bridge that world how are we going to make it work for you know one of the big things i've been kind of driving over there and working on is identities right like we have identity systems that exist today in the web 2 world like azure id and a bunch of other things like oauth and things like that but what happens in this future we're all like because we we still do even if you're building a private network so let's say we're building a private consortium which is like a group of people who are going to like do b2b type scenarios together business to business then how do we uh you know introduce them right like how do we make sure that we can connect them in the network and we've done a lot of work around there like tried a bunch of different things you know some of them failed some of them good you know as we did that it was like you know we should be thinking about this from the the public side so whenever we're out here in the public mainnet how do we discover people how do we like have an electronic introduction there something that's reliable too and we can stand behind not just saying oh it's a hacker how do we guard against things like phishing attacks and things that happen when you start using things like decentralized ids so um you know for those who are interested definitely you know there's so many technical working groups that have spun up over there and we're hard at work on that stuff so feel free to join there's so much you can learn from a lot of my mentor sessions when we're when we're trying to get the mental model of like what the heck the evm is and what's going on learning from attacks like being able to to talk about re-entrance you almost have to talk about re-entrance to talk about the atomicity of a of a contract or of execution and and that leads to like flash loans and other things too but uh the the attacks i think are are just so educational in a lot of ways uh have you ever played like ethernet or any of the like the games that show you the the attacks have you gone through any of those i haven't used those i did the uh was it crypto zombies crypto zombies is another one right yeah yeah both of these both of these are on ethereum.org developers getting started i mean there's a there's a ton of resources there but they kind of take you through in a very gamified way like writing solidity getting your storage set up getting your functions going but uh then i i would plug on top of that that the ethernot series is really good i remember i was working my day job and i had just gotten home and i was kind of like uh you know the man and i sat down i started playing the ethernet and i got to the re-entrance and i knew what re-entrance sort of was but i didn't i'd never gotten my head around it and i remember the moment in the console log when i drained the contract and you get a big congratulations like that that feeling was it was so great it was it was better than any paycheck and i feel like that's one of the things that really got me into ethereum more was that that excitement and that uh that drive that comes from just although you are attacking a contract you are kind of being a bad guy you're learning kind of how the evm works at a lower level and you're learning kind of some of the gotchas and how it all works and i think that that's a it's a fun way to learn let me let me see if i can pull up any other resources for good uh tutorials to get through i i like the idea of the crypto zombies and i guess there's a lot right on the website too but i'm gonna try to find some other ones ethernet oh viper.fun was the other one if you're if you're a python person not uh javascript or i guess viper versus solidity right there's there's kind of both sides of all of these things that you'll find and again just ethereum.org developers is a great resource to uh land on and of course each build and scaffold eth yeah yeah these are awesome yep i'm just seeing those ones those are the ones that are on here though it was the viper and ethernauts and crypto zombies you should go play all of those if you're a new developer getting into it what else maybe like uh things that ethereum is particularly good at versus things that are ethereum is particularly bad at right like storage is going to be very expensive you've got 15 second block times like in terms of not reinventing another web 2 thing what what things have we seen in web3 that were very like unique to web 3 that kind of help a developer get a mental model for for what they what they could be building yeah from a composability standpoint to pick on storage for a second i mean the first time i saw ipfs years ago i was like well this is interesting um so basically i can i can just throw some data out here and i can have this thing you know essentially replicate in this p2p network that's pretty freaking awesome you know um so that was that was a building block we use quite a bit you know when you think about the web 2 world of like you know clouds and things like that that have storage uh they're all great but they you know they always have these entry points like these single entry points it can be attacked manipulated throttled all kinds of things and you end up with uh you know the results of stuff that happened with that but thinking about things a little differently around and i think what's really cool is like the clouds in some ways have changed right it's because you have like gateways and things right now to get into ipfs from you know traditional clouds which is pretty cool um so i feel like from that perspective like the storage thing was pretty interesting you know for uh a decentralized like a way a new way to kind of think about how that works um definitely in our sessions we deploy to a live network and i talk about like not even we can stop this thing now like this thing that we've created there's nothing we can like it's out there for good now and there's no stopping it and it's an interesting mental model to get over for for a developer like oh oh wow it's not like when you think of you know i've got my database and i stand up my database and a bunch of people go talk to it and it falls down and i stand up another one and someone attacks it like you stand up a smart contract and it's it's there buddy it's there for good yeah that's super cool i think i think something that people kind of like fall into a trap a little bit is you know again it's hard to kind of like especially when you first start with web3 think about it in a different way than you did web 2 and you start to fall back on things that you did in web 2. so i just say like people keep an open mind you know i'm always like looking around for different components that can help me more web 3 if i what i'm doing or more decentralize the you know in that way but there's certainly like things like on the enterprise side where there might be some things that are semi-centralized or something like that and i don't think that's the end of the world uh at least right now right i think i think we need some time there to kind of adapt some of those systems to come over and we're seeing a lot of oh i think i think like dns's work has been super cool uh sorry might have been me it might have been me no go ahead go ahead i think i cut in there sorry no i was just saying that i think ens has been one of those bridges too right where it's uh you know if we think about traditional dns and naming systems and then looking at how ens has changed certainly big enterprises are like looking at that now to say hey we need to be part of that how can we be you know a part of that from a registered perspective things like that so that's been awesome as well awesome awesome i don't know let me think of let's see what else the i'm trying to think of other gotchas that we i mean like numbers in javascript but that's not like when you're when you're tracking numbers uh as a gotcha as a new developer you you know that like these numbers are gonna be so big that you're going to have to use some library to track your numbers and you you don't basically display it as a float until it gets right to the user those those are kind of gotchas that we have along the way that aren't probably as as interesting the the off chain stuff that you're talking about is really cool about how you just need a signature sometimes a lot of these you don't have to do everything on-chain some things can just be signature based and you can pull these like voting mechanisms now that it cost a dollar per vote on chain let's pull these these voting mechanisms off let's have everybody just sign things using their keys and then have one you know one one transaction that puts those signatures on chain and and so there's a lot of like technology around that and it's it warms my heart to see the the user experience along with the the developer experience getting better and better and someone can just come in and sign a thing and just participate which is really uh really exciting for me yeah i think that's really powerful and it kind of ties in a little bit like dids and things like that having these on-chain anchored things that we can prove and always point back to but then we have some of the assets even like living off chain um super cool right and it makes a lot of sense right now uh maybe it'll evolve in somewhere somewhere from there but i think for now i think that's a it's a super cool solution it helps scalability quite a bit as you mentioned you know people building apps and things like that i'm trying to think i mean the other one that's i think has evolved quite a bit that was kind of a gotcha that we used to run into a lot and it's not as much anymore thanks to folks like metamask and such has been wallets um you know we talk about understanding what key pairs are and how to sign a transaction and things like that but then when you start talking about hierarchical wallets and things like that people like whoa what is this thing you know and it's an account versus a wallet yep exactly but i feel like and and there's been like a drive and i'm interested to see where this goes but like on the public side at least for a while like driven from mainnet has always been kind of you know hey we'll have a wallet concept um and then we'll basically have your app that's doing something right so a lot of times they would be separate right and you would say well we could have many apps use this wallet and and in theory that sounds good right but in practice it's a little bit like i think especially from the enterprise side they're like what the heck is this and they feel like they're being attacked or something they're like what is this other thing i have to download why do i need that thing it should just be part of my app um so seeing some of the evolution of like even what metamask is doing now where you can kind of like you know blend those through together like make your app just be part of it that's awesome i think that's uh that's going to make it the on-ramp for people using it not just developers but people who use the app they don't have to like download a bunch of different components they just have this one thing you know yeah i think that's it's kind of a tldr of our talk today is like tools are getting better products products are getting better everything is sort of becoming more and more composable every hackathon that is put on we see new new building blocks come out we see new paradigms invented we see new attacks so uh i'm just very excited about all this and big big thanks to the ethonline team for having us and letting us rap about doing what we'd love to do for best i don't know if there's any questions or anything we got a few minutes here but if there's any questions uh so thank you so much for that amazing conversation i was gonna say some of the same things austin you were uh you were going to talk about but uh you kind of front run me on that one um but uh there you go uh no this is this is exactly sort of uh our way to measure progress um the ease of initial setup being minimized every time we do an event or anytime somebody has to get started and that being as small and frictionless as possible is sort of the indicator from our side that the developer ecosystem is growing and it's actually ready to be even bigger so uh we don't have a lot of time for questions uh we are going to take a quick break uh before our next talk but um i do want to kind of point out that anybody who's gonna was listening to this thing and also to austin and kale uh york did a great job and kind of supplementing with a lot of resources on the chat and with a lot of links that are super useful so we do have a lot of sort of additional context into people being able to try and play with some of these tools and that's been an amazing addition to uh to this amazing annotation to this conversation so 