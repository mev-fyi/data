uh austin griffith i will let him explain himself a little bit better than than i probably can and he's got an extensive resume pretty cool stuff and he's going to teach you everything you need to know to get everything you need to get done during this hackathon austin the floor is yours awesome thank you thank you luke hey uh global hackers gm gmgm gm in the chat uh i am here to show you scaffolding i am a builder on ethereum i am not a gigabrain we have gigabrains building this wonderful protocol for us we as caveman application developers can build on top of this substrate and build really cool decentralized apps by just writing a little bit of solidity we're going to get into that today with scaffold eath uh you can drop questions in the chat i will be watching that uh but i'm just going to kind of dive in and start tinkering the goal here is uh show off scaffold eath show off how we could possibly put something on polygon and then kind of show off the tools and get you started for next steps we're going to speed run this thing because we only have about 30 minutes i'm going to share a screen and let's uh let's uh let's get started here uh yeah oh i do have the chat i want to have the chat up so feel free to throw questions in the chat there we go i've got it i've got eyes on the chat okay so scaffold eat we're talking about rapid prototyping in web 3. building decentralized apps quickly and trying them out see what works uh web3 is notoriously bad for good ux right it's really hard to find a good ux product with good ux in web3 because there's all sorts of stuff like this super slow asynchronous expensive database that we're saving to right but this this slow asynchronous database has some really interesting trust and availability assumptions this is always on right when you deploy an app here your app is there forever and not even you can stop it if you build it correctly and it runs on top of this and it's always on so let's let's dive in and look at building decentralized apps with scaffolding so scaffold eats is uh it's kind of like an adap decentralized app template it's got your back end with hard hat and it's got your front end with create react app it wires the two together but it also has a ton of handy components and then once you have that there are tons of forks that use scaffolding so once you pick up scaffold ethan you understand where things are you can go look at the 300 some forks of nft marketplaces and harvard taxes nfts and weird defy ape protocols where you lever up and weird dow and governance and multi-sig experiments all of those things built with scaffolding you know where everything is it's easy to fire them up it's easy to fork them making things very forkable is is something that i've been uh really hammering home so uh i'm going to kind of speed run the setup i'm going to assume that you can get node and mpm set up if you have node and npm setup you need to do an mpm install dash g yarn we gotta make sure you get the right yarn we're gonna use yarn for workspaces in scaffold eath so i just want to really zoom in on that line don't get the wrong yarn you can end up with a linux executable yarn that'll just get you in all sorts of trouble so we've done a yarn install and a yarn start if you just follow those instructions here with scaffold eath uh we've done a yarn chain and that spins up our local block chain so we can yolo stuff to it and try things out in the evm and then we've done a yarn install dash g we did the npm install just dash g yarn to get out all these other stuff all this other stuff going but now we can do a yarn deploy and if i go ahead and deploy that there we go contract goes out and now so here's here's where where scaffold heath really shines so you start out with a default uh smart contract and along with that comes an auto adapting front end so here is your front end let me actually zoom in on that a little bit more there we go and what i can do is i can go over here and i can add some extra exclamation points because it's bow tie friday and we're fired up and we're throwing down and i can hit save and i can hit yarn deploy and i can get into this dev loop where i'm editing my contract i'm deploying it locally and i'm seeing the changes live see that see that go and i can even do whoa we'll get out of there i can even do a yarn deploy we're going to do a dash dash reset and just force that same exact contract to get deployed again and we'll see a new address show up there let's do it again let's do it again watch for that address to show up okay there we go so now once you have this you have the license to learn you're you're able to tanker with solidity you're evil able to paste in uh each concept from solidity by example i love solidity by example let's see if we can pull that up and you can learn solidity by by simply like okay primitives and data types let's get into them we're going to learn about uans we're going to learn about addresses we're going to learn about bytes all of these things uh that are primitive data types as part of or as part of solidity and how do we learn them well we just copy and paste them in there right boom address default address okay let's not do that we don't want to start it out with zero let's uh put in our front end address right uh let's see here we go grab this dude's address paste it in right there no quotes around it boom yarn deploy now what should happen is our contract should notice this new address show up showing up and should there it is default address okay let's not call it that let's call it the uh let's call it owner right and this is arbitrary i could just call this austin or front end or something right it doesn't mean like owner is not a special name it's just an arbitrary name we we add in here so let me go ahead and deploy that and that should turn to owner so now we're deploying our smart contract and it has some arbitrary owner we're tracking and we're learning that by going through solidity by example learning these new solidity uh topics by just pasting them into our contract and tinkering around so the one of the first things that you're gonna do once you get in here and start building your solidity is write a require statement so i i guess let's let's let's real quick look at this what is this contract so far this is the default contract you get with scaffolding it's kind of like a tester you have some string purpose and then you have some function uh that lets you well what am i doing here it lets you update that purpose and what the heck there's a console log in there wait wait wait console log okay hold on what is that doing so let's go let's go over here and try to set the purpose i'm gonna grab some funds from the faucet and i'm gonna say hello world and i'm going to post that and where did that console log go oh wow look at that a console log thanks to hard hat right there in our hard hat note we see some some feedback about what's going on there okay so now uh i am going to let's let's just like quickly prototype this app and and and then look at like what this takes to deploy just because we're so uh limited on time so your your front end usually you're going to build out a front end a lot of times the front end gets pretty close to being let's say we're building a counter and we're we're creating an increment function or something like that you can easily use this debug for that eventually for your users you'll want to have a nice pretty ui but this lets you prototype that interaction uh let's let's just say we are going to go with a purpose and we're going to have we're going to make an attestation app right so we have this purpose and we let people set the purpose uh what we want to do here is we want to set up some kind of rule let's say at first maybe we would require that the message.sender is the owner but then then it's like locked up to only us can access that so let's make it more decentralized let's make it more like a vending machine right let's make this a payable function okay and let's require that the dot value is greater than or equal to 0.001 ether or something like that and if it doesn't work out we'll say not enough wow wow great great spelling not e in o there we go no no my cat's trying to get in here sorry kitty i'm live kitty i can't do it kitty you gotta you gotta just hang on out there all right here we go we're gonna deploy this new contract and we're gonna test this require statement and you'll notice that this set purpose changes look at that now we have this transaction value here so now when i say hello world if i don't send any value along it's going to throw an error saying not enough right so what i need to do is point again you guys hear the cat meowing then i i add that in and i hit send that time i paid for it right and something really interesting happens here the contract earns some value now there's two dollars locked up in that contract so we might need another function that's maybe called withdraw right withdraw and what what's that gonna do i don't know it's it's probably not gonna be payable but what are we gonna require we're gonna require the message.sender needs to be the owner right and and if it's not we'll say not the owner and if everything is right i want to send all the money from this contract and what do you do to send eth you go to solidity by example and you click sending ether you know it might be nice if it was just a sender transfer but actually the the syntax is a little wild for sending each because we need to control the gas in case we're sending it off to a multi-sig that needs to execute a little code but we're going to do message.sender.call and we're going to send value what's the value going to be it's going to be the uh this what what address this dot balance right something like this let's see if this compiles uh yeah i don't think we even need to use this let's see let's see let's throw it at the wall and see if it sticks please work please work all right there we go okay so now we have a new uh app the app requires that you pay to set the purpose and our owner can withdraw right let's make sure all of that works real quick i'll just say hello i'll send in some funds and then uh let's let's do a bad guy first bad guy how do you create a bad guy you create an incognito window you go to a local host it's gonna generate you a different burner wallet in the top right notice these two are different you grab some funds from the faucet and you try to withdraw see the withdrawal button is right there and it should say not the owner get out of here you jabroni okay now we come back over here as the owner and we withdraw the money comes out of the contract and goes to us okay so we've almost got this thing ready for production i'm going to pull out the console logs what do we want to do right before we deploy dang let's add some new financial mechanism what are we going to do okay let's make a um256 price right public public let's make it public so it shows up everything's public on a public blockchain let's let's make a price and let's set it to this this .01 ether right something like that let's put that up here again we're rapidly prototyping these ideas we're trying things and seeing what sticks now we're going to say got to be equal then greater than equal to price does it deploy let's see i want to make sure that price is okay here's the here's the mechanism i want to add here i want to say each time someone sets the purpose the price is going to go up one percent right 100 divided by right play price times 100. now we can't just do 0.01 right there's no decimals no floating points you got to do this and let's even like make sure we get the order of operations right okay i like this i feel like our price is going to go up one percent with each purchase deploys deploys first try let's go let's go real quick before we ship this to a public network let's go real quick and just test this out and make sure that if i put in that price and i send it the price goes up one percent then the next time i try to post something there we go that price is going up on a price curve we've got our app ready to go now of course you would build out a lot more front end here you would spend some time making this thing super pretty but for the sake of getting this out to a public network i'm going to assume that we've basically got that part built and and your your app works and looks the way you want let's real quick look at the front end just just to show that like there's this back in the smart contract it's getting deployed but over here in the front end uh you have this uh this really nice kind of setup where you can select what network you're going to and then you have this nice home.jsx where you can edit your your stuff at app home there's there's examples of like what the current purpose is what your balance is there's a lot of stuff here that shows you kind of some of the gotchas and if i zoom in on something like format ether right when you're going to display a big number you need to do format ether right let's see if there's a parse ether in here no there isn't when you're going the other direction when you've got like .01 and you need to put that to a big number you've got to do ethers.util ether.utils.parse ether just something that you'll get used to as you build these things out they're all here with examples for you so you can quickly kind of iterate the other thing i want to show off something that you've got built into your front end is eth hooks so we started out just with components and hooks built into scaffold eath and we realized not everybody's going to use scaffold eats but these hooks and these components are super powerful so we've carved those out we've cleaned them up shout out to srivan and bliss and mark and a bunch of other people that have helped with this but the the eth hooks package and the eat components package are going to be these nice clean uh go go look at eath hooks on mpm the the code is nice and clean it's type script he's writing tests for it just like all this stuff that that austin doesn't do travon is doing much better but check this out you you've got used balance use block number all these hooks that will help you kind of set this get the state set up in your app uh and and basically what do you do you you set up your ethers context where you've got signer provider account you can grab your local balance or or uh get i don't know what that status is you can get some information the use balance like it just loads your state up with the balance here's different ways to use that use balance right so so all these hooks that you're going to need to make your front end work are all here and ready to go for you and if you don't use scaffolding you should still look at eth hooks and check that out and use that in your app if you're like a hardcore typescript person and you are allergic to scaffold eth these components are still available for you okay let's pretend like we've built our contract we've built our app we've kind of built those two things kind of in symphony in parallel where we're kind of learning how the solidity works as we poke at it we're finding what works and what doesn't work and maybe this array of structs didn't feel quite right but we tinkered with it for a little bit and we got it right now we're ready to deploy to a public test net so uh it it's it's super easy basically what you do is you uh when we're deploying to hard hat when we're doing this yarn deploy it's just using a hard hat it's using a local blockchain it's using this like we get some free accounts with those but when we deploy to a public network we won't have those free accounts and this is all in the desk and it's easy to get to but what i'm going to do is yarn generate that's going to create an account for me basically create a local mnemonic and give me an address that i can fund and that will be my deployer account so if i do a yarn account that's going to show me a nice qr code for that and since polygon is a big sponsor i'm going to try yoloing this the polygon i think we may have some rpcs wrong but uh homie jason is in the chat and he's got me some better rpcs so if this falls over we'll just adjust a few things so i'm going to use my punk wall punk wallet dot io built with scaffold eat super forkable wallet connect up front i'm going to hit scan there and i'm going to scan this qr code and i'm going to send 10 of is ten dollars a polygon enough to deploy a contract i bet it is all right now i'm going to assume that that address has polygon on it and i want to make sure is it called polygon or matic in the constants i need to make sure i deploy to the right network it is called polygon okay and and there is an rpc so we're we're good there i think maybe i was looking at this wrong jason sorry i i sounded the alarm on the rpc here we go we're gonna we're gonna try to deploy a polygon and we'll see what happens so i'm gonna do a yarn deploy dash dash network polygon right i've tested all locally i've played around it looks good it works well how do i deploy it to a public network super easy yarn deploy and then that network here we go oh no the json uh is definitely not liking that okay let's try let's try an alchemy key here uh right here i think let's try this let's try this hopefully i'm not leaking keys no no invalid json response received unauthorized okay uh should we try mumbai let's try deploying to mumbai oh oh oh oh oh i'm in the wrong config you're right jason jason live good call i need to be over here there's okay so there's two different configs there's two different there's the front end and the back end the back end is hard hat you've got constants there the front end is react i was over in the react constants i need to be in the hardhat constants all right let's look is it called polygon here let's look here to see if it is called yeah it is okay oh yeah there we go there we go we've got a weird url in there i don't even know how that got in there but let's pull that uh out i don't know who put that there but there we go now let's oh wait that's is that polygon mumbai i think that's mumbai i need here we go yeah yeah i got it i got it i got it wrong one here we go you gotta get i don't know why that was using morales okay yarn account nope that's not what i want i want yarn deploy two polygon please work third try come on now come on now deploying contract oh man what now what now intrinsic oh i don't have enough money really what's the gas one two three one two three that should not be that much let's check maybe we don't have enough ooh what if the we're looking for polygon here do we have a polygon balance gotta have some polygon uh wait uh let's see come on where is it there oh it says i have zero okay so maybe the burner wallet didn't send hmm let's try that one more time make sure i'm on the right network it is on polygon it did sid polygon 2 d24 uh strange strange strange i'm not sure let me let me try it one more time we might have to just go to another network i would hate to do that but i think let's see uh let me grab let's see let's let's just send some poly let's make sure d2 for uh matic let's send somatic here we go this address send 10 that should be enough and it should be gone right like five seconds later i'm assuming that account now has matic on it uh let's try this deploy in five seconds let this finish come on kind of pushing the maybe maybe there we go okay so maybe my punk wallet doesn't have the right rpc for polygon either okay now we've deployed our contract live we've got seven minutes left so like i said we've got the front end and the back end right we've basically deployed our contract to polygon that's our back end now our front end needs to adjust it needs to point to that new network so over in the front end i think we've got that right now i can go to app here's the change here's the one change i'm going to make in the front end i'm going to change this right here to polygon now assuming all your rpcs are right sorry i had to dance around those it should be just a couple things you need to change now our app is pointed at polygon now we're using that oh no it's not oh yeah it's connecting we just don't have okay and now at this point is a good time to bring in your meta mask too right you can connect your metamask hopefully this starts to show a balance there we go okay so the rpc is working we're just waiting for this contract to deploy is is really the case here i wonder if i didn't do enough gas here is one is one going to even be enough anymore on polygon i mean this has changed and it's gotten more expensive let's like jack this up to five and try again let's see i don't know increase the gas yes please go get it okay okay there we go our contract is deployed okay cool so now our our app is up on polygon and there is uh the contract so what i'm going to do is start a yarn build i need to get that going because it's going to take a second it's going to build our static site and let us deploy it but let's go play around with it like i said now you can now that you're on a public network you connect that metamask quit messing around with burner wallets oh polygon gas jason says we probably needed 3.2 or something yeah it looks like it increased it so we got it we got it deployed okay so our contract is now out on polygon our app is pointed at polygon it's building we're close to being able to just deploy that thing and let someone but let's let's just tinker around with it real quick and make sure this works so austin griffith wants to say hello world uh which version of hard hat uh i could find that out uh let's see hard hat dash dash version maybe let me no mpx hard hat version we try to keep up with heart yeah 6 14 14 may not be the latest latest but we try to keep up with them okay so uh austin griffith is going to say hello world he's going to spend 0.0001 polygon it's going to prompt me all right make sure we're on polygon matic there we go now that transaction should get processed in a few seconds we should see uh the new purpose get updated and we should see the price go up one percent now our app is working we're thinking you're tinkering with it there we go the price went up again right and i can say hello again this is this is what it's all about is being able to rapidly prototype throw these ideas out there and try things see how they feel see how other people use them get get other folks to use these and by the way going back to that punk wallet maybe maybe my punk wallet wants to say something right i'm gonna log out of there i'm gonna go back to uh my punk wallet on polygon it failed this earlier i'm not sure why that happened i'm gonna hit scan look at this i'm wallet connecting in with a punk wallet oh a browser-based wallet i've just logged in as punk da austin griffith and let's see he's got his 30 i don't know why that didn't work okay this is punk af and what are we going to spend we're going to spend this much money and when i hit send here it should prompt me over here yep yep there's that transaction and i hit okay we just wallet connected in with a a a browser-based wallet and using scaffold each so using a very forkable wallet you can support that wallet and and have a nice web wallet and connect to all your apps uh last thing here we go yarn surge ooh what are we calling this uh dash dash domain i'm going to call it uh it's kind of like a tester right i'm going to say a test store a test door oh i like that that's good i'll test okay dot surge dot sh and here we go now we're deploying our app live so we've got our contract up now we've got a front end going on and now anyone in the world can go to attestdoor.search.h and they can put in a purpose here please don't put in any dirties because it's going to be up on my screen for the next three minutes don't do it don't do it but here is the link i'm going to paste it into chat and now anyone can go to a testor dot surge and they can connect their wallet and they can talk to that smart contract and that app that i created and let's do that real quick just to see that and again that's it's not just in a tester app and a tester app with a price curve that we built we added the price curve in about 15 seconds right it was just that extra little bit that we added right here that gave us that price curve and it was sort of sort of like a last minute let's put a price curve on it okay let's do it and and so it's there's a lot of like just like playing around prototyping trying things i'm seeing if anybody has written anything dirty yet they haven't great okay awesome hearts hearts hearts hearts parts send there we go we're all using a decentralized app that i built in like two minutes even with a bunch of things breaking right this is what scaffold is all about so google scaffold eth you should be able to find the repo pretty er pretty easy uh get into this routine where you change a few things in solidity you go you go to solidity by example and you look at some of these topics you pace them into your contract you you tinker with that front end uh here and you kind of poke at your contract and make sure wait did this work uh i think we're still waiting for that to go through might be trouble with the rpc too rapid prototype your app first first get scaffolding down learn solidity but then once you have that and you're able to quickly iterate on things then it's like the world is open to you now this is just the starting point now that you've got the starting point scaffold eth is also not just a starter kit for learning but a starter kit for building apps and it's very very forkable and anything you build with it then becomes very very forkable also right so all these people know exactly where your contract is and they know where your code is they know where that home.jsx is right so then what we've done with this nice little like this is sort of like a dap starter kit we've used that to create a whole bunch of other starter kits uh optimism starter kit or a proxy factory simple streaming uh oracles nfts sign in with ethereum there's so many different example branches seriously if you go let's let's go to the scaffold eth org so that's just github.com scaffold eats right scaffold dash eath and i'm going to scaffold eat examples i'm going to paste these into the chat because i want people at home to go check this out how many branches 262 branches let's go look at the uh how do i look at the active here we go here we go you're not going to be able to see it but ooh what what do we got like right here like ether scan starter kit a token multi drop a multi-sig zk circon starter kit a zk game example uniforcer i don't even know what that is retro pgf funding with with optimism some matic starter kit some avi thing don't know what it is there's tons and tons and tons of examples here where you can search for the thing you're looking what if you're looking to learn commit reveal let's just say what the heck is commit reveal we want to learn it i'm going to go to scalable examples i'm going to go right here and i'm going to type in commit look at that there's three different commit reveal tutorials that you can get in here and follow all of these have these nice readmes that are are focused on helping you get up to speed and figure things out look at all this great information all right so uh lastly as you're building cool things there's even incentivization mechanisms i'm streaming to builders that are building prototypes and and products and tutorials and templates for other builders so if you happen to get you know that circomb starter kit we saw over there definitely yoloing e to whoever built that right i want i want more and more and more of these composable think generic components that we can grab off the shelf and make some kind of product or prototype out of and this is the this is the way to do it this is the way to do it get scaffoldee tinker with solidity then grab some branch that gets you dangerously close to the product you want to build tinker with it three or four examples of it throw it at the wall see how people use it and iterate on that post that repo back i'll yolo some east to you and we can create this kind of like nice cycle of development and then kind of stepping up from that is the moonshot collective beyond build yield we have the moonshot which is focused on dow tooling and prototyping so as builders kind of look at these things they could get scooped up into moonshot or or other orbs in the space that are looking to build these things but really i'm talking to you builder i want you to build your own thing i want you to take scaffolding off the shelf i don't want you to go work for sushi i want you to build the next sushi and i want you to do it by just grabbing scaffolding tinkering with things and learning as you go and then finding some of these projects and prototypes that you can fork uh like the punk wall that wallet that i was using there how do we how do we get the punk wallet well i'm guessing we're gonna go to scaffold ethan we're going to type in punk there it is there's the punk wallet this super forkable web wallet with wallet connect first is right here you can fork it and in 10 minutes you could make bradwallet.io which is a punk wallet that uses the rad token right so so much stuff we can do there uh and and get stuff going so thank you all this has been a super fast speed run check out scaffold e check out speed running oh i forgot one shill one shell oh oh i gotta i gotta shield this i gotta show this i'm talking oh shout out so there's the rad wallet i was talking about speed on ethereum once you get scaffold once you get the syntax down once you get some of these these first and initial things go speed run ethereum i'm gonna paste that right into the chat speed run ethereum helps you get uh both your footing with the tooling but also with ethereum ethereum is tricky and you need to learn what works and what doesn't and what people are building with and what what kind of stuff you can put out there actually going to work speedrun ethereum takes you through that with a with a curriculum that teaches you the superpowers of ethereum and the gotchas so you'll just take on some challenges there and then there's like a multi-sig cohort there's a dex building cohort there's an nft building cohort so as you get through those first challenges then you'll drop into these rooms with real humans that are going to help you build through these things so please check it out check out scaffolding build something quick and fun with it check out speedrun ethereum check out eth hooks check out build guild check out moonshot whoop whoop happy bowtie friday hearts hearts arts hearts what's up luke how you doing man are we good oh my god i don't even know how to follow that up that is the best this is the best bow tie friday that i've seen uh i need to get a bow tie and i need to be there for the next one thank you so much to everybody for joining us today thank you as always to austin it's been an incredible presentation as usual um i'm gonna post some of the links you shared in the discord in case anyone needs to see them again as as a reminder the zoom chat's gonna be closed after this so i highly recommend connecting and discord continuing this conversation keeping that energy up and kicking keep building go build something awesome sunday is going to be insane right what sunday at 6 p.m or something like that sunday evening oh yeah we're going to see some scaffolding builds i'm sure you will i'm sure you will thank you everybody um we have another session coming up at 2 30. so i'll hope to see you all there we're going to be closing this one right now thank you again austin 