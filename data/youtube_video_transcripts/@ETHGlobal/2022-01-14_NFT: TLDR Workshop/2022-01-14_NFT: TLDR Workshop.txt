for nft hack 2022 we have the esteemed austin griffith you're going to do his uh tl dr workshop with that i'll hand it off to austin um he'll take questions uh you can put him in the chat and we can save some questions to the end too all right take it away awesome thank you for having me uh yeah i'm austin griffith let's go i'm just going to share my screen and i'm going to dive in but like my plan was to just do a quick tldr of just kind of like a high level of nfts but the chat is open i'm i don't know if there's youtube chat but i have the zoom chat here so if you uh want to ask a question throw it throw it in the zoom chat and i'll keep my eyes on that but really i think what i'll do is just kind of share my screen and go through just a tldr of nfts so too too long didn't read what what is an nft it's it's kind of like an ownership layer in a smart contract right we're talking smart we're talking decentralized apps we're talking smart contracts we're talking ethereum i'm assuming that you already are are in that far so an nft contract is just like an ownership layer if we get in here and we see the code we can see that we're going to keep track of these items one at a time and instead of with a fungible token we'd keep track of them like austin has a balance of 10. in this case we're going to say there's token 1 and token 2 and token 3. and each of these tokens has some unique information and there's an owner to that token one is owned by austin token2 is owned by andrew right so you you have this ownership layer that's almost like a lookup table of who owns what and and then also like what is the cool unique information within this token that you own and we can kind of get in there and look at that but that's the the token uri is what it's called you kind of just get used to knowing that there's this token uri that each token has that links usually to a json manifest that is looks kind of something like this with an image and a description and an external url usually you take that information you put into ipfs you get a hashback and you say that's your token uri and then in here is some kind of link to the image that we would display for for that in ft so what i'm going to do is i'm going to start with scaffolding if you haven't heard of it yet of course i'm i'm here to shield some scaffold scalpel deep is like a decentralized app template helps you quickly get your decentralized app up and running uh i'm going to dive into a specific uh subset of scaffold eath these scaffold eath challenges and i will probably throw that into the chat if i can find it let's see oh here we go here we go uh here we go oh yeah there we go uh boom link in the chat i'll all uh maybe you remember to put that in the notes of the youtube or something i'll keep a little list there but here are some challenges basically scavoli this is app builder there's 250 different branches but what we're going to look at today is just the very first challenge that i put forth and it's basically just getting you used to uh scaffold eath but it's also going to teach you through the mental model of setting up an nft and what that smart contract looked like looks like where your assets needs to need to go so so let's dive in so uh i'm going to i already did a get clone and i've pulled it down so i've ran that i've run that command already uh i cd in and i check out that specific branch and then there's a yarn install and that's going to install uh the the dependencies and then yarn chain and we'll have our own local block change this is hard hat and since since we're going to like deploy a bunch of times or a couple times we're going to try things out we'd rather not do this on a test now so first when you're building you're going to be talking to your own local blockchain so you can do whatever you want there and it's not not too expensive or anything okay and then i got to get this out of the way for a second there we go then we'll go over here and we will yarn start and that's going to fire up a a front end for us so all of scaffold eat comes with both your hard hat in the back end and then a react app with a bunch of components and hooks and all these handy things that you'll need to build your app on the front end and it will load up at localhost 3000 when it gets here now every scaffold lead comes with something like this you're going to have a contract in your hard hat folder so there's a template contract and thanks to open zeppelin we we can basically just import in the erc20 standard and it's it's a little heavy there's some there's some extra stuff there and you can really dive in and learn some more about this but this is a tldr we're just putting something together here so so we can kind of stand on the shoulder of giants we'll inherit the erc 721 standard from open zeppelin and then it allows us to basically be in control of okay what's going to happen when they want to try to mint one of these nfts well we'll we'll increment the the token id right and we'll safe mint we'll make sure it works and then we'll set the token uri and that's that little hash that we have and then we'll return that token id so so basically anybody can call this mint function and and you'll set this up you'll kind of program your smart contract the way you want and to just like dive in on that just to pull that thread a little bit this is kind of the the super power of ethereum is being able to innovate quickly make small changes you know a single line of solidity in a smart contract can create a whole new financial mechanism so that's what you're kind of doing here within you you kind of start with this standard nft and you say okay what are we going to add here are we going to put a price curve are we going to maybe have the thing rendered in in the contract are we going to make an svg so it's there's a lot of stuff that you can do and it really happens at this level this is where the innovation happens you're going to be changing a little bit of solidity and and making a whole new nft and figuring that out right we could even like do something i wonder if we could just like revert right here or something right here right or throw and that would cause it to uh not be a transfer so like that right there i don't know if that's actually gonna work i will have to compile it and see but i can add a single line in there and say this thing can't be transferred it's a non-transferable nft right and we just added that in one line so so there's a lot we can do here let's get let's get it started and let's get in the kind of like the dev loop where we can uh yarn deploy i think is the is the third step let's go look at the yep so we installed we brought up the chain we brought the front end and then we deployed and you can see now our contract deploys now if i do a yarn deploy here's a little gotcha here it's going to reuse that same contract it's going to try to make sure that like if we're deploying to a public network that it's going to just not over and over deploy so if you really want to do something like that you can just yarn deploy reset and it's going to ship that thing again and again and again and we can because we're on our local test net and we're not worried about spending gas we can deploy our smart contract as many times as we want so here's here's the front end and and let's actually let's do this one more time let's go to the debug contracts so we can really see that that smart contract is going over and over again look over here and on the right in in the front end here we should see a new smart contract show up let me do that again i'm going to deploy it again just deploying contracts nilly over here what are we doing and then now watch that address there are our collectible updates right so we're redeploying that smart contract every time and and the reason is so we can kind of tinker with this code and we can see it in the front end and we can poke at it and kind of learn how it works and we can add new things new features figure out how we want it to work so here here is challenge zero let's see let's see where we are here we go through and it says open up the front end ah okay so the first thing we're gonna do is learn about gas and wallets within uh scaffold eath and what it has you do i think is open up like an incognito window that's the way to go totally okay so if i open up a new one and i go localhost 3000 now what we'll see here is there's a different address if you look up in the top left here and then we look up in the top right here there's two different addresses here see how we got yellow we have like yellow green guy here and then we kind of have like purple pink blue blue pink guy here so either either one of these can just like click this button grab some money from the faucet you can even grab that and paste it here and get money from the faucet you can even like maybe copy this dude's address and then open up this dude's wallet see how there's like that nice blocky preview let's send him ten dollars and ship it right and and by the way like scaffolding comes with all this stuff out of the box so things like an address input if i were to say the top whoops not let me do that oh that's a that's a bug we'll have to fix that vitalik.e and it should resolve that and then let's say i want to send him like let's switch it back to dollars and say ten dollars of test net eth so you have wallets and you have a lot of other stuff that comes out of the box with scaffolding let's get back to the nfts though so so we've got an account we've got yellow guy and he has an account and he has plenty of money and then we got blue blue guy over here blue purple guy over here and let's just go ahead and mint an nft with this guy and that's going to call that mint item function and then let's go ahead and copy this guy's address and now we have this cool nft on localhost right it's not it's not out there all the way but it's like it's running on an evm compatible network we've minted this thing then let's see if we transfer it we can transfer it over to this guy hopefully and it shows up over there okay that's that's basically what you're going to run through in challenge zero but i kind of want to like dive in depth a little bit more and kind of like tinker with like what you're actually doing here as you as you build that thing out so let's see let's go to the challenge what else does it do it has us do some minting sending around okay and then we're deploying okay so let's tinker around a little bit before we do any more deployments what do we have about 15 minutes left awesome uh which branch did i start with it's this it's challenge zero it's the challenge zero branch if you're if you're uh looking for that let me put it here there is the branch i started with right oh oh oh right there okay cool sent to you okay uh so let's let's look at like the bare bones of this this let's let's get into this thing right let's let's look at this this token uri if we're going to tldr and fts we kind of got to say okay here's a smart contract it's keeping track of basically this is a token id and it's owned by this one but but it owned by this address but what we want to know is how does this token id work how does this token uri work and so let's just debug this let's go to this debug contract and let's see where it says something about get token uri right so let's get that token uri for number one so scaffold lets you kind of poke at your contract and say you know what is the token you oh it's not working i don't know what the token uri is for number one uh do i have to do token two or something what did i do wrong here let's write let's try minting another oh maybe it's token zero maybe it's token zero okay now let's try token one yeah there we go okay cool so it must have been token zero yep okay so token one token one is going to give us back this address and what the heck is this thing right well if we paste it in and go look at it it is an ipfs hash going to the ipfs gateway and it'll take a little bit for this to load and if i was running my own ipfs node over here let's see how do i do it i think it's ipfs daemon let's see if i fire that up if i can like even ask for uh this information locally and then i'll say ipfs get and then that hash maybe it's gonna try i don't know so we're searching right now so so this this thing has been uploaded and actually i think i have in the front end we have this cool yeah here we go okay so this this is what that manifest looks like it's basically a json file with a description and an image and an attribute and we can upload that to ipfs and ipfs gives us back a hash then if and then we can put that hash into the the nft and that's the thing that basically you own right you own the kind of the the the link to this manifest of this information but what happens here so if we look at this hash let's just see what it ends with 9 1 d let's change just like one little thing right instead of green let's say the background is red now watch what happens when i upload this ah a different hash right so the content that's in ipfs is content addressable it's basically going to change it's immutable in terms that you'll write it you'll you'll save it to ipfs and it'll just be on your machine you have to figure out how to share it and pin it and incentivize others to share it if you want it to proliferate across the web 3 right but you have it on your local box then and then if you change any little thing you're going to get a new hash and so the the content is immutable and and what i'm saying there is if anything changes the address to it will change so by putting this information in ipfs and then putting this hash into my nft that that data is now immutable and kind of like the link to it is stored on the chain so if any of this information changed that hash would change and therefore it wouldn't be that nft that's that's on chain so that's kind of like a good distinction to get into about ipfs oh look there's even a download page will it download oh look at that there's the description very cool did this guy ever finish he did not let's let's try well can i download it here nice so within this you've got an uploader and a downloader you'll want to look at the metadata standards and really understand that you can do cool things like putting in youtube urls or mp4s uh but but that's how you set up i was going to draw something in nifty ink too and make one but i never i didn't i didn't get to it oh there it was there it was uh oh okay well it was there we we loaded it from ipfs for a second from the ipfs gateway so you can always go to ipfs.io ipfs and then give it your hash i probably need to zoom in there but there's basically the the manifest that we're talking about right so you'll craft a manifest you'll upload it to ipfs you'll get a hash back and then you'll put that hash in as the token uri and and what we have here is we have like a little mint uh um ui right there's a there's a user interface for you so you can connect your wallet and you can mint these nfts and the way it's doing it is it'll mint basically there's a set of like 10 and for any given user it will start from zero and kind of mint through the different uh images so this is a really good like local way to just tinker and play around with how to build an nft and it'll get you started and it kind of has the artwork there so it'll it'll kind of like have everything ready for you so you can deploy things and just tinker around you don't have to like come up with the artwork but eventually yes of course you should be as an artist bringing in the artwork and uploading it but in this challenge basically your job is just to get these things minted get them sent around but the whole thing is all about tinkering and figuring out i kind of like that that idea of making a non-transferable nft by just like reverting here can i just do that is revert legal here's how you find out you make a small change and you go over here and you try to deploy it and you see what happens right i don't know if i can even revert in in ah it did it didn't it didn't break okay cool so now we've deployed a version of this where i'm thinking they're non-transferable so if i try to mint one does it oh no it does okay so it won't even mint because it's probably doing a transfer ooh okay so maybe that's maybe that's not gonna work maybe we'll have to do something different there i was thinking i could break the minting process by changing it uh by just breaking that but maybe that mint has to happen uh yeah so maybe maybe i won't be able to let's make sure i can remint and make sure this works again okay it works again all right let's let's make a difference let's make a different change let's do this let's make a unit 256 and we'll call it price and we'll set it equal to 0.0 ether okay and then what we'll do is we'll make this mint function payable and we'll make the front end have to pay us a little bit of money to put that in and then we'll do something like uh price equals oh well first we'll have to require right we need to write a rule here that says uh the message dot value the money the money basically coming in in this transaction needs to be greater than or equal to the price or we'll say not enough okay and then we'll go ahead and do one other thing and we'll say price equals price uh times what 101 divided by one so it'll go up by one time you purchase something let's see if that that uh compiles and deploys so at first we just had a little nft contract that let us click a button and mint nfts and with one line of code or maybe two or three lines of code we added a price curve and we set it up so now you pay to mint an nft and the nft price goes up uh by one percent with each mint so uh the the last thing we would do here is we would dive into our front end and we would find that mint button and i have no idea if i could find it in time to figure this out yeah sure yeah sure let's see what are we doing yeah we're calling that i think i need to send in a value of like 0.001 for that first one now what we wanna do here is probably like track the value and make sure we pay the right amount but let me see if i can just hack this together to get this first one to oh it's still saying not enough way away let's see if it still says not enough even when i do this oh no it's underflow let's make sure underflow what did i what did i break here maybe i need to do something like i don't even know what i broke let's try let's try deploying that real quick we got like seven minutes left and then we can open it up to questions uh what i want to do here is like finish this off by pushing this out to a live network that kind of like mimics a test net somewhere but i was hoping you know what i'm gonna i'm gonna take the price stuff out just out of simplicity showing you you can uh kind of iterate quickly on this stuff but i'm gonna take out that mechanic i'm to say we're not going to pay for it right now i'm just going to yolo these to a test net if we can get it to work let's see okay good all right so it's it's basically a a symbol nft where it's you pay the gas to mint them uh the ipfs stuff is loaded up i think there's like a script in here somewhere you can get in and like dig into this code a little bit more and learn a little bit more let me see if i can find a good these upload scripts are pretty handy no that's a different one but what you do usually what you'll do is you'll create a a script that loops through your assets and uploads them to ipfs gives you the hash back and then you put those hashes into your contract somehow okay let's let's deploy this thing let's say you've tinkered uh with your your scaffolding build long enough you like the way it looks you're ready to deploy it to uh uh a public network so what do we do well we're gonna go and work we need to create a an account so you'll have to follow the the instructions that does get to this and it does have a yarn generate yeah it does okay but i'm gonna just kind of do it on the fly because we don't have too many too much time here so i'm gonna do a yarn generate and yarn generate is going to create a local deployer mnemonic and then i'm going to say yarn account and that's going to give me a nice little qr code of my account then i'm going to take a handy little uh punk wallet built with scaffolding and i'm gonna scan that qr code and send some rinkaby how much send 599 dollars of rinkaby send oops oops i did it wrong send there we go all right so some rinkeby is is in flight to our deployer now uh we're ready to go if i do a yarn account again hopefully it'll say that we have some ring to be i'm just going to assume that the wallet and the send and all that is gonna work be careful as a developer sometimes some of these test nets fall over and you're doing everything over here like why isn't this working it might be the whole test net but usually it's you okay here we go let's let's deploy this thing so i'm gonna say yarn deploy i'm msa dash dash network is rinkaby and here we go now that's that could be mainnet right like if i would have put mainnet into this account and i said yarn deploy dash dash network mainnet it's gonna go just like just like it just went here and we can go check that stuff out but here's the change you need to make in your app so we sort of pointed the the satellite the deployer satellite to rinkaby we need to point the app satellite at rinkaby to go talk to rankin because if we go over here we can see that we're still talking to localhost so let's go to our app and let's find the target network and let's say rinkeby one change that one line i change one line of code and now my app is pointed at ranking now every address in my app anywhere there's an address component if i click that it's going to go to the rink of b block explorer it's going to use all the rinkeby stuff i switch that to mainnet everything works on mainnet so so deploying to different evm compatible networks is going to be very quick uh let's see i think let's see is our contract out here is it like on rinkaby can we go see it uh no it it is not it is not there yet but maybe maybe just etherscan hasn't found it yet like maybe it's there let's check uh i don't know let's just try to mint an item right okay so now now you've noticed i haven't done any meta mask stuff because i've been using burner wallets now that we're on a public network now is the time to connect your meta mask and it's going to say oh you're on mainnet don't forget you need to be on rinkaby those little network warnings and and pointers and this nice little button to make this automatic that comes out of the box with scaffold eath and it's just nice to have here as you go through those challenges i don't know if our smart contract has deployed i'm going to try to i'm going to try to hit mint here we're going to see what happens but i kind of i feel like it's like 50 50 whether or not this thing is going to actually mint let's find out wait 50 you got the nice block native notifications now if we click that i bet it'll take us over to a transaction all right here we go let's see let's see if this thing means and so now that we've got the front end built and ready to go you've deployed your smart contract you've pointed your front end at rinkeby but you need to do one more thing you need to do a yarn build and this is going to create a static version of your site and prepare it to be deployed to some kind of cdn or some kind of like static uh web server but oh look at that look at that buffalo on wrinklebee i bet i can transfer it too that that was the other thing is let's see if i do vitalik we were just tinkering with whether or not we could we could deploy these things i'm going to try transferring this to vitalik and see if it goes i don't know looks like it's going looks like it's working looks like it's working and again this is on a public test net that mimics mainnet so if you get in and you figure out how to do this on a test net it's going to work the same way on a mainnet just a little bit more expensive all right let's see what we've got anything anything in the chat that i need to be i think i think we're looking pretty good if you've got questions drop them into the chat i think for the last 15 minutes we'll kind of like open it up and talk through it but what i want to do is build this app and actually put it out there live so other folks can go in and spend a little wrinkly and mint yourself your own little buffalo painting uh and and i'll do that kind of as we go uh i think there's a q a right now maybe there's a q a maybe not maybe we can tinker with some other stuff i probably could have built that price curve in i think we're supposed to go for the next 15 minutes uh if anybody has any questions uh drop them to the chat or just like shout them out i'm down to to talk some more uh you guys let me know which version of node good question let's look i think i'm actually like on 14 right now let's see i i think i just saw someone unmute if you have a question shout it out yep on version 14 but 12 works great what's the question let's hear it yeah yeah how these collections works like uh all and if you have collections collection is like just contract and that's it oh there's something else uh so i i i would say yes a collection is a contract like if you have one contract and then a bunch of them are minted from that but i think open c like with the way they meant it they meant it all in a single contract and you could have multiple collections in their contract but i think the answer to that is yes in general a collection if we go to open c in general a collection is going to be let's go look at the loogies one of my oh it says i'm on a test net oh wait we can go look at this on a test net that's even cooler let's grab our smart contract address and let's leave it on testnet's openc and what do i do create what do i oh yeah sign in messages we're signing messages but yes i think the answer to that is a collection is almost always a smart contract just just one like just the nfts deployed from that contract but i think there is some other cert situations where you can have multiple collections within a contract oh that's not wait wait i want the little thing where it's like you already have deployed maybe it's already gonna work though right let's go let's let's go let's go to my profile i probably have yep there we go it's already there there we go there's my collectible there's the zebra let's see and if i click on this it's gonna take me to that and if i paste in the smart con that's it yeah oh and it's probably owned this is probably owned by vitalik now that's that's so cool and if i look at token number one it's a zebra okay so here yeah here's the collection you can even see some of the properties the background is blue and the eyes are googly uh the app is about ready to deploy i'm gonna go ahead and ship that uh while we're while we're waiting but if you have oh there's some good questions here hold on hold on let me read let me oops sorry about the mic let me read what's the question regarding ipfs and uri storage hold on how okay how do you automate here we go this no this is a great question how do you automate linking the uris so basically what you end up doing is you create a deploy script and you deploy your token but then within your deploy token you can grab your collectible and you could do something like dot mint mint item or or you uh you know have some other scripting or or you have it built into your contract where whichever you know the the first one that's minted we'll use this hash the second one that's minted we'll use this hash the third one that's meant to be used this hash but but really i think the answer there is like how do you do it for 100 is you write a script and you automate the fact that it like grabs the image drops it into the ipfs gets the hash for the image then then crafts the whole uh the whole manifest and then puts that into ipfs gets the hash for that then it takes that hash and puts it into a handful of different things it could be directly into the nft contract it could be into some kind of like merkle tree that says what are legal you know mints there's a lot of different ways you could do that like how you get that in but basically the answer is you write a script to do it and there's there's scripts here to to help out with that hopefully hopefully that that helps answer that question oh royalties this is another really good one so almost always royalties are basically built in and centralized they're they're they're centralized to the marketplace they're almost never built into the contract because it's it's a complicated thing let's let's say we built royalties into the contract we could say something like okay well every time they transfer we want to send you know two percent of the royalties or something like that if if you do that uh here there's the the nft contract itself has to hold value so and what you could do is just maybe you have a bonding curve maybe maybe these salt these things are bought and sold on a bonding curve and every time they're transferred you trickle some of the value that's locked up in the bonding curve to the artist just by hooking in right here and doing that right but without this the in the nft contract itself holding value it's hard to build royalties directly into the nft it's been done people have people are trying it it's something neat to check out along with like svg entities and crafting nfts and l2 nfts and uh so many other like gamified cool nfts that are happening right now but yes you could build royalties into your nfts and that's a good thing to be thinking about for an nft hack is how you could build those those nfts in awesome awesome awesome okay so uh i'm going to yarn surge surge and this could go anywhere but we'll do domain and it will be uh i don't even know austin nft dot surge dot sh let's see if this will even work it's probably a taken domain no one owns austin nft.surge.sh so now you at home you can go to austinnft.search.sh and mint yourself some fantastic rinkabee buffalos you can get in here and connect your let's do it with wallet connect right let's let's do that so i've got my i'm back to my little punk burner wall here let's go wallet connect let's hit scan with our punk wallet a web wallet that can do wallet connect that is fancy now we're logged in now if i go here and i hit mint nft uh uh it's not triggering it did there we go there's the transaction and i hit go yes i would like to invent that in ft and now punk dot austin griffith threw a punk wallet on my phone through wallet connect minted in nft on us on a test net in adapt that we created in the last 30 minutes with scaffolding from a tutorial for free and it's all open source [Laughter] i can't tell can you tell i love this stuff okay so we minted in nft anybody can go to austinnft.search.sh uh anybody can grab this code this is actually the very first challenge of i'm going to leak some alpha here if you've been paying attention this long i'm gonna leak you you may know about this or you may not but a great way to learn about aetherium development is speedrun ethereum dot com and it's still in beta because we don't have all the auto grading stuff work so if we get like a thousand submissions we'll have to do that manually but uh this is challenge zero in uh speedrun ethereum dot com so if you go to speedrun ethereum dot com and you click quest you will go through all the same stuff that i just went through here live but at your own pace where you can tinker with the code and follow along with the instructions and when you're done you'll submit your challenge and what's cool is then i can review those submissions and i can see who all's turning in what and i can see what builders are building what and you can build up your kind of web 3 portfolio of all the cool things you've built holy moly i'm shilling everything here we've got we've got rinka bnfts we're minting the nfts we've learned a little bit about ipfs and and how the nft smart contract works and how ethereum can let's see oh challenge speed fraud word word yeah heck yeah the the the speed run is getting better and better like i said we don't have auto grading there so i kind of shill it on the dl a little bit but if you've stuck around for 40 minutes i think i can show you something uh let's see there's 25 people watching all right all right all right and who who might watch from home later who knows who knows any more questions shout them out let me know uh hit me up uh also i'm austin griffith on twitter and telegram so if you just go to twitter slash austin griffith you'll see this dude right here that's me follow follow along follow me holler at me dms open um let's see what else can we get into any other questions let's see i think we got about seven minutes left i've already mentioned the nft i could remint the nft what else could we get into here hey austin great content content man there's super duper hey um as far as uh just the website goes can you talk a little bit about that as far it's like um it looks like it's all uh next js and can you talk about that heck yeah yep so that's that's totally like the other half of this right is this front end right and like i said we changed that one variable and the whole front end kind of changed and now i can click on this and it's going to take me to the ring to be addressed right so the front end is uh i think originally it was create react app so it's any any scaffold each build is going to be a workspace where you have hard hat and a create react app and then like some like uh like graphqls like graph the graph stuff and some other services that kind of come along with it but uh the the front end let's get into it yeah so the front end is a react app and it's gonna have like wallet connect and web3 modal and network warnings and a ton of different components that you're going to use but what you'll what you'll really get into is find that there's there's all these really handy hooks here and like here's a hook to get the contracts to read from them here's a here's a hook this is just a great example of an ethereum hook right use balance classic ethereum hook there right you throw in a provider you throw in an address and just in the front end it's going to keep in your front end state this local balance that you can access whenever you want right so i could grab that local balance and i could go like put that in let's see where what kind of front-end stuff do we have there's a lot here so there's there's this whole like react router stuff and you've got these tabs right up here and then you've got these views here so here's the mint nft button i'm just going to for for real quick i'm just going to add that local balance here and add and just show like a real quick gotcha of the front end where you need to kind of do one of these you need to do like uh what ethers dot utils dot format ether and then we put in the local balance let's see what that looks like okay so i hit save and our front end should ha reload and if i go look at the local local host version let's see if we yeah zero point there's my there is my balance there uh in uh uh what eath yeah that's rinkaby eath right there right so that's just another variable that's tracked in the local state so you've got to create racked up you've got a local state you have a bunch of hooks keeping that local state populated and then and then when you want to like let's let's say we want to i don't know let's say we want to send we want to make a transfer button or we want to have a send button right what you would put in there where are we editing here let's say we just i don't know why we're putting it in here but let's throw a div in here and let's create an address input right just just something along those lines i think i think you'll probably need let's see let's go oh no what did i do i think you'll probably need to uh i wish oh there's a good example there we go there we go so you need to put in an e s provider i kind of don't want to i'm just going to put the ens provider in there let's see let's just do address input and then ens provider and hit save and hopefully what that does is create an input field but it's more than just an input field it's a web3 input field where it's got a qr code scanner so if you're running a mobile app it'll open up your scanner and let you scan for an address right and if you type in here it starts to give you a blocky preview and it does stuff like ens resolution so there's along with all the stuff i've talked about there's a bunch of components that are just native to web3 that i found myself needing every time like every hackathon i sat down to build just like you're about to do for this weekend and i always found myself building another address input fields with a blocky preview that does ens resolution right so all that stuff is kind of built into scaffold eats so you can just bring in the stuff that you need and focus on the innovation stuff right again i'm going to shout it out forever this the superpower of ethereum is that you can innovate on top of this decentralized network very very easily you can make small code changes and invent whole new mechanisms i think we have one more question out hopefully that kind of answers the front end there's there's there's a lot of components there there's buttons there's uh just just a ton of components that you'll find that you'll need as you as you go through uh go ahead yeah let's hear it first of all austin you're the best i you work so hard and you bit you're like teaching is like the foundations for so many other great things so much respect um so i missed some of this but i've done your speed run a few times and i i mean you're the best so okay so here's the question in a nutshell without revealing too much of my idea which is i think gonna be groundbreaking but the thing is i don't really understand how to do these external contract calls could you like demonstrate like writing or deploying a separate contract that lets someone do an external call to one of these nfts and set like an approve transfer because i was talking with a mentor and he said this sentence which maybe you'll understand the transfer from safe transfer from calls both happen atomically and call approve like i don't i don't idk idk i think that i think that the the we did a tl dr we got a couple minutes here we can talk through it i think the tldr there is that you can't just send a token to a contract okay like like say i want to build a marketplace and i want people to send in tokens that they can sell on that marketplace you can't just yolo a token i can't just say transfer from bob and send it to there unless it has a receiver and there's a bunch of other things there of creating a receiver so there's this approved pattern so you have to say you have to make one transaction to the nft contract saying i approve you to take i approve this other contract to take you out of there and it to own it and then you make a second transaction that says okay now on the marketplace go ahead and go get it now i've approved it and then we'll do some things like list this thing for one east for sale and in that atomically in that transaction it goes and grabs it and and now the the nft contract holds it and that's the only way for the nft contract to know like oh yeah now i have it now i can do stuff and it'll do that other stuff where it sets it up and and gets it uh you know sold on the on the on the marketplace or whatever so the the tldr there is there's an approve and then a transfer from there are some uh contracts that hook into and catch this which is really cool it does like a you set up a receive function and when the transfer happens it calls the receive function in your contract and you can process some stuff so check out i think it's just is it erc 721 receiver this this is this receiver you could put into your contract and then yep there it is it says on 720 received it returns these specific four bytes that say yes indeed that was the right thing to call but before you return those bytes you can actually process and do some things there so so hopefully that made it make sense but just to like zoom out real quick again is just like you need to tinker and understand this this this approved pattern but you also need to understand just contract to contract communication and the best way to do that is challenge two of speedrun ethereum challenge two is gonna build you you deploy an erc20 token it's very similar and then you deploy a vendor and and you set it up so the vendor talks to the erc20 contract so you have contract to contract interaction for the first time and it shows you how to do that within a contract so kind of i i kind of answered that at two different angles hopefully that makes sense yeah but i would also just like for context i would just speed run this this uh challenge two that i have here too and i'll paste that into the chat awesome yeah so you're saying that we can abstract from erc20 to 721 it's the same sort of uh thing it's not like the and if we could hold the nft in escrow in the contract is that what you're describing or you're pointing in another direction sure sure you could hold the contract in escrow i guess maybe i don't totally understand the question but i thought it was uh you were having difficulties let's say you have an escrow contract and you have an nft contract and you're having difficulties making those things talk and having the nft gets sent to the escrow contract yeah and what you would do is you would make an approve call on the nft contract telling it that the escrow contract can take it and then you would make another transaction on the escrow contract that grabs the nft so there's two transactions there or you build the escrow contract to have this receive function in it and when someone safe transfer from the the nft to you you receive it and and you operate and you say okay we've got this new thing in escrow and it creates a an escrow there for that hopefully that that makes sense you got it cool thank you cool yep hey austin one more question can you talk about chain link a little bit i know chain link's a big piece of uh of this what uh what do you use it for uh chain link i would use for vrf like if you're doing if you need like verifiable random like most nfts that do random just use like previous block hash or something similar to that if you really really really need really expensive randomness you can use vrf uh you also can use chain link for something like what if i could mint an nft that looks outside and if it's below freezing the nft has snowflakes in it or something like that right so if you wanted to use like weather data or some kind of other api data you could use chain link to integrate that into your nft thanks andrew we good we still we still rock and i think there's another question there yeah we're still good if you are okay sure i think joanna had her hand up go ahead oh you're muted careful sorry for my silly question i am trying to follow you and it's super hard for me first question if if i can if i can watch again in youtube in a slow motion maybe i can use your open source to do my tests in in my project because i am super overwhelmed i was with so many talks yesterday and today and i don't know if this is normal because i cannot find a a hacker teammate i can learn very fast i can i can super learn i also i can learn what because you are super enjoyable explaining everything that is really hard for me to follow and i need to make an interface to make something super useful i would like to put the passports on the blockchains nft passport i would like to make an interface to connect proof of humanity when people when people um verify their identity with everything with eyes with voice with face with video and then they can get directly from open sea and a additional passport an nfc passport so this is not an artist this is something that i i would like to do it i would like to test in in ribbon key like you show but it's so hard for me to follow you and i need some suggestions so yes so and i start to do this because i am feeling that i will i i have to to hack solo i can do it but i need some support i think i think there's two angles here first of all like i pasted a simple nft example so it's an even more simple nft example please run through that there's a couple different content where it's like nice and slow and you walk through it but i think on the other side of it uh andrew might be able to help us with this there's probably like a good support channel and a good discord that we can go to is that true andrew absolutely and you're you're like yeah so there's a team formation call coming up uh at 6 30 eastern so in 10 minutes if you join that it'll be a call like this and you can try to form a team and then um there's also team formation channel in the discord and then there's a tech there's a mentoring channel which is the debugging channel you can ask any questions yeah but you know i was asking yeah but i was asking the last three days i was asking for a teammate and i couldn't find yeah it's tricky it's tricky but but the next event is is the best way to keep moving on that don't don't be discouraged just keep building that's a trick like you almost have to get in the habit of just like building and throwing things away like my first eight ideas were garbage so just get in there just get in the the habit of like building prototypes trying them out seeing how people use them and and iterating on that loop and skeleton is great for that [Music] yeah thank you good luck hackers thank you for having me happy birthday friday thank you austin that was awesome once again we'll uh close this out and reminding people there's a team formation session the uh the link is in the discord see you later austin see 