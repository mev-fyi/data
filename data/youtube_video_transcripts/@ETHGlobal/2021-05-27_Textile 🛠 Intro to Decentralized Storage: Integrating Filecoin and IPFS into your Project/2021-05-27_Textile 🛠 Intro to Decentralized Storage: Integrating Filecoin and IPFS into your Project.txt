all right thanks everyone for joining us um for our last workshop today and not least we have textile with us uh andrew hill and carson farmer will be presenting intro to decentralized storage integrating files filecoin and ipfs into your project feel free to ask questions in the chat here carson will try to get to you or make sure it is brought to the attention as we go on after this you feel you can feel free to jump again in the discord channel um to ask more questions with the textile team and during the event as well so i will let you introduce yourself andrew and take it away thank you catherine and thank you other andrew uh yeah very excited to be back here with uh the youth global team um and very excited to share with you all um some of the work that we do and ways that you could be using it in your your hacks this weekend uh like catherine mentioned i'm joined by my co-worker carson here he's gonna help answer any questions in real time also um i know at least carson is over in our in our discord channel so all of you uh feel free to jump over there if you're already there and feel better asking questions over there feel free to do that um i'm not gonna today i'm not gonna go into anything deeply technical i won't do any any um code live coding with you um but first time ever i'll offer this maybe we if there's if there's some people that want to follow up with this we could do uh short office hours um later this week or early next or early this weekend even to walk through some of these key concepts if you want to see some of this stuff but let me jump in and just give you a tour of what this stuff is uh okay all right all right so web3 weekend also one other announcement very important one we're hiring right now so if you go to textile.io um there should be a link to our jobs and so if you or anybody you know uh are interested in these positions they're both uh right now we have two positions open one for kind of senior backend one for senior full stack and uh if that's you we'd love to talk to you so find those there or share that for us because we're always looking uh also really important probably is uh we have prizes this weekend and so i just wanted to share those because each of these are going to touch on the technologies that i show you uh through the rest of these slides and so the first is we have a prize for best use of buckets and so we'll talk about what buckets do but they're essentially object storage for web3 the second one is for best use of threads so threads is a protocol for synchronizing data in applications um and then the the final uh prize that we have is for the best mashup and specifically mashups using buckets and any of the other sponsors protocols and so there are some awesome other sponsors some obvious ones that you could uh tap into here are file coin use buckets buckets actually has a built-in api to integrate with filecoin so check that out um nier i see as a sponsor we have some really neat things with near that i'll show you sneak peek of at the end of of this presentation um and then there's there's other excellent ones out there audience uh and and ceramic and other other really interesting projects so the closer you can get buckets to those to those other projects the more likely you are to win this bounty so check those out after you kind of get the download on what what all these are and decide if you uh can make use of them in your in your hacks so textile um so textile we build a suite of tools for developers just like yourself your and um the purpose of our tools is to help you make use of specifically ipfs and filecoin in your applications so um to back up for a second if you're not familiar with what ipfs or filecoin r they're really critical technologies across a lot of the web3 stack and so ipfs is a is a sandwich of different protocols and technologies that allow you to move data across the decentralized uh network and so you can think of it like you can think of it like routing uh content distribution and data exchange between peers and it sort of solves those problems in a handful of others uh in a lot of interesting ways um that you that you can make use of and so when i talk about ipfs it usually also encompasses other technologies that you're probably gonna hear about in other workshops or or you'll see references to like ipld like the p2p and a handful of others so a really a really big piece of technology here across the entire ecosystem and then the second one is filecoin and so if you're not familiar with filecoin i'm sure you all are getting familiar with filecoin um due to this event so filecoin is is uh decentralized storage obviously so it's a network it's a blockchain just like ethereum or any of the other blockchains but this blockchain has been optimized to organize storage providers on a decentralized network so how do you get people to actually hold on to your data and make it available again next time you need to request it and that's what filecoin is solving and so the tools we build sort of extend those two those two families of tools uh into interesting new directions that we saw developers needing to solve and so threads is database over lib p2p buckets object storage similar to s3 but on ipfs and filecoin i'll talk about the hub which is a hosted platform we have so that you can use these things without having to spin up the sort of full nodes and figure out how to always be connecting to these networks you can sort of use our persistent connections while you're wrapping up it should make it very easy for you to ramp up on these on these protocols i'll show you the miner index so if you're using filecoin the miner index is a really cool resource for you to use to find to find those storage providers on the filecoin network that are active and are capable of taking your data um and powergate so if you're if you're in the more technical crowd and you want to be connecting to filecoin uh using a fully synced node and you want to have sort of the full suite of apis you'd actually start with one of their nodes one of their implementations lotus is is the more popular one and then but powergate what it does is it actually adds a bunch of other tools on top of of lotus so it runs lotus for you but then gives you a bunch of help helpful tools for moving data into and out of file coin uh easily but also how do you manage a lot of different wallet addresses how do you build this into platforms or large-scale applications powergate has a lot of tools for you to to do that so let's just talk about some of these technologies now i'll start with threads and threads is actually one of the um one of the oldest uh technologies that we've been working out at textile um we were doing some very early experimentation with how how could you use decentralized protocols in mobile applications and what we found was that there was uh there was this gap still for how you would actually synchronize full full data sets between multiple peers on the network and so we started uh we started uh designing and building threads and it's been through a number of versions and it's actually probably about to go through another major uh update and so um so it's pretty it's pretty exciting if you're if you're interested in using it you'll see you'll see changes coming that are going to be great and i know carson's working on that with one of my colleagues merlin and and doing a bunch of work around scalability and enabling new kinds of deployments here um but it allows you to store data locally and then pull it uh pull it push and pull it from other peers on the network and these are permissioned peers so it might be you and another collaborator are working on a document that document could be synchronized over over threats and there's a few different ways that you can uh you can use threads we have a go library we have a go client library uh we have an api we have a javascript client and we have a javascript local first version and we have a daemon so there's a lot of different ways you can tap into this um if you go to our documentation just at docs.textile.io you'll find the thread section it's a good landing point for landing spot for this um some concepts uh that are really useful here so um there's not many in threads it's actually meant to be a pretty thin layer um and the vision for threads is it uh it actually just solves the networking piece and it would it's meant to actually allow you to attach any database to it and and move that data across the web right now it's more opinionated than that it's easier for us to iterate quickly by having an embedded database and so you'll see both in the go and the javascript version right now it's more tightly coupled with the database that it runs with um but it means that we've kept the concepts in threads pretty pretty uh lightweight so there's databases there's ids so all peers that are attaching to database will know that the identity of that database so that means that you can build applications that are tracking multiple databases per user and they can have different groups of other users that each databases is synchronizing with and so um there's a there's a a lot of different applications being built on threads but um satellite.im is a really good example of one so a chat a primarily chat based application you can see how threads could be used in that model pretty well collections um so each database can contain collections if you're uh more familiar with a sql kind of background you could think of that more kind of like tables and so collections and then all all the entries in the collection are records um so everything that you everything that you can do in threads you can do in the go version that's our reference implementation so if you're a go developer definitely check it out it's really really robust uh library and so you if you go to our our github repos which will be linked in our documentation you can find all the all the different implementations of threads but the go threads version has the core uh reference implementation you can run it as an api you can actually uh run one as an api and use another go version as a client to that api and you can actually run just sort of uh freestanding nodes as a daemon which is pretty which is pretty cool so lots of different ways you can hack on on that technology the javascript version um uh carson actually has taken the lead on the javascript version so he can answer a lot of the questions here but it embeds a local first database and so you can think of it as being basically you can you can actually have a user with a database in the app that can work completely disconnected from the network and that's really useful for application performance and usability but then you can synchronize that data on demand and so if you come back online you can actually synchronize it to other peers and do all sorts of neat things so that's that's a really great library too so if you're a javascript person go check out the js textile library that has the js threads uh library inside of it so lots of cool things coming on the future of threads and so actually this sprint that we're uh internally working through right now is trying to close some of this work here but if you're starting you know if you're getting your head around web3 and are interested in how i uh identity and like things like threat identity are are managed um uh this you can actually go to the threads repo and we have a really long discussion document here um that another one of our colleague sander has implemented now and it's going to really take threads sort of the next to the next level and um our other colleague merlin is working through a lot of this as well and it's really exciting um and so if you want to see the kinds of things you can build with threads a couple examples here satellite.im a really awesome project definitely should check that out any type is the is the logo on the left there any type dot i o as well um it really exciting project there um and then bradbury uh check that one out um all of them kind of have different approaches to how they're using threads but can expo kind of inspire you um for what you can do yourself okay next technology to check out is this one called buckets so buckets uh if you've used or you understand what amazon s3 is bucket you can think of buckets as providing that similar service but over over uh ipfs and so if you if you're not familiar with amazon s3 it's okay it essentially is a place where you can push data you can push objects to be uh to be uh hosted online and so in this case you can push objects to be published over the decentralized web and so buckets uh a really nice way to actually think about them and says folders that's the way that we've designed most of the interface for using buckets so you can have folders on your local disk that you turn into a bucket um and then you can push them to remote ipfs peers and what's really cool about these buckets is um they they map to the folder that you're creating but you can also you can also do things like synchronize your local folder so that means changing your local folder and having that having those changes synchronized to the remote ipfs peer which means that you can have other people pulling that data so lots of really cool interactions that you can do there so they can be single user or they can be multiple you can have multi-user with um with some interesting ways of doing permissions um and then i think maybe one of the most useful aspects of buckets is that they they wrap a lot of different protocols into one making it easy for you to kind of tap into each of these protocols um depending on the situation using the right protocol at the right time so the first one that you probably aren't going to use in a weekend of hacking but it's in there is really neat is actually buckets are built on threads and so the way that the the way that the metadata about the folder that sync synchronizing around is being moved is actually over a threat but that gets pretty that gets pretty deep in the technology there and so not something maybe to worry about too much but some other protocols that you can use right away are uh ipfs obviously so when you push a bucket that data is available across any public gateway on ipfs or you can run ipfs other ipfs nodes and pull that data from the ipfs network directly so that's that's really helpful another protocol that it uses is ipns so if you're not familiar with ipns it's it's the interplanetary naming system and so it lets you create a static key that maps to your your ipfs uh sort of hash addresses and so if you've gotten into ipfs at all you'll know that every record that you add to ipfs gets a unique uh a unique uh cid it's called a unique address it's one of these long character strings here neither these are actually examples of a cid but but close enough so they they map to these cids and uh the problem is if you ever change that record you get a completely new cid so how do you let people track a changing concept that is going to have a different piece of data mapped to it every time that's where ipns comes in so you can publish what are called ipns addresses and you can that ipns address for any other ipfs user will map to a piece of ipfs data and then you can change what that maps to so anytime you want to change the data you can change what it maps to so a very handy concept if you if you have dynamic data you're trying to publish over ipfs and buckets every bucket you create has um an ipns key uh uh automatically and so you can reference it over the ip ipns network to always see the latest of what's in that directory http obviously i mentioned already every bucket is available over ipfs gateways and then the final one that probably is really interesting to you if you want to hack on multiple sponsor projects this weekend is filecoin so buckets has uh buckets have a lot of different methods you can run on the api but if you're using buckets through the textile hub which we'll get to in a minute um you can call an archive command and with with by calling the archive command you can uh you can sort of instantly move your data into a queue that will will um get stored into in filecoin um so that's a really handy way to get data on filecoin and just like uh threads there's a lot of different ways you can interact with buckets there's uh javascript implementation there's a go implementation and like there's a ton of magic if you really get into the deep uh interactions here between buckets and threads um so there's there's a lot of neat things that you can dig into there to like unpack how the metadata of your folder is moving around so if you're if you're kind of into those deep technical uh things dig in there and peel back and you'll see that there's some really powerful things that you might be able to extend upon or build interesting hacks around lots of other really great projects building on buckets a few a few examples uh slate if you go to slate.host um you can see they build uh they build um sort of uh like boards where you can push data you can push files people can share ideas people can collaborate on data sets all sorts of neat things fleek is one of their leaders in building really great user interfaces around data storage and publishing things to the to the decentralized web so fleek storage application is built on buckets um and master file is one of my favorite hacks to come out of a recent hackathon um worth googling um to check out how they do uh they do uh sharing of data in a really private and interesting way so both of those technologies and a lot more you can make use of through the open source libraries you can go close them run them on your own we also provide this hosted service called the textile hub which runs threads buckets a lot more things and you can access those nodes to interact with by just creating an account and some really nice things about doing that include access to file coins so this provides a file coin gateway so doing things like pushing buckets to filecoin you can do that over the hub it also um it also gives you a really easy way to push data to remote ipfs nodes so when you push a bucket to the hub for example that gets pinned to a remote ipfs node making it easy for you to get that through all of their gateways but there's a lot of other things that you can use on the hub so worth checking out there's kind of two ways developers interact with the hub one is team collaboration so the hub has this concept of organization so you'll see if you set up an account if you download the cli one of the first things that you can do is create an organization and then act as the organization instead of your single developer account and that's great because then you can start adding collaborators that automatically will have to have permissions to collaborate on buckets with you um put push new api keys those sorts of things and then uh and then on the right not exclusive to but just a different way to use it and you can do this as an org or as an individual are building applications and so there's you can use those api keys on the hub to embed in your application ways to push buckets or synchronized threads uh over over the hub so that means that you can build an application where your users actually can push data to ipfs nodes without having to have them run full full ipfs nodes themselves uh and and like i mentioned the sort of built-in uh file coin integration so in five easy steps you can kind of go from setting up an account to pushing data to filecoin um and i'll share these i'll share these slides on uh on our discord channel right after the talk and so if you want to kind of go through these um that should be pretty easy uh and yeah like i mentioned easiest way to get started here is just docs.textile.io or if you go to textile.io directly you can set up an account and jump right in the web version is way behind it's it's sort of just an experiment right now the cli is really really where everything happens so set up an account online but you'll you'll pretty quickly want to migrate to the cli to get the get the most out of the application okay if you're building things with filecoin i mentioned before the miner index a really good resource for you to tap into so the miner index basically um collects a bunch of information about miners on the filecoin network and then gives you an easy to use api and cli um to query that information and so a bunch of different ways you can use this you could build interfaces just around this data that's very interesting but you could also build this into your flow for pushing data to filecoin so first you can query this index and get a miner that you want to store data with based on cost location previous previous reputation sort of track record you can select a minor here programmatically and then add that to the flow when you're creating deals on that network and that can help you just pick the best miners faster or get the best cost for storing your data so lots of things you can do there if you uh if you go to the minor index if you go to our docs and go to the minor index section you'll find it's uh uh open api or swagger api um so really easy to use and then there's uh you can actually use the hub cli to interact with it directly and query it and just like shown here in the in the screenshot but uh really powerful lots of ways you can use that and potentially you could even just hack on this api and build things from that uh okay i mentioned yeah if you're deeply if you want to go deep technical too and you want to run sort of full node uh and connect to ipf or connect to filecoin um powergate might be interesting to you it's one of the more popular client tools for using filecoin um and so some things that it's really helpful for one we have this uh local node uh or sorry local net mode where uh you can spin up powergate which will spin up powergate lotus and uh a number of mocked miners giving you a fully localized version of the filecoin network that you can quickly iterate so it will work really fast you can be testing the full api suite and and seeing what it's like to interact with miners before you go and try things on mainnet or even on testnet it'll just be fast and you'll be kind of certain that your thing works before you go and build something more we're using in production it's how buckets uh are moved to file coin for example so it's a it's pretty important piece of technology for us as well last thing i wanted to show you is one of the newest things um we've been working sort of as skunk works so we haven't shown this to many people yet uh it's very very early preview of this stuff and and we should have some big announcements about it coming in in the next couple weeks but i thought hey i'm going to talk to all these people that are hacking for the weekend i might as well show them something new and interesting here we've been working on bridging the different blockchains and unfortunately we don't have our ethereum version ready to show you here but we do have our near version just at the earliest testing phase and we're looking for projects building on nearer to come experiment with this stuff and so if you go to near.storage you can read all about that but it makes it the cool thing about this is it makes it permissionless so there's no api keys no accounts needed um all you need is users with their wallet and they can basically they lock funds in order to that sort of proves that they are really a person with a with some intent and ensures that we don't have people spinning up a million fake accounts once they've locked funds they can actually push data to this bridge and that will get it uh stored on file coin which is really cool and you can see it's it's really easy for an end user in this demo dap the user didn't really have to do anything and they got the ipfs hash tier 2 from that data so that's kind of what we think storage is going to look like in these networks in the very near future and kind of getting rid of this idea of api keys and accounts and all that stuff we're gonna have a little bit more of that uh as we go here so you're gonna have to hack with some of that this weekend but um if you're interested in this near stuff definitely check out that that project and um we'll be on discord and happy to answer any questions if you want to try it out and that's all i got uh a couple minutes early but thank you very much um and if you if you need me i'll be on discord uh finder docs uh just go to textile.io or docs.textile io and we also have our our slack so if you go on pass this weekend and want a place to come hack and build things we're always on slack.textile.io and you can find us there too thank you very much awesome thank you so much um for just a great presentation andrew is there any questions before we wrap up there's uh we can still take questions looks like carson was grabbing them real time so that's awesome great well thanks for that person um if there's anything else coming up or if this inspires more uh thoughts and ideas on you uh please join the discord channel the sponsor discord channel is really the place to get support throughout the event and um it really really helps to get active and and contact the the textile team it will definitely help you get further along with your project um on this note thanks everybody and i wish you a really good rest of the day thanks andrew thank you 