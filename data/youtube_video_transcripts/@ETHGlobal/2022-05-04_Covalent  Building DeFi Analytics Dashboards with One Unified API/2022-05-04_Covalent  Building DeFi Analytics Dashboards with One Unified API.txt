oh actually stand by everyone while we get this going kevin if you toggle the uh restream we should be good yeah we're good great so we're all set uh welcome again to our session today we're gonna learn how you can build deep analytics dashboard with a one unified api here i have two lathes joining me from the covalent team i'll let you guys introduce yourself and work away with the presentation thank you um i can start i'm leilani i'm in product marketing at covalent um leaving go ahead i'm living i'm a developer relations here at covalent yeah um we're gonna keep this probably pretty brief as like an overview of covalent how you could build um d5 dashboards and also a couple other use cases with our api um so i'll i'll kind of set the scene for the first half of the presentation and then hand it over to lay bing who's going to go in depth a bit more on our bounties for this hackathon as well as like resources and project demos and how you can get started and everything you need to know there um so here we go okay so welcome to hack money our presentation really excited to be part of this hackathon defy use cases i think are exploding and there's so many creative things that you can do so this is really just scratching the surface but i can't wait to see what everybody's actually able to achieve over the course of the next 20 something 30 days actually i guess it's like most of the month um so yeah here's the agenda again we're going to cover a couple web three data trends and challenges um kobielun is a data company so we're in a good seat to observe kind of what's happening around us as well as just describe a little bit more about why you'd use covalent as compared to other tools or when you can combine them for instance um so diving in a little bit more to the api itself if you're new to it or maybe you've used it before and we've just kind of covered some updates there um we're going to touch a little bit on the covalent network just because we actually have some exciting news coming later today regarding this and it's important for like the future of our ecosystem and it does affect like developers later on down the road um just ties into the way that we're building and then as i mentioned bounties resources project demos um all of that good stuff to get started so kind of the first way to set the scene is to think about the future and where we're headed um and covalent is always focused kind of on the five-year and 10-year plan which can seem like a million years from now in web street because everything changes so fast and obviously like if you've been in this space maybe even a month it can feel like a year you know how the it's like time scales differently here but anyway what that means is essentially we're seeing a ton more users um kind of flooding into this space whether it's through nfts or whether it's through dipping their toes into d5 and maybe just like even making their first swap or learning what a decentralized exchange is and that learning curve can be really rapid you get into what you put out of it so people that um get obsessed with this hobby or fall down the rabbit hole as like everyone prefers to say um can really build users in a moderate month there we go um anyway what that means and what we're starting to see over the past year especially kind of i think the pandemic had a bit of effect on that is just tons more users and that's coming with more development like different blockchains um and while many blockchains follow this evm standard it's like ethereum compatibility um so their architecture is fairly similar a lot of blockchains are also deviating and changing their architecture completely so you have non-evm blockchains like solana that are evolving um and others and what that means on like a data side and on the developer side maybe some of you are familiar is that you're learning like entirely new languages on top of this new tech stack um and for us for an indexing solution it requires a lot more time and a deeper understanding to index those chains as well so kind of all of these things are just minor barriers to scaling and supporting users at the rate that we kind of need to be at um as well as improving that experience because uh there's thousands of applications i think already but as you can tell if you've tried to go between them there's not a lot of interoperability so i'll kind of touch on some of those pain points in a little bit but um yeah you might be familiar and web free with just a little bit of those frictions and the user experience or maybe moving your assets across different chains or things like that and building of course across different chains is its own challenges so we think like a billion plus users on chain is completely realistic at some point in the future and i think a lot of those people might not even realize that they're using blockchain technology because web3 is much bigger than kind of like the crypto twitter mindset um you know you can use blockchain tech on private blockchains um your banks could be adopting them medical records things like that and all of these things require kind of better applications and an understanding of blockchain data so that is where covalent kind of sits um and just to go a little bit further into some of the data challenges that we've seen covalent kind of arose as a company that's sorting like trying to take some of the ease off developers or take some of the burden off developers um so what we've noticed is that there's a lot of challenges when it comes to retrieving and building with blockchain data um and while it is like a public distributed ledger um and you know public data is kind of the big word in practice that doesn't always turn to be true because there are a lot of barriers to basically extracting like running your own nodes and it can be costly and it can be expensive especially as your applications are scaling or maybe you're paying somebody to host your node infrastructure um and yeah if you're requiring historical data from full archive nodes you can be already hitting like 10 terabytes of data and that can cost more and more and more as you scale your applications um also there's barriers just like along the json rpc layer a lot of times to build interesting use cases you need more depth than that um so covalence come as something that's kind of we try to index data that's harder to retrieve um and we also notice that across different chains the data response can be quite different um and that's regardless of the underlying infrastructure but definitely for something like ethereum versus solana um it's like two different worlds to build with that so what we're trying to do is index a bunch of different blockchains um currently like around 30 including test sets and then expanding that more and more and more as we go uh and provide all of that data in a really easy to fetch way and in a standard sort of response so that you basically need to learn the tool once and then your experience isn't constantly changing as the ecosystem around you does um so that's kind of like the the main pain points that i think we've seen and it basically comes back to interoperability um so there's a need for basically this unified solution um which is kind of as we scale and as there's more users more applications um those applications need to be able to work together and users need to be able to move their assets across different chains or keep track of them and just basically simplify that experience so that goes down to the development layer and just making this whole process easier um so what covalent kind of acts as is like this data layer you can think of so instead of running your own node infrastructure or paying somebody to do it and building out custom queries um and things that can sometimes again like if you're changing those queries later down the road it can take days to resync all of your data there's just a lot of kind of slower barriers to that um so we prefer to just take care of that entire step and that's kind of where we fit as this data layer so really all you need to do is query through the api um and nothing changes from your side and then the benefit is each time we index a new chain and we go through that work it's accessible to you pretty much immediately through like a chain id parameter so when leaving goes through our docs in a little bit you'll see what i mean by that if you are new to the api but essentially um everything can be like scaled easily and it's a matter of changing parameters rather than building out new queries entirely and that's kind of how we see scaling the ecosystem and and what needs to happen uh in order to just kind of like accelerate development and focus on some of the stuff that matters more to the users which isn't always like the major priority i think in web3 it's a lot of like building things really fast right away which is amazing and that's how innovation starts um but then the user experience kind of comes later so that's kind of i already touched on the kvlan api but just to go in a little bit further it's a single unified api so it means you're just using one tool for all of our different blockchains um it's queryable from the cloud and you actually don't need to be a developer to use it obviously that's the main audience and you will have a lot more success if you're familiar with those tools but we created an analyst mode as well um and because it's no code you can kind of just play around with it even directly in the browser and get familiar with what that data response is going to look like maybe just learning about kind of what log events are things like that um and then yeah it's good for analysts which we've noticed so people that want to understand this ecosystem but aren't necessarily building applications not that it's as relevant for this hackathon but just kind of an interesting use case and i think it adds more visibility to web3 which is good too and then i would say the main kind of focus is multi-chain applications so because um you can build and just change a chain id parameter to be across ethereum or polygon or phantom or some of these different chains where a single dex might be supported on all of them for instance uniswap or sushi swap or um i mean like pretty much anything swap nowadays but um so yeah you can change the chain id and you can actually make that project multi-chain um which is a pretty big advantage and especially in hackathons i think it's a great thing to do so if you are interested in building multi-chain decks dashboards that's something we'll kind of get into a little bit later but that's the api um and then i kind of went through this crypto stack already but here's it just broken down a little bit more so you have the blockchains you have nodes you have us you have applications and then you have users and that's completely oversimplified obviously um there's so much more complexities to this but it's kind of the easiest way to like set the scene um so just to move to the covella network a little bit so one of the questions that we really commonly get is well not as much anymore but it used to be how are you different than like decentralized data providers in blockchain and obviously being in web3 it kind of makes sense to be decentralized but we started as a sas company and what we're doing is gradually decentralizing the data um so actually today there's a really big kind of advanced forward in a couple hours that we're going with along the covalent network so if you're interested in learning more you can stay in touch with our socials for that um but we're trying to basically be the universal decentralized data model this is kind of a mouthful to say for multi-chain and indexing and querying that's a lot to say i've never really said it out loud like that um but what that means is like the same quality of response um but just in like a web-free native way um decentralizing the data and then even allowing uh us to grow even further and building up things like um class c endpoints which will be like community built endpoints as well something that we're looking to do later down the road um but this is obviously like a pretty big process so a lot of our covalent network rollout is taking place over the course of this year um but what we're starting with is these block specimens um so i don't know if you can see my mouse but above blockchains where you see bsp plus indexers covalents essentially created a block specimen producer which is a completely new thing so don't be weird if you haven't heard of it um it's basically a method to verifiably extract data across these different uh indexing nodes so what we're doing is starting with that indexing layer and then eventually building out the decentralized way um for query nodes and storage no install function and for people using the applications to be able to interact with that data layer stake their cqt which is our native token and all of this is settled on moonbeam so if you're curious about the covalent network where you want to learn more about how this works and evolves for the api um i would just say stay in touch with our socials and head to our website we can share those things later um but yeah so here's basically the two major demographics so you have developers who i think primarily make up people that will be at this hackathon and then you have analysts so if you are exploring with the api you'll see the global settings header on the top of our api docs so that's where you can configure things like whether you want to work in analyst mode or developer mode so basically that's just going to determine whether or not you see the api response as like a json response or if you actually get a spreadsheet built into the docs so even if you are a developer i find the spreadsheet is sometimes just a good view to like see what the data is in a nice way nobody i mean maybe you like reading based on response but i don't know it's not always the easiest um so yeah you can configure your global settings like that and we'll kind of go into it a little bit more in depth um as i hand it off to lightning i'm just gonna talk a bit about our bounties more in depth and then show you some of those demos thank you uh let me just share my screen here on slideshow present view which one is it okay yeah can you see this um all right uh thanks leilani so for this part i'm gonna just briefly run through what bounties we have for you guys for this hackathon you know we thought it's really relevant that um we put up a defy related uh bounty for hack money it is one of the most revolutionary things that's happened uh in recent years right like every smart contract is essentially a bank uh an institution like a huge thing right within just lines of code but if you've interacted with the data side of things you know um typically banks and stuff i guess they have tables for you right a smart contracts data does not come back that easily you have to query like individual kind of events and that's because of the nature of how data is stored on a blockchain right it is not like in tables and stuff and you have to look at each transaction and what kind of events are emitted from those transactions right so the challenge here of course is to use our api which thankfully um kind of aggregates the data in a more meaningful way for you to query analyze and display on your final application right use our api to build like a d5 analytics dashboard that sheds light on the on-chain interactions behind your favorite d5 protocols right so let me just show you what kind of things you can do with this the chat is popping off okay nevermind what okay we'll we'll try to answer the questions at the end all right let me just go through this part first so well one of the biggest you know blue chip d5 protocols i'm sure a lot of you guys have heard is rv they provide a lending and borrowing service right literally functions like a bank but everything is on chain that means first of all everything is public and also that provides us with lots of areas of innovation but what about like the on-chain data if you look at the number of trends this is the rv lending pool smart contract uh if you take a look at the rv documentation it says here that a lending pool contracts the main contract of the protocol this is version two i think version three looks a bit different and it exposes the user oriented actions that can be invoked using either solidity or web3 libraries so what are the actions they are deposit borrow withdraw repaid like if you ask yourself okay i've got certain questions right so you tell me that ave is like a bank how many people uh borrow against this smart contract every every day for instance um how many people how much is being borrowed how much is being uh deposited right of course i think you can find that information via rv's um website itself right but what if you want to use that data to display on your app or like a certain function of your app requires that data um i i think there are ways to interact with the nodes to get the data or you could use our api to get all the transactions against this smart contract so the api endpoint and this is our covalent api reference the endpoint you're looking for would be get transactions for address of course you can do the same thing via either scan but this is programmatic that means you can build it and it's real time and you can like you know integrate it into your app um so get transactions for address if you click and this is i've just clicked the uh uh the run button this is in analyst mode but let me just take you through uh the developer mode so for developers what you'll be seeing is mainly so we've got two modes right developer mode and analyst mode i'll get to that in a bit let's just click run and see what happens so get transactions for address you key in a smart contract address i did not key in this address in particular because the response is pretty huge this one is a it's a sample response there's a sample response that you'll be seeing so as you can see this is the contract address um and then each of these items is a transaction against the smart contract so that's the transaction hash from to field the value of the transaction you know this one is zero and what kind of transaction is it oh you look for the information under the decoded area right the the transaction is an approval transaction right if you go down further there are other transactions this is a rewards claim transaction um all these data are being stored under the decoded field within uh this api endpoint and what you saw just now was the other mode that our endpoint exposes you to which is the analyst mode we get that not everyone wants to kind of use the json response so we provide this mode and you can download the response in csv or sheets format and if you scroll to the right you know classic uh sql or excel database you scroll to the right and you can see what kind of event each transaction is for instance this particular smart contract has emitted lots of approval events lots of claim rewards lots of transfers uh taker ask royalty payment you know um and from this you can basically aggregate it to get a calculated like summation of the values for instance of all the withdrawal event for instance right just to swing back to the example just now we had this landing pool which exposed us to all these uh functions so within the context of like integrating it into your application right so this is um obviously the json response i've just printed it out on the page here and you can see that and this is query just now i think it was updated this is utc time i'm in singapore time so it'll take a while for me to do the calculations there but this data is fresh as of 30 minutes and you can see the kinds of um kinds of uh events that's being transacted against this lending pool smart contract you see the deposit here you see another reserve used as collateral enabled i've my time is running up but let me just go through it quickly but this response is very very rich and this is only for one day's worth of data that's transacted against this smart contract so that's the other problem with blockchains there's lots of data sometimes that gets generated and yeah and uh can i so downloading the same data in table format you can see that it's got way too many rows i think it's got 4 000 records and um again what kinds of transactions are they deposit deposit min transfer main transfer flash loans borrowing main transfer yeah so that's just the tip of the iceberg of how we can explore the kinds of data that is being emitted from a smart contract using the api now if you just go back to our endpoints our class a endpoints are the end points that are standardized across all blockchains right all blockchains produce balances uh and here we've got one very unique one with input like for instance my address if i'm a ngo investor i input my address here and then it returns me my historic portfolio value over the last like 30 days or 90 days or yeah so that's very good for creating charts and then you've got token holders as of uh any block height that's really useful if you want to see you've got an nft right and then you want to see oh who are the token holders uh of bought apes last year february right you can do analytics and display your results here um so all these data you can either uh do further calculation and cleaning on the front and when you get the response or we have a primer feature that you can find in the documentation page which helps you shape the data before it even gets back to your uh client all right um and let me just quickly go through two projects that we've seen build this is a trader joe fees calculator if you know trader joe it is uh uh dex on avalanche so let's say i'm trading against this pool if i want to invest 500 usd what will my fees be hold on okay my fees will be this and this is the data about this uh usdt rec avx pool as you can see it's pretty rich data oh this is powered by covenant api there's a previous um hackathon winner we're still in touch with him he's really good um and then we've got hash scan which is another previous hackathon winner right which kind of uses the data to produce more unique user insights for instance it asks who are the holders of board ape that have also interacted with arvepu he made multiple queries and then displayed the results here so total amount of ave pool deposits by bought it owners on these dates so you can see like you know very interesting um data that you can get from this another more production ready project here yep okay let me just leave the rest for questions and you guys can go check out our documentation to find out how you can use all these different endpoints to produce the data that you want to integrate into your app all right let's see let's see what's up in the chat what blockchain supported yeah all support i think leilani has answered that uh build a novel d5 protocol and we use covalent of course you're eligible for the bounty i don't think there's any restrictions there yes we do offer apis to get internal transactions i think they are all classified under the transactions endpoint yeah you will be able to find how do you decide which smart contracts to index we've actually indexed every single thing on the chain itself so we don't decide um everything is there so just input your smart contract address and you will be able to get the responses that you need yeah if not um okay so one other thing is that some of the responses might not be complete if the smart contract uh abi is not made public right so the some of the decoded fields and log events they do not uh they are not public and if the contract owners don't release it we can't really decode it properly so that's the challenge but most of it has been decoded uh right now it's free yep maybe we had a paid tier in the future but that's not in the pipeline anytime soon um yeah there's an api limit of uh five requests per second which can probably go up to like seven or eight but are we able to yeah yes query the logs to see the sms sent to our address yep um we've got the get um there's two ways to query the logs one is just simply by querying the transaction itself and i think there will be log fields in the response either way we have another endpoint called get events by uh what's the topic hash yes get get log events by topic hash or you can get log events by contract address so what the second one means is that you just key in the contract address and return all the recent log events that's being admitted by that contract yep the get event logs by topic hash is a more horizontal kind of querying because topic hashes are not unique to one particular smart contract right like let's say i've got an approval topic hash and then it will return all the approval events across all the smart contracts on ethereum mainnet so or any other network so you have to do further kind of like filtering yeah you can use primer to match it to a specific contract as well yep i think um we can answer more questions of the discord as well after this this is because we're running on time so yep i think we've just hit the time limit but all the best guys we're excited to see what you guys build for hack money um yeah we'll follow up over discord thanks everyone for joining me thanks for coming everyone thank you 