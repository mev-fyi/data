but it's a tough job sounds like tough job tough job for sure thank you everybody uh for joining us uh this evening it's evening where i am it might be afternoon where you are you know what it's whatever it is it's great that you're here uh we're joined by the legendary austin griffith uh i could probably give him an intro but i know that he's gonna give a better intro that i could ever do myself uh one thing i can note it is it is bow tie friday and we will be taking questions in the chat throughout so if you have any questions if anything comes to mind now's the time to do it because when is the next time you get to talk to austin griffith face to face like that i i can't think of another time so uh without further ado i'll let him take it away from here thanks again austin i mean technically my dms are open and anyone can reach out at any time i'm i'm austin griffith so so you know you know if if we miss something here you can always reach out in the dms and hit me up hi hi hi i'm uh austin griffith austin at ethereum i uh build lots of things in a space i focus on developer tooling and onboarding and today we're talking about kind of like a step up from that it's kind of like after you've got the tools and the onboarding and you figured out some solidity like what does it look like to build a game what kind of games are good what kind of games are bad what do we see so far certainly certainly not an expert in the game field i've built a lot of game prototypes um but this is just kind of like my my view of the elephant so let's let's dive in and see how we're doing i i think i think we're okay to just get started i'm assuming i'm just gonna get going if anybody has any questions like i'm watching the chat here hit me up shout out to ethbuild gmgm let's gm in the chat gmgm uh i'll pay some notes as we go also um but i think first thing i have to do is a disclaimer or a a speed run of scaffolding i've got to talk about scaffolding even even even though i'm just talking about games today i've gotta at least spend uh two minutes plugging scaffold e so scaffold eath is a let me get the chat up in case something happens scaffolding is a tool for building decentralized apps i would go to hackathons all the time and i found myself building all the same components all the time so i put them all in a repo and then they have grown and grown and grown into this where it's like this really nice forkable uh repo you clone it down you have a decentralized app you have hard hat on the back end you have react on the front end tons of stuff to glue together tons of handy components um let me just do a yarn deploy here so you you get in this dev loop and this is the dev loop i want to show you basically get in this dev loop of editing your contract over here and i can zoom in a little bit more you you start out with a template contract oop let me pay scaffold ethan to the chat too did i do that yeah oh i did it already okay so scaffolding is just a repo you clone it down follow the instructions and then you've got your smart contract here and your front end here and if you if you follow me at all you've probably seen this a million times but i have to make sure to drive at home every day once once we get this we can go on to games and build some other things but getting started is so critical because there's so much noise in the space and so many tools you can start i mean you can start with remix in a browser tinkering with solidity but once you know that you're going to need to have a front end you're going to need to build something more complicated you're going to build something that you want other people to use uh pull down scaffold eth and and watch what you can do so basically you can hack on this contract i'm going to add some more exclamation points i'm going to redeploy it and it's it should give me more exclamation points over here in the front end basically gives it gives you a front end that sort of auto adapts to your contract if you if oh boy oh boy what am i doing there was a seat phrase it's it's a development c phrase don't worry if i have something like uh a uint public counter and set it equal to five and i deploy that we're gonna see a new counter show up over here if i add a function to increment that counter that's going to show up over here and we might as well do it it takes two seconds uh p u b l i c there we go and we want to do counter plus plus okay there we go we built a counter in solidity we deployed it we can go over here now and we can grab funds from the faucet and we can increment that counter so as you get started with building your blockchain games as you get started just getting going each is a great place i i heard a shout out for eath build earlier i might as well give that one a shout out too do you want to get the fundamentals if you're just barely new you're not much of a programmer but you still want to get the fundamentals especially for very visual learners uh each build is a good way to do that it takes you through all the concepts in kind of a slow and not gigabrain way like top of the bell curve real top of the bell curve kind of content that's what i like to provide so that's eat build uh then scaffold scaffolding but let's let's assume what we have here on the call is we we have folks here that have already gotten started are probably amidst getting going on a hackathon and they're getting ready to build something cool so what what can we build with scaffold eath what can we do with this starter kit and that's what i want to talk about today so uh let's jump over to this tweet right here wait what was this i feel like maybe this is important uh we'll come back to that that's a dice roll game when we start talking about randomness okay so this is uh this is a tweet from alex vandezen about from from a long long long time ago and it's about uh what makes a good blockchain game let me see if i can zoom in here heck can i share this thread let's share it with the group uh so oh wait wait okay so we'll come back to this i got a question about why scaffold ether or morales i think they're kind of different things i think maybe morales has a scaffolding kind of starter kitty kind of thing scalability is a starter kit it's not a back end at all morales is its own back end and a service that you rely on scaffolding is this thing you clone and take with you so just the difference there between morales and scaffolding i i know there's a sponsor here and i should have had a better scaffold eat fork that uses morales just as a demo but there are different services um scaffolding is used for getting a prototype app out and in the wild and having your friends use it quickly it uses hooks and things that pull from the chain similar to morales but without the middleware service uh it depends on kind of what what you need to build uh you explore both the tools and use the one that gets the job done best for you okay back to back to games and also just like keep throwing questions in the chat i'm down with that i can i can i can rock with that but here we go games what makes a good game right first of all it needs to be a good game if you're if you're uh just deploying a blockchain game to get rich uh just like some random thing that like is a game mechanic you slapped on top of blockchain and called it good uh boo to that boot to that boo in the chat so it needs to be a good game first it should be it should be fun offline like you should be able to play it somewhere else and just like the mechanic of the game should be good and and if you've ever played dark forest uh forest game what is it zkga me it is a great example of a game that is just fun to play it's just addictive you start playing you start moving troops around you realize the world's so big and there's no way that you're going to be able to compete but just playing it is fun and it's addictive and you find yourself an hour later like what just happened to the last hour so that's that's the start of a good game right you need to have that uh uh up front okay so so then explore what makes blockchain unique right there's there's a bunch of limitations here there's you know async slow blocks right it's expensive to make these reads and rights uh but you're gonna get a lot of cool things out of this too right this world is gonna be persistent and always on it's sort of like uh always on like if you build a smart contract game correctly not even you should be able to stop it which is really interesting and that's a like a really interesting mechanic to think about a game world that lives forever and also has all these incentives and economies built into it and how do you build a game with incentives and economies that doesn't become inflationary or maybe every game always is inflationary and we do it in rounds or something like that so it's kind of these kind of mechanics are things that you want to be thinking about as you're getting into building a game and this is one of the interesting ones and he's kind of amended this uh he he's even added to this you know huge shout out to avsa here using all his content but he's even amended this that players need to own the game if you build the game and you try to control every aspect of it it's not really a blockchain game because it needs to be composable and needs to be community run and if you try to control everything it's basically a centralized game right a decentralized game a lot of the things from the game probably will emerge from the community and how people use the game in the first place so you're kind of thinking of games differently here when we're thinking of them on chain and to dive into the players on the game thing he has another tweet which i didn't find which i should have that we're just going to sit here and talk about we're going to simp on avsa a little bit here he talks about how a good nft project right now needs to give itself away to the community and let the community control it and that is at odds with making money and so there's like this kind of like polarizing are you deploying this game to make money are you deploying this game to give it up to the community to let the community run with it and build with it and have them own it right and maybe there's some middle ground there of course like if you're building awesome stuff you should be rewarded for it you shouldn't do it all for free there should be something in it for you right but also you should be enjoying what you're doing and all that okay so anyone is allowed to get in the community should own it and this last one is really important too because it's going to be on chain because it's going to be in this like very programmable environment you're gonna have to expect that people are going to build bots and code that will run alongside your code for the game and you need to be able to embrace bots you need to make a world where maybe arbitrage is a great example right like you have two markets on on two different planets and what what is balancing those two markets when there's a big shift right like players back and forth but then they quickly build arbitrage bots and you can imagine spaceships flying back and forth just running uh arbitrage on two different markets we've seen that like defy summer showed us all of that stuff but now we're gonna see those kind of uh things in games and we're gonna have probably l2 summer right speaking of speaking of awesome games and things to come we have el all these big l2s coming out or out already and now we can kind of build fast cool quick cheap games that are still on that secure network okay how do you code a game where you can't cheat right exactly so you're thinking of the game and the front end right you you don't want to think of the game in the front end specifically we're going to get in here and we're going to talk about movement and how movement is hard on chain but you want to think of the game is is is here it's written into the smart contract everything almost everything from your game should settle to a smart contract let's dive into that a little bit because there's a couple games out there that are kind of like these card games that most of the game is actually on some server and it's like a signature based game and really the only thing that's on chain is like the cards and who owns the cards and that counts that works that's one of those are some of the most popular games right now they're not actually on chain just the card ownership design chain and the the game mechanics a lot of them are on a an off chain server that still uses signatures which is very web 3 but somewhat centralized right so just just bringing that into that into it too when you're thinking about your game and your pacman little character moving around in there you should assume that like someone can play the game without the front end at all like technically someone should be able to play your game within ether scan right and and you know that doesn't work with some zk games that have to be crunching proofs on the front end and submitting those proofs so sometimes you're going to need a front end but kind of like just thinking of where the security is right when we talk about security in the front end of security in the back end your game your your critical game mechanics should exist here in the smart contract and the security should be you know on the network of ethereum like the the the protocol security right so that's the level of security you should be thinking of you you write your game correctly someone wrote code is law i don't know if you're fishing or not but yeah in in a way like this this code is the law of the game right can i interact and cheat yeah so that if you can cheat the smart contract you can cheat the game the code is going to do what it's supposed to do let's let's get into let's get into games a little bit more i think the the idea of movement is a really good uh way something to talk about uh uh maybe before you even talk about that one other point i wanted to make was about what makes nfts valuable right where's where's kevin is that thing called kevin kevin nft is it even just gonna take me to that yeah here he is this guy right here so why why is kevin so valuable right now let's just go to open c right i can find it on openc but the answer the answer is the market right like i can mint an nft and you can mint the exact same nft and one of those could be worth thousands of dollars and one of those could be worth nothing and the difference between those is the market the market has decided that mine is worth more money right like what gives it the actual value so when we talk about the game and its intrinsic properties of i'm building a game and it's fun that is then kind of yes it is fun and then there's this other stuff there's this you know the market decides what makes it valuable and why it's valuable so there's a whole kind of like subjective thing that happens here not only with the fun games but what what is valuable and what's not valuable uh oh kevin oh kevin being worth for ether or whatever he's worth right now just just some fantastic stuff happening here oh ah it's ah it's decentralized and it's permissionless so you're going to have players of your game that are jerks and they're going to grief the system and you have to assume that people are going to be jerks and grief the system this is a very adversarial network so you need to build your game in a way to understand that people will be jerks and people will grief you and and it's something that you need to prepare for and and build into the game basically like thinking thinking about liquidations right when on uh i keep bringing defy into this but when you when you take out an over collateralized loan if at any time that loan becomes under collateralized some jerk can hit hit a button and liquidate you and get paid right that jerk is actually like securing the whole system and so we want to think about these protocols these games these structures that we're building as adversarial and the adversarial kind of attackers are actually very valuable in keeping the system secure okay lots lots of stuff here let's see where the dice game i want to do movement i think movement is the next cool thing to talk about uh on chain and i think this will this will show it the best okay so this is gally ass and this is running on xdi or gnosis chain and if you look closely i'm going to zoom in this cloud see this cloud every five seconds this cloud shifts a little bit keep watching keep watching watch this boat here too see that so these are game items even the cloud is in a smart contract there's a smart contract for the clouds and it says this cloud is this image and it starts here and it's moving at the speed and it's going to slowly move across the horizon until it gets to the other side and then it'll roll back around and keep going so this cloud is basically moving forever since the time i deployed it but if anybody goes to the smart contract and looks at when it was deployed how long it's been out there and what time it is now they can render that cloud in the exact same position so if anybody else goes to galeastite io and it's it's an old defunct game there's not even any wood in the harbor anymore you can't even craft ships anymore but this this game is still running and you will still see that cloud in the exact same place you'll still see these two boats so these two boats are two players notice how like massive multiplayer this starts to feel when you allow anyone to just mint a boat and then let's let's talk about this movement how this is working so with the with the cloud it's easy i can say this starts at position x and it's going to travel at a certain speed and so given any other time you know where that thing is well with the ships it's a little different see how these boats most of these boats have their sails down and they're fishing see this guy trying to catch that that dangler right there there's some fish down here at the bottom too all the fish are erc 20s i think maybe they're 720 ones the boats are definitely 720 ones though but see this this guy's moving so the difference between this ship here and this ship here is this guy has his sails up the sails are up on the boat so so the way movement works here is you get an uh 721 you buy it for .001 x die that's a tenth of a penny you could buy it for and then it shows up here but the sales are down you can see a lot of people are still here with their sales down so you have a 721 you put it into the contract now the contract's in control of it and you tell that contract i'd like to put my sales up and the sales go up on your boat so it's kind of like uh like a vending machine or even like an arcade machine where uh kids can come to the arcade and they can put in their their boats and and their different uh their swords they can get from other games they can put them into the vending machine and the vending machine takes control of them and starts playing with him based on a set of rules and the kid can play for a while and when he's done he can eject his boat take it out take it over to another game and put his boat in the other game and play with it over there right maybe maybe this game is like strengthening it or something like that right so we have all these composable components we put a boat into the world and then we make a transaction that says put your sails up and when the sails go up then the boat starts moving so instead of tracking i know this has been a long-winded way to talk about movement but instead of tracking that boat boat is at position x5 decrement you know increment increment increment and that boat moves one step every time i hit increment that would be super painful right but thinking through this how can we make these boats sail how can i do movement where you need to be at a certain place to catch a certain fish right there's this there's a snark shark right down here you can barely see it but you need to be kind of parked right here in the harbor to be able to catch that so if i was this boat right here i'd get over here and then i'd send the command to drop anchor right and that would put my sails down and and then i'd send a another command to cast my line out and it would use commit reveal we'll get into randomness next but hopefully you're starting to see like movement is a little bit different on chain and you're not going to track every xy position but you can come up with tricks to still have movement be part of the game and not have to make all those on-chain transactions so that's that's my long-winded uh uh talk about movement and i can drop even in uh this is this is such a fun game so this person is owning this castle this castle is a smart contract we can go look at the smart contract you can purchase it for 1500 uh copper there's a whole marketplace where you can buy and sell these tokens there's lots of different resources and then it scales out watch this so here's the map and here's the map of the whole world and a bunch of different islands and they're even like procedurally look at how this one is small and then thick and then small if we click there this is going to take us to another island with another set of boats and and i was in the process of basically making boats sail from island to island when i realized no one cared about this and it was 2017 and it was way too early to be able to do this so i put it away on the shelf a lesson a lesson to builders build things and show them off and get get feedback and build some more and show them off and get feedback don't go into a cave and build some love project for three months unless it's just about being in the cave and you know painting painting the happy pictures and if if that's what you're doing do that too but if you want to be effective and have a game that a lot of people play you need to iterate and you need to throw it out there and you need to see how people use it and then at some point instead of building the whole game here i should have released it and i should have let the community build on to it and and change the things that they wanted to change right so here's here's that other island kind of the big island there was a little one and then there was a big one that's this here and then there's a couple little ones but not a lot of people on this island uh this land is very open you could buy it you could claim it uh i think you need some boat to yeah so you need 25 copper and i don't have any copper yet but movement so movement on chain is is the first lesson here it's going to be very tricky if you build a game that actually has movement it's kind of almost like tuskeomorphic to do that but if you end up doing that movement stuff this is the way to do it and i have a branch here that i'll share called scaffold ocean that basically shows this concept off uh very simply in code and so let me let's see let me go kill that uh last boop shut off old scaffold eath then come over here and i'll fire this up uh yarn start yarn chain so this is another scaffold e cl uh fork anytime you use scavolith all the stuff is going to be in the same place you know where the hard hat stuff is you know where the react stuff is uh all the components and hooks and things kind of work the same way so once you know kind of like one branch you're able to pick up and run with another branch so this is a scaffold ocean and if we go look at let's go look at the contract a little bit so we're going to have some actor in the world right it's a struct we're gonna have an array of structs and then you can launch right anyone can launch an a boat a ship in in this in this little ocean here and right now it's set to only owner you could script that out if you wanted to make it more like a vending machine uh but this is just set up to kind of practice and show you how you might do this sort of uh uh motion extrapolation right so we have an x and a y and then we have a dx and a dy so that's that's their movement right so this is their position and this is their movement and uh this current location will use their current position and then calculate where they've moved based on how much time has passed since it's checked in very simple stuff but perfect for blockchain perfect for an asynchronous kind of slow blockchain you you kind of like make one transaction that says i'm here and i'm moving that way and from any time after that you can calculate that so then later on after i've moved for a while i can make another transaction to change course and it can kind of calculate okay where are you now now let's change course and move you there's no there's no changing course here in this contract it's just launching but it will give you give you this just kind of like a little starter kit for motion and let's see have i deployed it i think it might be out there let's see let's yarn deploy reset make sure we get a fresh contract oh i did it again okay same thing with scaffolding you've got your contracts here you can tinker with your contracts and then i've got a front end here what i'm going to do is just launch a little boat at 32 32 and it's gonna have a dx of one so it's going to be moving kind of left to right and uh d y of zero so it won't move up and down and grab some fronts from the faucet let's see if this is gonna work please work there we go okay so we set a transaction now hopefully our ship should be in this maybe i have to reload oh there it is there we go so we're at 3232 and this thing is going to move one pixel per second and so as we kind of make transactions here there we go we see it start to start to just uh mosey along there mosey along token zero have a good float and i in in uh scaffolding i used to or i'm sorry in gallias i called it sailing on the blockchain right because you're you're not really making any more transactions you made the one transaction to put up your sales and now you're sailing on the blockchain just with each block mind you're moving a little bit farther depending on your your speed so that's that's that's movement that is 15 minutes about movement on chain for blockchain games it's important but maybe even kind of zooming back to zooming out thinking about how pac-man in the front end was moving around zooming out a little bit more maybe maybe movement maybe movement isn't the best thing for a blockchain game right like maybe what we're doing here is like we're playing in sandboxes as kids and it's too skeuomorphic do something more innovative right maybe maybe a game looks more like isn't there a wolf sheep game maybe the wolf wolf sheep game is the new is the new actual game and it's i would i mean it's it's cool and fun but it just basically plays with block hash and randomness we'll get to that in a little bit also uh but honestly the real the real game is dark forest if you if you haven't spent some time just learning a little bit about how dark forest works get in here and learn more about it and play around with it and and it's it it's it in 2017 and 2018 what we were talking about good games would look like and we were thinking about it uh brian goo and team really implemented here with dark forest they've done something wonderful with it i mean we'll get to the randomness stuff maybe maybe i should get to that before i go too far into uh yeah and and burner wallets and onboarding okay dark forest maybe we'll finish with dark force let's take this let's take dark voros and put it out here as a reminder to get to okay uh randomness is next right so on on a deterministic public blockchain doing things that produce randomness or doing things that you want to do in secret that's actually like really hard because like everything on chain is public so you've got to come up with sorry i'm like hopefully no one's getting sick at home here trying to find the right there we go dice game dice game okay here we go yarn install yarn start run my yarn chain do a yarn deploy same setup scaffold eat got the template ready to go but in this case we have a dice game we're gonna play so how does randomness work on chain i'm just gonna take a pause here cheers happy friday happy bow tie friday randomness on chain so there are a couple ways you can do it now the block hash is one way can we just go to ether skin and look at a block hash let's look at block 601 mind where's the hash where's the hash parent block hash right there so this block hash is generated through proof of work and that proof of work crunches a whole bunch to find a nonce that ends up making this hash work uh to to to some arbitrary difficulty but what you can kind of lean on is that this is going to be pretty random like pretty random like the the minor basically let's say let's say it's for a million dollar lottery and the miners are all mining blocks the miner could mine a block and it could be not a winner in the game that they want and they could hold that block back and keep trying to mine more blocks but it's not like the miner can mine a block and particularly set the hash so they are the winner they sort of they themselves fight like find the hash sort of randomly so this block hash is pretty good but there's like a huge caveat there you can definitely game that because what you're doing is you're usually setting it up so your smart contract looks at the previous hash so here we go this previous so here here's the move right here here's the move in solidity you say i would like the hash of the previous so we we go the current block number and we go minus one that block hash so that gives us this back now in if if it is a game that is very valuable people can manipulate this in a couple different ways so going back to the wolf sheep game they are using previous block cash but they use a trick where they make sure that the message dot sender equals equals the tx dot origin and what this does is it forces no smart contract wrappers okay and and that's actually pretty pretty handy for a game where you only want externally owned accounts hitting your contract i did the opposite of that when i built a game for the build guild and i set it up so they couldn't be equal and you had to talk to my contract with your contract and like smart contract games that use smart contracts are like gonna be super fun for the nerds this this year but uh uh that's that's a whole different thing so that uh that previous that checking to see that it's not a contract means that someone can't wrap this but in this dice game you technically can wrap this so this is the first attack and let me share the dice game with the chat so your job as a programmer is to build the second contract and your second contract let's see do we have a front end with this my my homie mark put this one together there we go let's zoom back out a little bit let's see let's grab some money from the faucet can i roll the dice i don't have enough money hold on let's send some money hit them hit the faucet for some funds can i roll a dice now oh there we go we're rolling the dice mr d with the graphics we roll the four fantastic all right i think you have to roll like an f to win here roll the dice again an 8. this is this is fun i could you could sit here and do this for a while there we go hit that f hit that f come on what are we waiting for is it what what is happening it's a local host so it's not like i'm waiting for a block to mine i think something may have gone haywire here but your job as the builder is to build another contract around this contract that checks so before it gets into this function it checks the previous block hash and it says hey if if i do this calculation and then i get uh a hash of that hash that also includes a nonce and the address of this contract and really you should do message.sender here probably too uh if i do all of those things and i get a roll and it happens to be a winner then i want you to pay to roll the dice but don't pay to roll the dice in any other condition right so you could set up a contract and you could just basically hit that contract every few blocks and every once in a while you'll get you'll get lucky you could hit it from a bunch of different accounts like find ways to uh increment this to get different hashes but what you're doing there is kind of just like only making the roll if you will win by looking at the block hash and that's totally doable that's totally a thing you can do this is why block hash isn't the greatest there's there's also the condition where you could just be watching the chain and you could get the right block cash and you could put in immediately put in a a transaction with a ton of gas and make sure you get that next one right so there's there's ways to just like time it right there's ways to have attacker contracts this this is why previous block hash is not the best but i've used it a bunch like i've used it in a lot of places where i knew i could get away with it basically so uh the loogies were a good example i think i have them here in in the lugi smart contract uh i did randomness and i did it the same way i did previous block hash message sender message address and then the id of the the token and actually that id wasn't in the first version and i'll explain something really interesting that happened there so same thing hopefully y'all can see this hit me up oh yeah the ethernet this is a great shout out ethernet coin flip like that's that's a classic ethernet coin flip check that out play through the ethernet stuff if you've made it uh you know this far and you're looking for more challenges and you haven't done the ethernet stuff yet okay this randomness here is is pretty good because it was like a one-time mint and it was in 24 hours and i was like no one's gonna build a smart contract to attack my dumb lugies svg this this by the way was the the reason why i deployed this was to make a very simple svg example like look at that like there's the svg right here here's one eye here's the body and here's the other eye and it has a chubbiness and a color and it ends up looking like this right so it's got this this is a chubby boy very chubby boy what's what's what's the chubbiness here uh oh yeah 86 out of 90 chubbiness almost max chubby right so so you could have these smart contract variables and you can have them randomized at mint and then uh you know forever they are that that chubby and that color and i just basically do a dice roll at mint and i used black cash and i could get away with using block hash simply because it was just a 24-hour thing and no one cared right if you're doing a bigger mint if you could be attacked if you're going to do it for three weeks long if some of those things are going to be worth two eth apiece then you start getting into the territory of getting attacked i think the me bits contract did some they did some kind of reveal system that that used possibly uh this is all hearsay i'm i'm reeling back something happened there where someone was able to predict the mint but that might have just been they found the mint order and got ahead of it that might not have even been using block hash but block hash works sort of right and here's another way the last the last thing i'll say about block hash is you can use it for something where you set let's let's say let's say we do dice rolls okay but you pay for a roll and you stake money in on a future block hash and then you know five blocks later then that block hash happens and that's the roll of the dice and you either win or you lose and it's you didn't know about it right and so there is still like man if you're running a minor technically you could mine and you know coordinate there but in terms of like a hundred dollar game bet or something like that we're not betting we're not gambling here a hundred dollar game asset that you could win or lose that could possibly work like future block hash would be perfect for like keno right like you pick these six numbers and then the future block hash comes up with these you know 40 numbers and if you're six out of your 40 hits you can turn in and make another transaction but only do that on uh test net please because that is gambling but covan kino i'm all about tag me in the dm's and i'll come play some covankino with you that sounds like a lot of fun please use scaffolding to build it so it's hella forkable okay so that's block cash block hash is a way to do randomness uh it's probably the easiest way to do randomness but it has these kind of caveats that have to do with minor collusion user collusion you can play you can attack it with a contract you can know what's going to happen you can get away with it a lot of times and you can understand like future block hash might be better all of that said how do you do it if you don't use block hashes right so one thing uh i'll shout out is commit reveal this is another kind of clunky hard pattern but commit reveal is i just clicked the first article i don't i don't know commit reveal is uh a complicated dance that you do uh where man what is a good you know what i bet i have a good commit reveal uh explore on ethe.build i bet there's a good commit reveal here where i like oh come on commit reveal you got one here i don't see it darn it okay so commit reveal is a complicated dance and i'll go through it once and hopefully i'll cover it but you as the user and look at this actually we can use we can use uh galley ass as the background because gallias uses commit reveal okay so let's find this little homie fishing right here right and there's probably some fish down here there aren't okay let's go let's go back to an island where there are fish so commit reveal uh gallias uses commit reveal to determine whether or not you catch a fish and the way it works is you you uh you take your sales down you anchor so your sales are down you're now stopped you're you're a boat kind of just chilling in the harbor then you make another transaction to the bay telling the bay to tell your ship to cast out okay and that cast out is what uh i call the bait but that's also the commit and so you as the fisherman uh sitting in your boat you come up with a random number and you keep it secret okay you hold that random number secret and then you take a hash of that random number and you put that on chain that's your commit that's your bait that's what you cast out is your commit and it's the hash of your secret okay and that goes on chain and then that that also tags a future block and then after at least one block has happened your commit is is in the blockchain then you can reveal in another transaction okay and in this case i don't know i think we went back to the other island i don't know if i did something wrong here here let's just do this go take me back to oh man okay so you cast out that's your commit and then you reel in and that's your reveal there's a second transaction that you make okay so you at the first transaction is putting the hash of the commit the hash of the reveal on and the second transaction is putting the actual reveal on so when you reel in you basically tell the blockchain your secret and it's at a future block and the block the smart contract hashes that and says yeah sure enough that hashes to the commit that you said that we would use then they take the future block hash and the reveal and hash them together and get a random number from that so super super wild but you take a secret you hash it you put that on chain and then later you reveal your secret and it proves that it hashes to that previous thing and then mixes your secret with a block hash from the future so basically the collusion would have to be insane for you to be able to pull that off in a way that like that's pretty darn random and pretty good and so what happens is you cast out and then you reel in and that gives you a random number and if that random number is larger then the distance to the fish that you want to catch you catch the fish so you catch fish randomly using commit reveal with this two-step process in gallias and you can't do that on main neck because it's so clunky and slow and asynchronous and you have to hold that thing for that person then turn it in later garbage ux but guess where you can do that on l2s that are fast right you can you can pull a commit reveal off on an l2 and the user's barely even gonna notice right it'll be nice and fast it is a second transaction but it's not like there's so many things can go wrong in that time period so again kind of leaning into l2 222 this summer all these l2s are ready like start building your games on these l2s and start like pushing the limits of the kind of things that we can build uh commit reveal is is is one way you can do randomness all right last last way to do random is uh well there's probably many ways to do random last way that the top of the bell curve austin can explain random to you is chain-link vrf and i bet i have a vrf branch of scaffolding let's go do that first right let's go find that so let's go to scaffold eath let's go here let's find a vrf actually it's going to be in yeah it's going to be in scaffold to eat examples any questions i feel like it's it's kind of quiet i'm doing a lot of talking up here if you if you have uh uh questions what we have left is zk stuff and onboarding and inventory stuff okay so and and i think i have about 15 minutes left i think we're doing okay scaffold eat examples vrf now here is another way to do randomness and this is an interesting one yep oh this one comes with a video and everything let me share it with y'all would you encourage to use optimism or arbitrarily over polygon going back to the tool question each of these networks is slightly different slightly different security concerns slightly different costs slightly different block times if there even is block times uh so it use the one that works the best for you uh even even like when someone asks me what test net do i use i say are you deploying an nft because it should probably be over on rinkeby are you doing defy stuff it probably should be over on covant are you testing ux it probably should be on ropstate because it's slow right so use the tool use the test knight use the network use the l2 that does the job for you that does what you need it to do right if you need if you need transactions to be you know on the order of 10 cents you'll use one network if it's okay to pay a dollar you'll use another network if it's okay to pay five dollars you'll use another network it kind of depends on your game and how it works and what what you're building right one giant like disclaimer i will throw to the space because it always happens when you get into the space and you start learning solidity you start using it like a database at first so i would i would urge you to to use to try to deploy an app on a more expensive network to understand the limitations and then kind of roll back to deploying on a cheap network because without that sort of forcing function of teaching you like i can't use this thing as a database then you kind of keep using things as a database you need to like learn how to think differently and learn how to solve uh kind of problems but yes so use the chain that works best for you okay uh chain link vrf i posted it here uh yeah i i can imagine like so it's complicated to build this is complicated but what happens let's see if we can even dig in and find the contract oh yeah here we go here we go you're collectible so this is an nft that uses vrf to randomize the uh genetics of it right so you will bring in the vrf consumer base you will uh inherit it you'll call this consumer base uh on on constructor which kind of initializes everything and sets it up i don't even know what that is and then what happens is you'll call this get random number okay this is a public function and it looks like you could even maybe even create a commit reveal that goes with this i don't know if that seed is just a random number a number from the front end to help salting but you you call get random number and you're going to pay some amount of link you'll pay some of the link token to whoever is going to respond to this and then later on there's a second call asynchronously back to you to this fulfill randomness notice this is an internal function so no one else can call this except for the link adapters that are doing the the random role so you're you're going to uh make this one function and then just kind of wait and you know within within a little bit you'll get a great big random number back right and that great big random number is is verifiably random right i think that's probably what the v stands for so this is a good way to do really random stuff if you if you are doing a lottery with a million dollars like this is probably you probably want to use this and i don't even know some of the implications like maybe we could have patrick from chain link tell us some more about how vrf works uh under the hood but i just know that like in terms of you've got block hash you've got commit reveal and then you've got vrf and vrf is probably the strongest uh not a again austin from the top of the curve not a gigabrain some some of these guys could probably tell you uh different but this this is what i would use for some of the most expensive stuff and it's and you're you're gonna pay for it too right you you pay for it in different ways you pay for the block cash in ease of use but it's exploitable you pay for commit reveal in clunky ux where it's got to go back and forth you pay for this in link and it is still a little bit clunky okay we got we got we have got we have ground to cover here still so we we've kind of talked through movement on chain and how that's interesting we've talked through randomness and how that's hard on a public deterministic blockchain uh we talked about commit reveal working very well but we haven't talked about zk tech and i think zk tech is is really like kind of on the on the forefront of really being something that's important for blockchain games and i have a couple different tutorials i want to show off all of these are from calvin shout out to calvin who's been working on the build guild stuff uh so here is a circom starter kit i'm just gonna i'm just gonna link dump into you into the chat if you are interested in zk start playing around with these starter kits these these could be these could get you halfway to having a game the next one is a voting example so voting but with your votes hidden right the next one is a membership example where you can prove that you are a member of a certain group by owning an nft but no one can see who owns the nfts or something like that when he explained this one to me it was like all right all right let's share it i don't know if i totally understand it but let's go so zk is kind of like this other interesting thing another thing that we should talk about i think there may be randomness after the merge i think this idea of randomness may start coming in from validators on chain so we may have like some randow stuff going on where you can just kind of like acid chain so maybe maybe all of this is for naught in a few months or or a few years depending on how we how we do there okay that's randomness and that's uh hidden stuff too so i wanted to add the zk stuff because it comes down to like what if you have a map and there's a map to explore uh you can do that with commit reveal and i want to define that with the dog oh here we go here we go i'm gonna paste this into chat look at that you guys are just getting tons of chats here but watch this so this is this is a game i built a while ago go called the dog and every time i click on a box right there i'm doing a commit and then silently a reveal is is firing uh off underneath and so that that requires a burner wallet and a fast chain and a lot of other things to make that work and we'll talk about the burner wallet in a second when we get into onboarding in the next nine minutes but i just wanted to show how fast that that works right watch me clicking click click click click click each one of those is actually a two-step transaction but for the user they're just sitting there clicking just clicking away and look at all that new those new land tiles that sort of randomly reveal and you discover things there right see that all kind of open up and see that world open up so this was the dog a game i built it's like a governance game each each game basically has a moloch dao that controls the rule set and each rule is a smart contract and you start out with a certain set of rules and a goal but then you can vote in new rules and the rules of the game can change as the game progresses and it all uses like v1 moloch dao just to like really dog food a lot of our own tech and kind of play play around with dao governance and no one really cared no one no one cared about people building games in 2018 on chain but they care they care now and it's l2 summer and it's up to you builder to build something awesome okay so commit reveal this this leads me though to burner wallets okay if we go to where's that that scaffold eath example which one of these is still up the dice game where's the dice game what do we got here sorry for all this flipping through stuff here we go this one's still up okay let me show you burner wallets so a burner wallet is instead of having that 12 word seed phrase in your meta mask locked up here behind some terrible user experience and slow providers you can have a burner wallet in your browser obviously this is ephemeral obviously this is not super secure i could go inspect this and i could go look at the application memory and i could find a private key right understand the security practices understand your opsec a little bit understand what's going on there but when you have a a burner wallet in a browser when a person can just go to your website and land on it and it's going to generate them account see that blue and pink let me close that and bring it up again uh localhost scaffold these does this out of the box almost always you turn it off because very rarely do you want instant onboarding almost all apps want you to basically have money to be able to participate but really good onboarding some apps don't require you to have money some apps say come play first come provide to the ecosystem and retroactively you'll learn how to take care of your wallet and these are kind of burner wallet apps uh dark forest is is is really like someone who's gone a long ways with it but uh if we look at i think nifty inc is a great example too nifty inc is probably one of the first apps like production level apps there we go so c7 2 b 0. like there there is that person and if i close this all the way out and i go to nifty inc i'm going to get a brand new address right 8827 okay so you can with just a tablet type in nifty dot inc and land here and see some other cool art and say okay i want to create my own art and you can go and you can draw something and that's going to go on chain and people are going to be able to like watch you draw that thing and it all goes into ipfs red and i'm going to say two and i'm going to mint now this uses a burner wallet and it uses that ephemeral key pair to sign a meta transaction and then there's a meta transaction relayer that uses my gas to pay for your transaction so you as this random new character just drew some really cool art you signed it with your key and it's now on a side chain and it'll take a little bit to load here but then people can get in and buy this thing i can even go here and i can put this thing on sale for a dollar without ever paying any money or ever having any eath or understanding anything about key pairs or any of that basically i'm straight in here doing some art right then then let's say this is dope af and everyone's like i want red red squiggles red squiggles buy it buy it now now i'm going to earn money right this if this sells one dollar a piece it's a one of two nft i'm gonna have two dollars on this burner account right i should keep better care of it i shouldn't have it in an incognito window i should go here and i should reveal the private key and i should store it somewhere probably uh if you put it on your home screen that's good too but here's your onboarding now this is instant onboarding and it flips the onboarding on its head because instead of me saying uh luke if you want luke if you want to get on nifty inc you're going to have to learn what a 12 word seed phrase is first and you're going to have to learn to back it up instead of all that horseshit i'm saying draw something contribute to the community do something cool first and then afterwards if you do something you're going to earn some tokens you're going to earn some value and then it's going to be like oh how do i how do i protect this right now that i have this two dollars in this 8827 now i need to learn what a private key is and i'm incentivized to learn what a private key is and it's a lot easier for me when i'm incentivized and i'm on the back half of it rather than up in up front having to do it so this this will hopefully drive more traffic to your app and allow more people to use your app and kind of smooth that onboarding and make it just easier for folks to land and use and that is that that's my talk about onboarding i think there's there's like a lot of other things we can do better signed messages are really nice sign type data is really nice when you can just have a user sign if i go to the the build guild bazaar and i want to shield my wares i basically just need to sign a message a lot of these web 3 apps can just be signed messages like sometimes it can be on a database sometimes you store it on everybody's database obviously being decentralized is important for some things but you you can progressively decentralize as you go okay what makes blockchain games really cool what what is what is some of the most important pieces of a web 3 uh blockchain game and and the two things i want to hit on here are basically your your identity and your inventory are going to follow you from app to app going back to the kid with at the store who who you know takes his sword and pulls it out of one vending machine and puts it into another vending machine uh that vending those swords follow me from place to place and then that second piece is composability you you can take your inventory from one game and play in another game and and games should probably like accept that and be ready for that if if you want to bring your crypto kitty into dark forest and do some battle with it maybe maybe a crypto kitty could like uh like be in the ship or something right okay so i'm like faking composability here let's let's let's think of some real composability examples where the space like could really shine so uh i think i got it wrong in terms of building galley ass as a full game what i should have done is try to build galley ass and then realize there's no good inventory system for web3 there's no good uh movement system right maybe just like the pieces in the thing moving around that system in itself could be a composable component of web3 so as you're thinking of things to build as you're building things you don't have to build a giant game you can build that one composable component that all the other games are going to use and and so thinking about your inventory following you from from one uh game to the other what if you built a great inventory system that anybody can use and it renders things nicely or something along those lines what if you built movement what if you built uh uh uh some kind of svg rendering thing that renders them using ml you know there's there's a ton of things you can do okay i want to close out i probably will go like two minutes long unless unless we'll get in trouble for that i want to close out by just showing um some fun composability stuff with nfts luke interrupt me if if i okay i gotta throw a quiet thumbs up okay last thing i want to show off uh just just what where we've taken the loogie so far because there's some fun little little things that have happened here so if if you have a loogie uh on lugies.io you can go to claim oh so let me go let me go to lugies.io first of all uh burner wallet you mean yes okay i i don't i don't know if i caught the total burner wall by the way if you want a cool burner wallet to fork you won't actually want the wallet go check out punk wallet punk wallet is basically dang what am i doing this is a lot of money on optimism ah that's probably a burner wallet too a man i am just irresponsible anyways if you want a good forkable burner wallet that does this uh kind of the private key and local storage this thing does wallet connect first you can wallet connect into things go to punk wallet punk wallet is uh let's see can i just oh wait the code's right here boop and then boop and then boop there we go so punk wallet is a very very forkable wallet connect first burner wallet so that's also burner wallets come out of the box with with scaffolding okay anyways anyways so so you've got some loogies and loogies were basically just a demonstration of how to really easily do svg nfts so you've got some loogies you can go to lugies.io and see your loogies uh but what we realized is we wanted to do a bunch of crafting and fun stuff and you could barely sell a loogie on like it's i would say a loogie is worth like 40 right now and to to move them gas is about 60 right now so it's kind of like those loogies are kind of just frozen there eventually we will come back to mainnet and do something cool with those loogies but what we're doing is we've ejected to optimism and you can go to claim dot optimism and we've started the loogie verse over on optimism so what you can do is you can claim your uh loogies over on optimism okay and then once you've got them claimed you can go to what like optimistic loogies okay okay here we go let's put our wallet on i don't even know what wallet this is put our wallet on optimism there we go okay i'm gonna mint one of these watch how fast this is watch how quick this is this is over on optimism this is costing me like a dollar and boom i should have a loogie there it is there it is lugi number 1255 minted fantastic okay so now that i've got this loogie it's it's over in uh optimism now what can i do with my optimistic loogies well i'm glad you asked i'm going to go over to fancyloogies.com built by my homie damu and look at this we can see my loogies here oh look at this lugi that is that is a nice we want yes approve that to be a fancy loogie absolutely yes okay so we're upgrading okay upgrade to fancy loogie so now we've taken our loogies we've upgraded them to optimistic lookies now we've upgraded them to fancy lugies honestly nothing here is is new like this happens all the time there's no composability here yet but the the composability is coming here it is so now i'm going to select to wear oh let's take this loogie to the changing room what are we going to buy oh we've got bow ties okay i'm going to mint a bow tie nft going to cost me a buck totally worth it oh that is a nice one okay so i know that i don't know why it's making i know that there are bowties that spin and they're extra rare so i'm gonna try i'm gonna try to spam mint a bunch of bow ties oh got one second try purple spanner all right so now i'm going to outfit this homie so preview there we go and it's like hey do you want to take this this bow tie nft and attach it to your loogie nft your fancy loogie why yes i do and transfer and we're set now i've got what is this fancy loogie number 81 is uh set up with a spinning bow tie now okay here we go now the last website built by uh homie block dev is the loogie tank okay loogietank.com i should have been posting these in so did i post in claim i didn't okay here's claim and then here's optimistic loogies all of these are built by different folks uh damu actually built both of those first ones uh and then uh loogy tank there we go so now i have a loogie tank so now i can mint a tank and it's basically this blue square here let me just mint another one so we see it happen okay minted cool cool cool cool okay but what i want to do is i want to send in the fancy loogie that i just minted into this so this loogy tank is an nft i can send this to vitalik right now and if he effs around with optimistic loogies he'll see this cool loogie tank and he could eject the loogies they're all in there and they'll go to him so the tank owns the lugies the tank is an nft you can send around but something really neat is happening here and it has to do with how loogies are rendered notice we have this render token by id and it doesn't render the svg here the svg is here it's calling render by token with svg around it and what's happening here is we have a public function that basically renders the guts it renders what's inside of the svg so guess what this lugi tank does when it goes to render it looks at all the things it owns and it calls render token by id on each one of those things and collects a giant svg and that's what you see when you go look at lugi tanks so let me see if i can send in so i'm going to go to quicksonic which is uh a marketplace i think they spoke earlier they mighta might have shield some oe 40s make sure you get yourself some oe 40s they're a retroactive public goods token uh but let's go back to fancy loogies what i want to do is just steal the contract address here all right this is the last thing and then i'm done sorry i went overtime everybody's itching to get out of here and get a beer and go to dinner or go hack or do something what i want to do is i want to send this loogie into the tank don't send it to vitality not yet not yet okay so it's that oh what's the loogie id uh 81 81 81 uh three let's preview it oh there he is oh here it goes don't eject so approve this is this is okay i'm just kind of trusting these buttons and kind of yellowing especially when they count nine grand on it don't do it all right i think that should be it i think i sh i think i just crafted loogie tank there we go lugi tank number 20 is crafted and ready to go it has some fantastic loogies with some rare bow ties crafted in it has a normal optimistic loogie a big chubby boy and then some other fancy loogies so like multiple different child contracts being rendered in one should i yola should i yolo this too i'm not going to i should yellow it too too vitalik but that is it that is composability that kind of stuff is going to run wild this summer build really cool composable things maybe it's not just the whole game maybe it's a small piece of the game right understand how movement works understand how random works understand zk tech and how you can hide things out in the open right understand uh some of these like civil resistance and identity and onboarding things and how burner wallets can help you like get folks in quick um i think that is about it i haven't been oh yeah i've been watching it i've been watching the questions we're good i think i think that's about all i'll stop sharing now sorry we ran overtime luke hope hopefully we're good hearts hearts hearts no problem whatsoever we all love to have you here these are some of our favorite workshops uh at our events thank you so much austin for that hour of power uh and grace and finesse and all good acronyms and all good adjectives now that was awesome super happy to have you back uh and thank you to everybody who joined us it's been an incredible evening i hope you guys have all learned a lot uh and i look forward to seeing what y'all do with that in your projects over the next two weeks uh as i always say continue the conversations in discord the man told you to dm him dm the man get in his dms they are open um but we look forward to seeing everybody build some beautiful things over the next two weeks let us know if we can do anything to help you out and uh good luck hacking oh yeah uh details right there i got a shell i got a shell speed running you got to do it you gotta do it make sure you're a builder get it get that scout relief get started but if you're a builder getting into the space you're looking for the next challenge you're looking to tester if you are a web 2 builder looking to get into web 3 speed run ethereum if you have web 2 friends if you're a web 3 nerd already and you're just trying to talk your web 2 friends just tell them go speed run ethereum scaffolding speedrun ethereum it's the best onboarding for developers they'll get the mental model they'll thank you later tell your developer friends to speedrun ethereum sorry i just don't know the speed run speed run chilling i love that yes that's right right the way all right everybody we're going to be closing the session right here thank you again austin and thank you to all of our wonderful audience members we love you guys uh and yes it is bowtie friday as if there ever were one the best of the best all right y'all 