let some people trickle in sweet okay hey everyone um welcome to building on gearbox our uh workshop with mickeyella here from gearbox um we will let him uh do his thing for a while but feel free um as he is going through his workshop to put some questions in the zoom chat um and then he'll do a little bit of a q a session at the end um so yeah feel free to take it away now okay thanks so much so good to participate in as global as sponsors as you know gearbox was born in as global around one year ago so it became a finalist you can see in presentation of market making january of 2021 and since this day i me and my team work closely to make a really leveraged composable so hello to everyone thanks for joining and before we will make our hands dirty just a short recap what is gearbox and what we are working on so uh can you see my screen just a short question guys who is already connected just pinging a child that everything is okay yeah cool thanks so much uh so here you can see that gearbox is generalized composable leverage protocol and gearbox itself based on new defy primitive which is called credit account technically speaking gearbox credit account is an isolated smart contract and could be represented like smart contract wallet which could manage your own funds and some margin loan funds however you can't get access can't get directly access to this funds but you can use it on different external protocol so gearbox itself does not provide and service instead of that we can talk more about empowering other protocols so for example when you combine gearbox with uniswap you can get margin trading when you combine gearbox with convex or iron you can get a leverage farming with lidar leverage taken and so on and so on now we are working with for v2 and today presentation uh would be about it and v2 has already seven major connections with seven measure the five protocol such as uniswap v2v3 sushi swap urn lidar curve and convex and it's pretty simple to build it because in as amsterdam when we also participated as sponsors it was a few teams who were able to make such an integration in less than 30 hours and they also were able to build some interfaces and so on and so on so gearbox itself could create a really interesting way to build composable strategy in the most native way so you can consider credit account as your meta mask wallet but with x10 or x20 more money and to talk a little bit how it works let's go and talk about architecture so as you can see on this picture gearbox is two side protocol and on the left side you can see liquidity providers this people or customer segment provides capital to the pool to gain apy and they prefer passive investment strategy and basically this left part is similar like it works in major lending protocol like compound or hour but what really makes gearbox unique is the right part and here you can see borrower or strategist or trader a person who wants to get leverage to do so this person could open a credit account and as i also mentioned credit account itself is an isolated smart contract then borrower could send initial funds on it and this credit account has an ability to take margin loan from the pool so after opening credit account it has two source of funds the first part is initial funds which were taken from borrower and another part is margin loan all leverage which were taken from the pool then you as a borrower can send different transactions to a special smart contract which is called credit manager it checks them not to be malicious and if everything is okay they would be executed on behalf of credit account on third party protocols so let's go through example to show how it works here you can see how to open credit account and today we will check how to do this programmatically of course so here you can see borrower provide 10 0 to credit account and credit account itself takes 90s from the pool so after opening credit account you have 100 s on it you can use these funds and manage them across listed protocol listed protocols and it depends on credit manager in other words you can simply consider credit manager like policy keeper who knows which uh contracts are allowed and what you can do another part which is pretty significant that this smart contract is nominated in s this property is called underlying asset or underlying and you can't change it so your debt interest rate and fees are always in s and the last part of course is interest rate because there are no free money anywhere so when you take this margin loan you should pay some interest and this interest rate is calculated similar like it hour or compound do and it depends on pool utilization so after opening credit account what we can see on this picture you as a trader could of course use these funds to build other strategies so here you can see how it work use borrower send transaction and before it would be executed we make a few checks the first one we want to check that the target contract is white listed it means that v really allows you to interact with it and it's done of course to eliminate some malicious smart contract the next point is also crucial that the token is in allowed list it means that token which you will get as a result could be used as collateral and just to simplify the rule gearbox supports only token which has chaining price fees so basically if this stocking check have chaining price feed is in this allowed list this transaction would be executed on behalf of credit account and then after it the system will check that health factor is more than one and it's a very very significant term because health factor more than one means that credit card account itself could pay the debt and interest rate back if health factor is less than one this transaction would be reverted so basically there is only one case when we can get this health factor less than one if some rates would be changed during some price fluctuations and at this point such account could be liquidated with a similar flow how it happened in hour or compound and to talk a little bit more about liquidation and risk model let's go to basic things in credit account so on the right part you can see graphical representation of credit account you can see that this credit account is also nominated in s what means that the debt is always an ass interest rate as we discussed before and here you can see the list of allowed talking lease of allowance all over tokens so you can you you can use it for keeping our die usdc in crop test and so on and so on then you can see balances of this credit account and prices what i really mentioned we were taking from chilling price fee so to compute portfolio value it's a pretty simple you can just multiply balance to price and then summarize the result so basically the first significant i will provide maybe in the chat uh parameter is called total value and you can find it in our smart contract total value represent how much money you can get if you swap all assets on credit account to underline one using some prices price is taken from chaining price oracle the second parameter i will also provide it in the chat it's called a total weighted value or cvv for uh to make a short name yeah so it looks like similar like portfolio value but as you can see there is one more multiplier which is called lt or liquidation threshold and liquidation threshold it's a really key parameter for each asset it represents the over characterization so in gearbox to have a time to be liquid to liquidate some credit account and have enough money to pay back margin loan to the pool we need to underestimate portfolio so liquidation threshold is always less than one and basically you can simply consider it as a maximum expected price drop during degradation so it's pretty clear for example that for two stable coins it could be round one and for two high volatile assets like wrapped ass and die it would be like 0.7 to set up these parameters precisely we have a special risk commit c and dao who decides which parameters and which tokens should be added so when we construct this parameter which is called just to recap threshold weighted value it's pretty clear to create another very significant parameter which is called health factor so health factor itself is a ratio between threshold weighted value and borrow amount plus interest rate at moment t so as i mentioned before if health factor becomes less than one such credit account would be liquidated and in this case liquidator pays at current setup 95 percent of total value and get all assets from credit account uh so uh it would be always profitable for to be liquidator because you pay you get a five percent discount of real market price and probably the main question here to liquidator is it enough such amount of money to cover gas cost so basically if you go back to our architecture slide just to recap us borrower open credit account and provide your own part of the funds so to get x 10 for example credit account would take margin loan time nine times more from the pool then you send transactions to credit manager and we will discuss a little bit more how to make technically and then they would be executed if they are pretty safe on behalf of credit account on third party protocols and here you can see how flexibility and composibility comes to end user so basically we can really connect a lot of different protocols and you can create a really different and amazing strategies for example you can open credit account then use unislab to swap s to die which would mean that you short position because you have depth in s then you swap it into die and then you can put this dye into urn volt to get additional yield so it's a really interesting feature and to talk a little bit more why gearbox has unique market offer just a few things which is really could be done only using gearbox the first part that we can provide like x20 capital and it's a really huge leverage comparing with other lensing protocols majority of them just allow you to up like x3 leverage maximum another great part which is really inspiring that you can leverage your lp tokens which is pretty cool for example on convex now you have an average six or seven percent api just keep in mind with x10 it could be 60 percent at the lowest estimation and then you can pay for example four percent to the liquidity providers so we should subtract 60 minus nine times because because we get x 10 to 4 percent so this strategy could generate you at least 24 percent and of course you can combine different things and make really cool strategy and what i also talked about that you can combine different defy strategy to generate more yield make more money and so on and so on so just a question please uh write me in the chat have you any question in this field or we can move forward to talk a little bit more how to be integrated and how to build upon gearbox questions one questions too okay got it thank you so let's move forward and check a little bit uh how to work on gearbox i will share i will share my vs code just one more question can you see um [Music] my screen source yeah cool thanks so much thanks so much uh so at this place it would be just a short things how to build upon gearbox and what we are going to create at the moment using gearbox with two is some i don't know earn world or something like that where could be tokenized world which uh follow erc 46 26 standard so as after this workshop you will be able to really implement the pretty complex things like earn smart contract but a lot of complex logic could be encapsulated in gearbox and another part you can see how to build and how really use gearbox so i have a small boilerplate which i've done before workshop what is crucial here so if you go to package.json you can find the really useful npm package which is called gearbox protocol slash contracts it really have some interfaces from our smart contracts and integrations so it's strongly recommended to use it when you want to build something on gearbox or if you want to use gearbox via typescript of course it's better to use another very very commonly used package which is called gearbox protocol slash sdk so basically these two packages i strongly command to use and i make a hard hard hard hat initialization nothing more here just import all other significant things for development and of course open zeppelin contracts and some hard hat and other libraries which is always used uh here and then i make one smart contract which is called uh constants it doesn't matter it just have some dump constants uh which is connected to such a thing so basically our goal as i said to create some world and of course the vault itself uh would be tokenized so it's why i called my smart contract gearbox world and it follows erc20 so it itself inherits erc20 and let's call this token all the gearbox vault or gbt so you can see it here and there are some very significant part just i want to tell you a little bit more until we will go and implement something so here as you can see to work with gearbox as i show you in presentation we have a special smart contract which is called i credit manager so in some terms you can consider the logic is here each pool could be connected with a few credit managers and only credit manager could take funds or really manage funds from the pool then each credit manager has connection with credit accounts yeah it's a mapping and if we go and check a little bit [Music] let me check what's going on [Music] uh yep so here if we you can find a special function getter which could return you the address of each borrower so credit manager itself it keeps all addresses of credit accounts connected and open on it at the moment as i also mentioned when we talk a little bit about credit accounts i said that credit account itself has an underlying token however to be more precise underlying token is also property of credit manager so basically all things you are going to work with is connected with credit manager and here you can see some functions exceptions and getters which are which could be used on credit managers however in the second version we use a facade development pattern so all function which you need is located in smart contract which is called credit facade in other world credit manager itself behaves like a back end and credit facade provide all functions you need to interact so each time if you want to figure out how it works and so on and so on please go to our website which has some explanation how it works i provided in the chat it's called https dev.gearbox.ify so you can open and follow it in documentation you can find some slides and explanation how it works you can see pools credit accounts and definitely all information concerning different methods and getters here so in our world what you can see we just keep credit for assad because credit facade itself is enough to manage our credit account and as you can see here uh the logic is following so what we are going to do we will deploy this gearbox vault then gearbox world should open credit account and then people would be able to deposit die into this gearbox vault and get gvt as you can see or they could withdraw gvc to get their back so it's a simple tokenized fold as usual and another part what we are going to do we will build just not to be out of time that you as a vault manager so for simplicity we call this role manager and it's also just an address of msg sender for simplicity here which would really be responsible for changing strategies so here we are going to implement two strategy one strategy is provide dye in the by urine dye and another part is provide dye in the convex three serving pool so basically it's a pretty interesting option for example you can create a special role which would really check different api and compare them if why earn dipole will provide higher apy the system could switch everything to wire die and generate more yield for talking to forward token volt holders if convex would provide higher apy you can switch and of course all concepts which we discussed today would also work for everything so basically you can definitely uh not only focus on dye and convex 3-pool you can create a few different strategies make different switches and so on and so on and just keep in mind because gearbox could be considered the credit account itself uh credit account itself as a smart contract wallet so switching cost between different strategies would be without big overhead when you compare them with your native actions using metamask so it would drastically cost how much gas you need to pay when you close earned position and you will die as a result and then when you construct your convex take position so pretty cool no predefined strategy you can do everything is it clear at this point what i'm talking guys press yes or let's make a short colonization to move forward it's your developers while on a call i can find yeah cool thank you cool thanks so much so basically let's make hands dirty and the first point what we should really do to be able to work with credit account and our idea and what i also told told you that with this credit account and smart contract wallet we can get leverage and for end users who provide money for this tokenized world it would be very profitable to buy your tokens so to do so the first function which we are going to really make here would be called open ca and of course it should be external and manager only because opening credit account as i also mentioned is allowed only for uh credit manager so to open credit account it's pretty simple we should go and check our credit facade interface it's here and here you can find a function which is called open credit account so for our purposes it's much easier to use it so for some advanced usage there is some [Music] options and multi-code would help you to execute different transactions during opening credit account for our purposes what we are going to do is to open credit accounts so here as you can see amount it's how much money you're going to provide here uh on behalf of its the address which would help which would have such an account leverage factor is leverage we are going to take and referral code does not matter its design for referral program so and we can simply skip it as zero so i just copy this function go back to my world and here and another part which is also very significant at this point that uh crazy account itself when you open it will withdraw this amount of money from your account so from account which try to open it in our case this amount would be withdrawn from our smart contract probably it's better to add something like your c20 at asset dot transfer from image sender so at this line i transfer funds from manager because manager execute this function to this smart contract and the last point that we should definitely talk about that credit account itself and credit manager has a policy like a minimum borrowed amount in other cases this is minimum borrowed amount means that how much money as minimum you can borrow from the pool it's done to make liquidation profitable so to get it we can simply [Music] and we can simply get the instance of credit manager and ask like borrowed and let's divide them for four so on behalf of of course i'm going to uh that this smart contract would have this account leverage factor is how much money we want to take from the pool it's like multiplier in our case let's talk about x5 it doesn't matter but it's okay to get this things and here you can see why i put four here and 400 here and referral code you can skip it as zero yeah now it's okay so basically what we have done here we provide an amount we really uh transfer uh diet tokens from msg standard to this smart contract in the mouth whatever we need to open x uh five credit accounts so we will provide some part from us and then of course we will get them from the pool so now it seems that we have investment in size of amount maybe the latest things we want to do is to mean msg sender this amount because when you open credit account you provide your funds so we need to mint our world tokens gbt tokens to msg sender a person a manager who established this world so basically of course we can make this function much better for example we can check and add some requirements here not to be executed if [Music] if smart contract has already opened the account to do so you can just check that this property which is called credit accounts when you provide the others of this smart contract returns zero which means zero address and uh this uh smart contract that do not have it so basically it's the first point which we uh we've done how to open credit account so now it's possible for us to really make next steps and next steps what i'm going to do is how to really add money to credit accounts so basically let's consider the next point as some your user who want to provide money for this strategy so user will provide some amount let's call this amount some amount to our world and as a result we should mean some uh tokens gbt tokens to address provide as receiver i think it's a pretty clear task here to do so it's also pretty simple to do as we have done before the first point we should just transfer money from people who call this function to this smart contract and amount so now we take amount which were asked from this parameter and now this funds on our smart contract the next point what we are going to do because now we have money is to really provide them into smart contract to do so we have a function which called add cultural sorry no why it doesn't work so if we go to credit facade as well and check all add collateral you can see parameters it asked us to provide on behalf of so this is the smart uh credit account owner which would get cultural so for example if you are going to build something like death saver or something like that you can provide coverall for some external smart contract it's up to you it's why it's done by design token is addressed because it does not really required you can provide any token from a lower talking list what we've mentioned before and of course amount as well so when we go to our world smart contract you can see here at collateral function what i really want to do that our smart contract would be a credit account holder i want to provide token which is asset so basically asset is a underlying token and the size is amount so it's also pretty simple and the latest things i want to implement here is just to mean tokens in terms of um amount but here a new problem comes because you run deposit maybe a little bit later and some people who invested money before you already get some interest rate or maybe take some losses it's also possible if you manage some risky strategies but we are talking of course about lp strategies and lp strategies itself are pretty safe so now here one more error so we should talk about receiver because receiver will get so to do so let's compute how much shares we should provide and shares as you uh know it's your amount of money and then it's pretty interesting to understand how much uh money we have at the moment here to do so we know that we have a total supply and at the same point do you remember we talked uh during a risk and liquidation slide that we have a parameter which is called total value total value just to recap here is the sum of p i to ci so we compute how much money we have on credit account so our logic here is to really understand the share of value is to take total value divide it to four because we have like uh to five sorry uh because we have x five leverage so now when you compute this share it's how much money and of course we should divide one more time to total supply function to get price of each share hope it's pretty clear so let's share price equals and then as i also mentioned we have a crazy cool smart contract which is called credit facade and it hold uh method which calls calc total value and let's go and check how it works there so so here you can see this method is designed to be used for uh with a lot of flexibility so itself it does not get bore or credit account holder instead of that get a real address of smart contract and it returns two parameters the first one is a total value and the second one is threshold weighted value so if you go back to our smart contract we need to make one more introduction we do not need this threshold weighted value and we should provide address of credit account yep so now it's okay but we do not know what's the address of credit account because we know on the address of this smart contract which is owner of this credit account to do so we have a really good function which is called great oops it could be done a little bit more optimized and get credit account or reward and here we should provide the address so if we go back here and check it so you can see who provides the address of borrower and it returns the address of credit account which just remind is smart contract wallet here if borrower has no open credit account for some particular credit manager it just rewards so here you can see step by step on the first point we compute this credit account address then we called function which is called calc total value and provide credit account as a perimeter so it's do all mass for us and return total value and threshold total value of course there is no need to use threshold weighted value for us and at this point we should just to make the last computation divide five divide total supply if i remember correctly let me check i forgot should i make underscore or not but i think it's not significant here so is it clear why share price would be calculated this way source hope so so basically the next point which you can see and now we have a really clear picture how it work and how to make deposit function and of course you make and done this this row on your own and the last part what i i know that i have only five minutes is how to manage uh this thing so basically to do so how to provide this money which we just send using at collateral method the last point is how to provide them to buyers so let's imagine we have to earn and we need to call it so to do so we need to really find the first the smart contract which is called adapter and in gearbox if you want to interact with third-party protocol like earn unislab wherever you want you should really send the same transaction like the original smart contract for earn you want to call method which is called deposit and as i mentioned this deposit should be called not on original smart contract but on adapter and if it do so everything would be okay all funds of our credit account would be used to do so we needed first to find address of earn adapter to do to make this happens we should go also to credit facade and it has a special method which is called a contract to adapter so pretty easy you provide address of a smart contract you want to interact and it returns uh the address of adapter and then you when you call the same function like original urn it would be done there so let's go and check the last item of this puzzle so i go to create facade your contact adapter it get dress and return address so here i take the constant which is called earn dipole here so now i know the uh the address of iron adapter so the latest things i want to implement here here i also call method at control so now all funds which were taken from this user are on our credit account the last part to really construct this function which is called deposit is to call deposit function to do so i can simply get original urn interface which is pretty cool so it's a really amazing feature of gearbox you shouldn't learn new api or something like that then i should call the function deposit and this uh what you should done to provide money because adapter itself create all needed allowance for credit account you shouldn't focus on that so here you can see you simply call deposit the same way you will run deposit on your round if you want to take money but here as you can see we provide cultural here and at the opposite and another part it was like a home task if you want to accomplish it to make a little bit better and to keep leverage of course we can increase depth this function is used to still get x for our money because as you can see when we called add collateral it means that from our user we transfer some die amount to create account but transferring this amount do not provide your immediately leverage so we withdraw money from user send them to this credit account and the last part when you call the function increase depth i do not really believe me that increased depth yep just to keep it the things and time for colonization when we really call this function increase depth with some parameters it would really take from the pull another margin long to keep this uh funds like x x4 x5 and then earn function deposit will deposit five times more money than you provide here basically it's a short explanation how to build fold it's not already made and of course a lot of stuff should be done but basically i hope during this example i go through basic concepts and if you would decide to build upon gearbox feel free to ask on discord or go to dev documentation to find answers and we are here to help you so thanks for much oh pretty cool the first question how to get third-party protocol white instant gearbox a cool question thanks for it to do so you should build a smart contract which is called adapter if you go to dev gear boxify there is an example how to build adapter for unis of rp3 it's pretty simple then of course your adapter should provide some technical uh security outdoor it doesn't matter for hackathon properties and the lightest point dao would decide to add you in hackathon i hope tomorrow we will make a clear proven deployment for hackathon purposes and to connect it from the cover network you should ask me for some test network like forked mainnet or coven you can just get a super user rights and call method which is called a low contract and it's done more questions sweet um yep i think we're good um but yeah if you do have more questions um be sure to hit up the gearbox discord uh channel um and yeah thank you so much mikhail for joining us and for that super informative workshop and yeah again uh discord for all of your questions um they'll be there uh just checking yeah absolutely yeah and we are here to help you to build if something can clear please do not hesitate we are still building and the gearbox itself has ambitions to become like a leverage layer for whole device space so more integrations volts upon gearbox and a lot of amazing ideas we can discuss with our team so if you need any support in terms of product technical help and so on and so on feel free we are here to help you to build awesome all right thanks everyone for joining have a good day 