nice yeah there he's going yo good arthur how's how's portugal nice yes trip with our team for the first time well sorry to interrupt let's get started we do have the stream live on youtube now so anyone on youtube can join um awesome okay hi everyone um good afternoon good evening good morning depending on where you are and we have arthur here from vaults doing the workshop on building the future of defy unfolds protocol uh questions will go into the zoom chat and archer we'll answer them all at the end and with that being said i'll pass the mic off to our speaker awesome awesome thanks a lot anna um i guess i'll start so welcome everyone thanks a lot for attending the this workshop um we'll be focusing on um kind of building on the future of d5 on vaults protocol um and i guess without further ado i'll just uh introduce to myself so my name is arthur begyan i am the cto and co-founder at volts labs um the company behind the volts protocol which is kind of a non-custodial automated market maker for interest rate swaps uh which i'll talk through a bit more uh later in in this workshop um but if you want to reach out to me you can always do it on twitter on discord um and yeah if you have any questions uh concerns or uh i would like to build on top of all throughout hack money or beyond uh then i'll be i'd love to talk to you and and our team would love to kind of help you out and get you up to speed with the protocol um so i'll start off with the agenda so the agenda is kind of split into kind of a few uh key kind of points i i'd love to lend um so first we'll talk to the bounties for hug money then we'll kind of dive into kind of what what walter's particle is um and then explore they can the concept of constituted liquidity that kind of underpins the uh mechanics of how fixed rates are created on walls protocol then we'll move on to the developer resources uh followed by a discussion on kind of lp optimization um which will then lead up into our kind of workshop where we'll try and build an lp optimizer together um on top of volts and then by the end of the talk we'll we'll be able to kind of go through some questions as well um cool so i guess starting off with the with the fun parts so for the hack money hackathon we have prepared uh 8 000 dollars in bounties um so the first prize will get four thousand the second prize will get two thousand and then the third prize will get one thousand um cool so um i guess before diving into the workshop um i would love to kind of describe um at a high level kind of what what is wall's protocol um and at kind of at the core uh vols protocol is an automated market maker for interest rate swaps and you can kind of like you can kind of think of it as um as dydx but instead of kind of expressing your views on kind of directional price movements volts enables you to kind of express your views on directional interest rate movements um so if you think of of votes as an ecosystem you can think of like three key uh actors that that make this ecosystem flourish so on the on the left hand side you've got fixed takers who are um agents who um you could think of them as kind of risk-averse individuals who could be um kind of interested in kind of gaining yield by depositing funds into variable yield protocols such as away or compound um but because there is converse they might want to kind of hedge the the variability of the rates and secure a fixed rate that will be stable for a certain duration of time so what they can do actually is they can come to volts they can give up their variable rate of return um and in return get the fixed rate which is secured by the other side of the market which is defined by the the variable takers uh on vaults and the variable takers are kind of like taking the opposite side of the market where they are having a bullish view on the rates and and are ready to kind of like ensure the fixed rates for the fixed takers in return for the variable yield that comes from the fixed takers and and and finally you know we also have market makers or the liquidity providers on the protocol which are kind of like the the backbone of of this mech of this mechanism and the liquidity providers effectively enable and provide liquidity within fixed rate ranges which means that they're always ready to kind of enter into both fixed taker and variable taker size of the market uh while kind of collecting fees and if liquidity providers are kind of choosing their tick ranges consciously then they're able to kind of effectively execute the market mutual strategy with respect to interest rates uh while collecting fees um and and that can be quite powerful and so if you also look at the core of the protocol uh you can see that it's effectively made up of two key uh modules so the volts v-a-m-m and and the margin engine so let's first kind of talk through the vmm so the vmm on volts is a virtual automated market maker which effectively is used for price discovery only meaning that the volts vmm is the so-called oracle that defines the fixed rates at which interest rate swaps are kind of created and then eventually settled and the margin engine is kind of like the beating heart of the protocol um it ensures that the positions on the protocol are sufficiently uh collateralized it ensures that liquidations are taken taken whenever they need to be need to take place um and also when we think about the settlement mechanics and the settlement cash flows they're also managed by the margin engine so the margin engine effectively is holding all of the underlying tokens of both fixed takers variable takers as well as liquidity providers will the vmm is doing the role of kind of pricing the fixed rates uh the swaps that are being provided uh to both sides of the market um and and if we want to think about like the more traditional applications of interest rate stops in traditional finance um we can think of like mortgages fixed rate loans um vehicle traditional uh products that um retail investors and retailers tends to be really familiar with but what they don't really realize is that behind the scenes this kind of this sort of financial products are actually powered by swaps um and if you look at the overall interest rate swap market um it's about one quadrillion notional credit which is kind of one of the biggest markets in the world um so if we want to dive a little bit deeper uh into the mechanics of the protocol um i would love to kind of explain the idea of concentrated liquidity which we have kind of borrowed from unisov3 in order to make the protocol around three thousand times more capital efficient than alternative models that can produce fixed rates of return um so if you kind of think about volts you can imagine a a grid so like a two axis amm where the x-axis is the is the fixed tokens and the y-axis is the variable tokens and and the fixed tokens effectively represent um fixed yields so uh if if you hold 101 fixed tokens uh in a pool which has a duration of one year that means that you're entitled to get 100 times one percent which is equal to one token at the maturity of the pool and the the variable tokens are defined in a similar way but the payoff that the variable tokens generate is a function of the variable rate in the underlying pool that the interest rate swaps are built on top of so if you think about a if an interest rate will pull on top of ave then the variable tokens would represent kind of the variable rate of return produced by away and by effectively exchanging variable tokens for fixed and vice and the other way around you are able to kind of get into a long position in one direction in a short position in the other direction and for example if you're a fix taker you end up having positive fixed token balances but negative variable token balances because you need to actually give up the variable yield to the other side of the market um and and that's effectively kind of how the protocol works um and and how it manages to kind of create markets that are around 3000 times more capital efficient than alternatives um if we want to kind of dive a bit deeper into kind of the liquidity provider persona we could think of liquidity providers as kind of traders who believe that um an interest rate in a given pool will be around a certain kind of fixed rate which could be a 10 and if they choose to deploy liquidity across a tick range which is relatively tight which could be 9.5 to 10.5 percent then they're able to effectively um enter into positions with both fixed takers and variable takers while uh generating fees from the trades that occur and and the beauty of this setup is that if you go back and look at this uh um at this va mmm is that if you if you're a fixed if you're a liquidity provider and and there is a variable taker who has consumed all of your liquidity which automatically makes you a fixed taker if if then some other trader comes in and consumes a fixed taker position this results in basically collateral recycling meaning that as a liquidity provider you end up getting into two positions which are effectively netting each other out meaning that you can continue to enter into positions and just generate cloud and generate fee income while still staying kind of market neutral relative to the interest rates but in order to achieve this result you need to be able to pick ranges which are um which kind of have balance trading volume from both sides of the market so fixed takers and variable stickers and in that scenario you kind of will be able to kind of find this you know double queen citizen of ones and link fix takers and variable takers while kind of generating fees from their trading activity um so if we want to think about um kind of the liquidity provider persona uh we would think about you know more sophisticated traders and kind of d5 volt creators kind of likely to engage in this type of activity um and the reason why you know the traders need to be sophisticated in order to kind of perform liquidity provider operations in the protocol is because of the complexity that comes with the fact that you need to manage the margin requirements you need to manage the tick ranges and you need to be able to rebalance them accordingly in order to kind of get um as much free income as possible while still ensuring that the trading activity happens within your tank range while making sure you don't spend too much gas kind of doing this rebalancing operations which makes this plus quite challenging and and and um tough for like a passive retail investor to kind of perform in a way that's kind of meaningful and profitable um so kind of before diving into into the into the workshop and kind of the problem of lp optimization a bit deeper i would love to invite you guys um to kind of our developer documentations at docset.vault.xyz uh where you can kind of explore and learn more about the protocol and underlying mechanics um you can also check out our discord our medium our bug bounty program light paper and and obviously if you want to play around with the protocol we're currently on kovan testnet um so you can just go into app.false.xyz and start playing around um cool so let's kind of dive deeper into the problem of lp optimization so if you're thinking about like building and kind of an lp optimizer vault a strategy uh on top of volts there are three key things that you would need to kind of optimize for um and i think i kind of mentioned that i mentioned them earlier the first one is kind of the rebalancing frequency so the frequency at which you make modifications to your position so these modifications can be in form of kind of changes in the tick range or the fixed rate range at which you're providing liquidity this can be modifications in the leverage so uh in the leverage that you um have on the protocol one interesting aspect of volts is is actually that is that it enables liquidity providers to be single asset lps uh on leverage meaning that you can actually come to our margin engine you can provide usdc as collateral one thousand usdcs collateral but you can actually end up entering into positions um of 10x 15x leverage uh even or even beyond because you effectively need to cover the delta between the fixed and variable rates and not the actual underlying notional meaning that this makes it a lot more capital efficient and and heavily increases the kind of the apy upside that you can experience the trader and this liquidity provider and the final variable that you would love to optimize is the the fixed rate range right the the range at which you um deposit um liquidity and there are lots and lots of interesting tools at our disposal to kind of try and and and reason about these and try and think about how we could go about optimizing these um so we could start by looking at historical race data you know we could start by drawing some bollinger bands doing time series forecasting and sort of arima models um we could uh kind of recognize that um interest rates are kind of mean reverting stochastic processes and trying like build out models that um effectively build bounds around the apy of a given underlying pool in order to come up with ranges that are in alignment with those bounds so on the picture to the right you can see kind of the depiction of how um the margin engine in in in volts uh is is kind of constructing um the apy bounds for a given uh for a given pool so if you look at the dashed line um it shows that a variable apy in in away um and you can see it's very kind of volatile in the period under consideration um and what kind of the margin engine does behind the scenes is that it plots lower and upper api bounds which intend uses to kind of estimate margin requirements um by kind of estimating worst case cash flows for both sides of the market and as a liquidity provider you could potentially do something very similar where you try to constantly estimate the bounds within which you believe trading activity will occur which could be driven off um by kind of the suggestions from like a mean reverting model or a time series model um or some machine learning algorithm and then once you have an idea of how you can divide defining those and how you're optimizing those you can then kind of dive into the actual execution and the building of the smart contract which would then kind of power a nlp optimization vault um so for the purpose of this workshop i i kind of prepared like a simple active lp optimization strategy on top of volts and i would love to kind of share it and let you guys take some time and and kind of scan this qr code um it basically redirects to our github repository uh where we have all the old and s3 code so let me just um get there cool so um if we uh follow into the uh volts core repository um you will be able to see a section titled as active lp optimization um and there's two key um kind of files or like uh yeah files that kind of enable and this knife simulation to run first is the active lp strategy smart contract and the other one is the actual simulation itself so first um let's kind of dive deeper into the active lp strategy contract and i believe i have it here as well cool so an active lp management strategy is just a smart contract uh which is ownable by a given user who has deployed it and then it has references to a few key um variables or state variables that you know we care about so it has a reference to the margin engine um of a given interest rate so poo it has a reference to the va mm uh of the of a given interest swap pool it has a reference to the underlying token um that is being traded in that pool so if you think about of of an interest rate swap pool on top of ave a usdc then the underlying token in this scenario would be usdc and so on and finally we have our periphery which is a smart contract which acts as an abstraction layer which kind of makes interactions for the protocol a lot more streamlined but basically what prefix does behind the scenes is that interac it interacts with the vmm and the margin engine in order to kind of enable lps to interact uh with the protocol efficiently um and um another state variable that we have defined in here is very simple is the leverage um that we would like to um have when doing lp deposits right now it's like a hard coded constant but if i would expect uh kind of future evolutions of kind of like an lp optimizer role to make this variable more dynamic and and driven off of kind of market uh variables um and and it would really depend on the actual underlying um and it would really need to be motivated by a range of different factors that stem from the volatility of a given underlying pool um and kind of the trading activity um and also like the health of the liquidation system uh in in in the contracts in the protocol um finally we have two uh other state variables so the thick lower and thick upper um of a given liquidity provider this takes effectively define uh the fixed rates um at which we are providing liquidity um the definition of what the tick is um is um can be explained very easily so um the way it works is that if we represent price as 1.0001 um on the protocol um then if a tick is equal to 60 for example then the actual price defined by that tick would be equal to this value to the power of 60 and so on um and then when we look um yeah and then once we have had this we can then uh convert our prices into fixed rates uh which then kind of define um rates at which interest rate slopes are settled um so first um we have a function that's kind of lets us kind of set the margin engine and the vmm so the lp optimizer vault can start interacting with with a given pool um next uh we have a function which uh lets us burn liquidity from the pool um in situations where we would like to rebound and get rid of our kind of current uh position which we know which we no longer want to support um then we have a function called min all uh which effectively picks up all of the inactive margin in a given in the contract uh which is basically margin that hasn't been used or deployed into into volts and then if there is any active margin it calculates the notional amount to mint which is equal to the amount of inactive margin times leverage then it kind of approves the underlying token uh to be able to be transferable um from the lp optimizer to the periphery which then kind of does the minting and burning and then once that's done we're able to kind of call the mint function mentor burn function the periphery where we we kind of define the easement boolean as true we pass on our we pass our upper and lower ticks which are state variables in the in the contract we pass the notion to mint the margin delta kind of the amount of margin would like to provide to support that notional uh and once we kind of provide all these variables we're able to kind of um mint liquidity uh for as a liquidity provider um then we got a min function which does very similar uh things as mental um the deposit function is the function that lets a given um trader passively depose liquidity into the protocol and then let the protocol devote manage liquidity provision on their behalf so as a passive retail investor you can just come in you can deposit liquidity you can define the amount in underlying tokens you would like to deposit and then once that's done behind the scenes kind of the vault will mint liquidity uh on your behalf um and then and then constantly rebalance your position depending on kind of changing market conditions to ensure that your liquidity is within uh is in a range um which is uh active meaning that actually trading activity happens in there and fees are being generated um following from here um there's a very interesting function called rebounds which can only be called by the owner of this contract and all it takes as its input is an updated thick lower and then updated the copper so the first thing it does is it burns like all of the liquidity that's currently available um or rather deposited by this volt in order to kind of then extract the margin and deposit into another range so in here i've also put an option option to unwind uh meaning that there might be scenarios whereas a liquidity provider you might get into a position with even fix taker and then choose to kind of burn liquidity and rebalance and put it into a different range if you choose to do so you still need to kind of have some margin to support your unethical position and if you don't want to support it you can always unwind it meaning that you know if you had an unnetted variable take your position you can enter into a fixed taker contract and kind of net out the cash flows and release your capital to be to then have it free to be redeployed into the protocol but in order to keep the workshop simple we kind of ignore it for now um and then once we burn all the liquidity we kind of calculate margin to withdraw uh which is basically all of the all of the margin um that currently uh doesn't need to support any united position so uh if there's no network positions um then as a liquidity provider you should be able to kind of withdraw all of your margin and then redeposit it into um the a different tick range um and so if the margin withdraw is bigger than zero um then we call the margin engine and we withdraw that margin amount um by calling the update position margin function once that's done um our you know address of this contract should have the tokens ready to be redeployed so once that's done we can then update our tickle toe lower and thick upper to be equal to the updated ticks and then once all of that's done we can then finally mint liquidity in the updated tick range so if we go back to this mental function um we should be able to see that um you know at this stage we collect all of the margin that's currently in the pool that has been withdrawn um calculate the notional amount and then mean the position um so that's kind of how the active lp optimizer works and if we want to run a quick simulation to prove that it works we can head over to the file active lp management strategy which you can also access from here just to show you guys active lp simulation if you click it it should kind of redirect uh yeah to the same file um so once in we're in the simulation there are a few key things we need to set up so we need to initialize our vmm we need to set the fee in a given vmm pool and the fee parameter effectively defines how much fee income lps can generate and in order to calculate the fee income there is we need to take the notional amount traded multiplied by the fee parameter and also scale by the time in years from so from now until maturity of the pool so the the if we think about it kind of intuitively the longer the duration of the pull and the longer the um uh the the position which you support um the higher the the probability of you kind of um ending up in a situation where you might experience a loss as a liquidity provider where you end up kind of getting into an unnetted position uh which then kind of drags on until the maturity in order to compensate for that extra risk we scale uh fees depending on how much time it's left until maturity so there's very little time until maturity entering into a variable take or a fixed taker swap as a liquidity provider is relatively uh riskless um but if you're entering at the beginning of the of like let's say one year pool then the risk is much higher hence the scaling um so in this particular case we set it to one percent um then we define the starting starting a tick range uh for an active lp strategy and an updated tick range and these values are effectively centered around a fixed rate of one percent um once that's done we can then deposit some liquidity in underlying tokens into the protocol so um let's say we take a 500 units of of a given token in this case the token is called vusd it's just a mock token we created for the workshop purposes which is 18 decimals so if we're supplying 500 times 10 power 18 as our kind of margin into the into the volt once that's done we can then deploy the lp optimizer smart contract um by by calling its fixture um then setting its kind of margin engine and vmm in order for it to be able to interact with them once that's set we perform a few checks to ensure that the the variables have actually been set correctly um and then we kind of call our first rebounds uh which sets the starting tick lower and starting the upper in the protocol and kind of takes uh checks if there's any liquidity to mint if there's no liquidity it just sticks those upper and lower ticks into the protocol until some trader comes in and starts depositing funds then once we are ready we we can approve the lp management strategy vote to take lp deposits from us and once the approval is done we can deposit into the contract and as soon as we deposit them to the contract it will trigger the mint so if we go back and look check out the deposit function it will trigger the mint function which in turn is going to trigger a mint operation which takes this input the margin delta supplied by a given trader um calculates the notion to mint by multiplying it by leverage uh once that's done it then kind of calls the mint or burn function sends the mint boolean as true and then means liquidity on behalf of the trader that deposited liquidity in here um once that's done we we can then run a simple scenario um where we have a trader uh who comes in and trades um and gets into like a fixed taker swap um once we have that then we also have a variable taker uh swap so effectively you can think of a scenario where um a variable taker trains in one direction and then immediately after that i fixed a fixed accuracy in the other direction and as this is happening as a liquidity provider you generate fees uh while still staying market neutral towards the rates because all that happened in this particular scenario is that variable and fixed takers end up being paired together um and you as a liquidity provider you just get fee income and let the variable and fix taker kind of manage their collateral and their positions um once that's done we can then um call the rebalance function with an updated tick lower and update the thick copper to change um to burn our liquidity and redeploy it into a different tick range and then if we scroll further down we can see that we got two more traders um this time variable taker followed by fixed taker who are trading in the new newly established stick range um so if we hadn't rebound our position beforehand we wouldn't be able to support this new trades meaning that we wouldn't be able to actually generate income free income by doing that um and and that's kind of the the key the key um idea behind why you would want to rebalance your position is you would want to do that because you want to support more trading activity in case the markets have shifted um and and gotten into a different fixed rates profile so that's effectively it we can just quickly run this test and see what the results we get cool so we can see that the deposit amount is around 500 the fees generated before their balance are about 0.9 we use the the fees generated after a balance are about 1.9 so if we hadn't rebalanced we wouldn't be able to capture this additional fee income uh and if we do some bit kind of bit of lack of envelope math uh we can see that kind of the apy that the trader could expect to get as a liquidity provider in this particular scenario assuming that trading happens uh kind of netting out of the positions happens once every two days uh you could expect to earn 100 to 200 apy cool so that kind of concludes our um our uh workshop um and uh yeah i would i would love to kind of uh jump into questions in case in case you guys have any thank you yeah it looks like you have two questions in the chat cool let's just read them out um okay um okay i'm not sure i understand why you need lps don't fix them floating takers just engage in a zero-sum game one loses hundred and one gains hundred by doing the trade why do we need outside capital cool um that's really good question so um we can think of a scenario that yes it's true uh that you know in an ideal world where there is you know double coincidence of once meaning that at any point in time a given variable taker and a given fixed taker happened to be on the protocol at the same time and happen to have the same need for 100 notional yes in that scenario we would be able to like immediately pair them but in scenarios where um you know that's not possible we need to have market makers we need to have liquidity providers we're constantly happy to engage in both sides of the market um meaning that you know they're able to keep the markets liquid active and and keep the volume high uh meaning that as a trader you don't need to kind of wait for if you're a fixed tank you don't need to wait for like a variable taker to come in and trade with you you can just come in trade with lp and then the lp will kind of net out their positions once the other side of the market kind of kicks in and similar kind of logic also applies to kind of um decentralized exchanges like uniswop um you know of course you know um yeah they're effectively trying to solve for the same problem kind of double coincidence of ones um by you know engaging liquidity providers to supply liquidity into both sides of the market um cool i hope that answers your question uh ben um hey david um let me just read your question out loud so what's a good source of getting historically data um getting historical rate data directly from ethereum from on-chain activities is is very convoluted so what i would recommend doing is just jumping into lonescone and like literally just scraping their data that has proven for me at least has proven to be one of the fastest and happiest ways of getting historical data on a range of different underlyings so ave compound dydx um and so on cool um hope that was helpful let's see if there seems to be another um okay loans we can't hear you anna cool i guess that's it that concludes the workshop can you hear me now okay sorry about that yeah i was just saying um yeah thank you so much for um taking the time to do this workshop um yeah super informative apologies for the slack notifications um yeah and thank you for the rest of you for tuning in um i think you do have one more question if you want to answer that really quickly oh yeah of course let me see retail fixed rate products be mortgages [Music] okay let me just read it out loud so you mentioned retail fixed rate products before like mortgages any categories you're interested seeing evolve is bolts um yeah that's a really good question so um i think that um in the short term there's like a range of opportunities that kind of volts unlocks so if you think of like a very simple use case um it could be that you want to deposit funds into ave or compound or yearn but right now um this protocols um function in such a way uh that can result in kind of variable rates of return for depositors and as a fixed taker on the protocol you can kind of take your a token c tokens or white yv tokens you can deposit them as collateral on bolts and kind of secure a fixed rate um on your deposit you can also think of a scenario where you would like to kind of borrow funds from other compounds and in that scenario you'll be able to engage in a variable taker swap in order to cover your variable liabilities and effectively get a fixed rate uh borrowing but as as the ecosystem matures and as you know more and more products and primitives and and structured products are built on top of those we expect a range of other kind of interesting opportunities and use cases to be unlocked in d5 and potentially even beyond well thank you once again and yeah and with that let's wrap this up and i hope everyone has a great day thanks um everyone for tuning in 