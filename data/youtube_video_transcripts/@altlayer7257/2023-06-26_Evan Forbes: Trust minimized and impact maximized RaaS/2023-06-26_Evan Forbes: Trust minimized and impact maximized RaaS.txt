[Music] thank you [Music] hello hello my name is Evan Forbes I'm with Celestia which is the first blockchain Network and on Celestia you can build whatever so if you're interested in anything that I talk about in this talk or in my work in general you can find me on Twitter I'm Evan s Forbes on Twitter or on GitHub I'm just Evan Dash Forbes and today I'm going to talk about trust minimized and impact maximized rollups as a service and the thing I might get a little a little opinionated here a little political maybe even but uh I hope that that adds to the spiciness and like maybe just the general entertainment that we can get from this talk and the entire thesis is with this trust minimized portion is that sovereignty not just Southern rollups but Southern blockchains in general are actually the difference between what has come before us with like Banks governments web 2 and crypto I know that's a little spicy but I I do think I do think that there is some truth there and there's some value there and I think if we critically think about it we can design Roll-Ups as a service we can design these services that help build these Roll-Ups and do so in a trust minimized way we can preserve that property and perhaps unlock something really truly special and get to some insane crazy properties that I don't really think have ever existed before which is that's really exciting so anyway the first start answering that question is we can get to what actually makes blockchains compelling what actually makes blockchain special not necessarily the protocols built on top of the blockchains but the blockchains themselves why is Bitcoin special why is ethereum special and I think it comes down to sovereignty where the ability to verify right don't trust verify the ability to verify these chains I can verify ethereum on a laptop on bitcoin it's probably something even significantly smaller I can choose the rules that I follow I'm not trusting another committee right we're building a network from the ground up and we have this like sort of crypto anarchic promise and this this like property that is to build a network to build a structure that is resistant against abuses of power and hierarchical structures that's crazy that's a really special property and right when the title of this talk impact maximized we don't want to just do the same things that we did before we don't just want to have the banks but faster and a little bit more decentralized and a little bit more permissionless that's good having these permissionless decentralized systems is really good but if we're still trusting committees if we're not actually verifying then we're not the ones who are choosing the rules right we choose the rules that there's only 21 million Bitcoin we choose the rules and we enforce them for Dogecoin and for ethereum and for all of these other blockchains we enforce the rules and I think that's what makes things special so when we're designing rollups as a service how can we even capture that how can we amplify that and um so to get to get to more of like this sovereignty portion I think Mustafa al-basam he's the CEO of celestial Labs co-founder of uh yeah co-founder of Celestia labs she's done a lot of work uh there's a paper published data availability and fraud proofs of course lazy Ledger which is now Celestia and you frame this I think summarized it perfectly Sovereign blockchains not just Roll-Ups not just modular blockchains Sovereign blockchains allow people to create social contracts and enforce them directly without going through any intermediary top level social contracts right this is a crazy thing this hasn't existed before this is the new thing of blockchains this is the thing that makes them different from what came before we should amplify this to to Really create compelling services for roll-ups and being able to verify the chain choosing the rules ourselves sovereignty being able to hard Fork this puts people over tokens people over validators people over governance right this property is really something truly special it's not just token holders who get to make a decision it's node operators people who are verifying the chain and to better answer this question we can even ask like why do banks and governments suck why does why does BlackRock suck that block Rock owns everything and this this funny cartoon of this Futurama representation of Richard Nixon who is known to abuse Powers right why why do blockchains suck or why sorry not block things why do governments and Banks suck and it's mainly because we can't really pick the rules and these Banks and these governments they have monopolies they get to decide what actually occurs now in theory in theory it's like a democracy and people get to decide right but in actuality things start to get messy really quick I mean just like go look outside a lot of things a lot of the reasons why a lot of um people are attracted to the space is because they are so easily disillusioned with how the current system works right I don't really need to explain it Satoshi then it when when they made Bitcoin their whole idea was to make a currency that was controlled by people right this crypto anarchic property and and their social contract is 21 million it's only ever going to be 21 million right in the world right the FED has a infinite amount of money can I pause this now oh no the FED has this infinite amount of money right they can do whatever they want they can they can enrich themselves in theory if they want or they can they can design whatever type of society they want and we don't really have a say so then they just this is this whole meme of like this money printer and everything that's what says how she was going against at least I think and I think it just reset the talk uh no I think I just had duplicate slides sorry about that okay so what actually makes blockchains compelling that Meme I think summarizes it up sort of is that is that we can go against that we can design our own money if we want to print money though we can that's the crazy thing it's like the rules are arbitrary they're programmatic we get to pick them by verifying the chain so model this is where modular blockchains come in this is where Roll-Ups come in is Roll-Ups make it orders of magnitude easier to verify the chain orders of magnitude this is what d a and roll up solve and they do this in a trust minimized way and right this this enables two things this enables sovereignty which is fundamentally derived from verifying the chain right sovereignty the ability to hard Fork we pick a rules node operators and in this case with modular blank with modular blockchains like clients pick the rules right I can run a light client on my phone I can verify the chain I can pick the rules and the result of those rules right not just the rules the result of those rules from my phone and people all over the world can do that that's the crazy thing that's sovereignty and security right normally when we think about proof of stake blockchains we think about Committees of validators well guess what getting Committees of validators to operate in an honest way is very difficult because you have to stick enough capital in there in the blockchain and lock them up and have it socially slashable it's still secured by social consensus but it's socially slashable funds those funds have to be larger than the funds that are in the blockchain kind of because otherwise if it's more profitable to attack the blockchain it's like oh that might actually happen so that's why that's why it's like this is a really difficult property to get committees to actually behave honestly that's why we use proofs instead with modular blockchains we use proofs committees are expensive proofs are cheap they're also Sovereign and they're also extremely secure right validators are cucks the security of the chain comes from proofs that's the beauty of like modular blockchains and Roll-Ups as a service right Roll-Ups and modular blockchains of this powerful thing but they're still missing a lot of pieces that's where this Roll-Ups as a service comes in is this sovereignty the security without compromises we can because the systems and how they work now there's still like a lot of gaps like how do I have the centralized sequencing for example like there's there's just a lot of gaps still and we can develop these services that still preserve the fundamental things that make rollups so special and when we do this we always have to think about things from proving from a light client perspective right all of this comes from the ability to verify the chain in theory from your phone using some sort of like client just a light computer really but anyway the point being to be able to verify the chain okay that means that everything that we think about everything that we design has to be in those terms how can I verify this using a light client honest majority assumptions are icky like clients if they have to make an honest majority assumption aren't lose their security they lose their sovereignty because now it's not trust don't trust verify now it's don't verify Trust it's backwards that's what happens when we have when we have to make when light plants when light clients have to make an honest majority assumption we don't want that we want validators to be cucks okay trust minimize da this is harder than it sounds I work at Celestia I'm a I'm one of the core developers at Celestia so I I have some a little bit of experience in building some of these systems and Trust minimized da is harder than it sounds for one we have to have d a sampling okay that's cool uh I think I think most of us have a general idea of how that works and then you have to have enough Samplers so you have to have enough Network effects you have to be convinced that there are enough other like client sampling that you can reconstruct the block only using like clients if need be okay then you have to be convinced that the error encoding is done correctly okay so we use fraud proofs for that at Celestia but other chains you can use kdsg commitments you could just prove it in a ZK way and it's not that to be clear Celestia could use those other mechanisms as well right now fraud proofs they're very simple they're very easy they're extremely easy to audit they use normal cryptography that we've been using for 20 years and they're extremely scalable we can have very very large blocks unlike those other mechanisms unlike the other ZK mechanisms but not to get too distracted with that there's also this thing that I don't I'm pretty sure no other blockchain has which is cheap inclusion checks so it's great that okay okay like like as a light client I I sample the block that's great I'm convinced it's available I'm convinced the error encoding was done correctly I'm convinced that there's enough like client sampling that we can reconstruct the block if we can need to but what happens if now I still have to be convinced that the data that I care about the roll-up header it has it has a hash it has a commitment over some block data how do I know that that block data is actually included in the Da Block that's kind of an important thing right otherwise none of that other stuff matters none of it matters it only matters if the data that I care about has been included in the block how do you prove that well typically that's done using a Merkel and inclusion proof okay well if we use Marco improclusion proofs what's the problem there that requires you to download the entire block like the entire point of a like client is that it doesn't have to do that so you have to have significantly cheaper ways and we actually do that in Celestia so in in Celestia we instead instead of having to prove the and prove inclusion to the entire block we prove inclusion to adjust the transaction that pays for that block so apologies I didn't really have a lot of time to put together these slides or a lot of visual aids but you can see this is sort of how we organize the original data Square in Celestia at the top bit we have this transaction portion that's where all these transactions go it's very small I can prove just a a just a single transaction was included and that is good enough to convince me that the blob the message the roll-up block for that transaction was also included in the same plot and we do that by getting a little bit clever there's more information on this in our specs in the data Square layout I think like the rationale for this of how we actually use but effectively that that commitment in the roll-up header we changed the way that we create that instead of just using a normal Merkel a normal Merkle group we use a Merkle root over sub tree roots in Celestia because now if you can find those sub-tributes and you prove inclusion to those subtree roots that's just the same thing you're you're because as a role of Life client you don't care what the actual data looks like you only care that the commitment that is in the rollup header has been included in Celestia and all and because we have this we have a special type of fraud proof that proves that some given transaction was included that pays for a block versus the actual blob in the block we prove that if one there if one is there the other also has to be there I won't go too much into that into how that actually that fraud proof actually works again hopefully by the time this video is published our specs have been updated and all that information is there you can find that if you just go to the Celestia GitHub go to Celestia app then go to Specs sorry again I kind of had to throw these slides together rather quickly and and so we have trust minimize d a another thing that we need is that for Roll-Ups to be this this magical dream of of rollups as a service where I can just in one click deploy my own solver and roll up is I also probably want it to be decentralized I want it to be censorship resistant and shared sequences are a way to do that they're a way to scale that property because if we think about it like if we're if we have like the normal sequencers we have to have a committee create the blocks if we want it to be censorship resistant or we can have backup mechanisms too where I can force inclusion using the da layer that's a very good option as well but if we want like the liveness properties we always want our rollup to be alive then we also have to have some sort of committee so but the idea behind shared circumstances is what if we can share that committee right so I've been thinking about how do you decentralize this how do you decentralize the liveness properties the sequencing of Roll-Ups since about last summer went through a few durations spoke with a lot of folks at Celestia and eventually on winter break I finally had time to write it up and um I wrote up this forum post it's called shared sequence sharing a sequencer set by separating execution and aggregation if you're more if you're super interested in that thing I would highly recommend um well I guess that's 2D in my own heart just just go it's it's like it's a kind of hopefully okay description of this thing it's not formally defined espresso systems has also since published a I think more thorough explanation of these things so you can also go and find their documentation as well but again the the idea of this is rather simple it's like we have the sequencing we do that all combined and then we actually do the execution later so in my Forum post I referred to this lazy execution right we we agree upon the transactions first which transactions have to be included no not their order just the transactions that have to be included and then we execute them later and then we actually do the proving so this changes the proving a little bit and it's uh I haven't again we're shipping mainnet we've been really busy so I haven't really had a chance to write up how you could this actually changes proving but there's other people at Celestia well notably Gabriel who has been helping me like sort of ideate around what can you actually do now that with like this lazy proving right so to get a to get like a slightly better view of what a shared sequencer can do the users they submit their transactions for bundles of transactions directly to the shared sequencer layer the shared sequencer layer can produce blocks as fast as they want they don't have to wait on the DA they don't have to wait like that 15 seconds or so for the da they can get soft can the soft finality so it's obviously not as good as firm finality but it's still it's pretty good it's sort of like this gradient of trust like whenever the the shared sequencer Network gives you the soft confirmation you sort of just read it as a soft confirmation and you can you can it's enough to at least update the ux very quickly so you can you can you can have a soft very fast confirmations I don't really have to deploy my own sequencer set this is incredibly easy like I just Define a state machine and like Define a chain ID my users just start using that chain and then and then this is an important bit the shared sequencer part the shared sequencer network will post the entire block data to the DNA layer and this is sort of how the this is the key factor of how they actually maintain trust immunization everything works the same as if a singular rollup was posting their block data to the DA layer everything's the same there because because the shared sequencer is posting all of the block data at once to the DA layer they're the ones paying for it how you actually pay for gas for that can be kind of arbitrary ideally it's done in the native da token but I think I'm getting distracted so to elaborate more on this lazy execution again you you can you users can submit transactions they get these fast soft confirmations they don't finalize the state yet but it's usually good enough to update a ux at least get that green check mark get that dopamine hit and then and then we actually post the da layer and then as soon as as soon as the da layer has confirmation as soon as we have that like client verification that I was talking about earlier where the data was actually included excuse me on Celestia or on the da layer now now we have firm finality which is kind of cool another really cool thing about shared sequencers is they have these validity rules that unlock powerful cross-chain moves so this thing is like I've kind of always thought about shared sequencers as this way for Mev searchers to use as tools to sort of build blocks and and more or less a centralized way now I'll touch on that more later that full picture is not painted yet there's still like a lot of work to be done there but I do actually think that it's possible so stay tuned for that but essentially right now all you really have is proofs of inclusion so you do not have Atomic execution you only have Atomic proofs of inclusion meaning I'm only guaranteed that if I have a transaction included on roll-up a I also get a transaction included not executed included on Roll upbeat that's it it's only proof of inclusion but you can get more creative with this this is by block validity rules I can say on the shared sequencing layer I can Define as a block validity rule that these specific transactions only get included if they're included at both the top of the block or one is at the top of a block right and that's sort of like a really powerful again these these block validity rules that you can include with shared sequencers help they're tools for building out more and more decentralized block building at least That's My Hope but anyway that's shared sequencers and from like a roll-up as a service mechanism I think that they're very very powerful because they sort of give us this opportunity to think about like the services that we provide Roll-Ups can pretty much do everything on their own and we want them to do that we want role of developers to be able to encode their own rules however we can start to add committee Based Services to the shared sequencer so things such as committee based IBC you could have a settlement layer committee based accuracy you can have threshold encryption so fair block just posted a forum post on Celestia that was really interesting and they they effectively do the same thing right you you have a committee that uses threshold encryption that is also a shared sequencer to provide these trust minimized services to a roll-up and oracles you can have socially slashable oracles hopefully I'll have time to talk about that later but maybe not and then what we're going to talk about next is censorship resistance per block so I kind of hinted at this before with shared sequencers but with Mev it's it's effectively like you end up with one block Builder so you have a shared sequencer that's great and you have um you and that shared sequencer provides all the inclusion guarantees for all all these different Roll-Ups but the problem is the number of Roll-Ups that can go on a shared sequencer is technically unbounded and that means that like a block builder for that shared secret sir it's going to have to have Block Run roll-up full nodes for all of those full nodes unbounded is oh that's this is it's a bad thing it's not good and effectively like that's a very centralizing force of having to run all of these full nodes and like having one giant block Builder it's not very decentralized it's not very good so what are some things that we can do around that so again we're designing these services for Roll-Ups what can we actually do so again like the main one of the underlying issues here is that these I have a politician here but it's you can think of a politician and a validator basically like the same thing they're they're analogous at the very least and these politicians and these validators they have monopolies over specific things in the case of a validator you when it's your turn to create a block for most consensus protocols you most consensus protocols in use today that is you get to pick everything that occurs in that block and you can abuse That Power by taking a bribe to include other things right we as delegators delegate to you a validator and then now that power that we gave you we gave you you can abuse by enriching Yourself by like taking these bribes to sort of order transactions in a favorable way or censor different roll-up blocks and that's incredibly problematic when with Roll-Ups we just want to be able to Define these simple Fork Choice rules but before I get into four Choice rules we'll go to the next slide which again this is showing the point with these modern systems these modern blockchain systems a lot of the times so far the validators the politicians they're the ones who are getting rich they're the ones who are taking all of this money and then they users of the chain that's a down slope right and the network the network isn't making money in most of these cases for ethereum with the eip1559 arguably you're getting some increased burn rate which in which in the which the in that case the network is going up quite a bit but anyway without having some without breaking this proposer Monopoly right without breaking this proposal Monopoly we're kind of stuck in this boat we're stuck in not being able to Define where this the profits of a system get captured so thankfully earlier this year um Duality the folks at Duality inclusion including Elijah who wrote this paper and this uh this is a screenshot of a forum post on Celestia describing exactly how you actually could do this and this is the key thing for and for not solving Mev but being able to programmatically Define where the profits of an entire system go and they do that by breaking the proposal Monopoly so I'm I'm quoting Elijah here I thought this meme was absolutely hilarious and so perfect because it's like people protesting and the proposal Monopoly and it's true it's really true so I'm running out of time here I'm going to have to rush through some things four Choice rules rollups can Define their own four Choice rules if you can Define your own four Choice rule that means that you can Define things really simply and elegantly like I want my roll up to the the block that wins is the one that brings the most values to LPS or burns the most of my rollup token I can define those simply if if and only if the proposer does not have a monopoly because if the proposer has a monopoly they're just going to be able to pick the correct block that gets in the block that they want the block that they get bribed to most we don't want that that ruins the property that we want right we want to programmatically capture the entire profits of a system I think I only have 30 seconds left so I'll touch that we have decentralized block buildings stay tuned for that I think there's some exciting things lots of work none of it set in stone this is just me writing things I I do think what shared sequences we have we have a potential like awesome thing and with oracle's um there's some things with ABC I plus plus you can have trust Minima or you can have socially slashable oracles which is really cool and that's my talk trust minimized and impact maximize develops as a service thank you [Music] 