[Music] thank you [Music] okay um hello everyone hope you enjoying the event so far we have heard from some really wonderful people on topics spanning Roll-Ups modular blockchain design space Network design architecture interoperability and economic constitutions and roll ups some truly insightful presentations what I want to do now is have a panel on the present and future Roll-Ups there's a lot to explore here from various angles and so we thought we'd invite people of different diverse backgrounds we have a richer discussion on where we are and where we're going it's my pleasure to welcome three such people from the industry here we have Veda kochari from wavint Patrick McCory from Barberton foundation and stuff Eaton bar from Masari hi to all of you I'm so happy to have you on this panel so um oh thank you thank you thank you for joining us and making time for this panel given that and all of you are from different time zones so we are really appreciated and so let's kick this off uh let's start with a quick intro so Patrick would you like to go first yeah hi everyone my name is Patrick uh uh I think historically speaking I mean you know my research with my PhD in cryptocurrencies uh started in 2013 on bitcoin and then 2016. I ended up doing stuff in ethereum and then I guess for many years until 2019 I was a researcher and then I left the Academia and the university system to try to do a startup you know as you do uh the startup was acquired by amphira and then eventually after inferior I joined the arbitrine foundation but during all those years of my research I mostly focused on Layer Two protocols or more specifically you know how do we scale cryptocurrency so people can actually afford to use them by still retaining all the nice benefits of a cryptocurrency welcome Patrick Mina you want to go second yeah sure hey everyone I'm Meda so I'm currently an investor Buster at crypto focused Venture fund um I kind of started off my career in crypto back in 2017 as a software developer um primarily spent most of my time in the cello protocol so I was building out a lot of developer tooling for that ecosystem a lot of like smart contract sdks clis things like that and now at very end I spend a lot of my time looking at different infrastructure protocols so definitely a lot of research into Roll-Ups and things like that I'm excited to talk more about about the panel today thank you Amanda Stephanie hey everyone I'm Stephanie um so I'm also a researcher I've been in this space uh less time thank you Patrick I jumped in in about 2019. um I I was a technical writer focused on um really any kind of emerging technology uh helping companies kind of describe you know their products and also rate Grant applications and things like that um by accidentally started writing about blockchain projects and then learned about you know the public side of blockchain and you know fell in love uh and went from there I started my time in crypto mostly in ethereum with ethereum staking um so not writing for technical documentation for non-custodial staking protocols um and then joined Masari about two years ago as an analyst started on their diligence team um so it was really focused on the nitty-gritty uh details both on the technical as well as the economic side trying to become more well-rounded um and here I am on the Enterprise research team I mostly focus on infrastructure layer one layer two heart to pick a favorite to be honest I just love talking about you know how all this fits together um and you know just what amazing things we can build with the technology thank you Stephanie um now let's go with the first question and this is a question that I think is very relevant given uh you know some of the debate that was happening over the last um week or two on definition of Roll-Ups and what really defines a roll-up so Patrick you know maybe you can start with so what's your take on the recent debate uh what what defines a Roll-Up yeah well I mean there seems to be two different campuses in there there's rule up equal equal database or no just Bridge equal equal database um and I actually most people think I have the opposite opinion actually agree with the appeared out there so I always think that's quite funny um I think I think the best way to describe that argument is to step back a bit and think no as an industry why do we actually train the build you know and then how does this relate to rule apps so the entire point of a blockchain system is that a blockchain provides one purpose I gave you a copy of a blockchain and you can compute a copy of a database and that's all it does you know this allows anyone to compute a copy of the CM database so then the question is you know how do we all agree to the one database and to the one blockchain so then anyone in the world can download the one true blockchain and then compute a copy of the CM database as everyone else and there's two ways to do that one is when we could deploy your consensus protocol build your entire ecosystem build your peer-to-peer Network it was something that looks like Bitcoin or ethereum you know get all the participants together get your honest majority get all the stick in there to defend the system um so you could do that that's one approach you know build an entire ecosystem from scratch and that's very very hard to do you know there's no easy feat doesn't hurt your feet the other approach if you want to you know instantiate a new deal to be this is to say well communal has reused that system that already exists you know could we pretend it's like a sort of like a public bulletin board where as long as we can post the data there then anyone in the world can pick up the data they can you know parse it according to some set of rules and then they can compute a copy of the database themselves and that's basically the rule up you know the purpose of a roll up is to create a database or whatever whatever purpose that you want on the way we all agree to that database is that we just post the data somewhere else like ethereum or Bitcoin you know like ordinals and then everyone can say okay well I know the data is there the data is ordered I know the rules I can process the rules I can get the same database as everyone else so at you know at the at the heart of it that's all the Roll Up is it's very database but the data is publicly posted and we've known how to do this for at least 10 years so the early examples were in a color coin a mastercoin I don't know if you guys remember that it was the you know issue assets on top of Bitcoin but the Bitcoin platform could not enforce the rules it was used to use as a data availability layer where we could push the data there and it's the software client could then parse that because the software client was aware what the rules were so we don't have to do that for 10 years and it sort of died off for a long time maybe six seven years but they originally got popular and this sort of gets to the heart of the debate because we now know how to build better Bridges and this is like the second half of the bid so normally when you use a cryptocurrency system unless I say I'm on ethereum and I want to move my assets to coinbase there's a bridge in the middle you know I lock my phones up I give them the coinbase yes coinbase protects the funds then it shows up in their off-chain database so the whole point of the roll-up movement today is the Builder validating bridge where I can take my assets on ethereum move it on to an off-chean system something like arbitrine or optimism or Stark net but at the same time when I move my phone to that system I don't have to trust The Operators of that system you know the entire option system could be fully corrupt malicious wanting to steal my funds and the bridge will protect my funds and that's basically at the heart of the pH of the softchain database and then you have this bridge that then protects your assets when you bridge onto this opt-in database and all the debate is really being focused on does the bridge Define the database or does the community Define the database and that's sort of at the heart of the entire debate but that's maybe that's a bit of a long answer actually so I apologize well I think that's basically what they've been it serves the context very clearly and so Mita and Stephanie what do you what do you take on this do you feel like yeah yeah sorry um yeah I think Patrick had an incredible explanation of what blockchains and Roll-Ups really serve to do and like adding on to that for me it really comes down to semantics I think it really depends on what you think is scaling and the most like simple sense of the word for me scaling it ethereum means steps being able to use ethereum native assets so like erc20s eth Etc on different block spaces and essentially scaling expands block Space by allowing new execution environments to be built on top of ethereum which can then be made available to all of the youth-based applications and I think Roll-Ups unequivocally do that so that's kind of like the side that I land on Stephanie yeah I've come in this in the same boat as well I think at the end of the day right like there's also that bit about social consensus that you know the community could get together and they could then you know move the bridge elsewhere um but I feel that that would be you know it's incredibly costly at the end of the day you could say that there's social consensus behind everything right um so I I fall more in the camp that the bridge is really important um and is you know a big part of the roll-up um but I do see the other side as well um but in terms of scaling ethereum I know there was you know that argument about um does Jersey scale um New York and I you know I thought about that a little bit as well and I also understand that perspective but I think I was hearing in a Twitter spaces about this idea that well if you add a new Discord in a city that does scale the city um so I think that at the end of the day although a roll up at this present point in time might not be scaling the base layer of ethereum there is the future in which we have dank sharding you know other upgrades that will um you know the will change in order to you know do the ethereum-centric roadmap and move forward and scale the entire ecosystem so when we get down to semantics I can understand how Roll-Ups don't technically scale ethereum at this given point in time but if you look at the long term I believe that it does I believe that they do I mean a follow-up question would be again about semantics mostly um should we consider roll ups as l2s or layer twos Patrick um I think layer twos are a terrible way to describe all of this elevation I mean it says a word that popped up because of the lightning Network back in Bitcoin let me sort of hijacked it and I feel like because of that people get confused about what raxi building and as I mentioned all we're really building our bridges to obviously out to other other blockchain systems and so it just really comes down to one of the trust assumptions when you use that bridge and one of the trust assumptions of that other all chain system as well so yeah I I use the layer 2 freeze because there's a buzzword that everyone understands but I think it's a really bad buzzword because it's just confused because like like even like Layer Two you can think let's just say it's like starkness Palladium where you have this trusted committee that keeps the data off Chien is that really a layer two there's a trusted committee versus another Bridge that's a civilized in the Twisted committee that move the funds back and forth so yeah I think it's a terrible phrase because it's sort of confuses totally agree I mean I think all of this is just serving to expand block space so I tend to just use the word block space as well I agree I think I think it's so hard now because it's been in the popular discourse for so long that like if we start to change the words like too drastically like as we as we've seen it kind of gets everybody riled up um but but I do agree I think in the far future this idea of the kind of parent versus child relationship is going to change as the ecosystem expands and we see more Roll-Ups um but it is hard to change the terminology at this given point in time okay so now moving away from you know roll-up world and the model of world if you go back to what people often refer to as the monolithic worlds right you know people I mean at least in the crypto Community right it's pretty kind of standard now that they all agree that model architecture is fundamentally a better design but what are the benefits of a monolithic architecture that people working the model space should definitely acknowledge and maybe should learn from as well sorry I was gonna say I can just jump in with one example and then would love to hear everyone else's um I guess one of the best parts of modular structures in my opinion is that you have specialization at each part of the stack right but with that you're basically introducing all of these dependencies at every layer and that increases kind of like the exploitation risk of every part of the stack so in a way monolithic structures you kind of know exactly what you're getting um so a new trust assumptions as well so for example if you're using a new dla with something plus assumptions then you're kind of following that as well exactly yeah so I I would say monolithic architecture definitely has like some level of trust minimization and because there's less experimentation happening um I guess you could maybe assume that there's like less mistakes or like there's one thing that people are working on so those teams are spending years building out those those layers of the stack versus again with kind of trusting different modular parts of the stack you're trusting that each one of those are acting perfectly and they might be totally independent actors so I think yeah just add to that um I had a different um thought in terms of what um you know the modular world or what or sorry I'm gonna jump to my second thought um something that I've been thinking about a lot is about infrastructure infrastructure concentration in general so although when you add you know different pieces to the stack you know you have the potential for there to be failures of the different pieces there's also kind of this unforeseen you know underlying stuff going on between you know any system including monolithic structures so um you know we're all um the nodes located where is the majority of the stake what how many clients are there using and you know that's fundamental to any blockchain but I think that um people don't realize that like I think that at the end of the day it's when you're just scaling one system like it it can be just as dangerous as scaling you know I think sorry I think it's actually less dangerous when you have the different components because you have the optionality and those people that are gonna be building different things and thinking in different ways and using different infrastructure so I think that it can be seen as a benefit as well as a kind of a drawback that there are different you know pieces put together um it can lead to like some additional issues but also protect against other kinds of failures as well I've been trying to think how to answer this one it's quite tricky um because I I sort of historically speak and I lived through the block size Wars you know I sort of saw the conflict amongst the community and at the heart of the block size Wars was because he didn't understand anything about modular systems we just assumed that you can we have a monolithic architecture and that was the only way to scale these networks and so either you have the and then you have this trade-off and decentralization you know do you make it the system more affordable with bigger blocks you know bigger blocks cheaper transactions more users but then you reduce the operators of the system and people who can verify the system the other hand you have small blocks you know I can run this in my Raspberry Pi and it will converify that it's correct but then this is a very expensive chin is a wheelchair and you know it's not decentralized in terms of users because it's only useful for Wheels um and that conflict was very toxic because we just didn't understand the design space of oh there is a third way of actually just modularizing out these different problems um maybe the benefit of them all I think approach is really bootstrapping maybe that's the best benefit you know you want to most of the most of the success with projects in our space got code out as soon as they could and then they let a community emerge around it you know if you try to start from the beginning they build your Ivory Tower then you're going to you know fall behind the market because it takes five years to deploy then no one cares after that point so maybe the model I think was useful for people that bootstrap a project see if it works then afterwards they begin to modulize it but I think if you were mean as a monolithic project then you just end up in this toxic War because you know you can't achieve the stated goals of of the project because it just doesn't allow you to achieve it that's the Bitcoin problem because it's just a shame I mean talking about yeah I think that's good so I was gonna just add one more I think that was a really good point I think similar to that um different economic models might also lead to very different incentive structures so like imagine if each part of the stack has its own token so like the da layer execution Etc so beyond the fact that coordinating all these tokens might add complexity you also just have the fact that these tokens might have totally competing incentives and so one of the benefits of the monolithic approach is that you don't have to deal with this at all and it might be more Capital efficient this is a big question mark but I think it's one thing to think about yeah and actually maybe this is the jumping because I don't know people are listening to this when we have to they may not actually know what a modular architecture is um so I mean there's basically like three I like to think of three different layers you have the datability data availability layer which is basically saying here's all the data blobs and here's a total ordering of the data blobs you know this given the data blobs hopefully we can then compute a copy of the database then you have like the execution layer where we take the data blobs we execute them and then we actually you know compute a database itself and then the third one is sort of like the settlement layer which is uh this is like you know the ethereum layer and then the action so I'll actually get that in a second the settlement layer basically is the database that records all the offsets and it should really be minimal execute well there's actually the beat where the settlement layer should just be data or it should be data plus a little bit of tiny execution so the ethereum root map would be that ethereum serves as a data availability layer on a settlement layer then the execution layer are the rule UPS something like Celestia would have just a data availability layer then an execution layer on top and there are a settlement layer on top and then your execution layers you know the Sovereign roll ups uh ordinals would be the same for example and so we're even in the modular space we're debating on how modular it should be because you lose some nice benefits if you really do distinguish the data and the settlement layer and that's something that's going to be tested soon with the launches last year so I'm really excited to see that happen versus something like ethereum I've been talking about bootstrapping off I mean it's easier to a bootstrap it's a monolithic Network or chain talking about that you know it's it's I guess an equivalent of that would be an app chain right uh model in the for example in cosmos space um certainly you you did write quite a few articles on this at least one article I remember that I've read what are your thoughts on Roll-Ups versus app chains right what are the benefits of uh building a roll up directly for your application uh versus building uh monolithic caption for example using uh you know sdks like Osmos sure um so so app chains um you know born under the cosmos ecosystem are this idea of having an entire monolithic blockchain um for the for one usage uh so you could have you know osmosis is a great example of you know a defy um specific chain um you could have um another infrastructure specific chain I think dvpn does decentralized vpns um and so it's in the cosmos world it's kind of a collection of these you know Sovereign independent chains that are connected um through you know a bridge message passing layer which is IBC um so so the difference between an app chain and a roll-up well the biggest difference is obviously the you know an app chain is a full monolithic structure so you have um all of the layers you know put together um you have you know a validator set and that's you know I think one of the biggest detriments to an app chain is you know having to bootstrap that validator set like we were talking about before um it's a Herculean effort I think you said Patrick um so super challenging right and you have to attract you you know a good number of just distributed um you know individuals to operate your chain um and that can be really challenging um so the difference between you know a roll-up or an app specific roll-up and an app chain is that you have an app specific roll up can be you know specific to a certain type of um you know need so defy or vpns or whatever it be um but you're you're abstracting away you're using different infrastructure for that base layer so your your da and your consensus is um you know outsourced outside of your system um you know that way you can only focus on your execution environment uh you don't have to worry about bootstrap bootstrapping that validator set and you just have a little more flexibility there in terms of you know also you can you know be a part of a settlement layer so if you're you know on if you're an L3 sorry I'm going to use the terms and L3 you know on an L2 you know you share uh the benefits of sharing a settlement layer with other Roll-Ups um and that would be the primary differences I I think in terms of what is best built on a roll-up as opposed to to an app chain I think it really comes down to you know developer preference like what are you looking to do um you know do you really want to build that base level infrastructure is do you want to have that customizability right to the base layer or do you want to you know Outsource that and focus more on your execution environment and focus on the benefits of being you know uh just kind of a um what's the word uh the Simplicity of just operating in that space um I think I'll pass it off to to meta I think you probably have a lot of good ideas about what would be really specific examples of you know an app or a roll-up or an app specific roll-up as opposed to um an app chain um but for me I just feel that it comes down to the developer preference and you could go both ways it's just about kind of thinking about your specific application first and then building from there yeah totally I think Stephanie did a great job giving an overview of like why you'd want one over the other I think for me like an interesting use case that pops out for kind of the opposite like why an app Chain versus a roll up is when you need to really have fine-grained control of like Security in the consensus layer so a good example of that would be like um an application where like the the regulatory um boundaries are super super strong like you need to know like who your validators are you need to know what the rules are to like pass any sort of like transaction validation Etc I think it makes a lot more sense to build um an app chain rather than a roll-up because you can have control of every part of the stack kind of like what we were talking about with the previous question uh Patrick anything to add yeah um I was just trying to like compress that's what they're saying they were made really good points um maybe the way I like to look at it is sort of um so I know we're using the up term up chain but basically what we're saying is we want to build our own entire network and then obviously pause messages using IBC for example um and I was mentioned before that's sort of like a Hercule effort you know those systems are secure because you assume an honest majority of the participants are honest effectively and they're willing to you know protect the cfd of the system and the liveness of the system and that's that's a pain they asked to do to be honest just a lot of work to put out together or what's really nice about a roll-up system is that we are what we're really doing in this annual all these systems do need this ecosystem this honest majority this consensus protocol they run the system you know basically they're really needs to exist a roll-up just takes something like a theorem or Bitcoin right now and they says take that as a black box and say okay we've got this now you know we can just use ethereum it already exists it's done all the hard work for us then we deploy the bridge and then the way the bridge can be set up is that we just need one honest party to protect the system um as long as one honest party can stop up they can stake they can participate then the entire cure on all the funds are protected as well and so it really just comes down to this path of least resistance you know do you really want to deploy your entire whole network or do you just want to set up a system where you need one on this party there could be anyone in the world at some point you know right now obviously it's still being built but long term it could be one honest part is a steps up you know even if the operators are of the system are malicious and so it just becomes a technology stack you know long term is like an SDK I want to deploy a database what do I do if I get I get the code I deploy the bridge creates my database for me I have a sequencer may have one or two executors but is open as permissionless then anyone can step up to do the hard work if that's necessary um for me it's just again least resistance this is an easier stack to deal with and you can imagine thousands of these emerging because it's just way easier for people to do and now there's lots of roll up as a service companies even outlier again it's like a roll up as a service company because it's way easier for you guys to write software to deploy this versus create and you know unique networks for everyone uh so it's just it's just way easier to deal with I don't know that's true it's much easier to deploy a roll up as opposed to binding I don't know even 100 Valley leaders let's say if you want to have for your apps it's pretty complicated and time consuming and then you know yeah exactly yeah is this your point that's a great point you know if I want to set up an option maybe I need to have 100 validators I have to go search these Source these people initially and bootstrap it or you just have one on this party it's just easier isn't it just a lot less indeed yeah go ahead I was just going to add that or a lot of these um like a lot of the no code you know world of deployment interfaces you know I think like the goal is to like get a roll up and running in you know 10-15 minutes um which is just fantastic yeah you know let's let's talk about that so uh of course you know I mean autoclave is building a roll-up and service product and the other other you know parties and you know vendors and you know Builders out there they're building similar products uh you know some some of them are I'm not sure if they can be called roll up as a service but more like some people offer this SDK model and the others offer kind of a managed service model like a SAS model but the main question like at least uh common criticism that I often hear from some people is that there isn't enough demand for application specific rollups today so what do you take on this uh do you feel like like there's demand and you know it's just that you know you guys don't have it or is it like it's still building and it will take a few years for the demand to really come to a place where it will be noticeable yeah I love this question I think it's a bit of both like there's like the Chicken and the Egg problem like yes like right now maybe the demand isn't there yet but I think part of it is because it's not super easy to stand up a roll-up right now so like to Stephanie's point the reason why I like Roll-Ups as a service exists is because not every team has the developer bandwidth to like manage all of these things and also like we shouldn't have to reinvent the wheel every time right you can't expect like a consumer founder to have to keep up to date with all of the research happening at the infra layer it's like not a good use of their time but I've definitely seen in my portfolio for example people are very much thinking about how to scale how to like control their own block space how to look at different things like Mev as a business model Etc and all of those things kind of require specific knowledge at the infra layer which if a company is willing to kind of stand up and make it easier for them I think definitely people are going to use them so I think abstraction is the key so once once these things proliferate and once people understand why they should be using their own block space and kind of controlling their own Roll-Ups once that idea launches it'll be a lot easier and that'll kind of increase demands for for roll-up as a service products um but I'd also love to hear your case for the summer since you're thinking about this every day so at some point would love to hear your thoughts yeah sure I mean like I can go ahead so uh well I do feel that um there are certain types of developers or at least companies and interviews out there that definitely do not want to go and build everything from scratch right even sdks because that's not the expertise they like it or they still have to go and understand sequences and things like that right and so what they want is they want to Outsource the entire stack to someone else and say guys why don't you go and manage this cost while we go and focus on our game development for example right because that's what the core expertise is and so in those cases we have seen uh people coming towards from the gaming industry and people are building around experiments around social fight you come towards to us and say okay guys we don't we want to have our own chain because historically too right games have always tried to build their own infrastructure right because you know look at taxi Infinity initially it was in ethereum when they want they went to one do their own thing uh more recently running is a good example of of an app chain for games games are or game developers are definitely very keen on uh building a specific Roll-Ups themselves or using infrastructure provider um D5 has has certain restrictions uh many of these people feel like you know they would miss on liquidity you know it's not good to have sitting on your own roll up and things like that maybe that will change with better Bridges and so on I'll stop here uh Stephanie if you have any anything to add um no I guess I would say I really agree with you know both of your points um I also just think that I guess to add to that um there's just going to be so many different people that want different things um and now that we make it easier um the more abstraction we have and the more you know Roll-Ups and service kind of products we have the easier um I think uh before you were kind of talking about how um there's the role of sdks and kind of the no code deployment and I think I I'm really curious to hear what Patrick says about this specifically but um my original post I wrote a piece about roles as a service and I'd kind of grouped them all together I put sdks and sequencers as a services and as well as no code together but the more I think about it and I think there was a debate on Twitter about it as well I think that sdks probably don't fall into that definition of roll up as a service because a lot of these sdks are you know open source or with you know Progressive licensing and they can just be used and so roll up to the service providers can build on top of them um and I think um you know arbitrum would be an example that and correct me if I'm wrong but the way that I kind of looked at it with the licensing model where you know you can freely deploy um anything with arbitrum Nitro on top of arbitrum but if you want to deploy um you know roll up with Arboretum Nitro elsewhere you're going to have to you know make an arrangement with the Dow or get the data you know agree to that and so I thought you know there has to be some incentive for the Dow to want you to do that so in some ways you're kind of treating the use of the code base as a service um so curious to your thoughts on on that Patrick yeah that's cool I mean the other sort of three ongoing questions now isn't there so let me tackle that one first around the license I think that's important uh no that's really important so basically uh everybody comes down to the heart of how whether companies can offer roll up as a service the right because if they can't get the license to the software then they can't offer the service come they um and this is something that the orbit from dial really needs to do at some point I read a blog post a long time ago before I joined arbitrine and it's and what I was really looking at was sort of the licenses of Labs like the problem with you know the business source license and I only wants to say business Works licensed for now is a lot of startups don't want to go and interact with a company in order to get a license so then they deploy you know the actual type of software that sucks from everyone's perspective um you know we don't really want Gatekeepers that have to deal with this on the other end of the spectrum is sort of the Apache license and the MIT license is that what you what you can also end up fostering is that someone might take your code and compete directly with you and then you know harm the ecosystem in a sense we sort of saw it with sushi and uni Swap and then uni Spa pioneered the business source license um that also sucks because you know if someone takes your code deploys it they don't feed back into your ecosystem then that well that sucks for arbitrary doesn't it or any other network or any other project that's building software so I really like to see the opportunity to deal with and it's up to them to deal with it is a ecosystem license where as long as you satisfy some criteria maybe you share some of them Avenue back to the Dow then you're free to take the code and deploy it any way you want in an error 2 format we have some evidence that at least for the optimism up stack like the BS protocol or coinbius beast and the other uh I forget the other company now that's doing it but they've all agreed to your Revenue share with optimism or at least optimism Foundation whatever whatever legal setup they have and that's cool you know like that's something that could be incorporated into a license and then incorporated into the SDK and then people just that's how they launch l2s so I think that's definitely a problem for the arbitrim down I would love to see them start talking about that um because you know it's their decision that they do with with the arbitrine code that they want to do now so that's the answer to the license question then the other one is sort of the original question was sort of like why should we care about these systems what are the use cases are resist too early with them and I like to look at I think there's two solid use cases you can think of one is we want users to interact on the roll up itself uh and I think from a user's perspective users don't care you know users don't really care who custodies their funds but operator Studio you know if I'm a trendy startup today and I want to compete with coinbase uh can I really replicate there's operational security to protect billions of dollars now that is a you know how they protect their assets even binance as well you know they're I think they have like 60 billion dollars or something crazy like that you know setting up the human process to protect those funds is very difficult what's really nice is roll up as a service or as a software stack is that I can take the code deploy it and then the software protects the funds for me so as a trendy startup I no longer have to worry about custody or protecting users funds I can just actually focus on the service that I want to provide and we've seen this already with like Loop rain DUI DX and other you know ex genes like roll ups and obviously coinbase is now doing the exact same thing they've realized oh we can deploy a roll up and we don't have to protect our users funds now you know we can have coinbase custody then we can have you know a real app that revise Financial Services like creating and swapping and Loans Etc so I think that's like one very user orientated approach and I think it's the operators that care more about that because it's way easier for a startup now they compete with coinbase um the second one it's and it's more like a it's more from the perspective of smart contracts that live on the blockchain already so maybe you know maybe they already live on ethereum but they want to get some external information it's like an oracle service but like chin link or maybe the sub graph when you think about these Bridges at the heart of it is that they just pass messages you can pass messages from ethereum to the opt-in system or from the obtain system back to ethereum so an ideal world because we all everyone I'm sure people knew about sub graph we can index data and then query it and get it results it'd be really nice that if I was a smart contract living on ethereum I could ask the Oracle for data the Oracle could respond to me but now I have confidence that a certain algorithm or process was executed on that data saying get confidence about how all the data was manipulated now the source of the data obviously depends on you know garbage and garbage out you know you always have that issue but at least I have confidence about the execution on that data and that the result could be correct where today you just rely on certain parties to attest to the fact that it was done correctly so there are two use cases I see that you could build a much better sub graph or you could build a real app that targets users and pretend and that'll be more for operators probably than the users themselves so sorry I know that's a really long answer but I think that's sort of how I look at it today let me let me give the follow-up question to Stephanie this one because I think she mentioned about mentioned about you know sdks or shared sequences and so on right so do you feel like um for some of these for example shared sequencing to be successful you need a lot of roll-ups do you agree with the statement um you know I think there certainly is um I think that the success of you know Roll-Ups as well as sequencers it's obviously coupled right you know you can't really have one without the other I mean you can have a centralized sequencer um but you know which is also an option but I'm sure a lot of projects are not going to go in that direction they're going to want either their own decentralized sequencer set um or a shared decentralized sequencer set so I think that you know there's a lot of network effects like you when you you get a lot of benefits when you share a sequencer set um you have you know uh if you share a dealer in a sequencer set you have a lot of composability benefits and in terms of you know bridging and um Atomic transactions even um so I think it's it will be really beneficial for some of these shared sequencers to have you know a lot of Roll-Ups they're plugged into and it'll be mutually beneficial for both um the thing is is that I don't think anyone has really molded it out modeled it out yet unless I'm wrong but there's probably going to be a limit to which um you can share a sequencer set eventually you're going to have too many Roll-Ups and it'll just get the load will be too much if I understand correctly um so at the end of the day I think that there is space for you know a variety of different shared sequencer sets and it's also good to have that friendly competition and it's a positive sum game in the end you don't need to have you know just one sequencer set that everybody uses but if you join a sequencer set you want to be a part of that ecosystem and have those composability benefits um and so I think that sorry I think I'm kind of blanking on the original question if you I think the question was whether they would be successful right so the question you you have this these I guess uh services or service providers today like you know shares networks or interoperability Solutions out there um and of course they can be successful with let's say a few uh you know Roll-Ups out there but they become even more successful when you have more and more Roll-Ups right so for example the grants of every smart contract has a roll up essentially then you have uh these interoperability Solutions or shared sequencing really become the biggest I guess uh The Leverage on these uh you know the growth of Roll-Ups in general right so the question was that do you do you feel do you agree with this or you know do you feel like no they can they can find other ways uh to to tap into the consumer base and user base well I mean you know team teams are smart and you know if they needed to Pivot for some reason Roll-Ups didn't work out and they didn't want to be sequencers they wanted to be validated or you know something else I'm not sure they could pivot and do so um but but yes at the end of the day right the shared sequencer networks need the Roll-Ups to be able to succeed but but I do really feel that the ecosystem benefits that you're going to get from these shared sequencers are gonna really create all these ecosystems that we haven't even seen yet um so I'm super curious to see what happens um but I think that there's a huge a huge need for it um especially right now as we get closer and closer to seeing a lot of a lot more live roll-ups and roll ups yeah totally I was actually going to mention this later but I think I would really hope that there's more of a focus on this in the future like I'd love to see kind of a greater emphasis around like interoperability and shared liquidity on all of these like shared um roll-up infrastructures because for example in an ecosystem like optimism's op stack um I think shared sequencing could really help something like interoperability where you're making sure like base is eat is um like easy to access which is like normal eat and all of the other like optimism chains Etc right now that isn't like super easy actually like the bridging ux is not great um so I think that this is this is a place where people a lot of really smart teams are working on shared sequencing and I think this will help a lot I also think around value capture this idea will be really helpful so shared sequencing kind of opens up a huge possibility around Mev and so with more research on shared and decentralized sequencing I I think a lot of these l2s or block space companies will be able to think about value capture better because right now um most L2 tokens like aren't really doing much yet they're they aren't capturing value in a way that makes sense Beyond like governance and I think shared sequencing is kind of like a potential Avenue like a solution for that it's not trick any thoughts um I think I think both the comments are really good I'm just trying to think what I can add to it um I think uh I think it's really important to distinguish what the sequencer is supposed to be doing again for people listening to this maybe not actually know what the role of a sequencer is and lots of teams get confused about what it's supposed to be doing as well so in a roll-up you have two different actors you have the sequencer you take you know they interact with the user they teach the users transactions they order the transactions for execution and then they pass them on so all they're doing is ordering they're not executing you know they they know what the execution will be because they decide the order but you know they don't actually do the hard work of convincing the bridge about what the database looks like then you have a set of executors you take the order transactions they execute them and then they convince the bridge oh bridge this is what the database looks like so with that in mind um what's really nice about that architecture is that the sequencer potentially has nothing to do with the security of the system you know if the sequencer goes offline users can just take their transactions send it to the bridge directly it gets ordered for execution then you assume there's one honest executor out there who picks up the job and obviously executes it so that's cool you know the sequencer can be one actor and it doesn't necessarily impact the fundamental security of the system now there's some of the things in the short term they could do you know they could just promise to include your transaction and they don't and that could be if have implications for these D5 protocols what's nice is that you don't have the necessarily decentralized the set of executors we don't need we don't need perfect sticker Theory we don't need 500 000 different sequencers we and and then if you think about from that architecture the sequencer's job is to offer a fast path and the user experience and to make sure that the user gets the best experience but interacting with this rule up and that comes down the one part of that is you know latency who do I talk to you know the user needs to know where do I send my transaction the basic problem the second one is already been alluded here is composability you know if there's two different rule Ops let's say the user wants to you know take their money on arbitrim and then send it over the optimism do a transaction there and then they bring the money back in that case there is a benefit to have a shared sequencer who runs on both systems because then they can coordinate the transactions uh I think personally for me that's a short-term solution until we have better bridges that connect the various relapse and it can provide you asynchronous you know where I they cut protocol you know I send the value over I interact and I bring it back it's not immediately composable it is composable but it's not synchronous it's async it may take two minutes versus a very nice promise that'll be done atomically or as close to atomically as possible um and then I think when you think the sequencer said you know the goal is really just to make sure that uh you can meet you can make sure that the fast path is always available to anyone in the world or at the most people in the world you know that's really the goal there is to make sure people kind of actually transact on the system that is credibly neutral thank you Patrick I think we're running out of time so take one last question so uh there's a question about what the future would be or what you think or hope a feature should be so what are your predictions or what are you hoping for the rule of space to achieve in the next two or three years um Stephanie you want to go first yeah wow it's sometimes it's so hard to Envision what's going to happen even in a month from now you know everything moves so quickly um but I'm really excited to see a lot of these projects launch on mainnet um I and so I think you know Celestia being a huge a huge project that we're all expecting um and then you know all the shared sequencer networks that are going to come online as well and just you know with real with the the growth of role to the service which are you know getting also a lot more established you know just all the different plethora of Roll-Ups we might see um in two to three years I to be honest with you I can't exactly tell you exactly how it's going to look but I feel like there's going to be a lot of lessons learned um you know we're going to discover some issues things that didn't quite work the way that we thought that they would in theory um and we're going to correct them and I'm just excited to you know be a part of this journey and you know documenting and seeing you know where we all go it's it's just super exciting me though yeah I have a couple um I guess for one I'd love to see I kind of mentioned this but a bigger focus on value capture so if we're right about the roll-up Centric future Roll-Ups are going to be in the flow of so much value and so how are they going to be able to capture that value so that kind of requires effort done both around shared slash decentralized sequencing um around like thinking about like incentive structures Etc so I'm excited about that and then the ZK space is moving way faster than I think any of us really expected so I'm really excited to see a lot of those kind of come on Main net in the next year so and then I'd love to see more out of the box models for specific use cases I think a lot of the roll-up as a service companies are going to be driving this but let's say I'm a game like I want something like so easy to use that it's like specifically built for like high throughput high tech rates Etc and it's just built for this use case I think you can do that for a lot of different use cases so I'd love to just see like developer experience getting better around roll ups and then the last one I'll say is around um kind of Greater emphasis around like bridging ux kind of like what Patrick was talking about like how can we get Atomic interoperability between all of these connected Roll-Ups um but yeah I'm really excited about all of this I feel like the roll up space specifically has a lot of engineering bandwidth behind it right now some of the top projects working on it which is great I think it's proliferating a lot faster than any of us thought Patrick um yeah maybe some including as well so I think what's important is that we can see the results today of how Roll-Ups are going to sort of look in the future but it's important to remember this has been a very long journey it sort of started in 2014 with the original side chain paper for Block stream they don't use the word bridge in the paper but they were basically trying to build a bridge where I could take my Bitcoin lock it up put on a sidechain transact there and then bring my funds back um and it's taken a very long time to solve a lot of theoretical issues and of course practical issues are just deploying these systems they get to where we are today where there's Maybe four to five big rule Ops you could say you know or six you know let's say five now that are probably live you know so then the question is where do we go from here and I'm I'm really cautious that like this is very this sort of resembles the beginning of you know Computing in the 1940s there's recently was cool by Thomas Watson from IBM Murray basically says uh you can't foresee a world where you need more than five computers and today we have about five Roll-Ups you know it's very very similar Dynamic here isn't there um and to me I definitely foresee the idea that relapse can just be an SDK that anyone can deploy and it will protect the users of that system I mean what you're really doing is that you're removing this Power Balance between the user and the operator today the operator holds all the power and because of that and that the requirement of trust in the operator it creates a lot of friction for people that interact and the transact and work together but once you remove that par Dynamic where the user is equal to the operator and there's no longer this you know power Dynamic that you don't have to trust the operative assistant you just have to trust the platform itself then it's very easy for people to just transact on the internet for example I can lock my phones into this Chinese web so that I can't read I could then play their horse racing game you know maybe they rig the horse racing game and they beat me but at least I know they go offline I can always get my funds back out where today there's no way I've assigned my money to a Chinese website because I just don't know the operator I have to trust them so once we can remove that par dynamic uh then yeah this is gonna flourish it's going to be hundreds of thousands of deployments of real apps because it's just a better way to build an open database and protect users and if anything when you think of the regulatory sort of environment now that the US finds itself in sometimes you sit there and think you know are we the bad guys you know are we actually doing something really wrong in the erotic The Regulators are correct but it's wrong it's the opposite you know it's sort of we're building systems that is a regulated wet dream you know they're so transparent that you there's another financial information is all there on the blockchain um we're building systems that protect users at the very heart of it is just to protect the user when they transact so yeah I'm very very bullish from the field obviously and hopefully for the right reasons because yeah there's one about views for the future of course of course well with this we will end this panel thank you very much Stephanie Patrick and maida for your time it was great having you all talk about Roll-Ups uh Roll-Ups and service providers and other related topics hope you all enjoy this conversation as well thank you very much thanks everyone yeah [Music] foreign 