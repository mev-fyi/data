[Music] thank you [Music] everybody thanks for having me today so today I'm going to be telling you about permissionless interoperability why I believe it is the key to realizing the potential of modular blockchains and why the potential of these two can combine to allow blockchains to finally scale to be able to support a global audience so now in doing so I'm going to have to tell you about hyperlink the first promotionless interoperability layer and in doing so we will examine it and say overview first and then dive into the specifics now before we get into that it's a little bit here I really like to talk about this concept of The Interchange Highway what is The Interchange Highway think about a path a path connecting between the increasing array of these chains that are just gonna otherwise floating through space The Interchange highway is the way to put on and off ramps right away to connect in between these between this increasing set of chains and like regular highways making it easy making it accessible making it relatively fake um safe and certainly making it fast so today we'll cover how permissionless interoperability and modular security combined to give us something like The Interchange Highway which is of course enabled by hyperlane so where are we today today we have these internet computers if these internet computers are really cool they're amazing they can do a lot of things all the way from giving us Sovereign money to giving us permissionless access to computation and that's all really cool in a primary way that these internet computers are able to do this is due to the fact that for the first time they have both created an environment in which we impose and also materialize scarcity and visual resources I really like this visualization here what we see here are Bitcoin and ethereum blocks visualized as buses and I think it's really great at illustrating this point of materializing digital scarcity because if you think of it the bus has a certain amount of seats and that amount of seats is kind of fixed through time it can get another bus with more seats but a single bus has that same amount of seats and think of that like the amount of space in a block the fact that more passengers want to get on the bus does not change the amount of seats the fact that more transactions want to get to a block has not changed block and this is both the most interesting but also perhaps the most problematic thing about these internet computers because you know think about all of us here today if you're listening to this how you presumably care about blockchains very much you want to advance them you want them to have more adoption globally maybe even have like myself Ambitions of creating an alternative Financial system it's a global one that is built on these blockchains but we only have so many buses and so many seats on the bus so if all of us here are working to increase demand we know what's going to happen right there's the same problem the same scaling issue is going to hit us every single time and it's of course the issue of congestion and what happens with these scarce digital resources when demand decreases well we can't produce on-demand more seats we don't have uh you know the amount of seats on the bus don't change dynamically in response to the amount of demand for those seats and so we end up with surge pricing and a gas is just too damn high so what do you do about it right if you're here today it's presumably because you believe that the most promising or at least one of the more promising solutions to this problem is the modular revision for blockchain it's a modular future for blockchains if nothing else it seems like the most promising path for ethereum the road the roll-up road map for ethereum is certainly something while working towards here and I'm not going to go into the details of what this means because presumably again if you're here you know enough about it but um separating the different services that are provided by a single chain in two different layers in a stack and those being provisioned by different providers this is really what we mean by the the modular vision for blockchains and in particular one consequence of it is that you're going to see not just a few very large or capable internet computers but rather an increasing number of smaller internet computers that are all working off of larger ones and settling to larger ones but so there are tremendous efforts by a lot of the people who are here today to make it increasingly easier for someone to launch their own modular chain to launch their roll up whether it's Roll-Up Frameworks like the op stack whether it's data availability Solutions like Celestia and whether it's roll-up as a service providers like all player that brings us here today all of these to make it increasingly easier for you to spin up your own chain and roll up in fact it's not a feasible to say that already today within a number of hours you can go from from nothing to having a roll-up live and so think about this world where we're going to have an increasing amount of change because again it's increasingly easier to create your own modular chain I have all these chains coming up and floating through space each one you can think of it as like a new island in the ocean but how does it connect to the others how does it connect to the mainland how does it connect to the other continents and countries that exist in this world of blockchains right sure you can use an optimistic route to go between your roll up in the mainland but that's a compound word that barely barely suffices what do we do when there are thousands maybe even hundreds of thousands at least just how do we connect them all enter hydraulic and with hyperline we have the first permissionless interoperability layer as I mentioned before the tool that lets anyone connect any chain a solution that fits this modular world of blockchains where we're going to end up with an increasing number of chains this little visualization here think of it as that interchange Highway that we described before the uh the pathway that will connect between these new chains as they begin floating through space and providing a safe and secure and easily accessible path for folks to Traverse on so why is permissionless interoper really really necessary well blockies historically have had an issue of connectivity but by 2023 today there are modes that connect between blockchains the issue with those is that they are entirely permission and what does it really mean to be permissioned it means that you need to ask someone to allow you to use that service all right if you create a new world up today you can't just have one of the major interoperability criticals supporting you just because it does not work that way enter hyperlink hyperlane as we said before is the permissionless interoperability layer a tool that lets anyone connect any chain hyperlink means that for interrupt really you don't have to depend on anyone who really can get sovereignty in your interoperability and if you look at this visualization here into something that I put together using a mid journey to try and illustrate that concept of The Interchange Highway that I mentioned before think about our modular vision for blockchains materializing it really does mean that ultimately we're going to be ending with thousands then hundreds of thousands maybe even millions of little modular chains and a permissioned interoperability solution is simply not going to work it's not going to fit this world so we need something permissionless something that can be served and owned ultimately by the chains that want to use it and this is where hyperlink comes in to solve what has been the major issue in blockchain connectivity today which is not just the issue of connectivity in general which was a problem leading into the last few years but today we have Solutions in 2023 the issue with them is their permission in nature now how does this happen why is this even a problem well primarily it's a problem because the current landscape of inter early Solutions has these one-size-fits-all security modules primarily this is the case because they have tightly coupled the product of connecting between chains the interface for connecting between chains as in this illustration here the messaging interface they've typed a couple that with a security model and you can't blame them for it right crypto is the most adversarial environment that's really ever existed for computation or at least one of the most adversarial environments and in it security is Paramount we know what happens when security goes wrong and so it felt uh probably felt very prudent and sensical to tightly couple these things but certainly they don't have to be tightly coupled and security can be interfaced in modules now as long as it is the case that they are tightly coupled if you want to use that messaging interface you are going to need to receive access or receive permission from the operator of the security model for you to be able to use their messaging interface can this leads us into the concept of modular security being a solution for the problem of permission interoperability so all of this leads us into modular security being a solution to the problem of permissioned interactive building we're going to get into the concept of module of security and further in further depth as we start talking about how hype building works but it's a high level which you should take away from this is that modular security decouples the messaging interface from the security module at hand and most importantly it allows for customization and configuration on behalf of the connecting application the connecting roll up such that you can choose from an array of different security models and I think most interestingly use different models based on what your users are doing right so if you think about to go to the bank and um you're trying to take out a hundred dollars well they're really only going to ask for your PIN number but you try to wire out fifty thousand dollars and now they start asking more questions right they want you to come to the branch they want you to speak to a banker and answer you know five or six questions about recent transactions the type of the account some different security measures what is the bank doing the bank is using a different type of security protocol or security module in this case based on your action and this is something that becomes available for us uh with the concept of modular security and again hyperlin we believe that modular chains deserve modular security as opposed to being stuck with the form of permissioned interoperability as we advance the conversation it's probably worth getting into different flavors of interoperability so that we can better understand how modular security stands out now to do that we'll start with perhaps the ideal form the form that um many of us would opt to use wherever it is applicable and that is native verification what does data verification really mean at a high level it just means that you're leveraging the existing consensus that exists between the change that you're connecting and most importantly you're just not trusting any other thing or party other than chain a and chain B now first let me say verification is not magic right it does not mean you're going to have a secure interaction it just means that if you're connecting a and b as long as you are comfortable with the security on both A and B what you're getting has no additional trust assumptions but if something wonky is coming from a going to be you know native reputation just passes that along and that's okay um now ideally we in crypto we want to minimize the Trump's trust assumptions that we have to take so native verification wherever applicable is really great the problem with it is that in certain environments it is not quite applicable because unless the environment was constructed to be able to support native verification what does it really mean it means replicating the consensus of the genes you're connecting on each other so you would need to replicate a on B you'd need to replicate B on a this is where like client verification comes in quite handy but what do we do when we don't have electronic verification well replicating consensus without it is incredibly incredibly costly to the point of being infeasible so while data verification is something we'd love to use wherever we can unfortunately we can't use it everywhere at least not yet now not all hope is lost there are advancements right now things like serial knowledge proofs that ideally should make the cost of replicating consensus and being able to have um you know native verification in more locations notably in the evm it's much more feasible so it's going to happen eventually we're not totally there yet but okay do not despair so if negative verification is one flavor what is another well it's external verification if and Native we only trusted the chains connected with external verification we're now introducing a new validation mechanism separate from that of the chains connected it's a third party so we are trusting a we're trusting B and now we're trusting some C write some external party and if you're taking a look at this and you're like whoa I I've seen something like this before I know what this looks like you're thinking about oracles yeah you're right like external verification boils down to being no different from the Oracle problem if you think about the issue of connectivity with blockchains in general the fact that they don't know anything about information and data that's not endemic to them well again that is a core issue and a theoracal problem but whereas generalized oracles are trying to solve a general problem being able to fit any data regardless of source in an interoperability we have a much more narrowly focused Oracle problem where we just want to sort of organize data and state coming from other genes so there are many possible configurations in an external gratification Realm the external verified system could just look like some type of proof of Authority or a multi-sig or we have a actor or group of actors that we trust and we are comfortable with them and their validation results it can look something more like a proof of stake system and here it's important to note that these profostic systems are very different than proven State consensus and say like you know ethereum where we use proof of stake to decide on processing of blocks who was taking an external verification system is very very different and very important because it can actually have devastating results if collusion or malicious activity is happening because the other end if you're connecting between a and b and you're doing it through external verification using proof of stake whatever B receives from a is completely dependent on the external verification system so if you use proof of stake and those validators are telling you that the sky is blue even though you think that the sky is red like it's blue from from all the intents and purposes right so if they are misleading you about the state then that is all you know there is no way for you on B to be able to verify that that state is incorrect and there are some very interesting implications to it and this is why generally speaking there are two modes for proof of stake and an external verification system one where the stake is concentrated in a single chain and then that value is put at risk for every other chain that's connected and another where a stake lives on the on each chain and there are different benefits to each one of these configurations in the first configuration can get a steak all lives in the same place so you get to benefit from some economies of scale from some concentration but what happens when a punishment is needed to be issued right when slashing needs to happen to one of the validators their stake lives somewhere else than where the offending incident happened right so say they're connecting between A and B the steak lives on the chain that is C and there needs to we need to communicate back to see about this this incident that warrants some slashing well how could we do that unfortunately the only way that we could do that is through the same system and so in a case where just one you know you have One Bad Apple presumably the other actors the other validators who want to read them out and so staking would be ensued in this case they can get cannot be executed permissionlessly but what do you do if all the validators or a majority of them are colluding well why they're not going to wrap themselves out right so punishment really can't be issued through slashing in a system where the majority of validators are colluding and in that case there is a complete breakdown of security Now the defense of these system this has never happened before but certainly it's a it's a theoretical um concern that is worth worrying about now in the other case you do get permissionless slashing you're always able to prove and you're always able to punish an offending validator right then you can do it again permissionlessly you don't have to depend on any kindness from the validators nor do you have to have some type of honest majority assumption as you do in the case where the stake lives on a different chain but what's the drawback right like you now separate the mistake and it is no longer concentrated and you lose out on some economies of scale another configuration that you get an external verification systems is an optimistic instruction think of this as being somewhat similar to the optimistic bridges that power things like optimism and arbiter but the key Insight here is you put some type of delay on the processing time and any message that is received is not going to get processed until that time has surpassed during that time anyone can run a watch or some type of software to check the validity of the transaction and if something looks invalid submit a fraud proof of course with external clarification there's a lot more configurations that you could get you know we are probably going to see more in the future but for now I think we've summarized all the major ones so now let's get back to this world of modular blockchains so with modular blockchains we're going to end up with a lot of hubs what does it really mean to be a hub I think of hubs as places that entice the formation uh of new Roll-Ups and where those Roll-Ups are settling back or sending back something to them it might be using them as data availability as in the case of Celestia it might be settlement and sometimes even different forms of execution as is the case of ethereum But ultimately in my view a hub for modular blockchains is something Beyond which activity concentrates and leads to the creation of more and more roll-ups so why do they need permissionless interoperability because as we touched on before these hubs are going to lead to the creation of more and more and more and more and more rollers and again the creation of these roles is going to happen seamlessly it's going to happen with you know decreasing amount of clicks and decreasing amount of time on the account of their operators of their deployers and so it seems completely infeasible that permission Solutions will ever be able to cater to this world of modular blockchains where we are probably going to end up with you know on the lower end if we're successful thousands of roles so permission interoperably is not going to work right we covered that hopefully by now it's pretty clear why modular blockchains and permission of interoperability or like oil and water they're just not going to feasibly mix with each other permissionless interoperating only covered that week we covered the concept we didn't really tell you how is it going to work so with that let's get into hyperlink I promised before we'll tell you how it works now it's time to do that so in this visual you can see the entire hyperline system as it connects between two chains here we're actually seeing the life cycle of a message as it progresses through through hyperlink and for going from its origin all the way to its destination we're going to walk through this before we do that you should understand that for hyperlink to be supportive of a new environment three things need to happen really you could say there are three layers or three levels to a hyperlink connection the first is the mailbox the mailbox does exactly what it sounds like it is a contract that sends and receives information between chains the second are the security modules you need to configure the security and there needs to be something in place that allows for the state being reviewed and sent from chain a to chain B to be secured really all a security module is is some wrapper on something that makes you comfortable with the state that you're receiving from another chain so that's the second level security the third is the relayer the relayer is a permissionless agent anyone can run a relayer for their messages but real areas like this off-chain bot that observes the mailbox and if it sees that everything looks fine and the transactions look okay invalid it will take those and process them on the destination chain so now that we've covered kind of the high level let's get into the life cycle of a hyperlink message and it'll help us understand how hyperlink works so we have some contract that wants to send something to another chain it constructs the message and it sends it to the mailbox where it encounters dispatch dispatch is the primary function that you'll be using to send information from hyperlink to another chain dispatch takes in the message body right the bytes that you want to transfer over these device can have something as interesting as an interchange function call a extension of sending of assets to something that's not interesting as a message to say something like hey John how are you doing I would advise you to do that but certainly you can it also takes in the domain ID that is the destination chain that you're sending it to and the receiving address now once that message is received in the in the mailbox it needs to be reviewed in some way it needs to be signed for it to become valid for uh for it to be sent off so in this case we can have some type of validators as we talked before and we might have a module that uses validators that might be either a multi-sig type of situation it might be a proof-of-stake situation or we could have an optimistic situation again as we talked about in the external validation case and so all of these combined to basically provide something that then creates some type of validation for this message being acceptable and ready for processing after that's happened we now move to chain B where or sorry the destination chain where Again The Interchange security module or the ism this is in hyperlane lingo this links back to either those validators or those Watchers again in the optimistic case and before that message can be processed it needs to be relayed so a relayer looks at that original mailbox and if it sees that it's been validated by some validators or that the amount of time say on the optimistic uh on the optimistic case has passed and that message is ready for processing the relayer will then take that over to the mailbox on the destination chain world will initiate the process function as it does that now the final logic tests that come in from The Interchange security module are tested against and if everything clears right if there is a valid signature from a validator or we find that there has been no fraud proof submitted right the the integrator of hyperlink decides which security modules to use and how to define their logic and as long as those tests pass the message can be ultimately sent off to its destination importantly about hyperlink you can totally have a case where the message is included in a block on the destination chain but never arrives to its ultimate destination why is that well the real layer doesn't know yet whether the um the message being sent will actually pass all the logic tests of the security module it is totally feasible that the real ear takes something begins its processing but then because of the security measures put in place by the integrator it just doesn't pass that is by Design and so certainly we can end up with a case where that message is again it is a transaction it lands and it is included in a block on the destination chain but never reaches the receiving contract again because it fails the logic tests through the security modules okay so now that we've covered that let's take the next step and do a deeper dive into the concept of modular security as I told you before preparing we believe that module with blockchains deserve modular security touched a little bit on what muscle security means in the context of hyperlink and I think uh if you want to have some fun with it I think an explanation that works for kind of like a smooth brain like myself is think of a security module or hyperlink parlance and interchange security module in ism is really just some type of wrapper and that wraps logic that helps you get comfortable with the state that you're receiving from a chain you're connected to this can take many many many different forms it can take the form of some type of Economic Security where the logic is hey I'm putting this amount of money at risk and if I misbehave you can take that money away from it you can slash it that's one form of an economic ISO it can take the form of optimistic logic where I think you will accept that message only after a certain amount of time is passed during that time anyone could have observed that transaction and see I said look okay is this a valid State transition optimistic systems could even go past just if valid State transitions because if actually if you think about it majority of exploits in the category of interoperability they all look like valid State transitions so an optimistic system actually couldn't go one step further and not just be limited to um fraud proofs and violence State transitions rather it could just be sort of like a veto system you know in maker Dao we have this concept of the emergency shutoff for it at least that's what it used to be called maybe it still has that name where maker Governors can kind of unwind the system in the event that they think something malicious is happening that's never really been an issue so far even though existing for multiple years it's perhaps only been an issue on governance forms but in practice that has not been abused and it could be a really great defensive mechanism for maker down so why shouldn't there be optimistic systems that allow their operators to veto certain transactions if they feel that they are malicious or in some way are going to hurt the protocol that's integrating them what can this really look like in practice imagine now there's an exploit trying to drain funds from a protocol I'm watching and send those to another well that transaction then would not get processed because it would trick it would go through the optimistic module and during that time there would be the option for um people involved in the operation of that security module to veto it to basically block it prevent it from ever happening while this could certainly go against the ethos of certain people feeling that you should not be able to censor these transactions but realistically speaking don't don't when we want to censor exploits right and so an optimistic module could also allow for that and then we also have something that could look more like a multi-stick module right like where we trust a certain set of actors right imagine if you're going to be using something like Circle cctp in effect what you're doing there think of ccdp as a system in which the security module really is a circle multi-sig you are trusting that circle is going to do this correctly and of course you are you're using cctp to use usdc so it's inherent it is a minimum it's implicitly or trusting Circle when you use that interaction now if an ism an independent security module really if all it is is a wrapper on some logic then the beauty of it is that while this looks like an external verification system it can actually just be narrowed down to a native verification system where it exists because all it is again it's wrapping some logic so certainly it could wrap the type of Lifeline verification that has been used for protocols like IVC it can wrap uh some type of zero knowledge proof really you can use it again for any type of arbitrary logic that makes you comfortable with receiving state from another chain and this is why we believe that modular security is the path forward for modular blockchains and when it comes to their interoperability most importantly is what enables them to operate permissionlessly so that's it let's talk about the differences in bridging normally and bridging with a protocol like hyperlink so first things first you can definitely use a regular bridging mechanic with hyperlink and what does regular bridging mechanics look like generally they look like an Omnibus Bridge a single contract where all the assets are deposited and that contract creates ramped assets that then go to the destination chains so what's it look like well you get you get all the assets deposit into a single contract ends up kind of looking like a honeybot and all of them have the same security module now if you did construct a regular bridging Paradigm using hyperlink one key difference you have is you'd be able to utilize different security modules for your Omnibus bridge but is that really interesting with hyperlane we would recommend a modular virgin approach and our in Arlington we call these warcrafts and warcrafts are unique because warcrafts are unique per asset so each asset gets its own Warcraft and warcrafts get to benefit from the modular security features and from the permissions features of hyperlink so anyone can create a Warcraft permission on this link and then assign the different security modules they'd like for that Warcraft and now the assets can Traverse to any chain that they would like the tokens that are minted by a Warcraft are what we call a hyperlane interchange tokens now an interchange token is interesting because it does not have a canonical home it's not an erc20 that only lives on ethereum and that is represented elsewhere rather its home are all the genes that you configure it for and at the moment of transfer it's not another wrapper that's being created rather it is being burned on the origin chain and it's being minted on the estimation chain so that's that for within a limited amount of time that we have we don't want to spend too much more time on this concept of modular bridging if you want to learn more um at the end of the talk I'll leave information for how you can contact us and learn more about all these things but certainly just look up hyperlink warfronts and you'll be available to learn all the information that you need now let's get into some other use cases that you can affect with hyperlink I actually should have probably spend more time on this because I find these much more interesting than just bridging but pretty usually the first use case that modular chains have because they need to be able to import economic activity assets people from other chains so that's what we covered first but what are some other cool things you can do with a protocol like hyperlink again because you have generalized message passing you're able to affect any type of interchange activity you can go ahead and create interchange swap so you can imagine pools of assets living on each chain and the assets being swapped without ever having to be bridged or wrapped hyperlink also supports the concept of interchange accounts imported over from the realm of IBC or I should say inspired from the IDC realm interchange accounts are really cool because they allow you to have a contract on launching be the ultimate owner and controller of contracts and other chains you could think of this really as like a smart wallet that we used to call them remote identity proxies but with interchange accounts something like Adele on ethereum can own all the sub-dials uh it could be like a parent and of the different child dolls and thus when there's a governance update it can be pushed into all those accounts and if individual users smart loss can be an interchange account and really there's no end to how you can use interchange accounts perhaps these these last two really are my favorite uh use cases but with a system like hyperlink if you think of what are some of the things that are immediately necessary when you launch a new chain well first you need to be able to bring in assets well the modular bridging we talked about solves that for you second you might need to have access to some data feeds you need to organize some data from somewhere else and so with a system like hyperlane you can create a stream of oracleized information from any major chain where you trust um that information so you could import chain link fee to get important you know uni uh Unity Web feeds whatever type of information you need to work a lot so you can do that be a system like hyperlink and last but not least my favorite use case interchange margin if you're building a derivatives protocol taking this into account what are your objectives your main objective is to have more healthy trading volume well that is a function of assets that you have collateralized the amount of Traders and their willingness to trade with the consequence of chain margin you can increase the amount of assets you have collateralize because now for the first time Traders don't actually need to bridge over into your chain rather they can leave the collateral at home deposit it into a contract of yours on its origin chain so say uh yeah if that you can stay on ethereum have avax the avax can stay on Avalanche atoms to stay on Cosmos Etc because as a derivative protocol what matters to you is simply the ability to liquidate and take control of that collateral once once it's been margin called and so you can do that with a system like hyperlink and so I'm very excited to see some derivative protocol coming up and building with hyperlink to create for the first time this concept of interchange margin what's the end game tonight really what comes down to these four things I think it's all about inter roll-up networking so being able to switch between not only between different individual roles but between different roll-up networks I think of those hubs that I talked about before each Hub existing as a sort of roll-up Network well we need to communicate between those as much as we do within each one of those and others reeling services today when people use internal hyperlines permissionless interoperability they are primarily running their own relays I'd like for that to remain the case indefinitely and certainly the entire building community of support of relayers always remaining permissionless this is part of our current Vision however being able to offer relay or services for those who do not want to relay their own transaction is quite important for that to be a seamless process is something that should be coming uh sometime in the near future additionally as hyper matures we believe we'll see a security module Marketplace we're already seeing new operators of Eye Centers come online um most interestingly right now we're seeing some zero knowledge proof operators beginning to build systems with hyperlink to create security modules that are secured by these by their zero knowledge logic Alexa hyperlink is a wonderful system to express and execute on interchange intents and so right now several things are being built to allow for that that's something that we are very excited about so that really was all I had to all the time I got and I'd love to tell you more about hyperlink if you want to learn more you can go through our docs at docs at hyperlane.xyz you should join our Discord it's just Discord GG slash hyperlink you should feel free to follow us on Twitter at hyperlane underscore XYZ and you can always reach out to me on telegram I feel nervous or my email at Johnny's so thank you everyone had a wonderful time speaking to you today and again don't hesitate to reach thank you foreign [Music] 