foreign [Music] okay so I can start yeah okay hi there um so I'm Shahar I'm from Star square and I'm working on the compiler team of Cairo One and I'm here I'm here to talk to you about the advances and new stuff on Cairo but I only have 15 minutes so I decided to focus on the developer experience and how smooth it is to use a carrot today with all the latest features and I'm going to do live coding session doing some kind of toy problem and showing you from scratch how how smooth and easy it can be to write in Cairo so the first thing we we need to do to write Cairo is a install scarb scarp is the project manager for Cairo it's similar for it's it's like car cargo is for us or npm is for node then scar biz for Cairo there is a this documentation will share later about how to install it's one liner so assume we have scorp installed so how do we start a new project in Cairo we do scarf in it and voila we have a new project what did we get here we get a scrub Tomo which is a configuration with dependencies and everything and a simple cargo file and get some dummy code which is Fibonacci we don't want Fibonacci by the way I'm planning to do a tic tac toe game so uh let's see how it will go first things first do you know that Cairo is a general language for a z Cape proof for making CK proof for your programs not just for starknet so to use darknet we need to follow a what scarves says about a active index card stock net which is adding this line and this dependencies this is the but the only thing we need online this part is all the package dependencies which you know from other project managers and all right so the first thing we want is to make a new contract we can use the contract snippet we have built in in the a extension and try it we give it the name let's say tic tac toe I think this is how it's spelled and as you see we need to annotate a model with this with this contract this is a belongs to the stock print plugin which adds all the things you need to make it a contract and we get this storage which is all the storage we have for our contract okay and next thing I want to make a game so I prepared and I say and package that you can use it's called Cairo lead and you can add packages not just from local path you can add it from a GitHub repositories and eventually we have from registry everything else and there are a lot of public packages already existing but I have my dummy one he's in this local path okay now that I got my package let's see what we have inside it let's try to use it let's do some completions and we can see we have our account lit here and we'll complete some more and we can see we have this eye game interface inside this is what we are interested in so we can import it and let's see what it has inside I do go to definition I I see what it has here and the I game is a an interface for simple game Heavy you need to say what turn is and you can apply move and and I would want to making this is battery all right okay everything's good uh yeah we want to implement this for our contract so let's see how we can do that we make an implementation and now we have its name it's called game implementation of let's do competitions again and why do we need to give it if we do a control click and put the mouse over we can see and we need to give it T State and T move the state is the contract state which we get by being a contract it's already generated by the contact thing and we need to also provide it with a move too make pretty soon and this is how we make an implementation now we get some diagnostics from the language server let's see first of all it says not all trait items are implemented because I do need to implement the churn and apply move and says it doesn't know what movies so let's start uh defining the move let's call it a position and got some Cop Out completion there and I can have an alias and type and complete and again I'm defining this move all right this error is done and now I'm I need to implement the rest of the things as you can see I have the things I wanted you to see is like I have completions I have Diagnostics I have a light highlighting I have cool stuff um okay so let's quickly Implement all of this thing this state becomes this and now I have this side type which is required here it exists inside my package so I'll import it as well let's see what I have here I have I have this side okay let's see what what else I have here ever okay not yet let's move it here all right move is move end result I need to give it the correct result I can do this by using as it's also a new feature as game result so import this result and I'll call it game result you can change names of things and here I'll make some implementation okay you can see we have a the Cairo is type safe so I'm getting this diagnostic to say and we expected you to return a result and we got nothing we got units so let's say quickly return some results and get this completion error and I need to have the error game error here so I'm implementing game error important gamer and let's get get completions I have these kinds of things okay let's say for now it's a bad move and put it in both okay and I get another what is this error it says very not dropped if you're familiar with linear types then Cairo has linear types inside what does it mean it means that those can just be a disposed of can be created unless you specifically say they can be and the way we say it in Cairo is using a drive this line adds an implementation for drop which means we can drop this value linear types have a lot of useful applications especially with enforcing invariants in a blockchain I don't have time to show examples for this right now but no it is possible okay so this should compile running scrub test and everything passes all these zero test passes but it compels how can I make a test we can make an inline test inside this module we have this snippet that makes a test all right let's call it test game and let's create a contract state for testing this is done by and it's complete Let's see we have contract state for testing it's cool this is also generated by the contract as well all right we also need to be mutable This Is How They Define renewable in Cairo and we can start calling stuff let's call churn and let's do unwrap which makes sure the the result we got is okay and not error as you can see this completion added and the trait we needed to call the the method let's save and let's see what happens when we test yeah we got an error why did we get an error it says on the unwrap unwrap failed because we turned an error and on okay so let's let's do some very simple thing let's return okay and we need to return the side let's return PSI X and now our test passes a okay let's see uh make some more interesting Logics and just returning a constant value and how do we make a storage variable in cargo so inside the storage truck I can add something like churn in this case I would want it to be let's say game result of site why did it do game result because I wanted to also represent the case that the game ended so either it's okay and we are in progress and we have it's someone's turn or the game ended and then and someone already won so I'll do something like this and here in turn instead of returning this value a read from my storage variable as you can see I just did self Dot and it completes me that I have the churn variable and it also completes that it has a read method if I want to see the signature I do control click and put my mouse on this method and I can see it's a signature in this case it doesn't get anything except itself so well just save it and this seems to work and let's run test and everything runs it's okay good [Music] um let's do something uh really simple let's say in apply move check that the move is inbounds you can do move dot X if move at X is greater than two a zero one and two are okay so three is bad and let's do some copper completions I'm getting an error otherwise I'm returning in okay and we need to add semicolon here and let's make sure this is what happens indeed so let's do some imply move I'm returning I'm giving a position of let's say x 10 y so make it invalid and unwrap and let's see our test it is fills if we give it something valid yeah and it passes okay uh so uh very nicely here as you can see it's a quick feedback on your programming and if you were to complete this tic-tac-toe we'd probably need something like a mapping let's say the mapping we have a snippet for that too uh here and let's make a board from position and make it to like options site to make sure something is filled all right well I don't have time to complete everything uh I just wanted to show you that the basic flow of programming a contract in Cairo that we have a very nice highlighting completions a quick testing easy to uh like it's one line I install instead of think of a project you can publish it and we have got definitions and control click and see stuff also we can look at the auto generated code for example this function was all generated we can control click and see entire generated code for our contract and we can see a standard Library things like in here for example uh okay so that was like a very quick guide on how to start writing Cairo on your own thank you do you have any questions yes blah blah blah okay nice presentation uh question is do developer XP change Cairo syntax already a few months because you trained two times until now and probably to end of this year will be two more times uh well we did a change the country syntax but the reason for that was because the first version was compatible to cover zero the odd version and now we have the more mature version of the contract syntax we want to have so this is not planned to change and we are supporting it we commit to support six months in advance that it will be compatible so we will also introduce other ways other editions they're components but the basic syntax won't be broken any other question no okay thank you [Applause] [Music] thank you 