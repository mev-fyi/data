i'm ceo and co-founder at dbridge and today we're going to talk about cross-chain interoperability and why it can be the next wave for defy and nfts like everyone is discussing that we like the future is multi-chain but in fact we are already living in a cross-chain world right with more than 50 blockchain publicly available and user users would like to have a capital efficient way to move liquidity across all these different chains protocols would like to have the way to move data or perform a cross chain calls between smart contracts and there is a clear need for solution for the cross chain interoperability and if we take a look into the kind of landscape of existing blockchain ecosystem there are many evm chains there are roll-ups and there are many ways to kind of interconnect ethereum and the roll-up through native roll-up bridges but the main constraint is that there is no way to build like the bridge that supports automatically incompatible blockchain ecosystems there is no solution that allows to move freely assets and data between let's say non-vm ecosystem such as solana and some roll-up or layer two solution like optimism and uh liquidity is another big challenge because right now we have around 100 billion dollars of liquidity fragmented across more than 50 blockchains and there is a clear need for cross-chain infrastructure to maximize the capital efficiency of various applications and the lack of unified standard for cross-chain intercommunication leads to the set of problems mainly fragmentation problems for example we have a fragmentation of technologies when many teams and people are working on solving the same problems or building the same solutions just in a different blockchain ecosystems so for example many teams are just like implementing some forks of uni swap or curve many teams like implementing the same lending protocols across various blockchains so instead of innovating we're just like fragmentating resources on building the same solutions so if we have like the true interoperability we we may we may build the composable application and compatibility is one of the most powerful concepts of defy and with so many examples actually of composable applications so for example ave and maker when maker dao can directly mint diet token into our to have a fixed interest rate on loans in diet token or uxd coin and mango like uxd the algorithmic stablecoin on solana ecosystem which opens delta neutral positions on perpetual markets to maintain its pack and have some additional revenue flow from the delta neutral position but the main problem is that we've seen all these great examples of compressibility only built within one specific blockchain ecosystem right so for example like convex and curve is a great example as well or like one ancient access but we have not seen any kind of money legos that are built on a cross chain scale yet and just imagine if we have an interoperability layer we can combine protocols and smart contracts across different chains so for example we can have an algorithmic stablecoin protocol in ethereum like frags that can interact with various perpetual markets either on solana or in our bedroom or like starkware and pick the best one and that kind of design will pro will help to maximize the efficiency of the solution because you always open position like protocol opens position in the perpetual market where the funding rate is the best or just imagine if like our protocol and ethereum could interact with mango markets on solana right and that would allow us to build way more capital efficient solutions and like interconnect protocols and smart contracts across various blockchain ecosystems and uh we like within dbridge team we are building solution the bridge infrastructure that's the secure interoperability layer for web3 so dbridge protocol consists of two layers there is a protocol layer which is represented by the smart contract deployed in every supported blockchain and there is an infrastructure layer so infrastructure layer is basically represented by validators that are elected by the bridge government that work for the british governance the point is that there is no way to build the bridge that will support data flows across many chains without the validation layer we may see different bridges that implement like full client or like light client but mainly all these bridges only support interconnection between like base layer layer one and layer two but what we are building in deep breach is the infrastructure that helps to interconnect all blockchain ecosystems because just imagine if we have like truly decentralized and secure infrastructure then theoretically all the blockchains are becoming layered two to each other right because like protocols can scale up to different chains smart contracts can intercommunicate with each other and that's kind of cross-chain future we believe in so yeah the design of the bridge protocol consists of two layers and any interaction or any cross-chain message which is transferred is initiated by calling like sand method of de-bridge protocol smart contract and whenever the transaction is confirmed the bridge validator signed the transaction sign unique identifier of transaction with their private key and store signature into ipfs so that anyone who has signatures from validators can execute this transaction the destination chain so i truly believe that there is no need to build like own blockchain for bridging or for interoperability because like the throughput of the blockchain will not be bigger than like throughput of all the support blockchains that's why in dbridge we have this kind of off chain validation because like anyone who has signature can execute transaction the destination and that allows also to have like unlimited throughput because since the signing of transaction happens off chain validators can sign any arbitrary amount per second like depending on the hardware but like way bigger than throughput of all supported blockchains and yeah and there is no multi-sigs by this design so we have a smart contract that just cross-validates signatures of quality and executes message or delivers message if at least two-thirds of signatures are valid and you may ask like why validators like why validators are secure why validators don't collude in this case uh validators don't call it because there is slashing mechanism delegate is taking and slashing when any arbitrary user or protocol can delegate liquidity for validator to participate in the protocol revenue sharing and if validators decide to validate some fake transaction or censorship some transaction they are getting slashed and that allows to have some kind of closed loop economy when validators actually bear financial responsibility for their service um so yeah our protocol is live we launched in the middle of february thus far we processed more than and delivered more than one hundred thousand cross-chain messages or cross-chain transactions from more than 55 000 unique users and the protocol is live across seven evom chains so you can actually leverage the bridge infrastructure to build any arbitrary cross-chain applications and primitives so the main problem is like what is really needed for true cross-chain interoperability because historically all the bridges that we saw were mainly focused on the cross chain swaps or cross-chain value transfers and the general model is like users lock asset in one block chain and then receive the wrapped representation of this asset in another and the problem of this type of bridges is that the bridging protocols have to run liquidity mining campaigns and lock a lot of tv within the protocol but whenever a bridging protocol has tvl it starts to compete with liquidity giants such as ave frogs or compound and that's not the competition that bridge is gonna win because you never know when there is a demand on liquidity you may have like a billion dollars of liquidity in the protocol and pay like 18 percent of apy on the amount of liquidity locked but the actual utilization of liquidity will be like two percent or so that's why i truly believe that like all the bridges that have this kind of tvl model will eventually have to pivot either toward the generic messaging protocol or will have to leverage messaging capabilities of like other uh protocols and uh yeah so it's not enough to kind of deliver liquidity across chain and the only way to do that efficiently is to pass liquidity as as a message because like whenever there is a cross-chain transfer there is a request to transfer liquidity from chain a and chain b and somebody should settle this order in chain b and like 95 percent of all existing bridging technologies they're using their own liquidity pools to to settle this liquidity and in the bridge we're taking a different approach we're like a big advocates of compassibility and we believe that like synergies and integrations with other protocols can help us to maximize the capital efficiency so instead of bringing our own tv we rather trying to integrate like with liquidity protocols such as our for example how introduced like portals in their v3 of the protocol in order to borrow liquidity from the credit line to settle these cross chain orders and at the same time we help like liquidity protocols to monetize their liquidity and share the rewards from like bridging fees with those protocols and that design is way more efficient because like we don't need to have any tv we just source liquidity from like partner partner protocols when it's really needed because liquidity for bridges liquidity is needed only during the very short time span when there is a transfer and there is no any kind of sense to lock liquidity during like all the other time and yeah so in addition to value transfers of course we we need to have the message transfer but the problem is like how do receiver knows who was the sender of the message because let's say when we use telegram we receive the message from someone we we know like whether the sender is trusted or not the same design should be implemented for like interoperability layer when there is some messages been passed between protocols let's say in ethereum and so on the program on solana should know whether the address and chain id of the sender is trusted or not and yeah that's what like every interoperability protocol should have and another very important aspect is the execution of transaction because any question interaction consists of two transactions right so there is the one the transaction that is initiated in the original blockchain and then there is a transaction that is executed on the destination chain and and for in order to execute transaction you need to pay gas or you need to make your users users of your dapps to switch wallets switch networks and like claim transaction manually that's why there should be someone who will trigger the transaction the destination chain and i believe in the crypto economical design the interoperability layer so for example when user or like sender can specify the small fee we call it execution fee to incentivize anyone to complete transaction on the destination chain and for example keepers or both can complete transaction and if this execution fee exceeds the gas cost then all the bots or keepers get the incentive right and they compete for executing for execution of the transaction so my bet that like in the very near future we'll see that most of the transactions on chain will be executed by bots because for users it does really matter like what blockchain you interact with when we use web 2 solutions or websites we never think like whether there is there is an amazon web services or like hesner as a hosting and we don't need to switch between those like all the traffic is rooted automatically and that's the level of user experience that we are trying to achieve in web3 when users don't need to think about wallets think about networks they just initiate transaction in any blockchain where they haven't wallet or asset and then transaction automatically executed on other chains by keepers or bot and user may not even like sign transaction but just sign some like uh signature some message right and then like smart contract keepers will execute that message through some smart contract so yeah that's quite interesting so i think that in near future all users will just interact with dapps without thinking about blockchains and wallets so bridges itself will be some kind of tcpap layer so that users will not even need to know about their existence and yeah so that's exactly what we are building actually especially in regards to like the security and the user experience so any developer any project can pass arbitrary messages and value simultaneously across various blockchains and if you build cross-chain application or cross-chain interaction the only thing you need to do is to create the sending smart contract and the chain a let's say ethereum and the receiving smart contract that will be on chain b for example solana right and your smart contract interacts with the smart contract like the bridge of the british protocol or some other interoperability layer then the infrastructure confirms or validates the transaction and it gets automatically executed on the destination chain and that allows to have like to build money legos on a cross-chain scale when you can inter interconnect any arbitrary smart contract on any arbitrary chains and let's dive a bit deeper in the concept of the transaction bundling that's a bit technical but very important because like one of the most important aspects is being able to execute arbitrary complex cross-chain interaction in a single transaction and the point is that if you transfer message there is a way to encode this set of transaction calls in this message so for example you don't want to only do a cross chain swap but you want to do a swap of some method and then you want to provide the resulting liquidity into the protocol such as away or maybe you want to transfer liquidity across chain and then to open position on perpetual markets in the same transaction in this case you may you'll most likely use the transaction bundling feature and the transaction bundling became possible through integrating like the bridge smart contract with the gnosis multisound library because if you've used the gnosis safe app there is the function which is called transaction builder it's based on the multisend library which was the albignor system and which is quite unique where you can pack set of transaction calls in a single transaction so you don't need to make like signers of the multiseek to sign every transaction calls separately and yeah this is actually powerful library and we've integrated that so the idea that the message which has been transferred across chains can encode this set of transaction calls so it can be as i mentioned like swap plus provision of liquidity into some protocol or swap plus interaction with another smart contract on another chain so any arbitrary any arbitrary interaction and yeah as soon as transaction is confirmed it's it's executed on the chain b so d bridge gate like claimers or keepers or user itself just claims the transaction and then through the call proxy call proxy smart contract sequentially executes all the transaction calls which are encoded into the message which has been sent and uh the apps so um probably the next bull cycle will be will be actually driven by the cross chain application and we call the apps the application that are built on top of the bridge generic messenging protocol so one of the most obvious application is the cross chain swap and we have the solution which is called d-swap which allows to perform swaps between arbitrary liquid assets so if the asset is liquid if there is a liquidity pull that then it can be swapped and that became possible through our integration with one inch and with liquidity aggregators so we source liquidity and routing algorithms from one inch and we basically interconnect one inch rotors in different chains by passing messaging messages between those so and that allows to swap from any arbitrary liquid token to any arbitrary liquid token and cross chain the asset is rotated through one of the intermediary the question swap is rotated through one of the intermediary assets that can be used dc or that can be like some of the assets let's say stable coin borrowed from ave or the asset which is like settled by the market maker who fulfilled the cross chain value transfer so yeah this swap is live that's the application that can be used not only by users but also by protocol so basically protocols can manage manage their treasury or like swap liquidity across different chains another interesting application cross-chain application would be multi-chain governance because we have many protocols deployed on ethereum right but like the one of the problem is the gas cost not too many users are active or are participating in the governance voting due to the high transaction fees and instead of launching the governance on ethereum you can simultaneously launch governance voting on different chains let's say avalanche an arbitrary or maybe even non-vm compatible chains and once the voting period is over the result is sent as a message to ethereum and then settled by the smart contract on ethereum and applied to the entire protocol and yeah that would be interesting to see how the multi-chain governance will evolve because like the cheaper the governance voting will be the more the better participation from the token holders will see another application would be the cross-chain landing when let's say you provided the asset or liquidity to other protocol on ethereum and at the same transaction you can draw a credit or take a loan from away on polygon or you can just like directly transfer your position let's say ten thousand dollars from ethereum to our protocol on avalanche and uh crosston yale farming yeah that's another use case so we all know in europe finance when you supply liquidity in the form of let's say usdc to urine and then urine automatically balances liquidity across different strategies so we can have like cross-chain yield farming when you supply usdc and then the smart contract automatically balances this liquidity across strategies in different chains and like balances each strategy according to the best api uh nfts of course like gaming gamify and nft industry is evolving fast and i think that nft might be maybe one of the main upboarding funnel for like next billion users into d5 and with so many great examples like stop on where even my parents started to work to work with nft sneakers which was quite surprising so um yeah and and nfc is the interesting the interesting industry right and uh there is a clear need to be able to breach nfts across different chains for example to make them interoperable between meta verses when let's say you can bridge your crypto bank from ethereum blockchain to solana matars like star atlas and you have your crypto punk and then avatar or you can just like sell some of the game assets directly from the game itself and it will be sold on opence in a different chains or maybe at my magic garden in solana and question paradigm it's the interesting concept because like normally all the protocols and projects were trying to tap into user base of other blockchain ecosystems by just deploying or forking themselves deploying the smart contract and that worked really well for ave when ava like it is a good example it started from one chain ethereum and now our exists across seven different blockchains but if you're building your own protocol now in 95 of the cases you don't want to be deployed in all the chains that works for oven that works for projects and protocol that represent like foundational layer of defy such as dax or like landing protocol or rotor because we we got to have those in every blockchain because those are protocols where we need to have synchronous composibility but in 95 percent of all other cases you don't need to have synchronous compatibility and i really believe that projects and protocols that are deploying should follow the application-centric approach when you just pick one blockchain which suits your needs in the best way and then through interoperability layer you become accessible to all the protocols and users from other blockchains so yeah you can pick a blockchain depend depending on your specific needs but mainly that can be like transaction fees or security or throughput or maybe you need to pick blockchain where you would like to have a synchronous compatibility with some specific protocol so yeah this is basically the scheme of how you can be of how how any protocol can go cross chain you just choose one blockchain and this blockchain you have a synchronous compatibility with other protocols as well as with users like eoa addresses and then through interoperability layer your protocol becomes accessible to all the protocols and users across all the other chains that are supported by interoperability layer and you don't need to deploy there you don't need to fragment your own liquidity because your liquidity and state of your smart contract is concentrated and located in the chain where like your smart contract is deployed so yeah there are many ways there are many reasons why you should know or explore the cross-chain applications to first of all to maximize capital efficiency secondly to enable global accessibility for protocols and for dapps so that users can interact with those from many chains and yeah this is example that we had with like integrating ave when you can do a cross chain swap from one chain to another let's say bnb and you can swap directly from the from any of your asset to the asset which is supported by other protocol under the same transaction supply resulting liquidity into our way so this is like how the routing looks like bnb swapped into usdc on avalanche and staked or supplied into away in the same transaction um and yeah this is implemented through transaction bundling and the very last concept that i would like to touch really quickly the way the projects can transfer their asset because sometimes you want to have like additional utility for your token and instead of relying on one specific breach and varying risks of the bridge you can deploy your own token like canonical smart contract address in another chain and then enable like leverage generic messaging protocols by allocating specific limits on the meeting rights of every bridge and that allows to be like bridge agnostic and diversify risk risks of the bridges so yeah that's about it and feel free to reach out to me if you have any ideas or any cross-chain needs thank you for your attention okay yeah that's a great question actually and there is a fallback mechanism so if the transaction failed on the destination chain all the liquidity will be transferred to the fallback address and if you're building some cross chain app you got to also design the fallback mechanism so for example you can sp actually you can fine tune the execution flow and in deep bridge you can specify the set of flags for example you can set a flag that if transaction is reverted you can send it again or you can specify the flag that like if transaction is reverted all the funds are sent to the fallback address which is like part of the message which has been transferred thanks thank you 