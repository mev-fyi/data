foreign okay well hello everyone i'm faku from your finance and this talk it's uh based on a true story what i do at year on finance is i do pm stuff i facilitate stuff for the strategies on the bolts but i'm not a coder not at all but for this talk i decided to like show the world that a strategy can be written by anyone even by me so what's a strategist a strategist in short and this this sounds like a like a joke it's a big brand who can write strategies but there are some nuances to this that it doesn't say you have to be a hardcore developer or hardcore viper developer or whatever or a financial genius no you just have to know how things work you know how what's the relationship with between stuff and that's the core thing of being a strategist why would you do it because the team is amazing the deck is fantastic and there are some rewards so john paid five million dollars during the 2021 up to the 9th of may so on top of having an amazing team and great tech the rewards are good so bear with me with uh some theory about what's the votes and what the strategies and then we get to the process of running a strategy that's uh the most the most interesting part of this talk so the strike the votes are the first part that's the seems to be the simplest part it's like a con it's a token container like a big safe box where you deposit all the tokens and that's it yeah it does some accounting and some other stuff but basically holds the tokens the strategies they do uh all the heavy lifting all the interesting stuff investing they're investing uh like collecting the the rewards and the the best part is that you always earn in the same token if you are a fan of die you will deposit die and earn more die and the strategy is going to take care of that this these two definitions are the definitions that andre gave at the beginning of times but uh i like to explain a little bit to everything so let's get a little bit deeper into what's about how it's done the volts are written in viper why they're written in by birds sounds like a super weird language no that's because it has very much support they also give you an erc20 with you when you deposit it's like a receipt it's like something for you to redeem your deposit the good thing about being an erc20 is that you can transfer you can swap you can just ask collateral and you can do everything you do with any other token like eath or die or whatever uh it keeps track of your shares the shares is it's actually the those tokens those erc20s and the price per share that is the money that you you've been earning uh this is an important thing it's immutable it has only like tiny parts that you can change and we try to keep the address injection to the minimum and that's really important to assure that the vault is going to do what it's uh what it says that the the contract is not going to change too much over time uh this is a v2 feature it can run multiple strategies at the same time it's like like an octopus running multiple investment at the same time this average is the risk and the keepers are decentralized bots who helps us keep everything running uh and everything okay and it's again decentralized what about strategies yeah they have written solidity it's like it's a different language but it has a reason also because you can inherit that is to say that you have a base contract you inherit most of functionality that is the interaction between the strategies on the vault and you have to code only the custom logic that you're going to use and that's amazing and anyways solidity is much more popular than viper so that's better to have more people developing strategies they manage the accounting of the strategy like how many tokens they have how many tokens are invested how many rewards do they have and everything they invest and invest and recycle this is what i said earlier they do all the heavy lifting the harvest return and the slippage because when you have a lot of funds and you are going to swap them for another token you are probably going to hit slippage so you we have to do it little by little and in the debt based strategies like america thou cdp a collateralized position they keep the collateral healthy and that's super important because you don't have to you care about it we take care about it this is this is a an example because if not it seems too abstract like how the width vault uh is distributed has the capital distributed among all the strategies you will see that the strategies have different allocations we call them debt allocation why because how it works is the strategies take loans they borrow money from the vault and that's that's the concept you are going to see in the name of the functions of everything and you can have strategies that are ready to accept capital they have zero data location so we're always waiting for the next opportunity so you will see that we have these strategies with sarah zero allocation waiting for the right opportunity okay this is like super technical but it's uh really important because i feel like to understand the interaction is the most important part if not the only part important to understand about the whole schema so you have all the components the keeper the vault the strategy a different protocol no matter what and uh decentralized exchange to exchange the tokens for the one token so the keepers are bots that are always monitoring the harvest trigger what's what's the harvest trigger it's uh it's a boolean it's something that's true or false when it's uh when it's really the best time to collect the rewards because we have to pay gas so if the hot gas is too high or their wars are too low we're not going to harvest well that's true the keeper called the harvest function the harvest is like just like farming they're going to collect the rewards and recycle them in the strategy that's the important thing the strategy is going to claim the rewards from the d5 protocol when it gets the rewards in no matter what token it's going to swap them for the one token the token you used to deposit like if or die or whatever and it's going to get some one token then the strategy has to report to the vault because the vault is taking care of the accounting so it's it does a report and default adjust the debt available because if we have too much money in a strategy that's not good because what we're trying to do is to average the risk and to not crush any protocol because the vote has all the strategy has a lot of money that just positioned that the technical function there the only thing it does is adjusting really the the amount of money invested in that protocol and then it was on success and that's it i know it's it says when you see it it's like super technical but when you take a closer look it's like super intuitive how it works okay that's his theory uh now let's get to the practice part like what's our process to write a strategy and how simple it is okay this is what you need first the software you gotta download this bunch of software git because we use github for everything we want to keep things transparent if brownie and ganache is the framework we use sorry guys if you're using hard hats uh you're going to learn some pineapple some python it's not that hard i did it uh the brownie strategy makes that that's the cool part because we coded and we it's not me uh all the interactions between the strategy and the vault yeah so you only have to implement some functions you don't have to implement all this stuff we saw in the graphic before and vs code i use this code you can use beam nano notepad whatever you want and those are the skills uh this is what i had when i started writing a strategy i submitted the talk i didn't know if if i was going to make it and i started writing a strategy i had some programming experience php uh like a contact form uh html and css that's where i started with ah i encrypted zombies i did update until level four and i tried to do the f or not for real but it was like level one or two so i was kind of ashamed to put it uh and the the last two things it's understanding how things interact that that's why i i make like so much emphasis and how balls and strategies interact that's the important part and a ton of willpower i just sat down uh and try to code you're going to have like a lot of misses a lot a lot of tests failing but in the end you're going to make it this is the process uh in yearn we keep things safe so we have this process we're going to go over it to see what's each part and you are going to see that coding is the list of your worries uh we don't we don't want people uh wasted time coding so the deal deletions is a little investigation about how the protocol works how the security of the protocol is if there are withdrawal fees deposit fees how's the multi say does it have two signers three signers five signers etc code itself audits are really hard so we have the strategies uh review the review among themselves as peers then you can publish as experimental in app tags called dev review like core dev review it's uh one of the security experts are going to review it and in parallel the safe farming committee it's a committee of uh 13 people that are going to evaluate the security of the of the strat to go to production so let's go due diligence okay a lot of stacks uh important part rockability of the protocol you gotta evaluate how uh is it easy to run the users it's not easy on the the good part about about this if you find a protocol that has i don't know like a multi c one of two you can ask the the devs hey guys do you mind changing this because we want to do a strategy in this and that and whatever and most of the times you will find that they are really receptive and you can talk with them and they are willing to change it describing risk that's the useful thing taking like taking a look at uh audits it's uh audits it's like keep finding a fixes if they acknowledge the problems and everything and the last part it's super important because we don't have a like a magic orb to know the future or what you want to do so if you want to just publish to attacks apetax is the experimental web ui you have to say yes and you are not going to deploy to production but if you are going to deploy to production we have to have an emergency plan because when when things get bad it's not easy to think straight so we need to have an emergency plan to withdraw the funds and save the users okay a lot of stacks again we don't care it's cloned repo the one i told you this is like step by step code the strategy what does it mean you have to just go three functions at least prepare return that is for accounting that's super important even if it's accounting it sounds like oh accountant doesn't care because it's no it's the funds it's how the the the users funds are going to be accounted inside the the strategy the adjust position that we talked about earlier that invest the funds into a protocol if you're going to stake for example as my strategy it was staking in governance of mp of 88 mph and collected dive rewards it's invest those funds and liquid deposition that is going to remo remove the funds from the underlying protocol because if a user withdraw withdraws uh we need to give them their funds and then the third part it's right test this is why i say it it takes a lot of like willpower and sitting down and doing the stuff because maybe you've done all this right like one or two but you need to write tests like if i deposit one million dollars what does it happen if i would draw the whole amount if i would draw the whole amount minus one way what does it happen does it work well if someone air drops uh like a donation does it work all that stuff gotta be tested and number four is you gotta test test and test and try to catch all the edge cases okay peer review you got your strat written and you want to publish it and test it uh in the experimental ui what i said the experimental ui what you see on my left yeah that the that's an experimental link vault uh what we do is first we need two peers to review the strat that's super important because andra says we test improv but as you've seen we are yeah testing in prague but we review the strats and we take care of that being a safe thing to do so two peers review it you gotta pop you you can publish them and uh you can parse the strat with a vault in a in the experimental ui and that's what you will see because you have to use your name it it gotta be fun because this is all serious and stuff but it gotta be a fun name like the front frog prince and two emojis and then promoted because these are real funds and we need users to test the edge cases we couldn't we couldn't think about so we're testing with with little funds with not so much but we need to test it because when you code a strategy you are going to do stuff that the strategy is usually prepared to do but users are going to do always weird stuff like send funds to a strategy you send fans to the board or do weird stuff so we need to test it okay you spent some time uh testing in the experimental ui it's time for prime time ah two things it's a new protocol let's say it's curve okay we already have curve volts we already evaluated the security of the whole protocol so we are fine to go you don't do the safe farming committee because it's already approved in other centralized way but if it's a new protocol there are 13 people that are going to evaluate your due diligence investigation and they're going to say hey we think it's ready or we think it's not ready to go to production and then a core team a core team review means we have two security specialists that uh are the rip the i don't want to say replacement but for the lack of a better word it's like a replacement for an audit it's uh they will take a look at this rot they will give you comments that's for sure about security optimizations and what you can do better security wise this guy is not going to know about the protocol you are uh you're farming or anything they are going to take care of the security side of the thing as usual everything to github we want to keep traceability and transparency last step it's going to the multisee uh two two options here you gotta ask you gotta ask a delegate you gotta ask one of the guys actually one of the team members to write a transaction to the multisig there yearn main multisig if it's a new token a new protocol you need to create a new vault for the website to show it that's called endorsement that's the name of the function you can call it whatever you want but if not if it's just a strategy believe it or not it's more difficult because if you're going to add a strategy to the dive vault how many or how much capital do you allocate to that gene strategy so that's something that the strategist and the safe farming committee is going to decide why because it's a way to again average the risk if it's a new strat even if it's the safest strategy in the world you want to deploy a little capital because it's been testing experimental but we still need to give it some time and when you think about it we have balls with 500 million dollars and you say hey let's allocate one percent okay that that's a lot of money so you we gotta think twice about it once the transaction is done the strategy is attached to the vault and it's going to be shown in the chart that i showed you earlier that's it your strategy is a production but no it's not it's not the end of it because because d5 moves really really fast and we don't want like people coming and going like hey i did a strategy we deployed it and that's it if you coded the strategy you are going to be the expert in that protocol and if something goes wrong or the api goes low you gotta be there so we need really strategies that are going to do this like monitor monitor monitor monitor harvest it's the function that collects the rewards the debt ratio the amount of capital deploy so we don't cross crash yields uh the apr because maybe if we deploy less capital and more capital to other strategies we can get a better yield for the users in the end this is for the users so we gotta take care of the apr and the state of the underlying protocol if we see a something going wrong or uh pulling balance or something we have to take care even we can what we can do is like move the strategy of play move the place of the strategy in the withdrawal queue or uh reduce the that ratio or whatever and that's it but i realized when i finished the stock and that's what that qr code is about i realized that i managed to build this strat because uh i had the support of the strategy of yearn so a few months ago i started a group that is called the wifey boarding school that's uh there you will find senior strategists it's not all all newbies as i am so if you want to write a strat you can join and we'll help you guys thank you very much so you've got questions and whatever i'm super open not wrong yeah what tools you use like to optimize the volts distributions or allocations across across the strategies we do simulations like apr and uh harvest simulations on main network we use ganache and we use standardly uh to simulate what what will be the outcome of for example changing let's go back a little bit let's go to this graph i think changing the the maker if delegate from 34.7 to 50 what does it happen when we change to that amount of uh that allocation and we harvest the apr is going to be more is it going to be less uh and it's based on simulations it's this are you doing this like daily or no no i don't know multiple times a day but it's not like a random simulation we have a lot of people that really understand how the market works and how the supply like supply to a market and utilization of that market if you're lending so they they really know more or less where to go and find these opportunities and change the debt ratios how many strategies uh no they can they can have up to 20. that's the limitation but the most we have i think it's eight right now that that's changing like all the time so yeah it's seven or eight and running at the same time so like for example here we have like what seven you know six strategies but like four only running right yeah yeah that's for all i guess my my question is how what's the percentage of uh strategies being used like for example if a vault has like 10 strategies do you like do the vault usually use only three or eight no no no we have eight working strategies in the divot for example or usdc like i said it's changing all the time but yeah we have seven eight strategies working like right now so most of them are being used yeah yeah yeah yeah that's that's the idea the only time we deploy strat we attach sorry strategies with zero um with zero debt ratio for example that's the case straighta strategy maker if well the eighth delegate those have the same name but the one with zero debt ratio it's if a the cdp from maker if a that has like 3.5 stability fee and this one is if c that has i think it's half a point or one percent maybe so this one is better right now that's the idea hey question uh as you mentioned this process is very involved and the diligence i'm guessing takes a lot of time as well how much time does it take on average give or take for a strategy to be developed uh it really depends if you're wearing i wrote a strategy that takes 88 takes mph and collects dye that are the rewards that mph give you that's a really simple strategy it took me uh three weeks and it's still in review but it took me it took me three weeks because i'm i'm super newbie but uh for strategists it would take much more much less time now if you're moving to something like snx the the investigation part of the protocol and how to manage debt ratios and how to manage the the actual economic security of the strategy maybe will take you a month and a half yeah depends on the complexity of the strategy uh no but the the guy in purple had sorry do you ever use formal verification for the strategies sorry i didn't understand when you're testing because you said there could be so many edge cases do they ever have to eventually go through some kind of formal verification where you do like we're not using formal verification right now we're just using unit tests and we we have a bunch of default tests in the repo that's what i love about the brownie brown mix and we we run the those tests and we encourage people to write more tests yeah we're not doing formal verification right now no no you have the mic there yeah so would there ever be something that would hold you back from like developing a strategy strategy with a protocol let's say it had a lot of uh requirements like let's say generating zero knowledge proofs you know uh like say if it didn't have support in certain clients i know most of it's using contracts i'm just trying to grasp about you know there is yield strategies out there that require a bit more tedious processes to participate in and i'm just kind of wondering is there anything that would inhibit you from uh farming a certain strategy because of let's say depreciated sdk sdks or clients or let's say a lot of overhead instead of just like simple deposit and replay reward uh you're asking if the amount of work will prohibit yeah it might be obtained no overhead off chain yeah like so yeah yeah no we yeah that probably won't uh would be difficult to implement because in sake of transparency we're trying to keep everything on chain because it's verifiable but yeah i know but uh anyway uh if you check the uh that's a good point because i want to say something about it here it says lossless in a lossless way the strategy is right there that might not be the case if you can if you if you come tomorrow and say hey faku we have i have this strategy is maybe it can lose money okay let's find a way let's find a way to hatch the strategy let's find a way to do this experimental so if it has off chain calculations let's check the case it's that way it's on a case-by-case basis it's okay let's check it we're like we're super open about it so yeah bring it on you mentioned this due diligence and this whole process uh i guess that there is some discussion happening in this process is it also public so can i like look into how other due diligences went uh the process the the discussion is not public because what we're trying to do is to decentralize to also centralize the liability so the strategies is not the only person responsible for the safety of the strategy we as a team are responsible so the safe the the safe farming committee is not a public group it's it's been part of a farm post in governance in german governance but the the name of the people is not public because of that we're trying to offload the the liability from one one person only because the strategy in the end is managing a lot of funds maybe for some people it seems that the guy who coded it is responsible but that's not the case we are responsible as a team so that's why it's not public but yeah it's a discussion and let's say you wrote a strategy and the say farming company say hey man it's a no-go because of this the for example the multi-c has uh uh one out of three or two of those three signers and you come and say no well you can explain your case it's this is uh like like uh we're open when we want to implement strategies no but those are uh and i don't know if this will pass but super public figures that they have their reputation at stake and i don't know maybe maybe it can pass so yeah is there any communication between or any plan of communication between polls let's show for example that right now the rewards are mainly for usdc and you have both of that is full but you don't know how to deploy this guy so there are some strategies like crossbows that are like changing the eye for usbc not that kind like stable for sable but this is a case of cross vault the strategy maker if i delegate actually deposit it with raw dye and deposit into the die vault that happens a lot and there we have another example but that's the ste curve single side everything single side deposit it's going to deposit into a curve volt so yeah we do that a lot a lot because it's better because we reuse code in the end we have the eye and we have a dye vault so we say okay let's deposit there so it's dog food also so yeah yeah that's a good point that's it thanks a lot thanks a lot guys 