cool awesome welcome everybody we'll get started now right on time um i'm here to talk to you today about radical um which is a project that i work for we're going to be talking about building decentralized code collaboration on ethereum so let's get started my name is abby um i kind of lead all things community at the radical project it is radical project it is a free and open source project so we have a bunch of different contributing teams i lead the community team which touches uh all parts of the stack if you will and i also uh talk about radical the most um so today we're gonna be doing a brief overview of uh like why radical last year's talk at ecc was like really diving into like the problem that radical is solving so this will be like a really nice natural continuation um i should have given everybody homework before coming so we'll talk about why radical then we'll talk about what is radical and then really the meat of what i'd like to chat about today is what radicals doing on ethereum um with our newly launched ethereum integration um so that should be really fun i'll talk i think i have 40 minutes which is a really long time so i'll just talk for 40 minutes and then if we have extra time i'll just demo some stuff and kind of show you guys some stuff live uh so yeah so um to kind of frame the conversation to ecc and while we're here so right now i'm in the web 3 track um and i think all of us can kind of agree i mean ethereum is a lot of things but i think a lot of people who are in it for the tech like agree that ethereum is the platform for the decentralized web right and it's a huge part of this thing this ephemeral thing that we call web3 i think you can call it like a religion you can call it like a lifestyle but i think that web3 really does represent this transition from an internet controlled by centralized platforms to an internet powered by decentralized protocols right so it's taking this like web 2 version where corporations and gatekeepers are in control of how what you read and what you write and it's returning control back to the user and saying you can read and write to the web but you can do that in a verifiable and secure way and so that's kind of what i think you know the web3 vision is and how ethereum's taking part in that so if we look at the state of web 3 um there's been a ton of progress towards this vision of course this vision like started before ethereum as well like i think people have been kind of this is more of a general trend that people have been moving towards in the internet um but specifically in the crypto space like we've been building so much in web 3. we have infrastructure developer tooling even financial primitives are like very strongly contributing like define everything contributing to the vision of web3 and all these user interfaces that are making it easier than ever you know to kind of build uh use and experience the decentralized web the other thing that i think is really cool about the web3 space is kind of its inherent qualities right like the web 3 movement is one that is entirely online right completely open source and values decentralization and three this is like the trifecta right and i think that this is a really cool part about this space um is that not only are we building an online open source decentralized web but we're doing it completely online we're doing it in a decentralized way and we're doing it completely open source so it's a it's a movement that embodies its values as well as kind of its values of what it wants to build um you could call that principal development um but us at radical think that there's kind of this elephant in the room right which is as we're building towards this decentralized web our hosting our code sharing our hosting our collaboration and the distribution of the code that makes up web3 is actually very centralized inherently centralized i think that this is really funny um you have to sign in to github you know to like access your web3 code and so this is um you know i think a lot of people can ask you know maybe you're wondering like what is the problem with centralized code collaboration we use github every day we use github at radical github is an example of centralized forge um and it works really well and i think a lot of people um you know as we try to define and talk about like why radical ask okay well why why not github like why fix something that isn't broken and so to answer that question i'd recommend to go watch my last ecc talk from i guess last year whatever two years ago time is not real anymore where i literally spend 40 minutes kind of like talking through this and i think that the problem is actually systemic and has so much more color and it's so much more of like an ideological argument but i'll give the tldr here um so i think that the tldr of like why centralized code collaboration is a problem is because at the end of the day like github is another walled garden right github is a hosting service for um hosting git repositories that's built on top of git right so it actually is a walled garden built on open soil git is it opens free and open source distributed version control system that was designed to be completely decentralized designed to be completely free and open source and github actually built a proprietary platform on top of that open protocol similar to all the other walled gardens that we're trying to break down and build alternative alternatives to in the web3 ecosystem so at the end of the day github is this right github is a walled garden and so it does experience the issues um that come with being a centralized censorable um and and um corporate owned platform um and so i think that all of us being in the web 3 space we can kind of agree that ideologically that's something that we want to move away from right like that's a future that we don't really want to be a part of we don't want to support we don't want to subscribe to and we want to build alternatives too so ideologically it like makes sense that we start seeking towards and building towards decentralized alternatives to centralized collaboration however the argument is not only only ideological right like there are very real problems with code collaboration that right now are kind of just like bubbling under the surface but the more and more software like eats the world the more and more we build technology that is um challenging traditional institutions who might not be happy with what we're building the more these problems will kind of come to the surface and become critical points of failure for not just you know the software but like the movement the web 3 movement as a whole so these problems um i kind of like categorize them in three problems like the first is platform risk so these corporate owned platforms are obviously very vulnerable to censorship right um and capitalist ends uh so i think everybody is probably aware of like recent things that have happened over the last i guess like a year almost of github censoring um actually i can i have it in the next slide so maybe i'll just reference it in here microsoft disabling uh free and open source repository for youtube dl which is like a very widely used free and open source tool after being legally asked to take it down by the riaa which is the recording industry association of america what do they have to say about code do you know what i mean and this was a very interesting example of how a legal institution was able to attack source code and and do that under the means of github being a proprietary corporate platform that has certain terms of services attached to it another one is github obviously blocking developers in iran syria and crimea same with gitlab actually due to u.s sanctions you know these are u.s companies that are able to like any other platform restrict who uses and who is able to access the data on their platforms so that's the platform risk right um and the capitalist ends is obvious i think that there's this really good piece from chris dixon at a16 about the argument for decentralization which is that ultimately all um centralized platforms will leave their users vulnerable to extraction just because of the way that they're like systemically designed and so that's another really cool piece moving on though there's also inherent security risk with hosting your code and not just your code but your collaboration on a central platform these central platforms are single points of failure and provide many different attack vectors for malicious actors and i think that we've seen different security breaches leaks and other people manipulating everything that is kind of like a web interface um to insert malicious code into repositories obviously this is um more important for people who are building like very security conscious software and who need to be thinking about this but this is another point and then vendor lock-in which i think is the one that really convinced me um which is that like all non-git artifacts so git is your source code it's your commits it's your version controlled history all non-git artifacts that we use to collaborate so like the actual everybody's like okay well git is decentralized so it's whatever that means that you have the source code i think all of us know i'm sure i'm surrounded by a bunch of developers right now that like collab code collaboration goes beyond the code right and it's actually more about the collaboration it's about the issues it's about the discussions about it's about the pr's the reviews um even the identity the github profile the contribution graph like there is so much more that goes into collaboration that is represented by social coding right and so it's really these artifacts and these workflows that are built around the repository that are sometimes arguably more important than the source code itself right and so all of these non-git artifacts are entirely hosted by place your centralized forge i use github too much in this presentation but so this social layer that's built on top of these repositories which is taking code as you know kind of just source code and actually turning it into value so the thing that's turning code from a liability into an asset is entirely locked into these platforms and so this is kind of an issue because if you wanted to move your collaboration somewhere else you actually couldn't it would be really hard i mean it's not within the platform's interest to allow you to do that so that's kind of like the framing if i haven't convinced you like go watch my ecc talk like i have like a way better story around it um but obviously this is super important these three points are all things that us as people building towards this like web 3 vision like we can't have this you know what i mean this is completely antithetical to the values that of the future that we're um building and presenting so i think it's a pretty important problem statement um so i think that this kind of really really wraps up into the core belief of our team um and kind of the beliefs that we're presenting which is that our dependence our dependence has people building towards web 3 in the ethereum community our dependence on centrally hosted platforms and corporations for the distribution of critical open source infrastructure is inherently unsustainable and so not only does a web 3 movement need resilient infrastructure but the free and open source moves uh movement needs you know resilient infrastructure there needs to be a shift towards um creating more resilient sovereign means of collaboration that aren't controlled by gatekeepers or um third parties so that's where radical comes in um so radical uh tis the root it's kind of this like little slogan that we have um so radical is a peer-to-peer network for code collaboration and so quickly before we get into what is radical radical r-a-d-i-c-l-e is actually a botanical term it's actually the first sprout from a seed so it's like the first part of the plant that like pops out of the seed and i think that that's very fitting for what radical represents is that we want radical to be the root of all collaboration we want it to be the first seed that springs from the seed that allows people to bloom and blossom i think that that's just a cute little tidbit um and so i think that this also plays into kind of what uh radical is all about right so we're all about no more walled gardens radical is built entirely on open protocols so it starts with our peer-to-peer network which is powered by a gossip protocol called radical links so radical link is actually built on top of git and it gives you a way to share um and host uh your repositories without relying on a third party so what it does is it actually builds peer-to-peer network i mean peer-to-peer discovery into on top of git um so again you don't have to rely you don't have to push to a centralized server that then shares your um you know gives everybody an access point for your code you can do that with each other you can do that peer-to-peer um and so i could uh dive into radical link if we have more time as well so radical link um at the baseline gives us this peer-to-peer network for us to share git repositories with each other without relying on a server so on top of this um we have our decentralized github so everybody's like oh what is radical i say the tl dr is it's decentralized github but at the end of the day github's just interface right like github is just how you're building the collaboration experience around the repositories and so when your repositories are hosted on an open source peer-to-peer network you can build whatever github you want you can build whatever interface whatever client you want on top of that network to give people the ability to interact and and publish data read their data and then collaborate on their data on that network so we built radical upstream which is a disktep client that allows you to create identities push code host code collaborate on code um entirely from your machine which is really cool and we actually just launched a web client one of our contributors alexei one of the founders of radical hacked on app.radical.network which is the first web version of radical both of these give you an entirely you know like give you your social collaboration experience and we're building out kind of like all these different features on top of that but again i'll say why this is so cool is that all of these clients are open source and forkable you can build your own you can use ours you can contribute and i think that that's also the power with radicals again it's open protocols that's building these experiences not one interface or one platform so then on top of this which is like really fun and obviously what we'll be talking about today is ethereum so we have an opt-in ethereum integration which is basically like a set of open source generalized smart contracts that we use to design different collaboration experiences on top of all of this awesome code collab so i think it's important to note and i realize that some people get confused by this um is that like we're not like logging code on chain like you're not like collaborating on chain right like everything's happening on this peer-to-peer network and the power of ethereum is that we're able to link um our interactions on this peer-to-peer network in different ways and anchor it on ethereum to kind of create this global discoverability this global layer on top of the peer-to-peer network which is what comes so easily to centralized platforms because they own all parts of the flow so we'll get into that but so our ethereum integration is opt-in you don't have to use ethereum to collaborate on radical but it does offer some really awesome features that we'll get into next so the value prop for radical is basically like free your code radical allows you to collaborate entirely peer-to-peer this means no more central servers no hassle to set up like self-hosted git instances no censorship and no corporations it's a completely free and open source network it allows you to work securely offline so as i was saying before you had this lock-in where all of your non-git artifacts are um you know locked into platforms completely owned by platforms radicals actually taking those social coding features and bring them back to you so um patches on radical are git tags right um issues will be local objects and so this is also really freeing when you focus on you know the concept of local first development it's like what if i could take more of my data from the web and take it um and bring it back locally to me so i can control it and i can interact with it offline and on my machine so it's also built on git obviously that's really cool and it's more secure so everything's backed by public key crypto so everything that i do on radical is signed by my key pair so there's also an added layer of security that comes into how i'm collaborating on these repositories that makes it you know easier to trust people online so that's also another good point and then it allows you to own your own infrastructure so like radical is a free and open source project it's free forever it's available to everyone no matter where you are in the world and it's completely open source it's forkable customizable you can do whatever you want like radical will be more than what we're building right now and that's the point um and i think that that's i think also what code collaboration infrastructure should be i think that was the original vision of git and so we're trying to return to that ethos right trying to return to that um those principles of owning your own infrastructure and um building completely free forever so great so we launched radical in beta this past december we launched the network and our um desktop client so actually you can use radical today you can push code you can publish code to the to the network and host it completely peer to peer share follow projects and collaborate um albeit in an old school way so we launched this um project and immediately saw thousands of projects on the network also some web 3 projects already experimenting the graph hosting their protocol governance on it synthetics actually is mirroring their repository is on radical and so we've already started seeing the web3 space start experimenting with what it means to have decentralized code collaboration built into their workflows we also started um building out the app so um recently we launched patches um which are basically our version of prs they're like a super important means of collaboration before we were doing it very old school with mailing lists huge feature and i think it represents kind of what's on the road map for our code collaboration side of things right which is to continue building out the social coding experiences that make it easy to build software together but doing that in our own way and doing that through our clients and alongside of our users so now yeah we're halfway through we can talk about the really exciting stuff which is what i think i've been excited about to talk about for some time and kind of some of the newest stuff that's coming with radical which is radical and ethereum so as i mentioned before radical has an opt-in ethereum integration that kind of offers up the the world of ethereum to radical users um and so what the ethereum integration does um is enables three really awesome features that we think are going to really change the game for how people are building software together so the first of those is radical orgs so radical orgs are basically decentralized code management tool for dows daos i use generally more decentralized online communities of people you know what i mean people coordinating on the internet um and so orgs actually take this um super user admin model that we have everybody knows github orgs that's like the way that you coordinate that's the way that you represent and show yourself that you're on a team and we say okay what if that's managed by smart contracts right so orgs allow you to manage right access to your code repositories with smart contracts or orgs are actually on chain entities um and these owners these repos sorry these orgs can be owned by noses safe by multi-sigs so they allow you to actually have a shared ownership of your code repositories and collectively manage the right access to those repositories this is extremely powerful primitive right this is actually saying as a dao that's you know building the software that's governing this protocol that's you know building this this project together we can collectively own truly own our code repositories and manage in a trustless manner how people interact with those repositories we can also secure and anchor our project state our canonical project state on chain in a way that's again trustless and verifiable auditable and secure and so this is really powerful so anchoring which is one of the features associated with orgs allows you to anchor um your latest project state via commit hash which is related to data that's on radical on chains so people actually always know like what is the most up-to-date version of your code base so this is great for like managing software releases sharing code you realize that when you introduce this kind of like more secure way of distributing software that everything that we do now has all of these different attack vectors and so this is a really powerful primitive for people who want to organize around radical repos so orgs actually launched last week and so we can even maybe go through a little demo if we have time but you basically can create orgs that are either owned by ethereum addresses or by multi-sigs um and so this is kind of what orgs look like in upstream so again orgs are on-chain entities so like whatever client you build is able to kind of build their own experience with their own ui around how you visualize these orgs but you can have members you can create different quorum thresholds for anchoring projects our team radical upstream is has and maintains an org and it's actually how we're going to be maintaining our core team development within the project so this is like a great coordination mechanism for people who are trying to show how they're organizing around sets of repositories and doing it in a way that's like based on ethereum identities which is really powerful um so radical orgs becomes even cooler with radical names so radical names are basically like uncensorable developer identities so when you create an organ radical you can actually customize and configure an ens domain using a radical registrar to that org so you can say um this org is owned by dx.radical.ethe and you can configure an identity to this org which is basically what you do when you create an org via your github account and you can use this to kind of you know identify your team your your project on the internet in addition to this teams will be able to specify where their code is actually hosted with or exceed nodes i didn't touch on this but um seed nodes are basically how you ensure data availability on the radical peer-to-peer network and so orgs can actually create their own seed nodes and they can say this is where our code is always going to be guaranteeing you know their their the availability of their code on the peer-to-peer network and also you know giving them a way to kind of this is like what they're hosting will be instead of relying on github these org identities are also integratable with other identity frameworks like idx that's leaking some alpha so you can also use these as a primitive that's composable and and and integratable with like different identity frameworks on the web making them more enriched with more data or enriching other identity frameworks with radical data right and i think that the point of this is that this does become like the decentralized developer identity of web3 you don't log in with github anymore right like you don't have to you know sign in off with github this can be the referenceable developer identity that we start building like web 3 off of and that's kind of how we see it in the context of orgs your org profile becomes your new github org profile right like this is like the decentralized github org profile that you can now share with people to say who's part of the organization who's building what what is the latest state of the code and knowing and trusting that this is one all completely uh hosted on a peer-to-peer network is based and anchored secured on ethereum and it's based in all these ethereum identities that are then linked to your radical identities so it's a really powerful concept so this is actually a screenshot from app.radical.net our web client and this is the upstream org and so you can see all of this um information related with this as this is our radical upstream repo that then you could use and go find in the radical peer-to-peer network so building on top of this this is also some alpha is that where this goes is it starts turning into a full-blown web client so um once you have these orgc nodes implemented you'll be able to implement source code browsing in sorry source browsing in the web client which allows you to actually navigate through to actually view the repositories that are hosted on the peer-to-peer network in the browser which is like replicating the github experience so this is really powerful and something that we're going to be shipping soon and allows you to kind of truly start creating like this decentralized you know profile that you can point people to to say okay this is where we're collaborating this is what we're collaborating on finally the last piece that plays into this um is radical funding so radical funding are is a vague term because there's a lot of things coming with this and we're uh teasing people about what it's going to be and starting to getting to it but basically radical funding is bringing defy to the developer experience radical funding is open source generalized smart contracts that empower developers to control the production and distribution of their work and this can mean many things but this is basically bringing d5 to devs and creating something that we call devfi which is developer finance which is super corny um but the the main idea is saying okay d5 is used to play all these financial games what if we could harness that and give developers a way to you know fund and sustain their open source work so with radical funding we're designing experiences into these clients or in their own clients that will give developers a way to actually control um and monetize um and create sustainable recurring forms of revenue around their interactions on radicals so this could be creating and distributing monthly fast support funds for projects that are like crypto native it could be streaming tokens to contributors to people who are part of your orgs right it could be using radical orgs to run grants programs creating community tokens to collectively govern projects using orgs there are tons of things that we can build and our team is focused on delivering some core experiences but more so delivering the primitives that will allow people to build their own experiences and so this is kind of like the what's coming next with radical and ethereum so now we can shift into my last talk which is last part of the talk which is kind of just like contextualizing this and like why we as a team think that radical on ethereum is kind of the future of collaboration um and i think that we believe that radical is a very fundamental part of this emerging web through stack that i showed you guys earlier the state of web 3 is like radical is able to underpin all of this development because it enables protocols applications organizations these groups of people d gens in the web 3 world to build on truly decentralized infrastructure which is a very important part of securing the resilience of the web3 space it is making the code that we're building and the software that we're building completely unsensible you can't take it down it's accessible by anywhere by anyone anywhere in the world and it really embodies the values of the web 3 space and we also think that daos or you know decentralized organizations of people on the internet are the future of open source development as a whole i think that it's best kind of captured by this quote um which is from this really great essay about governance and open source software um is that open source development is best understood neither neither as a primarily technical development or social process and it's actually more of an inherent network of interacting socio-technical processes that are intertwined codependent and co-evolving and i think that this is kind of resembles what is brewing in the dao space is that we realize that people can build software in better ways together and they can do that on the internet they can do that completely anonymously um and that is the future of open source software and so if we need that you know open source dev development is the og version of common-based peer production right like dows are all about like building the commons together you know like coordinating decentralized like this all stemmed from like very early open source development like commons-based peer production was literally a term coined to describe the phenomenon of open source development and right now we don't control the production or distribution of our code like we don't control any part of this process and so we need to be able to retain control of this um and we need secure and sovereign web 3 native collaboration to actually kind of steward this web 3 vision forward and so we actually believe the future of open source software is self-sustaining community-owned and governed decentralized online organizations and that's a bunch of words but i do think that it's trying to contextualize what's happening now where we have protocols that are being built completely online um with each other often anonymously governing millions and millions of dollars and completely redefining a lot of things that we know about money a lot of things that we know about the web and the internet and so we think that the way that these projects and the software will be built is community-owned governed focused on self-sustaining built on crypto networks and if we want to be able to achieve that vision like we need to decentralize our infrastructure we need to decentralize the infrastructure that we're building the code on and we need to start experimenting with how we can power up these new ways of working how we can make it easier for people to coordinate and operate coordinate resources develop software in a trustless and verifiable way online and so this is why we are building radical orgs like radical isn't about reaching feature parity with github right like it's not about becoming what github is it's about designing a new way of collaboration and building the infrastructure for that future instead of just replicating the future that we have now and i think that that's a really important point when kind of understanding radicals so we see all these dows this is from i think um a defiant post about you know like what is the landscape of taos look at all these people that are like considered daos you know what i mean like taos used to be kind of this like weird like like esoteric framework for like how someone like coordinates and like literally dows are just like the way that we build software now in crypto and i think that that's really important because now these dows these protocol taos these projects are coordinating resources they're coordinating reputation they're building social infrastructure that's not just against focus in the dow space it's more a greater part of this open source space and we really believe that radical can underpin every single one of these dials that everybody can use radical to empower themselves to continue building towards this decentralized web3 vision and so that's kind of like the greater picture of how we think radical fits into web3 is that we want every down in the world on radical we want to give online open source communities the ability to truly own their code because we believe that this is the future of collaboration it's not crypto specific anymore like this is the future of free and open source software um and this is where we want radical to fit into that future so that's it that's all i have you can join our discord follow us on twitter go on our website and keep in touch i think that i still have eight minutes left so we could maybe do a q a or i could um show you guys orgs in practice maybe i'll do like i don't know what do you guys want to do okay wait wait it won't be like a demo you know what i mean like it's going to be like me just like messing around with everything but yeah we can do that but thanks for listening to the talk okay so um i guess i should still talk into the mic um so this is actually radical upstream so this is the desktop client um that we launch with radical again it's a de facto way of interacting with the radical network but it's not the only way so um if you've seen radical before you'll see that this is new so what we the baseline of the ethereum integration in radicals it allows you to link an ethereum identity and ethereum address to your radical identity via a protocol attestation i'm not gonna i can actually could probably do this now so i actually have integrated radical upstream with wallet connect so i should be able to do everything from rainbow um but this allows me to say okay this is the ethereum address that's explicitly associated with my radical identity and it's important that radical identities um are this is a device id so this is a an actual key pair that's related to my device similar to like how gpg keys work and how you have to author yourself to get into github it's kind of the same way and so this is cool because you're able to say this developer on this device is related to this ethereum address and anything that i'm doing when i'm pushing to this repository and collaborating on this repository is associated kind of with me so that's why it's my developer identity um so that's an error so like i'm also in dev mode right now so like we'll see how this goes um but basically um what's also really cool about the orgs feature is that it's so natively integrated with gnosis safe that i actually when i create a multi-signature org i um so you can see it's actually working which is great um and i'm i'm actually deploying a gnosis safe via the app so what that transaction just did was deploy a gnosis safe so now it's creating um and what that does is it allows me to now uh have this uh smart contract which is the radical org and then the gnosis safe which is the owner of that org with me being the first member um is this your okay so this is the new org that's just created but see it might not work because i'm in the wrong mode which is really disappointing i can't even i can't even show you guys this whatever but so this is on mainnet and i think it's not working because i'm in dev mode right now um but what you can see is all the orgs that have been created on the radical network so this is the desktop client where you can create orgs and again you can kind of be you can do your radical identity and everything i can show you more after that um but so the web client is the newest thing that launched with radical works which is really cool because this gives you a way to kind of view your on-chain org and the data associated with it so for example this is an org that i created um called jello as you can see this is the safe that's associated with this org that owns this org this is the address of the org contract and then this is actually leads me directly to the gnosis safe where i can anchor projects on chain um let me find one that actually has an anchor so as i mentioned before anchoring is kind of the the main function that you do with org so i have to find an org that has an anchor to it but when i anchor a project i submit an on-chain message that contains the latest commit hash of a branch of someone's remote that then i can actually view via this browser and as i said you can register ens names so you can do that via the web client as well this kind of takes a little bit of time because it's just like ens you have to like commit it so i'm not going to do this but you can register an ens name on this website and then you can actually set it to you can look i'll just show you yeah do you like that i thought that that was actually really funny i have it like linked in all of our documentation as well um but so if we go to tuna swap you can actually edit the records that are associated with this ens name so this is me being able to say okay this is url this is the twitter these are the social handles so you can configure this name and then actually set it to an org so i can set it to an org and then that will be populated in this org profile so this is kind of like the real or profile if we switch to mainnet i can show you um some of the orgs that we have on mainnet right now so radical upstream is ours as i said so this is the anchor so this is every time we do a release we anchor our radical upstream repo um on chain and so it's like just a better way for people to be able to say okay this is the latest version of that software um these are the members that are associated with the devs these are going to be integrated with ceramic network which will be really cool so these will be able to actually be idx profiles on the profile that's super nice right that's some alpha um that's coming soon and then as i showed you in the presentation you can actually click through here and be able to like view this code right and then potentially get clone that repo in the future as well so that's really powerful um dx dow is a project who actually created the one of the first mainnet orgs what's cool about dx styles implementation is that they're actually going to have their org owned by the dx dao which is a dow stack dow which shows the composability of orgs it doesn't have to be a gnosis safe that owns it it can be another dao framework and that's also really cool so we're excited to see what they're building as well um i think another cool thing of how we see orgs being used is for governance and for grants specifically for us we're going to be organizing our core teams via radical orgs because we ultimately want all of our projects to be funded via the radical dow orgs make it really easy for protocol treasuries for larger dows to modularize and understand like who's developing what within a protocol organization and so this is like really cool when you're thinking of how can you fund project development via daos you can have these development teams that maintain these organizations which have a relevance and maybe receive resources from like a larger dao that allow you to kind of coordinate project development in a more modular and like focused way that's more focused on development interactions with these orgs can be used as a basis for establishing reputation as a way of understanding how to reward contributors everything now is again based with ethereum identities you're able to kind of coordinate and program these different value flows around how people are interacting um with an organization so that's also really powerful um that's kind of it i wish i could show you the upstream thing but for some reason it's not working and i i don't i don't think i mean i could probably fix it right now but maybe it won't i think i might also i think i might also be out of time regardless so um yeah thanks i think we have time so stick around i can show you stuff here it actually works this is great okay cool yeah with the developer experience well so what's nice about radical is that it's like it's really pushing publishing code to radical is like pushing to another remote that's actually what it is it's just adding another remote and so right now when i maintain repositories on radical i'm just adding another step to my developer workflow where i'm just pushing against radical obviously this gets a little bit more tough when you have a lot of like cicd flows built in and that's like something that gonna be a hurdle that we have to focus on it's like kind of makes it a little bit harder to just completely automate the workflow but it's so easy to be mirroring code on um and so with orgs this is kind of how you use org so this is the org that i created this is the notification so you can actually view it it knows the safe this is the one that i just deployed with this address and then i can anchor projects on change so this is the safe contracts i choose the remote so i'm the maintainer of that repo i'll choose the main branch this is the latest commit i'll be able to choose whatever commit that i want and then this actually triggers an on-chain interaction that i confirm now which submits this message on chain and so if i had more members in my multi-sig um that would then uh go to them they'd have to confirm it and we'd have to achieve quorum before being able to kind of agree on that anchor um and so i think that it's just me so i think that i would just have to execute this transaction oh my god i hate when minimus does this in full screen no right but um but i think that this should trigger uh i think i already signed it it's probably just being slow um but this would trigger a transaction here for me to execute um which would then put this on chain so i think i could if this works i can show you like what an anchor so this is an anchor an example of an anchor from another org it has a transaction hash um and then also the commit hash um so basically you're just creating a log of like project state that's audible completely transparent um and it just creates a better way to kind of distribute software um so you can add members and noses safe i think that there's some cool stuff that we can do with like safe snaps so how can you automate interactions with words actually via governance so what does it mean to implement an upgrade via governance and how can you then create that uh decentralized process all the way to the code so you're not going out of your decentralized workflow to get over to something else you can actually keep it all in radical and so i think that that's what we're designing now over the next couple of months so if people are keen on trying out or it's like get in touch with me um because we're doing a lot of user research funding a lot of different development teams getting people kind of losing boards cool that's all i'll do i'll stop sharing my screen now is 