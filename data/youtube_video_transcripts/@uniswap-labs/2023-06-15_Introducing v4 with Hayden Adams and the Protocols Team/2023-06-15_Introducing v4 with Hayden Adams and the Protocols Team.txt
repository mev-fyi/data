wait a little like wait as people trickle in we've been told we're late though so now I'm like are we do people know like should we just start but it's okay we probably let people on Twitter Youtube doesn't look like we're there yet to me yeah we'll wait a little give it like five minutes three minutes oh okay okay to like display Us on YouTube oh okay let's go absolutely send it send it Sarah okay we want to start we're live great let's go okay all right we are joined with some incredible people today um very excited for this YouTube live spaces um yeah I think you know we obviously announced big vision for V4 yesterday um yeah I think before we start just want to make sure everyone knows they can go over to the YouTube channel drop questions in the chat um we'll try to get to some of them um but we also have some questions prepared for our audience here today um yeah I think maybe well I don't you know we're first before we get into any of the questions I think it would be good to go around and kind of introduce ourselves um you know what team we all work on and yeah I can go first um Sarah on our protocols team um Austin and I will be kind of moderating the conversation today guess I'll go next so I'm Austin I work on our research team uh not the protocols team sadly maybe try like tell someone I'll say I'll send out with Alistair next I'm Alice I'm also on the protocols team and Austin you're an honorary member thank you I appreciate it um Noah hey I'm Noah also on the protocol team um been around for a while many of you maybe have seen my face before uh this is in place of the twitch stream which I did to introduce V3 so get your questions in now uh they only know Walmart Noah they don't know real uh I'll popcorn to uh yo I'm Emily um and I'm also on the protocols team you know that's that's what we're saying right yeah yeah cool I'll uh bounce it over has marked on it foreign on the protocols team as well hopefully this lives up to your old twitch stream now because that one was pretty legendary I guess just me left um I'm Hayden been on working on you it's not for a while uh also wish I was on the protocols team but sadly yeah um but uh yeah super excited to be here and yep yeah all right perfect yeah thanks everyone for coming so uh yeah I think Sarah said this a little earlier uh but Sarah and I will be monitoring the conversation with the amazing cast of characters we have assembled today so I guess the first question is to our fearless leader Hayden who also shares a last name with me but no relation uh what is the vision for unusual before and we're all curious when you created unit swap V1 did you see us landing in this place or has it come together over time or in with different iterations of the protocol multi-step multifaceted classes I will remind you if you need to okay I'm going to start with the V1 section of it I think that definitely when creating unified V1 I was kind of more like uh you know an experiment in can you build something that's extremely decentralized on top of ethereum and uh maybe this amm thing can work and maybe it has some place in the world um definitely did not imagine any of the things that followed or how you know much of a life it would take on or that you know this many years later we would still be working on a V4 that is you know doing all the things that V4 does so definitely you know was a very very different world back then um and say that definitely seeing like like the all the all the things that were built on V1 kind of was what got us to build a V2 and all the things built up like all the you know the traction excitement and development around V2 was what made it worth building a V3 into it I think each you know version of the protocol has been built on the previous version uh for V4 it was really about making uniswap much more you know powerful of a developer platform and much more expressive uh definitely like there's a lot of innovation that happens in the space a lot of other amms a lot of you know cool projects built on top of uniswell and right now they're a little bit restricted in how they can interact with unsw3 is very powerful but also quite opinionated and there's a lot of trade-offs that had to be made and every the process of designing an amm as everyone on this call knows is basically just like arguing all day every day about random small trade-offs um and just bike shedding and endlessly and the reason for that is basically every single decision you make has you know impacts multiple other you know things and you know very simple examples that like the Oracle that we built into V2 and V3 uh we're very good for external Integrations but increased gas costs for swappers and that's like a very simple example and with usb4 we wanted to basically expose a trade-off space and let people who are deploying pools choose the properties of those pools and you know there's a lot of cool like ammo design there's like cool exciting experiments around like how do we like make fees you know more competitive how do we have LPS you know less exposed to impermanent loss which is a fun word maybe we should talk about that one at some point um and I really just like it's very hard building an entire amm around a single you know change the protocol is very um you know it's a lot of work and not very efficient and I'd say that uh you know some some ideas are really interesting but kind of need to be validated and it's possible that no single tool design is best for all possible Pairs and so the core of V4 with hooks and Singleton all of that is around you know we build a system where people can build much more customizable pools that that add on new features that make different trade-offs and you know allows for just greater experimentation in the amm space and more powerful things built on top of it and then all the other aspects of people are like how can we do that in a way that like is maximally you know efficient and and uh you know saves gas for users yeah so I want to dig into to like we really want to go deeper there but I think before that I think you know a lot of people come to Twitter they see uniswap you know just kind of release this vision for V4 and their first thought is okay well how is it different from V3 so I want to spend some time there like you're new you don't really know what's going on with V4 you know I'm you know kind of want to send this over to Noah how would you in like a few sentences explain like kind of some of these big differences from V3 yeah I think um tamiki three was uh sort of the best expression of um an amm that we thought was going to meet the sort of the most um you know needs of of users of of a decks sort of two years ago uh you know introduce concentrated liquidity um it sort of um hardened and improved the Oracle system it was as gas efficient as we could make it without sacrificing security and things like that um and uh and yeah we felt that I think it was basically as good as we could have made it at that at that time and I think since then we've realized I could not just we meaning sort of not just unisop Labs but sort of um you know crypto as a whole has realized that there's never going to be as Hayden mentioned a single instantiation of something that's gonna ever meet everyone's needs in a in a sort of reasonable way and so to me I think V4 is about removing um the sort of slightly discretionary choices that we made um for V3 to the extent possible and providing more of a neutral platform for um others to make the choices that previously we had had made um and so yeah I mean I'm happy to go into architectural differences and and Nuance you know maybe later in the call I'm sure others will as well but to me the highest level Point here is that um V4 is more of a platform for amms whereas V3 was the specific best amm we thought we could make as unislab Labs two years ago yeah I actually think it would be really interesting to kind of talk a little bit more about this like Oracle piece so like you know building the Oracle into V3 that was a really opinionated decision like do you see any downsides of now having that like be outside of the protocol or you know kind of talk like can you talk a little bit about that trade-off space there yeah so the existence of an Oracle in an A M I would say is a classic example of a public good which is a like an economics term where there's uh something that's being provided which is generally good to exist um but which no individual party is incentivized uh to sort of create or maintain um so um basically we imposed um a sort of fixed gas cost on um you know the first swapper of every block for every pool on unisoft V3 in order to maintain uh this Oracle functionality um and this was no not opt-in right it was it was mandatory across across all pools and this is sort of um our our way of of you know forcing this this um capability to be available for every pool and hoping that you know there would be products um that came up which were going to be based on these oracles um that that somewhat panned out um but again I think I mentioned that you know we we no longer sort of feel comfortable imposing that choice on people um you know given the um you know the again increasing number of tokens and and mechanisms that people are using um you know the the specific type of Oracle that we introduced in V3 just no longer felt sufficient you know given the proof of stake um uh launch um you know six months ago and a lot of research that Austin and others have done on the security of this Oracle um so we felt it was time sort of time to rip that out of the core um you know save people some gas on sort of normal swaps and then let teams including ourselves but really teams that are going to be driving you know feature development on oracle's uh make decisions on their own that are going to be best suited for their protocol and so um this was yeah a little hard for me because like oracles were definitely my baby in B3 but I think this is again ultimately the mission of of the fact that we can't solve everyone's problems for them and to some extent you have to um you know uh you have to be able to let the sort of marketplace decide what the best solution is there so uh one one thing that might be how I can quickly hop in and like show my new favorite sparkle design as an example of like something that like hooks enable so today you know we know talked about like hooks as a public good right the people who are paying for the public good it's basically all swappers in the protocol or technically it's the first swapper of each block um and subsequent swaps in the block don't pay for and that's a very like strange group of people to kind of be like subsidizing the cost of an oracle uh my favorite kind of current hook design sort of Oracle design irregardless of like the specific function of that Oracle whether it's a median or average favorite Oracle design is one where you know whoever wants to maintain the Oracle can pay you know deposit Ethan to the contract and then basically the percentage of the the gas of a swap that you that is used um to update the Oracle is refunded by the Oracle contract and then in this way swappers don't have to pay but anyone who wants to maintain an oracle can basically just like maintain a little balance of eth that subsidizes the Oracle and and will keep it up to date and you can make sure that it's not like gamable by using you know basically whatever we don't maybe a little uh don't eat up to go all the way into that but but just the example of like letting you know hooks allow you to let anyone pay for the cost of an oracle not just swappers um and and that's pretty cool as well yeah sort of on the the hook uh background and sort of on hooks I I guess the protocols team has been doing a lot of the thinking about what are the hooks and like what are possible hooks that could exist so uh what is each of yours favorite hook and what are you most excited about so I'm supposed to go with Sarah first so no repeating it's against the rules I have to go first it's fun okay uh I I guess I get the easy answer because I get to go first um I would say tlam I think I'm very excited for um yeah this potential for submitting long-term orders um you know basically you can execute over a period of time um yeah I took the low hanging fruit there sorry guys unfortunate for MLA but uh so I guess Mark is next yeah I'm really excited about the dynamic fees hook I think there's some really interesting design space there to make pools more efficient and you know better for peas and just like a whole um design space that we've never really been able to explore before and yeah I think some really exciting stuff you can do there so then Alice I guess um yeah I can go with one of the one of the features that's I think been more asked for or I've seen people tweeting saying they want limit orders um on V3 we supported range orders which are kind of like a limit order other than the fact that if you're not fast enough to withdraw your money it reverses again which is an unfortunate feature and on before we can Implement hooks that uh don't reverse the order so you can actually have them order them before which is great and then we'll go to Emily so we'll make you last we'll make someone else we'll make you know our Hayden last look at that well I spent an arduous couple months on tym so I have to give a shout out there we're still working on it but that's that's a super exciting one especially um you know unisoft couldn't really facilitate really big orders before without um being exposed to a lot of slippage so it's really exciting to be able to kind of bring in um that new use case for it for bigger orders um but I guess I have to um also um um what else um we'll move on to Noah I'll throw it to Noah then um well I've always wanted so we don't have uh really designed for this yet um but maybe someone out there in the wild does uh I would love to see a hook that sort of figures out how to auction off the um first uh you know top of the block Arbitrage trade um this is like a classic case um of LPS leaking value to our Treasures or monitoring vampires movements and sort of exploiting uh discrepancies between those and uh between option prices and on-chain prices on uniswap and so um you know there's a variety of ways to potentially solve this with um you know you know auctions for again top of block trading rights things like that um so yeah I would love to see more Innovation on on Mev capture uh with the intent of redistributing it to uh to LPS so if you've got any ideas hit us up publisher code let's talk about it so hit those DMS they're always open so another idea we've been toying around with lately is um trying to get some pools back with some fungible liquidity for people who kind of missed that feature in D3 um so we're yeah exploring you know creating pools that take advantage of gas savings on B4 Etc without you know from Singleton but um getting some of the benefits back that people saw yeah and then hey you sort of gave us a little bit of a shell already so you can either continue the channel or go with a different one I have plenty perfect perfect a few ones I'm excited about super excited about yield bearing hooks honestly like right now uh you know with the way that V3 works right liquidity like the the pool is split up into all these discreet hooks or ticks oh no we have Fox and checks um all these discrete ticks and basically only um liquidity you know the only liquidity that's used for a given swap is the liquidity that is sitting in like the current Tech and if the tick cross out of range maybe it's the current Tech Plus the next tick but most liquidity is just kind of like sitting idly most of the time and so definitely with hooks it's very possible to create to take liquidity that's currently not in range and deposit it into lending protocols uh you can also have it in like you know liquid staked type of situations and generally very possible to to you know earn additional yield by by keeping out of range liquidity um in other systems and only you know withdrawing it as needed um either on a given swap or or you know across periods of time that's one of them uh I'd say that generally speaking I'm just quite excited about like a lot of innovation that's happening externally Tina swap now happening internally through hooks really like almost any project that is currently building like you know its own amm uh it's very possible it could be worth it for that project and it depends not every it's not literally always the case but it's very possible that that many projects that are currently building their own amms are experimenting with new amm designs will now just like build that within UNIF swap um and one interesting reason for that is that if all you're really doing is like changing how the fee mechanism Works um then uh then you can easily expect that as a hook and if you know if what you care about is like the economics and incentives and all that you can still kind of do that and um there's sort of like a network effect to doing that within the unit protocol where you get uh much more efficient routing against other pools that are also using Hooks and also uh in the same uh same system and so it can be worth it even if you care about like that even if there's like an economic incentive to like have your own system you can still sort of layer that on top of the unit swap protocol and it can be like net beneficial on both sides because of you know the the gas efficiency Savings of being in this shared system so that's pretty cool as well um yeah I I actually think that's a great transition point to this next question which I want to dig into a little bit I'm going to throw this one to you Mark um but yeah you know one of the key pieces of the forest kind of two new big architectural changes um we refer to them as Singleton and Flash accounting Mark can you talk a little bit about what that means and how you know where where we see this this gas savings from sure yeah um I'll talk about the the thing let's say mostly um Singleton is honestly pretty much across the board gas benefits for uh unisa V4 over V3 especially in terms of deploying New Pools which are now just initializing some State as opposed to deploying a whole new contract I think it's something like 90 x percent cheaper it's pretty crazy and also doing like multi-pool swaps are much much cheaper because you no longer have to transfer tokens across different pools you can sort of just you know internally map the sort of intermediate swaps and only transfer tokens and Enchanted tokens out on the Swap and it actually was super easy to make this change over V3 because the um like the the pool state is pretty decoupled from the nominal balance of the pool already like basically the pull stage is just derived on like you know all the odds and all the removes of liquidity and all the swaps and so on and so we basically just store like the diff of the balances over every Swap and every change and I basically you know that's a pretty easy change to make um but it's actually super critical on V4 I think to have these multi-pool swaps be cheaper and this is mostly just because there's going to be so many more pools on V4 like that it's gonna be there's there's an infinite possibility of pools even for any given pair of tokens because you can start any feet here you can set any fee to any tick spacing any number of hooks and so there's just going to be so many more pools and so much more like um so many more you know areas of liquidity and so this makes it much simpler and much cheaper to do these multiple lots and actually access all of these different sources of liquidity um and yeah I think one more really useful piece that's very Associated to the the Singleton is the The Flash accounting system which helps us make these um the intermediary accounting I was talking about and maybe sorry you guys want to talk more about that yes that leads us from our next question uh which is for Sarah and Alice uh so you guys are sort of you guys are going to ECC and you're going to give a wonderful talk about unit swap V4 which is wonderfully named lock me up and call me baby with a smiley face emoji uh can you talk a little bit about Flash accounting and how it works with lock and call and uh how this is sort of done via eip1153 or transient storage yeah let's go and take it away and it sounds good um you know talk everyone come watch um so flash accounting is um I'm sure lots of people have had a flash loans which is where transactions have this Atomic way of loading out money and you can do whatever you want with it as long as you give it back by the end and if you don't give it back by the end then the whole thing reverts almost like they never gave you the money in the first place um and so flash accounting is essentially this broader um space of things you can do but with a similar accounting method where basically the contract can keep track of all the positive and negative balances as the transaction goes on of how much you owe the pool how much or pulls how much the polls owe you and at the end of the transaction if um those bounces aren't zero it can revert and this allows us to give um a lot of flexibility to how much can be achieved in one transaction how people can trade between lots of different pools um the multi-step thing that Mark was talking about um and then the name lock and call lock me up and call me baby um is how we how we achieve these complex transactions basically users will lock the contract at the beginning and then they can call as many functions as they want they can perform swaps on any pool they can add and remove liquidity um and then once they're done with whichever course they want to do they unlock the contract again and it'll check that their balances have reached zero and if they haven't then everything will over and if they have then great um and what was the other thing transient storage Sarah do you want to take that yeah I can I can talk about it briefly um yeah I think that was a really good explanation and kind of on that note of like checking that things are zeroed out before the end of the transaction this specific property is a really good use case for transient storage because it means we're using storage throughout the duration of the transaction but we're not actually you know saving that um post transaction and so you know when enabled with transient storage just becomes a lot more efficient and that's where we get to see some of these um you know gas optimizations yeah um I don't know do you have anything else to add on to that Alice or anyone else I don't think so I think you covered that well cool um I think we'll kind of transition this here and I want to talk about one specific hook um which is T wam I know people are really excited about this Emily gave like a little kind of brief intro into what it is um but yeah how how can you maybe give like a you know T Wim 101 kind of explainer um and you know how should people think about using you know a pool that has tum hook enabled on it sure um yeah so T Wham time wait just what does it stand for I say to you I'm all the time and I time weighted average Market maker so I thought yeah we're a Time weighted average Market maker yeah um so yeah basically instead of doing a simple swap um routing across many pools you can decide to sort of take a dollar cost average approach to swapping um of your funds over time and so kind of similar to how Oracle works and I'm sure a lot of pools will have hooks like this that sort of take some functionality on the first transaction of every block to update something whether you know that's how we did oracles um and B3 and so for tum I'm the first swap of the block would subsidize um kind of shifting these orders so it's kind of It kind of ends up just being this continuous shift of funds happening um over time between the two tokens that people take positions um for two long-term orders that kind of trade against each other um and so the way hooks work um they they can kind of interact with the pool the same as any other um integrator or anyone interacting with the pool can they have just the same access to the swap function um you know same access to the pool as as an everyday user so um as these pools trade against each other um the tlm will look the price up in the pool and be able to kind of swap um the the difference between these two orders trading against each other um so that's kind of the gist of how tum operates and what about like some I guess like interesting like use cases for T1 like why would someone want this like what sort of like improvements does it offer I guess yeah so you know I don't know say you know swap governance decides hey we're holding we want to diversify our treasury um we want to take this big chunk of uni and hold it in a stable coin um to do that kind of in a decentralized way because you're you know these These funds are kind of held in theory would be hard to do that in a centralized exchange so now you can use something like a decentralized exchange to um go and make a really big bulky order like that and not have to worry about um the slippage that gets involved with doing kind of purely on chain um interactions you would be a pretty good use case for two women I'll add that like I think any time that a trade will have like a big price impact uh that's a good use case for Tom so if you want to make it just like a large trade on like a more illiquid you know pair you could just open a t wam that executes over you know a few blocks to 10 minutes to an hour um if you want a dollar cost average into something just anytime you want to make a very large order right that where it would be worth it to split up into multiple transactions but then you have to pay the gas and have the user experience uh it's it's probably better to do a tum but to Emily's Point definitely like on chain Dow treasury rebalancing is a super interesting might as well I think a follow-up question that is on top of the mind for everyone is is it t wam or is it t wam of course other variations I always thought it was twam you know no I I well no I I I think Dan actually I think the original 2m paper which by the way we should have been you know it came from basically it was a paper Paradigm cut out um I think that yeah he does in it he actually says this the pronunciation at the top of the paper um so the paper says we call it the time weighted average Market maker or tym pronounced T Wham so it is T wam officially according to Dan who invented it I think continue in I think I say tea Wong but you do not say tea long you said she does I think she does the verbal pronunciation here I'll send it in our chat that's what that's how it is not what maybe yeah um yeah it's a super interesting hook um it was definitely gets you know V3 introduced a lot of complexity with ticks you know anyone who's looked at the V2 code versus the V3 code will see how much like just that one feature kind of you know added to the code base so um yeah it was definitely a challenge to um develop gas efficiently because we kind of have to predict how the amm is going to move and we have to track those movements from tick to tick so um you know I'm looking forward to taking it and improving the gas more and and if the community has um any input or loves to optimize that is um that would be some really great open source contributions to um it is a GPL contract well one thing I found very interesting about 2m which I'll just mention that we haven't really talked about much uh anywhere is that it's an example of maybe a hook that is like sometimes mutually incompatible with other hooks um and it sort of gets it like something that Dan has talked about a bunch in the past which is that like you only have so much complexity points to spend in amm design like the more complicated thing like if you're doing like you know multi more than two assets right then it's very hard to do concentrated liquidity like doing like multi you know three plus asset concentrated liquidity is like insanely complicated um if you're doing twam it's actually impossible it makes certain Oracle designs much harder all right we kind of pretty quickly figured like the sort of Base Oracle design that we have um you know implemented as an example Hook is actually like incompatible with the the T wam hook um and it's because of like the complexity of tem and uh it has to do with like the oracles often rely on things not changing between blocks but the idea of tem is that it's executing over time not you know on a block by block and so like the certain like the price actually moves in between blocks with t WAM and that makes it much harder to track the average price across that period And so uh just uh that's like sort of an interesting aspect of Tom and hooks I believe very good I need some like crazy calculus to actually make it work and the gas just like we didn't want to go would you which is what's so nice that it works is we can like figure it out later in the hook implementation rather than having to you know build it all and hard code it which would be messy yeah perfect so I think we'll open up to some just general questions and anyone can answer if they they feel a certain way about it uh so this I guess this question is about open sourcing versus publicizing the code uh Hey and you want to speak a little bit about what it means to build in public and what do we mean by open sourcing yeah maybe I'll even pass it to know I feel like no is is the OG you know slot but I'll also speak to it yeah well maybe maybe you can just talk on the general plane but on the license specifically I'm happy to chime in so um uh uh yeah I I'm I'm very aware of the sort of open source source available debate I'm pretty much a copy left Maxi um all my code all my personal code is GPL um I basically have only ever written GPL um uh or something that eventually becomes GPL like buso um uh so yeah basically my my my take on on the USL is yes technically according to you know uh free software Society or whatever it's it's Source available and not open source um but I think the important thing so there's two points here the first is that we're binding ourselves to gpaling the code along you know on a sort of concrete time Horizon so I think that's super important ultimately Innovation is a super long-term process and um you know in the long term um not like the world dead long term you know of of uh of economists like in the very short sort of four year for review four or two year for V3 um long term you know the code is going to be GPL right so you have that to look forward to and then in the short term really um the the sort of proprietary license or the The non-open Source aspect of the USL is really just intended to prevent the very low effort Forks that are honestly kind of not actually bringing value at to anyone um you know and especially given that hooks are meant to be extremely extensible extremely um flexible you know you can build a lot of things on top of them and a fork might not be um the sort of best way to express um you know an opinion about how that about how the code should work um but you know to the extent that it is again there's there's a pathway right through governance or through just waiting the four years until until GPL so um you know I think this is a reasonable balance between sort of incentivizing innovation and giving sort of exclusive rights um for for sort of short duration which by the way has precedent in like normal settings as well like you know drug patents um copyright Etc um so uh yeah I think that there's a balance between that and then the sort of ethos which we all frankly share um of Open Source and so um I you know I'm pretty happy with where we landed on B3 and B4 um with the only difference to V4 being that we added another two years to the to the GPL extension so um yeah I'll leave it there maybe you want to jump in if I miss anything but but no no I can jump in I I guess I yeah uh the the other part of the conversation just around like like building was there sort of a building in public uh part of that that question as well I don't remember yeah yeah I think it'd be nice to talk about like yeah what does it mean to build in public and you know how yeah we can just start working great yeah I think that like for us you know the the previous versions of the protocol right it was like the entire thing was built we renounced it and then it was like basically we by the time we announced it the code was basically Frozen under audit and like gearing up to to you know a launch within like a month or so um and I think that worked at the time and you know I don't know if there's anything about it but I think that like there was like a the one of the biggest piece of feedback that to me actually really really resonated around the V3 launch was like oh this thing is pretty complicated you know we were one you know and there's like thousands of projects being built on top of V2 like you know there's not enough time to integrate there's not enough time to get feedback there were even a few like people who opened up like PRS to try to you know modify V3 with minor like gas savings and stuff like that and so the sort of feedback was like you know like to me like uniswap is this in this piece of infrastructure for the entire ecosystem at this point right there's so many projects being built on top of it um so many you know so many users uh you know so much so much market share for on chain trading and yeah I see it in really long ways it's something that that feels like and looks like ethereum and like just like a theory like with ethereum you know people have a lot of time to give feedback and input into you know ethereum upgrades there's a lot of time to give uh people have a lot of time to prepare to integrate right all of the different infrastructure and projects built on top of ethereum has months and months to prepare as ethereum upgrades are developed and prepared to go live and I think that you know with where uniswap is right now and today um and and you know with how people have talked about the path like it makes total sense for me to for it to be built in public and uh you know really get more feedback and input uh because I think that you know ultimately it will make it stronger and even in like the one day that it's been public we've already had people like find little bugs and and you know bugs were somewhat expected at this point it hasn't been audited yet and you know it won't be audited for a while until after the code is frozen but you can sort of just see like you know the map like just giving all the the different teams and projects building on top of it time to to give feedback to contribute to it uh ultimately we'll create like a much more powerful uh system and at the launch when it actually goes live on mainnet you know there will be so much more the entire ecosystem will have like a huge Head Start and a huge you know uh like it won't just be in the past it's like almost only Labs has been able to like start developing the interface work before um before the protocol is ready and this time like we haven't started the interface work so if you get started today you're ahead of us um and and that's pretty cool um so and maybe it's not worth it to start today because the code might change and you might have to rework it um so I don't really recommend that but uh that's a little bit of like where some of the building in public comes from we think it's just like Good Vibes generally yeah and so you know Alice Emily and Mark were seeing you know PR's and and questions pop up in the repos already yesterday I'm curious like is there anything notable that you've seen um or you know is there anything in particular you're excited about like working with the community on in like kind of reviewing some of these PRS or any areas you think that are you know most suitable for like kind of community contributions I can say something um yeah I've been reading all the issues and pull requests that have been coming in today I think a lot of them at the moment include like questions about how things work why things are designed in a certain way but even that just started getting me excited because it shows that there's so many people out there who are getting interested in what we're doing want to help build um want us to help us solve some of these problems um does um yeah one person brought up an interesting idea about a malicious owner which is cool and we've been talking about um and I think hooks are particularly the area where people are going to be able to bring a lot of value and I think we're all really excited to see the hooks that people come up with that we haven't thought of or um in areas that we just like hadn't even considered so I'm particularly excited to see people jump into actually the periphery repo um and start showing some hook ideas I mean the someone bring up the malicious owner issue that's like definitely a bug so someone already found something for that I mean that's good audit in real time because we go yeah one other cool thing about building in public is that like we really wanted V4 to be very easy to build on top of and so you know we're building it designing it trying to think about what types of things would make for a good developer experience and what types of interfaces people would want like we can't think of everything and so having the developers that are actually going to be building on top be able to see the code before it's done and Alive maybe they have some feedback on how we can make it easier to develop on and like maybe maybe there's some new country points that people need or maybe there's some other I don't know different things that we can do that will make it easier to build on so I don't know I think that's cool totally yes I guess we have a potentially uh interesting question probably for Hayden uh so I think people in this sphere of uh the narratives which certainly talking about you know swap V4 uh being a uh it's very very similar to some other protocols out there uh do you think it's sort of a novel Innovation and like if so like what do you think is the novel Innovation yeah that's a great question and maybe like a starting place without answer is um it kind of reminds me a little bit of the like who invented unispop um question uh you know some people say I invented unislav um some people say vitalik invented uniswap some people say you know Alan Lou from gnosis invented uniswap um some people say you know nice guy and then some people say that an economist in the 70s 1970s invented uniswap um and I think that like you know in in that sense like all maybe all of us invented you the Swap and uh you know it's just everyone building on top of Prior work and and sometimes it's building directly built sometimes it's being built in parallel I think that like generally like good ideas sort of evolve over time and like they sort of like we even and weave in and out and like a lot of people have contribute into like definitely a huge amount of respect to all the people in the ammo's face who have innovated and definitely like as an example like definitely bouncer V2 did have did have something that looked and felt a lot like Singleton and how we do the accounting is actually quite is very different and how hooks hooks work was it like there's definitely like differences in similarities um I think that like uh you know the best sort of designs uh would have went out over time I think that uh definitely there have been projects that I've never heard of that said that we you know copied them for before and so like in a sense it's hard to copy something you don't know of um or have never heard it but like uh generally speaking like you know there's a huge amount of innovation in the space um I think that probably like the the most novel thing I mean I think that like it's probably like how it all comes together like in the end right like we think that like what we're building with before is better than anything else out there and will allow for you know the best Dex platform um so that's that's what we're excited about and it's kind of the combination of all the parts that we've been talking about on this call um you know our specific design for hooks our specific you know a system for for Flash accounting and and you know whether or not like there it parallels like definitely there are parallels to other projects and um we we don't you know I think that other people also get to have their you know it's it's makes sense for people you know who want to talk about their own projects and and their own Innovations and I think that's totally fair and unreasonable and again you know huge huge amount of love and respect for them cool I want to ask yeah I think maybe one more question before we take some questions from the AUD I want to know if you know as we were you know building kind of coming up with some of the architecture around V4 are there any sort of ideas or features out there that were eventually scrapped um and yeah if you guys can can think of any and talk through um some of the decisions there anyone I feel like every idea of kind of just like oh we can do that as a hook like we scrapped everything internally what was something that was going to be internal that is now a hook I think we were talking about too I'm just being internal to all the amm all the pools for a while um but ultimately you know with the conversation of everything's customizable taking the Oracle out it just felt and development wise it felt a lot cleaner to yeah that's a hook yeah I think that where like this came up is most relevant is that like doing something hard-coded internally there are like some level of gas optimization sometimes Beyond doing it externally in a hook and so where we thought like this hook might be universally you know and so like the Oracle was it took us a while to to get to the place emotionally of like okay the oracle's just a hook um because like there might have been like very marginal um benefits but then those marginal benefits are offset by the fact that that Oracle isn't really useful in all situations and you know maybe that's not the best Oracle design And So It ultimately was was worth you know pulling the pulling the Oracle out and saying you're a hook now um but uh yeah I guess that's no I think realizing Geo mean couldn't work well it's um was a huge like drive like after of that conversation at one point too exactly yeah I think the one thing I very much missed was uh we had a few more hooks uh like places that Hook's gonna come in that were sort of gas and efficient uh I was a big fan of all like just every single play should have a place for a hook um for every operation and V4 should have a hook every other code every other one could um uh my one of my babies was definitely a hook on to crossing right because right now we only have hooks on before and after swap but you don't have it at every single tick that gets crossed I guess what what ultimately wanted you know there's sort of like a gas inefficiency of that um that one was an actual trade-off we had to make because it was like it's like less efficient but it also means four use cases that need to execute on hooks you have to kind of simulate the transaction um before running it um and that also has gas in the fishing so there's like a gas efficiency trade-off you know like it's pretty like kind of bespoke you know Niche use cases um but but definitely is a is a interesting one I don't know if I'm remembering this thing correct correct so there was there was since around how much power hook has can a hook just go in and like chain to have access to the price and change the square price or um but I think we decided that eventually they will just have as much access to pool State as any other user before but I think we're going to switch over to some audience questions now um so let me just read through um all right we got one question do you have a date for V4 I'm guessing they mean like actually deployed on chain I wonder if you I'm gonna answer that one Sarah um yeah I can I can answer that uh yeah I mean there's definitely no set date I think like you know open sourcing before yesterday was a big first kind of moment and probably what's going to be like a month-long process of kind of finishing the code I think it's still there's still a lot of work left to do especially in periphery and a lot of optimization that could be done in course so there's definitely no deployment date um also you know we think that the best possible design for V4 uses transient storage um and so uh you know I think you know EIP 1153 introduces transient storage and that is you know slated for the next ethereum hard fork in the Cancun Hartford uh and you know there's not really a date for that um so yeah no date but um you know we're hoping maybe later this year um Austin is there any other audience questions yeah I think another good audience question was about uh the security of hooks uh so do we have to sort of be more do you just have more security concerns that they should uh be aware of who wants to do it maybe yeah people can be deployed with a malicious hook someone can you know code a hook that's you know you one thing to look out for you don't want to hook that's completely upgradable um you can just you know they can set Dynamic fees and take out take a lot of fees on the query I think they have a lot of power in that regard so they could also brick a pool like you could you know if you have a hook on every action and then it reverts um because of something so yeah hooks need to be extremely well audited before the pool can be accepted by the community there's something else one thing that's kind of cool about one of the way I see hux security is kind of like contract security like ethereum you know isn't cool because it's impossible to make unsafe smart contracts ethereum is cool it's possible to create safe mode and it's the same thing with hooks like anyone can do you know the same way that anyone can create a malicious token anyone can create a malicious hook um but it's also very the the way that we develop chunks it's very possible to create very safe Hooks and it's much easier to create a safe hook than it is to create an entirely from scratch safe AML right so if you're you know developing in the amm space it's much easier to handle security by doing it through hooks um but that but yeah definitely like our UI right like our our front end isn't gonna just like the same way that like you know aggregators you know integrate multiple protocols but they'd only integrate a protocol that has been audited and saved like our interface will integrate you know many hooks but only integrate hooks where we feel confident in the security and I'd say that there's a few properties of hooks that make it very easy to they're not like very like they make it like reasonable to create very safe hooks so like one example is that like which access points the hooks can interact with are are locked in at uh you know pool creation uh meaning that like you can't create a hook that only modifies swap fee and then later on have it you know run at the beginning and end of modified position like the the places that hooks can interact with are kind of fixed um another important hook safety property is that like you can create immutable hooks like to Emily's Point like any upgradable hook can upgrade into anything it won't be able to access new access points but it can do things that you weren't expecting so I think that like in my mind like vast majority of hooks should be immutable smart contracts um for them to be used safely it's probably possible to have some hooks that are not immutable smart contracts that are still safe based on these other constraints um if they sort of only interact with their uh the tools in very specific ways and places but generally speaking like yeah you know we gotta you know you have to audit hooks before integrating them to front ends um you have to uh yeah and you know probably shouldn't make your hooks uh upgradable but it's you know yeah it's an interesting design space for sure um another question from the audience um tangential to this kind of book conversation um does the dynamic fee hook mean we can set custom V tiers or just toggle between existing features so can someone explain um yeah what what if a hook turns on Dynamic fees what does that mean Mark your the dynamic view Maxis uh no they don't have to do they don't have to do a few tears they can they can set the hook to whatever they want before a swap uh pretty cool so I don't know we thought of things like changing the theme based on the volatility of the pool for example so like whenever there's um we're in a high volume period or a high volatility period Then the fee should go up because there's more risk on the LPS and obviously like more desire to swap on the pool more and more like benefit for arbitragers and so on so that's an interesting idea but I don't know I imagine there's there's many other good ones out there that also quickly add that we do like uh Envy through in V3 they were like very fixed constrained few tiers you could only deploy pools with specific bters um hooks can obviously do Dynamic you know completely arbitrary fees you can also just do static fee pools like V3 and you can choose any feed any fee level you want so any any possible number you know you can't deploy a pool with that um which is nice so you no longer like limited to the to the few options and you know the whole Singleton flash accounting stuff makes it more efficient router costs more cools so that decreases the downsides to to potential liquidity fragmentation right yeah so like even outside of potentially Dynamic fees if a pool opts for a static fee there's essentially no fee tiers um you can really just choose any fee as a pool creator um yeah and I think you know on that note Hayden about liquidity fragmentation I think someone else from the audience had a question about it but yeah you know I think it's you know with all these different pools that might be created different hooks yeah do we fear lots of liquidity fragmentation and and can you explain a little bit more there of like maybe what what kind of designs mitigate that yeah I mean I think this is kind of also similar to something you know I talked about earlier about like the trade-off of like making decisions for people versus like letting you know the world coalesce around things and I think that like in the past right you know generally yeah like you know the more fragmented liquidity it is liquidity is like the more the greater the cost of routing and definitely a lot of the things in before are trying to reduce the cost of that um but I think that like the the doubt like what we've said we found is that like by making uniswap not as expressive not expressive enough more of this this um uh like if you can't do Dynamic phase in uniswap then more people will just try to build things external to unit swap to do it um and so the sort of fragmentation kind of happens anyway right because if you don't have enough expression like people are going to need to continue to innovate and and iterate towards the best designs and if you just constrain the possible designs then like you know you'll just have external fragmentation and the nice thing about Singleton is it actually like internal fragmentation has a lower cost than external fragmentation so you know more fragmentation within uniswap uh is less costly than like more fragmentation across different amms because of the sort of efficiency routing gains that you have and so generally by making yourself more expressive we are trading off internal greater internal fragmentation for reduced external fragmentation potentially if more people build on YouTube I'm not saying no one will build anything else they will uh but they shouldn't no um they can uh so I'd say generally speaking um you know there will still be shelling points like like the the one percent feat year for usdc East is Barely Used even though it exists because it's not very competitive with the 0.5 uh you know feed here and I think that like the same thing will happen like generally like natural shelling points will will uh shelling points just being like you know whatever like uh people will kind of coalesce in specific pools because there are like inherent advantages too and this is kind of like letting the market figure out what is optimal um and and I think that that sort of is like very aligned with with the use of ethos um of neutrality and and uh yep great yeah I think the the last question I guess is uh the one everyone's going to be asking which is when V5 you know if you have an idea of what you want on V5 go and make a pull request on V4 put it in there yeah exactly perfect timing then I do think like this I don't think that like I will to make a hot take of I don't think four is the last iteration that will ever happen if you swap um I think that you know V1 V2 and V3 V1 and V2 each lasted one year be three lasted two years before before was announced maybe before will last even longer than that but I I do think that there's like you know this whole Spacey so early that like hopefully Innovation hasn't stopped and the thing we're building today isn't the best thing that will ever exist so uh you know continue to continued Innovation will always happen I think um that's a nice Fibonacci Sequence one one two exactly yeah well leave it at that thank you guys for joining um yeah I think that's that's all we have all right thank you thanks everyone perfect 