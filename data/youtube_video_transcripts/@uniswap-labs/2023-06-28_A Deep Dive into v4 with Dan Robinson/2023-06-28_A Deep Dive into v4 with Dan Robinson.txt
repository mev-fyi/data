will Joy but yeah thank you for coming on it's uh it's always fun to chat uh hopefully we can give the people what they want which is some actually good content about like some deep content about V4 instead of like uh some other stuff so sure um okay I'll I'll just kick it off then um hi everyone welcome to the fourth D5 research hour series hosted by unisoft Labs I'm Shin researcher at unit swap labs and co-host of today's conversation with me here is Austin my colleague at labs and co-host for the space as well uniswalk is the largest Marketplace for unchain digital assets the tools we create are built on the universal protocol governed by independent and decentralized community of uni token holders and today is the largest decentralized trading protocol to date the protocol has serviced over 1.5 trillion dollars of transactions across multiple blockchains and never been hacked making unit swap one of the most trusted names in D5 uniswap Labs is focused on Building Technology that enables users to swap tokens Buy nfts provide liquidity and self-custody their assets with confidence the opinions expressed during today's conversation will be ours personally and not that of the labs Our Guest today is Dan Robinson Dan is head of research at Paradigm and co-author on the white papers of uniswap V2 V3 and V4 Paradigm is a venture capital firm and investor in eurosoft Labs Dan welcome thanks for having me um all right first question when V5 and what's it going to be yeah well I think I always I tend to be like not not very involved in the the last stages of building um uh each of these protocols because I think you know my absolutely uh chops are relatively weak compared to the to the engineering chats over at um at uniswap labs and the foundation but um so so I'm generally distracted by thinking about what what kind of thing can come next um so I have some I have some possible ideas um but uh and I don't I don't want to speak specifically to the um uh to whether they'll be they'll be V5 or or V7 or V some other thing but um I hopefully we'll have a talk later this summer talking about um some of the directions I think Dex research should go Dan you're underselling yourself a little bit here I saw your GitHub commits in the uh core github's uh repo so yeah my commit profile is the resource Shore where if you look at like the the unit swap repo it's like a huge Spike at the early stage of V2 yeah nothing I've had a huge Spike right like the early stages of e3 have been nothing for for months and months for like a year yeah I just saw you I was like I saw you had more commits than me and I was like dang Dan is uh he's uh you know like really doing I was doing that a long time ago so I respect that um yeah so I think we'll jump we'll jump to the next one which is uh it's like you just want V4 has launched this sort of idea about hooks uh which are extreme expandable uh add-ons to unusual B4 and the amm marketplace uh it's like what types or what type of hooks are you most excited about and like what types are you least excited about yeah so um I wouldn't I'm not you know you don't pick favorites among among hooks I think I'll you know all of course all hooks are exciting um and I think part of that part of the point of releasing it is to get a lot of innovation going on on top of it um uh and I think partly that's because there if there was a hook that was just an obvious every pool should use it but um then I think you know it would make sense to build that in right um so always always I think there's going to be trade-offs for them and they're going to make sense for different assets um but I think one of the areas I'm most excited about certainly with hooks is um is trying to trying to reduce the the loss versus rebalancing the the losses to Arbitrage and I think hooks provide a lot of ways to build features that might that might be able to mitigate that yeah it's fair I think one of the ideas that people have been chatting a lot about is this mcamm uh which is like sort of one idea of a loss versus rebalancing reducing amm uh do you just have any thoughts on that I've seen some interest some like uh early research by other resource rewards uh how do you sort of feel about that and your thoughts on the uh how that's been going yeah yeah I think I think that's that's a really interesting one um and yeah so maybe that maybe we can start there because I think it's something that you couldn't have done in a previous um uh in previous versions of the protocol so uh the mcamm um family of designs and I think Alex Harmon might have uh from gnosis might have been the first one to um to post about it but I think there's been there's been a few different proposals uh in this family the idea so to backing up um with lever or loss versus rebalancing um the concept of lever is that uh at the beginning of every block um there is this latency Arbitrage there's a possibility that somebody can come in and trade with the amm and Arbitrage it against an external um uh price like a private price on finance or something um and when they do that effectively liquidity providers uh they realize they lost because they it's sort of an opportunity cost they could have rebalanced at a better price if they were for example is trading directly on finance um another great thing about it is that the arbitrager is making just a risk-free profit there by doing or almost risk-free profit by making that trade um and that their profit must be the the liquidity provider's loss um in some real sense and so uh loss was rebalancing is is just the sum of for every block there's this indiv there's this this loss from if you had done the trade at like the new market price or if you hadn't done the trade at all uh this trade at the top of the block what's the loss as a liquidity provider versus if you were just held it and one way to think about it actually is if you if you imagine just impermanent loss which is how we um how we actually used to think about this but is a confusing metric in a lot of ways um if you think about a permanent loss for just the space of a single block um that's I think that's basically the same as the loss versus rebalancing for that block and then you just add the impermanent loss block wise every every block um that the permanent loss for each block added together over period is the loss versus rebalancing because the losses you could have had you know instead of being a liquidity Provider by providing that in that block and providing this um ability to be armed um so yet another way to think about this law is first rebalancing is that effectively liquidity providers are providing a free option to block Builders or to the to the arbitragers who trade at the top of the block and so the idea of the mcam and I think it's it's fairly simple when you think about it it's a charge for that option that's to say actually in terms of the option you charge ahead of time you say you have to pay some premium you have to pay some rent in order to have the right to be the person who trades on this pool um so the idea is uh and there's many there's many forms of this but I think you know a relatively simple one would be just have somebody um rent the right to be the first Trader on a pool and if they um uh if they don't trade on that pool then nobody then nobody can and so uh so in a given block and so the idea is uh somebody on a particular pool somebody bids to pay like you know um 0.00 underneath per block or whatever and then if they they get to be the person the first person to trade on the pool now other people could trade on it could trade on it after them um but they're the ones who get to to collect that um that loss versus rebalancing that Arbitrage right and so they're effectively paying this rent every block for that option um to do that and so and the event goes to liquidity providers so it's it's a really interesting idea um I think there are some uh there's some implication implementation difficulties um but in general you can see how hooks actually enable it right um uh because uh a hook can the before swap hook can just say um see who is the owner of this particular right as of this particular block and um and only allow this this pool to be traded on if in this blocks that that owner um or or manager has already um traded on it the owner of that particular right at that time um so what one follow-up to that uh design question is how much do you think um hook design should be kind of uh chain specific or agnostic because I feel like in a lot of sense um the the optimal design of a hook maybe especially related to this idea of like auctioning off a right to interact with the pool um kind of the more frequent and the more frequently you do it the higher the gas overhead there is and then the more uh kind of inefficiency that you introduce into the pool that's ultimately uh maybe transferred onto the swappers who's who's paying or maybe the LPS um yeah and then across different chains there's there's different obviously different gas fees so there's different costs of running these on-chain auctions um do you think it's just a simple uh re parametrization across chains or does it actually uh leads to completely different like Optimal design if there is any well so I I think you can get past at least you know the the first order like gas what seems like the expensive gas cost of doing an auction every block um or like you know do an auction in Block n for the for the right to trade first and block n plus one um by by having people effectively auction off the right to rent a pool um so the idea is it's a place to pay some rent and then just they're continuously paying this eve block until something else happens um uh and they are continuously the the person the The Entity with the only with the right to trade first on that pool so the idea here is you would bid you know whoever the current high bidder is in in rent terms you bid some some amount of Youth not amount you know just to buy the next block but just per block and that's go you're going to pay that every single block um going forward until you run out of money um or someone else bids higher than you so if someone bids you know Alice bids like 0.001 East per block then Alice maybe it has this has this right to to be the arbit treasurer um if Bob it's 0.002 East um then Bob can Bob now takes that right effectively from her for blocks going forward I do think there are a lot of uh meaty questions around how you know how you should allow how quickly you should allow transfers of ownership of this right um uh how how granular the bids should be and I think you can get into a lot of details on that and again part of the um uh the goal of putting this out there is is to see if people if people can iterate on these ideas um but uh but I think functionally like that's that's that lets you basically do an auction as a as a continuous thing and if we talk about I can talk about some other protocols that um that use this sort of concept um but I'm I'm generally a fan of this you know you can get a lot of gas efficiency out of just assuming things are going to go the same um in the next block unless unless someone does something yeah sort of one of those design spaces where in theory it's very easy but you know in practice there's like a million things that can go wrong and you got to account for all of them so uh definitely be interesting to see what users and integrators and the ecosystem does over time to answer these problems another problem that was pretty apparent in unit swap V3 was the Oracle design I had a lot of protections are built in from proof of work and now there's uh proof of stake sort of took those protections away what do you sort of see are you like you're you did write the blend protocol which is sort of an anti-oracle uh piece but how do you sort of feel about on-chain Oracles in the long term especially with V4 um yeah I mean I would uh no no so so I'm not I'm not anti-oracle at all I think um and I think that was was uh pushed pushed early on for the for unusual to include an Oracle in V2 um in part because I think it's it's nice to have uh uh this as a source of data and the alternative was people actually were trying to use uniswap as a spot this is the spot price on uniswap is in Oracle which was which was a big mistake um at the time and was it was it was very manipulable um I think uh you know I think it's it's sort of an open question because with there's a trade-off with oracles right where swappers um and functionally in some sense LPS have to pay um or better the burden of the gas costs for updating an Oracle and then Oracle users are free riding on on that price on that effort um and you know I think we we decided at least early on like when when there weren't a lot of on-chain oracles available um so decentralized articles available uh and we wanted to experiment with it that it made sense to basically impose it and when you had to pick something it's like V2 had to have an oracle or not have an oracle um uh and all right it's worth sort of experimenting with this here and now we've had three years of having non-chain oracles I think we found some use cases that they make a lot of sense for and the people use them for but I think it's it's about time to say okay we don't necessarily need to as a you know top-down design decision for the entire space um in the entire Unison protocol say like you have to subsidize this Oracle and and make sure people get to get to use it and so I think people are work and I know I know Euler has been working on on ways to try to create a more robust Oracle um built into it and do a decks and I think that's you know if you want to have an uh an Oracle in some sense maybe you should pay for it maybe you should be subsidizing liquidity on that on that pool maybe you should be paying paying and paying the gas costs like there's ways to use hooks to actually have the Oracle users pay in order to to fund to refund swappers for the gas that they're that they're spending in order to update the Oracle for them right um so I think there's a lot that hooks will allow you to do to do that and you don't necessarily have to make this one choice of we're going to force everybody to do this yeah sorry I didn't mean to imply that you were an anti-oracle I just mean that the the I think one of the coolest use cases of uh the Oracle is design was the blend protocol which we'll get into a little bit earlier yeah so uh yeah I think it's interesting to see well it'd be interesting to see what users do and how they integrate with you for um sort of on that line uh one of the Innovations of V4 that I think is really impactful will be dynamic fees which we sort of talked about this a little earlier with uh the mcamm but uh do you sort of see like Dynamic fees any other way that they can be made uh and like do you think that they have like a space for being impactful yeah so people have been looking for formulas to to figure out what what should the ideal fee be say as well as a function of volatility um for a while and I'm I'm not sure there's any magic number for it I think it depends like what the right fee is depends on a lot of factors including just the demand that that users have for um for trading and how they respond to fees which nobody really knows and doesn't fit into a formula um so I'm I'm uh you know but I think in practice we do see that when professional market makers Market make on you know unorder books uh they tend to quote wider spreads for for effectively have have like larger higher fees for more volatile um uh Pairs and you know there's a lot of theoretical reasons why they do that um but I think you know I think it does make sense often we start we've seen with UNICEF B3 for example um typically for Less volatile pairs people um there's more liquidity provided in the in the lower fee um you know like stable coin pairs in the lower fee pools there's more volume to those whereas in more volatile pairs sometimes um there's there people will use like the one percent um Bulls I think the um I think there's a lot of room for figuring out that could be dynamically responsive to volatility in the asset or how you could do it in a way where it doesn't require liquidity providers to be making that um decision or changing it uh I think I think one of the most interesting ways to me and and this is related to the mcam and this is like I've talked about with Austin a lot is to is to auction off the right not just uh um to be the first trade in a block but to um talk to nothing right doctors to be frustrated but to set the fee and to uh and to receive effectively the fees and what that does is it makes someone else effectively in charge of maximizing fee revenue and they're in line with this with some some off-chain you know um brilliant Market making agent that has access to all kinds of other information um uh gives them gives them effectively the right incentives to figure out all right let me pick the right the fee that maximizes uh my Revenue because I'll earn all the fees or some percentage of the fees and then they're paying rent to liquidity providers instead and there's a lot of of uncertainties and Imperfections in that design too and I I get too too deep in any of those but I think that's that's a very interesting extension of the mcamm for that yeah that'll be a conversation we have for many many months uh how to fix all of those little uh you know trade-off spaces I think sort of the last hook that we think is really interesting uh is based off a paper that you wrote with Dave White and with uh Hayden about the time weighted average Market maker or t wam um and do you sort of see like that being used a lot and do you how do you think it sort of benefits users in the long term yeah so so uh the way tem works is it allows users to place these t-wap orders that execute at the uniswap pools actual like tiwa price um over a particular period um and there's some nice things about two up orders they're a lot harder to sandwich um and you lose a lot of that of that sort of off chain um mad so they're good for the for the user often and that you know they're they're it's it's easier you know obviously T watt manipulation is still possible but if they especially they do it over a long period it's actually it's easier for them to potentially get a fair price um but I think another interesting about it is that it's actually it seems really beneficial to me for the for the liquidity provider because this is tiwap liquidity is you know liquidity that's that's executing on a tear up order I'm sorry two up volume um this volume is executing as part of three web borders it isn't it isn't aggregatable it it in some sense that can only be executed against by against by passive liquidity um and like I think that's that's that's very cool and it's sort of a unique Advantage the passive gets passive liquidity providers because I think passive liquidity providers um right now are competing with all kinds of off-chain market makers and um and RFQ providers and people who are who are uh other other dexes um and uh you know like there's there's potentially race to the bottom and like and and uh uh profits from that but if somebody's doing a t-wop order on your pool then actually like you you just sort of that only a passive liquidity provider can actually um uh fill that fill that order in exactly according to the C what price is guaranteed on chain and I think that's that's just like vaguely pretty cool I agree as well uh I think probably the follow-up to that is about uh what does like V4 not have essentially it's like what do you think V4 is missing um and what do you think are like ways maybe just like what is before missing I think that's probably a big enough question how it is yeah well so I think one one um category of answers to that question is uh anything that could that could be built on a hook but isn't and I think that's that's missing by Design in V4 um and that's uh you know yeah anything like oracles for example where um in general you can build these things uh uh and the intention is to build these with hooks and so we try to try to pull out as much as you can from before um so that it can be added in as hooks um I I'm I am especially curious to hear from people what V4 is missing in terms of hooks because I think um the uh yeah I think I think you know it's not you can't you know it's very flexible the current hook system has designed but it's not necessarily it's not possible to do everything um you might want to do the orange hooks for example every time a tick is crossed and I think there are gas implementation reasons um why that isn't the case but I would be very curious to hear from people before before V4 um uh is is set in stone um I'd be curious to hear from people if they're if there are ideas for hooks that it might be interesting I've seen some suggestions about um or how or how hooks might be might be changed um because yeah I think there's uh there's some things you could do in theory with hooks but not with the hooks that before provides um and I'm curious if there are use cases for those and then I think you know there's um there's all categories of problem that uh before maybe maybe partially solves but doesn't doesn't go um uh doesn't it you know through the sort of problem that may not be usually solved by Hooks anything like one of the biggest you know before is a lot of gas uh optimizations but obviously it's still expensive to do trades on on ethereum Main net and so figuring out ways I think you're figuring out ways to to reduce the the gas costs the the the cost that goes to um yeah because 359 um is uh I think an important research area um that isn't you know other than other than the significant gas optimizations isn't isn't really um like revolutionized in before I think it's hard to do with hooks yeah sort of a benefit of building a public right is that you can hopefully if there's any glaring mistakes that we made it so hopefully someone else will Point them out on the weekend and go on so uh yeah let's just take sort of the next question uh what do you think we should do about the malicious hooks uh as there will be many uh um so yeah so one thing I think is interesting about hooks is there are some hooks that uh you can provide liquidity on it so the malicious talks the idea here is um you could provide to a pool that um that has uh some custom behavior that means that uh that they could regular liquidity providers for example um and I think liquidity should be very careful when providing two-way um uh to a pool um with hooks that can one interesting thing is you can um there are certain types of hooks that can't actually run liquidity providers and like the before swap hook for example which is my guess is it would be it may be the most um often used hooked in general doesn't uh doesn't actually allow you to prevent liquidity providers from withdrawing their liquidity there's so there's a lower bound on effectively how much liquidity Fighters can lose um from providing to this pool and I think that's I think that's interesting I think the you can sort of fearlessly provide to a pool um that it only uses this and and the interestingly the the permissions of what a hook is allowed to do including cleaning which hooks witch hooks is allowed to hook into the is is baked into the address of the hook contracts you can just like look at the contract address and you can tell okay there's no Kent rugged me if I provide liquidity to a pool that uses it um which I think is pretty cool um for hooks obviously that uh that use um there's there's hooks before and after um like uh uh uh maintain your burning liquidity um uh or someone or some of the hooks that could allow liquidity providers uh so it could allow the hook uh contract to regular I think you just have to be very careful about the um the code and you know the same kind of thing you would do before trusting your code to uh to any smart contract um let's check if it's audited read the code yourself um see if you if you uh the extent to which you trust the author um all the factors that would normally determine whether you'd be willing to trust your money there but um but it's an area where I think you have to be a lot more careful than than you do with with hooks um that don't have those abilities as a liquidity provider and as a swapper I think in general the ideally the router contract should actually be protecting you um from from failed swaps in general um like so there's there's you know you could you can actually guarantee that your transaction does not uh complete if it doesn't get the amount out that you expected and so as a swapper there are a lot of ways to pay yourselves yourself just by by using a router contract yes I think it's uh you know malicious hooks will be a very interesting way uh and to see how people sort of deal with them will be very interesting to see how the ecosystem sort of grows on that um I there's been sort of a conversation on the internet and on Twitter about uh unit swap V4 uh being sort of rehashed a lot of old designs uh do you sort of think that you know swap B4 is innovative or is it just like everyone's ideas all sort of thrown into one um well I mean I think I think that the point of the hook uh construction isn't is explicitly inspired by everything that everybody is doing um to like build you know to like the mcamm design um that Alex had or or um the or t Ram or these or these other designs like the entire point of it is to you know and none of you know these are not built into before the point of of having hooks is to say you can you can build all these things that other people are building in there that we think are really cool um on top of uniswap um as far as whether the architecture itself is as um uh as similar to others again I think I think like uh I I can't really admit to to um I I thought I thought Singletons were interesting from uh I think balancer V2 had had one and then I think actually Sushi had Trident um which was sort of a different kind of Singleton contract um for which which never actually ended up launching um but I I don't think the uh I think the actual implementation of Singletons that we that we did wasn't wasn't it wasn't wasn't from um uh me it was from Moody and and goes back pretty it's pretty far um I guess yeah I think the from from my perspective uh yeah I mean I think I think there's there's there's a lot of Educators I think I think you know um ambient was uh or formerly Croc swap I think was very early to the Singleton uh construct as well and I think it's I think it's you know it's the right design um and so I think it's it's like correct that everybody ended up landing on this yeah sort of uh the thought that I have that people were like well the these are already things that exist in other protocols and I was like it's not the fact that they exist in other protocols is the fact that and you can make them uh and sort of do anything that you want uh not enshrined in the protocol um but yeah that's sort of just my thoughts but I'm a little biased so I'll let's get to the next question uh yeah so I guess uh somewhat a spicy one here um but you know there's a there's a lot of uh discussion about whether the license is the right choice and whether it incentivizes the the right mentality to to contribute uh mainly you know people who contribute to the the hooks Library are are obligated to I think inherit uh uh GPL uh of course they can they can do their own like private one but uh we do have a template for them to contribute to to the core repo and then I think because we had um uh sorry into the periphery and then because we have GP out there then you know other people need to help GPR as well do you think that's even a contagious point or uh is that something to be considered oh right my understanding um is I I don't think this I think Cooks can have am I right that cooks can have any licenses they want and you can you can build you know there's nothing that pops you from using a hook that yeah right the leading hook that has has whatever license you want um and having used up before hook into it um I think the the uh you know I think what I've seen the most discussion about is is the use of the of the business source license and V4 as it was in in V3 um and you know I guess I guess my respect I think I understand why I think people some people um as a result wouldn't want to say like contribute to the core um uniswap cover and I think that's fine um and I think like the uh you know it's it's a loss not to have people who would otherwise contribute um because it isn't I think I think in my view again it's it's roughly like a decision about what's um how how you want people to use your code um and how you want people to interact with it and I think again the the I can only speak for myself personally here um and there's not I don't think this is I don't think this is more widely shared units are certainly seeking for me I think some of the the psychic damage from um from having uh uh seen some of your designs and and code that people that you know that that you helped with um uh forked and and aggressively and angrily used against you um uh well I I think is is had a very had something of a profound effect in my and my feeling that oh people really just want to like contribute to your to your code you know I think like it's it honestly is not in my view that hard um to implement a lot of these ideas independently and it's almost like I'm like a a bare minimum basically I think that you that you should have to do if you if you want to be if you want to build a deck that aggressively competes with someone um and I think you know I think it's it's like I I just I personally sort of don't didn't enjoy it um the sushi swap vampire attack and I would say like so I'd say that's that's why I like the like the idea of the BSL yes I uh always good to uh you know remember the old days and the impacts of uh previous events right um I guess on a completely different note I think we'll sort of go a little bit away from the four uh so we alluded earlier to blend uh which is sort of I think like the last protocol you worked on before V4 um and released it uh so I think blend was pretty interesting because uh it was sort of like Oracle was lending Innovation so how do you sort of feel about uh blend the Innovations and sort of like any other thoughts that came out of it uh on successes yeah so bland is a is I think a pretty simple design um for uh borrowing against arbitrary collateral um and the the key idea of it comes from roughly the kind of of peer-to-peer just lending that um as pioneered by projects like nft Phi um and back which is uh every every you know instead of having this pooled lending um like you know like sort of like compound and anave um pioneered uh we're gonna run it all back and we're just gonna we're gonna go actually to just just peer-to-peer um every loan has has one particular um every Everything has one particular lender against it um and the idea there is um that lets that says any individ the lender could be any sophisticated party off chain you're making the same kind of assumption that you do in V3 that and you with UNICEF V3 that there are going to be these sophisticated actors off chain um that can basically do a lot of optimizations that you would you might not um uh normally and I think the uh it's impossible to just build them directly into the protocol the protocol doesn't have the right signals it doesn't have um it's not going to have the efficiency of computation you're not smart enough to do it um so you just say okay we'll assume someone else is going to do it they're going to to Value these nfts at some price um and they're going to lend against them and then we figure okay how do we actually mitigate some of the um the downsides that come with that and I think in previous in previous versions generally these have been so these were oracleless protocols but generally these have been expiring uh protocols and so the idea here is there's just a couple clever ways um in blend to roll these loans automatically and to allow liquidations to happen um uh through a kind of through a kind of refinancing auction and the net effect is you can look basically you get liquidated if and only if nobody in the world would be willing to lend you at this at this uh at any interest rate against your collateral the amount that you owe and I think that's a pretty fair reason to liquidate someone it's basically like the fairest reason to liquidate somebody be for for a floating rate um anything would be that like literally nobody in the world wants to wants to take this position against you and so um I think I think it's I think it's it's a fairly simple protocol I think it's interesting in part because uh it works for nfts um but actually could work it could work for anything um and so it's a way potentially to to to do long tail lending um in general but I think you know it has some it has some um drawbacks I think you end up with a lot of different um interest rates for example um and interest rates don't automatically adjust you have to you have to trigger a liquidation or or some kind of refinancing in order in order to change the interest rate um so I think there are some um some downsides to the to the construction um but generally I think I think it's just very cool to to use crypto economic articles I think it is cool just to the concept that if someone's willing to pay for this then then that is that might as well be its price um or if nobody's willing to pay this for it then we know we have a lower bound on the price like or an upper bound on the price like that's the I think these are useful things people maybe have cotton um and and you know trying to trying to build a a you know unusual V2 and V3 of the oracles are designed to be like we're just going to give you one number and that's supposed to be the price I'm gonna try to make it as mapulation resistant as possible well like what's that really mean we're in a market that doesn't have like zero spread it doesn't have like a perfect price at any given time um and so actually what you're looking for often are these lower bounds are these upper bounds and that's where blend kind of plays with back to uh before let's say V4 really took off and we end up with um about a million pools and 100 000 type of hooks you know half of which are malicious one way or the other um what's what's the solution to route through them uh how do you know um what's the what's the best way to go through so you end up with the most outcome yeah I think it's I think it's a really challenging problem um routing routing you're talking about writing through um just running through yeah running through hooks I think it's it's through multiple well it's it's related to the to the problem of routing across Dex liquidity in general um and it's this sort of like nasty non-convex like uh um uh optimization problem um and it depends on you know the gas costs and like and if there are any risks of these particular of these particular pools I think in my my I I I have not thought deeply about it my guess is you're gonna find that like really um Brute Force empirical methods uh may work surprisingly well I think they just sort of have tended to and so just like try a bunch of different routes and like tweak them a little bit and see what happens um and do like bisection searches and other kind of nasty stuff um my guess is that that that could be effective on it um but yeah I've been I haven't uh I'm I think I'm probably behind the state of the art on red optimization in general without uh without specific hooks um and with transient storage is Route is is new pool still non-con vaccine V4 I think it might be convex right if you assume there's no like you know a fixed cost of routing through an additional pool there is a fixed cost of riding through additional Pole right because of the Gap there's a gas cost of just of just interacting with the pool you're right you got some cost just much smaller right but it's it's almost zero in I don't think it's almost zero just much more right right but it's much smaller and thank you it's like it's like it's meaningfully small in V3 I mean you guys you guys give me the data on it or whatever but I'm not I wouldn't I don't think it's like it's nowhere close to like zero costs in fact you're gonna have something similar no yeah definitely not zero cost just significantly cheaper um and how that trade-off goes between routing to multiple pools and you know like that that cost coming down but if you want to run to more pools and price uh improvements are going to be a a very tricky question though uh but something that people have solved before with like on l2s where it's functionally the same cost uh routing to other you know dexes uh they gotta go sort of figure it out wait actually so um I guess related to that question uh would you say that Singleton and you know all the hype about Flash accounting is maybe slightly overrated then because you know on the one hand you know it doesn't reduce it to zero on the other hand you know most trades uh if I remember correctly are only just one top in one pool uh so is it really a big deal well well yeah well I think it's and part of it is the um what do you save you save basically the accounting of the erc20s um for the internals for the internal transfers between them because you don't have to have you don't have to track any kind of internal pull the pool transfer um and you save some calls uh and there's probably like a little other a little bit overhead I'm not sure that you save but again yeah I think it's it's um I think it's you know it's it's I'm you guys you guys tell me exactly on that I'd be curious for um the actual metering numbers on it um but but the wrong question is it is it I mean I think it's well the cost of of deploying a new a new pool is extremely expensive in V3 I think that that's part of it is the the part of the Gestalt of uniswap V4 is about like we want to let a thousand pools Bloom and you don't really have that at the costs like hundreds of dollars to deploy every every new pool right um and so I think the the idea here is is reducing the cost of um of experimentation of trying a bunch of different ones I mean I think the routing cost is part of that but the deployment cost is a big part as well yeah what I learned sort of I was talking to Noah and Poe yesterday uh it's really really hard to get exact numbers because the solidity compiler doesn't exist yet so it's like the way the numbers they had from like a year ago were like really really hard to get because uh they had to essentially make the compiler themselves which is not a trivial task it's not optimized either so I think they sort of have an idea but we don't know if it's exactly correct um and so it'd be interesting to see when routing comes like how will that you know what's what will those numbers be and how they uh shake out so I I think sort of a more fun question is you've really been with uniswap since the the beginning of uh you know V1 and sort of also like not been with unusual but like being close to unusual uh since V1 so what is like uh do you have any sort of fun stories you could share about maybe the the good old days fun stories about uniswap yeah I mean let me see I think uh see well I I I've I've some memories distinctly so so unit swap you know this was pretty Scrappy um up through almost up to like the V3 launch effectively um was it was a very small team and was in this was in this like tiny um uh Attic in Brooklyn um and I remember I remember um some case where there was where there was uh but there was a fire in the office that uh that someone had to put out um but I I don't remember the details I didn't want to describe it too much but um but in general yeah I mean I think the um see and find unusual stories um I honestly do think you know when I when I talk about I talked earlier about the psychic damage from the sushi swap um uh a vampire attack but you know that was like so this was maybe about six months into covid and um everyone had been apart and hadn't really um you know seen each other but I think like it was really you know this is defy summer it was an interesting summer and then this was kind of like just the Capstone of that was this really sort of when you you know when at the time certainly scary experience but also when you look at it sort of extremely based and like it's it's very cool that you actually can do a thing like uh like a vampire attack um and it's it's sort of was this was this Larger than Life moment where you basically have like this weird um sort of like Rogue hero slash villain know me um and and and uh uh versus Hayden um uh sparring on Twitter and and competing for liquidity and and like then and know me rugging and then all this sort of like dramatic stuff and I remember I sort of largely remember those times very fondly um as as you know I think remember the the closest of the unisrop team during those few months as being really and I know you've talked to others on the team about it and the way that they they get very nostalgic about it but you know despite despite basically everyone being um being physically apart felt very much you know it felt like the team was very was very close together at the time I think that was that was that was fairly cool and spurred by this by this very sort of interesting extraordinary circumstance I think I don't know if you're in the photo but we've seen the photos of like uh those days where the sort of vampire attack was happening and so the whole team just on a little Google me call uh which is quite funny I think you may be on them I'm not 100 sure I just remember Nella and Teo uh but yeah it's sort of uh it's interesting that like a such a fun thing not a fun thing but an interesting thing happened out of such a what was kind of seen as a a dismal moment for the team um I think one of the other questions that we have is about l2s so I I'm someone of an L2 Maxi myself uh and I think that like do you think that l2s will pass L1 volume in the next maybe like five years ten years some some time period that is far enough away that we don't think about it in the next five years um it seems very likely to me um it would be very strange if it if it didn't in some sense um um I think that's especially true if you consider that you know like right now what we have on these l2s are these very kind of Monolithic like L1 like l2s where you have to sort of you you I move from ethereum mainnet to optimism mainnet and then I and then I um you know pop around and interact with it like it's its own chain I'm in my own universe I think that makes sense and we'll have a lot of that um but I think one interest like one other thing we're starting to see is actually if you if you have much more efficient modes of interacting with an L2 and moving back and forth to an L2 you could just interact with an L2 almost like you're interacting with an individual application you say like I'm just going to really easily move my move my money over to L2 um like you know do some stuff on it and then and then instantly move back say um our instantly move to another L2 and if if interoperability gets a lot better then you then um well hey you know you just have a lot more usage on on individual twos but I think we might start to rethink what an L2 is and we start to see these things that are more like applications that actually work as a roll-up you know functionally their their roll ups but people users don't don't experience them as as like you know their own platform they experience them as like oh I'm using you know Ave or whatever but actually it's Ave chain it's like and it's an OP stack roll up something like that um and I think that that model for um for l2s is is really interesting because and and you know an application doesn't have to like oh I'm gonna like go Deploy on an L2 it's like I am an L2 um and I'm just going to be away guess way cheaper than I would otherwise be um and you know users can we can just abstract away from the user where they're doing this yeah it'll be interesting to see especially when as the Ops tag and other l2s get more sophisticated what you know Innovations will see and the ease of use that will sort of probably occur from them um so there is a a big story within the unit swap team that you are a karaoke Maxi so we want to know what is in fact your favorite karaoke song like if I had if I threw you in front of a stage right now and I was like just do it Dan what do you what do you think you're sitting in yeah so it used to be um it used to be Baby One More Time by Britney Spears which I've done maybe 75 times in my life very I can karaoke and yeah it's great great great song um and I think is during covid I think my my vocal range I sort of hit puberty I guess and like my vocal rain or my Timbre sort of sort of mellowed such that I it's harder to hit the high notes um and really evoke Britney the way that I I think she deserves to be a vote and I think the so more often now you know I'll still be like Britney's like my opener but more I've been leaning into into uh my way by Frank Sinatra because I'm sort of I think that's where my where my voice is going a little a little um uh uh lower and and gravelier um maybe I don't know it was covet or something but like pre-covet I would do karaoke a lot and do Brittany all the time and now now I find myself doing Sinatra more that may be the most impressive breadth of catalog I've ever heard uh Brittany to uh turns out yeah I don't know they would listen to it it's weirdly similar that's why I've been thinking about mine uh the team's like you know you're gonna do karaoke and I've been like I gotta I gotta come with a karaoke song so I'll definitely I don't know about Brittany but uh we'll definitely be spending my time today trying to figure that out uh maybe sort of I'll let Shin sort of ask the actual real questions instead of questions about uh karaoke for a little bit uh okay some some really quick uh best effort prediction questions uh first one V3 V4 volume ratio 90 days after launch that's a really tough one um my get my guess is 90 days after launch V4 has flipped V3 but I won't I won't make much more of a prediction than that somewhere around 50 is somewhere else yeah uh okay number two volume weighted fee rate among V4 pools weighted fear it I don't even know what the Vlog um wait a fee rate is what's the volume down to three it's about seven um last time that would be my guess for before as well then you fly as well uh same same same here if I if I were to guess the third one is um percentage of volume running through hooked versus not hooked pools in the pools that have zero hooks at all in them um I think I I think a majority I think a majority of volume will go through non-hooked pools that which is which would be a bowl kind of a bowl I guess but I'm getting that from I think like you know you look at volume on V3 and it's driven by the usdc we five bit pool and that is a pool that is not going to have any hooks in in its dominant incarnation in before that's awesome that's a very hot take I I respect that take what hook would you put on that pool I don't know I think a lever reducing one might be interesting but yeah I think the question yeah I don't think we've got it good enough and to be clearly all the lever stuff like I think very very interesting Still Still fairly theoretical um I think I think it's gonna and I think it's gonna be hard just gas wise on on ethereum L1 yeah um to beat the non-hacked wolf at that exact use case but I think you'll have this very long tail of of um uh tons of different Hooks and again for none with usdc bears I think looks also get more interesting I think you'll have a major with uscc one with an oracle seven Oracle or other on it yeah yeah also this is like 30 days out right so I think as the ecosystem gets more as we saw with V3 the ecosystem got more and more sophisticated as time goes on so maybe like two years out I I I changed my answer I sort of agree with you maybe like two years out uh it'll be a hook but uh maybe like 30 90 days I probably do agree and then number of hooks in the first 30 days number of different hooks deployed um launched in the fall I actually I'm gonna I'm gonna guess like ten I think it's gonna be something of a slow ramp up I will take the offer there but uh but yeah it's uh unclear yeah yeah I mean if you don't if you counted hook said like if someone tries out and like barely use it yeah yeah uh then then more but I think if you count ones that have like meaningful volume on them yeah I'd say like five to ten I think a lot of this stuff takes a while I mean we put in Oracles in V2 and it took almost a year it was basically until V3 came out that anyone started really making decent use of them and then V3 totally absoluted that old model but like at least got people starting to to work on it I think it takes integration to take a while which is one of the reasons I know why why you just wanted to to open source this earlier on because we were thinking a very long time I think to get hooks um uh up and running if you launched like on day one um and announce what they are yeah people would be a little uh I saw an interesting excellent interesting question coming from the comments and related uh to this list which is um what's the split between Youth and wheat liquidity that I think well I think I I'm I think it's not yet decided exactly how V4 should treat Ethan wave um and like I'm sort of in the camp that it would be cool to have them be be fungible in one way or another um where you special case weave but uh so in that case in that case you would you know it's like 100 in one um otherwise I don't know man I mean uh geez I actually I don't know it's a really good question so you're not worried about wheat depending from Weeds at all I am not worried about you sorry for me you know there are two smart contracts that I would like put my life savings in like bet my life on and it's uniswap V2 and um we've and any other even I'm sorry even yourself V3 and V4 I would not trust my life to there's no bugs in that contract I will yeah because I've read like I've read the like source code to you know swap meet too it's like all right this is solid yeah it's been it's been battle tested many many times on many many different chains uh I guess I'm an eth maxi I think that it'll be all Eve uh mostly just because of the cost of um other other dexes use weave though and like you're gonna have to unwrap it to do to do atomic all right I think it will you're probably right more more Youth and wave yeah I think it'll be the E the the E like the main eth usdc pool will be Ethan not with um also I think rapping after this might be less expensive still uh but yeah I think making them interoperable would be very cool uh I think that's probably like the way to do it but um you're just gonna have people providing each with liquidity which was the strangest thing in unistral everyone I I did say that I wanted to figure out uh the like gas cost trade-off that where it was optimal to route through my eatwith pool and then provide liquidity for that um but I think I'm gonna get my my money making Adventures you know uh not financially but um Maybe so I guess I'll go to the last one and we'll wrap it up uh you've obviously been a Pioneer uh in the research sort of like the D5 research base and sort of the crypto research space in general um how do you sort of think of these new ideas uh that like you sort of come up with so most of I think most of our new ideas we get from um from working with the with the portfolio and with the and with the community and so I'm just I'm lucky to be in this incredibly um privileged space in at Paradigm where we we get to work with a lot of really cool companies including uniswab including um blur um and many others um and see basically the Deep research problems that they're working on that are actually important to them and that I think keeps us fairly you know there's there's a temptation as a researcher to kind of spin off into into the theory land and the Very like you know Hands-On applied um uh context that we get from working with um with projects like you know Swap and just seeing like okay like oh this is what's actually important to you not not so-and-so other thing um is is I think just really useful for um for keeping our research like interesting um and I think it just it just is a is a constant source of interesting problems um to work on right now I think there's there's no there's no shortage of those um and any of the other the other places is from it's just from my co-workers and often they you know I have a great team at Paradigm um I think they uh uh basically yeah I mean get some of the same input it's from from the portfolio and from and from others but also just like all sorts of amazing stuff that they're bringing to the table individually um and I think yeah like just bouncing ideas off of them um and uh yeah and you know and I think like all the researchers in the portfolio as well including you guys um it's just like it's you basically can only can only do good research I think I think collectively it's it's a it's a collective um verb and I think it's it's it's great that we have this D5 research scene um where I think there's a lot of stuff as as uh uh really interesting stuff the questions have come up and interesting answers to post I agree uh it's always fun sort of working with people and chatting with them um yeah I think we'll sort of probably end it here uh so we want to thank Dan again if you don't follow Dan on Twitter uh I'd be surprised if you were here and didn't fall down on Twitter but if you don't go follow him uh and then we will be back in two weeks uh with the research podcast so let us know uh if you have any guests that you're interested in uh we'll probably announce it beforehand who we're coming out with so thanks Dan for coming on and that was uh shin and I uh on this episode of the research podcast thanks so much all right thanks 