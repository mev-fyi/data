not a dividend It's A Tale of Two fun now your losses are on someone else's balance sheet generally speaking airdrops are kind of pointless anyways um I named trading firms who are very involved I like to have the ultimate D5 Protocols are the antidote to this problem hello everybody Welcome to The Chopping Block every couple weeks the four of us get together and give the industry insiders perspective on the crypto topics of the day so quick intros first we've got Tom the D5 Maven and master of memes next we've got tarun the Giga brain and Grand Puba at gauntlet then today's special guest we've got Lawrence the smart contract cyber sleuth and then you've got myself a massive the head height man in dragonfly so uh we are early stage investors in crypto but I want to caveat that nothing we say here is investment advice legal advice or even life advice please see chopping block that XYZ for more disclosures Lawrence welcome to the show we have you here and under someone inauspicious circumstances because there's been a lot of Mayhem going on in defy and we thought you were just the guy to help us decipher everything that's going on I'm not sure there's been a day in this quarter that would qualify as an auspicious day to appear on a podcast to be honest with you there was one day there was one day when Ripple went up a lot that I thought was really interesting so the rest of them have been pretty crappy actually you know I think um for the audience who might not know uh Lawrence himself has dealt with creating a protocol that has had a attack and so maybe a bit of history on your experience would be good for the listeners edification yeah I'm happy to talk about that so um in 2001 I worked as a contributor to a protocol called index Finance the idea was there that you could model like index funds using balancer LPS or forca balancer LPS they were attacked um in October of 2021 using a um it was a flashlight attack combined with some some overflowing of um some sushi tokens into a particular pool it's honestly it's been a year and a half now the details are starting to slip from me but like I all this to say I know what it's like to be on the other side of that and you know to kind of pick through things as they happen it's uh I wouldn't wish it on anyone and now you've been I think giving talks about sort of the state of the art when it comes to White hating and you're working on your own new project now correct yes it turns out my bits last year at ECC was a rough overview of the attack that had happened I think we'd had like over 50 attacks that had appeared like last year was a particularly bad one but for defy hacks and bridges in particular and this one seems to be a lot more muted and it had been commented on Twitter that it seemed that the pace had slowed down a bit so people are starting to look in slightly more esoteric places you know which we will get to over the course of this chat but uh yeah I never thought that my bit would be the attacks becomes the commentator but uh here we are well look I think it's a line of work that uh you're gonna be able to make some you're gonna make some good money in this industry for quite a while as long as these uh these smart contracts keep uh getting hacked so let's maybe jump into it because I think actually there's a lot of different angles to the story and it's one that touches on the different stories that we've explored through previous episodes of The Chopping Block so for those of you who are not aware one of the largest on-chain protocols in D5 is called Curve so so it's an amm it's an automated Market maker that basically allows you to trade assets that are tightly pegged against each other most commonly trading stable coins so what happened over the weekend was that there was a hack of curve and this hack particularly targeted these very old pools that were all deployed um I think a couple years ago one of them was uh jpeg PE metronome s eth and alchemics's Alief so these three pools in particular on in total it was on the order of about 40 million dollars in total that were hacked these are all third party pools so curve allows you to have third parties deploy certain pools of their own configuration then they're kind of the core pools of like you know the three pool and whatnot that those were not affected by this and particularly the reason why these pools were affected is that they all used an old version of Viper so Viper for those of you who are not aware Viper is a smart contract language that's written to be a competitor to solidity that has more python-like uh syntax which is a little bit different than solidity which is kind of more Java javascript-esque type language and so this older version now newer versions actually all of curve is actually written in Viper but newer versions of Viper do not have this bug it was fixed I believe in like 2011 or something so the rest of curve is not it's not uh vulnerable to this bug but these older versions were so this bug freaked people out because curve is one of the most you know well-known longest standing stalwart protocols in D5 and is actually one of the largest protocols in D5 by tvl uh at the time of the bug it had about three billion dollars in total assets in curve and in large part as a result of the panic that's set in After People realize this bug took place half of all the the capital in curve has pulled out curve is now down almost 50 percent of all the assets and curves meaning 1.5 billion dollars was withdrawn from curve over the last call it 48-ish hours let me let me pause there because I think for a lot of folks they may not understand the Contours of what it means when to say that there was a a bug in a smart contract language or in a compiler a lot of people have been pointing fingers and saying oh my God you know how to kind of mess this up like what what a you know why are these people why are these people sleep at the wheel because this bug was a re-entrancy bug re-entrancy is a very long history in crypto as being you know famously the bug that took down the Dow uh it's a bug that keeps rearing its head over and over again so Lawrence could you explain for us one help us understand you know how Viper and this bug fits into it and what people mean by re-entricity can you just can you walk through that for us I think there's probably going to be better resources than me to talk about the nature of what re-entrancy is but basically you know kind of re-entering a function more than once in the same call I think this one's particularly interesting because as you say yourself right when people talk about uh re-entrancy being a root cause for hacks um it's it's very common right it stretches back five years six years and this is for the most part if you're dealing with topics that you know modern uh approaches for things it's a solved problem in this particular instance so as you mentioned curve is written in Viper and there are three particular versions of the Viper release I think 215 216 and three which had an issue in the way that one of the most common ways of preventing re-entrancy is to just have a modifier that's just re-entrancy lock which says you know I'm executing a bunch of code there is no more re-entracy allowed here you can re-enter into things um for the most part if you rely on that then as an assumption that you make and and you're fine you you know you go in you execute code and then you're out the way that it looked on a much lower level for Viper here in these three particular versions is that the storage slots the the parts in the smart contract that looks at whether or not you're in a lock or not was reading and writing for or reading from the wrong place so it would say here's where I'm like storing my status and then I'm reading somewhere else um to look and go this is you know am I in a local nut and your answer would always be no because you're not looking at the place that says temporarily yes this was fixed um in Viper 3.1 which was released I think December 2021 so this is a zero day that's lived and died two years ago you know where this is It's ancient history in crypto terms the part about it that's some people are starting to point um some things about I think wrongly in my opinion is that when it was fixed um the way that it was dealt with was fix allocation of unused storage slots in the releases it didn't have a flashing highlight that said hey there's a bug here there's something that like needs to be dealt with and like reach out to people and you can kind of do that for the car because it's a smaller alternative language um for the EDM if it was certain something in solidity for example you would have a much harder time because you'd have to reach out to everyone you know for Viper you've got you've got curve and you've got yearn and there's a couple of forks of course if you're just reading the release notes and you see there's no urgent no urgent flag then you go okay well let's you know there's this it's fine I I don't need to upgrade and for the most part if you're writing smart contracts and deploying them you don't necessarily want to push um to redeploy things or upgrade them to the most recent language any uh version of your compiler anyway because they're bleeding edge that there might be things that haven't been discovered yet there's a couple of strange qualitative questions that come around when things like this happen they think this is the first time that we've seen a wave of bugs all around the same kind of topic based on a trust assumption and whilst we all say trust don't verify here in crypto when you are looking at things that are lower down the stack than the language you're programming in you know when you're looking at layer beneath at the thing that translates into the evm you assume and I think assume is a bad word here but we do that everyone working closer to the byte code knows what they're doing right and we're human I worked as a compilation engineer I know how this goes there's some interesting questions that are coming around right now about okay so who's who was responsible is anyone is everyone how do you resolve this going forwards um does this mean there should be more financial incentive to look at the lower stack layer 0.5 if you were to consider the compiler to be that level um if so who's paying that VCS don't necessarily see a return on that even though it falls under their stack um developers perhaps but you know developers will often be the ones taking external funding it's a really fascinating conversation that I think it's only just started but I think we'll see this role over the next month six weeks or so a curious comparison is you know if we look at the most successful commercial compiler in history it's by far nvidia's compiler at this point in terms of dollars managed uh or dollars that are kind of using it yeah and it's kind of interesting that people had tried to make open source compilers including Intel ATI AMD etc for for graphics processors for a long time and it it somehow got beat by the proprietary one I think an interesting question is what's the equivalent here it won't necessarily be that it will be a proprietary compiler but there'll be someone who has some sort of like Market let's not say Monopoly it's probably more like a monopsony where they have some sort of like indirect Network effect that ensures that they get most of the order flow of some form and the monopsony is sort of intense you know kind of incentivized to fund this type of stuff I don't think that to be honest like the ethereum foundation or people who are doing consensus stuff care that much about this um it's sort of like well we gave you solidity you want to make another language go [ __ ] off right which is like not it's unfortunately for better or worse it is metallic wasn't metallic involved in the development of Viper in the beginning sure sure everyone wants otherwise yeah if I recall everyone wants other languages no one wants to maintain other layers that's where this is true right the key thing is that all of the funding if you look at the funding from the the base protocol most of it is like Viper's got a couple little grants but it's mainly going to solidity development verification what was the E2 deposit contract written in right the initial version the Ted the test will environment but you know my point is that there is this concentration effect and this is one of these things where you know I kind of I know there's a very heated battle amongst protocol Engineers but there's a battle over whether it's a good idea to have many clients for a particular blockchain or whether you should just have one because if you have many clients and there's an error that all of them have that is something that's outside of the specifications of the client well it's possible that they each implemented the error slightly differently and then you get these kind of like production bugs that look way crazier than if everyone was running the same client and we actually have seen a couple of those in the E2 Beacon chain but but I I guess there's always going to be this kind of kind of fight I think the place I'm more convinced will be the actual funding source for like compiler security ironically is going to come from from a lot of CK stuff because ZK circuits are much worse in terms of security vulnerabilities in some ways than the raw code because you need the code to execute correctly as well as the the proof and they have to be synchronized and there's lots of ways they can they can stay out get out of sync and in some ways there if there's more value locked there I could see that being the the place that I mean there's something to be said there but then perhaps money fun like funding flowing to languages such as solician Viper like in the process of say verifying a transpiler down to something that works for ZK you know I mean that's around the House's way of doing it but I think you raise a really good point we talk so much about client diversity on the execution and consensus layers and then we kind of seem to have accepted that um for the most part if you're writing code you should be learning some JavaScript and you should be doing it in solidity and I I can see from a cynical business perspective why that makes sense you know we'll be it for the you know a catastrophic consequence of something like this was found in in Seoul C and this part of me that goes we should have more languages we should be more diverse and yeah it turns out it's very much the yeah show me the incentives I mean yeah your PhD isn't high school okay I mean I will admit the last time I looked at anything compiler level for um the evm was hevm so like yeah I very much have uh qualifications in this regard so uh yeah I have opinions um I don't think we should be uh doing a compiling from a house called DSL down and making it mainstream but I I think we should have more but as we see even two is causing something of a a stoppage in the dam of where funds go and you know what goes where I think this is weirdly in arguments perhaps for um I this is the first time I've thought this through you know we talk about things like um where ethers Burns to I don't know set aside a little bit of it for that for uh for ecosystem development but that raises a whole bunch of weird questions about who's doing the developments you know who stewards the funds is this a uh is this a plug for uh what was that that chain that has sort of the the like the deadline I was especially not going to say CSR but like you know it's the kind of idea seriously similar we like expenditure is probably good and where you are given how much people get angry about any time I mention them on here I'm just gonna say no comment yeah it's good to see you all yeah to your point I don't think it's a uh philosophical like oh we need you know more languages or or you know yeah fewer clients or whatever um I think it's more like a funding and sort of incentives problem right like this kind of reminds me of um kind of like like you know like the log Forge and uh you know vulnerability from like two years ago or like yeah or like that remember that there's an XKCD comic of like sort of the modern stack and there's a one little egg and it's like you know some Library maintained by like a dude in Kansas and like thanklessly maintained by a guy in the Nebraska since 2000 yeah yeah and uh uh you know comparison with like the Nvidia compiler it's like yeah obviously you have you know a multi-billion dollar company maintaining this thing there's sort of different incentives and different uh capacities to do so and so yeah I mean a couple of dudes who are maintaining a Viper like yeah they're they probably don't have the resources to uh you know thoroughly test and produce um as pressure grade not not to show them I think yeah exactly I was about to say like I it's kind of a valiant effort to try to run one of these Fork languages right you're like you have no support you kind of like you you generally have a smaller team there's going to be technical issues where you can't be one-to-one with the main language that's supported and then the tooling doesn't really support you it kind of like will like do the bare minimum so that hey I can deploy my contract but all the security tooling won't support you or you know and that and that in and of itself gets to a bunch of nuanced issues but the reason you should be worried about these types of bugs is they're very Insidious in the sense that like if you find one they affect many places all at once at the same time which is very different than most smart contract bugs which are usually isolated yeah now of course there's going to be a ton of people who are you know like hey why don't you use my particular blockchain we have these particular oh yeah oh one is safe by construction and you hear it eight you see like okay chief which is never quite true never quite true but this is one of the points that I also made on Twitter um which is that like whenever you see something like this regardless of whether or not you put the blame at the feet of the developers um there's going to be some sense of like okay why did you get cute why didn't you just use solidity and kind of sit in the the sort of technological monoculture that it's like look so literally just has the most eyeballs it's the most battle tested it's got the most essentially it's got the biggest bounty on finding something broken such that if there was some zero day sitting in the in the wings it would have been found much earlier than presumably it would be for Viper which basically has one big honey pot which is curve like I I I don't think that assumption holds right because there were enough people looking at like the stuff and the stuff sat there for for two years in the open right you just had to look back a little bit um I mean how many people can we do we know that we can say like hand on heart no the salinity go base I've barely looked at it you know like I I have my bug Bears about how it compiles and so you know like the vir stuff but like this was my stick and I I barely know it myself um of course look I'm not saying that I'm not saying that and saying that I would blame the people yeah I would blame the people who are using Viper but I mean this like curve now has to answer this whether you know some people are going to give them the benefit of the doubt as you just did um some people won't and some people will think like wow you know I'll just use unisot from now on like I don't even want to [ __ ] with curves because who knows what other mistakes they're making or who knows if Viper is at all secure given that this bug has been sitting around for two years and they never you know had the the foresight to be able to notice that hey there's 60 million dollars sitting or whatever 40 million dollars sitting on this old version and in absolute terms right 40 million dollars on this old version of Viper is not a big Bounty right there are I mean it's like a very minor protocol you know sitting on you know page two of of D5 llama um that's not a place where I'd expect a lot of eyeballs to be to be poured over yeah um so you know maybe maybe it's not surprising that it took two years for someone to figure out that hey there's this re-entrancy bug like I'd be fascinated to see the process by which it finally came out you know I did someone finally decompile something old and see it you know it's it's it's it's or were they just fuzzing yeah yeah expected translation unit versus deployed translation yeah they found it you know you could totally see like that type of thing accidentally working yeah and you're just like brute force and you didn't have to think that hard and then you're like oh okay this must be the reason because it's like once you see uh uh it's like if you're doing parallel programming and you see like a lock or a mutex not working it's like oh you know that part of your code is broken so there's so many ways that it could have been found but I I think the the other point I guess this brings is like this is a problem that does occur a lot in security like you do run into these compiler bugs it's just that they've never ever been quite as high stakes I think like the the idea that the high stake compiler bug lasts forever in a blockchain versus you know High six compiler bug my code is running and constantly being changed it's local it's not just a very different modality of like what's experience it goes to the assumptions about mutability right like the idea that okay this thing should be immutable kind of assumes that there's never a reason to change the by code even if the solidity code corresponding to it is the same or the or the Viper code corresponding to it is the same that sort of assumes that the compiler is always correct and there's no reason why you one might ever need to swap that out which you wouldn't make in any other environment it's only really in crypto that we kind of bake this assumption in from the very beginning as long as this is the solidity code not true spacecraft Eros like Aerospace stuff does do the same thing where it's like you make it once we had something that was built in the 80s and then it's works yeah and we're still getting signals from it yeah it there are there are like Mission critical Technologies and that's where they do and when they do they do like the um multiple versions of the same thing that are implemented in different uh languages right exactly and they do like some Byzantine fancy stuff between them in case they're slightly what is it like they're not always identical but also from cosmic rays I read about this also in case cosmic rays like flip the flip bits in the instruction set or whatever so I think I think you just have to have that mindset which ends up meaning you can't move as fast and you know I think that's sort of why blockchains are interesting that they they bring like some people who are of the like move fast always break things don't care mindset with people who are like absolutely not this is like a Immortal tomb that you can never desecrate and has to be written perfectly up front right whereas in Aerospace it's like you always treat it like the latter and then the rest of tech you always treat it like the forbers somehow you're interpolating between the two like it's weird um ended up being one of the latter because you know a lot of this stuff is in Viper but they pinned to an ancient version of um I don't know to this day if this was you know kind of just laziness and not wanting to all going this will do you know like we don't need it to change that much the thing that changes is the strategies yeah one interesting thing another framework to think about it is like if I take the sets of types of vulnerabilities in normal software development like I take you know just normal code execution bug like logic doesn't match what it's supposed to I take like environment execution bug like I found a way to get into something that's talking to that program and has privileged access and can can change it and then you have sort of like supply chain attacks like code that the a particular piece of code depends on is itself you can kind of mutate it in place in normal software development no matter how much every year like probably once a year I've I read some posts or something that's like npm which is the main package manager in JavaScript and like every single web application somewhere in the world you eventually uses it except for like very esoteric web stuff npm people are always like oh npm has tons of supply chain attacks and and you know yeah every once in a while there's like a little thing that like fishes you or like you know like some type of browser extension that phishes you or something like that certainly you know board ape owners have been uh recipient of such attacks with this one npm package yeah no but I think that like some of some of the craziest phishing attacks end up coming this way yeah but supply chain attacks to a normal software developer if I if I ranked all of those they're probably like in the bottom 20 of security things they're they're not they're not anywhere near the top ten but this says that in crypto they have to be in your top three yes easy easy because your compiler is effectively your your entire like your supply chain yeah it is like that is the whole chain yeah also it it occurs to me that some people might not know what a compiler is so maybe before we but I want to move on a little bit but let me just quickly explain what a compiler is yeah so when you write code uh you write code in a high level language like solidity is one we often talk about Viper is this other one that we're just referring to that was involved in this attack um but ethereum itself does not understand that high level code that high level code is written to be easily understood by humans but what uh what ethereum under is much lower level instructions like add this move this over here flip these two bytes whatever and these instructions which are called by code or often called machine code these instructions have to be translated from the higher level language to the lower level language and that's what a compiler does it basically turns this higher level language into this lower level language and that's where the bug was that caused this re-entrancy attack in curve uh and that's why we're talking so much about Supply chains now part of what I want to discuss here as well is about communication around security vulnerabilities because that was also a lot of the drama that I was seeing on Twitter was not just that okay this thing went wrong and money was stolen but also the way in which this ended up getting divulged yeah seemed to have made things worse and I know a lot of security people have had strong opinions about the way in which people communicate about vulnerabilities and blockchain because it's not the same as it is in other domains um do you want to speak to this a little bit Lawrence yeah so like you know often when these things happen we don't have time to file a cve we don't have time to you know like we often if you're dealing with Anonymous teams you can't even find a contact to speak to and when there's something that's active in the wild not neutralized I think um it's it's just incredibly silly to talk about I think bantag talked about this like do not talk about live vulnerabilities until completely mitigated and there are a couple of um uh companies and you know like security ordered places that I I gen generally respect who um did the whole hey just by the way here's a thing that happens I think the first one that was it was jpegged this is an active problem with Viper here are some other places that are affected by the same thing and I just made in my hands and alchemics was attacked three minutes later if you've replicated that thing to start with it does not take you three minutes to just point at different addresses and head into a private mempool it was I think that's the thing I'm angriest about Miss like I I I said on Twitter that it was it was clout adult stupidity hit the two unseen and I I can see similarly the argument to go people should know I'm like no they probably shouldn't I think that maybe 30 minutes of silence while people worked out and let people argue I I realize I'm being a little bit contrary to my everything should be transparent but as soon as you make that transparent and it's gone there's an argument for saying just I don't know get a telegram Warren we have telegram chats for this we have eat security um people are talking can you can you take us a little behind the scenes when something like this happens okay let's say boom you hear that uh you know something has been compromised Viper blah blah blah no one knows exactly what's happening there's fog of War what happens like what is the chain reaction that happens behind the scenes that results in the telegram war room and who's in there the funny thing is I'm not going to give you the answer you want mostly because the processor talking this means I will never be invited to another one there are telegram channels which exist and things form very quickly between as soon as you realize you know if it's a library that's affected or a particular protocol there's generally someone that's kind of proficient there are some people now that handle like the generalist side of things um you know like okay like we need to start communicating people we need chain Checkers Etc that's as much as I'm going to give you simply because I like helping out where I can and if I get told you're going to media and saying then that's it for me got it so there's a there's a Code of Silence among the people who are sort of the no it's weird because Code of Silence isn't the right thing to do but like you certainly don't want to say to anyone that would be kind of acting in a malicious way be like okay if I do this this is the timer that I have like this is the Playbook that I need to kind of be like no I understand I'm I'm kind of Poker fun uh I I think what's clear I think to most people who have been in the space long enough is that you know there's a group of folks uh presumably you're one of them who are these kind of security people and white hats who are kind of at on call basically when something goes wrong on chain figure out what can we do to mitigate what what is affected what's not affected how do we communicate this to the right parties and make sure that everything kind of happens it's it's it's it's a weird kind of distributed ethereum defense team yeah that often it's the same players who show up and and yeah on call to try to mitigate these things you flat to me I wouldn't necessarily call myself one of them anymore simply because I find myself busy with a child nowadays but like I said as you say right there are there are people that are around and are willing to help and so like there is there are security telegrams I think often within seconds of like a peck Shield tweet going up there are people chatting um often like you know there are protocols that are working in the back noticing and like you see it appear in like six places at once if it's something known what big one thing one thing I would point out though is that um I think you kind of need this radio silence more for these supply chain attacks because remember these supply chain attacks are like if it's a bug of assert that form every single thing that's ever been built with it is vulnerable at the same time versus if it's a specific protocol then it becomes something more like oh well all the forks are vulnerable and maybe the forks are just like it's like harder to do the attack because of the deployment you know there's a lot of like kind of nuanced reasons whereas when it's a supply chain thing of like this particular thing is always true for anything created in this way then it becomes like Much More Much More Much More Much More you know and and to speak to that I think we can to the degree that you can consider something like this which is all fun shouldn't have happened Lucky in the sense that like the blast zone was effectively constrained to two major protocols of which one of them you know was um out of the picture because of an older version of the compiler right so let's um let's let's continue on the story so just to just to kind of recap where we are so far so uh you know these old pools and curve were compromised because of this re-entrancy bug almost instantly because of somebody going on Twitter and basically saying oh hey look at this this is happening on chain and everything that uses the same compiler version seems also be vulnerable including these other protocols very quickly you had a bunch of folks jumping in and exploiting basically everything that was vulnerable um within minutes now one of the things that's happening on chain as kind of this on-chain background radiation is uh this this phenomenon we call generalized front running and so generalized front running uh is basically when you have these folks who are monitoring the mempool looking for transactions that may make money in any possible way they simulate that transaction as though they were the person submitting the transaction instead of the actual person submitting the transaction and if it'd be profitable for them to do so then they automatic automatically we'll submit that transaction and try to go faster than you so if you if you make a trade that's going to be profitable they'll try to front around the trade and that also means if you're going to hack something and that hack would be profitable as all hacks are or most hacks are again the useful ones um then they will do the hack instead and front run you on the hack and because they're doing this automatically most of the time these um these generalized Front Runners they don't know what they're doing they're just it's just running while they're you know at you know they're at a ball game or they're asleep or they're whatever and this thing is just like doing whatever it's doing on the background and so we had a very interesting Mev day uh where some generalized frontrunners ended up picking off some of the some of the hack funds that were otherwise being targeted by a presumably uh copycats Lawrence do you get a sense of what was going on here and and how that story played out I've been busy watching and talking to some people at some of the other effects protocols like alchemics when I realized that curve had been um hit for the first time and then I noticed that uh said coffee babe uh God bless coffee Babe by the way if you ever watch this um had intercepted I think five million um out of the out of the curve attack I think one of the things that before I go a little bit further into this I think one of the things I find really fascinating um and I I say this a lot on Twitter is that it's incredible that it's still basically a coin flip between whether someone who's performing an incredibly complex attack be it at the protocol level albeit as we have here somewhere less than that you know maybe someone's Apes the vector whether they have the sophistication to change their ethereum RPC to a flashbot thing or not so you know you get people who are still going here is here is eight figures of of crime that I'm about to do let me broadcast it into the public mempool it's one of these incredible like incredible skill and then you know robbing a bank and then like stopping at the red light it's it's it's baffling to me I'm grateful that they're doing it because we have wonderful situations like you have searches that are intercepting these things and as people will have seen I think there was a lot of chat about oh you know Mev search a coffee babe picked up a bunch of it and others have as well I think there's a lot of credit to other people as well such as and so on and so forth I'm not going to name them all wonderful work who went okay you know I've got this I'm going to return it to you know the address of my and then chat and say okay I've picked this up where does it go and I think like a large chunk of it has gone you know back to I think metronomous received a bunch back um because they were hit as well as Pendle and um I think like I think there was so hang on it was jpeg matched on Pandora alchem X the curve pool debris and Ellipsis were all hit I think a lot of some of those were all like you know yeah have it back which is great I I think this is a weird offshoot of white Hattery where someone has effectively sleepwalked into millions of dollars and just goes now I'm right Chief you take it back it is it is really beautiful and in a way it's a testament to the culture that ethereum has that you've got these people who are you know effectively kind of built from the same material you might think as like hedge fund magnates who are you know just ruthlessly out there competing every single day for every you know iota of expected value but then when something really goes wrong they're like hey you know everyone's gotta everyone's gotta buckle up and and defend ourselves against the uh the real attackers which are of course the the folks who are hacking the thing in the first place so I thought it was a beautiful little vignette and also for those of I imagine many folks have never heard of generalized frontrunning um but it it in situations like this it ends up becoming an important part of the story so okay let's move on to the the financial part of the story okay so so far we've been talking about the role of the technology the mechanics I know I know there's there's it's it's such a I love how multi-layered the story is even though it's obviously a [ __ ] tragedy thing yeah but it's also a very teachable moment I think for defy and and cyber security on this taking place obviously people pulled a lot of money at a curve and the value of CRV the native token of curve went down quite a bit uh and so it you know it dropped more than 20 over the span of uh you know a day and a half and if you remember from a previous episode of The Chopping Block we talked about uh Michael igorov who is the founder of kerf and he has a very large amount of curve that he owns on chain against which he was borrowed a lot of money and purchased a lot of real estate in the real world and so presumably uh he is he has a limited liquidity profile given how much he's balling in real life and as the value of this curve has gone down in addition to just what's happened broadly with D5 going down over the last year and you know many of these tokens getting hit um he was already extended pretty far in you know if you recall I think it was Ave at that time that originally he was uh at the risk of getting margin calls now all of a sudden with the value of CRV going down 25 plus and threatening to go down even more as not only are people worried about oh my God Is there going to be some you know uh death spiral that's happening here but now the fear is okay will will Michael igorov will he exacerbate that liquidity spiral causing CRV to just you know basically get get vomited out into the market when his massive positions get liquidated um what is that going to do to Ave what is that going to do to frax which are all places where he's also borrowed a significant amount against his CRV Holdings so there was a basically a kind of mass contagion of fear uh as as CRV started getting hurt worse and worse as people started realizing this and further in some ways you know many people shorting CRV to try to facilitate this and bring it on and say Hey you know if we if we just get it to hit this threshold boom we can kind of knock his position entirely over and and you know kill CRV what Michael ended up doing is he went OTC because of course there's nowhere near enough liquidity for all the CRV that he owns um struck up a bunch of CRV deals I'm sorry well not anymore now the kiosk not anymore yeah that's right that's right yeah once upon a time once upon a time there were people willing to buy and sell CRV um he ended up striking deals with Justin Sun DCF God and DWF Labs among among several others uh to basically sell them OTC big chunks of CRV to give him liquidity in pretty significant discounts to Market with very small lockups so that he could repay a bunch of his debt and lower his liquidation thresholds so I think now it's pretty safe to say that we're out of the woods on that front last I saw his uh he was he was pretty close to uh I want to say like the liquidation price was pretty close to like 40 cents now it's closer to 30 something uh just because he's repaid so much of his debt on Ave fraxland and on Abracadabra yeah so I think he's I think things are looking much safer now uh correct me if I'm wrong if anybody's has more up-to-date numbers as his biggest vault is on Ave and Connie has a health factor of 1.69 which is much better than it was yeah the big issue though is you still own so much of the circulating Supply um there's like 900 mil curve outstanding and he owns what like three 400 mils something like that that's just like yeah yeah you know even if you you know get liquidated like there's just no amount of where's it going yeah exactly so it's like you know in reality you know I'll give you three FC fixes this and then they can limit bardos per asset type but like yeah I mean it's it's it's kind of a mutually assure destruction at this point to ruin and given that you were um involved with this Ave kerfuffle a few weeks ago what what's your take on this whole deleveraging situation yeah you know there's not too much you know a similar to Lawrence it's actually still somewhat uh there's still things going on so I probably will say Okay um but I will say you know we've spent a lot of time making proposals uh of trying to to mitigate this historically uh is this it I Told You So moment for you guys no I'm I'm this is more just a hey look we've made these proposals we've gone through this control if you had listened if you had only listened to us if you don't know it's more like you know I directionally is correct the things are kind of consistent but the the point of a Dao is that hey the Dow can be like we don't want to do that right so anyway I'll you know we put up another version of some of our old proposals we're gonna try to keep monitoring this I mean I think the emergency would have been if the fraxland interest rate so one thing that's worth noting is um fraxland so Michael had two big Physicians of course Ave is the biggest one and then the second one is was fraxland fraxland has sort of a PID controller style interest rates of the interest rate adjusts so the longer the utilization is high so the longer the funds are lent out the more the interest rate goes up the lower the entry funds aren't lent out vice versa with the idea that hey they keep increasing the interest rate then they can bring down the utilization which lowers the risk right so like imagine you're a lender in the real world you know you've lent out all your funds but now you're worried that some of your risky borrowers are going to default you may try to make the adjustable rates for your adjustable rate component go up because you want to compensate for those defaults um so that that's sort of the thesis of the way they're looking at this other way frac's land is designed but the problem is at the current time they were 100 utilization so the the interest rate just keeps going up on its own uh and there is a cycle between the two loans where one would you in order to keep paying like one would be draining faster because the interest rate's going up the other one's sort of constant-ish uh and you borrow against the the one that's constant to pay the one that's going up and that was where there was a lot of worry and Cycles uh of the things that could go wrong so it was interesting to watch people trying to to hunt him on frag's land you know because the way that worked was yeah people would deposit curve they'd withdraw fracts apy plus plus because of the PID and I think that was what yeah a couple of hours where people are just sitting there going like just watching ping-ponging between the two which I found fascinating like I mean I I have this like more qualitative thing uh question you know the the what if about you know we we talk about like the nature of using these little lending protocols they have long tail asset support for like the tax free leveraging of assets to borrow against them or the selling without doing as much and kind of saying that you know any bad debt that's incurred is not a me problem it's a you problem and I think today was the day where everyone kind of on mass responsible for things was like oh it's a knee problem like and actually started kind of like making efforts too to mitigate some of that they said I I think there was some pretty distasteful characters that were included in the OTC deals my personal take on uh on some of those people which I think I'm fascinated um you know I had 40 cents on the curve with a three six month handshake deal or you can sell if it goes up to 80 cents which I I found fascinating is kind of like this this weird locked in situation between a bunch of like big money about something which could be a massive headache for like the Ave in particular I find that it's it's so so I mean GCR clearly thought that something was going to go the way of the dodo because he added a bunch of ethereum single-sided on V3 and like aiming at like three to seven cents per curve I think I mean that might be psyops he's probably smart enough to know that wouldn't have happened with a liquidation because of chain link the way that it's it weighted towards Central exchanges but it was certainly a weird moment to see that happen hmm yeah yeah I I will say on the whole I mean it does seem like the Saga is coming to a close now I wanna I Wanna Give just a few minutes for us to kind of take the that are broader Reflections on on what it means a lot of the people I mean it was it was a wild 48 hours I will say uh very entertaining and many different angles to the story which is also part of what makes it so fascinating um a lot of people were saying that like oh I mean this this kind of shows that defies and all that it was shocked up to be and that it means like you can't really trust this stuff because you know curve was one of the biggest and everyone trusted it and blah blah blah um I I do like to remind people that look I mean the the curve pools that were affected were all a very tiny old pools that were kind of third-party pools um you know the the main curve pools themselves were completely unaffected by this and on the whole curve had what three billion in tvl of which you know roughly 30 something million was actually affected by this bug and so it is and of course it you know pretty quickly people kind of came together figured out what was wrong and you know with with a few caveats here and there uh more or less got to getting everything else back in order you know the the you know we didn't get a CRV Cascade we didn't get a bunch of bad debt proliferating on a bunch of protocols like people kind of came together and worked together to to help keep D5 resilient and I thought that was a great example of it's not always just about the mechanisms people talk about that a lot in D5 that oh these mechanisms they're you know self-reinforcing they're self-sustaining they're super powerful but a lot of it is really about how you build your uh your norms and the community and the culture um that's a lot of what kept defy safe is just the instincts people had about communicating with each other and working together to to help this problem from getting worse I prefer another way of looking at it which is uh in traditional Finance you can't really see all these positions you know I in some ways people are always like oh we should like have perfect privacy private defy already there's some sense in which you want these kind of bugs in public D5 fixed for you know discovered and dealt with first before you ever get to Pride defy in traditional Finance you already have the private thing but because you can't really prove any properties of what people's positions are you never really know if they're solvent or not you never really know the liquidity especially for more liquid things so in that sense you would not be able to identify you know the types of things we're talking about of like hey like someone is borrowing using their older loan to pay off their future loan until after it happens and in some sense that transparency is actually extremely useful for figuring out mitigations and also for you other users who are impacted by that to to adjust their strategies which you can't really do in traditional Finance I would say like you're usually guessing what other users are doing you're not knowing what other users are doing there is there is the trade-off though right because we also talked about the the adversarial nature of when you know when it's Unchained you can see the Stop and you know like kind of how to hunt it down and you can spread fun about this and that because everyone is kind of you know everybody was looking for okay what's the level that it's going to take for you know basically curve to have this kind of cascading uh liquidation spiral that is something that you wouldn't have in a completely private system so there's there's pros and cons it's not obvious to me which of those two is better but it's pretty clear right now that I mean it's not a choice in front of us really uh we we kind of have to go I mean D5 is defy and unfortunately we don't we don't really have a viable private version of it at least not yet yeah I said I one of my like favorite analogies recently is talking about kind of flashbot rpcs as dog pools and the analogy of like Trevi and it'll be interesting to kind of see like you know the way that which kind of as we start getting kind of more base level privacy the way in which stuff starts splitting off into different things that's kind of a kind of a auxiliary interest of mine recently um I said like I mean I'm working personally on trying to do stuff like bringing kind of deals on chain and like kind of walking the walk in terms of D5 and the degree to which I think maybe that just adds signal instead of noise is yet to be seen I I it fascinates me although I am not as big brained as uh people like uh torenia who you know look at this stuff for a living I I would like to see more private D5 though I mean it is it is clear that uh especially for large players I mean Michael igorov is probably what you know the primary example of somebody who would benefit at least from his perspective from from having some Financial privacy yeah um you know having having viable forms of on-chain privacy I think would be a big Boon too I'm certainly not saying that you know obviously I I I should add some addendum I I certainly think it is necessary um but two things to remember is finance is never ever can never be fully private there always is some public information right like a price a rate uh something has to be public for people to trade on some set of metrics and those metrics have to leak something about the actual underlying assets and so there's always this trade-off but the real question is you know how can you make these things stable and I would I'd rather learn the mistakes with the fully transparent public stuff before going fully to private yeah I think that's this is going to you know we have this now library of these mistakes that to avoid well we have a library but they've not been collated anywhere that's the thing like I I wrote last year that you know we whenever we see um an error like this um if it's novel um oh sorry if it's old hat like if it's a repeat of something then everyone just gets like strips torn off of them if it's novel then people within like 48 hours will confidently assert that anyone could have seen it and only like the malicious or the novice would have overlooked it we saw it even happening at the Dell we've we've started seeing it now with the Viper um incident and I think I one thing I'd like to bang on about like is kind of someone some group of us need to kind of like put the book together of the what do to not you know like A Hitchhiker's Guide to not getting wrecked at some level and I don't think it's ever going to exist so the the the nature of security much like the nature of finances it's always this cat and mouse game yeah whatever Edge you have is it's hard to make public so anything that gets written is always a bit post talk and like never as kind of can be written in the moment and I I think that's in that's sort of the thing you face here but the transparency means that the documentation is there right it's it's it exists right just think about how many financial crisis must have existed in the world where there is basically no recollection or documentation of the cause or the solution uh I bet you there's a lot of those in many countries and in some sense at least here you have the chain as the the form of reference forever yeah I uh I think it would be very entertaining to read the history is also the the big hacks in crypto but I think tutor's point it's kind of like you know it's like like rules are are Written in Blood and I think that's kind of true for crypto where you know after any new novel hack like people change their um auditing practices and testing practices and security practices and what we sort of consider safe and stuff gets better over time even even the concept of Viper having a library for let's read agency guard like yeah it would have been a thing like you know uh I guess it was like six seven years ago and and so the stuff like as we sort of learn about different ways of attacking um I think we sort of you know as an institution um build those sort of natural antibodies but it's not uh in a sort of implicit way instead of an explicit way it it did make me reflect to be honest that um I feel like working in crypto this long has broken my brain because on Monday well I know on Monday when I saw that curve was hacked and I was like oh [ __ ] how much was it hacked for and it was like oh 30 million I was like oh it's fine yeah my phone number I'm not yet I sleep yeah exactly exactly and I looking back looking back on this from like where D5 started when like literally all the money in D5 was about 100 million dollars I don't know it does feel like security has to get simpler like it can't be I mean to your to your point Tom of like all of the you know the sort of uh the earned knowledge that is kind of tribal and as you know the the um you go through the Maze of all the decisions you can make building a protocol and at some of those Corners they're just you know bones of protocols that came before you that [ __ ] up in that particular way uh it can't it can't be that it's that tribal uh the knowledge of how to build things safely in D5 like that that aspect of it has to get better and I don't know uh I don't know how much easier it seems to be getting it seems to me the answer is more and more that it's not easy and it's going to stay not easy and instead we are just kind of uh investing more and more eyeballs resources and security into the few protocols that are super super secure and everything else we're kind of you know it's it's just coffee item tour and that ultimately means that there's I mean part of that is just that few things really have product Market fit in defy but the other side of it is that it's it's almost even harder for something new to get that product Market fit when there's such a gap in security between things like uniswap and curve and you know the next protocol that that just is new on the Block uh if you had another hour to spare I would uh give you my um Soliloquy on uh the uh the tactics and techniques of our auditing firms and D5 nowadays but uh I don't feel like getting canceled by some of my friends so they'll have to wait now I really want to hear that we should really talk about the bald stuff though should we all right I could probably fit in five minutes I was just like looking at the clock and I was like I'm gonna let you give the exposition for balls given that it's the best story as many of you know coinbase is launching a layer two protocol called base I believe on a prior episode of this here podcast I quoted a tweet that I saw that described it as binance smart chain for white people which got me canceled on LinkedIn but not Twitter which should tell you everything Laura I believe Laura posts these on LinkedIn I remember I saw some comments that were like okay got it I don't know if they were like directly in her in her thing or some other thing but I think she doesn't tag me on them which I'm very grateful for I I kept getting tagged in these things of like the synthetic I was like hey I'm just reading someone else's tweet I think it was a tuba special I'm pretty sure it was him yeah yeah um and so base has been launched and sort of like developer only mode like you know the chain exists you can sort you can Bridge onto it uh layer twos that are optimistic of course have this withdrawal period so you you have to wait to get money back um but um I guess in honor of the fact that the people who have are in trials with the SEC are bald or the ones who win I forget exactly what the meme is do you guys know but why is Armstrong yeah I'm sorry gotta be gotta be confident when the guy at the top is bald that Boulders are yeah strongly there's a great meme like like you are with this show with haseeb right you're very confident yes exactly exactly so someone made a meme coin called bald and they deployed it and of course we have this fervor of 50 60 million dollars moving into base which sort of it was meant to be a developer test that not totally meant for real funds um but you know you can't stop the Apes when they ape so all this money went in and then the the deployer developer sort of rug pulled the the people in some ways I think they're still debate as to how much of that is true but once that happened you know what happened was what always happens in these crypto scenarios where something awry happens whether it's the curve thing whether it's this there's this community of these people on the internet who are just constantly sleuthing and trying to figure out like what they can about an entity an address a set of assets on the internet and uh it turned out the ball deployer is uh very connected to have done a lot of seven figure trades with Alameda had made a lot of posts on the dydx forums about how they should change their incentives uh had clearly been doing algorithmic yield farming for a while and not like manual you could tell from some of the rebalance moves and it was sort of a thing that was like this is a more sophisticated person how are they so dumb to deploy off this address that has so much provenance then that led of course to the Natural SPF deployed uh meme which I I don't think is true no um but there are of course a ton of ex-alemia employees who could have very easily been this entity and that's that's where I suspect it is uh so well the deployer has come back now posted I think about an hour and a half before this I realize you've got your your hard stuff let's come back now saying as soon as there's another deck that works we're going to put more liquidity back and any profits are going to effective altruism uh uh like non-profits no certain non-profits because I'm not profitable so I'm looking forward to getting paid by the media associate but of course I mean this is this is psyops you can't fool me I am familiar with your game uh ball deployer it's well the best part was I think there was another meme coin launch today called hair which is yes there's also [ __ ] balls that yeah there were loads [ __ ] board was a honey pots um and then of course like leech itself went down because of an exploit because it was solidly thought code it's it's been an auspicious start for bases developer only mode um I'll say that much I don't understand how a developer only mode how you can ape into a developer only mode is made it harder they just made it harder there's no ux whatever it is it is functionally running it's just that there's no none of the Creature Comforts of like easy to do for metamask yeah to a contract on Main Nest it would do a self transaction and you're like well that's not a barrier this whole thing reminded me of when uh during 2021 in the peak bull market there were like all these Tick-Tock influencers teaching you how to use change your RPC to finance smart chain and like go farm things like what was the thing that that would have a safe moon right I think that was one of them oh God we need a safe moon on base I'm telling you now but someday you're gonna be telling your kids about the days when you had to manually change your RPC to uh to use another chain I'm getting can I get called a boomer because uh do we sound like the people who talk about the dial-up sound I feel like yeah that is absolutely who we are I got into a discussion with someone the other day in like the era pre-flashbots about using gas price auctions to get into stuff that it was all public and someone yeah I got called a boomer on shame this was devastating to me you live long enough you live long enough with that I think I think the Boomers we didn't even get a chance to talk about hex getting sued by the SEC but maybe um maybe we'll we'll cover that at some point but for now uh we got we gotta log off thank you everybody and we'll be back next week thanks Lawrence hey everybody yes everyone thank you very much [Music] 