[Music] foreign welcome to Unchained your no hype resource for all things crypto I'm your host Laura Shin author of The cryptopians I started covering crypto seven years ago and as a senior editor at Forbes was the first mainstream media reporter to cover cryptocurrency full-time this is the March 28th 2023 episode of Unchained buy earn and spend crypto on the crypto.com app new users can enjoy zero credit card fees on crypto purchases in the first seven days download the crypto.com app and get 25 with the code Laura Link in the description web 3 projects lost nearly 4 billion dollars of crypto Assets in 2022 but nothing is more expensive than losing trust secure your company with holborn's best-in-class security advisory Solutions visit hallborn.com for more today's topic is zero knowledge technology here to discuss our Ali Yahya General partner at a16c crypto and Dan Bonnet professor of computer science and electrical engineering at Stanford University and Senior research advisor at a16c crypto welcome Ali and Dan it's great to be here thank you Laura thanks Laura let's start with each of your backgrounds Ali how did you come to be General partner at a16c crypto sure I'll give you a quick uh a quick rundown of my story I was uh born and raised in Mexico City I was always into Tech from an early age I was always into computers and I knew I wanted to come to the US so I came to Stanford I studied computer science uh focused on computer systems computer security computer networking and actually in 2010 I was doing computer security research under David mesiares who's a colleagues of dance and a professor at Stanford and that's when I first discovered the Bitcoin white paper which was actually too early to discover it because I mean 2010 this was very early it was very easy to think that it was just a toy which I did and so even though I mined it and played with it I didn't I didn't really keep track of any of the private keys for anything that I mined so that was my first very visceral lesson in crypto and that was seared into my memory thereafter especially in 2013 or so when I started to pay more attention and it started to dawn on me how important technological innovation uh was at the core of Bitcoin I was super interested in the space since then it was hard to actually work full time in the space and so I was I actually took a job at Google X working on machine learning for Robotics and then moved over to Google brain where I did a little bit of the same and throughout this time I got fascinated by by ethereum and was thinking about it and playing with it nights in week weekends and then finally in 2017 I got connected to the firm uh to Chris Dixon who had been investing in crypto for a long time and had had started the practice the crypto investing practice here at the firm and back then it was all still kind of Consolidated with the main firm so hit speech to me was you should leave Google you should join us and we should start a crypto fund so this was before the kind of the proper crypto fund really existed and so I joined we kind of saw eye to eye about just about everything so it felt like a like a great opportunity I joined in 2017 and in 2018 we started the first the first crypto fund we recruited a number of other people and that team like just me and Chris grew eventually to now include something like 80 people or so like the full crypto team is has become a much bigger effort within the firm and it's been quite a ride so that's that's a quick rundown of my story um I'll pass it over to the Dan great thanks Ellie um let's see so uh I fell in love with that cryptography pretty early on you know it's a field that involves beautiful mathematics and people really care about the result it's applicable in the real world so how can you not fall in love with cryptography the wonderful wonderful field to work in and then I've been a professor here at Stanford for uh well let's just say a long time I focus on cryptography computer security blockchains and things and all things like that I teach all the classes on those topics here on campus um I'd say about a decade ago my students started as asking me about this thing called Bitcoin and we started looking into it and we realized wait a minute this is like an incredible application of cryptography yeah and so I kind of Switched gears to kind of work on blockchains uh or at least kind of applications of cryptography to blockchains and it's it's been so much fun I can tell you the past the past decade I um it's the most fun I've had uh in my entire career just because there are so many new problems you know the blockchain sort of opens up very new challenges in cryptography it's very interesting questions to think about and not only is it interesting to think and uh develop ideas to solve these problems people really care they take these ideas and deploy them and they're then used in the real world to protect real assets so it's been so much fun to work in the space that I've I've you know I've just I really really yeah I feel the same way out of 25 years of doing journalism the last date covering this space has been definitely the most fun there's just no question actually one thing that maybe I'll add quickly is that when people ask me what I work on that I like to say that I work on the science of blockchains and there really is a lot of Science in in the area of blockchains which is basically all the underlying technology that makes uh blockchains possible so it's really kind of an amazing area with lots it's very interdisciplinary with and there's like room for anyone yeah Dan what you say is the it's a basically it brings in aspects of cryptography distributed systems mechanism design and Game Theory meconomics even political science with questions of governance it's just kind of hard it's actually hard to find a scientific field that is more interdisciplinary than crypto and blockchains in particular and I'll say that even the community is very very uh inclusive in that anyone who has an interest in contributing they'll be heard and uh they'll be you know they can make a they can make yeah it's funny because sometimes people will ask me like how to work in this space and I'm like everybody that works in it was doing something else before so I'm sure you can figure out a way to contribute our topic as we mentioned is zero knowledge technology which is also actually quite multi-disciplinary and um people in the blockchain space are super excited about it for a number of reasons um such as privacy and scaling among other things um but let's start by defining a bunch of terms so let's just actually explain what zero knowledge technology is or zero knowledge proofs are maybe I'll Define it in in two steps uh the first step is what we would call generally a proof system a succinct proof system uh sometimes these are called snarks succinct non-interactive arguments of knowledge is what this stands for and what it allows you to do is basically it allows approver to convince a verifier that a certain fact is true yeah and the amazing thing is that no matter how complex the fact is the proof that the fact is true is going to be succinct which means that it's very short and it's very fast to verify so I can take an incredibly complicated computation and the prover will be able to generate a succinct proof so it's fast it's so short and fast to verify it's a synced proof that the computation ran correctly the verifier can easily be convinced by checking the proof that the computation ran correctly then things will will proceed yeah so this is the concept of a succinct proof system again what's called a snark a succinct non-interactive argument of knowledge so that's just for uh proving that a certain computation ran correctly when you add in zero knowledge to it not only do we want to prove that something uh worked correctly we also want to prove it in zero knowledge which means that we prove that it's correct but we reveal nothing else about why it's correct so there could be Secrets involved in explaining why something is correct but I can prove it to you without revealing those secrets and I guess the classic I have to give the classic example we can't not give the classic example which is you have a puzzle I guess people always like to give the example of a Sudoku puzzle and I want to prove to you that I know a solution to the Sudoku puzzle I can do it in zero knowledge meaning that you'll be convinced that I know the solution but you'll know nothing about what the solution another example was in this wired video that was in um the zero knowledge Canon that you guys sent me and he explained it to uh like a 10 or 11 year old he said okay I have this image here and it's a bunch of penguins but there is one Puffin in this image and I know where it is and the way he proved it to her was he had a bigger piece of paper that had a single hole in it and then he moved the he put the image of the Penguins behind the paper in such a way that only the Puffin would be visible in that little hole and so he proved to her that he knew where it was without revealing anything about where it was um and I just thought oh wow what a what a great analogy well interested I think both of those examples highlight both the Privacy aspect the zero knowledge aspect because you're not revealing the actual solution but they also highlight the succinctness aspect in that both of them are really efficient to verify that you actually as the person who's receiving this zero knowledge proof can very immediately know that actually yes the person who is proving this fact to you does in fact have the answer and in the first case in the case of the Sudoku puzzle it's it's it's usually the case that verifying that a Sudoku puzzle is correct is much faster than actually solving the Sudoku password so it's succinct in that sense and then same thing with the cutout of the Puffin penguin cutout you can actually see the penguin that has the right color through the cutout and so you know that it exists but you don't know where it is and you can do that efficiently and and sort of verify that that proof is correct very quickly so one other aspect of this that I want to explain for people is in the process of creating one of these there's different entities such as the prover and the verifier can you explain those terms yeah maybe maybe just a step back one second again I think it is kind of important to understand that there are two separate Concepts here one is this concept of a succinct proof I just want to prove to you that something is correct there are no secrets involved I just want to prove to you that something is correct like for example that um you know the following solution to a Sudoku puzzle is really a valid solution to the Sudoku puzzle there's no secrets I just want to prove to you that something is correct and the point is there should be a short proof that's fast to verify no matter how complicated the computation is that's one concept so here there are no secrets and then an additional feature that you could add on is the zero knowledge feature which you could say not only do I want to prove to be short and fast to verify I also want it to be zero knowledge yeah those are so that reveals nothing about why the statement is correct and those are two it's kind of important to understand that those are two separate Concepts and so yeah so there's a the the players in the space are the proofer and the verifier as you say there's a third player which We'll add in just a minute uh so the prover is the one that is producing a proof that the statement is correct that for example the computation ran correctly and the verifier is the one that is sort of limited in compute power and it needs to be able to verify the statement that it needs to be able to verify the proof very very quickly and so that's those are the two players there's a third player which is uh sometimes called the setup player which is also which is used or maybe the uh sometimes it's called a pre-processing player which is which is used to sort of set up the system uh so that the prover and the verifier can actually one can generate the proof and the other one can verify it and so those are the three players in the system but we'll primarily focus on the proof and then in my research I also came across the proof generator is that different than improver or or the same that's the prover yeah proof generator approver yeah okay and one thing that I you know I kind of wondered when I was researching this is so if there is this one prover then does that mean that when you use your knowledge technologies that there has to be an aspect of centralization involved not at all not at all actually that's a wonderful wonderful question so traditionally when the approver wants to prove that the statement is correct it is true that the single approver will generate the proof but in fact uh just in the last two or three years as this concept called a collaborative proof that allows a collection of provers to jointly generate a proof that a certain statement is true so imagine uh imagine there's the each one of the provers knows one aspect of why the statement is true think of like the big elephant and each prover only has one side of the elephant yeah and together they want to jointly prove that what they're looking at is an elephant yeah and so it turns out even that as possible that's called a collaborative proof where they jointly they talk to one another through what's called a multi-party computation and together they're able to generate a proof that the statement is correct using the combination of their of their Witnesses nobody reveals anything about their witness other than the fact that the statement is true overall yeah so there's usually we do talk about a single proverb but that's not inherent in the concept yeah we could actually have multiple proofers and in the cases where where you do have a single prover even though there's only one individual or one entity that's generating the proof it's also the case that they are not really able to falsify the proof and that the work that they're doing has to be correct by construction the proof ultimately guarantees that whatever it is that they are responsible for doing whatever computation they're responsible for running will ultimately be correct and so even though in that case you could say that there's a central entity that's doing the work there's very very little that that entity could do to try to subvert the system so the centralization isn't as bad as it would be in the case of say like a consensus system where if it were controlled by a single entity that centralized entity could essentially take control of the whole system or sort of subvert the system in some meaningful way okay one other term that I want to find is also there's ZK Stark star so how is that different from a z case yeah so Starks are basically a particular type of proof system yeah and so typically at least that's that's how the term is used so a snark is basically I would say snark or a ZK snark is uh kind of the umbrella term and uh what's what we now use the term Stark as as a way to refer to a particular uh type of proof system an instantially a particular instantiation of a snark okay so let's also now talk about why it is that there's so much Buzz about this now like what developments have we seen in recent years that have enabled zero knowledge technology and zero knowledge proofs to kind of it feels like they're almost on the precipice of you know some kind of Tipping Point or something oh yeah so this is that's a that's a great question I mean the question is always like why did it happen now why didn't it happen Why didn't it take off 20 years from now or 20 years ago or 20 years from now like why why now why at this particular time and I I think snarks and generally zero knowledge proof systems or proofs systems in general is a remarkable success story for the theory of computer science yeah this is an idea the idea of proof systems and zero knowledge proof systems that idea dates back to the to the 1980s it's not a new idea dates back to the 1980s but for many years it was considered this theoretical thing that a is not clear exactly where it applies and B it had performance issues in that it was it looked like it was quite difficult to do very to comp to generate uh proofs for very complicated statements yeah and what's happened over the last couple of years is first of all this became like a pretty critical enabling technology for blockchains it's important to understand this that like for blockchains to evolve to the next level they need they need these these proof systems yeah they're kind of a pretty critical enabling technology for blockchains to continue to develop and so what's happened is uh there's a lot of effort from industry and from Academia of course to try and make these things as practical as possible I want to mention that like in the early 2000s 2010s or so around 2012 2013 there were a couple of critical results that that basically showed how to improve these are algorithmic results this showed how to improve the provers yeah so better algorithms for generating proofs uh in particular what happened is prover time used to be quadratic in the size of the statement which meant that we can only do proofs for relatively small statements and that was reduced to linear or quasi-linear in the early 2010s yeah and that the fact that it that now all of a sudden we have linear time provers that actually enabled us to uh uh you know develop proof systems that can do proofs from much more complicated systems and that is what made it practical and then of course what happened is all the commercial need for these things meant that there's a need to develop uh you know platforms and Frameworks that make it easy for everyday developers to use these systems and as a result the field kind of literally just took off over the last couple of years and I think Ali would agree that these days we can do things in proof systems that just a few years ago looked like some science fiction I mean this is like unbelievable unbelievable advance that we've seen over the last couple of years I mean there aren't that many examples of Technologies where you know five ten years ago things that look like science fiction are now completely completely possible yeah and that's really the massive transformation that has happened and that is due to both both uh theoretical contributions and and the fact that blockchains need these Technologies to continue to evolve yeah it goes to the show I think like the rate of improvement that you end up having when you have a whole ecosystem of startups working closely with researchers in Academia to make all of these things much much much better than they used to be and that is that is largely because uh zero knowledge proofs or ZK technology is kind of like the Holy Grail cryptographic primitive for blockchains and I think it's actually worthwhile explaining why that is and I think it it pops out of the definition that Dan gave at the beginning which is that I mean one of the uses of zero so knowledge proves is to prove that the output of a computation is correct and one of the things that your listeners may already know is that a blockchain the best way to think of a blockchain like ethereum is as a computer and this is a it's a computer that is controlled by a broad and diverse Community which is to say that it's decentralized and the way that a blockchain like ethereum guarantees that the computations that run on top of it are correct today is that every node in the network has to run every instruction of every computation that users submit to this computer and of course that's a very inefficient process it's what causes blockchains to not really scale at least not in the form that they exist today and it's also what makes zero knowledge proof such a perfect primitive to solve this problem because with zero knowledge proofs what you could do instead is have any one node run the computation and generate a proof of its correctness and then because that proof is succinct which again means that it's small and it's very fast to verify every other node in the network can just verify that proof without having to do the heavy lifting of actually running the competition themselves and so because zero knowledge proves have this beautiful application to blockchains they have improved dramatically over the over the course of the last five years or so by many orders of magnitude like the prover generation costs are much lower than they used to be we've got much better algorithms we have optimized implementations of um of some of these algorithms and then we're also starting to see Hardware acceleration for all of these things such that it all becomes so much better and it's now becoming feasible to reimagine what a blockchain might look like in terms of zero knowledge proofs now that they were available and that's maybe something that we can dig into I think it's an exciting application of zero knowledge proofs to this space and we haven't even started to touch uh the ideas of privacy which is a whole other kind of interesting section that we can also discuss but actually let's go let's build on that actually if it's okay Laura I'd like to actually I think what Elise said is like a fantastic way to introduce rollups so so let's build on that just a little bit in that really the application the reason why proof systems are so useful for blockchains is that they fundamentally enable us to Outsource computation to and out into an external server yeah so you can think of a blockchain as Elise said the blockchain is a computer yeah you can think of it as a it's like a computer but that will run arbitrary programs the problem is that it's a very slow and very expensive computer to run yes and so just to keep you know you always have to keep in mind ethereum can process like 15 transactions a second so it's a computer but it's a slow and expensive computer and so if we ask this computer to do a very complicated computation we're going to run into trouble because it's going to be it's going to take a long time and it's going to be very expensive to do so what we'd like to do is we'd like to move as much computation off this computer as we can yeah and in fact there's massive industry effort and just getting computation off of the blockchain right so the blockchain can just do as little as possible because it's it's it's such a um you know a slow and expensive computer and so so when we talk about Outsourcing computation you know we'd like the computation to run on some external server that's like you know fast and cheap to execute the problem then is how do we know that what the server told us is correct right so the server is going to push the results back to the blockchain but how does the blockchain know that what the server computed is actually the correct result and that's exactly where where proof systems come in right so birdproof system let us do is they let us move computation from a slow computer onto a very fast one that fast computer will compute the results and will also attach a proof uh you know to that result and that proof is going to be short and it's going to be fast to verify so that when we push it onto the blockchain the blockchain can Now quickly get confidence that the result that it's looking at is is correct and everything follows from that from that by the way I'll say that it's not just blockchains that can benefit from from these proof systems also you know if you're if you need to do a computation on your on your wristwatch right your wristwatch is not a very powerful computer it's the same principle you can move the computation to a fast server in the cloud and the server can generate a proof along with the result to convince the watch that the computation is correct and really a lot of the applications follow from that and Ali mentioned ZK Roll-Ups which allow you to process many transactions right so we can take a thousand transactions have a remote server process those thousand transactions and produce a proof that they were processed correctly and now we just push the proof onto the chain so now all of a sudden every transaction that's sent to the chain actually corresponds to a thousand transactions so instead of 15 transactions per second now boom we're at 15 000 transactions per second yeah and that's where the scaling comes from comes from but there are many other reasons to push computations off of the chain and uh maybe I'll mention them quickly and we can come back to them later it turns out when you come to to bridge between blockchains building a bridge between different blockchains there's a need to push computation off chain it turns out if you're doing complicated Financial modeling that you'd like to do on the Chain it makes sense to do the financial modeling off chain and push proofs on chain and so this idea of Outsourcing is a very powerful full idea it really allows the blockchain to do things that it simply can't do today and that's again that's why this technology is such a critical piece of technology for the continued evolution of of ethereum well one application that people are also excited about is just straight up ZK EVMS um and I wondered what your thoughts were on those I think around the time this comes out polygon will be releasing its zero knowledge ethereum virtual machine is what that means evm so what what's your take on CK EVMS yeah I mean one way to think about a ZK VM is as a as an instance or a way of implementing what we've been describing namely a zero knowledge roll up where you have some way of proving evm bytecode computation using Azure knowledge proof that can be outsourced from the layer 1 blockchain to some faster computer as Dan was saying something something that that can actually perform all of those competitions off chain produce a proof for them and then push them back to a one and then have a one just verify the resulting proof very efficiently and a ZK VM just just suggests or just alludes to the fact that it should be backwards compatible with the evm that you should be able to take a solidity smart contract and compile it down to the evm and then have the resulting bytecode still be provable by the ZK rollup so it's one way of essentially scaling like I think like like uh the interesting just to step back the interesting thing about zero knowledge proofs is that it unlocks this whole new design space for new architectures uh for blockchains that are able to scale better than existing blockchains one approach is this ZK roll-up approach which is a combination of a layer one like ethereum plus a layer two like polygon as you mentioned and there are many others like matter labs and scroll and there are there are many other other projects that are working on similar approaches which essentially Outsource the competition to a sequencer sequencer is a faster computer that performs all of those computations and produces the proof other approaches might include re-architecting the entire blockchain from scratch so instead of having an L1 like ethereum that already exists and attaching an L2 on top you could build for example a blockchain that's sharded and this goes back to many of the attempts from uh 2017 and 2018 to build the sharded blockchain but the difference now is that zero knowledge proofs are much more efficient so the problem of building a sharded blockchain has gone much much easier because before the challenge was if you have multiple shards multiple interconnected blockchains that are somewhat independent from each other how do you know that the work that the other Shard did is correct and before in 2018 there were all of these kind of game theoretic solutions to try to get at a solution but now because of zero dollars proves again you can do the same thing have one Shard have the nodes in one Shard generate proofs for the computations in that Shard that other shards can then verify to the problem of securing a multi-shared system becomes much easier and that would be a completely new architecture that could that is now possible that may have not been possible before and it might also be compatible with the evm and so technically would be another instance or another form of a zkevm another architecture might actually as I mean as Dan was was eluding you you can actually have the computation be done either fully on chain in a data center or you could imagine the computation be done on the client like uh you might you might not have a server at all and you might have the browser or the phone do the competition associated with the transaction that is submits to the blockchain on the phone and then submit the transaction together with its proof to the blockchain and then have the blockchain simply just incorporate it such that you don't even need something like a like a sequencer or a server that that generates the proof essentially the user can become their own prover so that's that's just to illustrate that there are many new kinds of architectures that have become possible and they will be coming increasingly viable as the technology improves some of which will be compatible with the evm and therefore deserve the moniker zkevm and some of which might actually take a completely different approach it might not be backwards compatible it might be better in other ways sure and maybe I could give you also an example because this is what you asked is such an important question maybe it's worthwhile going through an example in that suppose you know suppose you have a program that you want to run yeah so typically in if you want to run this program on the ethereum computer you would run it you would write it in a language called solidity which I'm sure many of your listeners are familiar with and then you compile it to about to byte runs on top of the evm right the ethereum virtual machine it's on this program right one thing you can do is you can just send the program to the blockchain and then have the ethereum blockchain itself execute the program but the expensive right because programs take could take a while to run and and and and so on so this could be again it's a slow and expensive computer so that could be expensive what's cool is that now we can actually Outsource the competition of this program we can Outsource it to a remote server yeah so the remote server will actually execute the the evm byte code that you give it yeah it will produce a proof that it ran out correctly and then push the proof onto the chain so the chain now instead of running the actual program that it's supposed to run all it has to do is just look at the proof verify that the proof is correct and then it trusts that the program ran correctly so you're able to move computation a lot of computation off chain to this remote server and that's exactly what these uh succinct uh proofs enable you to do all right so in a moment we're going to talk about privacy applications of ZK technology but first a quick word from the sponsors who make this show possible join over 50 million people using crypto.com one of the easiest places to buy earn and spend over 250 cryptocurrencies new users enjoy zero credit card fees on crypto purchases in their first seven days with crypto.com earn get industry-leading interest rates of up to 14.5 percent on over 30 coins including Bitcoin earn up to 8.5 percent on stable coins with the crypto.com Visa card you can spend your crypto anywhere enjoy up to five percent cash back instantly plus 100 rebates for your Netflix and Spotify subscriptions and zero annual fee 3.8 billion dollars of value was stolen from crypto projects last year due to compromised private Keys exit scams flash loan exploits and other preventable causes halborn offers preventative Security Solutions for every stage of your software development life cycle from Smart contracts layer 1 and devops audits to Advanced penetration tests risk assessments and incident response with over 150 industry Partners including Anna mocha Brands Solana foundation and Ava Labs Auburn's best-in-class security advisory Solutions ensure the safety of company assets and user trust visit hallborn.com for more back to my conversation with Ali and Dan so there's been a lot of activity also in applying ZK technology to privacy uh to these very public blockchains uh which you know unfortunately some of the criminals um in the crypto world have unfortunately realized that yeah it's really not as private as they thought so what are the ways that we're seeing this technology being applied to privacy maybe maybe before we talk about we should probably talk about first the need for privacy right and so so right now blockchains are not private right at least ethereum is not a private blockchain in the sense that if you look at the ethereum transactions you can see exactly who's transacting with who you know that sort of fundamentally is not compatible with businesses right so if businesses like you know if if the university decided that they want to pay my salary in crypto you know everybody will see exactly what my my salary is right or if you know if a manufacturer wanted to pay suppliers and crypto everybody will see exactly how much they're paying for for parts that's fundamentally going not acceptable to businesses and so if the chain is ever going to be used for businesses there's a need for privacy private transactions right so that's kind of a a starting point and because people realize it's actually fairly odd fairly early on you know we we do need some version uh some privacy mechanism on the chain and there have been many many proposals and attempts and actually deployed systems to provide private payments uh on the blockchain let me actually also add a couple of other good reasons that why why privacy is important I think one of them is what Dan alluded to which is that if you wanted to run anything that's akin to a business using a blockchain system there's just no way that you could do that without privacy but there are also many other kinds of applications that aren't really possible uh without privacy that that are kind of independent of whether or not uh they have anything to do with payments or anything to do with running a business and a good example is a few good examples uh so there's this big category in the space known as decentralized social people building decentralized social networks things that look a little bit like Twitter but don't have a monopolistic Tech Giant in the middle that controls everything and that is able to censor any one user or de-platform any one user or control who you get to follow and not follow and instead has all of the relevant functionality on chain in a decentralized system such that users own their own data users decide who they get to follow users decide what client they install such that they can they can determine and decide on what recommendation algorithms are used for uh the feeds that they that they are exposed to and building something like that is possible with a lot of the technology that already exists but you could imagine that certain aspects of that might have to be private like for example the recommendation algorithms that the system uses it might not be a good idea for that to be fully public because if it were it could be easily gamed so you might want to have a notion of a private recommendation algorithm that is still verifiable right that you can still generate a proof for because people in the community would want to know that it's being sort of correctly applied and then it's not discriminating and that that could be one use of of zero knowledge proofs it could also be that maybe users want their data to be private in some way but still be able to prove aspects of that data to other users so decentralized social networks huge area of application for uh zero knowledge proofs and in particular for the Privacy aspect of zero knowledge proofs another application area is is that of gaming there's a very big movement of people in the gaming world who are now intersecting with crypto people who are building games that are crypto enabled in some way and that that could be that the game has an inbuilt crypto economy that's real that is connected to a blockchain and therefore makes the in-game items um portable it makes it possible so for for a user to actually own the things that they own in the game to take those things out of the game and potentially take them into another game and to therefore have a persistent identity in this multi-game world that that starts to actually allude to this whole vision of the metaverse which is a whole rabbit hole that that maybe we can save for another another time but I think if you wanted to build a decentralized game where most of the logic and most of the activity happens on chain you might also need privacy to some extent because you might want to be able to add to the game a notion of a fog of War right like a a layer of uncertainty that players can't Pierce through such that players cannot know what other players are doing because if they did maybe the game wouldn't be as fun uncertainty is often a fun and important component of games and Dark Forest by the way is a good example of a game that's mostly on chain that implements the fog of War using zero knowledge proves and using the Privacy aspect of zero knowledge proofs to make sure that there is uncertainty in the state of the universe and that players cannot just automatically know everything there is that there is to know about the game in particular and maybe a third a third interesting application for why privacy is important you can think of this whole new um intersection of fields between crypto and AI uh so this is kind of ZK machine learning world where where you could imagine having a machine learning model that produces predictions and you can imagine wanting to make the model private for the same reason that you would want to make the recommendation algorithm in a social network private such that you know people people can't see how the model does what it does maybe the model is like a is like a trading strategy and a D5 protocol and it would be it would it would not be good if if that model were fully public because then the trading strategy would be useless if everybody can see what it does so you would want it to be private and maybe you would want to prove that the strategy is being executed correctly so again you could use a zero knowledge proof and then it could also be that the inputs to the model like the user a user might be submitting for example their information their personal information to a machine learning model that that produces a credit worthiness score like a credit rating you wouldn't want the user's personal data to have to be public right so same here like you would want to maybe obscure or encrypt those inputs the user the personal user information uh using ZK technology to have this machine learning model that produces a credit score work in a verifiable way without kind of revealing revealing personal personal identifying information and like that there are many other applications so privacy is important not just because users care about their own privacy but because it unlocks a whole new region of the design space that is just fully inaccessible today with public blockchains as they work today Laura actually can I give two more examples that are I think are very appropriate given the times so Ali I gave a fantastic overview of kind of uh different ways in which privacy could be used particular zero knowledge proofs right so now we're not just talking about proof systems we're talking about zero knowledge proof systems uh that prove that something is true without revealing why it's true and so maybe one more example that is very appropriate these days uh it's actually be when when uh when um assets are recorded on chain it's actually possible to get to give what's called a zero knowledge proof of solvency so you can actually prove as an exchange for example you can prove that you're a solvent in other words you have more assets than obligations to your customers and you can do it in a zero knowledge way so without revealing how many assets you have and without revealing uh what your obligations to your customers are yeah and so because it's automatic and it can be done as your knowledge you can imagine that Banks or exchanges could like every day generate a zero knowledge proof of solvency I guess this is all very relevant these days so um a very nice application of zero knowledge and I'm very hopeful that this will actually be put to use in the near future yeah we're recording this just on the tail end of the Silicon Valley Bank uh situation so yeah definitely very very apropos yeah and signature also being closed um yeah one other thing I wanted to cite was um polygon ID I guess was just rolled out and um you know that's another way to have identity and which is obviously an area where people want privacy using zero knowledge technology and from reading that and just some of the other things around that I realized like oh this could be combined maybe or you tell me with kind of like anti-money laundering slash know your customer type compliance controls and even um I was reading something else that made it seem like you could also provide like auditing Trails for Regulators or something using zero knowledge proofs so you would maintain the Privacy without it being like a complete Black Box for compliance purposes yeah absolutely I think it is connected to to the the kind of the use case of being able to prove something about who you are or the state of your finances or so your solvency or whatever whatever else in a way that still preserves some of your private see so sort of from a kyc standpoint instead of providing all of your personally identifying information like a copy of your driver's license and and passport to some centralized entity that that then stores it in a way that can that then get leaked or hacked you could instead provide them with a proof uh that's maybe signed by your bank that your balance is greater than some amount right or that uh they're kind of underwriting you for a certain for a certain level of risk or whatever else and it can be compounded with maybe signatures from other parties into one one thing that can give the party that you are interacting with confidence that you're either either a real human or a human who's solvent or human who who has um certain characteristics without you having to essentially share everything as you do today in a kyc process all right so now let's talk about some either problems or disadvantages to zero knowledge technology um one uh that I've read about and I don't know if this has been mitigated in any fashion but for a long time people have talked about the quote unquote trusted setup problem so can you define that for people and then talk about you know how much of a problem that is nowadays I don't know if it's been mitigated in any fashion yeah I guess uh this is kind of the third player that we mentioned at the beginning the setup the setup player so some of the zero knowledge proof systems that have been deployed require this uh trusted setup and what does that mean that basically means that there's some sort of a system that generates these parameters that the prover and the verifier will use to to generate and then verify proofs and the issue is the reason it's called a trust has setup is that if somehow someone someone subverts this trusted setup mechanism in particular there's Randomness involved in the trusted setup and if this Randomness becomes publicly available that would allow the prover to produce false proofs yeah and producing false proofs is a terrible situation in this world because basically it would allow allow me to prove to you that certain things that that are false actually are correct and that basically results in in theft of of assets yeah the trust is set up the the difficulty with it is that it does require some secrets to be kept secret from the prover so that the proof system is is sound typically when proof systems need a trusted setup what happens is is that that's done through a massive distributed computation and as long as one member of the distributed computation is honest and honestly that destroys the randomness that they used then the trusted setup is fine yeah so that's kind of how that's one way we mitigate the trusted setup we just run it across a large number of parties and as long as one party's honest everything is is perfectly fine and in fact as you as you may know the ethereum foundation is actually taking steps now to do a trusted setup ceremony across a huge number of participants and as long as one of those participants destroys the randomness The Trusted setup will succeed another way to mitigate the trusted setup is to just get rid of it all together yeah and those are called transparent uh proof systems that require no trusted set up and now actually we have better and better transparent proof systems they uh still seem to generate longer proofs than proof systems that do require a trust are set up so in one case the in The Trusted setup case the proofs are shorter and faster to verify in the other case there are a bit they're a little bit longer but they're getting better yeah and so we have ways uh to do proof systems with a Thruster setup but there is currently some cost to doing that so one other issue that I came across is that zero knowledge proof Stone also give a hundred percent guarantees that the claims are valid so what's the best way to deal with that because as far as I understand you would need to do like a large number of computations or there would need to be a large number of interactions between the proven verifier to get you know closer to that hundred percent which obviously is is um burdensome so okay so I think I think I know what you're referring to and honestly this is mostly boils down to correct configuration yeah so these proof systems you know they have to be configured correctly and if they're configured correctly their soundness error is negligible sufficiently negligible and so we know how to do things correctly it's just you know whoever is deploying the systems has to take the steps to make sure that they're configured correctly okay so one other thing is that I think the technology maybe can be relatively slow or take a lot of computing power so what are some of the technological constraints that we have right now that need to be overcome for this to be more widely used oh my God we could spend the whole hour just on that question that is a that is a long and fascinating fascinating question you know in some sense the research of the last 10 years has literally been focused on exactly what you just asked right how do we get the prover to run as quickly as possible and so yeah so there are many many innovations that are happening in this area this is actually the fact that provers are getting faster is why this is now this technology now is is being deployed so widely let's see so if we can put on our technical hat uh for just one second I can tell you that the uh expensive parts of proof generation or you know two of the expensive parts of proof generation one is called multi-scalar multiplication or MSM and the other one is called a phosphoria transform or fft and question is how to speed those two steps the msms and the ffts and in fact actually maybe maybe you want to describe the zprize effort that that took place to accelerate yeah so actually Elio which is one of the one of the projects in the space that's building a blockchain that uses zero knowledge proofs for privacy it's essentially a blockchain that's somewhat like ethereum but we're all smart contracts that run on top of it are private hosted this competition known as a zprize competition to encourage the whole ecosystem to submit solutions to the problem of speeding up for your transforms and MMS msms as much as possible and and it's it was kind of encouraging to see some of the submissions that came some some of which came from from actually outside of the crypto World from people who work at places like Nvidia who leverage very specific features of Hardware namely Nvidia gpus to end up with an optimized implementation that dramatically outperforms everything else which kind of goes to show I think the ways of improving the performance of the proverb piece of a zero knowledge proof can come from Deep research like things like algorithmic improvements which I think have happened over the course of the last five years but can also happen through both just optimized implementations really smart people who write very efficient code that maybe targets special purpose Hardware either gpus or maybe eventually we end up with things like Asics the speed some of these things up and I think things like the Z prize and other prizes that incentivize people to come up with better Solutions will probably be a big part of what gets us to the next level of performance yeah so there's room here definitely I mean there's room for engineers that are needed to speed up the implementations of these provers and is there a need there's a need for algorithms folks to speed up the you know to come up with better algorithms for doing these proofs so I I can tell you again the kind of the two heavy steps are this uh or two of the heavy steps or msms and ffts in some Modern proof systems actually we're able to get rid of the msms so uh we can kind of simplify the the proving process somewhat by by removing one one component those still tend to lead to relatively long proofs so there's still a lot of room for improvement another area since you asked about the you know the the cost of computing these proofs I'll tell you that um another area is not for improvement is not just the actual compute time it turns out when you go to very large proof that you're trying to proving very large statements it turns out actually just a bandwidth between the CPU and Main memory yeah these Pro these provers actually are saturating the bus that connects the CPU and Main memory and so uh part of the effort actually in the last year has been can we actually build proof systems where the memory requirements are not so bad right so that maybe we don't have to saturate the bus between the memory and the CPU yeah so there's a lot of effort and reducing the memory footprint and then I'll say the last another area that's seen a lot of improvement is this area called recursive snarks now person snarks are these things that will blow your mind this is like one of these things that are really quite magical in that remember how we said that a proof system proves that a statement is correct well a recursive proof system proves not that a statement is correct but it proves that I have a proof that a statement is correct yeah I don't prove that the statement is correct I prove that I have a proof and you can further recurse I can prove that I have a proof that I have a proof that I have a proof that a statement is correct and so on and so forth and it turns out these recursive proof systems they have a lot of benefits one easy benefit to understand is that in in the regular proof systems you have to have the entire statement in your hands in order to start producing the proof but using recursive proof proof systems you can actually stream the statement so think of think of a roll-up system where you have transactions from the public you're trying to process a thousand transactions on the public normally you would need to collect all thousand transactions and only then you can start building the proof that these transactions were processed correctly with the recursive proof systems you know you can take the first batch of 100 transactions and produce a proof that they're correct then you take the second batch of 100 transactions produce a proof that they're correct and then you produce a proof of a proof that those two proofs that you just generated are themselves correct yeah so you're not so now you're proving that you know a proof uh and that's kind of the power of recursion generally what they allow you to do and again this is for your audience I highly encourage you to go look up the concept of recursive proof systems it's a really kind of a fascinating fascinating concept what it allows you to do is to take a very large proof and break it into many many smaller proofs which you can kind of proof prove on their own and then produce a proof of a proof that all these smaller pieces are correct yeah and so uh yeah so like I said there's this is an area that's also uh evolving uh quite rapidly and also holds a promise to build uh faster faster approvers so as we said this is a pretty active area and hopefully you know uh as more ideas come in and there's a lot of room for your listeners to contribute to this area as more ideas come in uh you know we'll end up with faster and faster by the way another another big area of improvement is the is the tool chain that goes from the developer all the way down to the actual circuit that gets proven and that includes often a compiler and a compiler is a thing that translates a high level programming language that is useful and intuitive for a developer to use kind of like solidity down to the very bare metal down to something that I can actually can actually be proven by a proof system and there is a lot of work that's being done in building compilers that work with programming languages that are intuitive but that also optimize that translation that goes from something like solidity to a ZK proof such that it's more efficient and so improvements in the compilation process might also lead to another order of magnitude Improvement in performance but it might also actually allow for special applications that are maybe not just solidity smart contracts but are more specific things like for example if you wanted to compile down a machine learning neural network down to a zero knowledge proof you could come up with a compiler that is specifically optimized and specifically engineered to do that such that the proofs or the the circuits that emerge on the other side are much more easy to prove than if you were to try to do it from say something like solidity which is general purpose and is not optimized for machine learning and so I think the tool change that people will come up with to compile down programs of any kind whether they be general purpose validity smart contracts or more specific things like machine learning models or other things we'll also also play a big role in making all of this more performant and mitigate this challenge that that today running approver is is an expensive thing to do and also is are there like hardware issues here as well because just in my research it seems like Hardware is a component of this so are there further developments needed on that side to make this more widespread yeah for sure I mean you know you we told you that uh when you ask about performance approvers this is a big topic and there's a lot to say so definitely developing specific Hardware to speed up proofers is is a big deal like specifically speeding up these multi-scalar multiplications speeding up these ffts this is kind of a big area where dedicated Hardware Asics can actually help a lot and in fact um you know there are a lot of uh Hardware Engineers right now that who have knowledge in in how to construct Asics what they're working on is accelerators for provers it's really quite wonderful to see I'll say one more one more area that uh I think will be will be interesting to you and your listeners in that uh there's also a coming Marketplace for provers yeah so today if you want to prove a complicated statement you know you want to generate a proof that the statement is correct you know you kind of have to do it yourself you go and you know you have to buy the hardware and generate the proof yourself you know but that's that's kind of voiceful right there are a lot of people who have invested in gpus for you know for playing games or maybe for cloud applications and such and they don't use these gpus all the time sometimes they're idle right and so it makes sense that if you have a fancy GPU because you set up a fancy uh playing gaming rig for yourself maybe when you're not playing a game you can say well you know use my GPU to generate proofs right and so there's actually a very interesting Marketplace of of gpus and general uh you know potentially even Asics and fpgas that people can put on on you know make they make them available for people who need to generate proofs and then they'll be used to generate those proofs and they'll be compensated for that in some way and there are lots of very very interesting open problems in how to set up such and Lara this actually touches on your earlier question about whether or not the prover is a point of centralization and I think uh that once we have something like a decentralized Marketplace for proving capacity that will be a way of mitigating that problem and you could have something like a zero knowledge roll up on top of ethereum hook to a decentralized proven Network a Marketplace of this kind to always have some prover somewhere available to be able to generate the proofs that it needs to to be able to make progress and continue to work and to not have a single point of failure that might at any point make the system grind to a halt all right so now let's turn to a question that I think parentally comes up whenever people talk about privacy which has to do with crime um as I alluded to earlier there have been a lot of crypto crimes that have been solved by the government or other investigators looking at these public blockchains and I wondered if you thought the implementation of zero knowledge technology and crypto will make it harder to solve these types of crimes I think it may be worthwhile talking specifically about private transactions first and then we can move on to talk about private computation um in particular maybe we can address the whole issue with tornado cash the fact that tornado cash was a protocol an Unchained protocol whose address was sanctioned by ofak because of the fact that tornado cash was used to some extent by the Lazarus Group which is associated with North Korea to launder uh funds that had been stolen from from another protocol earlier earlier in the year some of the work that Dan and and other people on our on our team have done tries to bridge the essentially uh tow the the line and and strike the right balance between maintaining the privacy of users while still preserving some ability to comply with laws and Regulation and one one way to do that and I think Dan can can talk about this a little bit more as well and we can dive into the into the tech details is that you can use zero knowledge proofs to maintain users privacy while still maintaining the ability to freeze any funds that are connected with any address in a list that is provided externally and that list could be the list of addresses that are sanctioned by ofak and so for example if if a tornado cash had implemented this as a solution it could have been possible for for all funds as soon as the address as an address of the attacker gets added to the list the ofek list which is by the way broadcasted by Chain analysis on chain tornado cash which is freeze all funds associated with that address without leaking anybody's privacy and that alone is a powerful disincentive for the attacker to use tornado cash in the first place because there's always this risk if I as an attacker use tornado cash to try to launder the funds that I have stolen is very likely I will end up with my funds being frozen so might as well not even try and so that could be one solution that simultaneously protects people's privacy and then also this incentivizes the incorrect criminal use of the protocol for for uses that are not intended and there are many other other ways that you can you can try to balance these two things and strike different strike the sort of different parts or regions of this trade-off uh and one of them could be to actually Force the de-anonymization of funds that are on that address which I think would be would be more would give more power to the government and less power like the trade-off there is that you as a user might at some point get de-anonymized and that might be undesirable but but maybe that's that's better because it it kind of AIDS law enforcement and so there's this whole spectrum and a slider that you can play with to try to essentially find the right balance uh and get get to the right trade-off between protecting users privacy and then also not encouraging illicit activity I don't know Dan do you want to elaborate yeah yeah actually yeah I think the examples that Ali gave are fantastic so um uh maybe generalizing this a little bit I would say that um you know on the one hand there's this desire for privacy in the payment system as we explained there's all these applications and businesses needed and so on and on the other hand there's a need to be compliant right if we're you if we're in the us and we're using um you know some technology to do payments with the comply with U.S banking laws or U.S payment laws and so on yeah there's compliance requirements and so those two things they seem like they're contradictory right on the one hand there's you know we need privacy and on the other hand we need to be compliant and so uh you know this is an example a very common example in cryptography where we have seemingly contradictory requirements well how can you be compliant if everything is fully private where in fact cryptography can resolve the conflict yeah and so it can can resolve this contradiction and and so really the issue is just how do we Design Systems that provide privacy to the end user but are also at the same time compliant with uh local regulations yeah and there are all sorts of designs that Lee gave a really good example there there's like a a whole bunch of designs that uh that we can do and so you know at the end of the day this becomes kind of a kind of interesting technical question you know we can decide on what is the policy that we want to implement in the payments in this you know blockchain based uh payment system that would support both privacy and address the needs of law enforcement and then we can go and you know and design a system that seems that you know to the best of our abilities satisfies both requirements and it's again a Lee gave gave really good examples of that so in the case of Tony I think you mentioned tornado cash or Lee mentioned tornado cash the question is basically how do we build a compliant version of tornado cash yeah and it seems completely doable to do that yeah we have we we have the technology to do it um and you know fortunately there are now uh Forks of tornado cash that are starting to implement that and it's going to be very uh it's going to be very interesting to see how that uh yeah one of them was privacy pools which means solimani who I feel like he's always sort of at the center of certain um Cutting Edge or controversial um uses for crypto and blockchain uh he launched this tool and it uses ZK proofs to prove that a private transaction was not connected to criminal activity or um I think it's the sanctioned activity so um you know that's that's definitely one of these examples and I ended it's a tornado cash Fork that he used to do them yeah it's a perfect application of zero knowledge proofs because it allows you to prove that you're not connected to a particular set of addresses whilst not revealing anything about who you are so therefore resolved this Paradox resolves the the trade-off yeah and it lets people have that privacy that that they seek maybe I can give you like a very concrete example uh just might help the listeners in that um you know that for example the travel rule in the US requires the transactions over ten thousand dollars they have to be there's extra reporting requirement required on those transactions so you could ask well if I'm posted posting say encrypted transactions to the blockchain how can we how can anyone looking tell whether this is over ten thousand dollars or under ten thousand dollars right so they don't know whether uh the extra reporting applies to this transaction or not well you can attach a zero knowledge proof to that encrypted transaction to say well this is a this is an encryption of a particular transaction and it's the amount being transferred to the less than ten thousand dollars right and that's a proof that you don't need to do any more recording uh that's relevant to that to that transaction yeah and so that's a very simple and concrete example of how zero knowledge proofs can be used for complete great example all right um I feel like we've I mean we've covered quite a lot of things but I've also left a number of questions on The Cutting Room floor due to time but are there any specific topics that you feel we didn't discuss that we uh really should let the listeners know about oh my God you know we only scratched the surface to be honest this is such a good topic we literally only scratched the surface I would say uh first of all there's a the Canon is a really good resource the zero knowledge Cannon uh if you if your listeners want to learn more I really would direct them to this to that list it's a wonderful wonderful resource that's a great way to get started and learn more in terms of topics that we haven't touched on there are other applications of these proof systems for example for bridging between um between blockchains this is actually actually an up-and-coming area where uh where proof systems are going to play an important role and and that's to improve security I believe exactly exactly Bridge security has been a huge problem in crypto over the last 18 months or something like that so um I think it's something people would be interested in let's see so I guess we have to explain a little bit what a bridge is uh right so the problem is there are multiple blockchains out there um and let's say let's say I own an nft on one blockchain and I want to sell my nft on a Marketplace that's on another blockchain right well how do I I need to move my NSD from one blockchain to another well how do I move it yeah and that's what that's one thing that's one application of a bridge where what I could do is I could kind of lock my nft on one blockchain and have a wrapped asset released on the other blockchain then I can participate in the marketplace on the other blockchain and then I can also move move it in the opposite direction yeah so that's what Bridges allow us to do they allow us to move assets from one chain to another what I just described is what's called a lock and mint Bridge which locks assets on one chain and then mints corresponding tokens on the other chain yeah now the issue is how does the the target chain know that the source chain actually locked the asset right that's a pretty fun fundamental thing that the bridge has to implement correctly right if it releases tokens in the at the wrong time well that's the result that would result in a loss of assets yeah and so uh basically convincing one chain that something happened on another chain is a fundamental thing that a bridge has to do and that's exactly where proof systems can help right because what proof systems can do is uh well one chain can ask an off uh you know an off-chain server to produce a proof that the state of consensus on that chain says that the assets were in fact locked that proof could be presented to the other chain and then the other chain says oh yeah now I believe that the state of consensus on the source chain says that the asset was locked and therefore it's okay to release uh tokens on the target chain yeah so these proof systems allow you to uh prove the state of consensus from one chain to another or more abstractly they allow one chain to send a message securely to another chain and then the other chain can process that message uh accordingly so that's kind of why these are up and coming in the bridging area and there's a number of projects now that actually try to implement and deploy this and that by the way is in contrast to the way that most bridges are implemented today which is that you you require a trusted intermediary in the middle to essentially make that guarantee to the Target chain and of course that often is the source of the problem the the fact that having a bridge that's actually secure is very difficult because that trusted intermediary could be hacked or they could be dishonest they could censor they could they could lie so there are many ways in which a bridge that depends on a single trusted intermediary will not really work in the end especially given that the amount of assets that can flow through a bridge can be very significant and so there's a lot of interest in leveraging zero knowledge proves to make to make this a truly trustless process such that you don't really have to trust anyone other than the consensus of the of the source chain um given that you have a proof that its consensus accurately converged on the state that you that you are receiving as a message all right yeah this I mean there's just so many other things that we could have discussed um and for people who were interested in what we were talking about I actually also strongly urge you to look at non-blockchain uses for ZK technology because that is a whole another rabbit hole that is also super fascinating um it will apparently just have to do more episodes on this because I think it's just going to be come more widely used in in our space and there's going to be I think a lot of uh Crossover with you know some of the other kind of um things happening in Tech so um yeah we'll just have to have you back um or other people to talk about all this because there's so many developments um well it's been such a pleasure having both of you where can people learn more about each of you and your work yeah I'm really easy to find my web page is at Stanford so if you just Google my name you'll find my web page right away and then for us we are at a16zcrypto.com and then also I'm on Twitter at alive underscore eth perfect well thank you both for coming on the show thank you Laura thank you this has been a lot of fun together thank you so much thanks so much for joining us today to learn more about ali Dan and zero knowledge technology check out the show notes for this episode Unchained is produced by me Laura Shin with up from Anthony Yoon Mark Murdoch Matt pilchard sexy word Juan aranovich Sam Shri Ram Jenny Hogan Ben Munster Jeff Benson Leandro Camino camo jimdar Shashank and CLK transcription thanks for listening thank you 