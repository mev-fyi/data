not a dividend it's a tale of two fun now your losses are on someone else's balance sheet generally speaking airdrops are kind of pointless anyways um unnamed trading firms who are very involved as the ultimate pump d5 protocols are the antidote to this problem hello everybody uh welcome to the chopping blog every couple weeks the four of us get together and give the industry insider's perspective on the topics of the day so quick intros first up we've got tom the d5 maven and master of memes next we have robert crypto connoisseur and captain of compound then we have taroun the giga brain and grand pub gauntlet and then we have myself asibe i'm head hype man at dragonfly and today we have joining us a special guest long in demand finally was able to come on the show anatoly yakovenko tsar at solana so quick caveat the four of us are early stage investors in crypto but i want to cover that nothing we say here is investment advice or legal advice or even life advice anatoly welcome first off all of your things have alliteration except czar do we spell czar with an sv now i i was originally going to intro him as cto of solana but anatoly specifically requested czar or senior staff engineer and so we went with zar because it had a little more punch to it but uh don't don't blame me didn't play manitoli anyway uh but angela it's great to have you on i have to tell you we have been talking about solana almost every other episode it's it's pretty hard to run a show in crypto without talking about solana constantly but that's been our goal that's really that's it just like how do we get people to talk about it that's why you're constantly having to deal with crap like this and and you have a perfect track record of 50 positive and 50 negative time that's very true that's very true we've been we we haven't many times gotten pretty heated in our discussions about truly truly an ethereum killer then because i think that was ethereum's place when bitcoin was the only game in town and it was uh it really split that really split the conversation into people that were either pro or against them solana is officially the most contentious blockchain today that is for sure so you might remember we had um a guest a little while back andre cronier who's i guess now kind of semi-retired but doing his own thing but you speak kind of you know chief guide phantom among a bunch of other projects and the original impetus for us bringing you on was that there was a quote tweet of a snippet from the show where he claimed that well i think it was like solana is not even a blockchain and he was talking all about solana and we were like okay well we should we should get anatolia on for the counterpoint um do you do you know andre by any chance yeah he's awesome yeah i've talked to him a bunch would have loved for him to work on solana in those early days when we're trying to bootstrap serum but you know he he was doing his own thing when we were doing our own thing learning rust for like a solidity dev is really tough because they went through a lot of like shading in those early ethereum days and when you do that as a developer you kind of like become a master of your domain right you know the nuts and crannies and throwing all that away and moving to a new system it's it hurts like you have to kind of give up a part of your brain it takes years for you to get to that point so like after like 10 years you'll be like what is why is like half my brain occupied with this useless details i'm just gonna like remove that entire part and then throw it out but like it'll take some time for that to happen it happened with me in c plus for like for a decade i knew every new concrete c plus blossom at one point was like why is half of my brain occupied with useless details and just like snip amputated it was all gone i have to ask you directly like you know i know that i remember um you commented on the on the tweet thread when we the snippet of of uh him claiming that solana is a not a real blockchain and um i think that there are kind of two things that i think have been the crux of what people argue about on twitter about solana the one thing is how decentralized solana the second thing is how how stable or how live or how how much uptime does solana have so right off the bat i think those are probably the two things that we should jump into what is your response to the critics the naysayers about those subjects but both of those are kind of the same thing if you look at like fundamentally what is uh what do these systems provide it's extreme security and the extreme part comes from the fact that in a catastrophic failure yellowstone blows up something like that that there's at least one copy of the state that survives and it's provably that that's a copy because there's cryptographic signatures from the quorum that we can validate and from that single copy we can recover the whole state machine and it continues that's really what the system's supposed to do and it provides some ways for people to update their state and continue running the fact that there's uptime issues is kind of irrelevant because they're all temporary it doesn't really matter if there's a four-hour period between blocks that doesn't really impact the fundamental thing that this thing provides which is catastrophic failure like security against catastrophic failure but it does it does impact the applications built on top yeah that is like that that is lcd and like dealing with those problems and it sucks and at 100 it's 100 like percent bad and like obviously all the engineering effort is on that but when you think about it from like what is the purpose of these systems is this like massive amount of security that is so massive that you trusted more than google that's like the really cool thing and when you kind of dig into it like do i trust that google will lose my state or even a combination of google microsoft and amazon is it possible for all of them to pick up and lose my state that's more likely than a network like solana with thousands of participants they're all running different servers different configurations all over the world right that that's the cool thing about it the uptime thing yeah the uptime thing definitely sucks that that's uh but that's like day-to-day business like uh for applications and uh you know we checked for it not just on twitter right like users folks like magic eating companies with real revenues step in right like had like 100 million dollar third quarter right or whatever second quarter they depend on the network running to generate those dollars right like so that is all true when we contrast like centralized systems with decentralized systems being able to verify backup state is all true i think the criticisms or maybe the comparisons are more across blockchains right like because any blockchain has a lot of those principles right even like i don't know something random like ethereum classic is you know it's true that you could like you know replay recreate the state and anybody can sort of uh you know audit it the question is like for day-to-day use cases of you know this this product it's like like where in that spectrum is like acceptable to live right like is it acceptable for this to have you know one transaction per day and it's sort of guaranteed uptime and but unusable for like pretty much anybody or on the there's a salon end of the spectrum i'm curious how you sort of think about that component of the trade-off so there's a lot of people already working on the other squadron which is they built a system like you know proof of work based one that has really nice properties that allow to have basically an infinite uptime because there's no definition of bitcoin or pow system being down two hours between blocks right like last year nobody said bitcoin was down they're just like oh people are moving miners and now it's gonna take a little longer for blocks sometimes two hours between blocks and solana it's down right like so there is a definition of being down on solana because we're now in a different ball game altogether it's providing a block every four and a millisecond there's literally no gaps between blocks by design so when there are gaps that are even like 10 minutes everyone's pager duties off and we're trying to figure out what the [ __ ] is happening and and why um so i think this is where i think things are just different and you in these new class of chains that have that need this like constant uptime and constant throughput for there's no way we can we can be like service the world if there is like if there's downtime but also if the solution is let's increase fees for everyone and like uh the network is effectively only up for a very small percentage of users at that point so that brings us to fee markets but before we get there i kind of want to drill in on this point a little bit deeper so when we had kyle on on a previous show we started we sort of asked him like hey so what's this this is right after i think the last uh you know kind of notable period of salon downtime and kyle's answer to like okay what's going what's the deal with all the downtime that we've had this year his answer was like look solana made some very explicit trade-offs about trying to eke out very high performance at the expense of stability and they went to market faster they got things out the door quicker and now they're paying the cost and that cost has to be paid down one way or another and look it is unique among blockchains right it's pretty clear that there are no other major blockchains that have the stability issues that solana has but there are also no other blocks that have the adoption that salon has or the the throughput that solana has but his framing of it was that this is basically a choice that solana made that it's now paying down do you agree with that characterization or do you think that that's not the way you described we didn't do it intentionally we made the wrong decisions at the right time but it wasn't like what do you mean by that when we were designing this thing literally the use case we were designing for was basically serum it was a central limit order book our like benchmark that we had internally was basically a very dumb central limit order book and the idea was that all the transactions are going to be very small because limit orders by bids asks cancels they don't take any compute the most uh the biggest part of that whole computationally pipeline is the signature verification so our fee model is very very dumb most transactions are going to be extremely fast to process and the system should charge per signature and if the number of signatures per second that it's processing exceeds some threshold we double the fees for everyone and then that forces like spam to back off and that that's a very very rudimentary design for a system that mostly runs something like serum we actually got cerium was like the first major use case right that we were like right surprisingly never happens in startups but what we were wrong about was all the complexity around like composable defy didn't just call serum they wanted to call the lending protocol plus the amm plus serum at the same time and do these complex complicated swaps and like radium like build a amm and tapas serum that like really took the limits of computational what the system can do and now you ended up with uh really really heavy transactions that had hot spots on particular parts of the state that were just really really expensive to handle and all the bots and everybody in the world that wanted to take that like five dollar or whatever arb would just slam them like immediately and this is something that we didn't expect that use case and what we built were serum and just totally didn't work for everything else so that technical debt was um unintentionally there the mistake that we made like or the the not mistake that we make is we let the design we we let the design be open for these other use cases to spring up with the ideas like okay people are going to try random we don't know what actual product market fit is in crypto so we didn't lock down the system to the point that it only works for serum because that would have been a disaster right like none of the stuff that you see on solana right now would have been possible that would have been like i think a bigger mistake than allowing the stuff to flourish and then obviously blow up in our face a couple times that we had to like hustle to fix that that kind of brings us to one of the things that we've talked about on the show as well is about fee markets on solana and i know that in the past you were relatively opposed to the idea of imposing fee markets because you've described it as wanting solana to be the nasdaq of blockchains is that i think that's the quote that i've ever done it all comes from that idea that like what we're gonna run is mostly central limited book transactions by value and those don't need fee markets really right and the fee markets mean that you need something approaching a mempool you'd be ordering transactions you'd be doing all the stuff that if it's just a giant stream of things that are happening you don't need to to do that amount of work but it seems like the fee market has been the approach that you guys have landed on although a version of a fee market that's quite different than most other blockchains talk us through what made you change your mind and or the community change their mind about the fee market approach and what is the approach that you're taking how does it differ from other blockchains so this is again had runaan made those early mistakes we wouldn't have discovered this right like it wouldn't have been obvious to me at those at that time because i i'm an engineer that is very learned practically i have to see the data like see how the system works how it's broken and that that was something that we just couldn't foresee and basically the what we discovered and this is obvious to me now in retrospect is that these systems have very traditional database hotspot problems you have a whole bunch of state in solana the state is organizing as a key value store each key rep is a public key effectively and each value is an account with data and those accounts represent both user state and program state there's really no distinction so you have like an amm there's a program that doesn't have any state that processes these key values and the value would be the amm market and the key would you know point to that amm market so when you have a hot spot it means everybody's calling the exact same amm key value they're constantly hitting that one market because they want to swap those arms or the same serum market so it's not a like a smart contract specific it's specific to a single state and that hotspot it doesn't matter how fast we make it like imagine it's a switch and everybody wants to flip the same switch in the room doesn't matter how fast you flip that switch like if we made it split in one nanosecond it wouldn't really matter if we could flip a million switches in parallel it wouldn't really matter what matters is if you have a hundred people that all want to flip that switch first you have a hot spot and everyone throws a whole bunch of transactions only one of which can actually go through and that problem is solved by a mempool but it's solved in a way that creates one giant heap of requests to all access a single global state machine and that means when you have a nft launch you know or airdrop to all the ape holders and all of a sudden fees go up you still have d5 protocols that are like i need to land this liquidation i have a channeling oracle that needs to land this liquidation now i have to outbid all these stupid nft people to land to do my like day-to-day process and now you have a bidding war between hot spots that create these like really really bad scenarios right on ethereum and the only way to fix that is to isolate them and this is my bearish argument against generic l2s l2s segregate state logically right different l2s have different states that they own but they don't they're not they're all generic so you can't like they're not going to solve fees because you're still going to have an l2 that has nfts and d5 at the same time and if you have an nft drop and liquidations that all need to occur at the same time the maple for that l2 is gonna blow up the only way to do this is to actually isolate these transactions by normal database transaction isolation make sure that stuff that's processing hotspot a does not impact hotspot b so we there's no way i could have predicted that this is what we needed to build before we actually saw this problem right like i don't know maybe smarter people have seen it but like i i would say one thing um your description of this problem does seem to be very pro-app chain because in the sense of cosmos yeah cosmos actually has mainly built been built around trying to isolate these types of um state state congestion issues so i guess you know from knowing what you know now what design decisions would you have changed in say yeah we would have built this we would have built this fee model like i think from the start and the model is pretty simple because we already know which what like we already did all the hard work which means before steps to specify in their transaction which accounts they're going to need to read which accounts they're going to need to write so that's actually the hard work is forcing that design onto all the applications once you have that information all you're doing is sorting the transactions into buckets and then right like making sure that priority like is based on some kind of fee so both of those things we added it's just that once the network is mature releases and moving [ __ ] out into an ecosystem takes longer than us yoloing a change in in like you know march 2020 when it was when it was pretty easy to make make changes like that so there was this paper uh in the last six months by this this sort of famous cryptographer victor shoop about you know proof of history kind of like not quite having a lot of the desired properties and also you know i think in some of the downtime scenarios the proof of history module was sort of one of the things that seemed to have a lot more trouble if you went back in time would you still have proof of history but tyrone can you very briefly explain what proof of history is and and how it figures um so proof of history is effectively a way of doing sort of a minimal proof of work like system of like doing a repeated hash that someone can verify that allows you to sort of have some notion of like sequencing of slots that in a in a more linear fashion the problem is it sort of doesn't have certain guarantees and also can cause a lot of extra traffic on the network at the worst times at the times when when things are kind of have the most general traffic so what was what was the extra traffic like what's the extra traffic the the proof sizes yeah basically people spamming the proofs effectively when they they couldn't get any other slots in any other transactions that they're they're gossiping like at least that was sort of the argument we haven't seen that being like a major bottleneck so if the chain gets into a state where blocks are getting dropped by propagation it's just not happening the currently like the notes just retry like it doesn't really matter like they just retry their previous block and the chain of proof history kind of stalls in effect what happens during an outage is you have a complicated system it's a database right it's trying to run in constant memory because that that's a requirement and uh you have a scenario where there's like these people have built bots that spam it with like 100 gigabits worth of traffic bitfinex called that a denials ddos right but that's not really ddos level at this point ddos's are much much higher now it's just normal bot traffic people really really motivated to get early in an nft drop this is not even for liquidations or complex finance or hft this is purely to get an nft drop and the 4 million or 5 million packets per second that are being processed through these queues and stages and if one of those cues has unbounded allocation the queue blows up memory grows really really quickly and the validator just runs out of memory and crashes and then it tries to restart and to restart it takes time to process the current state hash a bunch of stuff verify hashes and catch up with the network if a third of the nodes run out of memory in that condition you basically are in a situation where it becomes really really hard for them to catch up with the block producers that are still trying to produce blocks and the network then is in a state that's like it's easier for the validators to decide that okay we can let it run and see if it catches up eventually it could or we just get everyone together and we like kill this particular shred version which is like a network id for the current how we currently propagate blocks increment it and then continue that means all the old block all the old proposed blocks get dropped automatically and then people continue from the last known slot and that's just a decision that they make wherever they whenever they feel like but it's not a we haven't seen like professor anything like that fail like cause a catastrophic failure or cascading effects yet well i assume everybody followed that that that's that i mean what you described sounded super obvious i don't even know why we had to discuss it so like the bugs that we have are like dumb out of memory programming bugs it's a complicated database somebody somewhere probably me if you could blame it wrote that code and didn't correctly manage the state but i i want to go back i want to go back to the the point you're making about isolation i remember i remember back uh before solana was live before all these ulta ones was live i remember you did it was it was you and alex gidenov from near you guys were sitting on a couch i think it was like east denver or something and you were arguing about basically vertical scaling versus horizontal scaling right and the meme at that time was that salon is vertical scaling solana is you take a big beefy server and you run it on the same machine and near and east 2.0 at some point you know event in that moment in time we thought e3 was going to be actually half shards the sharded approach is you have you know a lot of small machines and you horizontally scale as you talk about isolation isolation is almost you know kind of to the dot description of what horizontal scaling gives you versus vertical scaling how have your thoughts about sharding versus the solana you know just big beefy machine approach how has that evolved over time or do you are you basically like look i think we made the right choice so i think we made the right choice i think the the problem with the other choice and kind of described it as unless you have app specific chains you're not really isolating anything and with app specific chains you're breaking composability that becomes really really hard on like all the really cool weird default use cases that that's like the trade-off right like you stick nft is in a separate thing you stick your lending protocol in another thing so its liquidations don't touch any other lending protocol right like you you have to have like compound and ave in separate app chains because like what if what if both need to be liquidated at the same time right like that that becomes that that's the issue there and that sucks i think fundamentally that that sucks from uh the magic of crypto the magic of a of smart contracts no that makes sense at the same time it also seems surprising that you know solana it's very clear especially from your description that when you guys were designing solana you were designing it around the use case that you were imagining was serum the nasdaq of blockchains right you guys see very clearly this is going to be the d5 chain and it's not it's in pictures of monkeys that yeah has ended up being the predominant thing that keeps taking down how do you how do you think about that or how does that strike you if anything i think it's awesome honestly i think the internet is is like typically the best version of the internet is just sharing pictures of cats right like doing funny [ __ ] and uh i think it's awesome to see that nfts are basically like people having fun with this stuff and not really taking it too seriously that's been i think more interesting to me than trying to like convince i don't know the goldman sachs of the world that lending their bar and lending books should be unchained robert can do that like that [Laughter] yeah i'm happy to do that i love that conversation i don't get i to that you enjoy playing your pictures that's true i do enjoy the pictures like the nasdaq use case was like interesting to me because i'm a i like high performance systems so that that need it needs a lot of throughput d5 that doesn't need a lot of throughput was just not something that i was super interested in because it can run somewhere else right so there was no there's no need for solana if the only default use cases are borrowing lending but if central limit order books exist then i think it's obviously that you need something like solana and now that nfts are a thing i think when you're talking about minting like we're we see 100 to 200 000 nfts minted per day on the network and that's with like you know few million humans out there messing around with the stuff if we go to hundreds of millions of users and now we're talking five 10 million nfts minted per day you need a network like solana right to support that and that's that's interesting so speaking of different use cases for solana one of the big news stories from the last from it was a couple weeks ago but we figured we were having you on we should we should talk about it when you're here is the saga phone so the sagophone is a solana branded phone that is going to have native solana support from the get-go and there's a lot of there's been a lot of conversation about the saga phone how likely to succeed whether long ago this was conceived of or whether it was intentionally announced into you know the bottom of a bear if you if you look on chain it looks like there are a couple thousand pre-orders for this thing already i so i'm first of all really curious of just uh how do these things happen is this like a solana foundation is like hey guys we should do a phone this is a third party that's like hey guys we're thinking about doing a salon phone and you guys are like cool here's some branding and you guys are like did this come was this your idea was it someone else's idea like how did this happen um it was my idea and it happened because i met through do you know race capital guys edith chris mccann through like them like alfred on their team he's like um i was just i think what what the space needs is like apple and google to really open up to crypto like that would that would really like i think accelerate everything and the only way that's going to happen is if somebody builds an alternative model and shows that it works and like this is what i would do and they're like you should go talk to jason he was like the first employee at essential basically first or second i architected ipad pro awesome interpreter awesome builder like super hardware nerd and they built an awesome phone and when i talked to him i was like we should go do this and it was because of him that this happened right i just met the right person to do it there's no way i think i could push this idea through a big corporation like you can right you can make deals and do all this other stuff but you really need like like a driven ceo that's kind of gets the vision and is willing to push through this because it's not just like we don't want this to be like the previous crypto phones where it's just the wallet or something like that there's a fundamental difference with sticking the the signing infrastructure inside the trusted element so the high-level operating system android and the wallets cannot steal your keys right like you you create an environment where phantom doesn't know your seed phrase and you have a that means that we can have things like tap to pay like you go to a store and you hit the button to pay load whatever wallet you want the developers can innovate with and you know that that wallet can never steal your funds and that wallets ui can now be used to pay for whatever purchases you want and that opens up a whole like new channel channel of innovation right devs can build cool [ __ ] they can integrate with like merchants it could be bi-directional channels every time you buy something you get nfts or whatever like all that stuff that people dream about like with crypto and programmable money is now possible because the software that you're using and interacting with never has access to the seed phrase right and that that level of security i think is necessary and this is something that when i was at qualcomm this is like what this point six years ago all this all this existed trust zone existed all the application stuff you can build and trust zones so all that stuff is there they just don't enable it because there's no provable product market fit for it so we want to drive that forward i don't know when this is going to break out like when is it going to be relevant but i do believe like somewhere in the next three to five years we're gonna see a moment where every mobile phone out there has signing inside the trusted element right that has like web3 enabled natively like it just it's just obvious to me right like well that that is one thing that you guys have been amazingly effective at is breaking out of the cold start problem and i mean that's that's the struggle that every layer one goes through and there's also the struggle that any new line of hardware goes through is you know okay it's one thing to have okay i have my beautiful salon phone i can look at it and pet it but if nobody actually if if if there are no merchants if there are no applications if there's no you know blah blah that if there aren't enough people who own this phone then you're not going to have enough developers or creating experiences that are native for this phone like everyone's going to assume you're on mobile web and not enough people are going to integrate whatever sdk you need in order to interact with the the trusted element so how do you think about that how does this phone break out of that you know no man's land so i worked on like every phone that failed the web os phones you guys remember those the amazon fire the metro the windows metro one a couple other ones that were just code names basically it's really really hard and the thing that i think how we can possibly succeed and it's not guaranteed is that i think the big store marketplaces right now are so bad to web 3 that 50 000 web 3 users that have this device with no restrictions in the store with how web3 apps can can talk to them is a better distribution channel for crypto native developers and the big app stores like magic eaton can't really ship an awesome marketplace on mobile because google wants 20 of fees on user generated content the magic eaton doesn't control a ten thousand dollar nft magic eaton cannot charge the user 12 000 in their mobile experience when it's listed for 10 000 on the web it just doesn't make sense nor can they eat that cost right because they don't own that property right like all of all of the big app store business models are around the idea that the content the mobile app is owned by the content provider the content provider is the creator and they can charge whatever they want right and then google can put a tax on that and that doesn't work in a digital owned economy that's just not like you have to treat digital objects the same way that you do physical ones like ebay right you're not going to charge 20 markup on the ebay mobile app and that that model is just you know they have a lot of vps a lot of layers of decision making i don't know what's it gonna take for that to like percolate to the top and for them to change their policies i hope is that like maybe we make enough noise that that happens and that's a good outcome right like i think for the space is that even if we fail commercially but we change both how google and apple treat web 3 that's a win but like how we succeed i think is we get it to hardcore crypto devs it's open source so like robert if you still code go submit the ethereum integration it'll it'll okay you know i've never could yeah if you still have uh hey hey hey uh a secret is uh is robert used to make ti 83 games yeah we got it that's true and that was that was programming in basic basically if there's still ethereum [Laughter] i think they're mostly retired now after uh prices come down you know if there's anybody uh if there's still ethereum founders of code it is honestly open source we'll we'll literally take more changes than metamask would takes a lot of changes fair enough fair enough okay i i have um another solana based question kind of changing gears a little bit we got it by the way we got a lot of questions about the sago phone so i think people it's a good it's a good grounding for that story one of the questions we also got from a bunch of people is comparisons with aptos and mistin which are the new facebook slash move based chains i think you responded in some of the um the twitter comments that you weren't super familiar with what they're doing but i think i i see them as the most common comparison to you guys and i spoke with um someone from from solana labs who was telling me that internally at solana you guys don't see avalanche or bsc or any of these guys as your primary competitor you see aptos and mistin as your primary competitor is that true and and please elaborate on that if it is i think so i i think i have this theory that it's a little controversial that x and obviously the reason how solana's design comes from that is that execution is like the really hard part in all these systems ev like consensus is relatively simple like compared to the the runtime and this is why you've seen a lot of innovation in consensus because you can build all these consensus systems the security failure and consensus is extremely likely one it requires collusion from a large set of participants right and then partition the network and then do a double spend everybody that's just not gonna happen right now because the number of participants in crypto that are don't want to collude that rather make money right like the traditional way is much much larger than the the number of like attackers that are willing to stake and like it's just extremely unlikely and and within the execution land building a vm any bug could be a catastrophic failure you're you're running untrusted user code with untrusted inputs and any exploit in that virtual machine can blow the whole thing up and they can blow up it from a total loss of funds catastrophic or application specific one or like a reliability failure like you saw with the shanghai attacks but building evm was i think the hardest problem in launching ethereum and that's why i think you've seen a lot of stickiness for evm because like when you're building a new consensus engine you can go to market much much faster by bolting evm on top of it and like look you've got an environment that's secure right you're using gap right like everyone trusts it you don't have to go like re-implement this extremely complex wheel right and that's actually where all the innovation and the cool like like this is where you can actually innovate and build cool and capture a lot of values in the execution layer consensus systems nobody does don't care about what they do they just care that they work they hate they hate us if something fails right but what they wanted to do is just work the execution environment is where devs play they innovate and developers need new tools like i think every two years because they're curious much so when somebody actually like the team that built move is extremely awesome they're like really smart folks the design is really good i think move it move itself is a is a really good attempt at building a more secure way to build smart contracts so i think there's an opportunity for them to actually build their own ecosystem because it's new and it's going to attract a bunch of curious dabs and if it's good that could be enough for them to get stickiness i'm not worried about yet another evm chain it's just like okay all the they're all splitting themselves up right like they're fighting over the same group of developers they're not creating anything new and like i was i was going to ask like going kind of back to the app chain you know a bit for for a moment um you know why do we think why do you think we haven't seen other chains with the solana vm using different consensus mechanisms yeah the same way we have with evm like you know if we think hey there's a great developer experience people love rust like why is solana the only one especially when you know if i'm of an app chain i don't necessarily need the co-location i might want to run my own decks even like step in like you know why am i paying a premium for this co-location block space versus just you know running it myself transactions and salon are just so cheap that it's pretty going to be more expensive to run your own app chain that that that part is true uh i think for steppen like stefan even though being like having i don't know seven times more transaction volume and user volume than uniswap it'd be more expensive for them to host oval servers it's also like a pain in the ass i think to to do that so i'm not sure i don't know there's like one or two i've heard but they're like pretty low like credibility i think or haven't really gotten traction i mean it took a long time for there to be other really upstanding evm chains like obviously ethereum classic was the first the theory was was quite a bit you know simpler and earlier back then in its life and ethereum classic courses had tons of stumbles it took two years to to go from like right to literally people to build a whole blockchain both like it took avalanche finance marching and all those guys the same amount of time to build whatever they built like their their evm based chain we had to build consensus plus a run time in that same amount of time yeah definitely a heavier lift i'm thinking of something almost like x die right it's like i mean maybe like audience is a good example where it's like started out in xdi migrate to solana better performance cheaper block space but like you know i feel like that's kind of the trend that we've seen right like even dydx moving from like ethereum one to starkware now to cosmos uh you know people are sort of shopping around for like block space what would you get by by launching your own solana chain well i mean i think sort of the argument would be hey maybe there's a premium to having your own token do validation or being able to capture mvv or i think especially you know when fees going up you know maybe there's an argument that hey we can have you know uh cheaper fees paying our own chain but so the way that solana fees are designed is that there is no advantage to moving to an l2 right like you're like the the fee problem isn't the block space constraint problem it's a hotspot problem so when you have 10 people that want to flip the same switch it doesn't matter if that switch is flipped in the zero knowledge environment in an l2 in an app chain you still have 10 people that want to flip the same switch so they will bid up to flip it if you isolate them then they don't impact anyone else's and any other switches that are also doing their own thing and if we can achieve that at salon at the l1 there's no advantage to launching an app chain the only reason you might want to do that is yeah that's true that's true that's true to an extent right it's not true let's say there are five hot spots simultaneously or let's assume that you know you've got one of these crazy nft drops and you know people are just absolutely bombarding all the rpc endpoints they're bombarding all of the all the leaders and the leaders are basically being ddosed with all the all the you know all the crazy requests that are going through um certainly one can imagine that look if we just spin up a new solana now look it's hard because salon is a moving target salon is not like ethereum where basically it changes once every six months so that that i think is another element of like look you just have to constantly know how to do the devops for solana without being like tied to solana that's just really hard i think the those reliability issues would come with you right so whatever you spit up it's the same code base same article yeah except worse because you don't know how to run it [Laughter] so yeah i i think it'll be i think there will be a time almost certainly if solana continues to be successful that solana's code base will solidify and there will be people who run solano classic or whatever you know there will be other versions of solana and some of them will gain legitimacy some of them might even be run by exchanges and some you know i don't know gate.io or something will run their chain and it'll be based on solana and they'll make the same arguments and you'll have the same combination of flattery and uh annoyingness that will come from having another chain based on your code base so if somebody's listening to this there's a pull request that removed the move loader from the network before main at launch the reason why we removed it is because running move as a native loader would have exposed that runtime meant that if there's a bug in that runtime it's a bug in all of the state machine and that's a catastrophic failure but you could literally take run your own version of solana with move and launch before aptos and suzuki i actually i actually think and sorry again my internets i actually think the idea of solana roll-ups is a very wealth an actually good idea in that you you could imagine a roll-up where the fee structure is different based on the use case so like basically it's still running the salon of em so any bridging is at least like guaranteed to have certain execution properties to be bitwise identical at least in the actual execution maybe not in the fees but the fees can be adjusted to like which parts of the runtime are more used in certain applications or seller applications and in general i think there's a lot a lot of the modularity in the networking stack in the solana code base actually lends itself quite well to basically having rollups that are running the salon runtime i i i actually kind of imagine that i i know uh hasib was thinking more on the of the adversarial salon at run time like phobia does bnb but like does it with solana or something that'd be fine anatoly's vision yeah anatoly's vision oh my goodness we need to create a bounty for anatoly's vision it only runs a serum and that's it i think like for instance it's a solana runtime that's special purpose to do certain zk things a lot better than the current runtime or like you know these these things that at least guarantee that hey bitwise compatibility is easier and you don't have to have all the problems we've had we've seen with basically every bridge to solana and really like the the translation layer where the translation layer is the part that like between multiple virtual machines that aren't bit was identical leads to these like kind of nuanced bugs right so they're i don't know i could see a world where solana roll ups are there is like such a thing because like if there's already that much developer interest people will start trying to specialize it in some way shape or form i mean how do you feel about that if like say people started sure that'd be cool if there's like stuff if there's system calls that they need or like hooks into the vm like i don't think we have an eval where you can tell the runtime to go evaluate itself but that's relatively easy to add if people need that we'll definitely add it or terrifying but you heard you heard it here first salon roll-ups coming coming at some point i mean if people want to build it i don't want to stop them sure speaking of roll-ups though so i so i think last year there was a lot of hullabaloo around neon labs which is supposed to be this roll up unclear if it's actually roll up or more just like a virtualized instance of the evm on top of solana and i've heard through the grapevine this is total speculation i don't know if this is true but i've heard through the grapevine that people are writing off whether they're ever going to come to market or whether even that was the right approach and people are like ah you know whatever people made a big deal out of it but that's not the direction that you want to be focusing on what is your what what say anatoly about the prospects for evm on solana does it make sense does it not make sense do you even care about it i think there's two projects one is neon and i think it's live and tesla so you can go mess around with it i don't know what's blocking them from maina but it should be pretty close but like the hard challenge is like you're taking ethereum a version of ethereum that was built in rust and you compiled it as a solana program and then you're hooking up all the all the apis that metamask expects geth to implement against that thing right and the problem is that like you take a ethereum transaction and you submit it to solana and it takes more time than is allowed for solana transaction to take so you have to create a continuation where you cache like you cache the partial computation of this evm as it's churning and you tell it to like okay stop and then i'm gonna go send another continuation for you to continue and then crank in until it's over you have to make that system to be compatible with whatever meta mask expects so how that like fits i think is pretty close but i think there's like a little you know i don't know if they gotten everything right but i think they're getting closer and closer to it yeah if i recall they had like a super tight gas limit for transactions that could execute in reasonable time that's a hard hard approach and i think if it's not live yet it's pretty close like go go mess around with it and see what's broken like i'm sure they they need people to to like just play with it and tell them what's what sucks there's another one that is one that i like more personally because this is just part of the stack that i i like and that's taking a solidity and implementing it as a lvm front end and then going through lvm just generating a native solana program but that approach means that the result is not going to be compatible with evm right it's a different state model you should re-audit that code failure of of the ewozen project perhaps you could argue as a project management failure of the on the on the behalf of the ethereum foundation on the other hand you could also argue that it's the llvm runtime and evm just have too many thorns that don't quite you know fit together and that was really the problem and i think uh yeah it it's that one like but the again the reason why they needed that to work bite for bite can be exactly compatible that's the same challenge that niana's working on that's a really hard problem with solang we're kind of like saying it's not evm compatible so don't even worry about that but it compiles solidity and runs as you expect right it just it's just not evm compatible and that that i think is a pretty cool approach that's pretty flexible and like if you're solidity dev you can go use that right now and you can go get started and build native solana programs in solidity and that's actually something that i think i would like to see move implemented as a native solana like through llvm pass like i think this is something that like whatever whenever there's a new runtime or a new language that's the approach that i want to use to like keep adding the support for these systems um there's a grant i think from the solana foundation to the ziglang team zig is like uh you talk about like c plus and then rust and then zig zig is like this it's a very small nerdy computer community and building high performance like c like next version of c basically so like stuff like this i think is awesome to enable for devs because these are new tools and devs are curious they need new stuff to go play around and like innovate with so do i care do i care about evm and solana i care about solidity on solana more so than evm because i want devs to have tools to to do stuff with that that's the long story but not specifically because i care about like trying to get ethereum dumps to move over i just want to like have the tools there for them to to go do whatever they want so so i will say one thing you do actually care about evm and not solana because the evm semantics and we've already seen this with all the eth roll-ups where the fact that you can't just redeploy on some of them and it like actually gives you like bitwise compatible liquidations it turns out there's some condition under which like zk sync doesn't do the correct liquidation in in compound like that type of stuff you really want to prevent people from doing and you do want the like by code level semantics to have the same or or you're just honest about it right and it's something like soloing you recompile it it's a new program and you re-audit it you actually rethink about it and see what what are in this new environment like what actually happens and that may mean that you may need to maintain two versions of compound and that's fine right but like you should just understand that behavior i i i do think it will be it does get hairy from uh keeping track of like what changes correspond to what audit and like the the kind of like overload for developers will mean that mistakes will be made no matter what in such a scenario though and it's of course always true in crypto that developers are surprisingly lazy or that some developers i should say are surprisingly lazy and will the best developers are lazy well the worst developers are lazy in different ways and the best developers are lazy i will say i will say that okay so we this whole episode we've kind of done a really deep dive on solana and kind of your thinking and how how salon has evolved as a blockchain i want to shift gears a little bit talk more about kind of your journey so you know i remember back in the 2018-2019 bear market when you were just first fundraising for solana i remember actually one of the very first one of the very first talks i went to as an investor i just started my career as an investor and i went to i think it was like 500 startups talk and uh you were up there and you were like i'm i used to be at qualcomm i like did all this low-level stuff with what whatever it was you were working on super low-level stuff related to phones and whatnot and uh i was just like wow this guy is like super legit this is like that worked yeah exactly exactly and you know i remember back in the day solana you guys really struggled to get to get allies and to build to build a a coalition behind you guys struggles to get funding even absolutely absolutely it you went from basically being the you know the the ugly duckling that was struggling to really get you know funding and attention and energy and resources to you know having you know you talked about uh serum kind of putting the wind at your back and creating this tremendous momentum behind solana to now make you you know when when i look on the block that's funny enough they have four tickers at the top and solana is one of them even the salon island is not the number four cryptocurrency but in most people's minds it is and um what has that what have you learned from that transformation that you would not have expected when you first started being like i'm gonna build a blockchain what if you could go back and tell your previous self like hey guess what anatoly here's what happens when you build one of the biggest blockchains in the world what would you have been surprised to hear back then the more success you have the more work you have to do i guess i don't know like i think i would i would have put him really surprised that like the biggest use case is going to be pictures of of of like [Laughter] it would just not have made any sense to me right like if i went back in time like four years ago and i was like look does it make sense to you now [Laughter] i have uh i've become a pfp collector and it does make sense to me and it puts me back in a state of like playing ultima online in the super early days of mass mmos where for the first time you kind of had community on the internet that was interactive in like on the internet itself and you could customize stuff and you were doing things these are like the first guilds that were being formed and things like that and i remember geeking out about that and feeling like i was part of something and that i kind of feel the same way about uh pfps so i i don't know if that's like if most people feel that way but like i i kind of do so that that's like my reason for enjoying them i have to say you know so we talk a lot about solana we also talk we also admire solana because i mean that's that's part of the reason why we talk about it so much but most of all i think i admire you for one not only having gone through that hero's journey of building something that with with nobody on your side uh not nobody but you know not a ton of people on your side to building one of the giants of the industry but also the the spirit with which you've you've done it we were talking before about how most l1 founders as they become more and more successful they become more rambunctious they kind of they turn into [ __ ] they you know they start picking fights um and you've somehow managed to carry yourself and solana despite the um the company in which you you know solana obviously has got now its fair share of shills and crazy people and whatever just because it's so big that that's what happens but you carry yourself with a vitalic-esque level of grace and thoughtfulness which has been amazing to see well that's a huge compliment thank you yeah thank you that's a huge compliment i think i got lucky in that i was older when i started this so past my rambunctious age and i i should ask that if if you if anatoly had started solana in his 20s how do you think solana would have gone differently i don't know if it would have made it actually actually a related question you know right now there's actually this kind of um narrative that i won't say from who but there's many people who are doing this of like hey we need to like have like 18 year olds building everything or like 17 year olds or 12 year olds how do you feel about how could this be narrative of life how do you feel about this like current like narrative of like oh like yeah we should only have kids like building any crypt because like i i kind of feel like it ignores the fact that like these things are hard to build you can't just like only have like people with a lot of excitement you also have to have like a lot of different types of people i would trust dads over 18 year olds like especially somebody like that has uh been through like you know with a two-year-old that's been through that and they're still like or moms yeah or moms moms yeah or moms like anyone would like it that has raised kids has gone through some [ __ ] but they're able to power through a startup you know i i i want to reaffirm that statement because i actually also believe it um i think one of the things that most people forget is that when we're building an industry like crypto where in a lot of cases people's entire net worth is at stake it requires a level of seriousness in the approach to engineering systems that are stable enough that you're not going to vaporize someone's life savings and like there's many ways to go about this but i think in general not always the case in general the older you are i think the more seriously you take that sort of like sacred you know you know requirement of like you know in duty towards building not that you know there's not 18 year olds who feel the same way but i think in general the older you are the more seriously you take that and you know it's one of the reasons why i think that you know in many cases you know you know we'll see you know older founders and teams building things you know tom as the resident 19 year old what's your what's your take on this question i think it's uh your different specialties it's like uh ender's game you can uh take the children and you can morph them to build amazing mev bots but if you need to do something responsible then you'd be a bit older so you got to just sort of segment it's true it's true it takes all types you know and um vitalik was a obviously very very young man when he first came up with the idea for ethereum and it it seems very clear that he needed to be young and bright-eyed and to not be able to understand the objections that more seasoned people were telling him about why this wasn't possible but it also seems true that it was important that satoshi was probably not a young man and that satoshi whoever he or she or they were had a steadiness to them that allowed them to shepherd this thing into existence that required to your point robert a lot of seriousness and a lot of poise in order to build something of that nature so i think yeah i like that i like that view tom that it takes different types of energy and different types of people in different stages of their lives to usher in different kinds of innovations yeah and again i think my main point here is just more like there is sort of this youth fetishization aspect of this that seems to be occurring a lot and like i just generally anytime i see that kind of feel a little weird and so because anatoly was sort of like you know he brought up the fact that because he was older it was it was helpful i think like that's like a good message in some ways you don't have to be some like 19 year old i think you have survivor bias right you have a lot of young kids try it and the ones that make it are the outliers the vitaliks and he would have made it in anything i think given the size of his brain but most startups i think tend to succeed when they're founded and driven and led by more seasoned folks with like 10 with 10-year plus experience in whatever industry they're in because they kind of that you need more than just write out enthusiasm right you need a network of people to hire from you need like expertise you need gut instincts that are honed by that experience and that the only way to do that is you know by like spending your your butt in the seat for that that much time so i want to close out on one last thing so i think a lot of people in crypto look up to you anatoly as being one of the preeminent founders in the space in a real success story for obvious reasons what would be your advice to i mean look right now it's obviously a trying time it's it's a it's a bear market a lot of people are have lost confidence about their prospects to be able to build something in crypto what would be your advice to the entrepreneur who might be listening to this i think right now is it's really hard to actually i think launch a company in the middle of a bull run because there's so much noise and it's really hard to get the product market fit in a bull run because of that noise and this is why post bull run you see a lot of those companies fail right like despite them raising money despite everything else maybe maybe going seemingly going their way they actually miss the most important part which is product market fit but in a bear market there's a lot less noise and if you can iterate and build and create like get those hundred users that's actually a much stronger signal than than anything else so right now is the best time to build and you're building for the next bull run with the hope that like you know like how many it was like four of you four d5 projects compound ave uniswap that caused the defy summer and like the real the bull run right it only took four right that's it so four entrepreneurs that join now and build something really really good are going to cause the next cycle like that's all you need well that is a beautiful note to end on totally thank you for coming and sharing your wisdom with us and bearing with our bearing with our bratty questions about solana until next time thank you sir please keep salana up because we've got a lot of need for it and we look forward to seeing the next stage of evolution yeah thank you so much awesome all right thanks everybody that's it 