[Music] uh hi everyone my name is will i'm one of the co-founders of xerox and i'm excited to talk about mev aware dex design uh this is like an area that i think you know our team has been thinking about for a long time uh and our learning has come quite a bit uh from when we were first looking at it with uh you know flash bots and the emergence of really sophisticated uh mev bots so let's dig in okay so we're going to talk about uh emmy v aware dex design okay well what is the dex let's define the decks so that we need to look at kind of each layer of the dex stack and understand you know how can mev be extracted or can we prevent mev from being extracted at each one of these different layers then we're going to just cover the ethereum fee market and transaction sequencing so it might be something that you're already familiar with but we're just going to go through it anyway then we're going to talk about how different searchers can uh capture mav by engaging in priority gas auctions so before flashbots existed the way that mev was captured was through front-running priority guest auctions and then i'm going to talk about how we designed the third version of xerox protocols economics to take advantage of this mechanic and to internalize this mev to the protocol then i'm going to just review some of the challenges with the design i'm going to talk about how flashbots like kind of change the entire game with with respect to how that model works and then going to also review eip 1559 and its impact okay going to move quickly uh so the way that we think about the deck stack is that there's three layers there's kind of the application layer which is where users go to interact or to consume liquidity there's the kind of trade execution and routing layer which is you know how a user's kind of demand for liquidity is routed to different sources of liquidity and this is where you know uh yeah we'll we'll dive into into that piece deeper then finally at the bottom there's the settlement layer and this is kind of the system of smart contracts is actually settling trades moving assets between two parties and uh you know the first few years of the xerox project our focus was purely on xerox protocol which is you know a set of smart contracts that is designed to serve as public exchange infrastructure it allows you to swap any erc20 721 or 1155 token in a peer-to-peer manner uh and so that's a little bit of an important context these are kind of the three layers of the stack we think about and kind of the products that we're building around each of the layers uh and so what are the things that you can do to address mev at each one of these layers at the application layer there's not that much you can do mev is a really complex topic and expecting people that are just getting into the space to understand something like mev is pretty challenging the best that we can really do is offer price transparency to our users and we can do some education but we can really have much much more kind of control over muv emission or leakage in the bottom two layers so in the trade execution and routing layer you can do things like add some sources of centralization to the system or elements of centralization so things like rfq systems where you kind of sidestep the public mempool you can create things like private transaction pools so things like flashbots protect you can do things like batching transactions and orders together and internalizing them like cow swap you can also do things like uh understand mev and slippage and kind of factor that into your routing as well and then finally at the settlement layer this is you know where there's really an opportunity to capture mev uh and to bring it back into the system rather than trying to avoid it altogether and so let's dig in here so okay so before going into the main focus so we're going to talk about the settlement layer we're going to talk about how xerox protocol was looking to internalize and capture mev it's a really cool design i want to dig into it but before i do that i have to plug another presentation that i think was really really good uh yesterday by my teammate robert and he was giving a presentation on how amm slippage manifests itself in live trading data so looking at seven hundred thousand different trades that went through xerox api let's look at that data let's measure slippage and let's figure out how sandwich attacks and mev actually manifests itself in users prices uh the price they get on the blockchain rather than the price they see in the user interface it's a really really good blog post really good research i would highly recommend giving it a read okay so again our focus is going to be on how do we at the settlement layer capture mev and internalize it so first the prerequisites what is the ethereum fee market what is transaction sequencing look like in the ethereum blockchain i really like the kind of visualization of like a queue of people that are lining up to get onto a bus there's a really cool website called transactionstreet.com highly recommend checking it out it's cool you can see the the ethereum and bitcoin mempool in real time and the pending transaction queue it gives it a really good conceptual understanding of how yeah the pending transaction pool works but basically what it comes down to is each one of these people that's waiting to get their transaction mind they have all taken ethereum transaction and they've cryptographically signed it and one of the things that they put into that transaction is a gas price and so the way that the ethereum pending transaction pool works is that if you pay a higher gas price you're going to skip to the front of the line and typically you can you know look at all the other people and what they're bidding and if you want to make sure that you're kind of going to get your transaction in first you might want to kind of look at what the people are paying towards the front of the line now when there are mev opportunities in general on the blockchain uh the idea of looking at the pending transaction queue and the gas prices that are are you know just kind of uh the background trading our user activity and the gas prices associated with that instead of looking at kind of those background prices what you're focused on is basically paying whatever you need to pay to capture a juicy arb opportunity so in this diagram here for example we have this nice 100 arab opportunity uh only one person can take advantage of it and it's the person that gets to it first and uh there might be two people that see this same opportunity and they might go back and forth by uh sending tr ethereum transactions to the pen pending uh transaction pool and they might go back and forth bidding up the gas price up until the amount that they're paying the miner and gas approaches the total value of the arbitrage opportunity so you know maybe someone's willing to pay 90 dollars to get 100 but they're not going to be willing to pay more than that or more than more than the arb opportunity itself and so this this uh diagram here is a really good uh visualization of like a real priority gas auction it's from the flash boys 2.0 white paper and what you actually see here are these two r bots or two searchers that are going back and forth bidding up the gas price and they're doing it within you know this 15 second ethereum block time and they're really low latency going back and forth they're very aggressive and so this is what a priority gas auction looks like now the you know the mev space has come an incredibly long way since the flash boys 2.0 white paper which was published in april 2019 uh back at that time what they found was that most of the mev opportunities that were out there in the world were not being contested by multiple people competing for it there was simply one person that saw the opportunity and they went and got it and no one challenged them despite that fact the percentage of the mev that was actually paid to the minor at that time was uh 35 of the total opportunity size and the person that found the arb opportunity or found that mav they would get to retain a full 65 percent of it uh and as the mev space has has you know matured and more and more kind of uh our bots have come into this kind of battlefield the dark forest and are you know competing with each other back and forth the percentage of mev that's being paid to these searchers it's not increasing it's decreasing rapidly so as these different searchers come in and compete for different arbitrage opportunities and these opportunities are more and more competitive the amount that they pay to the miner for that transaction very rapidly approaches almost the entire value of the of the mev opportunity itself uh and so this is a really cool plot uh someone on twitter posted at the end of last year and on the x-axis it so it's a histogram on the x-axis you can see you know there is a 100 arb opportunity what percentage of that 100 is paid to the miner and what percentage you know remaining is kept by the rbot and you can see that you know 95 98 of the arb opportunities being paid to the miner so this is really great for miners they don't really do anything and they just get paid for all this mev it sucks for the searchers they're doing all sorts of innovative things to find these opportunities and to go after them and they're basically getting very little of the upside okay so we understand what priority gas auctions are at this point we understand that when a priority gas auction occurs you know you're basically bidding up the gas price and that's all going to go to the miner so we had an idea actually uh peter zeitz our our old teammate had a brilliant idea and that was why don't we make a fee that is associated with 0x protocol such that every time you fill a 0x limit order so this offer to buy or sell an asset for another every time you fill one of these limit orders you have to pay the protocol the same amount of each that you're paying the miner for that transaction and what's awesome about this is that uh so you're you're paying the 0x smart contracts some sum of eth and this sum of eth is going to scale linearly with the gas price so if there is no mev present to fill a certain 0x limit order meaning that someone's just going in and they're hitting your bid it's not like your limit order is mispriced or anything it's just sitting there if there is no mev present the gas price will be pretty low it'll be baseline and the protocol fee that zero x is adding is going to be pretty insignificant at least back in the 2019 at least if mev is present and so this limit order or this nft is thousands of dollars mispriced well then these searchers are going to be bidding up the gas price as well as the protocol fee and until that entire kind of mev opportunity has been consumed by these two different fees and so when that happens uh 0x protocol gets to actually take 50 percent of that revenue that the miner would have gotten if uh the protocol fee didn't exist uh and so just to give an idea of like how does this all look under the surface so you you have an ethereum transaction it's just this data structure with these values you know the value field basically says uh you know how much ether are you sending to the recipient of the transaction there's the gas price and the amount of value that you're sending with the transaction is scaling with the gas price so you can basically see as you spend more on gas you're sending more ether to the protocol all right so and this is a 0x limit order that you're passing in with the call data and so if you're not paying this fee the 0x smart contract will not allow you to fill this limit order and so now if you look at the percentage of mev and how it's distributed you know maybe the searchers are bidding up the gas price and they're only going to end up with a small cut of the total available opportunity but now instead of the miner getting 95 percent they're getting half of that and the protocol is getting the other half so we launched this back in uh october 2019 and actually we proposed this idea like a couple weeks after flash boys 2.0 was published so we were like thinking about this along a similar timeline as them and what we found is that like the protocol fee actually does a pretty good job capturing mav it's not like a perfect solution but when a limit order is mispriced or if someone is using a limit order in swap to kind of trade against each other and kind of get an atomic arb opportunity like that is instead of going to the minor it's going to the protocol and so what you can see here is the distribution of 0x protocol fees so like how much is a user paying the protocol in dollars to fill one limit order and then you can see kind of the frequency of these different dollar values on the on the y-axis what's crazy is like you know someone paid fifteen thousand dollars to the miner they paid fifteen thousand dollars to the protocol uh because that was you know kind of the arb opportunity that they were going after they paid the protocols a really large amount on that trade and there are a lot of kind of these trades where the protocol was paid a really significant sum so during the entire time that this protocol fee was active it accumulated 3700 eats it was just like 4.6 million dollars which isn't you know a tremendous amount in the current day and age of crypto but uh it was not yield farming and it was like real pure revenue which was exciting okay so this was all going really well we have this awesome you know protocol fee actually it's not awesome there are trade-offs but it's kind of cool and it's working pretty well and then flashbots arrived and flashbots completely destroyed this model and it couldn't work any longer and the reason why is because flashbots caused users to pay their their gas fees out of band so instead of paying a higher gas price to the miner you're giving you're you're setting the gas price to zero and it's actually the call data that you're passing in with the transaction that is going to end up kind of transferring uh you know eath or whatever it is to to the miner and so there was no way for us to uh you know basically have our protocol fee scale with the gas price any longer and so uh you know we kind of saw flashbots uh the percentage of limit orders that were filled via flashbots kind of started to creep up and up and up and it was very clear that like okay this approach isn't really viable anymore but maybe there are some things we can learn from it uh so as i mentioned this this fee model was not perfect there were a number of downsides associated with it and just to list them off like the fact that you have to have the person filling a limit order pay a protocol fee every single time they fill an order even if there isn't any mev available to be captured it sucks it just creates additional overhead and expense for users in every single transaction uh and that makes things like you know transferring a three or four dollar nft to your friend or trading like a three or four dollar nft you know now you're paying twice as much gas to do that and it just doesn't really uh remain viable other downsides it created like a worse developer experience now these people that are building their smart contracts and plugging them into xerox their smart contracts have to send each to our smart contracts composability becomes more complex the user experience also wasn't great you know because the user has to send us the same amount of ether that they're sending to the miner and if the user goes and manually increases the gas price in their wallet and they don't also increase the amount of ether they're sending to the 0x contract then it's going to revert and so we basically have to tell users don't increase the gas price in your wallet or your trades gonna fail that's not good all right so we're gonna end it here uh is this is it the full 20 minutes or is just okay we're going to end it here but i guess we'll just close this out with eip 1559 you know introduced a new kind of fee market for ethereum and a new transaction type now fees are broken into two components and there are some interesting things that we could do with eib 1559 to more precisely target mev and to not cost not to add overhead when mev is not present but we'll leave it there thank you [Music] you 