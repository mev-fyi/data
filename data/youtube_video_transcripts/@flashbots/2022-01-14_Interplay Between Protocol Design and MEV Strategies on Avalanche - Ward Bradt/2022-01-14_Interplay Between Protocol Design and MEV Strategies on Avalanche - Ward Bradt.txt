here oh yeah um here uh can you see my screen right yes we can see your screen and it looks great all right awesome um yeah so uh i'm going to present on how protocol design affects your strategies and this year the avalanche network had a few changes to the core protocol i'm going to discuss how yeah uh what happened and how that affected uh any researchers and vice versa um firstly just for a little bit of history um i'm sure a lot of the audience is aware um before the i mean the geth was that taken um network latency optimization was quite important um and it isn't as much now on ethereum but it still is on other networks um i'm gonna be focusing on this on avalanche because it is still quite important and we'll i'll discuss it in the presentation um so yeah i'm going to talk about um how the changes in the protocol design of avalanche drove searchers to change their methods to minimize network latency primarily for um both receiving what what like what i refer to as target transactions these are usually or messages um isn't because um depending on the messaging protocol um or the arbitrage can be created like if the arbitrage is at the top of the block or a background um i'm generalizing the same message there um yeah um so search sorry um yeah this is what we're going to be doing uh this is obviously a very informal talk um what i'm trying to loosely do is um lay out this is hand wavy but sort of this framework for um how messages are gossipped on these peer-to-peer networks or like message gratification um and um this is pretty interesting it's it's sort of similar when i was researching this it's um sort of similar to how it's sort of intuitive to how infectious disease disease spreads because uh if you view like a pending transaction as a um i guess the disease that's spread by these th the nodes on the peer-to-peer network um and yeah so in this discussion um these are some assumptions i'm going to make um the first one's a really big one um because like geo distribution and uh network latency and like um etcetera are are a very big part of um signatures operations um but that's not that doesn't really change um based on the protocol or like with my simplifying assumptions that doesn't change um in this model and then for certain like liveness and ordering guarantees um i'm going to assume that that two-thirds or two-thirds plus one of validators are honest um and that's safe to say because everything falls apart on a lot of these networks that's not true um and then this last one is sort of just like something relatively minor is that we're gonna assume that um nodes or like uh validators on the network aren't um say like ethernet like um running their own searchers and and not like they're not running the default client um here yeah so in this next paragraph um this is obviously very informal and very rough um just a sort of a sketch of a model of message propagation or uh essay in fact because i think the comparison sort of makes sense um that we're going to be using um so first here this is this this initial state in this initial state obviously like in practice it's usually like infuriate an rpc provider or some traders local node that originates the um and then the messaging protocol propagates that message to other nodes on the network and so i'm going to discuss i'm going to focus specifically on how different messaging protocols affect the strategies of med surfers not in isolation but that's sort of the core focus of like what what has changed over avalanche uh over the past year um so this is first i'll give you this overview of but before i go into how the protocol changed i'm going to separate the state of the protocol onto three distinct phases where the dominant strategy for optimizing um network latency was each of these here which is actually quite interesting because say as compared to like ethereum miners in theory don't have any um advantage for hearing for optimized network latency but the avalanche protocol implementation made such an advantage quite explicit in various ways over the past year um and so it led to this novel these these novel strategies for me extraction or this novel layer that wasn't present on ethereum um and so briefly go through like the this first one is just maximize your stake the avalanche that's was how it was um initially when the network launched that in early 2021 i think that's about when they launched a smart contract platform and that's very similar right to other proof of stake networks and even ethereum where your the share of any of these should extract is approximate or your advantage is approximately equal to um your hash rate or your stake and then next um for the next phase was they implemented a change called they called snowman plus snowman plus plus or um apricot phase four and this was due to the result or this was fixed some of the contention issues um that the network previously had um and the dominant strategy here was to hear about sorry to minimize the um to minimize your network latency to hear about arbitrage creating transactions the optimal strategy was to maximize the percentage of nodes you control on the network um and i believe this is very similar to how it works on ethereum because the default number appears is i think something like 50 and i believe you get lost up to square root of the number of periods you have um and do you hear about a transaction as well as possible it makes sense to yeah uh to max to be peered with everyone that's propagating these transactions um and then this third one was quite interesting it was uh due to some consequences of number two um they only got these pending transactions to um validating nodes um and this was quite interesting because it introduced the concept of what a lot of people refer to as a private mempool um which to my knowledge is not seen on other blockchain protocols um and so now i'll go through and discuss the setting for each of these strategies and work towards why they became or why they make sense um so the first phase as i've discussed where the strategy is to maximize your state a of x um the probability distribution which i talked about two slides ago here um this is one of the key differences between each phase is when you decide who to send or who to propagate a value of valuable target message two as it's decided by this probability distribution um in the client implementation and initially one of the key features of avalanche was that there were no transactions that were propagated across a network just um unconfirmed and confirmed blocks um so the strategy was to maximize the amount of stake you have or one one component of the optimal strategy is to maximize the stake you have and then as soon as you hear about an unconfirmed block in the sense is similar possibly to in some ways to an unconfirmed transaction on ethereum where you could try to back run it um which is sort of what this dominant strategy became um one thing that was quite interesting was um anyone could propose a block in this network not just validators which was pretty unique i don't know i'm not aware of other networks where that happens um and another unique feature was that there was a uh hard coded gas price in the network so the only thing that mattered really was network latency um to achieve that network latency you just uh dominate strategy just to maximize your state then in late september um there there's a funny um in september uh the protocol changed to snowman plus plus um and one thing that remained unchanged here was um this probability distribution for usa uh propagate blocks to but um one key there there's two key changes here uh one two fix the prior contention issues was that there was now a designated block producer for each block height and um you and to enable this there was now a global mempool and pending transactions with gossip across the network so back running in the same block was now possible which became the dominant strategy um and then another really important thing was that um while before it was um you started for this latency advantage you needed a large amount of stake that was no longer the case because um the probability distribution for sampling um sorry for sampling the recipients of pending transactions um it was it was uniform uh sampling but across all all peers not just validating peers and the dominant strategy now was to launch many many nodes as to uh yeah to to um minimize the expected duration until you hear about the targeted transaction and then um now also a key change was that rather than creating a block um with your background transaction and propagating it from the network which you had done in the prior version you actually couldn't do that anymore because of the designated block producers so propagation to the block producer became quite important and then oh here's this picture there's a lot of discussion about this i think in the uh avalanche discord and this is just um one picture that uh someone uh thank you to the person that gave us to me um around that time and what we're visualizing is this last bullet point um which was i think snowman plus plus released on september 22nd um and right here you can see people very clearly playing around with um launching large quantities of nodes like all at the same time um [Music] which which i thought was quite interesting and then i don't have a later graph but i believe that once this no longer became viable you can see it dropped off in this chart of several hundred nodes or like a thousand so about half of the nodes on the network or at least the third from what i've was told um were used to extract any fee and what we're gonna what the the next phase is was um for certain reasons um this wasn't um people i think that this uh or they were saying in the discord they thought that it could have been an attack but um but for for whatever reason that the protocol then changed it was actually quite interesting though uh over there were um third of the notes we're running contract and then in this most recent version um after which the protocol hasn't changed this is what was causing a lot of interest in the community with the private medpool was that the protocol changed such that for access to this valuable data um you you know need to run validating nodes um also interestingly uh sampling is uniform not weighted by sleek as one might expect um the dominant strategy is now after this to launch many nodes instead of launching uh instead of accumulating massive mental state as it was in this first phase stake now matters less than the quantity of nodes which is sort of um interesting and other than that it's largely unchanged from the original form of snowman plus plus that's the whole presentation thank you 