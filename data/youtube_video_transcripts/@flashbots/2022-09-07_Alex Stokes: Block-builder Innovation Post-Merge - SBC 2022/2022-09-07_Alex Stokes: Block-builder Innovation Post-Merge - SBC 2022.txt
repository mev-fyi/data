hey everyone good afternoon back I was here this morning talk about Med boost generally now I will talk about this Builder role in particular and I think it goes really well with what quinto's just saying where you know there is this issue of Builder centralization uh it's it's very important to keep an eye on that um but you know sort of assuming that we can manage the externalities of the situation there's like a bunch of cool stuff that this new abstraction can give us so I want to talk a little bit about that today and like hopefully just get you excited about this as like its own problem and uh see some of the cool things we can do here so obviously the question is like what are we building and while we're building these like me V aware blocks right so in particular you're going to get order flow from some people and you need to craft this block in a way that perhaps like maximizes the value extracted if it's muv uh maybe as you'll see later in the talk there's like other things you could imagine you want to like try to optimize or maximize but uh yeah for sure this is what we're doing right like there's there's these users here they want to do something to the chain they produce transactions after using some software Like Walter dapps uh in the movie context you then have Searchers who like try to craft bundles of transactions that for example emit some value they can collect those all go to a builder and this like sort of world we're moving to and the builders themselves are making complete blocks rather than just partial blocks as Searchers would do and yeah then of course that all has to get to a validator who's the one with the power to actually include it on chain or not why would we care well there's like a number of reasons here's like four like really sort of high-level ones uh the first one is just like we have this nice interface now to preserve validator decentralization and this is like the core idea behind PBS I think at this point you guys have heard about this like plenty today but I'll just touch on it super briefly another one is just like it's a fun optimization problem we'll like talk a bit about you know what we're actually trying to do when we build blocks and how that breaks down uh if you like these types of like more CS theoretical problems and you'll like find a bunch of little fun tasks here uh it provides this like really cool abstraction layer and I'll jump into like a myriad of use cases that like use this fact that like you know the protocol only lets us do so many things this Builder now serves as almost this like wrapper around it to support a lot more use cases than we could get out of the box and then ultimately Alec see previous talk uh we want there to be this like very healthy Builder Market uh to keep the the role itself decentralized so yeah just really briefly right this is this is one of the first things I laid out was this interface and really what it does is this it like puts this sort of this kind of hard barrier in between the proposers the validators in the network and everyone else like you can imagine there's this like Mev Maelstrom or you know storm that's happening out there in the world and the protocol needs to like be protected in some sense this is what PBS does another thing I mentioned was building against this like very fun optimization problem so you know what do I mean by this the way to think about it is that uh there's like a certain number you know like you have some inputs to this problem you want to build a block what do you put in the block these transactions there's now like a series of constraints one of them is just that the block only has so much gas right so here I said there's like T available gas so there's this blue Buck it only has this much in the limit you then go to your MIM pool where this is like again public or private wherever you're like sort of getting your order flow from uh these transactions take gas and they have different amounts of gas they require and the thing now is you basically have to say Okay I have to place some transactions into my block up to the limit uh and you know I may have more transactions then I have room to put in the block so I have to then pick so that's like sort of one one thing to optimize for and I just throughout this constraint here that if there's like a b and c gas across these three transactions they cannot exceed the block gas limit t but there are more constraints because not only do you need to figure out okay I have this much gas and this you know these these sort of pool transactions demand this much gas I also want to optimize for example the the value or the revenue that the block provides so you can say Okay based on like possible Arrangements of transactions that I can I can generate uh how much value does that provide to whoever builds a block whoever closes the block all the different pieces you know in this whole supply chain over here right so this is something else we have the scoring function for each block is like okay if I execute this one it pays maybe x-way this other one pays y way which do I prefer subject again to the fact that I only have so much gas per block it even gets a bit more tricky because uh at least an ethereum let's say right as you go to build the next block in the chain you have what I'll just call here probabilistic execution and what I mean is that uh ethereum runs ahead of some sort of finality and so you could for example pop a fork in a chain where now you as a builder have to decide okay I've observed the network along with everyone else I see there are two possible heads which one do I pick I can run my local Fork choice and say oh you know uh this Block B is on this fork with 60 of the weight versus block a with 40 of the weight uh and so now the question is like can I use that information to my knowledge and for one thing you might want to do is say okay because of that I want to like allocate resources Building Block B versus block a in this like 60 40 ratio something like this so like not only are you trying to say okay at the Block Level what are my transactions how can I how many can I fit in the block subject to the constraint that I want to find the most valuable block but also uh I may not exactly know what block I'm building so uh fun stuff and just to like throw out a little bit of uh formality here like this this in general is this it's an instance of what we call the Bend backing problem and this is just from Wikipedia you can go to the the page to learn more but essentially yeah like the setting is that you have like some bin let's say of fixed size and you have many objects of different sizes and you want to pack the bin in a way that maximizes some constraint for example you know the value that would come out of the out of the bin or in this case out of the block so we talked about like again this like fact that there's this abstraction it gives us this nice firewall effect it also gives us uh yeah this very fun self-contained optimization problem if we like to program uh as a user you might care a lot more about this set of things where it provides what we're going to call account abstraction so there's actually a pretty rich history of this of this idea in ethereum and the idea is that ethereum today gives you you know this interface where you can sign with a particular signature scheme and then interact with the evm but there's like lots of other things you might imagine and the full like okay for example you can imagine abstracting away the type of signature scheme that you use or like do signatures are like a signature is a signature even the way in which you authorize like a transaction to to execute right and you know the if you follow this to like the end of the line of thinking you get to this notion of smart contracts smart contract wallets um there's some eips in the space eip374 that would basically add some op codes to give you building blocks to do this type of thing a recent eip4337 kind of does it off chain and ends up settling it inside the evm anyway lots of cool stuff and there's many things that people would want that found this bucket that they just can't do today because the protocol is like fixed and some you know for some notion of fixed so I'll run through some examples here uh again as like examples of of this idea of abstracting what the protocol provides um yeah so like a big one people would like is like gas sponsorship so this is where like I could almost say uh you know um you know I want to execute some order on uniswap let's say rather than pay the gas for the computation or for the transaction someone else pays it and there's not a really streamlined way to do this within the protocol that Builders could do this pretty trivially another one this is what I was kind of using as my motivating example was custom authorization schemes so you can imagine like before we even begin evm execution you need to like have some multi-stig situation um not just for example ecdsa is what we use today so you could generalize that another one event triggered transactions uh you might have heard of the ethereum alarm clock and basically the idea is just like rather than me have to sit and like wait for I don't know the base for you to fall to a certain point I can just say hey Builder here's my order when the base fee is at a point that I seem that I think is reasonable go ahead and execute this on chain for me uh this next one if you solve italics talk this morning uh he talked about this Builder pre-confirmations and this is pretty cool because in ethereum we have you know we're at a different point in the trade-off space where like you're not necessarily going to get confirmed within like 100 milliseconds um instead the blocks come a little more a bit more slowly than that but it would still be nice to like provide this ux to people that you know I can click some buttons on again the unisot page or like other compound pick your favorite application I can click some buttons and like fairly immediately know that my transaction will be on chain uh this example came from talking with quintus who was just speaking it's a builder cancellations kind of on the other end of of this ux here where it's like okay I can either get confirmed early I could also like get canceled early like right now you have to play this like you have to like overwrite you know like a transaction with this like gas game and I'm sure if you try to do this in metamask it like doesn't work and you're like why is this so frustrating um because Builders have this like sort of off-chain view of what goes into the block they can do this and like you know they can have arbitrary protocols for letting you do this as a user foreign this next one is pretty cool also like I think a whole talking of itself but essentially have rebates and it's this idea of like okay you know if I'm using one of these D5 applications and I make a transaction that has some Mev someone like say a Searcher can extract the Mev but then also they need some way to like send some of that value Back to Me Maybe most of it maybe all of it again whole talking itself but this is something you can imagine Builders facilitating that otherwise might be really hard to do just using the evm and the the base protocol another idea that I haven't really thought through as much as I would like but essentially some kind of like off chain Mev smoothing uh so like the stuff that uh we had two talks ago I believe around yeah like how do we how do we take the Mev that is on chain and like smear it back across the value sets this notion's immediate smoothing and again you could imagine like having the mov come into some pool that's controlled by a builder you trust that does the same thing right another one I'm going to call it values based building by this I mean rather than just like bias for like the or optimized for the most viable block you could optimize for a block that again has something else to optimize for example people toss the idea around of having blocks that uh there's no front running so you can imagine I'm a builder and I just claim I will never include a transaction that front runs you as a user this would be one value you could imagine a lot more another one again related in this category is we'll call it Mev protection schemes and if you're familiar with the threshold encryption the idea is that basically your transaction is committed to before it is executed and is done in a way that no one knows until it's executed so yeah Builders could do this as well again in an off-chain fashion uh something like that we have to think of some of the details but uh the point being is you should have a takeaway from this which is that there's this like whole you know this like Rich layer of expressive sort of functionality that the Builder can provide just because of its its like place in the protocol as a player compared to to others another important bit was Builder decentralization so again this is the idea just to like encourage healthy competition again see the previous talk around why we went this what could go wrong if we don't have it um the key thing here I think is we want to keep the barrier to entry as low as possible so you know anything we can do towards that front is super exciting there's a lot more to say about sort of Distributing or decentralizing the actual Builder and I'll just point you to vitalik's talk this morning because that's kind of everything he talked about around Distributing order flow Builder capacities all these things and yeah I'll just finish Now by like trying to paint a very sort of uh speculative picture or a gesture around like what we could do there's like some cool projects I've seen lately and I'll just bring them to your attention uh I think I can say at the frontier of MAV ux so it's just like you know people talk about and this really is the whole point if we go back to this bit for a second our handy Mev supply chain photo so we we've heard of people talk a lot today about like this Builder the validator or the proposer and like their interaction you know we've probably spent less time at least in aggregate talking about things higher up the stack more all the way up from Searchers to wallets to users and this to me I think is where we'll see a lot of exciting developments in like the next well the coming years really is just like all the sophistication will like flow up this chain so I'll just finish by pointing out some projects in that space uh one of them being like Cal swap the idea with Cal swap is this protocol where you know essentially Trend like uh it's an exchange and orders are bashed ahead of time if there are matching orders before you settle to chain you basically just execute them off chain and then all that goes to chain is like the minimal amount to actually execute the the full block um you know there's no way to do this for example with like uniswap today because there's just no way to do this like batching function at least in a way that doesn't like leak a bunch of user information consequently Mev another one is like Rook I think these should be called keeper down and it's like a similar idea where they essentially have a private mempool they have trusted Searchers and these Searchers can then you know extract the Mev but then directly provide these MVP rebates I was talking about uh there's this research post again kind of elaborating this idea of this like Mev capturing amm all in the vein of what I've been talking about I did want to call out to this talk by Adrian Brink who's around here somewhere and he has this notion of like intent-centric design that I think they used to inspire a lot of the design decisions in the Noma which is a project he's working on uh I think the framing is really cool and you should check it out and the idea with this is like actually this is probably helpful it all comes back to the supply chain so again the the key here is like with this intense Centric design is looking at the users and what they're actually trying to do and like rather than even worry with like transactions or protocols or like whatever it's just like how do we take what users want to do and sort of reconcile it or settle it in a way it maximizes value and you know Cal swap has these agents called solvers which is generally an idea in this framing as well and so you want to take up everyone in their intents and then only after you've done this like uh very intense like sort of preference negotiation computation end up with transactions that would even go go on chain in the first place uh it's what I said here like by doing so we can demand minimal value extraction by like other players in the ecosystem and have maximum value capture for users of these systems sounds pretty cool and then we'll probably have some like really cool crypto economics to uh to make it all actually work so very exciting space to look out for generally and that's it uh I'll just plug another project I'm working on mevrs which contains a lot of these like uh hopefully easy to use tools for off-the-shelf building and things like that it's like pretty early days for this but if you are interested in this kind of stuff like please go there or reach out this is me on Twitter are Alex Stokes and yeah I think that's all I have for now and I'm happy to take a few questions [Applause] thanks Alex that was great I I love this exploration of the expressivity that's enabled by block building which Stefan in particular talked a lot at the beginning of all of this but now it seems like so much of the dialogue including today is just all Max profit and so I'm trying to figure out how do you square the circle between some of the creative ideas that are expressed here and then the earlier ideas which are like you got to enforce Max profit or anything other than Max profit is is not great for the network so just curious if you could comment on that users own their order flow so like I think we have to make it very clear to people using these systems that like they decide what happens like if there's a overly extractive say fork of uniswap uh and yeah sure let's say for example that like uniswap has these like nice Mev rebates and there's some Fork that does not have that right like if it becomes known that users are sort of uh you know let's just yeah let's just say that there's more extraction in the other case than than the other one then I assume people know that they would choose to use the one that's like to their interest um so I think that's like a key piece of the puzzle that gets overlooked there user Choice yeah we like forking and blockchains same idea [Applause] 