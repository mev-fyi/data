censorship resistance the title doesn't suggest it but this is actually going to be an Mev talk so it turns out there's quite a lot of intersection between Mev research and sensitive resistance research okay so just first of all why censorship resistance important and in my opinion is kind of one of the foundational pillars for for systems like like ethereum to be successful in becoming kind of settlement layers for for the internet of value and the reason is that there's this mimetic chain which starts with sensitive resistance and ends with things that we really want so what is this chain uh it goes through credible neutrality without resistance resistance you can't have credit bonding strategy without credible neutrality you can't have legitimacy without legitimacy you can't have this idea of monetary premium which is um you know the asset maybe having value above and beyond its raw utilitarian value and then without monetary premium you can't have the the trillions of dollars of Economic Security that we need and the trillions of dollars of economic bandwidth that we need in the context of of D5 okay that's the only motivation slide I guess the rest is more focused on on the topic at hand okay so first of all I guess what is what is censorship um I guess one of the the good things um is that in ethereum we have a very clean way of defining uh censorship and this is kind of a underappreciated uh feature of eip1559 um which is basically that with eip1559 we have Dynamic blocks what does it mean it means that we have these uh this this target gas price sorry gas of um a 15 15 million gas and we have the the gas limit which is twice that and and blocks can vary up to you know the the limit is twice the size of the Target and so what that means is that uh most of the time there will be free and unused space in in in the blocks and actually there's a statistic which I I I looked up which is that um 80 of blocks have at least one million gas unused and one million gas is enough to to put through even some fairly large transactions okay um so we have uh this free space why is it useful and the reason it's useful is because if there's free space and simultaneously there is a transaction which is pending in the mempool and is not making it unchain then that's kind of this this uh sign that there is censorship and the reason is that as a builder there's no reason why I wouldn't include this transaction right I have free space and it's a fee paying transaction so um it's my it should be in my you know rational best interest to include that transaction and and basically this is how we can just simply Define transaction censorship which is the non-inclusion of transactions when there is available space and I guess kind of two edge cases are that if the block is full then that doesn't count as censorship and the reason is that you your your transaction might not be the the the most valuable one to to include right now um and it's not sufficient to look at the tip you also need to take into account the Mev um so they could be transactions with with lower tips than yours that are still getting included um before you and if there's no um block whatsoever if it's a so-called empty slot and that also doesn't cut a censorship because basically the the validators you know potentially offline okay now one of the things that I think is important to uh to clarify in a mind is like these these two different concepts because people talk about censorship and they get the two concepts mixed up so there's this this this notion of weak censorship and this notion of strong censorship and really the the topic of of at hand today is is weak censorship but let's distinguish the two so weak censorship is this idea that transaction some of the blocks will be censoring and so um as as a user I kind of have to wait extra time for my transactions to get included on time so not all the blocks are censoring just just a subset and let's take an example let's say that 90 of the blocks are are censoring that means that the average inclusion time for transactions goes up by a factor of 10 and so we go from you know an average of 12 second inclusion time to 120 second inclusion time which is roughly two minutes um which is which is kind of sub-optimal um but but in a way it's not uh this other notion of censorship which is a strong censorship where your transaction simply doesn't make it on chain um and the the the reason why does this um uh separation is because the the cause of of the censorship is very very different so with weak censorship it all comes down to block production right we have this very complicated pipeline or Mev supply chain um that that leads ultimately to blocks and somewhere in this pipeline there could be censorship and that leads to some fraction of the block censoring whereas on the other hand strong censorship is something that you know originates from a testers um and the basically a 51 attack so in this talk we're going to kind of ignore the the strong censorship now let's look at the problems of weak censorship one of the obvious ones is ux degradation I want to make a transaction is being censored I have to wait longer which is obviously not not great um but you know even in this fairly extreme example that I gave where 90 of the blocks are being censored you know in the case of ethereum you still get this this two-minute inclusion time which is still five times faster than Bitcoin so maybe ux degradation is not so much of a you know systemic risk um I guess the other problem is this idea of extracting Mev by delaying transactions so you might be delaying Oracle updates on chain you might be delaying you know liquidations or you might be delaying some type of you know for example if you want to like pump a specific assets you can just delay all the sell orders and only include Unchained the buy orders and so that that's something that we that's that's not good um and you know something that's also very important to me is this kind of this idea of perceived censorship resistance even though ethereum itself is not centering it's kind of these individual participants in the supply chain that are censoring it kind of people don't really make the distinction and so they think ethereum itself is censoring and the firm itself is kind of losing this legitimacy which is not good um and strong censorship is pretty obvious why it's bad it just you know breaks permissionlessness self-sovereignty and and other things that we care about and in terms of this the solution space here one of the reasons um why I'm here I guess is because I'm very optimistic about being able to solve weak censorship I I think we have the technology basically to to effectively you know fully solve weak censorship and this is what this this talk is about without any humans being in the loop we're just incrementally improving these auctions that are basically the the foundations of the block production process um that that you know today we today we might have censorship but you know in five ten years we we just won't have this weak censorship okay um and I guess one of the interesting things here is that like a lot of the the the tools that are going to present around solving weak censorship are actually tools that were developed in the context of Mev so for example there's this um Gadget which is called Mev smoothing and the reason why we we researched it is we wanted to to solve the reward volatility um as a validator because as a solo validator um you know every once in a while maybe once every few months you get really really lucky you get to build a block and then you get to extract all the Mev in this this one slot um and you and and you make a lot of money um in in just a small amount of time but that leads to very spiky returns and the question was can we smooth the Mev so that basically all the validators have this non-volatile um uh Rewards um and it turns out that smoothing actually is a way to address propose a censorship right so um it's kind of surprising that there's this connection between volatility and and proposes uh but that's that's that's a the way it is and I'll explain it later another interesting thing is this idea of encrypted mempools so those were designed to try and prevent front running and like various forms of so-called toxic Mev where basically you're in a way exploiting uh the a user transaction and it turns out that this can be used to address build a censorship which is kind of also this somewhat uh maybe counter-intuitive relationship and then this this idea of censorship resistance list which also address build a censorship and you know as I mentioned it also addresses delaying right these these kind of strategies in Mev where you're just delaying transactions okay so let's kind of really quickly refresh this block production pipeline it's been mentioned many times but the the way I presented this kind of a very linear uh and maybe useful so it starts with a the the user the user has some sort of intent and they're going to use an interface that you know this could be metamask it could be you know unit swap website um and the the interface is going to generate a transaction the transaction is going to get broadcasted to the mempool The Searchers are going to see it and they're going to include them in bundles it could be even just one transaction bundles which is basically just the transactions and then these bundles percolate to um to to the Builder the Builder produces blocks those blocks goes to the relay and then the relay sends these block headers to the to the proposer and so I I kind of you know some people call it like an Mev supply chain I mean I mentally think it more of a as a linear uh clean pipeline um and then basically the the question is you know there could be censorship at every layer of the stack here and like how do we address every every single layer the the the the user um this is something that we don't have too much control over because basically it's it's the the foundations are in civil rights like the the right to to property like property rights for example or freedom of speech if you live in a country like like North Korea then you know sensitive resistance is not even an option to you because you censored at this kind of this this top layer um in terms of the interfaces you know I think I'm optimistic that we can get censorship resistance through Technologies like ens uh you know avoiding the dot coms um things like ipfs um you know avoiding AWS and you know Technologies like the graph as well which I hope to become um you know decentralized um Searchers in my opinion are not too much of an issue just by Design right like the Searchers what they do is that they observe the mempool and their job is to order and insert transactions it's not really to to remove transactions like once the the transactions being broadcast there's no kind of way for the Searchers to to to just remove it because the main thing they're doing is is observation and insertions and ordering but the the the builders and the relays can censor so let me uh skip those for now and and work backwards to the The Proposal you know as I mentioned smoothing is kind of this way to effectively completely remove proposal censorship from the equation and then and the way it works is basically it's it canonicalizes block production um so what The Proposal basically has no choice in selecting a block he must choose the highest bidding block and that removes kind of any discretion that the proposal might have in censorship I'm going to discuss this a bit more later relays they're just a temporary piece of infrastructure they're going to go away with so-called enshrined PBS or native PBS and so really like the the big the big problem here to try and address is is build a censorship and we have these two technologies which I mentioned which are encryption namely encrypted mempools and to this idea of inclusion lists but before like going diving into the fancy stuff let's talk about like super low-tech um you know technology to to address uh censorship which is what I call altruistic self-building is this idea that you just build blocks in the same way that um that blocks used to be built you know in the early days where you know you just have gef or some other execution client naively um you know order the transactions in the mempool uh by by tip and then that's how you build your your block you know even as a solo validator and the nice thing about altruistic self-building is that there's no censorship um and moreover there's there's no like no sandwiches and there's um there's just much much less toxic Mev and the reason is that um if you're working directly with this public mempool sandwiches have this issue where they can themselves get sandwiched and so if sandwiches use the the public mempool they are actually exposed you know there's this like salmonella attacks and whatnot um and so there's not only are you are you kind of addressing censorship but you also you know partially addressing this this toxic Mev problem and you know this this kind of leads to Good Vibes um in in in the short term and so this is you know one of the reasons why um I I intend to be self-building at least in in the early days and you know there is a sacrifice you know this is why the word altruistic comes in is like there's this financial sacrifice that you're making which is that you're um reducing your income as a validator you might lose you know this this one percent extra uh you know APR you know you might go from uh six percent to only five percent APR but uh ironically this might be a rational move uh kind of financially and the reason is that if many many people are you know spreading these Good Vibes by self-building while the the value of your of your 32 if you know principle might might go up and so you know you're sacrificing a little bit of income but you basically potentially increasing the the monetary premium of the asset that you're sticking with and and then maybe another rational reason to to be self-building at least in the early days is that um you know if you're not running infrastructure like like math boost then you know you won't be exposed to to bugs software bugs uh in in the PBS infrastructure okay but that's kind of the only piece of short-term stuff the rest from now on is going to be kind of long-term fundamentals thinking so I mentioned this idea of smoothing what is it so just as a quick recap we have this Market of Builders they produce blocks some of them are censored um and some of them are are not and the proposal has full discretion to choose which blocks they they they they include and one of the things that they can do is say as a proposer I only want to be working with builders that are compliant let's say um and so the they will be focusing um the attention on on these blocks which have a censorship uh the idea of Mev smoothing is that we're going to basically ask the proposer to take all the blocks that are being built by Builders and to order them uh by um by that bid basically every block has a bid which basically says how much money The Proposal will earn um if they include the block and so in a way we're kind of forcing the proposer to maximize their own Revenue which a rational proposal could you know should be doing and the way that we enforce that is actually with a testers so we ask our testers to do the exact same thing to observe this block building Market to order by bid and to only attest to the block that the proposal chose if that happens to be the highest bidding um block and so if the proposal chooses one of the sensor blocks which is not at the very top then that block wouldn't make it make it in the canonical chain so here there's only one choice one arrow that the proposal can can choose now the the other technology is encrypted mempools and you know now that we've kind of fully addressed in the way the the problem of of proposals let's look into builders and encrypted mempool is like surprisingly simple idea which is that you have a transaction um and and before you broadcast it on on the public mempool you encrypt it and so that gives you a sense of privacy while your transaction is in the mempool um the second step is that your encrypted transaction gets included on chain it gets decrypted after it's included on chain and then it also gets uh executed and so you can see here like um this idea of of encrypting the transactions make it makes it more difficult to censor because um the the the process of block building is all about the Second Step this inclusion step but the those who are participating in Block building doesn't don't have information about the content of your transaction and so you're making it harder for them to to censor and so basically there's this two two-step process of chain and on chain and the Unchained stuff can all happen in one single slot so that doesn't actually affect the user experience in terms of adding additional latency because it all just happens in in one shot now why is encrypted mempools important and and basically when it comes to censorship and the reason is that it fundamentally changes the economics of censorship so let's take the perspective of a censoring Builder I have there are various types of various types of transactions that come in there's transactions at the the green ones where I could have an edge as a builder over other builders like these this is where like all the sophisticated Mev lies it could you know it could be a sandwiches it could be the Arbitrage whatever then there's what I call neutral transactions neutral transactions or transactions where extracting the maximum amount of Mev is Trivial and that includes for example transfers erc20 transfers if transfers nft transfers and the reason is that um you know the only amount of mmv is the tip there's nothing more to extract and so you're going to be equally as competitive including those transactions versus other builders and then from the perspective of a censoring Builder there's basically this economic handicap which is that if you've chosen to not include certain types of transactions you're not going to be able to benefit from the tips that these transactions provide and so you're going to be economically handicapped and you and if you remember with with me smoothing we're kind of trying to include blocks that maximize Mev and so being handicapped puts you at a fundamental disadvantage and so like the the the the the the the the simple equation here basically is that we want to be looking at the the difference between the edge and the handicap we want the edge to be as small as possible and the handicap to be as large as possible um and ideally we want for sensor sensoring builders for the handicap to be larger than the edge and if that's the case then it doesn't even make sense to like rationally to to to to to be participating in Block building because you'll just be losing money all the time now um pre-encryption like the the we could expect that the the the the fraction of transactions that are being centered is Tiny let's say only one percent and so your handicap is really really small and so that's not that's not much of a handicap which is bad um and like one of the things that we want to do is basically uh increase that handicap okay so one of the things I want to highlight here is that there's two types of edge transactions there's um basically transactions any of the opportunities that arise from the environment they're just available in um in in a latent fashion and and that's things like Arbitrage you know they don't require a user to make an action for Mev to be extracted and then there's this second type of of of you know fancy Mev which involves specifically analyze you know reacting to a user transaction and and front running them and basically what I'm arguing is that encryption does two things one is that it dramatically you know by roughly 100x increases the handicap and it also reduces The Edge that a builder can have and so like there's this rough let's say by a factor of Two And so there's this roughly like 200x Improvement in in the in in the economics of of censoring uh builders now the reason why the handicap Grows by a roughly a factor of a hundred is because um as a sensorer um I don't know uh which which which transaction which encrypted transactions I need to censor and so I need to go censor all the encrypted transactions I'm kind of forced All or nothing either I include all the encrypted transactions or I include none of them I can't just discern which of the encrypted transactions I do want to censor um and so if if I am going to censor I need to basically forego um all this bottom part of the block and have a huge handicap um and in terms of the edge that I could have um I have to basically forego the I my Edge is reduced because um I can't see the concept of of of of user transactions and so it makes it very very difficult to do these these sandwich attacks okay great um now I we've we it's it's it's it's all well and good to kind of work at the economic layer and really economically Force out censorship but what if we're in a very very extreme situation where every single Builder and you know happens to be censoring and here this is where we're we're introducing this notion of transaction inclusion lists which is basically a constraint that the proposer is setting on the Builder and it's a constraint that's kind of enforced on chain so the The Proposal says to the Builder hey I want these specific transactions to be included on chain I believe these transactions are being censored and the Builder has no choice if they want to have that block be included on chain to respond with a block which contains these kind of mandatory transactions and so so long as we have a minority of proposals that are willing to not censor um then we'll be in a position where at least some fraction of blocks will be non-censoring even if 100 of the builders are censoring and that's the end of my talk um there's this whole other topic of strong censorship but not the subject of today and thank you hi quick question um how do you think about uh blocks block space markets potentially enabling weak censorship via toxic Mev for example you could propose multiple full flashbots blocks in order to exploit a t-wop Oracle which may not be totally economic but with like stuff like block space Futures markets you could definitely see it happening are there tools to mitigate against that or is that not as big of an issue as I think right um so one thing that does help on the whole multi-block Mev story is this idea of single stock finality and that helps a kind of removing reorgs and that's one way to kind of get these uh these multi-block Mev opportunities in which we kind of remove and that's arguably like a form of of of of of of of of weak censorship now um in in terms of I guess your question was about future blocks not not so much about riox but like looking into the future well more just like Futures markets for blog space right um now one of the I guess features about the the the beacon chain is that um we we kind of the proposes so the yeah the proposes know in advance that they're going to be proposers with unlike proof of work and so that's actually one of the fundamental you know um security degradation degradations versus versus uh uh proof of work where you you fundamentally don't know even if even if even though the proposal itself doesn't know that he's going to be the next proposer [Music] um to be honest it's a good question I I don't have like a you know a good answer of the top of my head other than I guess it's a battle to be fought at uh first of all at the application layer right to make sure that you're minimizing the the the Mev um but also like an encryption you know at the protocol layer making it much much easier for applications to design applications that that don't lead to a lot of Mev and and therefore don't give a lot of Leverage to people who want to exploit these Futures markets okay um yeah okay that makes perfect sense thanks for the answer I mean the other thing may be worth mentioning is that if it it's possible that the the inclusion list kind of throw a wrench you know in the whole mechanism because uh that that's kind of maybe a source of uncertainty I guess maybe the proposals can pre-commit to not using inclusion unless so maybe that's easy to to to to work around yeah hi great talk I was just wondering whether the encrypted mental requires redesigning the transaction fees that are paid by the users yeah it it does so basically you you need to solve the denial of service problem with with the encrypted mempool and so basically you need to have a zero knowledge proof that you have enough funds to pay for the for for the base fee um and and and yeah this can totally be done and another thing that like that kind of needs to be done is that um you need to pay for the base fee uh regardless of whether or not the um the transaction is valid once it's decrypted so so yeah um it is definitely possible to do and actually I have a whole talk on on like all the complications of actually implementing implementing that so you can find online uh I think it's called Mev and cryptography okay cool and one more thing so for the inclusion in the blog uh in terms of gas do you need to make it available in the unencrypted like in the encrypt in the encrypted version of the transaction I mean because you have to know how much how much transactions you can add to the to the block so that's that's a good question as well like um there's various designs here but one one of the things that you can do is basically um just simply make the gas limit public but then the question is you know does this gas limit leak information and so one of the things that you can do here for example is just um Force you know very low granularity on the gas limit for example it has to be a power of two um and so like the the gas limit Falls within the um one of a few uh choices like you can also use like very very fancy cryptography like like fully homomorphic encryption to basically work on the transactions themselves to to to to build blocks in such a way that the transactions don't leak their gas limits and are still within the gas limit of the final block okay great thanks um so I guess you can imagine that part of a builder's Edge might be like being really good at ordering ordering transactions right like let's say you have a lot of them can you speak a bit louder sure are you saying like part of a builder's Edge might be really being really good at ordering transactions so you could have like a lot of like large binds holders for example with like some limit price and if you're a really good Builder you might like alternate them so they all work and they all succeed but if everything is encrypted and like you like order them in the you know some average way then like a few of them will succeed and like you'll kind of like destroy a lot of value by like not ordering things properly right uh can you sorry can you repeat the question sorry so like um let's say you have a bunch of mobile transactions that each one to like so a bit a bunch of what can you speak slower as well please you have a bunch of mental transactions yeah to buy and sell like something and they all want to like they each want to like buy and sell some something um and if you're a builder like maybe your Edge is being really good at ordering these transactions so you like order the buys and sells so that you have like Buy sell buy sell and they all succeed right if they're encrypted you give up all of this right so like you end up with some average ordering in which case like some small number of them will succeed so so one of the things worth mentioning I guess is as a builder you know part of the transactions will be like totally unencrypted there'll be your transactions that you put at the very beginning there will be your priority transactions and so if you're only doing Arbitrage and then like encryption like changes nothing um like did really encryption only helps whenever you're dealing with user transactions that are being exploited um yeah I'm saying these are user transactions user transactions okay yeah foreign happy to discuss this with you um [Applause] 