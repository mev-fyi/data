so uh this is a talk that I gave yesterday on commitments and privacy in the mbv supply chain uh it talks a little bit about our design for an order for auction at flashbots but it's more about how we think about the MVD supply chain and how we think about keeping it uh specialized keeping it permissionless keeping it efficient um so more about sort of system design rather than our OFA specifically and I'll move over here if you're interested in looking on with my slides I uh like a good Mev specialist copied James and I have a tiny URL so it's tinyurl.com Mev SC like supply chain or smart contract hace HH like hard hat or Hacker House um so let's get started I assume at this this point you all have seen the MVD supply chain like several times so I'm not going to reintroduce the idea but uh roughly this is what we would like to see in the nav supply chain which is to say this flat supply chain where you have specialization across many different roles within the supply chain so if you are a validator you don't also need to be a block Builder or also need to be a Searcher you can just play the role of a validator proposing blocks to the network and we want that because the job to be done for a validator and a builder are very different if you are a validator ideally you just are able to run software off the shelf you don't need really complicated kind of researching infrastructure you don't need the infrastructure to simulate merge bids you need connections with Searchers all these things because I would raise the the bar of becoming a validator much higher compared to what it is today so we want the supply chain that's flat we want specialization of roles between them and we want many different parties at every different part of the supply chain to be playing each role and them to be competing to provide value across the Mud Supply Chain lastly we don't want any enshrined or privilegctors so that doesn't mean flashbots no flashbots and enshrinement no enchignment of any other sort of central uh third party in this supply chain and the alternative is uh Mev dystopia where the user instead of interacting with this modular supply chain is flat with many different specialized actors it's interacting with sort of one entity or a small group of entities that's vertically integrated and owns the whole stack and dependent from validating to searching and maybe even the wallet um and again I'm kind of rushing through this because I assume you all have engaged to this content a little bit before but we don't want this because it gives a place where censorship can be introduced where rent can be extracted and it's it's opaque and kind of breaks down a lot of the properties that we care about in public blockchains um so how do we get to Med Utopia how do we prevent from Med megaphone black box from happening and and make sure that we have this kind of modular specialized supply chain with a lot of competition in it and the convention that we have at flashbots is that we need to enable trustless collaboration between different parties within the Mev supply chain and allow for the maximum amount of competition to happen at every step in the way but this is quite hard because parties don't naturally trust each other in this supply chain um and I have the example of Med boost and sort of why collaboration is difficult between Builders and validators and Mev boost the validator wants to propose the block that has the most profit inside of it but again we want to we want this world where a validator doesn't necessarily need to have the sophisticated infrastructure to figure that out themselves so they would like to Outsource that job to a specialized party a block Builder who has that infrastructure but if a validator can see the Builder's blocks in the clear they can steal Mev they can front run users that are inside of it right so if you have clear text kind of sharing of Builders blocks with validators the consequence is voters are impossible sharing their blocks with validators that they trust your Lido rocket pool coinbase Finance Etc of the world and not parties like solo sakers you're you're small folks of the world and this is about equilibrium because then you have differentials in the amount of money that are large stakers are able to make compared to solo stickers and it's quite a bit of money it's like 100 extra apy from using math boost so what you should take away from this is that for these two parties to collaborate together Builders need privacy they need their blocks not to be seen by validators before they're included on chain so what happens if we introduce privacy into the system if you imagine that Builders are only sharing block headers as an example with validators uh in that case then validators have trouble trusting Builders because Builders could lie to validators about the contents of their block if they're only seeing the block header so a builder could construct a block that's not valid they could lie about the profit and they could withhold black bodies too if validators do sign the header of of this block so privacy is not alone it's your necessary condition but it's not sufficient Builders need privacy but validators need commitments from builders in order to feel comfortable uh collaborating with Builders and the builder needs a commitment from the validator that they are actually committing to a block for they're willing to withhold the body to so you need these dual things first privacy but also graph commitments and how does uh how we address this in math boost with this protocol that uses a trusted third party called a relay we're looking to decentralize in the future that acts as a commitment device that both Builders and validators are using and it also helps manage privacy in sort of three easy steps so first Builders build blocks and they send them to the relay this third party sitting in the middle of Builders and validators the relay will leak a little bit of information to validators so they share the block header and its profit and the validator will commit to the most profitable header that they get from a relay and do that by signing the header and returning it to the relay after that the relay will reveal the block body so it's this kind of simple two-step commit reveal process that uses the relay as a commitment device in the middle and why does this enable these two parties to work together so so what are the properties that we're looking for in this and why are they useful so first we have privacy so again Builder blocks are hidden until the block header is assigned and that means that Builders are comfortable with their block headers being shared with anyone because they know that their Mev can't be stolen you just can't do front run inside of it but validators have this guarantee which is really interesting around data revealing so they know if I sign this header the block body is actually going to be there it's actually going to be revealed and they have enough information it's not kind of absolute privacy it's selective data sharing too we have enough information for validators to make competent decisions to know which header to sign but not enough to front run this kind of interesting middle ground uh and lastly you are using uh Builders and validators are using this this party the relay to commit to blocks so first Builders by submitting blocks second validated by submitting signed headers and the net result is that any Builder is comfortable spinning blocks to the system any validator is comfortable Outsourcing blocks to it too so you get this permissionless quality and we keep the Meb supply chain uh unbundled and we asked ourselves after the merge at flashbots what's the next step what do we want to focus on next what part of the Meb supply chain do we think uh needs on bundling the most and the answer that we came to was is we needed to focus on the relationship between wallets and Searchers or or Searchers and users too so focus on order flow and users and ensure that that part of the supply chain could interact trustlessly and it didn't centralize or vertically integrate and it's from the simple premise you know users create Med searches capture that Med today can we create a system that lets users capture Med instead and it's permissionless ideally so we further unbundled the supply chain and the way that rather first so why is that difficult because if users are sending their transaction in the clear to Searchers you can get front run your transaction can be messed with in multiple different ways but even if you trust the Searcher that you're submitting your transaction to there's no way necessarily for you to internalize that Mev just sending a signed transaction so you don't have bargaining power in the system uh and if you do even manage to get a Searcher to pay you some some value in your bundle some sort of relationship there's no way to enforce that payment Downstream the Mud Supply Chain so imagine the Searcher is willing to pay the user but the Builder runs the Searcher even still um so you need some way of enforcing payments even beyond the Searcher user relationship these kind of three issues are making it difficult for users and Searchers to collaborate and the solution ends up looking somewhat like map boost and it uses a lot of similar properties which is what I want to get across you today we again introduced this trusted third party called the Matchmaker that both the users and Searchers use to collaborate and the user submits their transaction to the Matchmaker who again selectively shares information with Searchers who can use that information to construct partial bundles this is something like the Matchmaker saying hey a user here wants a swap on the ethusdc pool I'm not going to tell you how much Mrs Searcher but I'm just going to tell you there's someone that's interested in swapping on ethusd and the Searcher will reply with a background or intended background and say hey Matchmaker please Place me behind this user who's interested in the ethusdc pool I don't know exactly what they their transaction is but I'm optimistically trying to background it with this partial bundle the Matchmaker will fill partial bundles with the user's transaction and send it on to the Builder if it extracts any Med with a condition that the builder needs to pay the user back the Mev that it extracts and so again this system uses a lot of the same kind of properties and Concepts that may boost us through it relies at the core on privacy user transactions are hidden from Searchers which means they're comfortable with interacting with any Searcher on the other end of the Matchmaker but it's not absolute privacy it's programmable you have selective data sharing just enough information is shared with Searchers to help them optimize but not too much to get front run and finally you're using this this middle party the Matchmaker for commitments across the MAV supply chain so Searchers are committing to certain backgrounds optimistically and you're using these these bundle validity conditions to ensure users are paid their Med and then that result again is this unbundling of the Mev supply chain where users are comfortable sending their transactions and any Searcher can interact with the system and extract nud um but it's many of the same kind of Concepts and ideas as meth boost this is what the NBD supply chain looks like after this is introduced so we now have this interface between wallets and Searchers or user and Searcher to we have this interface between Builders and validators the Stressless but you have these gaps clearly and there's also obviously more work to be done uh so in particular I think an important Gap here that we're going to be focusing on at flashbots is the interface between a Searcher and a builder who's right now Searchers with their bundles have to trust Builders not to unbumble you not to front your your enemy D and that limits the amount of places that you're comfortable sharing your order flow with and you have the same trust assumption in that share as well and you actually heard this earlier from Danning in sort of conversations around where to send transactions to enrich Builders ideally we have a system where anyone is comfortable sharing a bundle with a builder and there are no trust assumptions in that process you have permissionless access to order flow called order flow sharing and flashbots um you can do this with sgx we just uh sort of we just announced yesterday that we have our Builder inside of an sgx we're running on polio we're lending actual locks on the spolia test net um with an sdx Builder which is pretty cool and maybe you can do it with crypto economics as well these are all sort of potential paths for this nebulous thing that I'm calling Med build between the Searcher and Builder and there may be something also between the user and wallet but this seems less pressing than other things Downstream in the supply chain we're also not uh comfortable here just introducing like more and more repeated trusted third parties in this process like you know the the intention is to build decentralized systems instead of uh just introducing more trusted third parties uh so at flashbots you know what we're doing here is is we're trying to build this decentralized platform for programmable privacy and credible commitments namely the supply chain that is kind of an abstract layer that allows you to express your your preferences and privacy and economic commitments both for the case of math share meth boost eventually Med build and other parts of the movie supply chain that's kind of the the future and how to think about that in the bigger picture of what we're doing um hope you enjoyed the talk we we started with kind of the picture of what we want with Med Utopia and dystopia looked at how it breaks down without trust and privacy and how you can introduce privacy and commitments back in order to make sure that this trust is isn't needed and keep it permissionless again we're trying to build this decentralized system for privacy and commitments in amb supply chain that's all I have for you today I'm happy to take some questions it's like sure how does it and how does the user know that the surgery that they're supposed to actually get shared with but you know use that information so we have the notion of programmable privacy in this design where the user is sending the transaction to the Matchmaker with either some set privacy preferences or some reasonable defaults set by Matchmaker that chooses the selective information to share with anyone who's listening um so you know if you're swapping on unisotv2 like presumably you're not going to tell the Searcher what the slippage is maybe you'll tell them the pool as an example you know this isn't really your fault um oh boy well this feels like at the point where you're negotiating you're a transaction like negotiating it to be back run on a something has gone wrong yeah like there's that is value leaking all out of that yeah action like it feels like these sophisticated part you should be able to contribute each other or something right yeah yeah so this this starts from the premise of users are going to make regular transactions and where we just like have to deal with those consequences because this is what our partners are telling us but ideally like if you could have some magical like signature scheme or something that wallets certain users are using that'd be much better but you know people nonetheless like do all sorts of things that create MVD and you know we have to deal with those consequences at flashbots unfortunately um yeah how do you yeah this is probably the the largest unknown in this design right now to be frank um so the the notion is that the matchmaker is only willing to share bundles with Builders who are are going to respect pain some Med that is paid to the fee recipient which is the Builder to a set of addresses that are attached to the bundle which we're calling the validity condition um how this is enforced it's either by trust like you have some relationship with a flashlight Builder or maybe v69 or arsync or whatever um you can put it inside of a code and run it in sgx maybe crypto economics too but initially we're just assuming the trust relationship between the maximum program builders um join us one other technique he's been used here is that the commitment doesn't need to be enforced from that block but they're very care or better search or whatever they can have some Bond put up somewhere and after the transactions are landed in the next block if that condition that was specified would not met you can slash them so you can say my transaction should have been quick transaction in the book and that you need like an extra step of communication is not a big size yeah I think the hard thing about that is how do you give a commitment for something without sharing information about it with the builder yet you know so the game is is like you don't want to share the bundle with someone who's not making commitment then how do you get the commitment before you share the bundle you know what I mean yeah uh that's the Matchmaker commit to any specific auction mechanism or does he just choose because I imagine like you have like end users transactions and F or okay how would that go bundles and it might not be able to I could use all the optimal ones for all the other optimal connections then you have to commit to sound like this will actually put here yeah I think one important thing to note here is the matchmaker is not actually selecting anything it's only acting as a suitably layer so it's it's not its job is not necessarily to pick the best combination of user transaction with circuit bundle it's only to apply the user transaction inside the partial bundle and then forward that to the Builder so the actual option itself you can think of is taking place the reason for that is very non-intuitive is that Builders may have some other set of information that leads to better outcomes in some cases than the matchmaker is aware with its set of information like you may have some state that comes before but the matchmaker is not aware of and that leads a better execution like let's say one search or a summit one partial bundle yeah it turns out to be like the best partial bundle for all your research transactions but the Searcher is only willing to take one particular usage production as part of the bundle uh then like the management businesses I guess a question is then like how do you decide which one goes into this right like that one gives user the best kind of welfare boosts yeah who receives the the best one and then yeah like we're playing around with different allocation rules so if you're interested in like writing an allocation I would love to see that okay but for now like there's uh for now the matchmaker is like designating individual transaction hashes they're like all right this transaction has corresponding to this selected data sharing is the one that I want to back up so each particle that actually responds to exactly what yeah there's like there's a way that it may work in the future which is a Searcher who says like there's an empty entry and you can try and insert any possible transaction in this that you have access to um and I'm like interested in this kind of transaction like I'm only interested in transactions of touch crypto functions as an example um so try anything that you know Matchmaker such as crypto funks but in v0 it's just like turned back in cash foreign [Music] yeah I think mov is all about trade-offs and I think at the moment the trade-off of like enabling Productions interaction between users and Searchers is worth the extra gas launching in the long run you'll probably have Searchers co-locating their code inside of an sgx or like using magical and NPC protocols that mean we didn't have to do any of this stuff so you'll move that computational opportunity but it certainly does like add inefficiencies that you don't have when all information is public when all information is public then you don't get any generalization yeah all right and then we'll go uh right to left at least that there is like this cause the surgery submit back running transactions for both and they just stop confidence right so right uh yeah yeah you probably do it otherwise if you made the match Market Matchmaker smarter but at the moment is gonna definitely stay down right well no and this is just at the beginning of the design so I would love for you to write the code okay um so there is an incentive like part of the design is is that you don't necessarily know exactly what the private conductions are that the Matchmaker has and so you optimistically construct a lot of things that you think the Matchmaker may have access to right so again like you know maybe someone is trading on ethoscc on unisot V2 and I'm interested in that so constructo an empty bundle and send it all right um in the matchmaker is like this highly specialized party that uh a software that can either handle that through something like reputation or payment or whatever um and your second question was what's stopping someone from knocking the school kind of sandwich yeah so uh initially I'm just gonna okay oh I thought you're raising your hand to say something initially I uh the system will probably be background only I think in the long to medium run we have the perspective that you can't really prevent that from you can't prevent sandwiches from happening in the system you just need to help users internalize the handy D from the sandwich the kind of caveat that I have about that is that if you're standing a user and you're just paying back all the value from the sandwich seems like you're losing some amount of money into the LPS that you would get by just back running the user and kicking back the background instead yeah yeah so I think long run you probably can't prevent the sandwich from happening and you just have to help these are internalize on any of the drug deals he had something to say um yeah um do you think any wallet is willing to be a bit more ruthless than existing wallets which I've sort of been political correct let's say versus this might end up becoming a bit more if there's a question like will people integrate with this is your question are they going to Auto degree like run it without looking again themselves um I think if you wanted to do something yourself you wouldn't design the system like this probably so the matchmaker is designed from this design goal of being permissionless researchers and that means to various point that you're going to get spam it's like a huge amount of load that you're going to get from Searchers like the flashlight Builder today that you need to handle and wallets are not in the business of running giant amounts of simulation um you know you run dynamental simulation to get permissionless Searcher sets which we think drive better user outcomes which is why we're doing it um but if uh wallet wanted to do something then maybe run the Matchmaker with no privacy uh and a permission search yourself and I wouldn't be surprised to see someone do something like that or often to one of the other LFA designs that yeah yeah things Etc and submit into the expansion makers since we have limitations and how much complications probably I don't have a number two yeah yeah I mean we'll have to kept it at some point the question is yeah how do you deal things simple Associates more and more and more complication to you we don't look at it in the flash floods Builder with the notion of reputation so you can like Searchers as they land bundles over time build up reputation and we separate searches who have no reputation from those who do and different simulation clusters so if we get DDOS by a bad actor that like takes down one simulation cluster but all the good actors aren't some other one so we handle it with a filter I think it's worth like exploring part of the payments so this instead like having Searchers submit a micropayment um per bundle something like that there's many ways to solve this problem when you do bonds also actually like we know how to do horizontally scaling systems very well already so what's the what the actual concern here um how big of a problem is the US I think it's like can you design a system or dos is not a problem when you move to decentralized uh but in practice it was a very big problem for us in like the first six months of flashbacks and not really since then who is going to be uh operating the Matchmaker there is truly and we hope you you know the map the code with the open source so and anyone can run the Matchmaker the question is just you know can you get users to trust you and send introductions to you and can you get Searchers to listen to um the information you're sharing instrument bundles so it's probably more question on this side than cultures yeah so it seems like it's going to be like a quite sensitive place in the field because it has previous knowledge like it has Trust [Music] yeah so would you make sense to for example consider that since the wallets already had this sort of a physician like they already captured the user in case like they could be incorporating that's uh part of the flow so we thought about that um to some extent like can you run some software uh locally at the wallet and our friends have taken other design trade-offs in their systems too that looks something like that ultimately we decided to take different architectural trade-offs largely because we think the Matchmaker will play an increasingly complicated role that requires like specialized infrastructure being able to handle Searcher doses as an example um or maybe being able to handle different allocation rules because some users may want an Med Kickback some users may just want the best price possible on their trade so we think the Matchmaker role is somewhat complicated it'll require specialized infrastructure and for that reason a special identity makes a little bit more sense rather than software on a like local software wallet and the other thing to note is that this is designed with the notion that in the future it'll transition into the magical decentrified block building networks that we're creating in in the future too so it's just a job to be done by Suave at some time and if that is true if that is the case and a way to do that would be to share all the data would that change your guyses roadmap on a bunch of rules here I think to begin with we'll probably be more permissive with the data and like use some simple heuristics on when not share data um so as an example like anytime someone touches UNICEF V2 or it's Forks you have to throw up a wall there I'm not sure that information um but you know if someone is interacting with like open seed it's probably less important right um so I think to begin with it'll be more permissive and over time you'll figure out where it makes more sense to layer on privacy with like the the goal of giving users the best execution possible do you think there will be a global Optimum for swamps contract transactions what do you think yes I think probably looks something like right CRX transaction relay RFQ style and just sharing everything but I'm not sure but I'm curious if that were the case would that still require this page I'm sure you would love that between everything given your place in the enemies I don't know her users would feel the same but I would love to figure out a zero extra induction new ways why do you think sharing the goal that's getting touched uh is the best piece of information that we can get because by myself I don't know but I think it's an example that people can talk so I use it um but like if you have to pull this thing touch you don't know the direction and so it's a little bit it raises the risk of if you're trying to front run that trade outside of the system um it's one thing but you could construct two optimistic backgrounds in either direction whether they're selling One Direction or the other um submit both to the Matchmaker in that way um so I do think it's like kind of clever but I'm not sure it's the best thing to do you know uh announce which pool your order is going to touch then you expect the Searchers to submit backgrounds for every pool every pool they care about you know within like the parameters of how much uh how many partial bundles we allow Ed simulation welcome to the flash floods Builder did you consider making the Searcher pay the user directly instead of having to go to the Builder yeah and is there some like advantage to the viewer mechanism with having the Builder did but I'm not going to go uh the advantage is like one the integration is much easier so Searcher is out of the box you can just pay as they do now to the fears again so you don't need custom Integrations like everyone can use the contacts as they are now it's not Capital efficient that way um two I have this like much more handwritten you lose notion that this is how it's going to work and Central Lock building network but that's like not an actual reasons intuition so it's really just for easy Integrations researchers um this may be some privacy consideration um connecting this to the graphene contest software there's that box that's not transparent it will be uh do I think of these Searchers as within the box or outside they're outside so in the first step every single Searcher will know if there's a transaction well actually contest what do you think I would say that the matchmaking of the box and that what the computation happening the little Bots inside the box is whatever scripts being submitted whatever coins are inside so I've been thinking about what's the simulation happening there um uh and then yeah does that make sense so so so I I incredible I said that inside the box of some some version some action being taken by um like someone or half researcher whatever you can you can think of that as the simulation happening as a that's like foreign [Music] um uh I guess the reason I'm asking is like even the first selected data sharing part is like crossing the wall then technically these guys can still depends what information so that's the whole question the question is how do you get uh sort of economic efficiency by having um this operation inside of the Box being conditioned on you know ample information without having information that is supposed to be exploring the detriment to the user and it needs of these are that simple doesn't have to be like oh I release this information you can think of like very complicated like nested boxes and all these kinds of different things um okay well I'll keep on taking questions until someone tells me not to so are we at home okay uh one more question and also there's a whiteboard for a purpose so if their sponsors need to be drawn go ahead help yourself is that additional logic play out of from Searchers and why would you like instead of not sharing the direction of the trade is saying this is both directions which can make like a lot of simulation why not just allow search for a traditional sure um okay thank you so much for your interesting questions feel free to talk to me about it I want that segment uh we have an API that we want testing thank you so much 