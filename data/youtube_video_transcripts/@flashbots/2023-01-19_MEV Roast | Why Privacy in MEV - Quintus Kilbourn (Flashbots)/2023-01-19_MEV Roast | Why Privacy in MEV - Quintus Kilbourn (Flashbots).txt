I'll be motivating why are we having this roast in the first place um and my name is quintus and I'm from The Flash Sports research team right so why do we want privacy in Mev when someone asks me this question I kind of feel like there's two two points to the to the answer um to my answer at least one is cooperation right in particular we want cooperation between entities that don't trust each other and that might have like conflicting incentives um and I think this is particularly difficult in Mev and I'll sort of expand on on why privacy is important for that in a second and the second reason why um privacy is important in mud is because it affects user outcomes and now this is a very broad term I realize but um I think it's brought intentionally because it's not exactly clear what the outcome should be it depends on the on the application but an example you can you can keep in mind is like a unit SWAP SWAP for example um the user's price is is a measure of outcome but then you might have some other outcomes like for example a payment you receive via an order flow auction or something along those lines well look in cooperation first what what do I mean by cooperation you know what are some examples of things we can think of and really if you think of the sort of The Primitives the building blocks no pun intended that we see in the opponent in the Mev supply chain is we see bundles bundles of bundles and blocks and really what's Happening Here is we have some end output a block um or a sort of a ordered list of transactions um which represents some sort of utility to multiple agents that contribute to the transactions that that make up this ordering um and so if we think about it we have a bunch of agents who want to submit transactions into a block and somehow they have to all get their transactions together into a single block but in order to like to to build this final block they need to share this information these transactions and some other information perhaps to um you know actually have the transactions executed but this is more difficult than it seems on the surface in part because information is very valuable right and what information am I talking about I'm talking about transactions on one level uh so a basic example is someone is executing some complicated Arbitrage with the transaction or a series of transactions and if someone else sees uh sees these transactions they can just copy their strategy which significantly reduces the profitability um of of the trader or the Searcher or whatever you want to call them but then there's also like meta information that's important right so for example bids if the coordination mechanism you're you're using requires you to bid to pay someone for something having someone know what you're bidding especially when they're competing with you is that like you know obviously a disadvantage because they can just put Epsilon more and suddenly you're down in the dumps and so clearly privacy is important and one um sort of mapping we can think of uh one uh sort of different use case that seems very similar is high frequency trading in traditional Finance right and these firms are known to be super secretive to um you know not even be willing to tell you how many members they have in teams and these kind of things because even that little bit of information can be uh you know Alpha it can be um very profitable for someone else and and uh you know profit for someone else often means a loss of profit for for these firms um but but why do we care about cooperation right um seems very nice but can we be a bit more specific about what's what's nice about it if we look at the Mev supply chain we can see in particular um between the search and build and validator that a lot of this sense of information is is being passed around um but um passing the sense of information around means that there's a a barrier to cooperation or they can be because there's a high degree of trust required if they we don't have the proper mechanism for cooperation and the risk here is that this barrier to cooperation means that the sort of most efficient outcome is just these entities being Amalgamated into one large centralized entity um and this is not something we want and I I can give a couple of reasons why um so we want to avoid decentralized entities because we think often um or there will likely be monopolistic or oligopolistic in the sense that there'll only be a handful of these ones of these decentralized entities um that because the market can only support so many um right and the reason you want to avoid this is because we want to avoid rent seeking for example right if there's not enough competition then these entities can internalize a lot of the value that we might want to direct elsewhere we want to avoid regulatory centralization right a centralized entity is probably based in some sort of jurisdiction and we don't want a sort of credibly neutral um blockchain to be to be subject to the whims of of a you know some government and then also we want to avoid uh undue or disproportionate influence over protocol incentives um blocks are very valuable or can be um and they're also a very key component to blockchains obviously um and so having one entity or one a handful of entities controlling this process can be detrimental to the system but where does privacy come in right we've talked about cooperation but what has privacy allow us to do well like I hinted at earlier privacy allows us to lower the barriers to cooperation right which means that um the market can sustain or rather I should say in order for entities to work together we we don't need um to build trusted relationships and we don't need to maybe sign legal agreements um we can have a permissionless system right where you where entities can interact with with each other can coordinate without requiring um you know this massive overhead or or someone's permission and what's nice about this is that permission the systems mean that agents can join whenever it's profitable to do so which um hopefully means the system is more competitive and like I said earlier this avoids rent seeking it pushes value back into the um into the chain to the validators or perhaps back to the users um but it also hopefully allows more entities to participate in this system making making it more decentralized um what's also nice about cooperation is that it might unlock additional value um what do I mean by this um I think maybe the the most basic example we can think of today is that many searches building a block together or aggregating meeting different bundles together into one block might see that block being more profitable than the block than that any individual Searcher could produce um right and how is this being done at the moment well some of the proposals or some of the implementations thus far have just been trusted private channels right Mev Geth was an example of this which allowed searches and miners to cooperate without um such a bundles being stolen we had build rpcs at the moment there's another way for Searchers to submit bundles privately without other searches seeing them but obviously they're very heavy trust assumptions involved here similarly commit trivial schemes um like me the Boost have been implemented right maybe boost allowing validators and Builders to cooperate um without the Builder worrying that the validator will steal their their block um so that's it for cooperation what about user outcomes this like sort of very abstract term I referenced earlier um what's an example of this well a very easy one is sandwiches right I don't really have to explain this too much we're all very very familiar with sandwiches um and so uh maybe moving into onto another example we have generalized Front Runners so a generalized FrontRunner um is one of the first like performance of Mev that was spoken about when MVD became popularized in the dark Forest post um you know if you accidentally leave some money available to the world in a smart contract and you try to get that out with the transaction through the mempool or probably not going to see that money again um then a slightly more intricate example than order flow auction um so maybe leaving out the implementation details we can imagine some some order flow auction where or some black box called the autoflow auction where uh users and and Searchers both participate and the output supposed to be some bundle which you know is beneficial to the use of According to some rule right so the user's execution is good their payment is good and we can imagine the output maybe being like a user being Background by a Searcher but if we have the wrong privacy sort of environment in the OFA and more information is exposed than we would like uh Searcher could for example um act outside of the order flow auction and outside of the rules of the order for auction can enforce to um effectively for example sandwich the user which could end up with and the user execution being much worse than anticipated and they're actually having been a much better you know way to execute the user's transaction maybe just without the bundle who knows but the point is that it's very hard to reason about what's good for the user within the autoflow auction if agents are also acting on the same information outside of it um right and why do we care uh I guess um why do we care about user outcomes should be a bit of a silly question um I think most of us probably agree that it's a very important thing to do but but maybe just a motivate it a little bit um we can say that we want to make trustlessness appealing again a very general statement um but we believe in in blockchain with cryptography and all the incentives with um and decentralization going into this we believe that the trust assumptions and the applications that we're building are better than the trust assumptions in the traditional world right like a DEX versus a sex for example uh however we don't want this trust to come at a very heavy cost to users in the form of worse prices or higher fees or these kinds of things um similarly um one can argue that blockchains were invented to address Mev and this is a bit like a bit more of a philosophical point but really what I'm trying to say is that when a like when but when Bitcoin was created we're trying to disintermediate uh remove this very uh powerful intermediary that can impose their objective function and extract value from users at the user's cost um right and if we think about what Mev is often this is basically the the same thing because of validator or a minor whoever is in a very powerful position um and they're sort of intermediate between all these other users who want their transactions executed and they're able to extract value often at the cost of users and so addressing Mev is in keeping with a sort of philosophical tradition of blockchains which is uh arguably a good thing in itself but but also I think can teach us many lessons that hopefully can be applied outside of the you know very specific case of like sandwiching or whatever it is um maybe that's a bit too abstract but I'll just say bottom line uh if we like many people have this same utopic vision of what blockchain can accomplish for people um and in order for us to reach that I think most people would agree that um sort of in order to reach a world where users outcomes are improved we need to improve user outcomes uh um right and then how has this been been done um how people propose to do this uh right so again trusted private channels um protect rpcs an example of this where users can submit their transactions directly to like flashbots Builder um so it's not seen in the main pool and then um this transactions sort of end up in a block without anyone else seeing it until it's executed um there are many cryptographic proposals as well threshold encryption mempools commercial real schemes trusted execution environments and I'm sure we'll hear about all of these uh in the next in the coming talks they're also non-private approaches right so decentralized sequencing uh trusted marketplaces Etc um I I should mention that all of these are um all of them have their benefits all of them have their drawbacks and I you know each of them merits its own talk so I won't go into them individually but maybe to motivate that this is a very interesting problem and that we um that the most naive solution definitely isn't necessarily the best one um I'll give this example right so um why can't we just stop an encryption scheme on top of this to stop the the validator to uh to act on it or maybe why wouldn't we want to right um one one reason is the specific challenges you know challenges specific to the scheme if you have a commit reveal scheme how can you ensure a reveal after the commit was made or something along those lines but I think um another question that's maybe more interesting to me is that the outcomes in an encrypted environment if the encryption is successful um is that the outcomes are blind in some sense right uh what does this mean well um if we assume that the outcome is blind we assume that the the transactions are ordered roughly randomly right but how does a random ordering compare to something which is um like a buy sell Buy sell with regard to swaps right especially if the random ordering ends up saying Buy Buy sell sell where um the second buy and the second cell uh revert because the prices aren't aren't um you know within their range um this is obviously not desirable and now obviously we can go into the nitty-gritty here we can say well actually the ordering wouldn't be random because people would be spamming the chain to try you know sort of compete for the jockey for um uh beneficial positioning and these kind of things but that's not the point I'm trying to get to I'm really just trying to say that this is a hard problem and um you can't just make uh Mev private and then we've saw the problems and so I'll introduce a buzzword before I I close off um which many of you hopefully have heard of program privacy and it's just basically this idea that privacy doesn't need to be binary it doesn't need to be public or private but rather there's this very large design space in between the two where users can choose maybe some components of the information as public and maybe only to some entities and maybe only under some conditions and playing around with this is really something that we've been thinking about and that might solve a lot of the the problems in mvv and hopefully will so before everyone goes into a very technical uh talk later on I'll finish like a hand wavy abstract conclusion um which is to say that we can think of the Mev supply chain as a negotiation between these many different entities who are trying to um you know go from all these many different entities some who can do the execution and some who want execution to be done according to their specification and what we've seen is a imbalance of power where some entities for a variety of reasons including the information they have have been able to draw um an advantage at the cost of of of other users and so what we're trying to do is we're trying to provide the tools to users to enter this negotiation and get sort of the best possible outcomes for themselves and these tools um We Believe of ways of expressing or choosing how the information is is exposed so that they can get the best outcomes themselves um without other agents taking advantage of the information they've exposed so I I hope that that made sense I think it's a q a now I actually don't know if you guys have been listening to me for the last 20 minutes I hope I haven't been speaking into nothingness um yeah cool thank you acquaintance yeah we have been able to hear you um anyone that has a burning question that I'm I'm mindful of the schedule we only have two and a half hours um so we might only have time for for one question I mean one one kind of small yeah go ahead I can ask a question uh that's uh that's a bit spicy so has anyone looked into like how would it look like with privacy on and off okay is this something that can be Quantified in some way besides the general motion that we probably all understand that is that more privacy is better I I mean I'd love for someone else to jump in here but uh you know my understanding of this is that it's an open open research problem and there are people working on actual implementations and so um I guess you know we'll we'll tell with experiments but also um one of the things we're working on on internally and I think full will sort of touch on this in the next uh in the next talk is uh how do we sort of theoretically understand the trade-off between um privacy or like the relationship between privacy and the sort of economic uh state of the outcome and also afraid of perhaps what are we paying yeah yeah yeah I do think that there's a a trade-off and I think that's what people will hopefully touch on the next talk okay great fantastic uh thank you quintus 