[Music] all right everybody i guess we can kick this session off thank you for joining after an extremely long day of very info dense talks i know you all must be very tired so hopefully we'll keep it a little bit fun and trolly here that's my request to all the panelists um so i've prepared some questions i've prepared some troll questions that i just made during the day so no one here has had the opportunity to see them so that should be pretty fun um first i'll let people do two rounds of intros because we have a 40 minute long panel and i need to spill fill space um so first i'm going to ask everyone on the panel to tell me about batch auctions and why they're interested in batch auctions the potential they see in batch auctions and generally what makes them excited so we'll hand the mic over sure go down the line i guess and we can do eric last um so my name is lev i've been interested in bat auctions is because they have the potential to reduce um uh unproductive games around uh marketplaces and uh hopefully reduce rent paid to um arbitragers and other unproductive participants hi i'm felix i am the technical lead on car protocol my interest in batch auction comes from i think it being a mechanism designed answer to a real problem that we have on ethereum and them being particularly well suited to work on ethereum because we already have a discrete time mechanism on ethereum we have blocks every 13 seconds and batch transactions together yet we don't clear trades at the same uniform clearing price and and that to me kind of was always something that doesn't make a lot of sense and the other thing that i'm excited about in batch auctions is the opportunity to re-aggregate liquidity which we fragment on ethereum today it's it's super cheap to create a new token we see it with us dollars there's 10 15 different stable coins all representing the same token and that inherently fragments the the automated and well active liquidity that's being provided and by virtue of batching traits together we can make use of ring traits and reaggregate that that yeah liquidity space uh hey i'm tyrone um i would say that uh my main interest in backdrop actions comes from actually trying to analyze privacy in d5 and um it turns out when you batch things as we saw in a couple of the talks earlier uh you can actually get much better proofable guarantees for privacy uh both in trading and potentially lending and cross-chain activities so it more comes from the stance that it's actually theoretically analyzable and you could you could imagine like a zero knowledge system like penumbra that takes advantage of it all right you're next eric hi i'm so i've been interested in doing research i've been doing research on batch auctions for a dozen years now at this point and my interest in them is that i think they can make real world financial markets work better they can make markets more efficient more fair more transparent less complex also solve a lot of problems that may not legally be cheating but kind of stretch stretch our notion of what what you know what should be allowed in in real world financial markets rather than whether that's uh various forms of front running in uh traditional financial markets or the the kinds of front-running that have manifested in uh in decentralized financial markets amazing if you see me typing on my phone by the way i'm not tweeting i'm taking notes on everything people here are saying because i'm going to use it to troll them later so great we've had the batch auction intro now we have the second subject of today's intersectional panel which is mev so i would love to hear a brief description of everyone's story or personal experience with mev maybe in the same order starting with lev um like your personal opinion sure whatever whatever you want say yeah you two minutes to say whatever you want about mev personal opinion story and it has to be trolling qualitative feeling no not at all you know provocative is encouraged for sure okay yeah i think i mean i i've i think since the term emerged i've always felt like there was um uh a lot of like um like there was a lot of there's a certain perspective embedded in how people were describing it and people were very excited to quantify and formalize what it means and i think that obviously these are very interesting pursuits but i think that it's quite easy to go wrong with this so from the from this perspective i think it's quite uh fruitful to challenge what how people think what people think maybe is um so i'm for example i think i don't think it's an uh objectively measurable quantity i think it's which which is you know it's inherent in the names like usually things that have value are not uh necessarily objectively measurable so i think this is one of the things that we should never forget um but well all value is subjective i guess all right i guess felix nice yeah i think the first time i heard about mev was when i joined gnosis back in 2018 and we were talking about how can we make prediction markets tradable and martin keplerman ceo of noises was talking about logarithmic scoring rule or some variant of it which is now famously known as x times y equals k and the reason why we didn't double down on it back then was because we thought that well this market mechanism is flawed inherently and i think it was later that year that i listened to your talk at defcon 4 and read the paper on like you know coining the term mev and well since then we've tried to build a market mechanism that actually reduces the mav potential at the protocol layer and not how maybe a lot of other projects in the space have been you know thinking about how to redistribute it which is also important but really our focus has been how can we reduce the the total you know amount of mev that exists on ethereum um yeah i for for me it's uh you know i've spent a lot of time trying to formalize sort of some of the math and different d5 protocols and one kind of consistent thorn that has defied formalism to lev's point is is mav one of the reasons i actually find it most interesting is that it you know there's a lot of ways you can separate the sort of security and economic differences of proof-of-work and proof-of-stake but mev is one of the you know currently one of one of the kind of largest differences um and sort of it's actually kind of interesting to think about you know this notion of value in different security models actually has sort of it becomes like non-translatable uh and so you know i think personally i'm still hoping one day for for you know the maxwell's demon of of uh mev but unfortunately we are quite far from that amazing eric so i'll give a slightly intellectual answer to this this question so when i first heard about high frequency trading this is a long time ago at this point at some level just genuinely didn't understand it because efficient markets hypothesis training says you can't make money from technical patterns in financial markets to make money you have to know something the rest of the market doesn't know and so i kind of didn't get why speed was so important in traditional financial markets and then it it kind of clicked this is about a dozen years ago at this point that a lot of high frequency trading is based on relatively simplistic arbitrage strategies so you got a market bids and asks there's some piece of news and high frequency trading manifest is a race to pick off an out steel quote um when i first learned about mev which was from the flash voice 2.0 paper like oh god this is even simpler like you have a batch that's got three orders to buy a and three orders to sell a and instead of just trading at the price that clears the market you can kind of front run buy and then execute the three orders to buy then sell then execute the three orders to sell and just extract money from the sequence of trades it's like an even simpler to understand rent extraction from financial markets so i i kind of thought like figuring out how high frequency traders make make their money was that that i thought required an insight and then when i saw the mev extraction i was like oh god that's just another in a way like simpler and more obviously in need of fixing uh market structure issue amazing all right let's get right down to the trolling um so one thing we've heard like a lot of connections about in the last few talks and just in general is uh mev and hft and there's also an obvious link between hft and batch auctions so like the original frequent batch model involved as a response to hft and in some ways like deployments of batch auctions and crypto are or response to mev so there's some obvious analogy there i guess i'm curious like in your views on the panel like where does that analogy fall apart or like if are there is there anything non-obvious there like is is hft and mev like really a pure kind of analogy in terms of the games being played or are there meaningful differences for like deploying batches in response to hft and like in response to mev in like the types of work we need to do to do that this is anarchy by the way so just jumped in did you pick this on purpose so that it's very hard to disagree with just it's hard to disagree with me or yeah i think i think uh i'm still thinking about how to okay objective yeah yeah yeah i mean i think the analogy is actually sort of poor in one particular dimension which is that composability doesn't really exist in hft right like i'm not like taking a loan and then in a single transaction taking that loan providing it into a automated market maker then manipulating a price changing something else somewhere else downstream and then closing out the loan i feel like the the composability aspect makes the state space significantly more complicated and batching only corrects some portion of that i think staking derivatives in particular interacting with batching is like a very complicated system much harder to reason about than um an order book and then i guess the other thing i think that's quite important in mev versus uh traditional hft stuff is you you really do generally speaking trust the exchange to keep accounts private now of course that doesn't always happen but there's a sense especially in in constant function market makers that mev is exactly equal to loss of privacy and that's not true in hft right it's like you kind of assume perfect privacy from the account level uh and i think those two things like composability and privacy are extreme completely change the analysis in my mind i think another core difference on ethereum in particular is the i mentioned earlier the fragmentation of the token space so in traditional finance you have the us dollar which is your numerator and you have markets i'm always denominated to that so you you tend to have a simpler i would say market structure in in traditional finance whereas on ethereum uh you might have your token have one balancer pool against usdc then a uni-swap pool against eth and then i don't know a curve pool against another derivative of your token so you have a much more multi-dimensional space to begin with and so the games or also the arbitrage opportunity might tend to be higher in ethereum actually one other thing to that point is that in d5 you create and destroy assets all the time you like completely mint and burn new synthetic derivatives like in the middle of a transaction you can never do that in hot right like these security like getting a security listed on the exchange is already hard enough let alone like destroying it i'm hearing a lot about complexity like how does this how does this because it seems like the response like deploy batch auctions at least suggested by the previous talk um seems to be the same in both settings so like does this complexity how does this complexity interface with the batch auction and also this is like a little bit of a question for eric that's kind of related to this like the original batch auction model that was proposed is much simpler than the batch auctions we're seeing deployed in crypto today so like does this relate to this complexity is it like a response and how does it change like the modeling and security properties we need to do on these systems well why don't i take a crack at that last question first so um and i think felix kind of alluded to this with the mention of the word numero which is a technical term but it is their traditional frequent batch auctions 1.0 so like as proposed in our paper in 2015 each asset so each stock if you will trades in its own uh frequent batch auction market where the market is that asset so you know apple stock or google stock or whatever in exchange for dollars and dollars or this numera are the numerator good that you can use um as a you know as the what you what you get if you sell what you what you give if you buy um frequent batch auctions 2.0 which i've been working on recently with we'd call it float trading but i've been working on it with peter crampton and pete kyle mina lee and david malek allows for batch trading in a more combinatorial portfolio style manner where you could for instance use or define a portfolio consisting of apple and google and amazon stock or whatever stocks you're interested in with positive arbitrary user-defined positive or negative waves but there's still a numerator good the the dollar kind of underpinning the discovery of prices in which prices are denominated and crypto markets raise this additional layer of complexity where you want to swap arbitrary assets for arbitrary assets and there isn't a natural numerator good and that just that at some level raises a technical design challenge uh that i think um a lot of there's a lot of innovation grappling around how to how to solve that design challenge i think it's a just a genuine it's a it's a harder problem if you don't have a numeral good you don't have a common denominator you can think of it as like a way of netting stuff but uh let me leave it at that cool any other thoughts on complexity yeah i think part of the complexity comes from the uh you know trustlessness and permissionless of the network and i think this complexity can actually be used for good and for bad um or in you know in some sense at least on car protocol we met actually make use of the permissionlessness and say well we don't have just a single matching engine a single clearing house like you would maybe have a traditional finance your broker who tries to find a perfect matching but instead we we spread that out as a competition to what we call solvers and basically let them you know off-board the complexity off to a it's almost like another auction that is loaded behind where people compete we know what a good solution look like or at least we are able to rank two solutions against one another and say this one is better or more fair and so we can offload some of the complexity and said well let's make it a competition that solvers compete for that challenge and they may use you know whatever whatever heuristic or absolute approximative approximation algorithm they want to use and at the end of the day that kind of you know it's one way to cope with with complexity but on the other hand of course the trust business um issue like that you can't trust any tokens you can't trust any any any um you know accounts per se um adds a lot of you know has to make the mechanism much more resilient against bad actors whereas in traditional finance i feel like you know you can always rely on some sense on regulation or some you know at least not a bad actor completely coming up with some attack and acting in bed faith well there haven't been any sufficiently trolly comments so i would just like to say that i think that tyrone is very right to bring up um privacy and composability in this context because when it comes to put it in the most provocative way possible uh this is a these are both the two major problems for successfully implementing batch auctions uh on decentralized exchanges uh because on decentralized exchanges you can't have privacy which you need to faithfully implement eric's design without sacrificing permissionlessness and batch auctions don't have composability which makes them not useful in decentralized exchanges because that's what people one of the main things that people want out of them so what do we do right so we definitely i agree that that having a lit batch auction has its drawbacks and i think one of the one of the arguments we would say against that is well today we're trading on continuous pseudo-continuous time model inner lit mempool and that's you know that's having a lit bed or batch ocean is a strict improvement over that per se i would say and in the long term of course we need to find ways of how we can [Music] conserve privacy in in batch auctions as well i think toruna's has some thoughts and work on that and in our mind we've been looking at using either vdfs or dkg distributed key generation to basically split the batch auction into two phases one is a phase where people can place orders and and basically you know secretly sealed bid place sealed bits on on the auction and then at some point t the auction closes no cancellations or changes are possible and anymore and only then the contents get revealed and so solvers would start solving the batch um at that point in time one other complexity that i think is a little harder to reason about is sort of what i would call like distance based sort of uh measurements so so what that means is if i think about a sandwich attack it's a very local type of mev it only puts two transactions before and after another transaction if the slippage limit's pretty loose you can basically permute it anywhere in the block and it'll still execute however if i say want to cause a liquidation i could basically front run an oracle wait for a couple other loans to fail and then you know put in another transaction after that or i could even do things like the inverse finance hack where there's multiple blocks worth of space sort of used uh to execute kind of an attack and there's sort of this notion of distance uh you know the metric that's used is not you know it's not euclidean it's it's like whatever this dependency graph has some implied sort of distance metric on it but that distance metric for these attacks really should be should somehow be reflected in the auctions right of like am i stopping sort of shorter term type of sniping like things like in the original batch auctions paper or am i doing these like long range i when i say long range attack people think proof of stakes i don't mean the proof of stake long range attack but i mean like they are there's some notion of distance uh due to composability and that makes it much harder to reason about sort of like these these types of things the inverse finance attack amazing case study for this all right can i jump in with just i want to make two quick points so i'm uh on the i'm not sure i get all of the technical issues around the composability discussions that i want to i'm constantly learning i'd love to learn more about that offline but one thought just picking up one one aspect of that discussion is that if you the one of the benefits of a discrete time batch process marketplace is that you can then be thoughtful about how you design um design competitions you can in traditional financial markets you use that as we proposed at least you use the discrete time batch processing to then run a thoughtfully designed uniform price auction for example um the batching on its own isn't a miracle cure unless used in conjunction unless you take advantage of the batch process discrete time design space if you will to design thoughtful thoughtful marketplaces so some of the some of the clever trades that involve flash loans and trades across lots of different uh venues again which i'm still still learning about in real time i think relates to that point on the privacy point i think that's really a really important topic and the way i would the thought i want to add to the discussion is economists think about that issue in terms of what we call information policy so what what information is public to the rest of the marketplace what information is private and i think in a in a in a financial exchange the distinction i'd like to draw is if i'm trying to provide liquidity to the rest of the market so i want to make a market bid 2990 s 3010 for ethereum for example i want that information to be public because i'm trying to draw in buyers at 3010 and sellers at 29.90 so i can make a spread if what i want to do is i want to buy i want to buy a thousand b for 30 10 i don't want to display that demand to trade a large quantity before i actually get to trade the large quantity and frequent batch auctions as we proposed it allow both of those participants to do exactly those two things so if i want to make a market i make a market and my liquidity is displayed to the rest of the market and it shows up batch to batch to batch to batch to batch in discrete time and if i want to trade at market my order isn't displayed publicly until i actually until the trade f until after the trade actually executes and so we we i guess i'm saying this just a flag that we you can think and design around privacy and again what economists call information policy the key is to just be thoughtful about it think game theoretically think as a mechanism designer think about what financial problems you're trying to solve and and go and go to work all right thank you for all those answers that was amazing and also truly i want to zoom in on this composability thing and troll you all some more uh many people may not know this but i'm actually an advisor to the uniswap protocol who no longer really advises actively because my ideas are you know never really listened to for the best in my opinion uh no not at all not at all it's not doesn't suck so i'm about to tell you why it doesn't suck like part of my journey um you know in in batch auctions was like i saw one of uh eric's talks i believe it was like ec18 or 17 or something like that in ithaca and i went to uni before v1 came out because like hayden was kind of brainstorming this idea should i do it should i not and i was like dude this is terrible this is like the worst thing ever look at all this mev look at all these degrees of reordering freedom like people are just gonna get absolutely screwed over on this protocol do not release this like make sure you batch an entire block and then execute the trade as a batch on this design because otherwise it's very smart it's uh it's it's fubar um and then i actually got an email from vitalik that at the time very made me very mad which was like well you know this is not a big deal we can just use these as transaction fees one day and like yolo like it's still a good design um and at the time i was like look this is just nih syndrome like they just don't want to hear it from me i'm like an outside researcher kind of coming in and trolling them and then let me say they launched the exchange and became the number one decks on ethereum instant billion dollars a day of volume you know 100 billion dollar company in token the tldr is you should never listen to my advice first of all that's not like the intent of the story this was all leading up to a question um so like one of the things we were thinking about a lot in like when that happened and they said okay we're not listening to you is could we actually combine the liquidity on like a batch version of uniswap and like this native composable version of uniswap that these dapps just really want like they want this atomic in transaction ux um how do you share liquidity across these without just like ultimately making it a front-running game on like the fastest possible exchange and this brings me to my trolley question about batch auctions which is like one of the things i realized in like thinking about all this is like it's very hard to model the way batch auctions like truly interact with like many other auction structures that are occurring in parallel and a lot of the models kind of look at them in isolation so how do you all feel on this panel that that like that's almost a general pattern for mechanism design how does it affect like the guarantees we're offering users how does it affect batch auctions and like what should we do about this basically sorry for the super long intro yeah one way i think about it is that today when you're a liquidity provider and an amm then you're basically and somebody tries to trade against you and slot one of the block that basically means they're running you over right there's some information outside of the ethereum ecosystem maybe the price change in a centralized exchange and they're just trying to you know run you over so the reason why you have to charge quite high liquidity provision fees is because of that impermanent loss and basically the fact that you're just getting run over all the time however if you could you know make your amm choose to be let's just pick one extreme only be used by a batch auction layer so for example you say if cow protocol reaches out to our amm then we know you know there's actually much less risk that this is an adversarial trade there's real demand and maybe you know the information from outside might still get incorporated but it gets first of all matched against general liquidity inside the batch and so the adverse selection impermanent loss i face from cow protocol trades is on average much lower than um if i just have a permissionless access to my liquidity and so in theory at least of course not don't uh you know block your amm off from other trading at all but maybe you could have a lower lp fee for batch protocols that tap into you than you have for like permissionless interactions and that in a sense could then you know yeah just make batch auctions even more attractive to users because you have actually a structural price advantage more bearish takes i'm just trolling i think one thing that's you know if we take the more like distributed systems lens of this right and like we're seeing this with bridges and kind of like why half the talks today were like cross-chain dexes don't exist or can't exist very well is you know at the end of the day there's sort of some sort of contracts that most parallel systems agree on like futures and promises and sort of deferred computation and guarantees on when deferred computation gets executed and doesn't get executed and there's a sense in which once you break atomicity with the batch auction the only way to sort of recover some guarantees is to guarantee a future scheduling sort of like call back that post batch auction can run on whatever liquidus there and then return some portion of the composability back kind of like a you know when you've seen a weight when you're writing a you know multi-thread program uh somehow we just have not put that in at the like mempool and execution layer in a way that you can like schedule operations post auction and like i feel like that's like the next step for blockchains to kind of recover composability if they start breaking adamicity if that makes sense so i think one one practical sounding way would be basically to take a you know how cow swap currently works which is like a transaction and then inside it it has orders if we instead make it so the orders are what we currently think of as transactions and we use the same batch auction idea to structure the entire block then we can keep atomicity and we can still have maybe like a uniform clearing price what i think is interesting is that this is sounds kind of like what uh flashboss is trying to do or people who are trying to optimize but they're actually optimizing the mirror objective function because flashbots wants to optimize the amount of minor revenue in a block and this this cow swap meta cow swap generalized to transactions is trying to uh get the get a uniform clearing price which is literally the opposite so it's two optimizations which are literally completely in conflict with each other almost always which i think is really interesting but for some reason the one that's we're paying more attention to is the one that's uh not optimizing for uh user outcomes right so so cow swap wants to get a uniform clearing price because that's the best for users um while uh well well the complete opposite of that would be to optimize for uh minor minor fees which is we've known you know thanks to thanks to your work is the same thing as optimizing for arbitrage revenue right and i would even go a step further there and say that by doing by going the route that dashwood proposes trying to maximize the extractable value we're actually going down a route that um i think it was a follow-up paper of eric um 2018 or so will the market fix the market why batch options weren't adopted and for traditional finance the reason that exchanges like nasa like cmsc actually make so much money by selling these co-location rights by actually saying well this hft revenue is part of our revenue and to me when we hear about well let's do pbs let's let's maximize mev and put it into the security budget we're exactly doing the same thing so we're moving theorem into a way where like some big players will make a lot of money and you know a lot of small users will maybe not lose a lot of money on each trade but in some basically get wrecked by the mechanism we build yeah i completely agree i think i think this is quite messed up actually i was struck by perfect numbers earlier just the percentage of rent that gets extracted so their number is like 90 plus percent in traditional finance it's like a third a quarter uh so the the rent extraction by miners in uh that was will warren's talk earlier is just there's huge numbers and i think let me let me kind of riff riff on the uniswap uh story phil told that it really that really rang true for me too that was my my reaction intellectually when i first heard about uniswops design and i think what its success teaches us is that there is a ton of noise trading so the reason the reason uniswap shouldn't work in in finance theory is that if you make a market in uniswap you're exposed kind of algorithmically to just tons of adverse selection um because if prices go up and on on centralized exchanges you just you're just vulnerable to getting picked up it's like built into the protocol this x times y equals k thing but if there's enough noise trading there's just enough speculation gambling uninformed order flow whatever you want to call it then that can actually override the harm of being adversely selective and i think what we've learned from unislap's successes is that there's a lot of revenue from what what finance theory people call noise trading uh my my um collaborator peter o'neil as his job market paper was trying to measure exactly that and it's much higher than traditional finance so amazing trolling first of all especially live you literally predicted my next question like wow [Music] i now i feel bad for doing so many intros because we could really get into this topic um so my next question was actually going to be like is the flashbots auction for the mempool a batch auction a discrete batch auction and you know if yes how does it differ from the batch auctions we want to build if no then why not um and i think we already kind of answered this but curious to hear some more expansion if if some is available if not i'll provoke further trolling i i remember the flashbacks team reaching out to us because they wanted to implement frequent batch auctions for the the the basically the bidding of of of bundles or block full block proposals and to me it's it's obviously not a batch of auctions not we're not trying to find a uniform clearing price or we're not trying to line up multiple bids and offers on on two sides it's literally just an english auction on who is paying the most for this right exclusive right to propose the block so in my eye i always wondered why flashboards were talking about batch auction in that sense um i i disagree i think it's not a bad structure yeah it's not a bad traction it's definitely a combinatorial auction that has sort of like some downstream effects this is why i was mentioning this sort of like long range for short range purchasing power right like sandwich attack very boring kind of very short range doesn't really impact other trades in the block at all because usually sandwich attack participants are risk neutral so they don't impact the price that much um but on the other hand like a lot of the liquidation stuff or or things that are oracle manipulation over multiple blocks especially t-waps you that stuff actually is very very different right you're like really bidding on some like very long term downstream in the transaction ordering process and that's probabilistic also and so it's actually kind of there there's sort of this fact that you're you're sort of bidding on a very highly diverse set of goods and the goods are also constantly being created and destroyed for instance like a rebase token is a great example of something that is like effectively you know you might as well that just like in a batch auction would be kind of extremely scary in some sense and like all the mev against say like rebase tokens effectively just doesn't look like that auction can probably never could i don't know i'm gonna i'm gonna take like an opposing position just for the troll sake of discussion right like you said there's no uniform clearing price but that's not necessarily a feature of the flashbots auction the flash botch auction is like discrete time one bid per ebook right and like if dapps want to enforce a uniform clearing price on top of that or enforce batching for example the way cow swap does when they submit to flashbots they can and then it becomes about like aggregating which of these preferences is valuable enough to be included in this current batch against this economic metric so does that change your answer or does it does it still not change your does it not converge am i missing something here i think you're auctioning off a batch right and you're not actually trying to find to batch bits and offers i mean you can there's no reason that you don't right like that's a yes so the feature that's not in the name is the uniform clearing price part so just i think just just getting triggered by the words in the name probably isn't so isn't so productive but the i think the point is that empirically it looks like it you have to squint a bit to make the objective functions kind of in the same space because orders are not the same things as general transactions but you're basically optimizing for the opposite thing so the worst possible um the best possible flashbots block is the block where you get basically the most dispersion in clearing prices of trades in the i mean you could literally prove that in the case of unit swap for example like the best unit swap if all you have is uniform transactions the best thing is to make all the prices that are in the block as as different as possible so it's actually literally the opposite thing and then if you sort of squint and you compare that to like utility of the natural users of the thing then you know you're literally trying to minimize that so of course like to say something a bit more more um optimistic i think um you know when i asked earlier about how can we without privacy how will we ever make batch auctions work well uh felix had some uh plausible sounding suggestions involving some cryptographic primitives that you can somehow magically use for this which i believe don't know much about but i but i believe and i think that that actually uh shows us a way forward for ethereum which is that if you can solve this privacy batch auctions you know keep privacy while keeping also permissionlessness for batch auctions we can generalize that idea to ethereum transactions and instead of trying to uh maximize mev in blocks we can actually uh try to you know maximize something something akin to a uniform clearing price um in in in blocks amazing i'm going to take the trolling one level further and then i'm going to cut it off which is you mentioned the uniform clearing price so if you did enforce that on a unit swap level on top of the flashbots auction does it become a batch auction like if uniswap were able to say like we need all our bids in like any flashbots bundle to like clear at the same price or they're not valid at the contract no not because it has nonzero curvature like the problem is the design of constant function market makers can never have that like like effectively you can't have a zero actually zero curvature thing unless it's a fixed price and and usually in unislop's case that's not it has non-zero curvature so like i i think like it would have to be designed as a different system it wouldn't wouldn't work in the way it does designed now all right great trolling so we have two minutes left uh i would like random people on the panel to chime in and we've talked a lot about time how does mev and batch auctions relate to the general philosophy of time in these systems and say something truly for the audience to go home with today land port clocks don't exist that was pretty good no no time trolling can you pre-associate on this a little bit to give us something to think about okay so like uh you know uh mev is about reorging right it's like about changing the time at which transactions executed where the time is like the relevant time of the state and exploring the mev state space search could be viewed as exploring multiple possibilities in like space time and deciding on which one to like gravitate the current universe towards so in this model of time what do we do next and we have like 30 seconds so maybe nobody knows so i would say with batch auctions at least we don't have a different concept of time in the instant whereas with the traditional model even the instant has different time orderings i don't know if that makes sense any thoughts on time yeah eric i'll give you uh so thoughts on time i feel like i'm in college again um so but so discrete time batch auctions let you have a let you have a unit of time that allows for for a notion of ties in traditional financial markets you could batch it like once per millisecond and do a whole lot of good because the sniping races that we're able to measure empirically they take place at the level of millions of seconds the typical sniping race is 5 millionths of a second um so what's kind of fun about the design space here is that you could batch at a much more human meaningful uh time interval um and that also allows you to do a lot more kind of cool comment of tourette's um but i i d deep thoughts on time giving me flashbacks to to freshman philosophy so let me let me leave that great so my trolling world all right so i will leave everyone with their flashbacks to freshman philosophy i think our time here is over thank you very much and thank you to the panelists that was amazing for putting up with all my trolling [Music] you 