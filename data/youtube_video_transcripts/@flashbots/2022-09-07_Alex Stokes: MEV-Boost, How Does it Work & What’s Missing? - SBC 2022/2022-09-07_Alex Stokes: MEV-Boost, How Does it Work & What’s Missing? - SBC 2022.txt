okay everyone so so far we've looked at a lot of different things like Mev broadly and how it affects crypto and you know just the landscape in general uh then we saw this great talk just now where vitalik looked at like some of the forward-looking issues around like how can we do this securely what would that look like and now we're going to zoom in to uh some of the like very sort of at hand developments with muv in particular Mev boost you've probably heard a lot about this especially over like the past couple weeks so I want to kind of give an overview of uh what it is how it works and how it lines up with everything else you've heard so far today so you hear all these words like Mev PBS Mev boost like what what is all this stuff uh I'll assume you know what Mev is and you know the bottom line is it's like a decentralizing force right because if you have actors who can extract a movie better than others then there's now this incentive you have these economies of scale that puts pressure on the value sets to centralize and this is not great right because it harms you know very directly the decentralization decentralization of the network so you know there's like many this is like a very big complex problem there's many pieces to it one of them is just saying hey can we change something to help preserve uh you know validator decentralization and you know the like sort of very high level answer is you just separate them uh and this is what we mean when we say PBS proposer Builder separation uh in some sense you're like firewalling all this Mev stuff into its own layer people like blockchain layers so now writing another one and uh yeah that's kind of the high level idea so ultimately right we want to enshrine Something in the protocol there's reasons that it would like make a lot of things more efficient or like more secure on different axes if uh if this is actually part of you know the protocol itself but uh as hopefully you'll come to see today this is like a huge design space there's like a lot of questions so we don't want to just like rush to like enshrine something right now and so in the meantime what can we do well math boost is this thing is essentially this all chain implementation of PBS uh which is what I said here so like the flashbots organization and collaboration with many of the ethereum developers have been working on this thing about boost there's a link here this is sort of like the main landing page uh I suggest you go there there will be at the end of the talk like a huge link dump like there's a lot there's a lot of material uh but you can get started there so Mev boost is okay okay so yeah let's just talk a bit at a high level of what PBS is right so proposers and Builders you know they come together you see this diagram here the idea is that you have a you know blockchain you know see these blue blocks they're chained together with the arrows that's great uh you know with the merge happening now we have this consensus layer and this execution layer and the idea with these like little green boxes is that these are like the execution payloads so this is where lamev lives when you look at the system I tried to like communicate that like some payloads have more movie and some have less with this like gold border thing so here's some nice cartoons for you and the question is now okay as a proposer I'm making the next block in the chain that's the one here at the end on the right uh proposers you know may want to sell this block space because for example some Builder has specialized in this Mev game and uh perhaps we're both better off if they can communicate Builders definitely wants to like buy this box base because uh this is how they can actually sort of make their way in the world so we have this problem right we need proposers to connect to builders and the question is how are we going to do this uh if you know we'll just kind of start from scratch and just say they exist in the world and we need some way for them to connect so it's not clear how because we've said nothing else about the problem uh the solution is med boost so Med boost is like a couple of things one is like this network so you know we'll see that there's going to be a network now that like connects these two parties it's also like an implementation a bunch of different like software assets that we'll also look at a bit so first we'll talk about Mev boost as a network and it's to solve this problem of connecting Builders to proposers right so a sort of naive a solution is we just say okay let's literally just like connect them somehow uh there's a quota Rendezvous service of map boost and that is what Med boost is going to do and it's really just to solve this direct problem of I want a build to block a built execution payload and it's going to uh this is how I'm going to get it just like connect in some way so yeah like how would this look like the proposer comes along every slot they again can query this network for the best bids they can pick the best bid and put that into their block so again you see there's like different bids over here uh allegedly the proposal would pick the most valuable one and this one has like the thickest border you know so they collect that one put it into their block there's a catch though because uh the way that I tried to communicate this so far is that you know any proposer can come do this right there's just this like open network that anyone can can use and the issue is that uh this will lead to a problem because we want an ethereum to have a very decentralized voucher set and this means that like you know almost anyone can participate and this is a problem then because then these proposers these validators can see the contents of the buck and we'd be concerned about them abusing this power and in this setting it means stealing the Mev right so the idea is that as a builder you like make this like valuable payload uh you'll probably you know collect some of that value for yourself to compensate you for your efforts the rest of it probably goes to the proposer and again that's what the schematic shows here but if we do what I've said so far which is just have this like kind of open network with some abstract Rendezvous service the proposer gets the block and it says oh here's like a juicy payload I'm just going to collect all the value for myself rather than give any to the Builder so we need to like change this scheme somehow so that meth boost is like actually secure so yeah there's a couple things we could do like one of them is you just say we only allow trusted entities into our you know sort of Rendezvous Network here right so if we have proposers like they essentially are whitelisted in some sense like we trust them to not steal Mev from block builders and that would work but for a number of reasons it's like hard to implement it also doesn't scale again right we want any validator to be able to participate uh otherwise we're like kind of going against the key point of this whole PBS in the first place which is to like you know allow anyone equal access to this Mev game um yeah and then it would Harden the centralization again for these economies of scale that we keep seeing so instead let's say Okay option two we'll just remove the trust assumptions and the question is how do we do that and Med boost attempts to do this right so we want to support anyone to access this Builder Network and the way that we're going to do it is rather than just have this sort of like you know open sort of game we now have this commit reveal scheme where Builders commit to what they're going to build proposers have to kind of opt into this in a way you'll see in a second and once they've committed to it in a binding way then the Builder can reveal the the full payload [Music] um yeah so critically though this reveal bit is very important and we'll see for some of the security sort of reasoning around Med boost uh this this becomes important point so again in a very schematic way it looks like this and you know the the thinking is supposed to happen every slot so you have a builder on the left proposer on the right and rather than sending this like exposed payload right so over here previously the idea is basically everything's sent in clear text so then I can just take this and do whatever with it for example take all the Meb rather than just some so instead we're going to Blind it in some way uh how this works in practice is that rather than send the full block you just send a essentially a root a hash of the list of transactions that goes to the proposer the proposer can verify everything else other than the batch of transactions so you see it's still blinded on on the right there in the first part they build the consensus block so now you have the full thing uh we have this like nice part of the cryptographic scheme within ethereum that they can basically sign over this block which commits them to it uh and it's still a valid signature over the whole thing that's later unblinded so that's what they then send to the Builder the Builder sees this as commitment that they have in fact accepted the bid they can then release the unblinded payload and that's what you see in the very last step and now this is great right uh anyone can join anyone can participate however there's still this like catch that I just pointed out where Builders must do this last stop right if they don't then what happens is that the proposer is committed to a block and if they turn around and try to make a different block uh that would be a conflicting signature they'd be slashed that's no fun so it's very important now that the Builder releases the payloads and it turns out this is actually like sort of an attack Vector here right because if the Builder doesn't do this then uh yeah there's basically a liveness fault meaning there's no block for that slot so if this ever happened in a row you know if this happened many times in a row then um that would look really bad so we're going to add a trusted party now to like fix that issue and this is the relay right so again like the the core issue here is that Builders and proposers like don't necessarily trust each other and that's to support the fact that like anyone could be a builder anyone could be a proposer uh and so now we still need some way to like have them work together and there's a number of places where we're going to need to like have someone do things that require some amount of trust that's where we introduce this relay so relays do a number of things uh they basically assure the builders are doing their job right so that Builders are only making valid blocks a builder for example could like try to grief a proposer with an invalid block that's not good uh they also provide this availability guarantee right so Builders are not necessarily trusted to do this step because they relays then make sure that they have the block the full block you know the clear text block and when they have enough information that uh everyone who's done their their part then the Relay can release it so again Builders trust relays to not Sleek Mev uh you can have many relays which is nice and yeah so here's an image this is from the flashbots blog and it kind of lays everything out so you have many Builders they're competing uh you have one relay here but again you could have like multiple of them competing and again like kind of the more the more actors you have at each step that's better for both like fault tolerance right so there's no single points of failure and also just general competition to help things remain healthy um and then yeah you can see there on the right you have map boost which is this component uh that's connecting the proposer hear the validator to the rest of the network so again high level that was the idea of like how math boost Works generally how we like start to build this like out of protocol PBS as this like Builder layer now we'll talk a little bit about the software concretely uh because you know there's enough boost this idea but there's also the software that does all this uh the first thing I mentioned a few slides ago was the builder specs so this commit reveal scheme that I kind of Drew out over here this has been enshrined as like a set of apis that you can find at this link here and that's pretty cool right so now like anyone who wants to play this game just has to support the apis you can kind of experiment and depending on each side of the API so uh hopefully this leads to uh you know less encumbered experience you know it lets us more freely like evolve the design over time importantly like all the consensus clients do support this Builder API so that's pretty cool and um yeah that's uh it's a great place to get started with some of this stuff if you are looking to contribute then separately there's map boost as like communication software um again the way to think about it is like this relay multiplexer so there will be a hopefully Market of relays and map boost now my Boost now has to say okay given all the relays who are aggregating all these Builders like what's the best bid for my professor locally importantly it was built with this like quote sidecar architecture and this is nice because it doesn't it's not on the critical path necessarily of block proposal in general so there's like there are like fallback Pathways in the event that something fails for some reason with the local proposal or like the proposal over the one slot and also it supports client diversity if you guys are familiar with flashbots at all you've heard of MAV Geth that's basically taking the one client Geth and making modifications to it this is now client agnostic because any of them work with again the sidecar so that's pretty cool and I think shows that uh everyone's work to kind of improve the situation uh as we go and like kind of perpetually decentralize things and yeah there's this nice architecture diagram here this is from the dev boost readme uh if what I'm saying is very abstract hopefully this helps there's just again the network of everything you have Searchers doing their job perhaps there's private order flow those all go into Builders and again many Builders Multiplex Honda Mini relays Multiplex onto my Boost and you have your local ethereum node over there on the left so another question is like what's next uh you know the merge is happening soon so then this Boost network will be live that's very exciting and what's next well we can talk about what goes wrong right so like at a high level there's just general like incentive issues like there are many parties here like when you see anything in crypto and there's all these diagrams with many boxes you should start to be worried because people conclude there's like subtle interactions between all the different parties and how their interests align so it can get Harry pretty quickly um so that's one thing is just looking at the system be like okay how could this be used how can it be abused how how does that end up looking like in particular Builder centralizations like a really key piece of this uh see the previous talk right so like we don't want to be in a world where there's one Builder that is essentially the Gateway you know into every out every validated node here a big piece right is we kind of had to reintroduce this notion of like a trusted relay um and that's less an ideal right the relays do have a lot of trust and so there could be various types of faults both and with respect to safety and liviness where uh you know either through a bug or an actual sort of adversarial attack relates to something we don't like uh for example like I really could misrepresent the fact that some payload is valid uh and then if a proposal were to give it to it that would essentially be the safety fault uh in the sense of like this yeah this block is just invalid now that's not good uh you could have leibnus fall right where it's basically the relay doesn't make the payload available in time and so even if the proposal did everything writes then still they don't have the Block in their slot uh there's some things we can start to do even today to to help the situation here with the relays uh I'll just plug a repo started this relay Monitor and the idea is very much to like have a service that sits and like independently watches all the relays that we're aware of and try to make sure that nothing bad happens um it's like structured generally as this thing that will sit and just like look at all the bids every slot uh even act with proposers if they choose to opt in but essentially the idea is like gather all the data you can and then just summarize that into essentially a scorecard that for example a boost could use to say Hey you know uh this relay over here has like stopped producing box in the last hour I'm going to stop using it there's things we can do even outside the entire like sort of this Builder layer this like Mev landscape uh there's this notion of like a circuit breaker and this is even saying again before you even get to any of this Mev stuff just as they can since it's node if I see for example like some number of blocks over the last couple slots are missing I should just stop using this entirely maybe it has nothing to do with this but we'll just be safe until conditions improve and yeah then we can look a little more broadly and say how can we improve this mechanism itself we generally want to like work towards something that we can put into the protocol and so this is a great way to like kind of do that incrementally uh you know and also incorporate actual real world experience as as a situation unfolds um you'll see a lot of talks later today about ways to improve yeah I called it the Integrity of the game so for example you can imagine like decentralizing order flow to like avoid this Builder centralization issue there's a number of like concrete things we can do like probably even today so for example I mentioned like with safety faults with like Builders or relays you can imagine there's instead of just having this like thing presented to you that the proposer kind of has to blindly sign sign there could be a proof of validity right you could have like a committee that does this you could have some sort of snark to do this there's different ways to think about it but that would be sort of a strict improvement over the status quo another one is uh payment proofs so right now you have these bids for a given payload and you just have to trust that the Builder and relay have like properly validated that this is actually the case otherwise you could just like send a bit through with like the max way and always get on chain but then suddenly you're the only Builder and that's not great right so uh I linked to this GitHub issue here I'll put these slides on Twitter later so you can find it uh but yeah there's designs around payment proofs so there's some sort of verification that the bid is correct and then also payload availability I keep hammering that this is like a huge problem with the relays it's just like if they were to not make payloads available on time and you can imagine some kind of data availability committee ideas like this where there's some again trusted set trusted entity but they're you know maybe it moves from a single uh party assumption to like a threshold assumption where now again it's it's just less trusted less concentrated Trust and yeah we want to work towards generally decentralizing this relay functionality and the hope is that this moves us towards some understanding of what in protocol PBS would look like and what makes sense and then just generally yeah there's like so many questions here a good place to dig in would be the just the issues on the med boost repo uh there's a lot of good stuff in there to give you like a flavor hopefully to pique some of your interest uh there's a question of even like the auctions here right should the build bids be sealed or open and this is referring to as a proposer when I go to like get my bid from the network uh do I basically can I see all the other bids uh or does the relay somehow like package them in a way that uh yeah they can't be seen the reason you want this is because uh if bids were open which there are now then as a builder I can go and like before I submit to my bid first slot I can see all the others and then I can bid you know I'll bid just a little bit more so you get this sort of like PGA this like gas War type Behavior just at the relay layer uh but then if we do see the bids there's a question of you know how does this affect incentives and yeah I'll point you to the issue if you want to see the conversation there another big one is like PBS broadly like how does it affect the protocol um so one thing here is like if you have builders colluding with proposers they can start playing these games where for example the builders here the Builder starts to build a valuable block it wants as much time to do this because again just in general the more time you have the more effort you'll be able to put to uh to build a very valuable payload and that's fine for the Builder but it's not great for the network because what it means is you're incentivized to wait until the very last minute and generally this harms Network Health if you were to imagine every block comes in at like the absolute last second so again there's this like incentive issue and um yeah there's it's a bit of an open question so I'll just do this as like a final call out uh how do you want to contribute if you want to like help with the code of the specs again there's a flashbots repo there's the Builder specs I mentioned if you want to get started as a user so you can run MAV boost if you have like your home setup going that merges upon us so you can go to boost.flashbots.net you could take a more involved role in the ecosystem you could run a relay or a block Builder these are again very sort of involved tasks so just think carefully before you act but if you want to learn more about that there's some links here and yeah I'll tweet these slides out so you can actually get to the links and things you don't need to like worry about writing down all this text and yeah that's a link to my Twitter profile if you want that and that's all I have for now so if there are any questions I can take those [Applause] I have a question first of all thanks for the really nice uh and Clear Talk and I especially commend the use of Excalibur for graphics love it my question is about these relays are they different from inter blockchain uh technologies that we already have some of them deployed like IBC the cosmos ecosystem we have layer zero I'm from chain link you know we're building CCAP and we've talked about it any difference yeah so we all like to use this word relay I think it's used a bit broadly here um yeah I don't know like to me a relay in this in this setting the like the more broad setting you're talking about is one where it's like we need something perhaps happen happening off chain and then there's like just this like hole in the in the space to fill and like the relay steps in to do this um here like relays very specifically have like a task around like again Gathering blocks from Builders making sure everything looks right providing that to proposers facilitating the auction uh making payloads available and yeah just all these very specific tasks it was awful so you're saying it's a subset of what well I was like an IBC relay I think I mean they have different tasks like IBC I would agree but layer zero for example all they do is take messages or events that are emitted on one blockchain and reliably securely attests that they're posting it through another is there a difference yeah I would I would just think they're yeah they seem different to me okay yeah hi um I got two questions here so the first one is a bit technical so in post um like we have all these validators right and like they build blocks in 10. so I wonder if the relayers needs to kind of keep the communication with all the um all the proposals all the time or you kind of your hop Like You can predict who is the next proposal and then just connect to specific purposes right okay so I think generally the question was is there an issue with like knowing proposals ahead of time and if Builders can like abuse that somehow um and they may uh so right now in ethereum we do know the proposers with like some amount of look ahead uh there is work around like you might have heard of ssle or like secret single leader election and that changes us a bit uh but yeah you can imagine now that like if you know the Builder knows the next like say 32 proposers they could connect to them directly uh there's like privacy reasons a proposal might not want to do this because then you know if I'm like hey I'm like this this validator and this is my IP then suddenly they open themselves up to DOS so it's not I think the smartest thing to do uh and yeah part again of these like open questions around this design generally that I'm I'm trying to gesture towards is just like understanding the incentives and how different actors might include and what we can do like what's important to mitigate how we can mitigate it and yeah there's there's a lot going on thank you so my second question is more like a design question so at the moment you adopt the silt beat auction mode so I was wondering why you do not kind of like publish like the piece after the auction has finished so in a sense is more transparent and everyone can check whether there's anything like fishy or malicious going on right so so right now the the auction for map boost is open bid as in anyone can go see them that are made available by any relays so yeah I mean as soon as the bed is there there's a lot you can say around like is this a valid execution payload uh the only thing you don't really have is the transaction set again to like prevent this Mev stealing um but yeah there's a lot you can do you could even imagine like looking uh over time like you could query mini beds and see if like this relay is like for some reason offering bids much more valuable than another like there's a lot you could do to ensure like the market itself is healthy and yeah again I think there's a lot of questions around the exact auction mechanics and if you're interested you should please take a look thank you I guess this this one's somewhat related but maybe Arnold more philosophical level so and maybe if I misunderstanding your product but the way the way that I understand flashbots is a neutral decentralized platform right censorship resistance same as Bitcoin ethereum right that's important um but I also understand the spirit is to improve the space right um so how do you contend with these two maybe conflicting principles that are neutrality decentralization but also protecting users and morality right um you know in a fully decentralized ecosystem how do we how do we as users as you know Builders how do we self-regulate against unethical Mev like sandwich attacks run running back running right liquidity sniping because institutions are not going to come in right the mainstream adoption is not going to come in until we solve these issues so how do we how do we self-regulate this yeah I mean you're asking all the big questions uh I can't speak for flashbots directly but just you know from what I can say as like a contributor to ethereum like um yeah I mean it's really important like there's a lot of different places in the stack where we can I think improve the state of things like you mentioned users and like user harms and this notion of perhaps an ethical movie so um you know there I would say like users should demand like better from their applications right so like for example like there's like uh this this like slippage notion and you know swap well actually I think with uniswap is I think they should focus more and maybe rebates and you'll hear later today I think about this notion but there's ways you could imagine where like you provide some of the value like recapture some of the muv that like the application exposes and uses that passes that back to the user is like a rebate and again it's like a very big open question about how you do this in general um but yeah I mean generally just demand like demand applications to be aware of Mev and like have them provide answers that you know are helpful um then there's like our protocol level concerns you mentioned are on like yeah the health of the networks and ship resistance things like this and that'll be an ongoing conversation um yeah we just have to keep talking about it awesome thank you yeah hi so um after the merge like essentially Builders through layers validators all can from run each other right so my question is like um because of the math Booth mechanism that um in the end like validators get to choose like which block to go for it so like if the blog rewards low then this block won't get picked so I think it's kind of um the builders like had to me initially to need a lot of like transactions before like adding the Builder its own transactions right so what kind of the kind of the profit maximizing play for the builders and I I feel like it's it's like the likelihood of like uh Builders to collude with like validators is like really high and I want to know like who are The Trusted validators so far on the market are they like all working with Lido right now and uh also like is decentralizing like the Builder Bros is really good thing or we should just go for the reputable Builders yeah uh right there were many questions there uh but I think generally you're just asking about like yeah to what extent yeah what does America look like today uh and again it's like very big I don't know if I can like give a nice overview just like right now um something you touched on was like should like is it or even worthwhile to like decentralize these different functions and I think very much so right like even if we start where we are today and like making incremental progress over time like that's better than doing nothing um I do think it is like I don't know I I would be worried if we get to world where like to use ethereum you have to go through like one two three Builders so yeah like I think decentralizing all these functions should be like our top priority um yeah and then again there's just like so many pieces like it maybe touches everything so there's obviously a lot more to say but um yeah hopefully that was helpful all right thanks [Applause] 