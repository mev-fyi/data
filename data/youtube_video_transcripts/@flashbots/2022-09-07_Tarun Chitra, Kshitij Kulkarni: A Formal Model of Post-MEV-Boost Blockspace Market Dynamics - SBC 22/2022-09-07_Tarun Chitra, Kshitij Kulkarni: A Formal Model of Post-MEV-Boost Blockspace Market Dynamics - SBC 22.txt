we're going to kind of talk about something that's kind of related to the dynamic fee collection I'm going to basically talk about how proof of stake security is related can be related to how much Mev you can redistribute and in some cases quite counter-intuitively you can actually have significantly lower inflation rates and subsidy rates um and yeah so that's what we'll be talking about so first a little background so anything in a proof of stake World actually becomes a lot more interesting so you know kind of if you were here earlier at the panel you may have heard true arm talk about sort of the lack of adaptivity of proof of stake being a sort of problem and sort of there's this trilemma between proof of stake and proof of work where you know you sort of need to know the stake distribution before you're able to actually sample how things change um but on the other hand because you know the stake distribution you could redistribute Mev much more efficiently uh and you know things like Mev smoothing or you know I guess we we wrote this paper before we knew that was the term so we called it me redistribution but um is a lot easier to do in the proposer Builder separated World um part of the reason for this is that it just makes the cost of off-chain agreements to avoid paying redistributing some of the Mev to the rest of the stakers uh significantly higher um of course you can't totally remove off-chain agreements I think you can uh reason about that but one of the questions then is you know how how does redistribution change security properties of a proof of State protocol and so a body and Vemma probably perform the first sort of analysis of this actually I think it was on one of Elaine's slides that was a smooth curve um uh but we wanted to kind of analyze this more formally so what is Mev redistribution Mev smoothing it's really about redistributing collected Mev some fraction of it perrotta to stakers and while we have no known credible uh way to prevent off-chain agreements uh you know for now in this paper for this analysis we sort of assume there exists such a mechanism um there are a bunch of ways to potentially do that do that uh both either directly from how the proposer consensus rules are built or something like eigenlayer but we leave that we just assume that there exists such a such a system and the real question is to understand how it affects security so what does security actually mean in this case well actually the last time I was gave a talk on this stage uh was about this uh point about how do you ensure that stake is sticky in proof of stake that people who are rational not honest not Byzantine don't move their stake from locked in the network to reallocate to defy in some way shape or form and this paper showed the sort of non-asymptotic phase transition between scenarios where all the stake stays staked versus all the stakes goes to defy and sort of somewhere in the middle where you have this sort of like uh sort of probabilistic phase transition now one question about moving between staking and sort of D5 like Lending is that lending creates Mev via liquidations so this is basically you know there's a position that's underwater it's a aveer compound and one of the reasons it creates sort of semiv is there's sort of this race to submit the first bundle that follows an oracle update for that price change you can buy the collateral at a discount and then resell it so you might say okay well now that we know that there's this one form of MV it's actually in fact the dominant form of the tail of the distribution you know Dex Dex Mev is actually quite small one question you might ask is how do we relate sort of yields from staking yields from lending and sort of the implied yield from Mev and so one thing that's been true since about March of this year is that empirically is that the utilization and lending rates in almost all on-chain protocols have been quite correlated to Future liquidation volume it's sort of you know some type of slight Auto regressive model and so we say okay let's assume this correlation holds because then we can at least sort of reason about how things are going so now let's just talk about sort of the simplification like what we do to be able to Analyze This so you know this talk won't definitely won't get into anything that uh of the proofs we're just going to kind of state the results and give sort of the notation so a proof of stake protocol has a token Supply s of K has a block reward R of K plus one this is a reward schedule there is an amount of protocol owned liquidity Epsilon of K that is either burned so that means EIP 1559 something of that form or it's protocol owned it's a protocol where basically the Dow treasury takes some fraction of each blocker and we have sort of this natural Dynamics so there are n agents they each have a portfolio their portfolio consists of coins some allocate the staking some allocated Lending um and effectively you can compute the total stake Supply the total length Supply and the total protocol owned Supply so that's L lent T staked Epsilon protocol owned lending yield so lending yields we we model this just strictly off how compound and Navy's interest rate curves are constructed The Lending yield is given by this following update in this case we use a linear model based on utilization the utilization in in any defile lending protocol is the total amount demanded in of borrows divided by the sort of total amount in Supply and we you know for analytic tractability assume that there's sort of a constant demand relative to the market supply but you know in simulation we simulate with more complex demand schedules and I'll let just check from here um cool so I I think the next step is to model is to model the Mev and I think as Turin said um sort of the crucial assumption here is that uh lending yields now are correlated to Mev at some point in the future so this has served the idea that liquidations and Mev lending right now causes Liquidations in the future or something or something like that and so basically we model this as this sort of uh regressive process where uh Q at K plus 1 would Q of K is the amount of Mev extract at a time K is correlated to Mev positively correlated to Mev at some is correlated to lending yields at some some time in the past and you know for Simplicity we can just assume that that time in the past is zero units of time in the past to get you get an equation that relates yields right now to Mev in the next in the next step so so how do uh so uh we already introduced the The Lending Guild now uh the step for the staking yields uh the agents choose portfolios uh and their staking yields are basically the reward schedule of the uh of the proof of stake protocol plus this added Mev component uh distributed per audited the stakers so you you take you you bucket all this uh all these tokens up and then you distribute them according to their stake portfolios and that's all this equation is staying um and so now the question is how how do the agents sort of choose their portfolios and if they're sort of economically rational they should be choosing portfolios in a way that you know in some sense uh matches sort of the risk that they're taking in in staking and lending uh so to do this uh we sort of introduce uh three additional uh parameters in the model one is the uh sort of uh the risk that they're taking for staking and lending uh which is given by this uh fixed in time uh covariance Matrix Sigma uh whose entries are say just drawn from some exponential distributions that indicate their risk preferences over time but these are fixed and then they use this covariance Matrix and the return Vector that they observe in the last time step along with the risk parameter Lambda that says how do I want to trade off between the return and the risk and they solve at every time step a uh mean variance optimization problem and so this optimization problem basically says I want to trade off some amount of return for some amount of risk and each agent is solving this over their over their portfolios which are allocated to staking and lending and it turns out that you can you can give a an analytic solution to this uh to this optimization problem that every agent is solving uh at every time step so once you have this solution you can plug it back into each agent's update for their stake portfolios and now you get sort of a a bona fide uh feedback system so the only variables in the system uh are the reward Schedule R of K plus one and what the protocol is going to decide to be burned or protocol protocol and liquidity but this is truly a feedback system it's a deterministic system that takes staking yields and lending yields for every agent at time K and updates them at time K plus one assuming that these agents are solving these amine variance optimization problem and so the states of the system are the N uh staking yields for all the N agents plus the one uh blending yield so it's a n plus one dimensional system uh but one thing that you can note is that Alpha this fraction of Mev that is redistributed to the stakers uh at every time step uh shows up in these Dynamics and basically the goal is to understand uh how the system behaves as Alpha changes that's basically the sort of the punch line of the paper so I'm just going to now do uh 200 years of dynamical systems in two slides so yeah so what is a dynamical system a dynamical system is just uh you fix some initial condition uh which could be a number in our case it's a vector and you have a rule for updating the state over time given by this function f uh and in particular we're interested you know because here we're trying to understand how alpha this parameter that's shifting these Dynamics at every time step uh affects proof of State security we want to understand the behavior of this of a dynamical system around an equilibrium point and so what's an equilibrium point it's a point where if you plug that point into the system so if you take F of that point you stay at that point forever so you're never moving from that point that's so that's that's an equilibrium point and then we need sort of one one more definition which is the definition of stability so stability means uh roughly speaking it means that if you have an equilibrium point somewhere in the state space uh if you start close enough to that point you will end up reaching that point uh as time goes to infinity or in some amount of time and so there's one more concept that we sort of exploited in this paper to characterize how this system behaves under a particularly bad equilibrium that I'll mention in the next slide which is this notion of uh linearization and so what this says is if you have a dynamical system which is given by this function f you you do one of the stupidest things that you can imagine doing you take its tailor approximation you throw away all the higher order terms and you create a linear system from that dynamical system so you take the first order approximation you throw away everything else and it turns out that the uh some properties of that linearization tell you a lot about the stability of the non-linear system at this equilibrium point in particular if the eigenvalues are smaller than one then the nonlinear system is stable eigenvalues of this linearization if the eigenvalues are bigger than one then it's unstable and so uh coming back to staking and lending we have this dynamical system so what's the really bad equilibrium point here from an economic security perspective it's it's the point when staking goes to zero or the staking yields go to zero for all the players um and uh so mathematically this means that these gamma I s's are going to zero identically for all for all I um and so one thing you can like verify is that this is indeed an equilibrium point so if you plug at this point in there's some lending yield at which uh this this this equation to satisfied the equation uh that if you plug it in if you take f x star is equal to X star so this point is an equilibrium point of these Dynamics and it's really undesirable because it basically means your security system has the proof of State security has crashed and your system is no longer useful and so we want to avoid this equilibrium point so how do we do this the basic idea is make alpha large enough such that you you make the linearization of the system unstable so you force the eigenvalues of the linearization out of uh being outside of being magnitude less than one and if you can do this then this equilibrium point this bad equilibrium point is unstable so of the basic insights here are if you make alpha large are large enough uh you can avoid this bad equilibrium point that is if you add economically this means that if you feedback enough of the Mev and distribute it to the stakers you can sort of force them out of uh of this sort of very undesirable equilibrium from a security perspective but there's another interpretation which is uh if you fix an alpha if you fix a a sort of a an amount to redistribute the reward schedule that you need to achieve this uh this sort of instability of this bad equilibrium point uh is going to be less than what you would need if Alpha is zero that is you don't need to inflate your token as much uh or at as fast a rate in order to make this equilibrium unstable and so we did some simulations and sort of it turns out that uh in many sort of uh inflation rates on many uh rates of values of R uh and in sort of many instances uh the you can in fact avoid this equilibrium point so that is you sir and actually these simulations are even stronger which is what what they show is that uh you actually end up uh going to this going away from this equilibrium sort of a it's not even asymptotic like in a finite time you can escape you can move to uh sort of here in this case the all uh the all staking equilibrium so no one's lending uh but effectively are close enough to No One Lending it's you you can't actually reach there uh but yeah so the punch line is uh you can use Mev redistribution to to sort of avoid these bad economic equilibria that occur uh in these six systems uh and uh to do this you require actually less inflation or sort of uh lower inflation rates than otherwise necessary and so I will just leave you with this Meme and I'm happy to take any questions [Applause] hi hi just a quick question um do liquid staking derivatives drive down the alpha requirements at all so there's a paper in between these two these two me and Alex Evans that does show that they do do that um they do have this bad Port they they basically do reduce the genie coefficient at the expense of like kind of increasing the slashing rate so there's sort of some trade-off when you have liquid safe Intruders um the main point here I think that's more interesting than Satan derivatives is that you any of these this Mev redistribution MV smoothing is actually this like feedback control system right you took this like very deterministic like dirichlet process looking thing and you added in this feedback mechanism and the feedback mechanism actually gave you exponentially less inflation needed like one of the previous slides actually shows a deflationary inflation schedule even though you might have to give more Mev back so that's the top left corner a deflationary muv schedule so that's like a deflation inflation schedule that's like Bitcoin can can actually avoid this bad thing if you redistribute that's not true at the staking derivatives well if you combine the two could you drive the inflation rate even lower though yeah yeah okay that we we suspect like the fact that you can you can go to fix Supply event asymptotically with uh Mev redistributed now of course this assumes uh this this sort of positive Auto regressive model for for Lending right and and that's not always true uh and also of course there's many other types of mute right it's only the third largest type of Mev um but the idea that uh oh sorry it must have passed uh yeah yeah this this thing assumes beta p is greater than zero for all p or greater than equal zero for LPN there's at least one p for which it's greater than zero uh and that's not always true but that has been extremely true this year so yeah okay makes sense thanks cool [Applause] 