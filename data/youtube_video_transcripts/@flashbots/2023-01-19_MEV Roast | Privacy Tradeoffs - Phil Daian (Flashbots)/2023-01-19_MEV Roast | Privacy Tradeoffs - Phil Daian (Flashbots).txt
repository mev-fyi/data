all right amazing so perfect segment we're going to be talking about some open challenges and indeed trade-offs in Mev privacy hello everyone I am Phil um so all of this is let me minimize my little Zoom here so all of this is kind of going to be uh in the backdrop of something you all may have heard of which is something we announced recently at uh the last epcon which is the system we're building called Suave and this is kind of the next step for black bots so I'm going to talk for two minutes about Suave just to give you some background in case you weren't present for that announcement and then kind of dive into privacy specifically um so Suave is the next step for flashbots it stands for the single unifying auction for Value expression it's an Mev awaren encrypted AKA private with programmable privacy uh shout out pintus mempool for users and wallets it features Progressive decentralization so one of the goals here I'm going to be talking about is iterating towards decentralizing the current uh Meb boost Market as well as the flatbots relay and other components kind of more than they are today it can also provide a turnkey decentralized lab builder for Roll-Ups so the aim is to kind of build the best Mev ecosystem than we can on each so that other domains and other chains can both interact with that as well as kind of take some of the lessons for their own systems um so to do this we are creating kind of this fully decentralized block Builder this is the mission uh we want to develop this in the open so this is part of why the rose series are kind of being restarted and pushed again but you know not the only reason uh and we want to be kind of 100 open and transparent about our r d where we're at today where we're going and have people come and comment and participate in the design because there's a lot of questions we haven't answered yet so this talk is going to be kind of about one of these big questions that I hope you all as our community privacy aficionados and experts can help us answer um the system is going to be each native uh it's going to have evm kind of scripting that's going to be relevant in the rest of the talk um we're going to aim for optimal user execution harnessing Med to give users kind of the cheapest possible price or the best outcome for any trades or other transactions they're doing and this is again going to be one of the key roles we're going to talk about privacy serving today uh we're looking for kind of full compatibility with flashbots info today so that Searchers can continue searching and validators can continue validating uh with kind of a generalization of course to cross and multi-chain if needed and this is really the key point of the design goal for the system which is to maximize both the competition within the system and also the geographic diversity of the nodes in the system by creating a protocol that doesn't let's say overly Advantage latency in any of the extraction or anything like that um and the last two things are we want to enable open order flow so this will be kind of a key part of privacy uh is how do you ensure open access to users transactions and kind of step away from the need to permission execution to certain Searchers or protocols to get ideal Mev outcomes we want truly permissionless execution where people can send to any number of protocols and any number of actors can kind of optimize against these transactions in real time and we want programmable privacy so that's what I'm going to be talking about next so these are some trillion dollar questions that I introduced at uh talk I gave at uh Columbia uh kind of event a few weeks ago and we're going to be talking about here this first question which is what is the Privacy slash efficiency Frontier in Mev extraction basically if you allow users to select much more Rich decryption conditions and predicates at Mev search time which is as I'll describe what we mean when we say programmable privacy how much info should they reveal when should they reveal it and what are the trade-offs of their ability to internalize the value of this private information against the execution quality um kind of of any options they participate in or anything like that other topics that may be relevant here include Geographic diversity censorship resistance how to escape sgx so we're going to be talking about one possible sgx solution but of course we know the problems with sgx stay tuned for the spicy panel later the feasibility of things like MPC and fhe in these contexts how this relates to the limits of minimizing Mev and actually the act of minimizing Mev itself that's going to be kind of later in this talk and also meta Med on swab so how to use swab Mev to kind of Drive the system itself okay so that's all for Suave let's talk about privacy now finally um so we're going to be talking about privacy in service of two concrete goals here separately the first concrete goal um as kind of clintus talked about in the last presentation is to continue to reduce the requirements for trust in the flashbot system as it is today to decentralize the role of black spots today and to remove kind of centralized choke points in the system and maintain the decentralized Mev market we've built prevent further centralization vertical integration Etc um the second thing we really want to use privacy for is to allow the user to internalize the value of their Med so this is what flashbots means when it says democratize uh you know um sorry distribute I chose the wrong keyword my bad I was making these slides very early this morning so this should be distributed but uh we want users to be able to internalize the value of their Meb and of course there are other reasons you might want privacy um you know alluding to some here but uh I think we're gonna kind of not talk about those in this specific presentation maybe we should have a separate uh roast on censorship resistance uh inclusion robustness and things like that if that's kind of of Interest um all right cool so here so we want privacy we want programmable privacy what do we mean what would be a useful abstraction for privacy so this is a presentation I gave uh two years ago now about uh kind of the best privacy abstraction that we could use in decentralized building and what we want to build towards so I'm going to give you kind of a thousand foot View and then we'll zoom into the details of how this is actually works in swap so wouldn't it be great if we could create this thing I'm calling a proof of private transaction which was basically an execution proof inside the eat consensus rules that a certain mix of public and private transactions um executed in a way that was consistent with a certain witness or here I'm calling it a hash of the proof so what this would allow you to do is basically prove that executing some crowded and public transactions in a given State uh resulted in a certain outcome and kind of proved certain properties of this outcome without leaking uh what's in these private transactions this is um kind of a standard notion of basically programmable uh encryption um so then if we had this magical abstraction what could we do well instead of having a relay or a builder like we do today at flashbots we could have a whole network of nodes in between the validator here and the Searcher Trader user whatever on the other end over here um and the flashbots relay which currently kind of validates transactions for spam control and protects the privacy of bids and things like that in Flight as well as the rest of Med boost would kind of almost cease to need to exist the trust guarantees would be much more distributed and we could build something more peer-to-peer than the Federated Meb boost system um you could imagine also multiple kind of uh private transaction proofs floating around this peer-to-peer Network as well as an ability to take two of these private transaction proofs and combine them into a new private transaction Group which eventually kind of crystallizes into an ethereum block so this would be the ideal way to use privacy to decentralize flashblocks today instead of sending the relay your bundle you just create this proof about your bundle send it to this peer-to-peer Network where it can be trustlessly permissionlessly without losing privacy combined with other bundles um into eventually what becomes a block and this all kind of magically Works hand wavy hand wavy fully decentralized and we don't need the the relay or Builder today and we sidestep kind of a lot of the issues we're seeing in the Meb boost Market so this is really what we want to build towards this is the ideal abstraction but how do we get there um so um to get into that we kind of need to lay some technical groundwork to talk about swab a little bit and this may be interesting to some people also who have kind of asked and been curious about uh Suave this stuff is all going to kind of be part of a swaps back that we're very actively developing and looking to roll out very soon uh people people were very angry at me for saying a timeline last time so I won't say one but soon TM um so swab is a stapler system staple distributed system essentially you can consider basically swap States as a sequence of States Through Time S1 s2s3 and we can denote the current state by lowercase s and the set of all past valid swab States as capital S these are basically states that are confirmed by the Suave consensus algorithm um and transactions on this system are called bids and bids basically represent preferences and preferences map future states of the world to utility functions to the bidder um represented in basically computation so what do these uh these bids preferences transactions actually look like well you basically have a program or a smart contract on swap the same way kind of each each transaction executes a some code this is this is the same idea and it is also evm as I said before evm compatible such that when you execute the bid in some future State s this should probably stay S Prime to not be confusing but this is a different s when you execute the bid in some future State um in or in any state really you get this output where uh the bid or the program outputs kind of the value of that state in its model um so this B is kind of the the value of reaching this state s for the amount that's going to be paid to the executor and the bid also outputs an address where basically that address uh is the executor that executed the swap transaction um kind of computed dynamically that's a little tricky so not expecting kind of this to be fully grasped right now all that really matters staple system bids evm transactions um they're also Oracle contracts so the way these bids are actually executed in the future if they do kind of come to fruition so let's say I want to bid for an empty Block in 1000 blocks I can submit this bid um and then by basically creating the transaction but then the transaction will actually output a payment if the Oracle essentially tells it that the state of uh other domains has transitioned um such that the payment should be made um so here's some example the Oracle can kind of be any flexible smart contract Oracle we've certainly seen a number of these on Ethan and other systems and it can be used here um but you'd have something like essentially okay block one on the Chain this is the block hash here's a log hash and here are the transaction hatches that are confirmed in this block body and this actually having this Oracle plus this distributed system is already enough to decentralize flashbots bundling um so here are some example preferences you can state in this system um you can say okay if a transaction comes at position zero so the top of a block pay the sender of position one some amount so this assumes that if you have someone that can reliably kind of place transactions in blocks they can kind of stagnographically tag uh their their doing so um and as long as your transaction here that you want xerx cap a ends up being mined at position zero that person gets to kind of trustlessly claim this three eat bid against the oracles another example is you can have kind of a list of transactions to come in a specific order so this is what's known as a bundle now you can say Xerox Cafe must come before transaction 0x deadbeat that must come before transaction 0x00 and let's say that represents a sandwich and that's where three eat to you so that would be the the B you would pay essentially the following sender uh steganographically tagged against some amount for landing this sandwich for you you can also use this to bid for empty blocks um you can use this to bid for certain execution logs so you can just say look this is the state I want create a log transition to the state I want I'll pay you for it and kind of fully generalize this to to more bridge style transactions as well um so um how do we decentralize brush Bots using this well uh we basically create this relay um which uh or sorry not crazy like we create a swap the system where Searchers can submit these bids to um and we allow other actors just on the network Mev Bots other validators whatever it might be that we call executors which may or may not be L1 validators certainly it's a more efficient optimization if L1 validator is natively plug in here but also you could have pgo actors or other such actors kind of competing to fulfill this execution end of the Meb Market um uh so this allows us again to kind of bypass uh the relay I'm going to skip over some details um here um essentially this what this slide is saying there's two cases you can have native plugins for this where validators directly listen to bids um and kind of automatically switch over bids that they're able to parse and understand and control and other actors kind of translate these bids into bits that validators can control or you can have validators that totally don't use swab and the actual execution happens over pgas or some other kind of third-party Channel we've seen both in the MVP Market in practice um great so now let's switch gears a little bit and talk about really the meat of the Privacy problem which is not just to provide this proof of private transaction that allows us to decentralize the relay that allows us to decentralize the Builder into a peer-to-peer network but there's more value to privacy that still hasn't been unlocked in the world yet and that comes in and when you really kind of dissect the Mev Marketplace and the trends in the med Marketplace and where they're going in the future um so where is Mev going uh so Med Market has two sides there's the user and the validator the user or our Trader whatever else Searchers even can fall in the middle that can fall on either side here um wants to make transactions they want to purchase block space they're a consumer of block space validators want to get paid as much as possible for providing this block space and engage in kind of a business doing so um and the Crux of the med Market is essentially interfacing these two parties using Mev as the utility optimization function um so users want to minimize the amount of Mev they release want to minimize their payments validators want to maximize the amount of nav they extract they want to maximize their kind of received bits um so how do we allow the user to internalize the value of their Mev or private information and again this should say distribute not democratize well there's two possibilities the first one is we can use what we've seen before in various order flow auctions that have been proposed that are executing various other kind of domains other than ether experimenting with these you can use what's called basically permissioned execution so you can auction off the right to execute your transaction to a specific protocol to a specific Searcher to a specific set of parties you can set up Futures on your critical that's essentially the same thing I also call this an information auction uh the advantage here is you kind of get a clear payment and a clear rebate up front the disadvantage here is you're actually disincentivizing competition on executing your transaction right so like you have to decide one party in advance that party can't efficiently price your transaction and in the real-time Med optimization you're losing the ability for other actors to economically provide input into what is your best execution what is the best optimization of preferences here on the other hand you have preventable privacy which basically lets users fine-tune uh how and when they release their information to various parties and leverage that in in negotiations for Meb so we strongly believe this is the better route of these two uh core scalability reasons because it allows for more permissionless extraction and because it doesn't lead to a pfop style Market uh closed permissioned order flow or the need to kind of trust certain Searchers we're going to need to kind of forfeit additional rent between when uh kind of the auction happens and the transaction is executed so for many reasons we believe this is the best option uh maybe we'll have a separate roast where we go deep into programmable privacy and why this is the best option um here we have basically um a more formal description of a bid in swab which is going to come from our documentation so stay tuned for this please don't read this whole thing now you'll just get a little bit confused because we're kind of limited on time but what matters here is basically in this bid if there's two things the users can provide an execution predicate this P of s uh or three things sorry an encryption product you have q of s and a set of peakers signal so this is kind of the control knobs on our programmable privacy inside swab itself it allows the user to provide a set of transactions and say okay this is when this transaction will be decrypted when this condition on the world State against all these oracles are met this transaction can be decrypted and this is when this transaction can be executed if only if these conditions on state are meant so you maybe can say okay I only want my transaction to execute if it's first in a block otherwise it should fail you can say Okay I want to reveal certain data but only under certain world State transitions so what does this allow you to do uh it allows you to partially decrypt transactions to allow Searchers to execute them but also keep private various aspects of your economic preferences now this gets really powerful when you combine it with this concept that we call a fee escalator internally which is basically signing transactions that increase me these subsidies over time so you can think of this as like let's say users increasing a gas price over time having a vdf based Mev release function or anything like that so in this world you can actually start with a negative Mev subsidy where your transaction basically requires some Searcher to fund your account in order to be executed and you can slowly increase this med subsidy over time to try to find kind of the optimal Supply demand point where your transaction becomes profitable to mine now if you do this and you keep this curve private and you keep information about your transaction private that you allow Searchers to kind of Brute Force optimize this against other bundles using the type of merging we talked about in the proofs of private transactions earlier you can actually back out the guarantee that a user gets optimal Mev execution while having permissionless real-time access to their order flow so without the need to permission who's going to execute their transaction and this is super powerful it only relies on kind of a competitiveness assumption around the Searchers and validators participating in this market so this is what we consider the core of kind of programmable privacy and why we care about it okay now the last thing I'm going to talk about is kind of the trade-off here and this is the kind of trillion dollar Mev question how much information to leak when you make a transaction as a user so there's the most extreme case of privacy which is that Searchers validators Etc learn nothing until a block is signed and confirmed um you can only possibly reorder emerge encrypted blobs but maybe even not do that and that you learn no information theoretic output on this data of course in this most extreme world it's very hard to Mev optimize these transactions and get optimal execution for the user against Meb kind of find the right point on this curve uh the least extreme is you send it to the med pool you have no privacy but there are lots of middle grounds here so if you have a uniswap transaction maybe you can reveal that this transaction uses the unisoft contract you can reveal what pools are being traded you can reveal the direction of a trade or something like that which will help Searchers find and computationally optimize your Mev without leaking the value of the trade data that's allowing you to find this optimal trademark Point um in in our kind of analysis so this is the trillion dollar question here we're between a rock and a hard place between inefficient Med with full privacy and uh mempool which provides no leverage for users so we really need to optimize this better and find a same middle ground in the context of these programmable abstractions we've created and look forward to your help here uh come join us on our forum and help us build this uh I'm out of time so sorry I had to rush through that a little bit hopefully it was interesting and Illuminating please reach out if you have any other questions all right thanks everyone thank you Phil um I mean on in in the next talk which is uh my talk I guess I'm going to push back a little bit on this trade-off space I think we can you know have our cake and eat it too um I guess the one kind of spicy question that I have um I'm happy to open it up is um on the the s in in Suave the the single like is it is it necessary for flashbots to you know want to take over the the encrypted mental space uh can there be multiple competing man pools or does it have to be like a single unified uh encrypted mempool so I think there should be multiple mentors I think the interesting question is like where to optimize the boundary the test is a little bit of a troll to appreciate you for picking up on it um I think what it means more is the intent to kind of provide and maximally decentralize all possible features of an encrypted mempool like in the long term not necessarily that like there won't be Computing systems there definitely will be in fact it will be competing with the centralized systems that exist in the Mev boost Marketplace today on day one so already on day one it won't be the single option and it'll need to kind of Reason about how to interface with these systems uh so yes I believe there's space for many encrypted mempools but we would like to try to hit the optimum trade-off point in our opinion on like what is the best option if you had to choose one that being said there are also some Network effects and advantages of having one option specifically when it comes to privacy so the more you can get within privacy zones that can be optimized against each other for Mev so again stepping down from the school privacy and like having this Mev optimizable privacy see I believe the better execution the user gets so like if if I can also optimize my transaction without revealing its information against many other trades and like liquidity provisions and arbitrages on uniswap I should be able to get a better price than if that transaction is not optimized with an awareness of like the semantics of Mev in mind um so there's like a network effect of privacy that like having more people in a single single zone is better uh for those people and also same with cross chain mov for like validators cross chain you got super linear rewards and like the cross chain kind of uh buy-in you have to any single auction so for those reasons like there is kind of some pressure there we also truly don't want to be the single system for obvious reasons because then if things break everyone's like all salty and stuff like that certainly we've seen that before so uh it's a little bit more of a troll than like a serious product goal but hopefully that answers the question 