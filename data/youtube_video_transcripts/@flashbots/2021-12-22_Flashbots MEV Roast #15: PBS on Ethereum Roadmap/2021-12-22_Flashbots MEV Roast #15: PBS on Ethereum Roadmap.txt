hello hello everyone welcome to the fifteenth edition of me roast pbs on ethereum roadmap this is tina from flashbots would like to welcome our roastmaster hasu for the day and just a couple things ahead of time about our rose meet up if you have any questions feel free to directly ask your questions in the site chat and most of the time our roasts have had fun conversations in parallel in the side chat if you would like to speak up as an interesting question and raise your hand our roads master and our co-hosts will do our best to bring you on stage and um lastly if you um would like to learn more about um the agenda as well as read up on the slides ahead of time or relevant resources please um check out the agenda link it is up to date and have all the material that will be relevant in today's maybe roast um without further ado let's get started casu hey tina thanks for the introduction hey everyone so um feel free um to interrupt the presentations at any time by asking questions and if i think it's a good time to ask them then i will act on it um so welcome everyone um today we are talking about pbs which stands for proposal builder separation um i will share my screen in order to give you guys some more context because i think this is actually the first mev rose since more than six months um so a lot has changed in in mev land and i will try to give you um little bit of context on what we are talking about let's see how can i share just this does this work yeah we can we can see your screen right now maybe you should like uh present yeah i wanna i wanna present with widths oh the button is here no where's the button where's the button to present if you do the show i i don't know what language oh there it is i see got it thank you thank you can you see this as well no okay um so uh what are we talking about today so pbs is proportion proposal builder separation and at least for me the name was a bit confusing so we need to get over this small hurdle in the beginning so the p in pbs is the proposer and that's basically the equivalent of a minor today or a validator in proof of stake and the builder is someone who creates the content of the ordering of the of a block so pbs is about separating these two functions first creating the block content and then proposing it to the network and as i understand the name proposal comes from basically um yeah ethereum proof of stake terminology where in the new in the new consensus algorithm we have this two-part process of validators proposing blocks to the network and then we have these committees of other validators who give them weight via you basically vote on them and give them weight in the fortress ruin so i think um as far as i understand that is where the name comes from however it's also a bit misleading in the sense that block production is already separated today right so this is not inherently a new thing so um we have basically the same the same thing today just in a slightly different form so uh my most minors like 99 over 99 percent of miners tend to be workers in in the mining pool and um the mining pool operator tends to be the one who creates the block template um and then um basically the other the other miners in the pool they only lend their proof of work um their proof of works to this block um and the mining pool operators typically create the contents of the block with the help of a service like flashbots so i think flashbots has around 70 80 percent uh of hash power today so that means um the mining pool operators run um you know the flashbots client in order to receive bundles from flashbots and then they use this client in order to create or construct the best block that they then publish to the network so what's really new in pbs um oh i changed the order of the slides um right let me go here so what's really new in pbs um so pbs is primarily as far as i am concerned it's about you know scaling how the network works today um and we can only do that by sort of removing identifying and removing um the parts where a lot of trust is required so flashbots today is an integral part of creating block contents and that's probably not going to change um and so um it makes sense to understand where the different participants in this system have to trust each other and the way it works right now is that the users and searchers they have to trust the flashbacks relay and the miners in the system not to unbind their bundles and to front run their transactions right so it's effectively a trusted system today and the miners have to trust the relay not um so not to withhold any bundles from them and not to denial of service attack them um and after pbs so this is sort of the goal and in this conversation hopefully um we will get a bit closer to you know what steps are necessary to get there after pbs the trust that is required by the participants in the system in each other will be greatly reduced so users and searchers still have to trust this is actually not for trust is pbs this is for the the the the step that comes right before it but we will get to that um so um users and searchers still have to trust um a relay to some degree um but they no longer have to trust the miners and this effectively removes the need to whitelist miners because in flashbots today it's not because of the trust that is required in the miners not to unbundle any bundles and not to front run any transactions it is effectively required that only miners beyond a certain size can participate because if flashbots had zero leverage over them then the system wouldn't work and for decentralization it is very important that all miners can participate in the system but that means there cannot be any trust required in the miners um and so justice pbs will be an important step in allowing all miners to have access to the best block um yeah right and the miners also no longer need to trust relay so that's something that we will talk about and a couple days ago vitalik posted this update of the ethereum roadmap so um it just basically summarizes all the proposals that are going on in different directions and sort of neatly ties them together and um so the the thing that we are talking about is on that road map is here at the bottom half um and um so we will talk about um short-term med mitigation and uh how it's basically a step on the road to um having a first um or base specification for having in protocol pbs we will also learn about how having or moving to pbs will change the censorship resistance of ethereum and what can be done to maintain it and then we will talk about upgrades to pbs in the future such as movie smoothing and um all of the talks of our speakers today and the follow-up discussions they map very nicely to this road map by vitalik so we will start oh i think actually we will start out um with alex talk where he sort of explains to us the reasons why pbs is so important and what is the motivation for designing it and um he will also share with us the basically the the predominant proposal right now for how pbs can be done in protocol however um the proposal is very important and so flashbacks have come up with a way to give us many of the same benefits before we can have pbs in protocol so this is what this is the topic of stefan's talk so he will talk about a flashback's proposal called mev boost that would basically create create basically a similar function as pbs but as a stepping stone to the in protocol pbs and finally we will have a talk by francesco of the ethereum foundation and he will address how pbs affects the censorship resistance of ethereum and many implementations actually make the censorship resistance worse so it is very important that we design we are very careful about that and we design it in a way that the current censorship resistance can be at least maintained yeah and um having said that without further ado i would like to give the stage to vitalik and the first talk of the day okay great um thank you for the yeah and thank you for the introduction husso um i am okay there we go does uh does everyone see the slide yes okay perfect um so i will start off with a just general and introduction to the problem i'm recapping why there is a problem um and in what way pbs tries to mitigate the problem what about it it tries to mitigate um and then go into this some of the details of how the current design works and where some of the uh challenges and the research directions are um so the core of like the whole problem that i think this kind of subspace of like crypto land is about is uh this concept of a hard to discover mev right so like some examples of a hard to discover mev include um internal uniform arbitrage and so if for example the previous block had some unit swap trades and the a to b price multiplied by the b to c price um and the a to c price and it ended up being misaligned with each other then you might be able to do some internal arbitrage basically do a triangle swap a for b b for c c for a and if the prices were misaligned you would get more a out than you put in and that would also as a side effect bring the three prices into equilibrium um unit swap versus sushi swap arbitrage another example so a to b on unislop and b to a on sushi swap um potentially this could even be between multiple dexa so you know a to b on unislop b to c on sushi swap and then see the a on you know in whatever other newfangled swap people have uh come up with i'm not even keeping track of you know all all of the emm's uh these days um udacity versus off chain exchange arbitrage this is a fun one um this is uh i would argue a special case of uh something called cross domain arbitrage which is something that we're going to be hearing more and more about in the years to come but what basically the idea would be that whatever the unit swap trades were that happened in the last block um since then the the the prices of those assets um have moved within those last 12 seconds on other exchanges so for example on binance and so you can make the unit swap trades that or the unit swap arbitrages that mirror the price movements that happens on finance or happens on poloniex or happens on you know whatever other exchange you're arbitraging against um liquidations uh so liquidating uh maker dow cdp is as one example liquidating cdp is on rye um you know just like any of these uh lending positions um nft purchases so a lot of the time when people sell new nfts they have released a limited quantity at a fixed price um and like i personally think this is a bad idea and i've uh i i've written about better ways of doing this but while this and this is happening um if they end up like mis uh so uh miss pricing or miss selecting the quantity then demand is higher than supply and there is this big race to just gras snap up all the nfts quickly and that's also a type of hard to discover maybe right this is all revenue that can be gathered by being in the position of choosing the contents of the next block um where you need um sophisticated algorithms in order to discover it right so like we're not just talking about what kind of simple mev like you know people say like oh transaction fees are technically mpv like we're talking about um mev that actually requires these sophisticated algorithms to discover um sometimes you know the mev is really huge even within a single block there is apparently this uh as i understand period of two minutes during which anyone could have sent a transaction that would have liquidated uh justin sun and cost him like over 100 million dollars um but no one at that time managed to figure out how to do it because at the time this was five months ago in the fee market really sucked um had it happened recently in the ipa 1559 lands actually ironically enough the greater efficiency of the of the chain probably would have meant that justin sun would have actually lost his money but in general like snapping up these kinds of opportunities first can be a 100 million dollar big deal so why is hard to discover maybe a problem right so hard to discover mvv discovering it requires specialized software and that specialized software needs to be constantly updated right like you're running specialized software to discover these arbitrages um and then the exchanges and where this stuff starts happening ends up changing um sometimes you do your mev in ways where you end up being vulnerable and other people start parasitically like mev and your mav and then you have to change your algorithms um sometimes like you like might want to like you know change the location of your servers in order to get um in order to like grab up more opportunities you might want to like surveil the network to um see where the transactions are coming from and get and get more opportunities um only specialized actors can effectively optimize any of your revenue there's just inherent economies of scale in opt-in uh getting um in figuring out these mev opportunities right like if it costs um you know 100 000 dollars of just human effort to discover one of them then that's only worth it if you also have like say at least 20 million dollars of capital needed to exploit it large staking pools by default are the the actors that are most capable of getting these mev teams and so by default this creates pressure for speakers to join largest taking polls so the solution to or the kind of the mitigation um to this kind of nasty pro centralization equilibrium that we've come up with is proposer builder separation right so the goal is to separate out the the part of the whole uh task of being a staker that has strong centralization pressures which is the selection of block contents because selection of block contents gives you this ability to take advantage of these hard-to-discover mvp opportunities from the rest of the task of staking which is block validation and making sure that you're building on the correct head right so like you want to be able to outsource the ability to create block bodies without outsourcing the ability to choose the correct head because if you outsource able to choose the correct head then that becomes like really exploitable to create 51 attacks and do all the other nasty things and also the ability to create invalid blocks um also create gives you opportunities to do all these nasty things so the idea here is basically that instead of block proposers um so stakers that have been selected to choose the block at that particular time um actually creating the block contents directly block proposers sell the right to decide the contents of their block to the highest bidder and this happens on chain or like through this transparent marketplace that happens as part of the peer-to-peer network so at this stage it's worth going through the current proposed vbs design so this is something that can be improved over time but this is the design as it exists today so basically the idea is that you have two colossus of actors you have the block proposers um and uh the block proposers are chosen by the uh uh just standard um you know randall select a random validator mechanism and then you have the builders the job of the builders at this stage is to submit what i call execution block headers an execution block header basically says hey i have this header in mind and here's a commit commitments to the body of the header and here is the amounts that i'm willing to bid um in order to get this header included um and the amount that they would bid is realistically like the the revenue that they would get from this header minus like some small amounts of profit and the reason why the profit is small is because you have a very competitive market of all these different actors that are all trying to create these execution headers um and so if one of them makes a bid that's not very high then there's going to be someone else that makes a bid that's higher um and so the amounts of profit that they make is going to get competed down to a very low number right so they all make these headers um and then it is the blog proposers job to choose the header that has the highest that has the highest bid um so the beacon block proposer chooses the header with the highest bid and they uh get paid the highest bid um unconditionally so once the beacon block header chooses the the uh execution header with the highest bid the beacon proposer gets paid that amounts unconditionally so regardless of what happens after that point um and so what that means is that it is their incentive to just choose the execution however that pays the highest amount so then there's the beacon block deadline um and then after that you have the revealing game right so up until this point the x the builders always published the headers they did not publish the body there are two reasons why this happens one reason why this happens is uh just like simple efficiency real like you don't want like 500 different copies of the body floating around the network because that would just overwhelm everyone else's like b2p data bandwidth and then the second and really important reason why you do not want to reveal the body is to prevent what we call mev stealing so mev stealing basically means like let's say i'm a builder and i have some amazing strategy for um extracting mbv revenue then i am going i will let's say i do publish my body then all of the other uh builders they're gonna see my body and they might be able to run algorithms that inspect my body did just inspect and uh discover which strategy i am using in order to get that body and then they um just take that strategy they incorporate into their blocks and then they add on their own strategies that they know about that i don't know about and then they'll be able to outbid me right so in order to prevent like this these kinds of stealing games um which you know if stealing games became the equilibrium they would wreck the whole thing because they would just create an incentive to merge the builder with a proposer so instead of that we just say no revealing at step one and then the revealing game happens at step two so how does the revealing game happen um so basically what happens is that first you have what a rounds of attestations happen and the rounds are at the stations basically commits to and solidifies the facts that this block this beacon block actually did win right so it solidifies it in the fork choice and so that basically yeah like that prevents um situations where a malicious proposer publishes at the deadline and so some people think they published on time some people think they did not publish on time instead like you just have a committee and that committee kind of tries to force the outcome to go in one direction or the other and then after you have the committee then you have the uh intermediate intermediate blocks right so the way that the intermediate basically here what happens is that it's the builder that publishes the intermediate block so the builder um basically is was selected but based on the winning execution headers it's the winner's job to um basically aggregate this committee and then also the builder is going to reveal the exact the body of the execution block and they're going to sign the whole thing the body actually gets checked against the header and so the only thing that they can publish is the thing that they pre-committed to now if they publish a block then they already had to pay the fee in the header but then they get the revenue from the body right they get the mev from the body and they get the fees from the body so like theoretically even the coinbase op code in the uh in the block should actually points to the builder um address so that anyone who like is trying to like you know quote compensate the miner would actually or compensate would actually end up compensating the builder right like the job here is to actually concentrate all of the revenue into the builder the builder figures out how to do the revenue maximizing um and the proposer's only job is to just figure out like which header is going to pay them the most um so if they reveal then they pay the bid and they get the the mev and the fees and everything from the body if they screw up and they do not reveal then they still have to pay the fee but they get no revenue um so it's a big loss for the builder so it's a bad idea for them not to publish and then it's the job of this next round of committees and the job of these can to basically say um whether or not the block was the intermediate block was published on time or whether or if it was not published on time and so if the interview date block was published on time then they basically a test of intermediate block and if it was not published on time then they just end up attesting to a kind of virtual block that says that there was no intermediate block present at this particular time and then what the purpose of that is to solidify what is the head of the fork choice what is the head of the fourth choice the post state that includes this block body or is it the same as it was before and once that is solidified that creates this kind of like stable um thing on top of which the next round of uh execution builders can actually build on right and that is one one um cycle of the entire process right so step one um they bid on headers because they know what the post date is step two proposer chooses a winning header step three winning builder reveals the body step or sorry step three attesters solidify this uh header um then the builder reveals the winning body um and then finally the attesters um um select the winning body um and they uh or they vote on whether or not the body is present or not the body was absent and then you just go on to the next round of the exact same process so that is the core idea of the current proposed design and like we'll talk about what the benefits are and we'll talk about what the downsides are and so what is the room for improving it so security properties of the current design right one really important security property is that payments to the proposer is unconditional right so proposers do not have to trust builders um proposer all proposers have to care about is basically what which header has the highest bid right because the returns of the proposer do not at all depend on whether or not the builder publishes um so this is important right because what if if proposers do not need to trust builders then one that makes the marketplace for being a builder much more open and accessible like there's no um you know social credit score for builders that like everyone that they have to navigate that ends up being some kind of like really exclusionary thing that benefits people with established reputations and also really importantly that means that the proposer does not have the social task of figuring out which builders are trustworthy and so that makes the proposer side more decentralized because like being a proposer just means you have to run a daemon and you don't have to let go and figure out and navigate the builder builder marketplaces um so that's one really important property um the builder has to reveal on time right so it's the builder's job to reveal on time if the builder does not reveal on time they pay their bill to the proposer but they do not collect the fees from the block this does impose some amount of risk on the builder um because basically if the network goes completely crazy or if there's a 51 attack then they do have the ability to basically force the builder to lose one round of fees without gaining the uh the revenue that they expected so the builder does take on the risk of uh basically something really crazy happening at that exact slot um and so in order to mitigate the extents to which this actually is a problem but this is why we want to try to make the whole design as stable as possible and ideally in the long run as i've talked about in other places i try to move toward things like single slot finality um so third a security property no risk of abv stealing in the normal case because the builder should only reveal their body once the body has that or once the header actually has been solidified um and then finally you know censorship of a builder requires a 51 attack on the committee and now a lot of these properties they do depend on the stability of the fork choice and there is this entire separate strain of research in ethereum lands of trying to actually increase the safety of the fortress rule people like aditya and casper and other people and barnaby and other people and uh you know you have noy and others have been doing some really wonderful work there but like if you have that as a base then the security properties of this or pbs kind of inherit naturally from the secure whatever the security properties that the that the fortress rule of lmd ghost and casper give you um another important thing is that because of the way this thing is structured it's basically structured as just like a two slot overlay on the existing system and so the reasoning behind the for choice rule does not really need to change much because like basically the thing that the attesters need to do can't be expressed in the language of them just voting on the fork choice the same way that they already vote on the fork choice today this is also really important so secure those are security properties of the current design so now finally we can also talk about some of the challenges of the current design um so the current design has the property that it um involves multiple steps per slot right so it basically involves two virtual slots per every actual slot and this requires increased block times it requires stronger latency assumptions um so basically either you keep the length of us a lot the same and that you have like 24 seconds instead of 12 seconds per you know quote actual block or you have to reduce the timing of these slots to six seconds and then you keep like these at 12 uh your 12 second blocks but you have more risk or you take a kind of middle approach and you say you're gonna have eight seconds like virtual slots and 16 second actual slots now we can try to um kind of cheat a little bit and to like try to optimize things a little bit right so we can say like instead of like having attestations and aggregations we're going to have at the station one salah uh like roundabout stations happen over here and then one round of adjustations happen over here and then we're gonna try to like have aggregation only happen over here or ideally we could even try to say we'll have one round of adjustations here and then we're gonna have n minus two committees happen somewhere in the middle and then the aggregation happens in parallel and so you can try to kind of squish things together and optimize it a little bit so instead of being 2x it's like maybe 1.3 or 1.4x but like this is one of the open research areas right like trying to kind of paralyze and squish things together more so you don't have this trade-off between either having less frequent blocks or having reliant like much uh tighter reliance on aggregation and at the stations being able to happen extremely uh quickly so that is one of the weaknesses and then the other big challenge is basically if one of the builders ends up winning consistently then can they censor right so like the core idea behind pbs is basically that you have this concept of being a builder and you have this concept of being a validator and we're going to protect validators from becoming centralized by taking the one piece of validating that has this really high economies of scale and splitting it off into a separate role right and so the question is well okay so you have this concept of like you know like you have this kind of like centralization sponge right like so if you think of economic like century economies of scale and centralization economic pressure as being this kind of like water that seeps into everything and makes it wet which we don't really want and we you know we want to keep the validators dry then you have this kind of sponge that just soaks in all the water and and so the validators can still be dry but then the question is well isn't the sponge going to be extremely wet right like isn't the builder market that whose job it is to kind of suck in all of the centralization pressure from the validator ecosystem isn't their job going to become extremely concentrated um to the point where they um where like you know you you risk having very centralized block building um and uh then like if that if that's the case um then like doesn't that become a censorship reactor right like imagine three builders creating all the blocks and then those three builders that just end up being in the same jurisdiction um and then like you know doesn't that potentially create this like big political centralization a dystopia where you know if they end up colluding and deciding like hey uniswap is bad then you know are they going to be able to shut down unislop or whatever there are solutions to this um so i wrote a post about this it was uh called state of research um i think on pbs and it's on my twitter if you just scroll down you'll be able to find it and so i talked about how the economics of pbs do naturally provide some pressure against censorship basically because uh if you are like if you censor even one transaction you're basically permanently putting yourself at an economic disadvantage like every single slot and if and if the the set of transactions you have to censor b gets bigger than the advantage of the best builders over like whatever the open source builders or whatever the best uh kind of you know ideologically anti-censorship builders are then eventually the bill like as a builder you're going to either have to lose money every slot um or the other builders are going to out-compete you and they're going to include all the transactions you were trying to censor right but then the question as well is this economic argument actually enough right and if the economic argument is not enough then you know can we create kind of secondary lanes um to try to beat um you know be allow people to bypass censorship the same way that optimistic roll-ups have secondary lanes in case the sequencer is uh censoring and this is the topic that the next speaker francesco is going to talk a lot about that's right thanks vitalik um we got one question from the audience during your talk and um the the person asked um so what if a proposer accepts the payment but then when the builder reveals the block just chooses to not include it and would that be a concern so they're asking uh so the proposals do not need to trust the builders but what about the builders and trust in the proposals okay so this is exactly why in the design that i outlined what happens is that the builder for the uh sawad n plus one so the builder for the salad after the propose um or for the virtual spot after the proposer actually is the builder right so basically the job of proposer n is to include this header that chooses the what you can think of as being the proposer for slot n plus one um so like there is no proposer that has to approve the builder now what does happen is that there is this committee of a testers right and it's the job of the committee of attesters to basically decide whether or not the builder revealed on time and if the builder did not reveal on time it's the attester's job to like make votes that say that vote for this virtual block that said that says that the attackers did that or sorry that the builder did not show up and so the next proposal builds on top of the same state but that is a decentralized committee right so the builder does have to trust this committee and if there is a like basically a 51 attack or close to a 51 attack going on then you know yes a dishonest majority can grief the builder but that's a much higher bar than like one proposer being able to grief the builder got it i have some questions um for you prepared as well if you have some more time amazing i do i have lots of time perfect um so flashbacks has already gone from one bundle per block um to several bundles and going to full blog proposals is just another incremental step here in theory so um could you reiterate again what is the problem with just doing um you know more of what we do today in terms of pbs via flashbots compared to moving to an in protocol proposal sure um so the the the version of flashbots that exists today currently on mainnet is like honestly from a long term central like or a centralization perspective pretty dystopian um because um basically it require it relies on the uh proposer to be trusted right like basically the bill like and the reason is that the proposer um does have the ability to see the contents of the thing of the bodies that are being proposed and so the proposer has the ability to med steel and um like potentially the proposer has the ability to do other things like if for example your med extraction relies on sending transactions that once that like do um like that are vulnerable to sandwich attacks then the proposer could end up sandwiching you or whatever um so the basically the yeah like the end of the reason why a proposer is needing to be trusted is such a problem is because it creates a centralization pressure right like basically as a builder you know you're going to whitelist lido you're going to whitelist coinbase you're going to whitelist kraken but you know you're not going to whitelist like random joe with his uh with his 32 east off on his uh you know local raspberry pi at home um and so that creates an ecosystem where basically you're just going to get staking pool dominance and even within staking pools like you're going to basically like you're going to create a pressure in favor of the staking pools where the actors that are actually making the uh that are actually making the bodies with the mistaking pools are trusted right so it even risks favoring um centralized taking polls over decentralized ones the flashpots um the short-term post-merge architecture that i think stefan has that doing a little bit i've been doing a lot of uh hard work on like really improves on this but it does this by basically adding this kind of class of actors in the middle called real layers or sorry um yes called relayers where basically um a the proposer only sees a header and then the proposer signs a header um and then the real the body gets revealed the purpose of the relayer is to attest to the proposer that the basically that the body is valid the body and the that the body actually exists um so the in this case if like if the relayer did not exist then the proposer would still have to trust the builders um and that would like that would also basically that would not centralize the proposed the proposal market too much but that would risk centralizing the builder market because uh you know if the proposers are decentralized then they are going to be pretty slow to like update their nodes and keep whitelisting more builders and so instead use we say we're going to have this uh set of actors in the middle called relayers and relayers are going to be kind of fairly stable and proposers do have the responsibility to whitelist a bunch of them um but relayers would be it would then be able to like start talking to builders and they would even be able to start talking to like completely new and uh and untrusted builders so this is already an improvement but it does depend on this class of actors in the middle called builders and like that's says like that's still annoying right like that's it's still a trusted role it's a role that proposes like and so the the task of choosing the real layers ends up not being fully trusted there's the question of whether or not the real air market ends up naturally centralizing over time like there's all these concerns and so the the idea of uh in protocol pbs is basically saying well can we essentially take the relayer role and put it in in protocol somehow right so can we take away the need for proposers to even have to worry about um you know is the body going to be published or not basically by creating this design where proposers really do only have to worry about like is the header there and if the header is there to just like take whichever one has the highest bid and then they're fine yeah so to summarize what you said um the proposals today need to be trusted because they can see the entire transaction flows all the bundles that in theory ought to be private right and hence we need to trust the proposals and that creates a lot of centralization pressure among them we can only allow basically the big and trusted ones into the system that we have some kind of social or economic leverage on and in protocol pbs would eliminate that so there would no more need there would no be more no more need to to trust the proposals but at the same time the proposals themselves have to trust the relay today um and that would also get eliminated at least to a large degree um let me ask you a bit of a cheeky question um is there even any point in protecting the solo stakers or is it not is it not already like like a lost course and i'm i'm thinking primarily about two things so as a solo staker you have discrete payouts compared to smooth smoothed out ones like you have in a mining pool so already it's like extremely disadvantaged disadvantages for you to be a solo staker and this gets even worse with the rise of liquid staking systems like lido that unlock a lot of capital efficiency for people to join the system so like are we fighting aren't we fighting and losing battle yeah anyway um i would say not necessarily for two reasons and one is that i think the yes taking like the staking protocol itself um can change like can change in ways that are more friendly both to solar stakers and to smaller pools um so like for example single slot confirmation could enable something close to something close to instant withdrawals once withdrawals exist at all um then it's uh like um a lot of the the advantage is going to disappear and then the other thing is that even if solar staking disappears and everyone is in pools there's still this question of like more centralized pools versus uh less centralized pools right um like um and the challenge there is basically yeah like pbs like the current setup does risk um favoring more centralized um centralized polls there even more um because like you you have to trust um whoever is running the pool not to um also be engaged in this like in this med stealing stuff right so like it's uh like you know even if everyone is like we switched to i mean over like an ethereum or pretty much ever want to stay pulling like there's still the question of uh you know what kind of fuel is it um and there's like better case scenarios where we have more distributed pools and then we have like um distributed validators so like the thing that was formal formerly called ssd but then got renamed the d but i guess is getting renamed to dv because this is v dot network it's taking over the ssv um but um and then the other up but then the other option is like you know one piece of software run by coinbase like um control is 15 percent of the network and one piece of software run by kraken controls another fourteen percent of the network and so forth um and uh this uh them like requiring propo um proposers in pbs markets to be trusted like does create like yet another pressure toward that world um and away from the world where it's possible to get experiments with more and the different kinds of stinking pull approaches i would also point out justin drake justin drake's message in the chat so he says my rebuttal a in protocol mev smoothing is definitely doable and i think we will hear about that from francesco as well at least a little bit and b uh it can be more profitable to solo stick because you don't have to pay pool fees um yeah definitely um so vitalik would you say uh we can sort of summarize your last point as um a lot of the stuff a lot of these sort of amendments to staking that makes taking a more comfortable better capital efficient uh more smooth payout curve and so on that we sort of tacked onto staking externally that those can eventually become part of the protocol mm-hmm i think so yeah i think yeah the the protocol definitely yeah like can improve to be more um i think in general like the the proof-of-stake research community it definitely cares about like making the uh like i'm improving the yeah the protocol over time to like remove this remove the central the centralization pressures like whether that means enabling more like outright solo stickers or whether that means um enabling uh like pools based on distributed validators as an alternative to pools where everything's everything is controlled by one node like so that's going to end up being up to the market but you know like there is like there is a gradation and things can always get like marginally better and things can always get marginally worse and like i think you know in protocol uh pbs is one of the ways to make things marginally better so the reason why we want to make sure that oil miners have access to the best block is that we don't get this centralization pressure in the network right but doesn't it turn out that you know you can't remove the centralization you can only really shift it to different parts of the stack um and i think that's yeah so that's like the points right that the the builder market becomes more um very centralized but the uh the power of a builder of a very centralized builder market to um sensor is uh less than the power of a proposed uh of ahs like staker market the sensor because uh you know like in a staker market you only need 51 percent to a sensor whereas in a concentrated builder market like you basically like it it's a uh it's a one event trust model like you just have to wait until you find a uh a builder to willing to include your transaction before it gets in um and then like we have the ability to do all of these kind of secondary inclusion things and all of the stuff that francesco will talk about it's like yeah okay i think that's a very important point so i wanted to tease it out again um i have a sort of a like a governance question for you and this is a bit of a tricky one um so do you think ethereum governance should have a say in what software the miners run even though it does not affect the consensus level so with regards to let's say mev boost so can you just repeat the question again yeah do you think that ethereum governance should have any say in what software the miners run such as med boost even though it does not require any consensus changes i i mean i think ultimately like if it's a it's a permissionless system and ethereum governance has no way of stopping people from running custom clients right um like you know what can we do um and ask for your opinion on um the egl thing um have you seen this talk yeah maybe to summarize foreign like like basically like you have a coin and uh that coin votes on um basically like bribing people to vote on guest limits in one direction or another i mean in general like i'm definitely a big skeptic of coin voting and i've been in um you know i've talked about why on lots of occasions and don't really want to elaborate on elaborate on it now um yeah i mean it wasn't really a question about coin voting more so that somebody changes the right okay outside yeah so i think like what happens there right is that i think uh the like ethereum uses this concept of minor voting as a way of choosing the gas limit um but like this was not in like that choice was not made because like we believe that it's a long term good idea to have like voting over the guesswork but that choice was made because we had no idea how to set the gas limit um and it was the sort of thing where like we knew that we would want to upgrade the mechanism for choosing the gas limit over time and uh like especially in the short term adaptability and ended up but basically like well what actually happened is that we originally wanted to do something similar to like bitcoin style adjustable block size caps um and the auditors came back and said like hey guys if you do this then like one third of the miners or or whoever can exploit it and make and just force the value to whatever they want and so if you're interested in doing this then why not like just make it a voting scheme um because um you know voting scheme like whatever you do can be exploited by 50 of miners wanting to push it in some direction but then if it's a voting scheme then like you can um you gain the flexibility of being able to adjust it without a hard fork um and so like that's how we decided on the voting and then the voting stuck um and then it turns out that miners have historically i'm you know that have done a decent job of like reducing the gas limit in the case of uh i'm saying dos attacks or whatever but i don't think there was ever any intent of saying whoever controls the consensus like has a moral right to kind of govern the the gas limit parameter um and so like you know if people start voting wrong then the like ethereum governance is like i think totally willing to remove the voting feature and just fix the limit to some particular amount yeah got it um one last question um how do you think about the connection of or the relationship between um pbs and flashbots and client diversity because it seems right now that um all the miners want to use flashbots basically get locked into go ethereum so that may not be really competitive with the design goals but yeah yeah so i think i mean i know i personally have definitely been pushing the team implementing this uh stuff to like basically implement it as a client or so as a plug-in instead of implementing it as a client um and like in theory it should be possible to right like because uh like from the validator point of view like basically validators are just to need the uh the functionality of uh like just uh like um signing a a header uh that's uh provided for um from the outside and then they could just run a separate daemon that like listens in for the headers verifies that they're signed by one of the real layers or what um or whatever and then verifies um and then chooses the one the one that has the highest bid um so like sh that kind of architecture like basically just make it be a separate daemon um and then have the clients um just have extra functionality that says like look at look to this source um to tell me what header what header to include like i don't see any reason why that should not be possible or even a way that should be technically harder than any other way of doing things um and then like once you have like if you if you do it that way then like it is fully compatible with client diversity yeah thank you very much um does anybody else want to step on the stage and ask a question um of flashbot's friends and contributors unless or yeah i actually had a question um basically about the two slot proposal and why we want to move from the original one which is the one slot one to this one just from my perspective or at least like my understanding is that uh the the point is that we want to protect builders more just by having this uh intermediate committee that votes and kind of gives them some assurances um but like at least to some degree we could still protect them in the one slot proposal by having the header publication deadline be before the you may be having like one or two seconds a delay between the header publication deadline and the build right uh like that uh [Music] deadline and just like my i mean i guess it's just is though is the extra complication worth it to just better protect builders like why do we hear so much about protecting builders i guess well again there is also one other argument for doing something too like which is uh basically that like it's not clear that enforcing these like separate timeouts is actually game theoretically stable um like uh um like there's like what's the actual incentive to make you know vote according to the time now it's instead of like just voting along voting along with the majority um and uh the only way we know of to actually create some kind of incentive is to kind of put some like one actor in the middle um that would actually be able to include the include the committees and uh give rewards to them for submitting their attestations early um so like if there's if there's a solution to that then it could definitely make a game a more paralyzed option work better too okay um there are no further questions then um francesco do you want to stay on stage um yeah i'll share my screen okay then yeah for the audience we're moving on to um the next presentation um francesco can you give like a really short intro of yourself uh yeah i'm um well still a math student that started getting interested in theorem uh maybe i don't know eight months ago or something like not that long ago and uh yeah i did a sort of internship a day at your foundation focusing on mvd and then now i'm like i kept i'm still working there uh and i'm particularly uh been interested in at some point i was doing some research on mp smoothing um and now uh the last maybe three weeks or something i've been thinking a lot about uh pbs uh censorship resistance because it kind of seems to be like the biggest pain point uh for i mean we definitely want to move to pbs but uh we want to uh make sure that we preserve this uh this property that we have and yeah so this what i'm gonna show is kind of uh the result of not a lot of uh i mean it's it's really just a few weeks of uh of thoughts and a lot of it is from italian not for me but yeah so um the point of this uh talk is really to uh kind of inspire people maybe to to think about this stuff i think like i wanted to focus on design goals and what we need from a sensory resistance scheme for pbs because there's really a lot of kind of i think a big design space for for people to make like have like small clever ideas that they can make a big difference uh to improve um so yeah basically um the the first question is like why do we why do things get worse in pbs like why are we so worried about censorship resistance and uh the reason is is mainly that like it's really evident if you just look at how much does it cost to censor once transaction for for some amount of time let's say unblocks and so in the the status quo um even if we take uh not just uh let's say completely naive validator that's running guest but even someone that's running at bgf um the the cost is pretty high because basically if you want to censor for end blocks uh post one five five nine you need to just completely fill all of the blocks uh and so you have to uh essentially make up transactions which um you know you have to pay the base before priority fees and uh a rising base fee and so it's really hard to do like for even just a few blocks or really expensive um whereas in pbs kind of in the worst case scenario when there's maybe one dominant extractor like one really good uh media extractor that just wins all the blocks um consistently then it's it's really not uh nearly as expensive it's just essentially the the priority fee of the transaction times n so just for each block you kind of have to keep up this um this the the priority of this transaction um it's not immediately clear that that's what the cost is it's because you're not really giving it up it's it's a bit more complicated than that and yeah i'll show it uh next like what it is um this is from from vitalik just don't want to take credit uh for other people's graphics but um yeah so basically let's imagine that we have this dominant builder which is able to uh basically extract m plus a um in uh and let's say like every block it's the same and then the next best builder which is not interested in censoring uh can extract m so this k is essentially kind of the advantage that the dominant extractor has uh on the next best competitor and this basically disadvantage is what we could think of as the profit like if you're if the dominant extractor makes a really good bid they would be just a little bit more than m um and they can profit as much um yeah sorry i should say like m is without the bt transaction whereas m plus b is if we consider uh the victim transaction to be available to to still be around and that everyone can include in their blocks and so this p is how much the victim transaction uh basically the priority component of the victim transaction transaction um and so if the dominant extractor sensors they leave this transaction around for other people to use which means that everyone else can get p more than they otherwise could and so if you then want to still outbid them by just a little bit you have to get more than m plus b so your profits essentially diminish by this amount of d uh and so that that's why it's uh uh it's like it's it you don't just pay the opportunity cost once of not including key but at every slot um everyone else can make a higher bit by p and you kind of have to compensate for that in your bids um but yeah and this is a lot a lot less than than what uh than the status quo essentially um except it's not really a lot more than the status quo if you your model of censorship includes the possibility of bribes um because if you include the possibility of bribes then actually we get essentially the same in uh in tpbs as we have now so um the the point is if you if there's a transaction which uh pays a priority or like the total uh priority if you component is p then you can just go to a proposer and if they're profit maximizing proposer you can maybe just ask them to not include it and give them p plus one and they will include it if they're really profit maximized so if you're basically just treating proposers this way then things don't really change that much like that's about what a censorship cost um and if that's not the case like if you don't allow for the possibility of censorship uh sorry of the uh bribes uh kind of explicit bribes then even with pbs um proposers are still kind of uh have free will they can participate in pbs if they want to they don't have to take blocks from builders they can always make their own uh in at least for now and uh yeah they can just detect censorship and stop it so one might think okay then he's really so bad like does pdf pbs introduce like uh that i mean does pbs make censorship actually really uh that much worse um and i think like it really does like it's not just uh i mean we're not you know uh imagine the problem it's really there um and i think one like way to see it is just that censorship resistance behavior is really not the default in pbs so the default is that everyone just gets the uh the best block that they can from builder uh or like chooses uh the best header uh more precisely and if uh censorship resistance is needed it's something that comes like reactively it's like someone has to detect censorship and then really have some kind of internal threshold of you know that that or like some kind of uh alarm that goes off and tells them okay you should be altruistic there's a censorship going on you should be the one to step up and stop censorship by making your own block and giving up profits because that would mean not taking the best block that that you're given essentially um and i think there's a difference between yeah can i ask one question so by stepping up and making their own block you mean so we are talking about proposals slash validators and you want them to no longer select the most valuable block that includes the censorship but make their own block which might be less profitable to them but be better for the system overall yeah yeah exactly yeah so essentially um just you know maybe have some kind of internal censorship sensor that goes off and tells them okay this transaction has gone for it's been in my memory for 20 minutes the whole time it was includable but no one has included it there's censorship going on i'm going to make my own block and include this transaction and obviously if you're some random proposer you won't make a very good block but that's the whole point of pbs that we don't want to ask proposers to be able to make the blocks in the sense of how much mbv they extract and so it means that kind of by uh like default by doing this you will uh earn less than you would have otherwise and so we really if if this is how we think about censorship we're really relying on um some proposer to kind of at some point just decide to be altruistic and that also that they have to be the one to be altruistic that you know it's not gonna be the next proposer or eventually someone will do it but like i'm gonna sacrifice profits to stop censorship and yeah i think it's very different uh to have a censorship resistant model where the sensor needs to or the sensor needs to bribe all proposers to sensor versus just you know the default is that you can censor and then someone has to decide to do something to stop you essentially um but even if you don't agree with this that's not the only uh problem here it's also that even this reactive mechanism this you know ability that proposes have to uh basically forego the pbs mechanism for one block or however long it's needed and just basically provide the censorship resistance that the network needs um this is probably not something that's here to stay and one probably the main reason the second one is debatable but i think the main one is is definitely you know it's part of the ethereum roadmap and uh we really want proposers to be stateless to be able to uh do not need to be able to make their own blocks like at all it's not just a matter of um more or less sophisticated it's really we don't want them to be to need to have the state and and to be able to uh to make blocks and uh so that this is kind of incompatible with this reactive mechanism because uh once a proposer detects censorship we don't want them to uh go to someone else to get a walk you know you detect censorship and then you have to go ask some other sophisticated entity to give you a block because you cannot do it by yourself that's kind of that defeats the point like you have to go to some other trusted entity and let them provide censorship resistance and that obviously it's not what we want and uh another reason is that and yeah this might be debatable maybe this is not what's gonna happen but that might be that proposer's discretionary is really minimized uh even further to the point where uh not only they're normally getting blocks from from builders but they really cannot choose to do otherwise uh like they uh they're kind of their choice is really limited to a few uh good uh headers that builders have made um based on how much these headers are getting and for example this would be the case in a midi smoothing like it's basically how the mechanism works and it's required for it so if we did want to go the down the md smoothing route then uh we would need to basically not have composers able to even uh kind of start this this reaction to censorship even if they detected it um and yeah so so far nothing good uh has come out can we like have some can we still improve uh on the base pbs center resistance which is not much and at least go back to what we have today um so where if we're not assuming bribing we still have this like really high cost of censorship where essentially you need to fill uh all the blocks to censor something and uh yeah i mean it seemed very easy you have all these proposers you're assuming here again we're assuming that they're not bribable or a lot of proposals are not private so why don't we just let them add transactions they can you know have some a little power to to add some transactions and then these transactions are what kind of keeps the the model from today that that gives the censorship resistance and so for example a naive solution would be the proposer just includes a bunch of transactions in the header before signing it so maybe the builder creates a header but then the proposer before signing it can modify it and add some transaction and add you know maybe have a little gas allowance like not too much um and then the next block has to execute them and so this basically amounts to the proposer having their own little dedicated block space that doesn't participate in pbs so basically that they're not selling out to builders um this seems promising except well there's one really obvious problem that it's uh you know we're basically reintroducing the problem we had before like now we're giving the proposers this power to uh control this little part of the block again even if they're participating yes and what is what should a proposer that wants to maximize profit do they should either specialize so that they can use this power well or they should go sell it to a dedicated uh market so basically another round of pbs um and so obviously we don't want that um and then another problem it's a bit more subtle but turns out it's pretty annoying and hard to deal with in this kind of schemes is that um we have to worry about what happens if these other transactions which are included are not valid anymore like maybe the proposer was acting honestly they put value transactions then after executing the builder's payload they're not valid anymore because maybe they uh the balance of the the sender is not enough or something like that and the question is does should someone pay for them or what happens like do they just kind of aren't they're in the block but they don't get executed and they don't pay anything and the problem is that if someone should pay for them then he has to be the proposer because the uh this transaction might literally not have a balance to to pay with um and if no one has to pay for them and of course if the proposal has to pay for them then well this obviously is not gonna work like you can't ask proposers to kind of i'm just asking them to be even more altruistic than before um and uh yeah if no one pays for them then they get free data availability they just can be essentially abused to introduce data for free into blocks which for example a rollup could uh could do something with uh and so yeah we don't want to have these like free resources uh lying around and uh yeah so this kind of uh leads to some of the main design goals that we want to have if we're trying to design a sensory resistant scheme for pbs which is uh i mean the main one and this is why it's on top is that we really really don't want to kind of sneak in centralization by uh we've like kicked it out by it we try to kick it out by uh introducing pbs and we don't want to um then modify tps to introduce uh centralization again um in the on the proposer side and so that's kind of that's probably the the biggest uh most obvious goal then again no free data availability as i said before um and this is again really tricky and uh we want to be compatible with stateless proposers so we don't want the proposers to need to execute anything um and we don't want to require a lot of altruism we if we do need to require some altruism it shouldn't be expensive it shouldn't be um something that consistently makes you uh miss profits essentially um and we want to require not a lot of extra bandwidth um so for example um even in the scheme before we might have uh extra things which end up in the block they're redundant and they get gossiped um twice like essentially the block becomes bigger but with no extra information there's just maybe the same transaction twice and we don't want such things um and yeah there's some other kind of maybe well yeah i didn't put in there they're not essential but also because they kind of don't fit the the current uh the scheme that i'm going to present is that it would be nice if it was compatible with md smoothing just for long term if you wanted to do smoothing it'd be nice to have a scheme that works with that and with ssl which is a secret single leader election so we'd like something that doesn't uh kind of break the we're trying to do with with secret senior legal direction which is that the proposer isn't known to anyone uh until they actually uh do the kind of million proposing uh act so in this case to publish a header um and yeah we don't want more latency and there's probably a bunch of other things actually um yeah like we maybe didn't think about maybe in the scheme that i'm going to talk about they aren't uh there's there's some you know problems that uh come from this and so if you if you think of anything yeah just tell some of us um yeah ipps is basically the scheme that comes from refining this naive solution by trying to kind of kick out all these problems and kind of uh stick into the design goals and the idea is really simple like uh the point is that we want to go back to um censorship being really expensive and precisely that to sensor you need to fill up blocks like if i want to sensor transaction the block in which it should have been included needs to be full and uh and i need to pay to actually fill it because that cannot with one 559 that cannot happen definitely and uh yeah basically it looks a lot like just normal pdfs except first the proposer uh broadcast a list of transactions so kind of like before um and yeah we have this requirement that only one sender is in the list at once um sorry sorry that each uh that each sender is in the list that most wants um and then uh the proposer also broadcast basically a summary of the list which is essentially just a bunch of pairs um there are like the sender and the guest limit of each transaction um and uh this is signed and then the builder just takes uh this uh this summary so not not the actual is just this like smaller summary and puts it into the body and then needs to kind of um respect uh this list that's been put in by having some validity conditions related to how they can construct a block uh and then everything else just yes like builder so from basically three to five is just regular bts like the builder has made this block they uh send the headers the producer accept the best one and then it's published and then there should be six which is uh attesters have to kind of check these validity conditions when attesting to something um uh yeah the this kind of uh secret ingredient to make it work is this validity condition which is essentially that um for each of these pairs so remember like each pair can correspond to a transaction in uh this uh yeah cr stands for censorship resistance is just the list of things that we want that the proposer is trying to give censorship resistance to to i guess you could put it uh so for each of these pairs we have one of two conditions needing to hold so either there is no space in the block for for this transaction so uh the gas used of the block that the builder made plus the gas limit of the transaction doesn't fit into the block uh so you know the builder really filled it up the brink and then this transaction is too big to fit and that's fine like basically we don't think we don't consider the censorship um the builder filled the block so either they paid to fill the block or there were there were enough transactions to include them so we don't think of this as sensor and um otherwise the sender needs to already appear somewhere in the block and basically the the reason for that i mean for the first part i already said it but the for the second condition is that um this has to do with this validity problem that we were talking about before so the fact that something might not be valid even though it was valid at the beginning of the block uh but this can only happen if there is already a transaction by the same sender clock so basically if you send a transaction uh and it's valid and at the beginning of the block then after at the end of the block it can only be invalid if your same address did something like there's another transaction from the same address which spends some gas or you know maybe the transaction is the same nonce or something like that um and so basically as long as at least one transaction from the same sender is in the block then we don't have to worry about this or like if there is no transaction from the same sender then it is not possible that that is not invalid so it will be able to be included essentially uh if there is a transaction from the same sender in the block then essentially we don't care like if you're you know if you want censorship resistance for a transaction uh then just send them one at a time that's kind of the point so no one really loses anything by it by making this um simplification essentially and so yeah with these related conditions we've we're guaranteeing that um everything that could have been included in sierra list is included essentially um in the in the block without having to put everything in the block so there's no uh free data availability except for this pairs but it's not much and actually we can make this a bit more sophisticated and get rid of almost everything and really make it so that only things which are included uh which are actually like executed and valid uh are in the block or even have like a little bit of data in the block about them um and yeah now to think about why it does disrespect our design goals um first of all again centralization is the key issue so when no one is censoring the proposal literally has no power because basically if there is no censorship then builders wouldn't feel wouldn't make a block which has space for transactions that the proposer including cr lists like either the transactions are already included or i mean or like yeah basically if there's the transactions are valid that the proposer chose then they will definitely be included by the builder because there's no point in not including them unless you specifically want to censor them or the bot is full but that's also okay and yeah so basically the proposer doesn't is not able to constrain builders to do anything else than their normal behavior unless there's censorship going on um then about the data availability as i said like only this center guest limit is actually in the block and so it's pretty minimal and we can do fancier things to get rid of it yeah bandwidth also doesn't uh the block doesn't require a lot of extra bandwidth so basically the main thing is just the gossiping of cr lists so some transaction will be gossiped twice like in the form of cr list um and yeah we don't require a lot of altruism or like uh it's not very expensive like everyone should be making this list because consistently but um unless there's censorship then it won't it shouldn't it should never cost anything uh any neither effort nor miss profits um and uh yeah and we don't there's no problem with stateless proposers because proposers are not executing anything um and then there was these other two things which was which were smoothing the compatibility to the midi is moving and uh secreting the secret single leader election compatibility and yeah unfortunately this doesn't this is not good in this game like we don't actually um we're not really compatible with these things uh and in this basic version um we can do better for first and yeah i'll go back maybe to like uh show why but um for um secret single legal election compatibility the problem is that the proposer is broadcasting the list uh before uh or i mean one of these two things or both uh before they have to publish the the winning header and so they have to do two actions and in this time someone could figure out who the proposer is and potentially does them and basically i mean they have to reveal themselves before they should so there's this problem and this maybe we can get around it by having things happen over more than one block but it's still to be kind of thought about more thoroughly and the mvd smoothing compatibility it's a bit more complicated it's um basically the problem is that the proposer so one thing i didn't say is that um the reason one reason why this works like uh that i didn't mention is that uh the proposer could broadcast some complete nonsense like they could broadcast a list of things which are not available which are not even transactions they could not broadcast anything but the point is that builders will not accept this like if i'm a builder i see something that doesn't make any sense i just won't make a block so for the proposer to broadcast nonsense all it does is just kick out builders like just prevent builders from making a book um and so essentially it's like the same as the proposer just renouncing the right to participate in pbs but if they want to make a block they have to make it by themselves essentially and the problem with that is that as i said before we don't want proposers to have this discretionary in mv smoothing like it really relies on the fact that uh everyone can uh observe builders bids and then attesters can boot on it and they can kind of enforce that the best one it is chosen um and so yeah the proposer here can just like broadcast some nonsense and then essentially [Music] there they become the only builder that can bid at that point and so they can kind of get around the smoothing constraints essentially and not pay off um pretty much and it is actually a bit trickier to deal with and yeah at the moment not really sure how it can be done but hopefully can um and yeah um but then another question is can we do even better than now so not just um so it if you remember the this scheme and if you think about it it should make sense that this team essentially tries to give back um to like restore the censorship resistance guarantees that we have uh now today if we're not assuming bribing is going on um and so can we do something that is even better that is like purely uh economic in the sense that like uh doesn't doesn't require uh any participation from proposers i mean well the minimum level participation of choosing choosing uh bids in some auction but not specifically uh you know something uh like making this list or or like before uh in the uh base pbs uh something like uh stopping participation in pbs and making their own blocks like not requiring this kind of activity from proposers but really just requiring proposals just to choose beats um and uh yeah and also just essentially something that doesn't uh that is like bribe resistant and uh maybe we can i mean this uh this something that really needs to be worked on but another idea that was in this post from metallica it was basically this idea that um the reason that we get this really high cost of um to exclude a transaction today can also be thought of as you need to beat the transaction in a lot of auctions there's like essentially a block uh sorry for the horrible picture but uh there's a block like partitional slots and you need to beat the transaction in an auction that happens in every swap so you so if i want to exclude the transaction i have to screw different this this slot this slot this slot and so on for all the spots in the block and i mean this basically is the idea just that if someone is naively choosing transactions uh like you know the normal death uh kind of making block then you just have to have a fee that's higher than that the sensor transaction in every slot let's say and uh and we it would be nice if we can kind of restore this um many auctions property um but with proper options so not auctions um i mean for first of all these are not really options but like any the general way that a block is constructed today is uh um that there's no privacy in uh in the in the auction and so bribes are possible and also just there's all these problems that uh come with not having privacy uh for these bits um and i mean why we're moving to pbs and all that so i'm not gonna go back to that but uh yeah it would be great essentially you can have the same property uh but with these proper options with privacy and so essentially have uh a block deconstructed by uh a lot of pbs style options so with privacy um but in parallel and then the except the executable part of the block would be the result of combining all of these winning bits and so the the point of that is that essentially censoring again would require that every auction needs to be um that every auction um where there is a bid which contains the the transaction that is uh that you want to censor you need to win and so you need to outbid in every slot and uh yeah another um reason that we might want to move to something like this rather than something like hybrid gps is that uh it might be a lot easier to adapt this to a world where we have account abstraction essentially and uh i don't want to go too much in detail of this also because i'm not sure how much time i have but um the the the rough idea of what's the problem with the account abstraction and ips or like just in general censorship resistance um you know in an account abstracted world is that basically um the things whose censorship resistance would care about are some objects which are less than transactions um so what we today think of as transactions might be bundles which have a bunch of these user objects like um essentially [Music] things which might not be whose payment might not be clear like they might be things that pay in erc20 tokens or they pay in some obscure way that will be the the user and the bundler or the person that includes this uh this object no and so um we don't really have a kind of a clean way to treat these objects uh just like we do transactions today uh but we want these things to have sensors resistance like we don't want the bundles uh to have censorship resistance so we kind of want a more granular censorship resistance than the objects that we're actually able to um let's say know about at a consensus level or at least like we know a lot less about them than today like we don't even know how they pay for example uh and so there's there's essentially this problem and this uh many options uh approach might be a lot more uh flexible and kind of be able to be completely agnostic to such issues um and uh yeah but i mean how does it exactly work like how do you combine things what about all these design goals uh blah blah blah and yeah i don't know right now um maybe well maybe vitalik does i don't know but maybe some of you were listening we'll think about this and we'll you know eventually have like a really good uh way to have this even better um i mean we'll have a really good scheme for combining things and not kind of introducing all the problems that i talked about so yeah just if you're interested in this stuff uh start from the design goals and think about how can you uh kind of how can you apply these to this potentially better sensory resistance model with parallel options i think that would be i mean really like small ideas can can make a big difference because there's basically uh almost no previous work on this so yeah and that's it yeah thank you very much for the presentation um so does anyone from the audience have a question i i think i saw at least one i think i saw one from kushal um so he says question for francesco um if i understand you correctly in the hybrid pbs wouldn't validate us again have to specialize for proposing the censorship resistant list i think that's not the hybrid pbs i think that's the other solution right where you add a list with um yeah so we know in the like the name of ibp fps i guess you yes this would be the case like uh and that's the problem is uh this problem here which is like if i have this power then probably i should use it you know uh maximum profitably and so there's a pressure to to specialize or to sell your power to just like today and so we haven't solved anything but in uh i've reviewed yes the thing is that uh basically um the so there's there's this line which is essentially that something needs to be in the transaction needs to be in the block only if there is enough enough space for it so what you should think about is essentially the builder makes the block that they like so you know the builder sees all whatever memphis transactions they make a block they maximize it maybe everything did um but then somehow there's this transaction which still fits in the block if this builder isn't censoring then why is that the case like why are they not including this transaction which is paying them um so essentially the only case that this would happen for the builder to kind of uh be forced to to put this transaction in that that they got from uh this cr list is if they actually intended to censor to begin with so you know if like 99 of the time there is no censorship then 99 of the time it will make no difference with the proposer uh broadcasts in the sense that uh no matter what they broadcast either the builder was gonna it was gonna put it in any way because they're not censoring and so they wanna put all the things that they can that they can find um or the block was already full and so it doesn't matter like essentially the ideas see our list only matters if there is censorship already where censorship is defined specifically as in there is space in the block but the builder is not using it and yeah that's it i don't know if like yeah let me know if that didn't quite answer your question can you go back on it yeah um it did for me so if the person asking the question has any follow-up then please post it um so let's see would you be i think given that this was the most advanced um presentation of the day i think it would be good to recap some of the basics of it um so would you say that um that pbs actually makes the censorship resistance of ethereum in its naive form a lot worse than it is today i would say yes i mean the i think the first of all if you don't have this model where it's easy for proposers to be bribed so you know if someone wants to bribe they're they're really not going to each proposer so if i want to you know censor something for n slots i'm really not going to each proposer and uh telling them please don't put it in i'm going to give you more than the the transaction is worth or anyway you think that this is hard to do because the the proposer set is decentralized and so on so uh if you don't have this model then it's pretty clearly uh much worse because we really have this kind of uh much lower cost of censorship like you just have to pay the priority for the transaction for the number of blocks that that you want to censor for whereas here you really need to like fill up all the blocks make the the base fee blow up and you know it gets really i mean even for one block it can be really expensive the block is almost empty um so it's very different if you don't assume that it's easy to go to composers and like individually uh try to bribe them um but again even if you do think that that's that's okay that that's like feasible for for uh some sensor to do uh you still have i think this problem which is um i think it's really really different that to censor you need to go to all proposers and offer to bribe them and for them to accept the bribe rather than just okay i'm gonna start censoring and by the way also another thing difference is that uh if you want a sensor for one block and you're this dominant extractor you can immediately do it there's no one can stop you in advance kind of um like you don't need to go convince anyone you just do it you don't put it in the block and maybe someone can look at the block and say hey why is this transaction naughty and i slide in the memphis and it was pain enough and there's enough space and all this stuff but no one can actually force you to put it in um because we have this like private private option um and so yeah you can start censoring and then you really are just hoping that no one is gonna stop you which i think is really different than actively needed to go and provide each proposal um due to sensor yeah and i think maybe another way of of framing the same thing would be that if you're the best miner today uh even if you have substantial hash power let's say you have 40 and you have the biggest margins then you're still only going to uh mine 40 percent of blocks right and if you want to censor a transaction then yeah to you the cost of censoring that transaction is the opportunity cost of not including it but 60 of blocks are going to be mined by other people right and they might include your transaction whereas if you are the best builder and have the highest margin then i think there's a pretty high chance that you're just gonna win every block um yeah and so the market for building is actually going to be much more concentrated than the market for for mining so my question would to you would be um given that and given how sort of challenging the solutions are uh are you even you know in favor of pbs and if yes why um yeah i'm definitely in favor of pbs i i think i mean i think we did a very good job of explaining kind of why we want to move towards that but yeah i think the i i don't really see another i mean i think pbs will happen no matter what it's just a question of are we going to make it trustless and protocol i mean we even see it today like if flashbacks exist people run media geth i don't really see why that wouldn't be the case like even before in protocol pbs we're gonna have a midi boost and uh and it's the kind of rational conclusion of the forces at play so i think it's not uh it's not something we can stop we can only try to uh make it as good as we can and i think making it trustless is a step in that direction but also another uh point is that i don't actually think the solutions are too bad like i think specifically i i mean it's gonna look very bad if you you know look at this presentation take uh i i know i went through things very fast but actually what's written here is quite simple like the last three uh parts are really just what happens in pbs today and then everything else is just the proposer has to broadcast like it's basically the proposer chooses some stuff broadcast it out and then the builder does something with it and that's it there's no interaction and there's really not like the this validity condition is very very simple um and yeah i mean this is not perfect there's some issues there i mean this you know problems with the ssle with smoothing but i mean for one thing smoothing only comes with pbs anyway so that it's not even uh you know we wouldn't uh worry about smoothing it if if if we didn't have pps to begin with but yeah i actually think this is not so bad and this is stuff that's been uh thought about in the last month maybe not maybe not even so hopefully we'll come up with much better schemes yeah i i agree i think the list approach looks uh quite good to me and i think yeah the big point that i think we would want the audience here to walk away with it is that pbs you know as it means sort of the division of labor between proposers and builders is happening it's it's only like a matter of if you want to put it into a protocol or not like it has been happening for a long time flashbots is just a form of pbs but it's happening outside the protocol and to make it work there as i try to say in the very beginning in my intro talk it requires a lot of trust in each other from the different participants and as a result of that trust we create you know choke points for a system like ethereum and we also become forced to exclude um some of the less trustworthy um smaller participants right so i think um that again highlights you know why we want in protocol pbs in spite of the challenges that it brings because we have to compare to the challenges that already exist and even though a system like flashbacks is not getting exploited today by miners um it could well happen and that could well be um like pressure exerted on it from the outside and i think this is all stuff that like if we want to preserve the human's decentralization then you know it's gonna be very important so yeah completely agree with you um some questions about mev smoothing so you touched on this very briefly um so what what is muv smoothing um and why you know might we want it yeah so the movies moving is basically a very high level just trying to distribute mvv rewards um smoothly like uniformly over the the validator set so you know let's say in uh in a month there is uh i have no idea what the numbers actually look like but let's say like five millions of media i don't know uh we want like each validator to get exactly or like i mean very very rough no not exactly but yeah to get like around their fraction like so if there's 300 000 validators they should get 5 million divided by 200 000 uh so kind of everyone gets their own fair share um i mean fares is a loaded word but okay in this context uh yeah we just mean like based on uh if you control 10 validators then you should get 10 times more than someone to control phone validator um and yeah the reason um to one that is um i mean there's a there's a few but i think the really key one like uh that that's very important is uh uh trying to protect uh or to have like as much consensus stability as possible to kind of protect consensus from the um instability that comes with md and uh yeah this i mean the the problem is um so a lot of times people worry about mdd in terms of um what happens to you uh to users so that they can be front run things like that and this entire centralizing effect so uh yeah basically what we talked about this whole time like what we're trying to address with dds and and so on but there's this other aspect which is the consensus stability aspect which is if blocks have very different rewards like once you add up mbd to the rewards blocks give their proposers very different amounts of money then this can threaten the stability of consensus and you know they can create incentives for orgs and uh all kinds of uh all these kinds of things where basically uh someone is trying to uh take a movie that didn't get to them so you know my um my block has so much mdd the next proposer tries to reorg it out so that they can get it and smoothing basically uh makes this pointless because it makes it so that no one can within reasonable bounds get more than other people like everyone's gonna get about the fair share yeah and why why is smoothing why is smoothing not possible today um well the the main thing that you need for smoothing is basically some kind of awareness of the builders market so if you want to think i mean you basically you need a way to measure maybe right like you need to be able to know how much is or you need like in consensus to know uh roughly how much mmv did this block contain it but that's a very hard question like how do you measure i mean even even if you had you know uh all the time in the world and wanted to go back through the history of theater and measure how much energy there is in blocks it's not that clear because it might even be subjective it might be that someone would be willing to pay a lot more for a block because the reasons that are not they're not so clear to someone that's just analyzing the blocks afterwards but what you can tell is what the builder builders market is willing to pay for for a block so if you have a bunch of bids um in in pps essentially um basically you can take the highest bid as a decent proxy for md um and basically that's what we need we need pbs and then we need to essentially have some kind of inconsensus awareness of the various bids that have been proposed so that we can use that as our kind of proxy for mdd is it enough to prevent this if the if the block proposer has zero control over what they can include in their block so there can be no uh like grounds for any kind of off-chain driving um so you mean like if uh we had no proposer and we just somehow had the validators um or like a committee pick uh blocks or yeah i'm not sure what you mean unless it's it's this uh no it's fine let's we can talk about it later i think it's it goes too far um so uh last question um how does muv smoothing um affect the censorship resistance of ethereum um yeah so i mean well maybe uh from what i said uh so far you might might think okay it's it's only bad because it prevents us from i mean if we want to do smoothing then okay hybrid bps doesn't work and we have to like come up with some other modification that works but i think it actually can affect it quite positively um and the reason basically is that it makes altruism a lot cheaper so we don't want to rely on altruism a lot and but i i mean even in your pbs it's like really minimal altruism but still we're asking proposers to do something that they don't have to do and i kind of lost over this but you could think okay broadcasting an empty list is optimal because you never exclude any builders like it could be that you broadcast the list but then some builders don't see some transactions or maybe they only see the the summary they don't see the list and um somehow they miss some transactions and then they're kind of excluded from the auction um because they cannot make a valid block and uh basically so you take a little bit of risk if you're if you're a proposer and you broadcast at least really not that much but there's a little bit of risk and maybe okay your expected value if you really want to be strict is actually a bit less than broadcasting an empty list but with media smoothing whenever we're asking proposers to be a bit altruistic uh this bit of altruism is so much less and the reason is basically that let's say that i'm a solo taker and uh it's my turn to propose something but the the thing is the income i get doesn't depend almost at all from what i do in in this block um like even if i didn't propose at all okay i would lose a little bit of uh proposal rewards or whatever it's called uh but i the enemyv of this block is not going to be only like a super small fraction is going to if i'm a solid state can i only get you know one out of um it'll be like six thousand or something depending on the committee size and so i guess so little of the blocks maybe that i don't have to hear that much like i can be if altruism is a bit expensive kind of globally like maybe it reduces the expected value just a bit then for me it's almost irrelevant and so i think this is the one important part of like if we do have a censorship resistance scheme which does ask a bit of proposed like which relies on proposers then i think it's it's uh likely to be better uh under nbc perfect do we have any further questions anyone wanting to join the stage if not then i uh i would hand it off to stefan of fleshbots who wants to talk about the um the the flashbots uh mev boost proposal which would be basically a trusted a more trusted version a stopgap on the way to the in protocol um pbs system that vitalik talked about steph are you here let's wait a second all right i'm here to hear me yeah take it away perfect um let's see here do i need to show my screen yes right yes i might need to uh to rejoin to do that actually give me a second uh so tina if you're listening you may have to promote stefan again after he rejoined or any other admin yeah thank you now we can uh we can talk about some audience questions in the meantime so scott g asks no way to peek at bundles until the builder publishes the body um so i think you may have to specify your question so in pbs um basically uh yeah stefan asked to be admin so maybe we take the question after um but basically there there's two connections there so one is between the users and the searchers and the builder so they the searchers and users have to trust the builder and this is not going to change um with pbs um but then on the other side um there is there's right now there's trust required between the proposer and the builder and that is what is going to be affected by pbs so in protocol pbs is going to remove all the trust between um the builder and the proposer via the commit review scheme so yes um the the proposal would does not see the contents of the block that cannot peek at the block until it has landed on chain all right i think we're all set um hey everyone so uh yeah i'm stefan i'm a founder and a steward at flashbot um and i'm gonna be talking about mev boost or mv boost we'll see which one sticks um maybe i think the stage has already been set on on what pbs is what is sort of the long-term objectives with pbs and what are the sort of unresolved questions with with pbs in the long run what i'm going to be talking about is um what do we have uh between now and then um what do we what what are the tools what are the systems that we can build in order to try to approximate as much as possible the properties that are provided by pbs in um and ethereum sort of as it works today as it works at the merge um and anytime after until until we get pbs um so um i think probably a good way to to introduce this topic is to take a look at a comparison of of what are the properties that mev boost will give us so right now the system that runs on top of proof-of-work ethereum um called mavgeth was launched um in january of of 2021 and it has provided sort of this block space auction that allows for the expression of preferences on ordering um and in particular allows miners to outsource the task of searching for an ev um to um to a network of searchers who submit these transactions um this has sort of all kinds of positive properties that we've observed over over the last year including taking a lot of the competition for opportunities out of the transaction pool um reducing the amount of failed transactions that land on chain because only successful transactions get mined etc but there has it has like quite a few properties that it did not display so so one of them is that so far it has been limited to the submission of bundles to miners which bundles are just an array of transactions but that doesn't provide a full capacity for for including transactions or or expressing preferences over the order of transactions in order to do that you need to be able to submit basically full blocks full block ordering including the having control over the parameters that are set in the block headers because those parameters can modify the execution path of the evm when the the block gets processed so um this is one thing that we want to move towards is sort of outsourcing the full block construction as opposed to just a partial block construction another property that um that met boost aims to provide is the ability for solo stakers to participate so on the mev guest system today um only large mining pools are able to run this and the main reason for that is that they receive all the bundles all the transactions and clear text and they have the ability to do this this med stealing behavior and to prevent that basically what uh flashbacks needs to do is monitor all the transactions get get mined by by miners and if it observes foul play then it no longer submits transaction to those miners in the future um this means that only sort of large mining pools who have some level of skin in the game and reputation are able to um to participate in this but uh to sort of get closer to the pbs design you'd want to be able to enable anyone to just turn on their their client in in the proof of stake land as soon as they have a 32 eat steak then they'd be able to participate as a staker and and receive the benefits from from mev without having to do interview themselves so that's the second component that uh that mv boost is designed to do the third one is client diversity um so muv geth sort of has it in the name um it's only built on top of geth and and while it is a specification and any other execution client is able to implement the same mechanism um the the fact of the matter is a lot of the mining pools have developed experience with customizing guests but not other clients and so all the mining pools run run the same software with the transition to proof-of-stake this uh there's sort of an opportunity for for this to change and there's this wonderful ecosystem of client development teams who are building both consensus clients and and execution clients which we want to make sure that mev doesn't prevent from obtaining adoption so on top of transitioning to full blocks on top of adding solo sticker participation our goal is also to make the system client agnostic and sort of compatible with any client out of the box um finally i want to sort of list the two components which which we are unable to um to fulfill um completely without modifications to the core client and so therefore the reason why we need to have um further research and development into in protocol pbs the first one is complete privacy so while mv boosts improves things by not sending the transaction contents to the miners it is still reliant on sending transactions to um to relays um and then trustlessness so because uh in mv boost relays are sort of delegated the um the the ability to construct the block um the validators need to trust the relays that they are connecting with to make sure that the the blocks are proposing are are valid um so a lot of sort of discussion of the different features here and their impact but what does this actually look like um so i've put together some some graphics here that give an idea of the various actors in uh in these three systems and how they interact with each other so in the current mev geth design right we mostly have three entities we have users and searchers they send transactions to a relay um this relay then forwards those uh those transactions to the miner and then the miner produces a block and mines it um now in the any boost proposal we still have the same concept of users and searchers submitting their transactions but now instead of sending it directly to a relay they send it to a block builder and this block builder is the one that's in charge of forming a painful block um this block builder then submits their block in clear text to the relay this relay validates that the block is is a valid one that's paying the validator a sufficient amount does sort of the dos protection um and then it only sends uh headers to the validators so the relay sees the content of the block but the validator does not and then the validator isn't tasked with returning this the sine block header to the relay who then propagates it um and then finally in in the full pbs design we can get rid of the relay entirely and so the the functionality and the work that the relay is doing in mv boost is baked directly into the protocol um consensus and uh and is no longer needed um so it sort of increases the trustlessness of this design it also makes it much easier to to reason about fewer numbers of actors in the system okay um so this sort of presents things as being quite linear you know user says one builder one builder sends the one relay one really sends one validator but uh the sort of topology of the network that we're aiming to build is is much more um uh competitive than that so um in an ideal system uh we want each of these actors in the system to have a lot of competition so we want there to be many different alternatives for where users can route their transactions many different alternatives for where the builders route their payloads and um and many different relays for which the validators can connect to um and so the biggest question mark in in this design and and something that we want to encourage is for there to be many different builders and many different relays who are able to provide this service and for which users can um can switch away from if a build or a relay does not provide the right properties and and guarantees that that the user expects taking a closer look at how the system works on the validator side so for people who have set up beacon clients they'll be familiar with validator client and and beacon clients um that's sort of how the beacon chain operates today um in uh at the merge what we're going to do is introduce this execution client right and this is basically the the current eth1 clients that that are being brought into um into the beacon chain um and this proposal is to insert a an additional middleware in between the leaking client and execution client that's able to communicate with these outsourced third-party relays for receiving block constructions do profit switching amongst the various different proposals that received and and include the most uh profitable uh block as the as a proposal to the to the leaking client so to get this done we've we've done a few steps obviously the design and proposal of this system is sort of step one uh making sure that we have something that sort of achieves the properties that we want as much as possible but we also need to make sure that it's designed in a way that works with the various different entities and stakeholders who are participating on um on on ethereum um so we've we've put together a working group here with um with various different actors that that play some some kind of role in this system um the reason why we think this is absolutely critical is that actually the setups that validators run um is uh is very different between different entities and and probably each every single one of these system operates slightly differently we have we have custodians we have just pure infrastructure providers decentralized taking pools centralized taking pools solo validators and one way to think about the difference between all these entities is they'll all run different subsets of these these clients and provide different services on top of them um so so in building a solution here it's really important that uh it is compatible and and works with uh with all these different systems um so so yeah this working group is is something that um that we uh we are in the the process of building and want to encourage anyone who um who who wants to participate in the design of my boost and development and testing of it to uh to apply to join this working group i also want to mention a couple tooling uh that we want to provide grants for the community to build one of them is a relay monitoring tool so basically in the boost system here when validators receive payloads from relays they need a way to verify after they've produced a block um that the relay was not acting maliciously and this sort of verification process might be somewhat burdensome to maintain um and so for solo validators it'd be great to provide some tooling that allows them to outsource this this monitoring uh to to some uh to some third party um so so we want to put together some some grants and support for building that and another one is a one-click validator setup so i think this is something that there's already a few teams out there building um but we think it's super important for um to make it as easy as possible for for solo stakers to to set up their um their map with boost client and and and get up and running um so yeah that's what i have for to present and happy to answer any questions yeah thank you very much steph let's see do we have any i don't think i haven't i have seen any questions related to this in the chat though there's very very lively discussion going on and has been all day so that's great to see um so i know you've answered this but i think it's very important and so um i want to discuss it again so we asked in this um mev boost proposal we are stacking a lot of trust on the relay in order to remove it from um from the miner basically um how can we protect the proposals from a malicious relay so um the guarantees that the system provides is a maximum of one block loss of revenue for the validators now there's like a couple different ways that you can operate uh the system and depending on the type of validator they're like risk tolerance they can play around with these guarantees by configuring their their map boost client differently um but uh uh let's just sort of focus on talking about uh for solo stakers solo validators for operating it at home um uh which are sort of the the targeted users that we're really aiming to design this for what how do they make sure they can trust it really um so when they receive a a header right they don't see the content of um of the payload they don't see the the transactions and so they don't really know if the the payload that was submitted by the relay is a valid one um so they kind of sign blindly and and have to trust the relay that is making a good claim a valid claim and then they propose that blocked event network the network then sees the full content of the block they see a transaction and the attestation set as part of the block proposal gets to vote on if the block has been valid or not um and if the block is invalid um then the validator gets to sort of see that the blockchain proposal was invalid um it doesn't cause them any loss of fund they don't get slashed but it does mean that they miss the proposal slot so they don't get the revenues from him and so what you want is a system that's essentially be able uh that's essentially able to notice that there was some some fault some some invalid block that was attempted to be proposed by a relay and uh and and able to switch away from using uh this relay um so there's multiple different ways in which the reality can um can sort of produce invalid blocks and those those are discussed in the eth research post um but the the mitigation is making sure that mvb boost on the on the client side so over here is able to monitor the reputation and performance initially we just received another question from the audience how does mev boost address the problem of mev stealing so the main component of it is that the validators never see the content of the transactions until after they were accepted by the network that being said it does not prevent builders and relays from seeing the content of the transactions and so both of these actors in the system uh still run in the same way as flashbacks does today right it relies on the fact that uh users won't send uh their transactions to builders who have a history of stealing transactions likewise builders won't send transactions to relays that have a history of stealing transactions but it does mean that relays can send blocks to any validator without having any risk of any stealing um and so decoupling away the block proposal right which is done on the validator side from uh the block construction which is done by the builder and the relay is sort of where you get this separation okay that's not relevant okay so my next question what are the challenges for for flashbots or any other builder in creating full blocks instead of bundles so it's it's a very different challenge when you are acting as a searcher right so we can we can go back here and and and look at uh how the system works today right like searchers are highly or tend to be highly specialized on specific strategies so they'll only look at liquidations or they'll only look at atomic arb or they'll only look at statistical arb um and they build sort of a a moat on this this vertical um what they don't have a mode on is figuring out what are all the other strategies that are available in the system um and so this means that there's an opportunity for um for uh for another entity to come in and specialize on just aggregating the expertise of searchers and and and this is sort of what the the block builders role uh aims to be so the block builders takes in um bundles from and transactions from varieties of different sources and combines them in whatever way is possible to produce the most uh profitable block um and and propose that through through the rest of the system how has been the process of convincing miners to run this i mean given that you touched on um stuff like well full blocks take a lot longer to propagate and so on has it been a challenge or have you even talked to any miners um and how they think about this uh miners or validators oh oh this is this is only going live with the merch right so yeah i guess validators then yeah i guess i i didn't touch on this um so yes the the big transition point that's in between these two is the merge so me boost is a system that's designed to work on top of uh proof-of-stake ethereum and so the the parties are involved in running this are all validator and staking providers um i think i saw a question in the chat about how far along we are so um we've we have a repository called um mv boost on the flashbots github repository which you can keep track of we currently have four milestones and we've completed the first one um the first milestone is already compatible with um with the kinsugi testnet that is launching in the next week or so um and so uh we we already have sort of the core um system running and now it's all about working on integrations with uh with the full range of uh of consensus clients um and and providing the tooling for um for for anyone to be able to run the system so we touched on um that centralization can never really be curtailed it can only be shifted to a different point in the system where maybe it produces fewer negative externalities and you know it's better sort of siloed in some way that we can control it um what do you personally see as the risk of having one dominant builder and what can be done in order to prevent that so i think this is a topic that obviously francesco has spent um a lot of time researching and and thinking about i think from a like market design perspective which is sort of my role in this the goal is to create a system in which there's as much competition as possible um the lowest possible barriers to entry for you know acting in any of these roles and the ability for for for new actors to come online and for the ability for users to switch away from from actors that aren't behaving in a correct way um this essentially i think is going to maximize uh the benefit that the users work it maximizes the security of the network and and is what's worth designing for in terms of what are like the biggest risks of builders um i think the biggest risk is probably an economic one right of having a sort of um economic actor within the system that's able to extract sort of systematic rents at the cost of users whereas with more competition maybe there would be a more user benefit in the long run what do you see as flashbot's role once we are in a permissionless pbs paradigm in a permissionless pbs paradigm um it's hard to say it's not something that we've committed to in one way or another um right now if we look at the nav guest system right we we operate a relay and we we write the software that that the miners run um in the mv boost system we're likely to be operating a builder and operating a relay and then uh be writing the software for for validators um likely that in a full pbs world we'd sort of revert to only operating a builder but because all of the sort of software development work for the validator side is baked directly into the clients and and they really doesn't exist anymore great thank you um i have no further questions i don't think there have been any uh questions related to your talk in the audience so um then i would say let's start the round table [Music] the last part of this roast thanks a lot steph yeah it's not really a roast the name is a bit misleading yeah so so what are we tabling for the round table yeah what are we doing so who's in the round table i think we're missing phil you mean i guess ultimately like you can just start in anyone who's in the round table is in the round table right yeah that's a good point let's just allow anyone to join so this is the time for audience questions so any anything that hasn't been answered um so far um or you thought you don't you didn't get a satisfying answer we didn't see your question or you have any more general question about mev um and pbs then now is the time to ask um in absence of any questions for now let me just um start with the first question um so vitalik how do we convince the public um that you know a complex system like pbs actually works and um can can serve its goal and it's just not some [Music] extractive system that we put on top of ethereum um yeah i think it's it's definitely a challenge um like the the fact that the economics of this of of the system are like basically becoming more complicated and even if we have fancy arguments for why we believe why we believe that the equilibrium is still one that preserves all of the things that are good and true and beautiful about blockchains that like it's harder it gets harder for people to essentially tell that apart from technobabble um the yeah i guess the things that we can do on the margin are again one is um i'm obviously just doing i'm just doing a better job of explaining the concepts um and doing a yeah uh just a better job of actually of communicating the the facts that they're that like here these are the goals that that we are that we are all all um working toward and that there is this large that there is this large community of researchers that you know like actually is uh interested in i mean interested in making sure all um all of these uh goals are satisfied um and uh that um you know like there isn't uh some some kind of conspiracy to um to centralize if um if you're in extraction or whatever um actually like i it is harder to like it is i think hard to get far beyond that point right now especially because we're not quite yet at the stage where all of the experts are convinced even are convinced that there's like some particular version of of pbs that accomplishes everything that people are looking for um i don't know i don't i don't really have much yeah i don't really have anything to say that's like much much wiser than like just uh you know try harder at talking about it more and explaining everything that's going on in clearer ways so i think one thing that will help a lot is the transparency that the this new market provides like the the block uh the block market basically so we'll be able to quantify at least to an external observer kind of how much mub there is um and i guess this transparency could get even better in the sense that we can even you know in the context of mavs moving make this a an on-chain oracle but that's kind of a side note and then what we can do is we can kind of you know try and see where all this mev goes and i think to a large extent what will be extracted will just go to to the validators and the fact that it goes to the validators is ultimately you know a very good thing because it means that we're going to have more validators more security for ethereum um and then you know that that then leads to more more economic uh utility for the whole platform yeah maybe i'll also jump in um and say that i think there's a few other tax that we can take uh in addition to this data providing transparency that'll help the community a lot one of them is extending this transparency work we've been doing on ethan that we're talking about here to other chains um and that's something that we're going to have more information about soon stay tuned on that um and another related research effort is coming up with a theory of l1 design um and mev informed l1 design um and how muv manifests on various l1s that's consistent with this data we're showing people and i think if we do that it'll it'll really help people understand the design trade-offs a lot better than they do now i think another aspect is also just reducing the extraction at the source i mean from the point of view of the public as a user i mean right now people are really complaining about the high fees if in the future they feel like they have very low fees and they're not getting a front run every time they make you know a trade on uni swap then you know maybe they don't need to know how it all works in the background because they can feel that as a user they're not getting exploited i agree i think we need to have a concerted effort to educate users on fairness and like the mev was in some way intended to start that conversation and i think the l ones can do a lot to educate people but also the dapps can do a lot to educate their users about their specific data and how their dap is affected that's a good um that's a good time for my next question one of the best ways to prevent the centralization that's coming from mev extraction is to minimize the amount of muv that is actually there for the taking um over the last six months i would say a lot more people in this community in this industry have become aware of the problem and users have changed their behavior whether it be using private relays or just using protocols that are more mvv aware and um also dev designers are now thinking about mev basically um from day 0 and building md protection into their protocols how satisfied are you or how are you thinking about the progress um being made there are you satisfied with the pace that we are going at um do you think there are any lower hanging fruits that applications and users are not thinking about and yeah what are your general thoughts on this anyone want to take a step i'm honestly pretty satisfied with the way all of that side is going i think uh all of the large dapps that have mev have manifested uh kind of the the relevant problems because of the amount of usage they've seen and have been thinking about this pretty critically a lot of them are engaging with us a lot of them are engaging publicly on twitter i expect the next one to three years will be a pretty big time for kind of dap dap design and figuring out how to tackle mev and also how to educate users but i do think it's kind of happening and enough catalyst uh enough catalyzing has basically gone off in this in this space that i think is pretty much inevitable that they will they will kind of educate users and they will have to address these issues yeah i think the yeah the mainstreaming of uh unislapa front-running protection has definitely also done a lot of good in that regard i mean if we take the long term and we and we zoom out i guess um you know the the searchers are inherently decentralized the users also the dapps as well like the main point of centralization will be will be the builders um and i think there's you know maybe like somewhat advanced strategies out there to to reduce the power that they have though so for example if the um the bundles have some sort of access list uh which says okay i'm i'm i'm doing kind of unisoft arbitrage and another bundle does you know something else then um maybe they could be trustlessly you know packed into a block without necessarily having to to trust an actual builder so that could be done in the context of an npc for example like these very simple npcs that just look at the access list and then build a block from that yeah i can i think uh like especially if the best mev opportunities like end up coming from like these uh specialized searcher environments then like that by itself will just uh create pressure to for builders to internally create this um searcher um like these that sgx based or whatever um or whatever based designs that basically protect the creature the the free trade uh private privacy of the searchers and if that happens then like we'll just get censorship resistance uh back in a different way because like everything that's provided by searchers will be encrypted before it gets revealed and one thing i'm a little bit worried about is this idea of deep packing of bundles because like the the naive way of putting several bundles in a block is just to kind of concatenate them but what if you have an even more sophisticated strategy where you inspect inside the bundles and then you you kind of you know reorganize the transactions and then set things in such a way that you you're really optimal i mean one one simple thing you can do for example is that you know every transaction has like this minimum gas cost of 21 000 gas in there so if you can pack everything in one big transaction then you you're doing better and then that that starts to become very sophisticated and brings back centralization at the block builder stage yeah i think it's just i mean as vitalik said as well i think it's inevitable that there would be centralization in some part of the stack right um maybe it's better for it to be in the block builder market but i mean definitely i think that's what i also i was talking about with some people in the audience and why the presentations were going on but that um being a blog builder is not easy there are a lot of unique challenges in doing good job at that and um one of them is definitely you know getting all the bundles and getting all the transactions but the second one is having you know a good algorithm and a good system for merging them together and then on top of that having a good way to get them to miners in the shortest possible amount of time and none of this is really stuff that you know searchers are doing right now i think this is like a whole new class of specialized like of a special highly specialized actor in the system and i think it's quite likely that we are going to see um a very big amount of centralization in that area well we both wanted to bring up tangents i guess um no the the the tangent time wanted to bring up was uh like what would mempools look like in this uh um in this kind of world right because uh like builders like if users sends their transactions so they're only visible to some people and not others then that could also be a source of winning builder advantage um so i wanted to get other people's opinions on like whether like how to i guess deal with that mitigate that or like handle it in whatever way okay i can take a step at it i think that transactions i think i'm going to predict the death of the public mempool um so i think that the biggest ingredient actually for being a good block builder is having access to transactions that others don't have other builders and so if we think the start to its logical conclusion then i think it's quite possible that builders are going to start paying users for their transactions i guess one um counter argument there is like let's say i'm trying to do like i want to send a transaction that is complete that is just obviously not anything vulnerable right so like let's say for example like i'm just uh you know using eth to pay for a proverbial coffee um then what is uh the like i it seems like it's in my interest to wants to uh distribute that transaction uh to like everyone right because like if like and it would we wanted i think we want an outcome where that transaction gets distributed to everyone right because if it doesn't then like it's just going to end up needlessly getting delayed um so like what would my incentive be as a user to not wan broadcast that transaction through a system that gives it to everyone um and if like and if the answer is or the builder will pay for it then like what is the builder's incentive to pay for it right they wouldn't pay you any more for it than you would have to pay in a public mempool in this case yeah so for transactions that are not med relevant i totally agree it's just for those where arguably um there's not an efficient efficient bidding process going on right now where users are overpaying yeah seems fair any other takes on the future of memphis well i mean one thing that i'm kind of excited about um pbs enabling is it allows off chain experimentation in alternative memos um so like probably the most famous example of an alternative mempool now is uh erc-4337 um and so like um ecco and abstraction like where basically yeah you do it without requiring protocol changes by having users send user operation objects um and those objects would get broadcasted around a dedicated mempool and then you would have builders uh uh gather up these objects and then um package them up into a single transaction that uh wraps um that wraps around all of them um but then like that's only one example of what you can do with uh golden and memphis right one just to give a couple more examples um one really powerful one is uh bls aggregation for validity um so like let's say um user operations would have bls signatures um and then those bls signatures could get aggregated um and uh you would like instead of uh every single user operation having a separate one you would have like the entire bundle would be able to have a one single uh 48 byte bls aggregate and so you would save costs but that would require like another custom algorithm for actually ever getting them together um another really interesting one that i think is going to be very important long term is uh snark aggregation like basically recursive stark aggregation for rollups and so the use case here is like imagine you have five different zk roll ups but they don't want to pay the 500 000 to 5 million gas overhead for submitting their proofs then you could imagine a system where there is uh one um [Music] single snark that goes on chain and that single start basically just proves over the yes narcs of all of the roll-ups um and so we basically have this on this off-chain process making a proof of all the proofs um and that proof goes on chain and then the roll-up contracts know the records nodes recognize the that proof of a proof um in place of a regular proof and so you get to submit bundles for like all the zk roll ups paying the uh 500 000 gas uh zika snark attack so once instead of paying it many times right so there's a lot of these uh situations where you get benefits out of just different kinds of off-chain aggregation and uh one of the beautiful things of dbs is that the the mempools that do this option aggregation can get developed and refined like just separately and over time without actually needing to have a to have vertical hard forks for it so on the topic of the the death of the public mempool i for mav relevant transactions i would agree for like in in the in the medium term but maybe not in the long term and and the reason is that there's this uh this kind of this cute trick where you can transform a a private mev transaction into a public one and it involved like in the best case you would use kind of something called witness encryption and so the idea is that you have a message which you encrypt and it kind of auto magically decrypts itself as soon as it's included on the chain um now there's kind of things which are not as powerful as witness encryption because that's a very you know strong cryptographic primitive things like um threshold decryption or time lock encryption are kind of substitute for that which is well allows us to to provide privacy for the bendpool and then have a public transactions once these transactions are on chain you know i would argue that this doesn't solve the problem um for the user because the only the problem isn't just privacy um it's not like just your transaction not getting involved um not getting included um with pre-trade privacy but also you overpaying for the transaction i think that's arguably the even bigger problem and um so this is another problem that is solved by um [Music] by three trade privacy in my opinion because in theory if a transaction can be um has some muv value let's say um it's a trade that can be background in the protocol and this transaction has a financial value that if you're encrypting it you're giving the value away even though you don't have to so um if you allow someone if you give it to someone in private and allow that that person to bundle it with the background then this would allow you to push lower the price of your transaction or even make it negative so that's what i meant by you can get builders to pay for your insurance pay you for your transaction so basically are you saying that um you know a user is making a sub-optimal transaction and he could he could get paid for having his sub optimal transaction kind of corrected yes exactly yeah exactly i mean isn't the solution just for that builder to just correct it himself or use a service that does that on his behalf that's what they are doing right so you could use quote unquote you could use a section right but i guess that that's not mutually exclusive with a public mempool like you could you could find someone who will you know correct your transaction and then you concatenate these two transactions the original and the correction you encrypt it put it in the mempool and then it gets decrypted yeah possibly i don't know but in this case the transaction has already been altered so i think that's where the line blurs a little bit between private and public memphis so we don't have to go deeper than that hmm um if we have no further thoughts on the memphis i would have a question um for the group again do you think that this pbs research that's happening right now has any implications for the layer 2 systems like rollups i can take this briefly i think yeah definitely i think ultimately every chain is going to need to handle the same mev problems they're fundamental to designing these permissionless consensus protocols especially if you want a relatively wide distribution amongst your validator set um and so that includes l2s that includes side chains that includes um multi-chain chains that includes any kind of distributed consensus abstraction that's handling value and i expect one of the things i think pbs is trying to do on ethe is to iterate on sort of a community standard for how to tackle mev in these systems and start start producing data on that standard so i expect some l2s or other chains may adopt similar things or some of them may experiment with different trade-offs which is also useful because then we can we can gather data on these trade-offs and use them to improve all systems so i guess my take is that uh layer two such as roll up basically you know extract the mev as it were take it away from layer one and give it to the sequences at layer layer two and so in that sense there's kind of a little bit of a incentive misalignment between the layer one uh and the layer two and i think that's fine kind of in in the medium term because these roll-ups really are providing a you know a very extremely valuable service but i think in the in the very long run um there is an opportunity to kind of enshrine the notion of of a roll-up in the shot so basic for example providing execution on shards and kind of you know bringing back this this muv and giving it to the to the validators as opposed to it leaving the system and thereby making ethereum kind of a stronger from an economic security standpoint um so optimism is one of the systems that has a rather unique approach to mev so they want to auction they want to option off the right to run the centralized sequencer who can extract all the mev and then i think the plan is to create a public goods funding mechanism so you use the proceeds from that sale in order to you know fund it back into the general um [Music] ovm ecosystem do you think that this approach has any chance compared to a system where the money is returned to the user who caused it i mean i guess it's not completely mutually exclusive right because there's there's some types of mov which are triggered by users and they could get a you know a refund but there's some kind of mev which is just out there and latent and which is unavoidable and then that could go to public funding or it could go back to the to the layer one and reinforce the economic security of ethereum yeah i also have seen optimism tweet that they've maybe considered redesigning that uh approach and allowing people to select different sequencing protocols possibly fair ordering protocols as well so i'm not sure exactly what their latest plan is i don't think they've put anything out there but i do agree with the general sentiment that yeah there will be uh latent mvvs on the roll-ups and they will need some approach for capturing it and distributing it either to their validators in which case you actually don't want it to be excessive excessively large for security um or find some other way to capture it through the protocol and i think that's actually one of the interesting challenges maybe i don't know if we want to discuss it now um but just something that that i thought about while i was listening to all the talks um one of the goals that that's kind of been mentioned and that we've been talking about since the early flashbacks roasts is uh nav smoothing um and i think it's an interesting idea but there's also a question of like how to actually quantify uh mev and how to prevent kind of side channel based extraction or extraction um outside the mechanism especially in cases where there's potentially like a lot of value at stake black swan events or other kind of long tails so yeah i think that's an open research question um uh but it speaks to the same challenge those protocols will have capturing mevs like how do you even know what mev is and i think that is something we're doing active research on you know i would have another question um to you guys about l2 um to stick with that i think one of the most interesting things we have seen in like the last couple of months in the layer two space is um in zk roll ups um for users to give users the ability to decide um within the same roll up where their data what where they want their data to be stored right whether they want it to be stored on ethereum or they may have better data availability guarantees or stored by some on some other blockchain or even by some centralized provider and users with different data ability data availability guarantees can coexist in the same state and it was for me quite mind-blowing to see that this is possible so do you think that this kind of scheme where it could exist also in the sequencing space so basically um the idea here would be that you can opt into different sequencing approaches in the same blockchain maybe that question is a bit too far-fetched i mean maybe you can clarify what you mean by by this this having the optionality to choose your sequencing i'm not sure myself i just wanted to try to be creative and see if you if it if it gives you guys any ideas i don't i don't have any anything concrete in mind that i wanted to to talk about hmm like like just uh the general idea that um like layer two protocols get benefits by like basically yeah deciding their own um like deciding by themselves how a transaction sequencing works instead of like just depending on whatever ethereum provides um i guess like ultimately they do have incentives too right because uh like being able to decide sequencing does give you um mev revenue and if you understand them if you auction off mbp revenue that can like that can be direct that can be directed toward things as a source of funding um you know if any of these projects have tokens then that could be used to support the token and so forth um so there's uh incentives for projects to try to kind of grab up the the sequencing power um there is also um there are also things that they can provide that are of value to users if they control sequencing right because uh i think one of the things that i expect uh like if the ethereum layer one does not provide and uh that's some of the more centralized chains you provide and that i expect what your twos are going to be trying to figure out how to close the gap in providing is uh 500 millisecond block times um and you know if you're a roll up then you do have the ability to basically have a sequence or some committee of sequencers that give free confirmations um which is uh and definitely something that uh users are gonna find useful like it does also um ironically enough uh reduce the the quantity of energy that you can extract but you know even um even still it's uh [Music] sorry about my background grade like it's uh it is something that's different from just accepting an ethereum default secret thing that a deaf project would want to do yeah i agree with all that i would maybe even take it further and say that like from a pure ux standpoint if we're just going from mainstream users and the end state of crypto is to to be an under the hood primitive in a lot of applications they're probably a lot are a lot of like application specific um advantages to choosing specific sequencing algorithms that are tailored to certain applications and i think fast block times could be one on a more centralized kind of chain but there could be other trade-offs certain exchange apps or certain liquidation apps or whatever else certain games want to make i think that's kind of the direction cosmos has been thinking about in at least the conversations i've had with them around mev is that that could be one one place for other chains and potentially l2s to also specialize um if you believe that you kind of want the best you actually kind of seems natural that this general purpose uh sequencing algorithm won't be won't be the best for all applications especially because as a base layer needs to have certain properties right and those properties are for example geographic distribution of nodes for resilience um solo validator ability for kind of decentralization criteria and things like that and those requirements just might not be as strict or might not be there at all and there may be different trade-offs that are better okay i don't have any more questions for you guys so unless there are any more audience questions coming in in the next minute i think we can um wrap up this event i think um i just heard phil that you might have an announcement to make um i guess i don't know alex are you there do you want to make the announcement if you if you interrupt in the next 10 seconds i would prefer you do it since you're the lead author but otherwise i'll do it he said go ahead oh no okay great um so yeah very exciting news out of flashbots research um we've been doing both internal in-house and external research for a long time as a lot of you guys know we've put on many research events had a lot of kind of interesting talks and whiteboard conversations that are available on our github we've also published several research roadmaps calls for funding and things like that so one exciting thing i have to announce today is that flashbot's research is releasing its first paper um and uh it is in my opinion very much worth the read by everyone on this call it's a work in progress paper so don't expect it to be kind of peer-reviewed uh academic kind of quality uh but it is at the phase where we're excited to share it with uh with the community and with all of you and see your thoughts and your feedback um the paper is about cross domain med so we take a look at formalizing med in a multi-chain multi-domain world this includes things like layer twos and centralized exchanges um and we study kind of the implications and and the the formalization behind this new med game that's emerging so we expect this research to inform the basis of a lot of our events and a lot of our or our org decisions going forward uh mostly we just want to have conversations with people who are interested in the research so the author emails are listed on the paper if you want to access the paper right now sorry i skipped that part there is a link in the agenda under i believe the extra credit heading uh it's the first link there please wait to tweet that tweet about it we're gonna have a twitter thread circulating momentarily uh with alex uh kind of tweeting about this paper so i encourage you guys to amplify that because i think it's really something that's important to discuss and that's going to be relevant to all dapps to all l1's uh to all these kinds of systems going forward and i'm really excited to to kind of start the conversation as original work coming out of flashbot's research over the last six months to a year really that we've been doing um so that that's all for that another announcement is um i'm not sure whether we made the final call but i believe also today uh we will be unveiling the flashbots writings website um so stay tuned on twitter for that either alejo's twitter or i will i'll amplify that as well so we're going to be releasing a central hub for flashbots writing pieces that's going to include our research it's going to include comments on things like public proposals about pbs and other topics of this call and will include things like simpler versions of the paper as well that can be circulated to a broader audience so we're really excited to start writing on the site uh it's just a github repo with markdown files so if you'd like to contribute to flashboss research to flashbots writing we are an open source hacker collective style organization and we're happy to talk about all kinds of contributions uh whether it's from anons whether it's you know kind of a consulting part-time engagement with with the group whether it's just open source any medium if you're interested in collaborating on open source mev research please do reach out and please do check out those two resources as they come out the cross domain paper and the writings website the writings website is also going to have an inaugural post that's very exciting that's going to talk about the med definition itself and a lot of confusion recently about what is arbitrage what is mev what is the difference between these things that will also be on the website as well as talking about the the generalization of mev into maximal extractable value and why the definition is still meaningful for reasoning about consensus systems and for formalizing these games that we're talking about um so very excited to have more conversations uh on all of that i think i'm gonna hand it back to fasuno i see a bunch of messages in the chat i missed so if there are any questions or anything like that happy to address them but yeah please keep an eye out for those two things the cross domain paper um and the writings website with its inaugural post about maximal extractable value and thanks all for attending it's been really good to have a roast i know it's been a while we've been very heads down working on a lot of things that we're very excited to share with you and i'm very happy to have these community events again so thank you everyone for being here and for contributing positively to this yeah thanks a lot for those are um very exciting announcements and um yeah should all make sure to um read the papers once they have been tweeted um [Music] so do we want to make any closing statements um does anyone have anything more to say so there are definitely no more questions from the audience if not then i would be happy to wrap it up no statements from you okay i think um i hope this rose has sort of given you an idea of what pbs is and why it's very important to bring it into the protocol instead of allowing it to bloom outside the protocol where it would happen anyway but with much more trust requirements from the participants having said that thank you um to all the speakers thank you to vitalik francesco and steph and thanks to tina and alex and dan for organizing um and yeah until next time you 