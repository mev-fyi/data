yeah yeah so hello everyone i'm surprise um developer at marlin and today i'll be discussing the case the brief of mv on low fee chains uh with focus on polygon pos chain so uh just a general outline of the presentation what i'll be touching upon as topics in this format now first i think i'll be discussing on why we chose to analyze and help facilitate maybe extraction on polygon pos chain and what was our motivation behind choice um also next comes a few stats we have uh regarding mav on polygon pos chain also we will be discussing a few modifications that we did um to maybe inspect pi to help with our analysis of mmb on hydro throughput change uh for us that's polygon um i mean our modification of bohr client for uh polygon akin to maybe get in ethereum to facilitate mav extraction will also be discussed um then we will touch upon a few concerns that we have seen in uh polygon with respect to the adoption of mav4 uh we further also discuss the steps that we are undertaking to alleviate all these concerns and finally i'll wrap up with uh how we think we'll be going forward uh and the next steps so the motivation of trying to solve the mvp problem analysis and facilitating the extraction of mav on polygon pure chain uh was primarily uh because there was a large d5 ecosystem currently standing strong on polygon so polygon pos has currently over 3000 d apps and around u.s dollar 5.5 billion logged in all of these endeavors and of course so in fact a lot of well-known d5 platforms such as ave uh quick swap balancer draw the direct parallels from ethereum counterparts and polygon previous is also evm compatible so bot writers and searchers would have easier time putting their systems onto polygon if they have already invested that time building on ethereum so how big is it uh we know that out of all the mav that's acceptable a fraction of it is actually extracted and yet another subset of uh that is identified by various method of analyzing transactions so flashbots methods uh implemented in mvb inspect pi and earlier the rest version of software also showed somewhere around 897 million us dollar worth of maybe extracted over a period of two years from january 2020 to till now so running a similar i'll be modified version of the same system on polygon yielded us somewhere around 37 million dollar worth of meb uh since january 2021 uh till october 2021 and that only includes a uniform v2 based swap based arbitrages so also tbl and polygon primarily grew uh in may 2021 as alex showed so the 37 million is far underestimation of mvp that's been there and extracted on polygon so here's an example of what blocks and things look like on on polygon scan here we can see an example of these transactions on polygon pos all of which technically spam that stain in order to extract med at least as of now since polygon gas v is quite low successful extraction more than compensate for any reverted to transactions or any unsuccessful mev extraction attempts so prima facie it's evident that spamming happens on polygon and race to extract mvp so we can ask ourselves how big is this problem really um and how big is this problem really for platform as a whole so we did some analysis to find numbers pertaining to this for a lower bound we try to classify the transactions into whether they have interacted with contracts which we know for certain have at least one successful uh chance of extracting the mav using arbitrages over a span of hundred thousand blocks and that's a lower bound and that is around forty percent of the transactions that we see in in this hundred thousand block span on the upper and upper end we try to isolate accounts that have shown successful or unsuccessful transactions in at least three consecutive blocks means that they are spammers and these uh totaled up to um somewhere around 57 so hence we can see these numbers 40 to 57 percent that's a huge spamming problem on polygon pos chain resulting just from mvp extraction attempts so a few uh statistics that we want to share with you uh regarding mav on polygon on average we see at least one twenty thousand years dollar worth of mlb extracted every day one of these images have been already shown to you uh from january 2021 to october 2020 uh october 2021 we see a cumulative extraction of over 37 million us dollars and that's just for units for me to contract sub-based arbitrage it does not include even the sophisticated methods like flash loans sandwiches flash swaps or use of other d5 products like balancer so all of this data is extracted from our event based arbitrage detection system which is a modification on top of mvb inspect file so let's have a closer look on how we modified the mav analysis system to get these stats on polygon so mvp inspect pi is a tool written by the flash robot team thank you thanks to them um it helps us analyze the uh extent of meb post hoc using a blockchain mode so it's much more involved than the block diagram i'm showing here but and it can do much more than swaps and arbitrages liquidation etc etc but for the purposes of this discussion we will limit ourselves to the high level design of the inspector shown here at the core inspect uses arrogant or parity-based ethereum archive and it calls its tracing rpcs among other calls to retrieve the block releases and transaction receives to inject and then further classify using trace classifier and then classify the steps of the transactions into swaps liquidation transfers etc and swaps are then used to find cycles between tokens and if positive amounts are seen after a cycle of swaps um then it's called out as an arbitrage so flash watch team have incorporated a few more changes to make this system even faster for example they have implemented a new rpc method on ethereum nodes to allow them to batch multiple blocks tracing requests into a single call resulting in a lower http overhead of request and response times and also every time the tracing is done they cache it into databases so that later on they do not have to do the tracing again uh when we wanted to use this system on polygon post we hit with a few problems uh polygon doesn't have a parity or arrogant implementation for it it's bore is go ethereum base um and the tracing of get is not compared compatible with parity traces on a side note a lot of evm compatible chains are quite similar um they only give one implementation of um such as these or parity for themselves like optimism gives only and we do not have choices uh whether we we should take a parity or git uh second polygon has a lot more transactions to analyze caching may just not be feasible as dbs tend to grow a lot bigger so optimizations aside the first course of action for us was to make mvps perspective by works somehow for polygon pos and the basic need was to uh translate these get traces to parity trace so by using uh gets called tracer we were able to write a translation layer for mvp inspect pi and that actually translated the get traces to biology traces and once this was possible the rest of the system need not change much so um this translation layer basically based on mvp inspector i worked on polygon for us it was able to detect arbitrage's etc liquidations etc however we faced a few practical problems while backfilling our data so we ran an experiment for ourselves the archive node was running on bare metal amd system and it was powered by 5950x cpu which is 16 core 32 thread machine and even on this system when the tracing was invoked all the hardware threats were fully pegged 100 and we can still only manage around 1.5 seconds worth of tracing per block uh when the polygon pos still itself has the block time of around two seconds so this resulted in a real issue for us if we wanted to get any kind of historical data from polygon for example if we wanted to get around even six months worth of data we had to wait four months just to extract it and if we wanted to add any another inspection algorithm uh since traces can't be stored in db because dbs themselves grow too huge we have to wait another four months for six months worth of data so we cannot really catch up to the head of the blockchain in that in that case however uh while the translation mechanism posed a practical problem uh for polygon pos chain in theory the system worked well so we saw a group of students at columbia university tried our um translation layer on optimism and since optimism is a relatively new system with little over 1 million transactions in the starting month the team was able to detect mvp extraction in excess of 40 000 usd in just one month that's november to december uh in 2021 for unisoft v3 like contract straps alone uh the nice thing about it is that all of these uh mev extraction uh arbitrages uh required the router for v3 units rp3 uh this is also a good example of uh to illustrate that the mev exists um and is there on other systems as well so in order to solve the practical issues of using the translation layer on polygon chain we started to look for other ways to reduce the computation load one way of doing this was to perhaps use events as bloom filter so such that only the transactions emitting a certain set of white listed events such as swap events think event transfer event are traced otherwise they are skipped we implemented this by modifying the code for both however the results were still not very promising we got a speed of around 30 going from 1.5 second per block to around 1.1 second per block in batch racing mode however this was still not good enough for a backfill so eventually uh then we thought what if we restricted the kind of swaps that we can detect as a startup and we forget about other kind of results like liquidations for the time being um can we then use events themselves which we were using for bloom filter uh as the data source for swaps and then detect arbitrages from them so if we concerned ourselves with only uniform v2 at least we can do so by using the statements it turned out plus a few each calls were required then this is also results uh in us not needing a large archive node anymore so we replace the tracing component of me in spec and implemented direct conversion of events to swaps um the results were quite dematic uh not only did the size of polygon node ready use uh we were also able to backfill the data for entire 2021 uh japan to october in just around 36 hours uh this is where our statistics stem from however as enunciated before this system has limitations the biggest one being if there are more complex mvp extraction techniques the component data of which may not be derived derivable from the even data the system does not really work well we are still working on it um let's move on to the next part of our presentation on how marlin attempts to facilitate extraction of mvp in fashion similar to how flashbot fits in ethereum ecosystem uh we modified both the evm compatible get-based component of a polygon pos node setup akin to mav gets we added support for bundles and brought forward the following features uh maybe both promotes the mempool transactions and bundles it receives from the relay for max profitability of validators such as can pay validators directly through uh the payments to coinbase addresses and our marlin private relay helps reduce a spam in bundles arriving at validated nodes by simulating it first and then transmitting it ahead along with this there is a nice thing about polygon pos chain that we were able to implement so since we know that the polygon post chain has a system of sprint that allows us to know the validators responsible uh for signing the blocks uh beforehand we can limit the recipients or recipient validators for bundles we receive on a relay at any given point in time so this increases the security of bundles and this is an additional feature that we have implemented and is part of mvp right now so with this i would like to discuss a few practical differences between maybe get for ethereum and maybe bore for polygon and how that shapes our trajectory uh trajectory going forward so ethereum has been around for a longer time in polygamy the miners on ethereum uh generally use a bit more sophisticated setups for mining uh with this for practical purposes a miner can run flashbots maybe get in more of a supplemental format while uh mining block centers reduce his or her dependence on mvv's so in this slide we can see one such setup conceptualized uh the miner runs two versions of geeth uh vanilla get 10 mm-heath and the candidate blocks generated by both these nodes are compared by a system before dispatching it for mining to the mining rate while this may look involved it is interesting node note that even if maybe fails in this format for any reason the miner system is not compromised and he or she does not lose the hash power and the hash power isn't sitting idle so the situation changes uh when we talk about pos genes like polygon because there is no longer a separation of candidate block versus block that's mined eventually so single node is responsible for signing the blocks hence the previous format of supplementing instances does not translate well into polygon pos and hence map bore needs to offer a lot more guarantees so we came across a few frequent concerns from validators who were interested in our system uh first of all they were afraid of losing rewards uh remember in ethereum uh supplemental setup there was no case where the hash power goes to waste however in since mvp bore can only be a single instance if it fails there's no signing and validators were afraid of losing rewards and eventually even their reputation in the network um also they wanted attestation from polygon uh foundation the proposition of replacing bohr with mevor is what leads to many asking for this the troubling part here is however that every future version of mbb board can't be can't be guaranteed a foundation attestation even if current version is tested and whether the mvv bore double signs while we made sure that the mav board only adds in a contained wave of on how more already works we understand why this concern arises and lastly unlike ethereum the private key of validator it's on the same system as bohr and is accessed by both so the participants hence also want some surety of not having bugs that will leak such sensitive information so we worked on a few mitigation things this leads us to think about a few medication steps to alleviate the concerns of the validators first of all we are running the locate test net for polygon that is incentivized to upon our own token so enterprising validators can try maybe more without risk of losing matic or block rewards and we also want to touch upon an important design decision that we made sure to respect that we didn't change heimdal code that is responsible for us taking rewards only the bore layer is changed with mdb4 um going forward uh with all these um already done we believe this is how we should be moving forward we should continue uh improving our fork of mev inspect buy and unravel more mov as we go forward we are also bootstrapping me both front by running our own large validator node based on mme board with a large enough stake on polygon mainnet so we are already working closely with maticops of validated on polygon post chain to make this a reality and on top of it we already have 10 million matic tokens committed to this setup once this is done our rpc will soon be functional for people to submit bundles on our test network is open we have welcome we welcome the validators on polygon to join us and run mere four and we'll explore uh avenues to analyze and support mvp extraction on other platforms bse phantom etc but that's a long term goal for us since once we have experience building the same on polygon so that's all from my side that's how i would like to conclude my presentation we at marlin would love to have you come to our discord and say hi to us um these are the qr codes you can take the snap thank you all right thank you very much um as i said earlier we'll take questions at the end so thank you for your presentation that was 