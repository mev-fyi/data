[Music] um so thank you everyone for coming i think the purpose of this conversation is to talk about mvv and the interactions oh there's vitalik and interactions of it with the consensus layer and the design but before we start it might be worth going around the room and doing intros so chris you want to start thanks all i'm christopher i previously designed the ibc protocol for the cosmos project which has some interesting relevance to cross-domain mav and now i work on the nova protocols answer i'm uh i'm uh with quilt which is a small um ethereum core development team um with a consensus and lithium foundation and um i'm yeah basically just helped design kind of some of the iterations on it for ethereum mostly on the execution side actually but of course mebs kind of permeates everything so yeah a lot to take into account there as well i'm metallic i guess i hang out and give presentations from time to time and i'm justin from different foundation research nice so the way that we can structure this conversation and feel free to rearrange as you wish is that we can talk about first the effects of mv and the design space around consensus for how mvv is created and then we can talk about mitigations at the consensus layer and then about where things are going so maybe to start it would be worth hearing how does muv affect your day-to-day when working on consensus related research or client design or implementation may be starting with questions one of the questions for me is someone working on say a protocol that is not ethereum is are there interesting points in the design space that we can explore that are different that would provide useful experimental data for future protocol designers the honest answer after like the last in the morning of talks and like last few days for me is that i'm not sure if there are your presentation justin on like combining uh different steps of slots to prevent certain kinds of attacks seems to me to be very similar to like the discussions we're having around pipelining threshold decryption and tendermint and i'm starting to wonder if some of these constraints are really like information theoretic uh but even so there might be some cryptographic choices or like choices on the mechanisms of implementation especially if they're cryptonomic or cryptoeconomic instead of cryptographic which change equilibria of how like these systems would work in practice and how centralized or decentralized they might be so one question for me is just are there like interesting different points in the design space can we predict equilibria just by looking at those points without actually building the systems or do we have to build the systems and run them in production for a while in order to see what happens and maybe as a meta point because we have a lot of questions to go through and maybe we'll have also questions from the audience let's try to keep answers one two minutes sure so um for me i think day to day it's um probably a little bit less than for most other people here um it's just uh like whenever whenever there are topics like for example right now we're looking into like a resource pricing on ethereum like multi-dimensional 559 mechanisms and they're just every time you basically have anything that's even remotely touches like the incentive layer on ethereum you always have like these interactions and so you just always have to make sure that at the end of the day whatever systems you design and basically stay incentive compatible um so i think that's primarily where yeah it touches what i'm doing yeah and i think i definitely agree with all that like mev it does just touch many parts of the core of uh ethereum protocol design i mean and even uh other layers of the ethereum ecosystem i'm red so like it it affects um you know how you think about you know resource pricing is one example i mean in that case kind of both positively and negatively right so like one example there is the the possibility of proposer builder separation and specialized builders like makes it easier to like justify um you know including and getting the benefits of multi-dimensional pricing for example um so that um and then you know thinking about things like the structure of um you know when proposals happen like how the cycle of one slot in the next slot works like you have to think about like is that incentive compatible and how do those um incentives um interact with the incentives to like get transactions included or or get an mvp for yourself i guess for me on the day-to-day um it's just very intellectually stimulating because it's an evolving story and it forces you to to rethink the the fundamentals and the the endgame um i guess it's it's also a forcing function to kind of prioritize things so for example you know this mev will is incentivizing people to attack ethereum um post-merge you know because you know proposals are are public um and so one of the things that i've been you know trying to prioritize is the secret leader election um to at least have ready in our back pocket if indeed um the beacon chain does does get unstable maybe just to verify um um say i i think because you said intellectually stimulating i think it's really interesting that i think before mev we usually whenever we kind of made design sources on ethereum they were purely kind of limited by whatever is technically possible and then we basically try to make the optimal choice within that scope and now for the first time we basically have this economic like constrained right and basically the the design space is is very much narrowed now we're basically like we have to also take into account all the kind of incentive compatibility and i think it's actually it really is very healthy for us to physically be forced into this because now like as we're talking about also with other things like liquid staking and whatnot like they're more and more of these more economic incentive kind of forcing functions that narrow our design space and so it's it's really kind of less and less that it's really bound by just what's technically possible but yeah so this is really interesting so if maybe act as a feedback loop like a force back into the consensus layer design how should somebody design and consensus protocols be thinking about where mv can manifest and what should they do about that and here's here maybe a summary from justin's previous talk because some people were not here on how you're thinking about it and then i'm also curious to hear for non-ethereum chains right um so i guess mavs a bit like flash loans right they like they help um exhibit vulnerabilities uh leaks in your system and i guess it's just a muscle you need to train when you look at a design like try and try and think think mev um and you know i guess i guess the the the tldr of my talk is like you know um for all the known mev leaks there is cryptography that can solve it so the heuristic is we're going to make it with cryptography because every time we find a leak we can patch it so yeah that's the tldr how does that change outside of ethereum i think maybe one way it changes is more practical or engineering wise rather than theoretical i'm not actually sure if it changes in like the theoretical information way in a practical way it's maybe easier to use certain primitives because you can change more of the system for so for example in using threshold decryption where we also want guaranteed decryption as you're talking about we can like have threshold decryption shares allocated exactly proportional to stake among tendermint validators and we can in line basically or pipeline the threshold decryption into the stages of voting so that you're always if you have the use like the usual uh liveness assumptions uh that you're making already you are guaranteed to be able to decrypt transactions so i'm not sure that that's like different in the asymmetric time goes to infinity way i think maybe it's different in the practical way and maybe it's easy to try easier to try some of these systems out and provide data on just like what other economic layers form and practice above them and if that impacts the consensus design constraints so we've heard of the term conservation of mav that no matter what you do the mav it kind of moves around the stack so i wonder just to play devil's advocate is it possible that while in the process of patching the system introducing new mechanisms to combat mev form a you introduce mvv in form b and that is harder to mitigate and i have some ideas around that but don't want to influence the group i don't think that's uh that's necessarily true like there definitely are cases where you have different mechanisms to do the same thing and some of them like actually do just like have as much mev or how much more mv than others i'm like auctions are definitely you know one good example of this i mean even just like one very trivial example is like how large is the liquidation bounty on like some collateralized thing right like if you set it to twenty percent instead of ten percent you've created twice as much any v and so there's definitely some choices where like you're basically deciding you know are you uh giving me to the miners or are you capturing a movie to some other mechanism which is still sometimes a really important thing to do i mean but then there's also some cases where you actually can't have more of it or less of it um all right this covers i think a bit like on the design space so maybe let's switch over to mitigations so again we can use multiple techniques advise levers of the stack either at the application layer like cow swap or the rpc layer like flashbots or the protocol layer all the stuff that justin has said so the question is how do we design mechanisms that are friendly to mev mitigation and how should we think about that are there some desired properties that we're looking for here i mean for me one of the changes to the design philosophy that seems to emerge when we consider mev is that we have to think a lot about returns to sophistication and if sophisticated actors can like make more from the system especially if they can make nonlinearly more than we're faced with this kind of centralizing force and i think that's a different model than we've been using previously like often the sort of rational actor models treat computation as this like thing that just happens and you can do infinite amounts of it and that is fine when the amount of computation is like kind of small or fixed size so it's a reasonable first order approximation but in mev land where we're dealing with like very complex you know spaces of computation or computational search space i think that assumption no longer holds and we probably we have to like rethink some of our protocol design on those grounds yeah maybe that was too abstract and answered i mean i can put a move into two buckets there's the the fundamental stuff uh and then the non-fundamental stuff and basically the non-fundamental stuff is all everything that can be encrypted to prevent front running and i think what will happen is that as soon as i think you know 95 of transactions will end up being encrypted and non-front-runnable and that will make up the bulk of the the block and then at the very top the five percent of the the transactions are going to be like highly specialized and doing all the arbitrage and cleaning up all the all the fundamental uh mev and it won't be encrypted and it will just be produced basically by the supply chain that was mentioned um and and the mav will be split um you know to whoever you know does the actual work or is in the position of power to extract the interview i'm going to disagree with the 95 figure um i think i mean very possibly under 50. um basically i just think that the like we often forget that the majority of uh stuff that people do on chains isn't like fancy at times hyper time sensitive defy stuff it's like i want to send you some money um or you know i want to make a cdp like i want to update an ems name and just all sorts of like just tiny random stuff um and for those things like you don't really care if you get front run um and you actually want to broadcast your transaction to as many people as possible like even if your wallet starts um you know doing exclusive order flow like you want to get a better wallet uh because uh you're like you want to maximize the chance that your transaction will get included within the next lot because that's the most convenient for you now there are also other types of transactions that don't have that property but i think you know both categories exist and both are large right but i guess this category of transactions don't have v to start with so yeah and the other thing is that it's kind of good practice maybe if they were to opt into this encryption scheme because then it provides more you know maybe more privacy for for the other set of transactions i don't know like on the other hand there also you know risks entrenching particular second layer things that you just um you know have to be part of if you want to be a builder or whatever yeah but i'm optimistic that all this all this other infrastructure will be eventually you know public good stuff is there any interesting design space to your talk point of the talk earlier in between like no smart contracts bitcoin land in full programmability ethereum land where you have something like uh protocol enshrined amm or other kinds of certain mev relevant economic infrastructure but don't allow full programmability and would that change the distribution year or no i mean i guess like in principle you know you totally can create like you don't even need to forbid other stuff it's like for every category of stuff that people ends up doing you just make a protocol enshrined in a version and slightly subsidize it right and everyone uses it then uh but uh i'm not sure that that is the right approach like i feel like the approach of layer separation is probably the better approach for sort of stuff like make it possible but in some way that's somehow one step insulated from the sensitive parts of the ecosystem okay then maybe like a related question of course um we have this vision now with it where basically the ethereum base layer becomes more just like a layer two settlement layer and so is there any any case to be made to say like maybe in the long run you want our kind of execution environment to be more of like a specialized virtual machine that maybe is in in a sense more restricted and more controllable um for us the i guess the main challenge there is like the politics of breaking backwards compatibility right because like i've been yelling about banning self-destruct for like two years and it's still um you know it's gonna happen but it's you know it's a battle um and sure but we could turn the current chain at some point into like a roll up or something right yeah yeah i guess yeah i mean my position on this is that we want to go with full programmability but the the application layer won't be able to provide everything fully trustless and so maybe there's going to be a little delta where we want to kind of enshrine with additional you know consensus layer infrastructure like i mean this may be a bad example because you're very contentious but you know potentially if we can't do like fully trustless oracles at layer two maybe we should consider doing them at layer one so there's a lot of shiny things that we're talking about and this can mean frequently lack of focus so i'm curious to hear from each one of you what do you think is the single most important thing that needs to be done yesterday on ethereum or anova to achieve ssl for me why well as i mentioned again if you can break out the acronym yeah basically the like secret leader election the the most important word is secret so what we have on the beacon chain today is that proposers are known in advance and post-merge they will there will be a small period of time or maybe not so small period of time where proposals will still be known ahead of time and what you can do is that you can fairly easily map proposer pubkey identities to ip addresses so if you uh if you want if you if you know how to ddos ip addresses and that's not that's something a strip a script kitty can can do um then there's kind of two things that could potentially happen one is like some sort of malicious attacker who wants to spend i don't know a thousand dollars a day just disrupting ethereum could potentially disrupt um some maybe the home validators or things things like that but maybe more more worryingly is that there's going to be quite a lot of mev on a block by block basis you know on the order of a thousand dollars and there's this attack whereby if your proposer at slot n and you ddos the proposer n minus one you get to get the mev of slot n minus one so basically you're now doubling your mev at the cost of attacking your fellow you know validators um i don't expect most people to do that but you know i'm i am expecting like some kind of extractors to be doing it just in pushing back a bit on the the os point in general infrastructure providers not getting ddos you would say a reasonable person would say it's a solved problem with sentry nodes like improper like load balancing infrastructure so i wonder why specifically the fixation of the dos part well um yes you can have fancy networking setups and like this is the exchanges will have it you know the the pool operators will have it the bad thing here is that it's more difficult to do from home and i think the clients are starting to build out this infrastructure but you know it's possible that you need two internet connections as opposed to one um it's possible that you need to get vpns um and that that's gonna kind of add friction for for for home users and it's possible that if there are going to be attacks and this might be kind of a centralization vector where home validators kind of throw the towel and say i'm being attacked i'm just going to move to some exchange um so that i think one is one of the reasons why i'm prioritizing ssle is partly for the health of the network but also partly for the kind of the long-term decentralization make sense with alec what is the most important thing i don't know i think there's lots there's um a lot of important things and i think i'll probably just go back to the kind of way that i just that i described my own goal when i was making a presentation earlier um today which is basically just like protects the really important parts of layer one and that makes sure that they don't centralize as a result of any economies of scale that do exist at other layers of the stack so is that how is that solved what's the solution for that or the action item and you know action items are i mean one is uh can you continue research on them you know the stuff that we have already um and uh the other is to just i guess continue this sort of more open-ended brainstorm like i feel like there's that there's probably things other than um you know our current ideas are on like layer twos and separating out builders that should be explored as well can you unpack a bit the argument around why proposer builder separation is important and maybe talk a bit about cr lists yeah i mean basically proposal builder separation um it protects it it separates out the propulsion market from the builder market and so it makes sure that the economies of scale in the builder market don't end up spilling over onto the proposer market um and uh so proposers can still like continue to be a relatively dumb node it's just people installing a piece of software onto a fairly simple computer and running it even while builders become this kind of crazy game where everyone keeps optimizing lots of things um one of the challenges of uh that is like the risk that there is a monopoly builder um and monopoly builders uh courageously start censoring um and uh like if now i mean i think there is some protection against that censoring already because um you know if you censor even one transaction then the builder would basically have to like pay and or either pay or kind of lose an opportunity cost a sense an amount of ease equal to the gas cost of that transaction for pretty much every block um which is uh you know pretty a pretty high price but sometimes it's not enough um and so there's this idea of like adding explicit uh kind of further infrastructure to create like more channels in parallel uh through which a chain can force inclusion of transactions so a cross a censorship resistance let's say one example of this like basically proposers could just like create a list where they flag all the transactions that they see that seem to be worthy of being included um and then the next block by builder just like has to be has to actually record the transaction um or else that block is not like accepted by the fortress world yeah i think i'd largely agree like like go in a similar direction to what uh just sm metallic have been saying and i think kind of the way i think about it is like as i was saying earlier we have like now more more incentive based kind of um design space constraints and i think it's really important to figure out exactly what types of centralizations basically will be inevitable and then separately figure out what times of what types of decent like like centralization are unacceptable for us or like what types of decentralization we really really care about and want to retain and like make sure that how can we make sure that those two kind of things overlap and keep overlapping right and like i think right now for example we we seem to all try and be okay with something like pbs and still that i think there's also still quite a few things to be worked out to be sure that this would be actually be fine for the network and then on the validator side we really really really want to keep decentralization and it's also not yet clear that this is within the possible design space right um but they also like than other things right i think for example less sexy maybe because it's not like a current topic but like there's like i think right up from like even four five like four years ago already three years ago they're talking about how right now basically fog choice on ethereum is like we have like automatic rules and we have social consensus that can override this and then we have circle that basically chooses which fork actually uh honors usdc right and that would in in practice override social consensus on ethereum like in many scenarios just because on the other side d5 would collapse and the entire chain would crumble right and that's also like that's a completely separate example but it's it's another one we're basically like are we okay with this what other like how can we influence as a base chain is that something that's inevitable just in general right this is this whole topic of like how can we make sure that what will need to happen and what we really want to happen how can we keep those overlapping basically and like which technological solution do you think is the one that you're the most excited to spend all your productive time on i mean it's i don't i really don't think there's like a silver bullet like i think like every one of those problems has like a separate kind of design space a separate solution um so it's really important that we just make sure we we keep track of all of them and try really hard to solve all of them i guess it gets back a lot to my point around prioritization and focus but i'll take that um chris yeah i mean to me maybe seems like this sort of iterated game between the protocol designers and the people trying to exploit mev and i think it's good that we are playing this game and that both sides can iterate and that both sides like you know are not fighting each other tooth and nail but also understand that there is a game going on um and that only through like some progression there i think you know if there are rational actors with sophistication they will exploit the easiest opportunity and there's there's this information flow topology all the way from like some users you know submitting things to those transactions being settled and if we you know push things to l2s then sophisticated actors will go after l2s i have not thought enough about that problem to know whether it's like easier or harder or will have higher lower returns to sophistication it does push it to somebody else like it's not us so that's good but it's also perhaps concerning um yeah i think it's like another case where this is clear this iterated game thing is you know i completely agree that like proposer dos is a concerning problem in principle especially if you want home operated validators in practice and tendermint networks it's not a priority because like it's just not worth the cost of building up sophisticated systems to do it yet uh you know probably we can reason somewhat about when that might become a priority and like try to fix it then and that kind of you know iterated game modeling the actors maybe determines prioritization until we either converge to some like final thing where there's an architecture that seems to be a stable equilibrium or we just like keep going forever i don't know if it ends or not yeah that makes sense and one one aspect of this iterative game is the deterrence game and so you kind of want to have kind of in your back pocket all these these cars that you can play if you do have an attack um so you're basically disincentivizing the the the up the upfront investment and as you said you know in the case of proposer ddos you probably have to invest i know at least a month worth of of death time um and you know if yeah it is the fact that we live in a multi-chain world at this point and i wonder how you guys are thinking about cross-chain mev and how it affects the consensus layered decisions or solutions for example we'll already see cosmos mav extractors who run validators on two chains and they are among the two chains atomically when they're elected as a bill as the proposer for both chains so how are you thinking about that and does that concern if you if at all one like very specific uh way that it might affect things is like in pbs there's this discussion of uh are we auctioning off hashes or re-auctioning off like the builder identity right like basically when you make a bid do you have to commit to what you're going to be including in your block um and that basically yeah forces the like the builder to or uh make bids based on like what they can include at that particular moment when the auction happens versus if you just leave it free then it's like the builder's bid based on their expectations of how much movie they'll be able to see in the next slot um and in i think historically we've been uh generally more in favor of the approach that requires uh builders to include hashes uh because that uh like that way builders can guarantee what their revenue is going to be and that would makes it easier to be a builder but in a cross-chain world there are arguments for kind of leaving that open as well um right basically yeah no because in a cross-chain world like if you want it to be possible to kind of get these gains from being the proposer at in multiple domains at the same time then like that only becomes possible to do like inside the game if you actually do have like that free opportunity on both domains is a world with multi-chain bundles a good world um i mean in general i feel like a more complicated world is a less good world but the question is like what's the counter factual and if the counterfactual is like even more incentive for people to join the biggest taking pools and like i'd rather have multi-chain bundles you know so i'm sitting on the wrong couch i should be on the the light mode couch the answer to this question i'm mildly optimistic about maybe not like the full cross domain but at least cross chain mev for the reason that i don't think it requires like agreement on too many components of the architecture i think it mostly requires agreement on clocks so if we're using like threshold decryption systems it matters a lot in a crosstain domain context whether or not those like periods of threshold decryption are synchronized across the domains if they're happening at like lots of different times across the domains then there's going to be a lot of asymmetric information among block reposers but if they're happening in a more synchronized time then uh you know everyone kind of has to make decisions about ordering and then everything gets decrypted and maybe they're still the five percent 10 but it seems like you can synchronize some things without necessarily agreeing on consensus or agreeing on you know other more fundamental architectural decisions so my opinion is that um cross layer one mev is bad but ironically this is a great thing and the reason is the great thing is that it pushes the shared security model and so the question is um can the real question is can we scale shared security and it's my belief that we can and if we can then we would be winner take most and therefore there wouldn't be uh so much uh cross cross layer one movie interesting so we have nine minutes so let's spend four minutes on the next question and then something about the future and then let's open up to the audience for any questions so mov traditionally has been painted as a curse in a way but i wonder if there is a galaxy brain where you can invert it and use it for good the obvious examples are arbitraging liquidations but maybe in chains without the block reward you can use mvv as a security budget or something in that neighborhood interesting yeah like i guess uh if you like auction the builders a lot very far ahead of time then like you can do the like transaction fees for security thing and like basically avoid having the big spikes and like what the reward is but then i guess the counter argument is like you could do that the other way as well right like if you have uh you know eap one five five nine burns you can just like release them uh retroactively like basically you know you put the burn into a pot um and then every block release like one over a hundred thousand of the pot um i think that like the direction that where like if you kind of surrender to a block building uh a specialization where you get like a lot of gains is the question of like can you have more sophisticated resource limits um and um you know multi-dimensional eap1559 is one good example another good example is if you start having like multi-threaded and parallel evms um then like that also uh would require the concept of gas to kind of become more complex to reflect the actual constraints that nodes have um and if you just say like we have this other way to just deal with uh optimal block production being uh really complicated um then like all of those uh like there there's just a lot of other hard decisions that you just totally don't have to make and things that become easier yeah so maybe can be kind of good for several things one is that it can be it can increase security because there's more rewards of validators but it can also be used to increase scarcity if you can find a way to burn it and there are some designs where we have mev burn and basically you can be in a situation where you just rely on the proof-of-stake issuance for security and everything else just leads to more scarcity i think kind of another reason why mmv is good is that it's kind of a talent magnet and it has this accelerationist aspect to it um and you know this room is proof of it you always find ways to add more ultrasound to the ultrasound ultra ultra all right now i'm on the right couch because i'm going to take the contrarian position i feel like there might be some conservation of demand here where like ultimately users want to use blockchains because some like semantics of the state transition of sending someone money or trading some asset is the thing that they want to do and if they're like doing that slightly less efficiently because you know they're not getting as much of the asset as they could have gotten because there's some mev that changes maybe who gets like specific parts of you know whatever that demand translates to in terms of transaction fees or mev but i'm not sure it changes how much of it there is which isn't to say that mab isn't like an interesting uh like tool in the protocol designers toolkit but i'm not sure it like can be used to add security that wouldn't have already been somehow uh provided by the fundamental demand just one point of um protocol security i would definitely well security budget i would uh definitely say oh like basically just as justin said that i think it's very important to never directly couple protocol income and security spending just because conceptually like those really like they're should be freely voting against each other right you should set a security budget and then you have an income and that can be more or less and that determines the soundness of your money maybe but like it should like if you're basically artificially forced right this bitcoin is today and i i i hope they'll move to some 1559 style mechanism but like right now right they just artificially couple their security to their uh to the to the to the um fees and that just doesn't make sense right because then you're floating security guarantees that's never what you want what did we not talk about what should we change the ethereum logo to all right um do we have any questions from the crowd to your point vitalik at the beginning you said users mostly wanted which is transfers right so i wonder if there are some possibilities out there for maybe mitigation that are more so not on chain design and in protocol but actually if there's um for example if we're able to enable intents at the end user level we're in where the intention not just i want to transfer assets from a to b but where i can say for example i would like this transfer to happen but i also would like it not i would like to not be front run and i would like to pay this much for as long as that is guaranteed so i wonder if there are some like there's more some potential in the space by it just enable and use the intent to just be more expressive to avoid yeah i mean that is what like some of these uh like fancier exchange protocols are trying to do right like basically allowing users to kind of set more conditions and like basically making and like um amms have like some of the properties of order books um it's a and kind of like pushing i like exploring the design space in the middle by starting from the amm side and then making it look more ordinary like that's uh that feels like that's already doing some of that um right and like a stronger um mev ecosystem i think uh you know it can even help there uh right because uh you know users can create conditions that are very strict like you know you can even set syllabus to zero if they want or whatever um and uh things like that can be yeah like um handled more effectively um flashbots is adding that to the rpc where you can opt in on certain kinds of method to be extracted from your transaction and it only goes to certain searchers that look for that i think we have one more question and we got a wrap yeah right um so i'm gonna start a little often and i'm sure you'll understand why so and then sorry we got really tight like if you can get okay i'm gonna get to the point then okay good so and other industries let's say airplane mining oil and gas etc have spent enormous amount of time and money and effort on trying to figure out why accidents happen and it turns out that of course accidents happen because people are stupid and you know technological issues and whatnot but a good chunk of it actually happens because there's they try to put more and more safeguards into place and these safeguards tend to eventually interact in complex and complicated and unknown ways and then you know like it blows up into the face of the people who built it and i feel like um there's been a lot of um work being put forward here that says okay well you know this is the system the way we understand it and this is the way we're gonna try to put this even more and more and more complex ways of trying to fix it and i'm wondering are you afraid of these complex systems that are safe meant to safeguard the system from the current issues that you see right now will eventually interact in ways that will you know blow up into our face and whether it's best to sort of accept the risk that we have already and live with it rather than trying to fix it and then create potentially way more risk than what you're thinking you're fixing maybe maybe a tldr would be complexity solves things but is complex the okay i mean i think the answer here is just modularity you want to try and encapsulate as much as possible and so for example you know within the beacon chain there's like all these different modules so for example we have randomness generation and this can be a very well encapsulated thing and you can have like an ideal functionality you know just provides unbiasable randomness uh we could have um and if you just do this for every single module and then then then you're kind of limiting complexity in a big way and this is pr kind of going against the flow of mev mev is this kind of force towards being like systemically seeping through every single crack um and so it's a good counter balance to try and modularize as much as possible great thank you all for coming thank you to the group [Applause] [Music] 