hello everyone um my name is quintus I'm the flash Sports research team and today I'll be talking about order flow auctions and centralization and the the main point I'm trying to get to today is that this is a warning or I'm trying to communicate a warning rather um so what is order flow and what is order flow in blockchain on ethereum um well I think roughly it's uh the way we take a user's intention communicated in some message so the message being the order and get that on chain right and now you think a message that changes the state of the chain you think a transaction it's a little bit more General than that you can think of like an intent in the account abstraction sort of way of thinking about things but a transaction is a perfectly fine way of thinking about it but um as we all hopefully know the creation of this transaction of this order isn't just you know someone on their own it's a someone using a computer using some software and this is happening at scale hence order flow like a collection of orders um and so the question is how do how does order flow these streams of orders how does that get onto the block um into the chain and that's sort of the topic of today's discussion um and the usual culprits the usual culprits show themselves here searches public mental miners but part of the reason I'm speaking to you guys today is because that's changing and now we have this these new two roles the Builder and the proposal so just a little bit about like how I'm thinking about this I'm keeping in mind boost is my model as I go through today because MAV boost is a most sort of immediate implementation of of PBS that we'll be seeing but I think the criticisms that come out today are um relevant to most implementations of PBS um but yeah maybe boost is what I'm thinking about yeah okay so um I'm going to show that some bad things happen today and in order to show some bad things happen or can happen I want to show that we want you to establish what we mean by bad and so we should establish some desired properties of PBS now the first and most obvious is that um we want PBS to be in a an approximately dominant strategy for the proposer I don't have a very rigorous meaning of approximately dominant I just mean that either using PBS is a dominant strategy for the proposer or whatever their best response is it reveals approximately the same returns as uh um what using PBS would would yield and the reason we want this is to reduce centralizing um to minimize the centralizing effect of Mev on the valid data set um and yeah I'm not going to go too deep into that hopefully that's relatively obvious what's been established earlier today then the second is censorship resistance um I don't think we'd want censorship resistance to be any worse given PBS um and I think one thing I'll dive into today is ideally we'd want censorship resistance not to come at the cost of the validator we don't want it to be there's some to be some opportunity cost for doing the right thing um did another property which might be controversial or although I think it's shouldn't be at least among many people isn't there's no rent seeking and what I mean by this is that the value that's extracted by Builders and searches isn't doesn't remain or the majority of it doesn't remain with the builders and the searches it flows back to the rest of the ecosystem where in the ecosystem it should flow is perhaps controversial and should go to a different talk uh go into a different talk but the obvious culprits are validators users daps um perhaps wallets um and then another property which is not really a requirement but would be quite nice uh like Alex's talk after this really elaborates on this vitalik mentioned it a bit this morning um we have this new sophisticated role being introduced into the ecosystem and really we'd like to leverage that many of the like the validator set is intentionally resource constrained because we try to keep everything as decentralized as possible um but the Builder Builder role really offers a whole new um swath of um functionalities or could and hopefully we can get that out of the out of PBS and so this is the the my picture of PBS um the rough idea here is that or as we should all be familiar um it's a proposed and it's accepting blocks from Builders um but but what about this system makes PBS and Order flow a relevant topic um the first is well before I go into this I should mention that um in some sense autoflow has been an important topic or has been potential potentially important topic and just hasn't been explored that much in the current Mev landscape and so organically we're getting to a point where the competition pushes Us in the direction of of um sort of where Builders and searches or rather searches compete with order flow but now with PBS you have this Builder on that changes things it changes things partly because of this Winner Takes all dynamic because there's you know only one block in a slot or only a finite number of blocks um in a well in like a certain time period the success of one Builder implies the lack of success for the rest of the builders right only one block can be included whereas with bundles that's that's not the case and the second dynamic or second characteristic is that PBS relies on competition right it's an incentive based mechanism and so the presence and absence of competition really changes the character of the of the system um and the combination of of order flow and the water takes all property really does have a large impact on whether there's competition in PBS so what does this look like how do the orders flow through through the system well again the obvious culprits searches in the public main pool um but how orders get to the builders actually as a relatively um there's a wide variety of ways this could happen obviously the public main pool is still there but but really how is one Builder gaining an edge over another um because of dynamics of because of the Dynamics of order flow the most obvious is these uh non-public sources of order flow and here I left it blank intentionally because I think there's actually many many agents that can fit into this role many sources can fit into this role but the obvious here being like wallets or dap uis um and then we have this other kind of advantage that the Builder can draw is when a Searcher chooses to submit their bundles only to that Builder right a variety of people have brought this up I think in public discourse um and there's some reasons for why this would happen and um I'll get into that later right um and so I framed this as a as a warning um and I've described the system so far but where's this danger um and the classic like blockchain example or logical blockchain answer is a centralization in centralization there's a danger but um if you're like me in centralization and PBS come up in the same conversation then your mind tends to like vitalik's endgame article and in the end game just to sort of summarize it came up earlier today um vitalik says well they seem to be inevitable centralizing forces on the validator set or on the on the on a blockchain network one of these being move and the consequence of this this centralized centralizing Force if not addressed uh is a centralized Network which as we all know sort of defeats the point right or at least in my opinion um one way of dealing with this and what vitalik proposes is to separate out the centralizing roles in the network from the non-centralizing roles so we can preserve a decentralized set of validators in this case and allow the accept that the Builder set will become centralized right and the reason we're okay with this is because we can use all these different kinds of mechanisms to bootstrap the properties that we want from the network from the decentralized validator set all right um and in doing so we can accept that we have a degree of centralization around the borders well now what I'm going to argue today is that the centralization that we may be willing to accept according to this argument is um qualitatively different to the centralization that arises from order flow and in particular exclusive order flow right and so maybe we should run through some examples um bearing in mind I'm not talking about centralization I'm talking about centralization right and so that we could use a wallet as an example but again here we can think of many different potential agents like the like a dab UI for example and who does the wallet server ultimately the the end users or its customers um and what do the end users want well one of the things the end users want um is execution of their orders but another thing that they'd also want is some features around these orders the most obvious being like time to execution right you don't want to wait a couple days for your transaction to be included um and so if this wallet for whatever reason is choosing to send their order flow to only one Builder they have a bit of a dilemma on their hands if they send the order or the order flow to only one Builder though that order flow will only be executed once that Builder lands a block on chain and so in a competitive market this might not even make might not even make sense for the wallet because there'll be such a delay imposed however once a builder gains a an upper hand over the other builders and has a higher inclusion rate the decision becomes a lot easier for the the wallet and the obvious positive feedback loop ensues right now before I go forward I think I should mention here that when we're talking about a dominant Builder um it need not be a single Boulder it could also be like a an entity right that consists of maybe like a bidding ring of a betting ring of Boulders um but just a single Builder is also fine to think about for now um uh yeah and actually on this point um before I get into I haven't I've not I've said this is this is centralizing but I haven't argued why it's qualitatively different to the centralization we're willing to accept uh in the according to the end game um one thing to note here is that part of why we're willing to accept centralization according to the argument of the end game is that we have these mechanisms to bootstrap the properties we want using the decentralized validator set but these properties are not yet fully developed um censorship resistance mechanisms have been proposed there's lots of ideas some easy implementations we can do in the short run but I don't think we've fine-tuned these and so we'd like to delay centralization as possible clearly this positive feedback loop is centralizing but I'd argue that it has the potential to be extremely centralizing right if we think about some of the big players in the space metamask uh inferior uniswap like these actors control a very large fraction of the autofill a very valuable fraction I think I've heard some estimates that infuro has more than 70 of the Network's order flow if one of these entities decided to enter a deal like sell their order flow to a builder this would effectively centralize the Builder Market in a finger snap and so this is a real threat um but now let me argue why the centralization is even worse than um the fact that it can happen so quickly so coming to this picture right we imagine there's one Builder that does have a dominant fraction of the order flow um the obvious consequence of this is that their blocks are at least an expectation a lot more valuable than the blocks of other builders the dominant bidding strategy or the smallest building strategy says that you only you only outbid your best competition incrementally which means that the proposal only receives a little bit of money right um and now this already is is bad uh it's it's um sort of like coming back to the original property it seems like there's rent seeking creeping in here but now you might um look at this and say but hey I'm not taking into account the fact that this build is is potentially paying these wallets to send an exclusive order flow um but I don't think that this is actually a good argument and the reason for this is consider this like new challenging smaller Builder entering the market competing against this entity this betting ring or this large Builder um if it wants to compete meaningfully it needs to acquire a large or a significant fraction of the order flow um in order to do so it has to convince this well it's like hey switch to me but this wallet can't really do that because if it did that it would be committing its order flow to this very meek and Mild Builder there is a very low inclusion rate meaning that its users have to wait a very long time right and so this wall this this wallet is sort of Trapped with the dominant Builder which means the dominant bullet doesn't have to compensate the um the the origin of its exclusive order flow very fairly and there's a couple other reasons why I don't think that'd be competent fairly um clearly this would be alleviated if the wallet could send their order flow to everyone um because in the smaller bowl that could compete on the same order flow and the the difference between the blocks likely to be much much smaller but if the wallet's business model is to sell exclusive order flow for example this can't happen similarly it might just be that a wallet sort of integrated with a dominant Builder and they'll leave it like that because this is the Builder's dominant it controls 95 of the blocks or something like that and why would they integrated with this new smaller Builder when it doesn't really improve the the um the their rate of inclusion um and so we're stuck in the situation likely with a slightly becoming worse and worse over time um and so yes that is that doesn't mean that summarizes it very well it's something I didn't say here is that um just like to characterize this is probably the most important slide um we have um three so three things to notice here the proposal is being paid less not good the wall is being paid less not good the builders um the reason that there's this Dynamic is arising is because there's no way for the smaller Builder to compete with the larger Builder it's a lack of competition right and this arises from the exclusivity of order flow um and another thing that happens because of this is a lack of competition on user features earlier I said that a bonus feature would be that these Builders sort of develop user features which really improve the the user experience of the network Etc um but really these this like dominant Builder has no incentive to do so right because it already has all of the order flow but now I also mentioned censorship resistance right and really actually this can be generalized to like honest behavior um and if we like run through an example and we can think of see all lists if you're familiar as a as an example of what um what would go wrong here so proposer pushes an honest requirement of the network saying like hey this is the list of transactions which must be included in the next block then one of the builders or a set of the builders could say Hey you know I want to Center these transactions I'm not going to submit a block or I just want to discourage this Behavior whatever it was by the proposer I'm not going to submit a block as a way of griefing them or punishing them if the network is competitive sucks for them someone else can submit a block of a clear nearly equal value and that's fine but if the network is very centralized or rather the order flow is very centralized and a handful of bullets are the only ones able to produce valuable blocks this means that the proposed is now stuck with a with a difficult problem right either you choose to be good right to be sent to enforce and just resistant be honest whatever it is or you choose to be rational and we'd like to minimize the the difference between rational and honest behavior for two reasons one is you'd like to incentivize honest Behavior honest use very generally here um but the other is that we don't want rational Builders to over time out compete the honest proposals because they're having they have larger return on their stake and with time they sort of reinvest that reinvest that and you have this positive feedback loop and the honest honest proposals or competing are being competed out of the network um and yeah so we have this problem I've sort of painted you a sketch do a problem with order flow capture what do we do about this all right I think there are three causes and perhaps there are more um but the three causes we can sort of think about to start addressing this and I should say that flashbots has been thinking about this and hopefully we'll have some some ideas public soon um but just sort of like generally to paint the picture here and obviously we had the discussion earlier about having a distributed build in the centralized Builder that's one way of addressing it but looking at the incentives we have this first problem paid for order flow right um and this need to be monetary payment it could be like payment with some features saying hey if you send your orders to only to me um I can offer this feature to you but likely it's going to be some monetary payment um you know the the classic example being like hey I'll give you x a month send your order flow to me this is bad and I think one of the reasons that we might see this arise is because there's no clear business model for for wallets and so if we can provide a better way for wallets to monetize and capitalize on the value of of their service um this problem is this becomes less of a threat then we have this search a trust problem searches when they submit bundles to builders at least at the moment have no real way of ensuring that they bond their Mev strategies are not being strategies are not being stolen right and so this might just discourage them even though they want their bundles to be included from sending their bundles to every builder in the network because that increases the chances of their bundles being stolen and so what we can do is provide some mechanism through which searches are find it much easier to detect bundle theft um and thirdly which might seem small but I think is potentially one of the largest issues is defaults like I discussed earlier this situation in which um a wallet maintain a group that was a very poorly phrased some like metamask or someone integrates with a handful of all the rpcs and um you know don't want to have the overhead of integrating these like constantly challenging new Builders their new features or whatever um because hey we're integrate we're integrated with the dominant Builders anyway um and we'll just leave it at that because we're not losing anything by not integrating with the challenges the downside of this is like this is effectively exclusive order flow um paid for order flow except you're not being paid which kind of sucks right and so it reduced like making it easier for maintainers to switch between different Builders integrate the new features is uh I think should be a short-term goal um and I should emphasize here that I don't think all non-public order flow is bad and that's sort of a knee-jerk reaction we might all have you might say okay well we'll force all transactions to go through the mempool and in doing so um we we might even have the competition between Boulders but I don't think this is the the Right Way Forward uh for several reasons I think one is not probably not feasible but perhaps it is but um two others um is that if all if we want Builders to compete in user experience and use the features and um really innovate in that area there needs to be a way for for orders to express or for users to express their preference oh I want my orders to go to the school and not to that border because they have this feature right if your order goes to all Builders there's no incentive to innovate but another and um this probably requires a bit more work but another is it might may end up being the case that if a builder algorithm is dominant um that means that for any input or any order flow it out competes or produces a more valuable block than a weaker algorithm um what this would mean then is that if all Builder algorithms have the same input that they will only be like one or two algorithms that Dominate and the you can extrapolate that and say oh well actually the Builder Market can only sustain a very very small number of Builders however if there's some Randomness some variance some stochasticity I don't know what word you want to use in how the order flow is distributed between Builders this would mean that potentially the boulder Market can sustain a much larger number of Builders reducing um how centralized it is or yeah and so moving forward uh I think the there's obviously a problem and there are a couple of ways we can we can start solving these um and I'd like to propose a sort of a goal that we can all work work towards and I challenge you either to propose a better one uh or to you know figure out how we can um how we can move towards it but the rough idea here is that every order flows um to every Builder which supports a feature that is required right so if I'm sending an order because a builder implements some feature like account abstraction or um I don't know pre-confirmation or whatever it is um then my order should flow to all of the builders which implement this right um and I you know I'm out of time but I think it relates quite clearly to to both both of the all three of the the previous points um so that's my talk I included some formula in case my mom watches the recording um but yeah that's it so if anyone has any questions [Applause] what are some examples of wallet monetization do you think are sustainable it's a keep your eyes open for a for a post coming soon but I think there's some some ways that are already like available um right now uh yeah I'll leave it at that just just to understand first I think is this is a very important question but do you think that having private order flow is useful for the users or are they basically being taken advantage of by the wallets or other or other people who are privatizing their order flow you mean like would a user ordinarily you think get better execution from their order being publicized to everyone in your model I think it probably depends on the order right but if it's like some unit swap transaction or something um obviously in the the current model the there's there's no real benefit to the user apart from sort of like high high chance of inclusion that might change though it might be that um um there's some other way in which your your orders effectively public but you're in some way protected or there's some incentive to to have your order be public um yeah I think you get the point but at the same time there might be some builders that offer like front running protection credibly I don't know how you measure that so that I think it's it's more nuanced but but I think it need not be that the public main pool is the place where you get eaten alive cool thanks [Applause] 