is going to talk about the shuffle [Applause] yep yes thank you guys for coming so today I'm going to talk about CK Shuffle it's a mental poker on snark for ethereum a little bit about me I come from UC Santa Barbara before uh at time yeah go cautious yeah yeah so at uh year 2020 I built the first ckml research and after that I joined Manhattan Network for the private payment also optimizing like Amazon and build something for Xerox Park Pacific is a evm native layer 2 ecosystem designed for DK applications we use the celestial for the da also the Caldera for the op stack and we build the universal Decay circles uh so what is the man has Universal CK circuit basically our CCs is like hey there are many many applications they need privacy right using Z key however it's very hard to write CK circuit for most developers right so basically we provide the universal circuits so other developers can directly use our circuit to build whatever their their tabs right like the private voting like many kinds of function fully action card or poker game right there are many many things so we provide CK as a service also we provide the solidity compatible things so people don't need to learn anything new they just use the solidity code also the some typescript code in the browser yeah it also provides the SDK so people don't need to learn many things a very concrete example called DK shuffle for as an example of our Universal circles so basically sticky Shuffle is a universal circuits deployed on mental Pacific designed for a fair decentralized and private fully ontrend card poker game it provides this very simple contract interface like the shuffle State manager also the base game so basically you know for whatever kinds of card game like the Texas Holdem like the Hearthstone if you guys are familiar so see I have a central part which is fully unction Shuffle and the deal right in addition to that they can have super different like game logic like you know I mean basically they share something similar but they also have something different so what we have done is the central part for Shuffle and deal so other developers can rest only solid code to make it fully unchain so how does this secret Shuffle works basically the goal is to build a foliation card board games with solidity and ckp there are actually a few problems the first problem is how do you fairly Shuffle Decor cars so basically we have a bunch of people like three people or five people we don't trust each other at all right we also don't want to trust any centralized server so we need to play the card in your remote way and make sure it's a fair Shuffle the second question is how do you privately deal the decal cards yeah actually this is a very important cryptographic problem called mental poker it has been started for decades and there are actually I basically built up in this mental poker and make it on the key snack so we have a few things the first thing is CK Shuffle setup so before game starts everyone takes turn to I mean this is the have some cryptographic setup like the public key private key so I need to do one thing called Shuffle encrypt so basically in order to shuffle the attack everyone takes turns to shuffle the deck the randomness comes from the user machine it's not from blockchain it's not any centralized server it's from the user machine so they have fully control the third thing is called ZK Shuffle decrypt so once we have a shuffle attack everyone take turns to deal the card uh now let's talk about how ZK Shuffle Works basically suppose we have three player Alice Bob and Charlie they start with a tackle cars it could be 52 cars van deck or I mean two decks right so basically everyone takes turn to shuffle the card like Alice gets the card from the blockchain halfway it and the Bob Shuffle it next so let's see so how it works with solidity now we have the contract also we have the player so on the contract we start from initial deck it's just some encoding on the elliptic curves so let's catch this stack from the blockchain it's just a simple read then on LS machine LS can run a program called Shuffle encrypt and generate a shuffled deck I mean basically here whatever other Alice wants at the same time LS will generate a proof to see hey actually this is a correct Shuffle like I only have one I I only have four is instead of 10 is right because every card is encrypted if they don't have a proof no one knows what happened uh then Alice will submit this tag to the blockchain storytime the chain and send this proof on the blockchain for the proof verification that Bob will get this deck again from the blockchain and verify Shuffle you know it's the same story so a few questions here so what is the source of randomness is from the is from the user machine instead of the blockchain or the Oracle so it doesn't have many trust assumptions the second question is why every player needs to join the shuffle I mean why don't we only ask one guy to shuffle for all the people because they don't trust each other so I have to shuffle by myself but the third question is why do we need additive homomorphic encryption so basically we want to make sure he who whoever shuffles first does not have any advantage over other players right so it's a fair game now let's talk about the card dealing so we start with card there are three logs on the card because everyone has taken zero turn to shuffle and encrypt right so this is a two logs on each card the like Bob gets this card from the blockchain and remove pops log and Charlie remote Charlie's lock and finally Alice can see the hand card again we can see how it works with contract and on the contract we have the card LS3 date decrypted on their on LS machine and the generator proof then this card is sent to the blockchain and proof is input to the blockchain for verification so one thing I want to mention here is when Alice decrypt card on LS machine Alice can have the choice whether I submit the decrypt card immediately or later right this is there are two console cards one is the hand card I haven't played I know the value I can play it whenever I want but I haven't played other people should not know it right in this case I let's just do just does not submit these cars to the blockchain and another case is hey I actually want to play it only at this time LS will send the card value to the blockchain they are gonna let us ask a few other questions so first uh when dealing hard to Alice what prevents other players or anyone else from seeing Alex card because what I last read from the blockchain is the encrypted card right so other people cannot know the value the second question is does the decrypt sequence have to be Bob Charlie or LS actually no so actually any other works because we are using the additive homographic encryption as this is actually very important because during card shuffle and encrypt we have to choose the specific order right A B C right but when we deal the card we may deal to allies or Bob or Charlie so let's say support video to Bob Bob should be the last one to decrease right so this order is important the third question is when Alice placed her hand what prevents her from cheating like playing a card that doesn't belong to her so basically made repair allies to submitter proof for the card dealing for the decryption so people knows is this is a quite computation uh yeah I kind of talk a little bit a little bit more details on the Algoma encryption the additive homophone encryption they are using uh during the setup everyone generates a CPK public key and this is the aggregate everyone's public key together into a shared public key and later when they include they use this shared public key for encryption and use the you know individual secret key for the card dearly also we have the encrypt so you see everything is a is a limited curve and we have the decryption so basically people use something this is the core for the encryption decision part in addition to that people also need to do the you know shuffle and check the validity of the you know Randomness stuff uh yeah let me talk about the performance side so the performance is very very important because one thing unique here is players need to generate the proof on their machine I mean this is quite different from many other CK products like Decay evm and many other projects this is c as they have some super powered machines it will generate the proof right however this is not the case in our game because uh you know users don't want to trust any centralized server they only just share the randomness on their own machine so they care about the performance on the best way we are using group 16. so you see the first thing is RSS constraints is like 200k for the encryption and 1.5 k for the decryption for the proof generation side it's like 11 seconds for the encryption 0.1 seconds for the decryption so every time we learn people deal the card it only takes 0.1 second and this encryption is only done once before the game and we can make it even faster with some other optimizations uh this is a gas cost uh it's like 2 Milli so on on layer 2 it's like every game if we play a Texas Holdem it's like a 0.3 dollars or even less yeah so it's kind of cheap yeah actually this is about the Prototype and the security design prototype is easy but production is hard so we have more optimizations to actually make it work materials has a provide a good user experience but I think it's called pipeline Shuffle to hide the proof generation latency so we have seen there there are some a little bit latency for the proof generation right and our idea is like hey we actually don't need to submit the proof for the game to continue right so we can submit the shuffle deck first people can play it and later we can submit the proof and if someone does not submit approve other people can challenge and punish this kind of story uh the second thing is called optimistic verification to mitigate its own modification guest cost so on transgtp verification is a little bit expensive you know if you have a bunch of many many approved to verify so basically we we it's like the optimistic design we don't need to verify until someone challenge as a third thing is like the point compression to reduce the on-train storage because uh strong storage is very expensive it's like 20K gas per proper data and if we can compress the elliptical points the gas is smaller yeah we will have many more optimizations like this one to make it actually work so if you don't want to interact with the contract interface we offer we provide an SDK it's a test script called runs in the browser you can simply call it it will send all the transactions to the blockchain yeah yeah so sometimes actually I saw some focusing our ecosystems they actually built a Tesla holding game with with one deck using the sticky Shuffle I can show you guys a very quick demo so you see there are two players they are waiting for the third player now there are three players everyone takes turns to shuffle the deck so now I have finished uh okay player 12 so finish his player three okay everyone finished Shuffle this is pretty fast now people are dealing the card um okay okay so now everyone can see their own hand cars this is a fully decentralized game I mean we don't have any centralized server yeah you see mostly since it comes from singing the blockchain sorry sending the transaction to the blockchain the second part is fast yeah so people can use CK Shuffle to build other card game you can imagine see just they need to write uh I mean the game logic in solidity but they don't need to touch any CKC for the for this demo uh so oops let me see the next one yeah actually okay so the demo was about trading card sorry card game with one deck we can build more than that for example we can use the trading card games with two decks uh so how does it work in this case so we have two decks like Alex versus Bob they are playing the Hearthstone so Alice has Alice deck and Bob has Bob stack basically Allied Shuffle and encrypts the deck sends the deck to the blockchain so now other people cannot know the card value and one thing I want to mention here is actually we can have two totally different decks for Alice and Bob right this is very common game design in the uh I mean many trading card game like Hearthstone people can buy some cars kind of freely compose whatever because they want and so because Alice sharpening encrypt this card sent this card on to the blockchain there is a log other people cannot know the composition of this card of this deck okay Bob can do the same thing and the inbox shuffle for the deck and the outlet Shuffle pop stack as in this case we have to shuffle the deck because Alice has shuffled sorry Bob has shuffled LS tag Alice cannot knows the order of his cars in this deck yeah this is a shuffle for the game with two decks uh the dealing is similar people take turn to deal for my talk about the ticket Shuffle bring card about getting fully on chain so I have the spec here if you are interested in the technical details you can take a look that's all thank you guys now we open up for questions so um first of all amazing talk um I'm just curious like let's say someone like goes like folds right and they rage quick because they're losing in poker and they no longer participate in like the the dealing process how how do you handle that oh yeah this is a very good question so I mean depending on when you create like uh supposedly you're created you in the before the game starts right it's okay and we just regenerate the public key also if you create during the shuffle uh it's also okay because people can you Shuffle it right but I quit when I lose in poker that's when I get mad yeah yeah yeah my chips are gone yeah this is a very uh complex scene so let's say supposedly have Shuffle the deck and in the game you still have the choice to like click fold then you don't need to participate anymore right this is the most common case because when you're full you will automatically do all the remaining cards because you have you have left the game that you just give oh okay you don't like let's say I'm the like third card right oh I hit nothing I thought I I was you know you know I had a pair of kings and Three Ages just appeared on the board right so I'm out okay is there a way to get around this or do we just need to like sort of penalize the players for rage pudding uh yeah so yeah actually there are some attacking technically we can handle it uh like there are something called the partial homomorphic encryption you don't need everyone to to deal the card yeah it's possible but but we are not doing this yet because there are some like trade-offs between how much trust you want to have to other players like suppose we have five players can we see hey four Auto five will never cheat of course they will right yeah yeah there are many questions like this so currently we don't use the partial homographic encryption we require everyone to deal the card now that's why they are taking something like the economically intensive incentive to say hey do not do that with like 10 10 seconds and click the forward that's all that makes a lot of sense like even if you just maybe force them to lose all their chips if they don't participate right yeah yeah also there are I mean in many uh like seeing like the trading card game is a one versus one game right so there's no such problem in my online yes thank you uh giving the player a maximum of like 100 specifics of the game but maybe like 30 seconds like how would you like if you want to influence that would you like keep track of long time oh yeah like 15 it's like 15 blocks how would you keep track of like a time if it was anyway oh yeah but it's like the block 10 sorry block number so like uh I mean like uh once when some player players submit a transaction do an action there is a timer restarted and the next player have to take action before this timer expired so the time I always attract is that one chain yeah it's on the block number is like is this reading or or no no actually no gas support oh okay so because all the logic is falling on chain using solidity there are some built-in API like block number something to read the block number yeah you don't need any centralized servers or Oracle for this block number so I probably have one question so you mentioned there is an optimistic approach we take when it comes to verifying improved some of the players I was wondering whether that's purely because of the gas consumption right here we are or if we are assuming on a super fast chain we can verify all the proofs if we want uh yeah it's currently is mainly for the gas cost constraints okay yeah because the the kind of worry I have is not everybody realize that they're getting cheated when they're actually getting cheated so in order for people to realize that hey I'm getting cheated I need to challenge this guy um that might take a while and then say for example somebody build a super fast broker chain with let's just say death which is you know like might be super cheap and therefore it makes sense to verify all the proof I guess you know we can pick everyone if we find a solution oh okay gotcha so basically you ask hey like suppose I'm a non-tech technical player I don't I know nothing about the dkpi I don't know why I should like a challenge right so basically people don't need to actively take action for the challenge we build it that we just have built-in utility in the browser it will run in the back end keep pulling the data from the blockchain chart and verify it locally if there are anything wrong they will challenge automatically yeah right so because because it's like in all this card game it's like people fight against each other right so they have the incentive to challenge other players in the same game in there he like if let's say someone cheated and it just like slashed their steak or something uh yeah currently it's like because like they can hold them people have the chips by default okay right yeah yeah so did they just lose the game if they cheat is it like some kind of book are you curious until like I felt optimistic deadline for Approved submissions like fraud proof submissions is over like something something like yeah they will lose the other chairs like proof aggregation and then it's only like 290 what is it 290k gas to do ground 16 verification uh if not 200k defense depending on how many public inputs do you have for sure yeah gotcha cool beautiful so I guess no more questions and thank you foreign [Applause] 