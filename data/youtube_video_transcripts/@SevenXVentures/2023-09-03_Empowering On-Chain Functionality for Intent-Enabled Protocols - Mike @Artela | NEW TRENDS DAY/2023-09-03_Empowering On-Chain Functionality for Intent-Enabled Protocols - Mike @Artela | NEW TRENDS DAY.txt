yeah so I'm gonna talk uh what is intent uh Centric protocol and also how to implement it and also if the current blockchain can enable the intent enabled protocol and also we provide a model to to make it happen and as Eric mentioned they should need a universal framework for for the intense Centric protocol so I will introduce what is aspect and what is our solution for the universal framework for internet Network protocols um yeah so like why we talk about inter-centric protocol because now we want to achieve intent whereby architecture like a man pool so by emmanpro uh Centric architecture just like Paradigm mentioned in his in their like research the transaction need to be orchestrated and processed to achieve intents which means we need a middleman to be the propagator of intent they need to propagate the intent and also another guy I need to sell the intent so there's always a middleman in the like like to be the propagator so it needs to be incentivized and need additional trust because we need middlemen right so within this framework the protocol itself cannot even though it do not need to to be changed but still unable to produce a desired outcomes by themselves uh so that's like the current protocols on man pool based architecture to achieve intents um so however if we imagine a protocols can produce a desired outcome they can let themself be the internet enabled protocol do we still use kind of mempool-based architecture to our understanding uh maybe yes but it definitely will be two kind of form first is still the mempool-based architecture is especially if you Syrian but definitely there are lots of talk among ethereum because one that is cannot support propagation is real men Pro also like CR concerns about dos attack so there should be another form intent Centric or inter Naval protocol there are lots of research around the vampire based internet architecture so what we want to talk today is inter-never protocol and how to share it um so I want to use again about another use case uh Eric in total just mentioned in his period of speech still they leave me out there but honestly leaving other or other book amm are two different design right so aama is much easier and usually on chain but let me order if you want to achieve these functionality is really often it's more complex but more commonly used in the web too The Exchange but like we can see you in swap or like ink or call protocol they actually use their amm design to achieve on chin limit order so it's a really amazing Innovation actually it can be a job model for the intent enabled protocol so we want to start start from here yeah so we dig into the code of uni swap reforce hook design uh like maybe I can use the example to make it easier to understand for example I'm a user I have an intern I want to sell my eth it's 3 000 movies not realistic for the current market condition but just imagine it so actually it's a whole contract helped the am design to solve this this intent it's not the amm improved directly so how do this happen is that uh so according to the hook throughout the post transaction life circle you can add additional logic throughout these call points to add this whole contract to solve this intent and also you order yeah so that's actually what you can okay yeah with the hook design amm could sell the intent of limiting um so what's you need softly for show us uh we can achieve intent at a protocol level not need necessarily any third-party architecture Maple or anything and second is that a hook design actually makes this intense Tower possible a third is that as we can see like who contract we need an accounting Computing unit where we can see a co-processor with smart contract for this intent server right let's like move one step further is that hook makes our intense hour possible like smart contract during its execution it has a lot of stage uh like there are a lot of lots of call points so it will expose with its runtime context to these points and there should be a hook contract act as intense hour for these protocols to solve the intent of users uh it's kind insert the transaction with its outcome back to the smart contract to continue the execution maybe it's hard to understand but I can go a little bit further to get another level of abstraction so a smart contract is a program when is one it will emit event with runtime context and and at this event will trigger a Computing Computing model to do the computation on chain because it's a unchanging shower so this is called uh evapto it's called event treasury programming heard of it it's totally fine and also like this in unchanging shower after it's finished the computation it will insert the result back and also create a new transaction it's a just-in-time transaction but just like just in time LP is in a deterministic order back to the smart contract smart contract can continue to attitude but the thing is that I want to say maybe use a human world is that so uh not necessarily need to be the original smart contract it can be additional something like a hook contract to achieve this intent um we all agree that it may be a good design for maybe the future so-called intent Focus or intensentric particles but the current Hook is actually limited I want to say three limit here is first is still running ethereum with high gas fee limited computation capability a second is that because it's in the smart contract level as you can as a hook you can only for the hook transaction life circle but it's still limited runtime contest for the Computing unit because for a smart contract execution even like before smart counter execution or after smart contract execution they are still multiple stage so there are lots more runtime contacts on the smart contract itself so it's limited what we need is actually a blockchain level uh runner blockchain level runtime context and also the third thing is lots of people don't have no result because we all say you need to stop before it's good but I won't say one of this job I don't know if you are really sorry for my timeline yeah it's a free application so for example I'm a user I want to achieve the intent of living order right but there's a another guy who who do the trading in amm so but like hey I'm so so uni swap need to solve this intent for me I am the limit other guy but who should pay the gas fee leave me the other guy or the A9 guy he seriously should be the limit other guy right because like I do the I I put forward this intent of let me order why why should I like the am guy pay for me but the currently is paid by am a guy amm guy so there is a fair allocation problem and in our opinion it need to be a they need to be a kind of abstraction here but in a blockchain level to solve this Fair allocation problem I don't know if I like explain this clearly but if you have any other questions if just feel free to to ask anytime yeah so with this three limits um but like the essential reason for this remix is that it's an execution layer for the current whole design is weak so your opinion as a little one atala so we want to stream uh make it stronger to enable the higher unchanging functionality um yeah yeah execution layer level so imagine there's a universal framework for the hook design results limit it should be much cheaper and has Next Level computation power and easy to build and how like a blockchain level runtime context and also uh definitely should be a fair free allocation like that's why we are inventory right so I want to introduce a tala for just install sentence so it's a it's a little one it's an extensible blockchain uh Naval block developers to build feature HD apps it's a general it's abstract so what Attalla offers is first it's a it's two enhanced execution layer actually the evm for smart contract just like ethereum so we keep the data structure of the rim but also we have another layer it's awesome so we are a evm plus wasn't design in one blockchain but two VM so this awesome is to learn what's our aspect contract called aspect um so we have an enhanced execution layer I will tell you why it wasn't expected in the next page and also we provide a new programming framework uh it's not new actually because we are in the similar with uni swap hook design but we tell the same story because we all believe that it will be the nutrients in crypto uh to make so that this aspect we can make the app more modular and easy to build but like it's not a modular blockchain it's much like the app actually because with smart contract and aspect it can combine to be a modular the app not a modular blockchain um so uh it's technical side sorry about that so like just like a whole design we can add additional logic throughout the transaction left Circle so we can make a transaction to enable intent even though the transaction uh the internet may not directly from the smart contract itself but as you can see we can have more runtime contests even before the execution of smartphone chart or after the smart execution of smart contract or in the Block Level like Block in it you can all add joint additional calls in this join point and this additional code Point that's this additional code are written in Watson um so uh so one thing here is that maybe you heard of lots of idea about pre-compiled solutions for example uh Avalanche also use pre-compile and you most evm extension or stylus uh all pre-compiled so what's the difference that because sellers also even plus wasn't right it's the 3D Circle in the bus speech is one wonderful speech but we support the dynamic loading and execution as these joint points the second is that it's all the aspect called that Randy Watson runtime so it's near native efficiency and and secure Us by browser um I just like I think this page will be the most important page in mind the whole whole speech so let's get move like like bring outside back to the Internet Protocol I want to say three three three point white spiders and advice can be a universal framework for the uh intent or for the for the whole design the first is that we have uh like more or four context as blockchain level of runtime a second is run in Watson runtime so what's on VM so according to our Benchmark it's 2 000 times faster and also secure Us by browsers because all the common by browser you set and also we allow a account abstraction here to solve the problem of a fair allocation so with this we Advantage we may Universal framework and so I want to add like add one thing here is that we are a universal framework we are built on top of tenement because we enable IPC so in the future we will for now it's earlier one but in the future we will also support other execution layers if they are evm to Isis Watson execution layer to their evm execution layer so it can be a whole like ecosystem uh but the future plan we need to focus on our live efforts because we are still in development stage it's quite early um so basically for for user General page is that uh we can't build the app with buy smart contract and aspect so developer can write a basic logic in smart contrast before in VM it can join the evm equivalence and enjoy the rich tooling and ecosystem of ethereum and also low barrier to entry but also they can build their own chain intense over in aspect to build this uh like what I say intent Centric protocol and enjoys the native speed and high efficiency for the additional module and it's a universal for all types because uh it's a universal framework so all the tax even though it's not as good as a uni swap or maybe a new one you can use this kind of designs you don't need to you can just realize their business logic don't need to worry about like the similar whole design or something like that so because we can achieve it for for them so it's Universal for all types of all the potential applications and in the future hopefully our execution layer of evm uh yeah so with our design it's kind of enable like more Innovations like in D5 size just as I mentioned as a Dax as amm decks you can enable fully Unchained limit order or like more functional trading strategies these two complex available and also a security a security I want to say one thing here is that uh several months ago is unlikely current protocol is it gets a really interesting attack and lose 5 million right so it's a bad thing it's made the crypto World worried about the od5 what is maybe unsecure so um but like even though we are still into a long stage but we try to reach out to them to build together because like we think with our we write a code actually for this solution to our solution can't enable them to avoid runtime attack even at a time because like for career protocols it didn't do anything wrong their code is perfect but after compiled one thing happened so after compiled we can actually reverse the transaction if something goes wrong so this reentry is your interesting attack can be awarded in avoid in your blockchain level so that's a difference um and also we we just launched even though we haven't launched our devnight because several months ago we just launched this project and we're still in development stage but like in this playground we can show like developers can use this playground to write some Us by code and to see what's happened to have fun yeah and also like if you are interested you are looking forward you can you are available to our try and maybe give a PR or yeah or like a contribute together with us ah for the conclusion maybe just say something is fine so uh with a Internet Protocol we think we actually don't need to rely on only on banku for instance if we can enable the protocol uh level uh work I should say internal protocols and also how can we achieve this method a hook design makes uh possible and give us a clue and third is that a unit swap before it's kind of it's good but it's kind of limited especially it's not a universal framework so whatever building is a universal framework to enable this intent enabled protocols without limit and I guess Islam is like smart Control Plus was aspired is equal to reached the app so that's uh our contact info as my contact info so if you have like have interest or want to have fun or just like scan this code and let's talk more or if I have any other questions feel free to ask me anytime or leave a comments probably will come yeah [Applause] any questions here okay sure please uh my question is as a user what is my point of interaction with artiller do I call like do I call a specific program on aspect or do I do a normal interaction with a with the evm part on a smartphone yeah so cool question so let me repeat his question so as a user why I developed my program in awesome right why not I directly build on top of ethereum using evm right yeah so I think to my understanding is that um we totally agree that everybody want to I'm also a developer everybody wants to build on top of ethereum directly but so everybody also analyzed not everybody can feel the top of ethereum because gas limit on the high low competition power so there are also like lots of Layer Two happened that appeared and they choose to build on top of them but we think so General I think the general idea is that if we want to unbox the next meeting user for app3 we need first we need to unbox the next million developers but even though like most developers website they choose to build solidity in evm but it's like compared to the whole developer world it's still a very small amount of developers right I think it's uh definitely less than one million I think or World War I see I forgot but compare with Watson so one support plus support C support JavaScript assembly script right the word rust so it's more Universal it's language agnostic most of the developers invite in web 2 they choose awesome so that's why we don't want to change the habits of developers yeah definitely they can build on top evm ethereum or arbitrum or polygon probably fine but like if we want to have more people come in we we need to enhance this evm so that's why we add Watson we didn't replace it with Blossom we added so they can more people can onboard and have fun like in crypto so so when I do a transaction part by default um it's not by default actually so you can optionally you can choose to find the aspect or not it's not defined up to you you can directly build your smart contract just as ethereum and don't use this awesome code totally fine yeah but you can also like ah this to us back to the throughout the transaction life circle yeah okay so if I have an intent then I would probably write a program on the bottom layer which would delegate to the yeah exactly so the amazing thing here is that even like even beyond smart contract um Aspire can can solve some additional Logic for example like amm smart contract it is the EM only console amm problem but they are like who contract is for limit order maybe or maybe other other cool contract right so this can solve something beyond smart contract so that can be the same intent or different intent yeah so that's why we call its module the app or or maybe I should now use the word internationally it's an abstract word it's just pull forward by the Paradigm but before that nobody said it if you know the idea is that maybe I use the internet yeah no no worries any other questions if you know we will like Grandpa here okay thank you 