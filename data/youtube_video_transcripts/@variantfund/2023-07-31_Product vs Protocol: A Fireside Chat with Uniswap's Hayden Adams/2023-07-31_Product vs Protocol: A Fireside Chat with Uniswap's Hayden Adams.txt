foreign thanks everyone for joining Hayden thank you so much for for being here I know you're super busy and it's like a especially busy time right now at new swap Labs um so much appreciated I'm gonna start I guess um brief intro on Hayden I don't think he really needs much of an introduction everyone here probably knows him as the founder of uni swap labs and also the uh creator of the unit swap protocol um if I'm not mistaken Labs was started in 2018 the protocol is one of the most used if not the most used in all crypto at the application there before being in crypto you I think we're working at Siemens and sort of like a telecom kind of engineering role um and and the origin story of of unuswap itself is also interesting so I thought maybe we could start there about you know sort of your journey into crypto what were you doing before and how did you how did you get into the space in the first place yeah for sure um so you know in college I studied mechanical engineering and the first year after college I worked at Siemens basically doing uh it wasn't wasn't until a conference actually computational fluid dynamics but basically studying heat flow and doing heat flow simulations for car designs which maybe sounds interesting and exciting but it was actually incredibly boring well working computational fluid dynamics I'd say that Island's probably not the best employee I think maybe actually the starting point was I didn't really enjoy it it was pretty boring um even though it doesn't sound it and just like wasn't very excited and you know fortunately got laid off about a year out of college and my first job and I was like looking for something to do and I had a friend from college Carl who is currently the CTO at optimism but at the time he had been working at David foundation and doing proof of stake research and we've been friends for a while and he just like was obsessed with ethereum and convinced me that you know ethereum was this really interesting cool new technology that was going to be a thing and would be like you know the future of how finance and the internet worked or at least could be and that it was kind of like that like no one knew how to do smart contract development at the time that it was like a really early Niche skill and so I decided to learn how to write far contract on ethereum as like a way to you know change careers to to try and learn something new and to to be a part of this ethereum thing and so I spent you know a few months learning how to how to write solid basic solidity smart contracts I had learned like tiny amounts of code as part of mechanical engineering but really like Matlab and like like very basic stuff um I didn't open this whole background uh but no my just after learning like Basics and Squad contracts I really just felt like I was like stalling in my ability to learn more and again had like another call with Carl and he was again kind of like well the thing you need to do if you need to take on a side project you need to actually try to build something you can't really learn just like you know watching YouTube videos and experimenting on your own and so really you know uh was looking for a project to start on and had a bunch of different ideas but ultimately you know settled on on this blog post the vitalik had written about like a new way to do exchange on ethereum and I thought it was really interesting to me that the area was cool and interesting because you know this idea if you could build applications that no one controlled that anyone could use that you could that you didn't need to trust anyone uh because all you needed to do was trust the code and so that the earliest idea of unisoft was just can you make a you know a smart contract with ethereum that lets you trade between cryptocurrencies in a way that it really embodies those properties of ethereum um like true decentralization and so decided to go to the side project um story will accelerate after you're looking there but uh really just from there I spent the next year building out from like an early proof of concept got a grant you know once I got the grant it felt more real and I just like took that concept kept building on it um during that time I started going to a lot of ethereum conferences so while building unislop sort of as a side project just went to all the crypto ethereum conferences I could just made like a lot of friends in Space the early ethereum Community was really cool and interesting and everybody was still together tie this was you know post 2017 bull market this is like crazy bear Market Vibes and it was just like the people who are still working on ethereum really cared about it and were really interested in it um it was like a really good community and uh you know spent all the grant money on Smart contract security Auditors and on contractors to write designs for the for the web app and then launched it as a solo you know project in November 2018 uh Unison Labs actually did not Farm until spring 2019 when uh so you know after people started to use V1 in the early days they got that initial excitement attraction uh and then basically form the company at that point yeah I I want to highlight one thing you mentioned which is the the Dynamics of the market as an overlay to the origin story of uni swap so like I think the timing is really worth going on for for a second longer here given sort of where we are in crypto right now where we're similarly in in you know the depths of a bearer Market where um folks outside of crypto are are sort of pronouncing it dead and you know um I wonder if you could maybe just expand on that just a little bit um you know your your perception of crypto post 2017 bubble and sort of the the Dynamics at play like in in the community during that time that you were getting off the ground yeah I'd say that like you know ethical from like 1400 to like 80 I'm not a big like priced person but uh generally it was like a lot of Despair and I think that at the time there was like no a lot of the 27 hype was built on these like icos and everyone thought like Ico like there's like all these crazy projects people are going to build really cool things and then like some of the ice SEO projects did ultimately build cool things over many years uh but a lot of them also didn't and a lot of like the hype was over promised and so I think that unit swap was a little bit of like the anti-hype project where like other projects raised massive amounts of money and then promised a million like the world and then delivered like you know really shitty uis with like kind of smart contracts that often had like centralized back doors and all that and um had been like hyping themselves up for years and then I'd say that uniswap at the moment of launch most people hadn't heard of it yet I had like I announced it on my Twitter and I had like 150 followers at the time and you know hadn't done any publicity around it really other than like going to conferences and talking to people in person and so at the moment it launched it has like had like a complete front end a complete you know like the smart contracts were done and live and audited the front end was done and live and you could use it and you could add a tote and anyone could meet it so it was like immediately useful and usable and no one had heard of it before and it kind of um basically like contrasted really heavily against the projects at the time um uh and I think even like the fact that I didn't have a token at the time was like very uh it was sort of like the anti-hype project where it's just like oh it works and it already exists and I can already use it and then I think the other part where the bear market so I think that was exciting to people is like I think the other exciting part was that like having something that like was gaining like people started to use it and the volume number started to like creep up and it was the early usage was from projects that were like struggling to get listed on centralized exchanges um or struggled to create find market makers who create liquidity in them so they had very low liquidity on sexualized exchanges and so having this ability to like self-serve uh to list and create liquidity um act then in the early days was was really huge for a few projects and so I start to get these an early usage and adoption having like a a chart that was like going up uh even like the unisop usage chart with like the only like up chart at that point time and everything else was like was like down and so like it kind of like was like a rallying cried point for like the early ethereum community of like do something that actually like is working people are using it um it didn't over hype itself and and so that was where like a lot of this like initial excitement and adoption and and uh and Community like support came from totally yeah I remember that and I think that is one major opportunity in Bear market so like if there's something that's growing in a bear Market you can you know you can you can point to that and get the support of the whole Community behind you because crypto needs wins under his belt um so yeah you mentioned like it was just you at the outset can you talk a little bit about the early team that you built out once the company was formed um and sort of what yeah like if there wasn't any intentionality around like how you built out that team and what the focus was um once you did yeah and by Jeff me I mean that was the only like full-time person I'd say that like it was it was I had so much support and like uh along the way and there's a whole blog post on that if you Google like it so I said you know swap but um once I formed the company in Spring 2019 raised that initiality around the uh the first two people that I hired one was Noah uh he was a you know small contract engineer had been working at another crypto project uh but really could do smart contract and back end yeah I'm sorry and and front end back in kind of like a full stack of crypto uh but but specializing especially about contracts and then uh Khalil and Cleo was you know someone actually knew growing up a childhood friend but also he had helped even in the early days building out that initial demo with the grant funding he had you know he was one of the people I paid almost as a contractor and he also like went to plenty of his own time to it and helped develop he helped you know work with me to develop that initial UI that we lost with um and with their the day of launch and so those were like the first few hires is you know full stack engineer who specializes bar contracts and uh designer you know designed in insanely talented designer who also had some like front-end development shops as well and would contribute to code base directly and that was like the the team for maybe the first four or five months uh that we added Ian as it went with like full-time front-end doubts and then that was like for the next year that was basically like the the there was there was um you know people who helped out a little bit as an advisors and Nash helped out and um but and Moody joined uh a little bit later but that was like that sort of initial crew um in that you know you know building like from going from YouTube people wanted to use coffee too it was basically like me Cal Ian and Noah yeah so I I think one of the things that's notable about unisoft sort of origin story is that is that UI that you shipped on top of the protocol the the first sort of product on top which was really beautiful really simple you know nope you know to this day not much has changed in in the like core UI and I'm sort of being intentionally reductive and of course A lot has changed but the core of it is um is is kind of the same which is to me is signal that it was um it was sort of the right um design the right product for for the job and um so that's a theme that we're gonna sort of get into further in the course of the discussion is the role of product versus protocol and organizationally how you how you guys have tackled that as as the Project's grown um to tee that up I I wanted to introduce this um this the sort of uh concept this business sort of theory um popularized or maybe even um had sort of labeled by Joel spolsky so there's a great great blog post on this topic of commoditizing the compliment by Joel sploskey um and the the core of this idea and something I've written a lot about as well um is that you know in in business um you are generally better off if you are able to commoditize your compliments so by way of the example if you're in the business of selling cereal you want milk to be an utter commodity you in fact want milk to be free um because if milk is free and widely available you'll sell more cereal and another another good example of like printers right if you sell printers you want you want ink to be incredibly cheap because if ink is incredibly cheap um presumably you'll sell you'll sell more printers um and so I I think this this kind of framework is interesting when applied to crypto because I think one one way to think about protocols and products is as complements to to one another you kind of you need both um and um arguably you need you need both the different degrees at different times and the trajectory of each uh a product and protocol respectively so I just want to sort of put that out there as a framework to a backdrop to our discussion right commoditizing the compliment is is a is a well understood business Theory and strategy um and it may have a role to play in crypto um and so you know I think again one of the things you did early on with uni swap is you built this protocol and then you built this really beautiful really intuitive product on top and you ship both at the same time and the product was given away for free um I'm curious if you could just talk through the sort of init like the initial thinking maybe it wasn't as sophisticated as as I'm making out which is probably the case right maybe you did think about it but what was the sort of initial thinking of doing both a product and protocol in their earliest days yeah I think there's a lot of different angles to it and I can I'll just try to you know talk through as many as can immediately I've had but um to keep going I think that uh definitely you know in this like initial proof of concept demo stage it was just like practical like I needed to demo this this software I need to demo this protocol so I need a UI to demo it with I think there's like that it kind of like started out as just like part of like the process of demonstrating what this project was and what it could be um I definitely think that like one of the things that I didn't like like maybe I don't also have like that like the trading background uh like I obviously at this point understand you know trading Market but I think in the early days it's like some new way to trading and the like user experience uh for at the time ether Delta was like the the main decentralized exchange it just felt so cluttered and messy and complicated and it maybe like felt like that was it was hard to know what first what like was it methane and and complicated and bad UI because of the structure of an order book right uh or was it messing complicated because it was like just a bad UI and I think when when working on unislop right part of the thing is you know in addition to like it being decentralized it was also like slightly of a re-look at how Market structure worked and so I think with that it kind of naturally intuitively made sense to like experiment with different potential designs for how to interact with it um so I think that partially was just like as we're thinking about like amms and their place in the world you know it was there was also this like well how will people actually interact with them and I think that that was like really you know I think that like it was hard to know it would be it would have been hard to someone else to like work on that problem at the time because they didn't have necessarily the same level of like intuition and sophisticated intuition around amm right like you kind of need to know what a name was and how it worked and why it mattered to like build the liquidity provision UI and maybe not to build a swapping UI but like the liquidity provision UI we need it and so I think that there was like it was just like an early thing that was like on my mind as working on new swap um was definitely very fortunate to reconnect with Cal it was just such a talented designer um I think that I also personally like product development practice on uh as much you know I like barthol development as well but I kind of like them both personally so I think that like maybe just part of the reason it's just like I also enjoy it um I'd say that like there was an element where like there was some precedent of like zero X was did exist at the time and zero X was taking a completely opposite approach where Xerox was like um they were like mainly marketing and developers they said they weren't going to host and build their own UI they were just gonna rely on other people to build their UI right there they had a few UI like radar relay um I think for me one reason that I like building at multiple layers is the stack is that if you don't you sort of like don't you have like you start to like run into issues at one point where um like you you start to run like there's like this you don't really have like you it's hard to think holistically well like like you just have to think about the abstraction layer that you're creating when you when you're creating products and protocols right like you could think of like the the smart contract like before we today we have a back-end team but back then it was just front end and smart contracts right in the front end directly into the smart contract and so you could have thought you could think of ethereum as like the back end component of the unisoft system and the UI is like the front end component and it's it's sort of you know it would be sort of like you know definitely there are companies that are solely developed solely develop apis in their companies that slowly develop you know user-facing product to consume other people's apis um but I think especially just because of the like nature of like crypto and and amms where they're like people are still trying to figure out how people are going to use these things and it's very easy to like be like oh that's not my problem let me just like think in this constrained box but if you're doing that you're sort of risking that like other people like it's so easy to be like yeah oh other people will figure out how to make a good UI on top of this product on developing um but what if like the UI protocol you're developing like isn't the right thing to build a good UI on top of or what if like building the right UI and topical requires the protocol level expertise needed um so like I think that like today right like there are other uis and other uis have gotten better but at the time of the initial development uh due to like the novel nature I don't think anyone else could have built built um uh maybe the other thing I'll say is that like the the velocity going into the protocol like to the product um was just like making it easy and simple to use I think that like crypto is already like complicated now like there's a lot of like mental models people need to learn people need to learn like new interaction patterns people need to learn how to manage their private key like there's already a lot of things people have to learn and I think that like sort of I think this is just like a general philosophy we have eaten sub Labs it's like making things as simple as humanly possible like almost at any at every front like you know starting from protocol development to like you know a developer experience it when possible to to um to put the products people are using just like the easier it is to to use something and interact with it the better um and crypto just kind of suffers from like people not being very sensitive to users needs and so I think that like having a user-facing component to what we do just makes us like that much more like kind of able to to uh more directly solved user problems and and uh something that we've um only just started to like like something and it started to like bear very interesting like results in like now that we have like a mobile we have like a mobile wallet now and we have a smart contract team and we have a Batman team that we have in front we have all these different and they're starting to like kind of um like there are like things that we can build at a smart contract and protocol level that like make our like wallet better and there are things that we built and and the things that we learn about what works our users in our wallet level is like informs like their smart contract to develop and so I think that like there's this like really nice um people just like don't know like it's just it's so hard to get into crypto and use it and so I think having that like uh that depth and breadth is like been pretty helpful at Labs but it can be hard to pull out and there's downsides to it as well yeah I I think the you know the the main sort of thing that I think is so special about this story and Labs today is you know in in what you're saying is such as like you were the first consumer of the protocol as the application on top and then in building the application you you were anticipating sort of your user needs and and that in turn informed the actual you know design of the protocol and that's just a really nice flywheel where if you take a sort of user-centric view and and start from the end point which is what like problems does this protocol solve for user you and and try to design for solving that problem in the UI on top you very quickly get you know great insights about whether or not you are in fact solving that problem in the best way possible and you know you can evolve both the the product and the protocol um respectively to to to to try to solve that problem and and I think that's very key to the earliest success of unit Swap and I think it's also something that I had sort of you know watched you uh sort of imbue to the organization the project as a whole as it's as it's sort of gone on to multiple upgrades and multiple new product lines um and so sorry go ahead oh yeah I just yeah that's uh like that and like it's also just like it's very easy to like be like not my problem like you know the UI layer will figure it out but I think that like we're just not a team and project that like likes to kind of like hand wave like the like the problems that hold us back the most like that's why we got to like the wallet game as opposed to just staying at the web app level it's like the like the vast majority like we created the support team for our web app you know to make sure that people who are having issues had someone who could have people they could reach out to and the vast majority of our sport tickets were like you know related to bad wallet ux and you know we couldn't do anything about that other than like you know go to all teams and be like hey can you improve your products and again the wallet the whole ecosystem is really great but like getting into the wallet space has allowed us to like really like like like it's just like um yeah again it's like being your own first user but also like kind of uh just like making sure that you're solving your biggest problems because like you could like we can have the most efficient protocol but our most efficient protocol isn't you know going to do anything if no one can use it and there's no good like UI until like even like having like our web like our web app doesn't need to be the only one but having an example of a good web app important for other people to learn from that like you know you're you're because yeah anyway but yeah and I think it's it's also important to call out while you guys have gone sort of vertically up the stack and and built closer and closer to the end User it's it's still the case today that like the vast majority of volume going through the uni swap protocol is actually coming from third-party um applications right so there is this ecosystem of third-party applications that have integrated the protocol and and so I think it's important to call that out especially yeah you know right here as we're talking about uni swap going vertical because you know I think an important question is well how did that how did you get this like ecosystem of third-party applications to integrate while also sort of building your own first party um so again I think this begs the question of like what is the relationship between product and protocol especially at the earliest stages when you know when you're bootstrapping yeah and like a lot of the UI the alternate UI unit swap are essentially using four versions of the initial UI that we created and so like I think that like even speaks to like having that initial UI was actually very helpful to helping the the broader ecosystem take off in terms of like GameStop growth the ecosystem growth generally like I will say like it's not like we spent money on marketing right it was like a lot of very natural organic growth that happened um it's since the very fairly very early stage and that happened like at the user level with like you know like there was like you know the earliest projects were like you know tokens like mkr and and and and and Spain because you took it that we're like having that like didn't have other good exchanges and um when it came to like I think one of the reasons that like this this developer ecosystem started forming it's just like I I think it was a combination of things but really like it's a protocol that's useful and for a lot of different projects in a lot of different ways and so now and I think that like the the amount of tokens the amount of projects that were like on on the platforms just started growing so much around the protocol that really liked people needed needed tools and they didn't all exist right like we didn't have the ability to build like everything at once but it was a very small act it was you know like two or three people and we were building in the second version of the protocol and didn't have until like unisoft.info right right it's just like info analytics site which is maybe a little slow at this point and then need some work but um the very first version of it was built by like a Community member it's just like they wanted to add a Linux for the project if they built it so I think having like this like the just like the nature of the I think that like something that's like really key here is that people are very like hesitant to build on top of like closed ecosystems like you know like if you build on Twitter and then Twitter maybe the better the one of the day is Reddit right like if you're if you're building uh like an alternate UI to Reddit and then they rub their API then like your whole project is dead and I think that's what's so cool about unislap and uh D5 more broadly and ethereum more broadly is that like other people can build on top of unislop and compete with labs and not you know they can build alternate UI they can build alternate products and they don't have any risk that us at the creator of the protocol will just like you know kick them off and so there's like this like ability to compete and and I think that that's been like really key and so I think that like people felt safe building their projects on top of uniswap you know all the aggregators all of the all the uh you know other uis uh wallets Etc that you know started integrating other protocols right they don't have to worry about like counterparty Risk right which is which is one of the key benefits of D5 um so I think that that's like one interesting side of it um yeah and I I would maybe pause it one one other thing that I think is is critical and again it's sort of a path dependent um sort of sequence of events that that uni swap sort of uniquely executed against which is you build the protocol you build this first UI on top as you said the UI made it really easy for both you know users on on sort of the you know demand side of the market and on the supply side of the market to interact with the protocol and the result was you got some initial distraction like an initial liquidity and in the case of uni swap that liquidity that gets sort of a network effect of you know the more liquidity the better the product gets for for Traders and so on um and and so I I would go so far as to say like your initial product made the protocol a good place to trade um right and that in turn brought third-party developers to the protocol because it was a good thing to integrate rather than sort of bootstrapping from scratch so I I think that that sort of sequence of ship the protocol ship the first product bootstrap liquidity and hopefully there's some kind of network effect there that begets third party development that compounds the protocol Network in fact that's a I think a very um sort of you know cogent strategy that that hopefully is repeatable by by other projects as well yeah that that is I think it's all very well said and I'd say that like one very key part of that order of operations is like I think that shipping the product also like helps you know if your protocol is useful and people actually want to use it and yet it's like just there's like and I think that sometimes even like the incentives of like the ways that people try to boost up liquidity can hide it um but there's like a I think incentives and even like the liquidity mining scene all that stuff like interesting and useful generally but like I think that like just very key steps of that process are like making sure that there that products on top of this protocol that you're building and you're building a protocol at like some level of demand and interest and usefulness to some group of people uh especially before you incentivize it because otherwise you don't really know if it's useful and you can and once you know it's useful then like Yeah by all means like start Computing and incentivizing but um I think that like where are some projects in the space sometimes go wrong it's just like not really getting like level like a true level product Market fit before like launching a token and going going all out on token incentives and then then like it might work for a period of time but then how long is it gonna work for it you know it really like standard the test of time yeah my my sort of writing on Progressive decentralization I think was largely informed by the path you just described which is you know build build a product build a protocol build a product that people want um make sure it has some kind of product where it's it and then start to think about Community ownership and sort of effectuating that over time um Okay so V4 was just announced uh about 10 days ago I think um you've we've touched on um you know how you've taken a user-centric approach to designing both protocols and products um would love to hear you talk a little bit about the thinking in the four through that lens like what does V4 enable for you know for users whether those users are Traders or developers or market makers um and anything you want to share around you know what labs is working on on the product side um specifically as it relates to the four or more broadly yeah um yeah let's see where to start so I say that like I guess on this that was before and what it is and um super quick overview but basically you know you swap I say that like I'm going to see what people now use V2 V3 V2 super simple and B3 and this concentrated liquidity thing but we'll just pretend everyone knows that if that works um and then uh I see that like Unison before the process of building an AML is like a process of much uh much debate over trade-offs and uh much much by chedding and it's essentially that like every decision you make in the process of building your protocol your amm uh it's like a trade-off between different like like they're like the canonical like easy example that we use like the Oracle the Oracle for such an interesting feature for v2 and V3 they provided like this like public good for the entire space which is like other projects could other on-chain protocols could integrate on-chin price Deeds that like had some level of robustness uh and decentralization uh if there was enough liquidity in the pools and wasn't perfect but it was like very useful for a lot of other projects and the theory was that like that would ultimately uh you know create greater liquidity in the platform in in the protocol because people would you know build integration to using the Oracle they want the Oracle to have a lot of liquidity and be powerful so they you know recommended that the place for trading or they deposit their own liquidity um so it was sort of like this network effect aspect of the oracles however there was a downside to the oracles which is that the swappers had to be Gap cost uh to maintain them it amounts to like something like you know somewhere like 50 like something like 15 of gas costs of swaps is like updating the oracles and you know is that worth it um very very unclear right um you know it's probably like maybe it's worth it on certain rules where like the oracles are like used a huge amount and they've created a huge amount of liquidity um but really again only for swaps where like like that additional liquidity is worth the additional Gaff cost and it's like there's like there's always this like trade-off space uh and then there's like other you know another thing that like um came up with like just generally like anytime you want to add a new feature it adds more gas costs uh or it adds more code complexity and this was just like constant while we kept hitting we got a lot of ideas for where we could take amms how we could experiment with them what we could build on top of them and every single time we'd run into this like complexity trade-off space and it was almost never worth it to it's never worth it to build an entire amm to experiment with one amm teacher um and we had ideas for for what we could do with before but the most annoying thing is every single time it was like well it's not worth it or not and uh you know another example is like the fees like Dynamic like and so like with Ubisoft before we we built this this you know plugin slash module system that we call Huck which really lets people modify certain aspects of pools uh in pretty expensive ways that allow you to like really customize and add on features or modify parameters of the pools and it means very meaningful ways that allow you to experiment with with amm design with pool design with like new types of Integrations and and product on top of it but in way but but without having to like rebuild a name around from scratch each time and in a way that like uh I'd say that the other kind of uh component here is just like in the more liquidity gets right I went to the Cross rules it's like this cost of aggregating it but if you're like in a in a world with no Gap then then none of this matters but let's say there's no no Gap like then you oh it doesn't matter it doesn't it matters a lot right because you could just like perfectly split your trades across all as many pools as you can and it's like efficiently aggregating them and you can benefit from the liquidity in like an aggregated setup equity in like a in like a the problem with um with that though is it like there was actually a it's very specific cost to each additional liquid equal that you're using liquidity from for instance in the trade and so the kind of other main benefit of unislab P4 is it's like pooled Singleton model where all liquidity pools live in a single contract and that reduces the gas cost overhead to um to liquidity fragmentation it doesn't completely remove it like there's still a cost to it but we're moving to a world where there can be a little bit more experiments happening um and there's like a reduced cost of aggregating on them and the last kind of thing I'll say on that I should come back to the initial thing of that but um uh last thing there is just that um there is already fragmentation happening because so much Innovation because people can't easily like modify how unusoft works um at a protocol level this experimentation is already happening it's just happening external to unislab and so part of what you saw before is about is not just like more experimentation with immunoswab but taking experimentation that happens today external genius Swap and bringing that into the unisoft ecosystem and having it happen with Indian swap um so and then the actual cost of like aggregating uniswap with one of these other custom name ends is actually lower than the cost if it's built externally because if it's shared uh Singleton model um so there's it's sort of moving the protocol more towards being like a default developer like amm development platform um you did ask about the relationships and yeah let's come back to that in a second but I just I want to sort of um reform on what you just said so this earlier today I was giving a talk at um Bankhead Rao's uh summer protocols Fellowship but which is being hosted by the ethereum foundation and I was talking about another framework um which is um protocols that are that seek to be complete versus protocols that's to be incomplete and I I first wrote about this in like 2019 and I use uniswap D1 as an example of a protocol that sought to be totally complete so those familiar is like x times y equals K that was the formula and like that that was the amm design right and it worked really well you couldn't change it no governance right like just a just a totally specified protocol and of course in in you know the benefit of mindset we can now see that while that initial design was you know trying to be complete and fully specified it was incomplete in the sense that the world evolved around it and you've shipped since V2 V3 and now V4 and I think like one of the key lessons in what you just described about E4 is you you still maintained this like drive for the protocol itself to be complete like the governance is not taking on some outsized role in the protocol in V4 it's still a minimal governance surface area the the the protocol itself is fully specified however this specification leaves room for third parties to experiment and sort of and you know involve the the protocol and for the market to decide um on on sort of what the most exciting or interesting Evolutions are and I think that's a really powerful um sort of design principle that that was again giving as an example today of combining like the this property of completeness trying to specify the important things in a protocol and make them kind of difficult to change while also allowing for surprise and sort of innovation that um what I would class other projects that are more incomplete typically through governance um try to experience like Foster experimentation and dynamism through um that kind of more subjective or human decision making this is a Best of Both Worlds letting the market decide on the modular components that are most interesting um yeah yeah uh yeah on that I'd say that like I wouldn't start like I'm glad we started with like a Martin Kane scope simple project I definitely think that like if I tried the building before in 2018 2017 it would be like insane it wouldn't like um I think it like it made sense like it was like Ultra simple each version got more complex and like we learned a lot from each one and so I think that like but yeah yeah like totally agree like I think that like part of V4 is often just like an acknowledgment that like there is no single best a m designed to know single best Market structure and there is a complex trade-off space in that like not exposing it just means that you're like leaving room for like all that experimentation to have it outside of the ecosystem and so it was sort of like a requirement to keep like continued Innovation uh to keeping this off at like the Forefront of innovation in the space it's just like opening up the the World opening up room for experimentation and um yeah yeah okay so I want to make sure we we have ample time because there's a lot of questions in the chat and people sending questions before well that's kind of speed run this stuff so that the remaining stuff here so one one thing we haven't touched on is um well maybe just to wrap up on on like protocol versus product you got you mentioned the wallet like what sort of the purview like what what is the lab is building around the protocol today and and that's a segue to another question which is organizationally how are you doing that within Labs what does the org look like to support protocol and product development respectively okay and I'm bad at speed running but I'll try um I'd say that you know generally speaking we have I'd say that like we have you know the main product that we have today so we have obviously the spot contract protocol we have um you know a bunch of peripheral smart contracts that we've experimented we've developed we have like developer tools that we've built but kind of like the main things are like smart like the way that the labs is even organized we have like front a front-end team which is currently divided into like the web app and uh the wallet and the you know the web app uh is is like the most used app right we have like millions of users millions of monthly users and you know it's really a focused focused experience around like swapping between tokens uh or you know providing liquidity to Pairs and we started to add on new features and functionality with the nfts and and other stuff um but most but it's really like you know a place people can go to to Really buy and sell you know all of the erc20 tokens um no not all of them but but many um then uh you know the uh I'd say that the wallet again came out of this like as we were thinking about like how do we improve the the code like the funny thing with you to stop is that like it was sort of like a lot of people you know cut like uniswap is their first destination in in defy or in crypto or in self-custody it might not be their first like usually the first destination crypto or something like coinbase or binance you know buying needs or buying Bitcoin and then from there you want to buy something like you know some some year C20 token uh you know usually at that point you're like oh what if like you start to learn about English Bob and then you go to your web app and what used to happen used to be like oh okay now you can go to coinbase to you oh you land on yourself go to coinbase buy some crypto go down to this Chrome extension called metamask send your crypto coinbase to metamask and then connect your metamask the Unix lab and that was like an insane Journey for youthless to start we wanted like a place where you could be like oh no you just like download uniswap you can get started from scratch right there I had this you know so we we now we have this mobile wallet um the combination of like this like user Journey like people want a game for unislab and we like pushed them out to like a bunch of different user experiences and uh some people still want that we still support third-party wallets of course and we always will but you know having like oh you came for uniswap here's here's how you get started with new slab download uni swap wallet and then oh and then like oh you want to buy crypto there's like yeah built in and so I think that like the the sort of pieces start to come together we you know yourself is like people like our web app was the first step in making people's Journey actually I'm not speed running I'm terrible to be running I already told you that um and then uh and then uh I'd say generally like well I think something that's starting to happen at Labs is that you know our our wallet and our web app are kind of like coming closer together like you know some of the recent updates and features to the web app are actually just like views that we had in our wallet that we pulled out into the web app right there's like this new like portfolio view uh you can click on and click on your account and that's basically just like the exact view you get when you open your wallet but sort of coming up as a sidebar on the web app and you know the same way that like today like coinbase had like a coinbase mobile and they have coinbase web I think over time they should like come closer together and it should feel like more like oh it's just uniflap um with like wallet having functionality that's a little different web app certain function is a little different maybe more data more more data reviews Etc but um really like we have this like core consumer like trading you know consumer like I want to buy and sell crypto um uh product which is the web and mobile app and then we have this this Unchained spot contract protocol which is meant to be like the best you know the best amm uh and it was V4 really almost like AMF born and then we have this like backend layer which is just like how do we make our web app and mobile app like performant and have like up-to-date data right that you know it used to be like we could just like have our front end connect directly to our smart contract and have that be like performant because there wasn't that much happening but there's like so much data that someone you trade there's so much you know so many tokens that uh well you just need like this like API layer for for you know essentially for performance and it's it's about a hundred how many people at Labs today yeah yeah Labs is about 100 people it's probably a little bit more than half Engineers maybe 65 Engineers it's the engineers out of 100. um generally it was a breakdown how does it break down product versus protocol yeah so you know the protocol I mean protocol engineering it's actually relatively small it's like 89 people um who who you know work on Smart contracts which again V1 was just me you know V2 was like me and Noah B3 was like me no Moody you know so like the earliest version you only you don't need like that many Star project Engineers um definitely now we have more and partially because we're working on more projects at once we're updating our routers we're updating you know we talk uh the the move out to the words we're working on before we have a few other fun stuff in the works on the smart contract side okay Ken uh nothing nothing to no news to break today um but um the the protocol the engineering team is like relatively small and then we have like um maybe like 20 or so people on the on the consumer facing products um you're a little bit over 10 on like the back like uh back ended like you know something like 10 but like we we definitely generally speaking like are heavily very heavily already productive engineering and design we have like very very small themes for stuff like legal and Communications and marketing and all of that stuff you know only just started to get Bartel at the marketing for the first time with the mobile mobile wallet um and you know historically to date it's all just been um organic growth and so we're starting to experiment with like with other you know policy even but um uh mostly just focused around yeah I think it's I think it's it's interesting the protocol team is is relatively small and like organizationally so much more weight on on product I think that's a great place to park it um thank you very much for coming on I think this was like you know we could have gone for many hours and this app like was packed with tons of insight um a lot of stuff that I think is generalizable to the next generation of people building in the space um so thank you thanks for coming on and for being an inspiration to to us and you know to others who will view this in the recording yeah thank you for for having me and good luck to everyone and uh yeah great great talking 