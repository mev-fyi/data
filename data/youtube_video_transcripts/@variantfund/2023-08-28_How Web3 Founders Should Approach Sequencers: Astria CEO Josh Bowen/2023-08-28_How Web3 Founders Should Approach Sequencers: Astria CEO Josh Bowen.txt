foreign hi everyone I'm Josh I'm the founder of CEO at Austria we're building the shared sequencing Network who shared secret things speed running the end game so this is stealing a um you know live from John charbonneau's I think most recent post maybe second most recent in the post but generally the question we're going to try to answer here is like what is a sequencer um and so we'll use this very rough model here for like how block they're produced in a blockchain and this is kind of the same whether it's a roll-up or not we can add some extra things but generally a transactions come into a men pool I'm going to abstract away whether we're thinking about a P2P Network or whatever we're just gonna say there's somewhere the unordered transactions from users go these are assumed to be signed by a user some process by which these transactions are ordered into a block and some process by which the transactions are executed that's going to update your state database and give you a resultant State Route probably a Merkle root whatever vertical tree um you know kind of pick your poison there there could be four roll up you know an additional step of posting data to a You Know da layer or you know whatever you want to call it you could also generate a proof um using some kind of you know DK method and post that too you know we'll just use the term settlement layer here um but not kind of relevant for this talk here so when we talk about sequencing and there's kind of some distinction here generally for like the contents of like this talk we're talking about just the ordering stuff and this is going to track with at least like arbitrum's terminology if you read through the Nitro white paper they have a nice section I think it's section two where they talk about the distinction between ordering a block and and validating it or like posting the state route to a given settlement layer for like a bridging thing to essentially make an attestation to a like client over what the newest updated data is we're just talking about the ordering step and sequencing we'll go there's the execution phase um some like optimism saying I'm not sure they actually specifically separate the terminology um in that you know generally right when you think about a block being produced you think about ordering the transactions in the block and then actually executing no transaction through whatever your kind of deterministic state machine is but again for this talk we're just gonna think about ordering um so why do we have a sequence here here right fundamentally it's because of speed right um there's now this concept like base roll up it's not really like new this has been discussed for a long time of the idea of well we'll just post a transaction to the you know base layer the da layer whatever you want to call it directly and then there will be some out-of-band process by which a node chooses to pick up these transactions which are probably serialized or compressed through some format and they will essentially be from the base layers perspective um context-free and that they're just like raw bikes to that base layer you know call data on East um for Celeste you're right that's just the only way it can understand them right um and then you have some out event picks up these transaction and you know again orders them um it could use to inherit the ordering of the base layer um if there's like a contract on chain that has like a fifo queue or however you want to do order pick on your base layer um and then it actually executes them and update the revolting State Route and then that full node of that Rolex is where end users actually interact to get an updated view of the state DB that would be like their RPC connection as well as like a state route to ensure that they're actually at head of the valid chain but what we realized is that fundamentally users like kind of fast ux you know we can you know go back to like the early like 90s research um you know Google half accurate like a lot of good resources on it because they use it for page rank um and because the relevant thing right it's like user generally when they click a button like you get a response between one and four seconds um if you're thinking about like you know a phone or like a local UI you know the latency gets much much lower but generally from a web front end you click a button it takes more than four seconds the user's mind kind of goes they're like oh this is broken it's probably not working so when we talk about this if you user clicks you know it's under the transaction has to wait like 12 seconds or you know that's for one block if it's two blocks it didn't make it in they start thinking like okay I clicked the button did it work did it not do anything I'm gonna hard to refresh my page I'm gonna click the button again right um so fundamentally these roll-up sequencers are providing a speed because how they work in like the existing kind of central life change is that you have a user they submit a transaction to the roll-up the roll-up then takes that transaction gives new version says hey I got your transaction you're good and then gives them the updated block at a time that it assumed to be dramatically faster than a data availability layer right now this is essentially like a fifo queue on both optimism and Arbor drum um gives you a soft commitment back the roll-up sequencer then that's batching to the DA layer there's also some optimization on that patching from like compression um this is relevant to when you think about Celestia Avail eip4844 in cap lob sizing a minimum blog sizing for kind of efficiency of data storage um but then you get a firm commandment so this is roughly kind of how we're going to Model A sequencer at the simplification and it's for Speed right so this is kind of like the current problem as we posted we're not going to focus too much on this but like this is like the joke um right you know you've given using Transformations but essentially like what you've done is you centralize this sequencing component to say that like the valid um you know sort of the chain is only determined by like one node one actor within the ecosystem this is the sequent thing node that is usually run if I like the development team right um so when we say shared sequence thing you know what it what is that what is the terminology here mean um going to like a larger diagram here if we can think about like a user and they submit to like a roll of RPC this is you know okay inferior pocket um yeah whenever you pick your poison of you know RPC provider but this is where you're gonna submit you know connect your metamask wallet connect you know Foundry cat whatever submit your transaction that goes into the shared sequencer and the idea is that to go back to that original diagram uh you have your medical transactions that are unordered that is what is going into the role of RPC although the Nordic transaction the shared sequencer that does the ordering phase and then there's kind of not shown in this diagram because it's nothing a return path wherein an ordered block is passed back to a roll-up it executes it now you have your updated State DV and a resulting state route right you still get your batching to an EA layer four very low throughput roll up this could be beneficial if you're not reaching some critical threshold on kind of like a minimum block size of a DA layer this is more real for 4844 which as I understand relatively large blog sizes and like only like four blobs I think per block but I'm not an expert on four eight four four um this is what we need here right and the kind of key component here is that the share sequencer is implicitly at least in our terminology at the center life sequencer meaning it has like some kind of leader rotation there's not a single node that is responsible for determinate kind of The Ordering of the block or they're rather there is one but it is for a given block time and then at the next block time there's a new meter for that round right um Defender by default uh Meb driven design it's all PBS and this kind of goes into how we think about I guess nav driven sequencing or kind of like uh the mirror with like the 3D uh supply chain at order transaction flow right um broadly we can think of it this is like the full stack of how like an nav PBS enabled roll-up would look for um you have a role of RPC it goes through this mempool again these are unordered transaction you have a Searcher or a builder needs can launch and believe you thought of as like one entity here um and then they're gonna actually produce a full block and your roll-up proposer right this could be a centralized component decentralized this is how like each works today it's actually just going to accept the block about 90 of blocks right now are accepted through this method um and they're just gonna accept the highest bidding block and then it's still going to do the battery you're still going to get a soft commitment from that you're still going to get a firm commitment it just now has any V in the order flow and Doug and I saw your question we can get to that after kind of I do a quick 10 15 minute run through here um if we think about this let me beat supply chain and like a shared contact it's actually for like one roll up not that structurally different again you have a roll-up rpfd your unordered transaction go to a mempool this can expand dramatically but I'm going to try to avoid getting the kind of the back half of I um this talk there and then you have a shared sequence browser again taking the blocks um you know the big thing to think right here's just a quick comparison right fundamentally we're essentially swapping out the mempool and the proposer um the RPC Remains the Same um this is roughly the comparison between like a like a you know centralized sequencer it doesn't have to explicitly centralized Um this can be a uh roll-up specific sequencer um and like a shared sequencer implied with this used by like multiple Roll-Ups right um you know if we compare this kind of the the reason for like this diagram is like the idea is that if you have um one roll up and you want to make a second roll-up you have to duplicate the supply chain right you have to have your choice of many rpcs new new mempool new set of proposers um you think about like the shared sequence they're right you can have just the roll of rpcs and then you only um instincts of the supply chain um I think some of the questions we'll go into we'll discuss kind of the trade-offs and the design spaces within this but there is at least you know um a possibility of like like utility for not duplicating kind of all of the info structure components if you're trying to actually do a very similar thing across multiple Roll-Ups here um so yeah when we say a shared secretary what's kind of a key thing um that it's enabling we argue it's a single place where block Builders can settle multiple Roll-Ups so going back to this slide right you can have multiple Roll-Ups go through the same supply chain and when we say settle it means that you have a proposer that is assumed to Define oh I'm going to use terms like canonical ordering of the chain right obviously they're like forks and whatever but it is for a given four Choice rule that is opted into by users who are accepting this as the canonical Forge from their view um it is the proposer that when it signs a block says this is the next valid Block in the chain per the uh leader selection mechanism whether this is something like you know a Gasper or a tenderment or if you write like a proof of work thing um it is a single plate that it can settle multiple Roll-Ups to it because you have one block that contains multiple Roll-Ups well I think that was a really helpful overview I guess like one thing I want to start off with just like a base layer is like our fellowship cohort is pretty diverse in the sense of like people are working across all the different verticals D5 consumers director for those people on like the application side I'm curious how you think these conversations happening in the shared sequencing area impact them the most yeah I mean there's like really like two options I'd say right it's like are you an application that you that believes you would be um benefiting from doing an application specific roll-up whether that you know running your own sequencer or whether it's opting into a shared sequencer which the argument is that like it reduces the amount of infrastructure work you have to do to kind of stand up you know your live role there's the other category of just um roll-up kind of proliferation or like the development of this could lead to a wider variety of all say VM based rollups and when I say that it's the idea of like an evm or like a fuel VM or a cosmos and VM or whatever specifically a a VM that is ideally not permission but it could be permission but it is user modifiable to update the kind of uh State transition rules of this right something that allows you to deploy smart contracts or something to it rather than something that is only updated you know the state machine broker only updated via like hard forks and kind of native code changes but the kind of uh creation of those may enable new application to be developed um so it generally increases the kind of design space again you can choose to use an application that may benefit from more vertical integration here in you know the VM layer or you could have more novel VM that are more easily developed because the barrier to entry via you know what infrastructure they need to build themselves to kind of get something out the door it's lowered that leads to kind of like you know we'll use you know a trade term like like a cabery and explosion right of development and state machine that may unlock new potential for applications that can take advantage of that got it I guess like moving on to like value capture which I think is like a big part of this question like what are the different business models that shared sequencing can kind of bring about and then I guess like could you talk about value capture more broadly like do you see shared sequencing as the primary way a lot of these like sort of roll up Frameworks will a true value yeah I mean I think when you think about like you capture like it's a pretty broad question it ties into kind of the question for like Nick right on like valuable cruel in the module if that this is a question that's been kind of asked it you know I think every conference that's had like a modular panel for the last year at least right fundamentally how I see value accrue is like kind of standard you know economic thing right like you have a set of parties each of them would like to maximize their portion of the value that they capture um who has the strongest negotiating position that person is presumably going to be the person that captures the highest amount of value so when you kind of come to this question of like oh yeah how are the shared sequence they're kind of like accruing value or capturing value right we also want to think about like who is capturing the the value here right and so when we say the shared sequencer right it's like a question of like the implicit the shared sequencer or the decentralized sequence there if we relate this to like ethereum right you know ethereum could be thought could be capturing a lot of value from nav but really it's the proposers that run know to produce blocks on ethereum are capturing that value you know by and large that money that is captured in oh we see an Mev spike in some validator get 50 each on you know one block they produce because they happen to get lucky that was where you know an Arbitrage game occurred and they were the one that got assign it they're not necessarily going back to like the eve protocol some of that may lead to kind of you know higher demand for Block space and you have a fever and fee capture or whatever that goes ah shared liquid with her it's an implicitly decentralized thing has a similar thing right you know the proposers of the sheriff's sequencer maybe capturing a relatively high value if they're at a large amount of Mev and that's kind of leaked value from ordering um and like information asymmetry generally in transaction submission from an end user to kind of the uh we'll say like I guess sophisticated user a search or an Arbitrage or whatever in their ability to capture that but what we see in kind of steady state is that somewhere in the ballpark of 90 value push it to the back of the stack with the proposer um I think the jury is still out and it hasn't been around long enough nor have I looked at the data to see what things like me b share kind of push back up the stack towards the user they're not a capture but I do think we fundamentally see some kind of balance there I don't think shared sequencers see any kind of large Divergence in this Beyond it is a decentralized blockchain some entity is kind of in short by way of your leader selection rule right we are using leader-based consensus mechanisms one party has a monopoly for that block that means that they are the most powerful economic Opera in this space and they are most likely to capture the bulk of the value here um same as any other blockchain with a leader-based um kind of leader election rule got it yeah that makes sense I guess bringing it back to something that I think a lot of fellows have asked about before is like as the app specific blogspace concept is taking off a lot of dap developers are kind of going towards roll up as a service providers to help launch their rollups um these Services obviously make it really easy for teams that are bandwidth constrained to have their own blog space without having to think about all the like complexities of running one so I guess I'm curious like I feel like these roll up as a service providers are in the flow of a lot of value if they kind of start running their own shared sequencers so I'm curious what your thoughts are on those products and do you feel like they're crucial to like the proliferation of the app specific role of thesis yeah they're crucial yeah yeah they're probably crucial they're certainly very important because they they're still ready right fundamentally they're like onboarding tools right and you know you go from any business dents right and you say okay we want to get new users onto a new paradigm right you want to try to reduce the friction of them doing that right we essentially thought like Arboretum and optimism and you know I don't think anything correct to say that like the amount of resources necessary to get those projects off the ground for the plate where they are now was equivalent to kind of any other L1 project Circa 2020 2021 you know go back to 2019 maybe right it was just very very large multi-round fundraising effort to launch um if we want to see this kind of large n number of Rolex you can't say oh every roll-up that needs to launch needs to go race like 100 million dollars of capital and do like two years of r d work to get it off the ground that's just like not gonna scale that well um so what we want to see from these roles provided very much the same thing we've seen in Cloud provisioning right when people ask about you roll up with a service provider versus running your own validators that you know the analogy I'd like to use they think about like Cloud versus like on-prem right there's no mystery that cloud is charging you like a very high Market I'm biased I worked in like Google Play for like four and a half years like it made it you know paid my bills for like a while right um but they're charging you high March right on like raw compute and store it they may be charging like 60 plus percent margins on that but the reason they're doing that is because you're like a web developer because they want to go launch a website and you say well okay maybe buy like CPU Cycles cost me three times what it could cost me in some Colo facility but I'm a web developer I don't want to go figure out what it entails to go call up Dell get an order on some servers figure out what my load requirements are call up a local Colo facility maybe too and and do all of this infrastructure work once there's got like this available option to say well you could just click a button and yeah you're gonna pay more but that's fine you can just click the button you can think about you know how that's hitting your bottom a lot and your marginal cost later you can get something off the ground and that's really I think the correct and now want you to be here as we tie this into Sheriff they could be importantly like Asteria the first deck that had like the name act three on it with like for like a roll-up of the third I think we call it like roll up SAS we didn't have as clever of like an acronym back then um fundamentally the reason we chose not to do roll-up of the surface was this kind of anxiety over the centralization versus decentralization right nothing kind of like you know you put like a bug bear out there right but like if you're a centralized you know roll up as a service provider and you get like 20 Roll-Ups on you and like the FEC eventually gets around to like learning what the hell a roll-up is right and they come around and they're like hey there's just like one guy that's running like 20 of these Roll-Ups that are doing like unregulated Arbitrage trading on tokens that we view as Securities and they're running them all in like AWS Like Us East in Virginia right they're like yeah we're just gonna like send one letter and now 20 of these Roll-Ups are offline right and so that's like that was our fundamental concern over these roll up as a service providers and I think structurally you could see like a shared sequencer has some kind of decentralized extension of a roll-up as a service provider right if we go the guy the diagrams I was showing right we still have these like roll-up rpcs kind of in the stack and that's similar to what you'd have you know and in theore or a um you know alchemy that would be running on your behalf very similar to what you know your Caldera or your conduit are going to be right right they're going to take you know this op guest they're going to take op no they're gonna take op Bachelor right they're gonna put that inside of like a terraform config probably in a kubernetes cluster they're gonna deploy that to AWS Azure or gcp and they're going to stand that up and then they're going to say here is how you can modify the opgs to do the specific functionality of your roll up right you know we can work just as well with that the kind of tie-ins that need to happen is that on transaction kind of submission to this roll-up node you know your transaction flows rather into the what I'll say the roll up specific man pool it just flows in the shared sequence remember cool and then on what I'll say like what we determine is like the read path internally right it's just when you know part of the crank of like the block kindness roll up because well okay now I have an ordered block I want to update my internal statement representation that just needs to be able to read a block out of a shared sequencer so from like a kind of infrastructure perspective there's compatibility between these things right whether or not we see the roll-up of the service provider if you don't share sequences whether we as like a shared sequence or project be able to lead to go to like build our own role of the service then I think that's fundamentally like a product and a market question because really that who is capturing a user right the roll-up of the service providers right now um by way of kind of doing the centralized option as their kind of go to market right now have um an easier way to go direct to customers and get something off the ground right and so it's fundamentally a straight up like do you build a kind of back end deep Tech and say we're going to build kind of long term and we'll go to users later or do you try to acquire users up front and say after the fact we can go kind of make our Tech and build it into what we need it to be for some long-term kind of Maintenance of all these customers needs right that makes sense I didn't realize that you guys were initially going to build a role as a service company I think that's really interesting I think this dovetails nicely into Nicole's question he was basically asking like you talked about shared sequencers value capture but how do you think about sort of like revenue and value capture for Austria itself yeah so I mean like from the team perfect and this is like a broader question I guess you can say to like any blockchain project right if so you're running a decentralized network like how are you capturing value in it right you know there's really like a token right it's kind of like you know the the quiet part we try not to say out loud right but fundamentally you're running a decent Thrive Network it is doing some kind of consensus mechanism it has a decentralized set of actors by way of it being um this kind of you know again decentralized right it opens you up to kind of attacks by you know um unknown actors right it's like Sybil was an attack right why do we have tokens natively issued in the chains right is because we want to have like civil resistance mechanisms here um you know no one else to my knowledge have come up with kind of a more clever metering system than saying the chain has some internal State mechanism that says you have to pay this much and we just set that as like the floor price you can spam me but it costs you that much and then we get into questions around censorship definition of what is the difference between spam and censorship right and like at some abstract events there's no kind of observable difference um from like how we we value like fundamentally we're building like a network that's how we do we view ourselves largely as any one of these L1 map model things we are building a network we would like to get users whether those you know users are probably like projects rather than you know it's more of a B2B play than like a B to C play and there is really no B to C I guess still an inverse back right but it's less app Dev maybe more roll-up devs whether they'll do the same thing it's still like an open kind of design question um and then the idea is that by way of producing those things you know there is some kind of like pre-mind you know whatever right standard fun you know we're like a venture thing right like standard fundraising model you go to a launch a network You're Gonna Go Rave Capital You're Gonna Fill some future token interest Q some VCS that's going to let you get enough Capital to go build the project you're going to then launch a token those future token interest go some to the internal team some to the B thief and then you get dragged on Twitter by ethereum people uh that's generally how how we run the monetization here oh my gosh that's really funny I guess like the kind of going off of that if your users let's say are like app specific Roll-Ups I'm curious like what are the main benefits for app specific roles to not want to control their own sequencers and I guess as a part of that can you kind of talk through the network effects of shared sequencer networks and the reason I'm asking this is because actually several of our fellowship projects are thinking of building their own Roll-Ups for their apps so I think this is super relevant for them yeah I think fundamentally if the question of kind of like differentiation in like a market right so the question is like do you view being able to differentiate on your sequence or maybe having like a like a better sequencer than one of your competitors as a differentiated Advantage for your end user experience um if you don't then there's a question of saying okay well here is the market price I'm going to pay to utilize a shared sequence there and that gives me infrastructure of this quality with these characteristics and then I don't have to think about it anymore right I do the integration I get on a call with that team I go through their docs I'm you know I'm off to the races um but you had to make some fundamental trade-off space there right because it's not going to be this infinitely complex system that can satisfy all the man you know I think the biggest parameter to kind of think about if we think about like a single parameter here there's maybe two right it's gonna be block time right you know the shared sequencer like definitionally have to have like one block time for all the Roll-Ups that go through it right if you say well I want to have a different block kind than this other roll up then you're gonna have to use a different sequencer whether it's a different shared sequencer that's saying hey we're marketing app a half second block time shared sequence or we're a two second block time shared sequencer right you can choose different ones or you can run your own centralized sequencer on that block time right this is what we've seen with you know say has done a lot of work on optimizing tenurements to have like leave they're looking at like a second block time um because they view that as a differentiated Advantage for their their D5 chance I think they're building look at decks on it but like you know what if they they do the differentiate Advanced compared to other things right obviously it's like Salah has like a 400 millisecond block time they do that to differentiate Advantage however I do think and kind of like you know not not to like show us too hard right there's a large you know range of like Roll-Ups that are valuable by saying oh we have like a one and a half second block time and so do like 15 other Roll-Ups they all have a one and a half second block time and actually we're differentiating on something on the safe machine whether it's we're using the evm but making the specific modification you know a lot like stylist style kind of native you know pre-compile modifications to the EDM and you say we believe we have some Alpha in we've built a more interesting one on the state machine right um or you're saying well we've actually said we're not willing to build what all they like the consensus level um kind of infrastructure we built a novel State machine and we were able to invest more resources in building a newer State machine to differentiating this way because we chose not to develop the consensus side you saw a little bit of movement this way right I think if you just look at Cosmos SDK and um tenorman in general right every College chain that says they're going to use tenements they have a little bit of modification like the block time but by and large they're accepting I'm going to take a safety bias relatively low validator that pbft consensus algorithm and that is good enough for me I'm not going to go try to be Avalanche and have like the best consensus algorithm you know by by there and I've met her you think it could not and I'm going to use that and then I'm going to differentiate my state machine logic and it's kind of an extension of that yeah that makes a lot of sense that's actually really helpful I want to make sure we also get to cover some of the audience questions um Kristoff I thought you had an interesting one do you want to unmute and ask your question about uh geographic distribution um yes so say you want to have a trade from uh just London so yeah if you have a single sequencer it needs to go to the uh location of that single sequencer uh can you just root it to the uh actually the nearest location of the sequencer yeah so so what I'm gonna do I don't think it's all kind of the problem like essentially like a CDN problem right where you say okay I just want my trade to go to you know whichever you know ISP interchange is closest to me and Netflix or YouTube or whatever has deployed into like every ISP interconnect on earth right so I get like a two millisecond thing because it's literally going down the street right but the problem is that like we have a consensus mechanism and you know we'll we'll think of it like pbft tournament style right it needs to get two-thirds of the people so if you have a geographically distributed like validator or sequence or set here right which ideally you should for like various reasons you know regulatory not least of you still need to wait for all those people to come to a vote right um generally the ballpark is you're probably not getting like a right path in a non-dfd consensus algorithm sub 125 150 milliseconds in like a global round trip for this uh pbfp is probably you know two to three x slower so like Solana probably about the limit of like where you're gonna get for like a decentralized kind of consensus algorithm that's going to be kind of multi-rout of voting here and I'm probably incorrect on like some of the things on like how Solana's algorithm is going to work but we're ballpark in that I don't think you can fundamentally solve that if you want to have a consensus mechanism on that and to some degree the point of a blockchain is to have a consensus over the state of it how like a centralized roll-up you know would resolve that is just like we have one copy of the state and it's probably not one copy right like I'm assuming that like often with an arbitrum have multi-availability Zone things and they have backups and Etc like that right but fundamentally you can say well there's one copy and it just goes there but if you have to do consensus you do have to have to hop around all of the note whether those are globally distributed to make sure they actually come to consensus so unfortunately I don't see you do that you could do something with like a roll up as a service provider where you could have essentially a sharded distribution of your thing and you know roll up as a form of execution charting where you say well I have my app and if you're in London you know you can use like the London app and that connects to like the London into the world and these don't necessarily have shared stays but if you know bridging gets to a point where it kind of sufficiently easy to do we get some of this DK stuff over the hurdle you can say well I'm just gonna go rebound my assets and say I'll have some of my assets on the London Waters oh I'm gonna take a trip to Singapore well you know when I land in Singapore I'll do a bridging transaction put my funds on Singapore now I'll trade on Singapore but fundamentally those would be like logically distinct State machine and you might have kind of this is the standard right you know Chicago Mercantile Exchange to uh New York Stock Exchange there would be like an Arbitrage gap between these two different state machines but that would be a closer I think model to accomplish that than having one large share of thinking for the globally distributed because they will need to come to consensus over that okay awesome thanks great question um I want to make sure that we also touch on Atomic interoperability but I guess before that I want to ask like how do you think about liquidity across all of these different app roll-up chains like do you think this is going to be a huge bottleneck to adoption um or do you think this is going to cause certain roll-up Frameworks like arbitrum orbit or like op stack or whatever to have like a sticky mode yeah so I guess I'll further I I'm not sure if liquidity is the thing that will give an OB Sac or like an orbit chain it's moat I think it's one factor right now but I don't think that's actually like a thing that's like irresolved because fundamentally that's just like a bridge anything right the the way that you know an ARP drummer and optimism have kind of liquidity on their chains is because to onboard liquidity to them you just go okay I'm gonna go buy eth I can buy each functionally anywhere right there are very few people who cannot acquire e thought on earth right whereas it you know even Salon I got like pulled off of like Robin Hood right so Keith had to very very high both depths of liquidity as well as an auditory like just end user access to it and then you can just in one hop you can Bridge Run eat up to the roll up instantly right and so your deposits to the roll-up is very very quick that gives you the you know liquidity um so I'm not sure if the framework themselves give that so and and this expands into my larger review of like the big questions I think on liquidity between these Roll-Ups is going to be what is the gap token they use because the kind of blocking Factor on I want to go use a roll-up is that I have the token I can pay on this the analogy I've used a couple times yeah is you know we saw uh the bad kids art or whatever got you know a little bit of pipe for like a cosmos nft project and people like oh I want to go buy like a bad kid right they're like where is it like on stargazing like what did stargaze change you're like oh it's like an nft physic Cosmo chain they're like cool how do I use that you're like all right well you got to go buy you know if you're like you learn you know buy some ads on point based put deposit that on add-in bridge that out of over to osmosis swap that for some stars on osmosis which has about fifty thousand dollars of daily like 24-hour kind of like volume on it and then you can bridge that stars you bought on us most it's over to stars and buy that that is a lot of friction for like an end user to go by um when we think about a lot of these Roll-Ups right it gets into this question of like kind of do you want to have your own sequence or does that sequence we want to have its own Gap token right that sounds really nice in that oh I'll have my gasket and I'll prove value to that token that'll be really good for us economically okay but you have to go provide liquidity on that token you have to get it listed on Exchange because both decentralized and centralized you're gonna have to go call fire blocks and every other institution or quarter to try to get large quantities of money onto that that's a really hard game to play and I think it's one of the reasons we'd be um Rolex will probably continue to eat the biggest test case I think we'll see for if there's an evolution out of that darknet has at least listed on their website you know right now you go use darknet right you pay your fees in eth there is an at least statement on starknet's website and I think it was like Eric Wall was tweeting about this yesterday um that they intend to eventually use like a start token or whatever right and they would use that for gas that's something that's coming late in the game right it's dark horse been around like a while it's dark net been live for like a while right um whether you can do this Evolution your token after you have pmf or whether you do the optimism arbitrum method where you think well we're going to mention token because we need a token for like you know various economic things but we're just going to use it for um uh governing things rather than for um gas tokens that was a little bit long and rambly and off track but I I do think to get back to the point of like like the orbit change versus like the op stack and whether the Frameworks are gonna give them most it's not going to be based on liquidity it's Dev tooling fundamentally like we're all in the game of devtooling why is the EV happen here because people know how to build on top of the evf because there's too long to build on top of the EVS because I can Google how to write a smart contact on the evm and there are sufficient things I can go ask chat GPD chat to the game knows how to write smart contract on the EVS it will tell me the instructions to use staff tools or Foundry to deploy a contract to the evm that's like worth something right um buying new kind of developers onto a new platform like horrifyingly expensive right you know where's starting to feel a lot of hype and rust like I was running rust in like 2014 right no one knew like rust existed in like 2014. it's been like a nine year long thing to get it to the point where like oh this kind of Niche language is at least known to it right this makes sense I totally agree with you that developer experience is a big differentiator over here so I think that's all the time we have thanks so much Josh I think that gave us a great overview of sequencing and specifically um the kind of place that shared sequencing has in the modular stack conversations that was awesome thanks so much for giving me time yeah thanks 