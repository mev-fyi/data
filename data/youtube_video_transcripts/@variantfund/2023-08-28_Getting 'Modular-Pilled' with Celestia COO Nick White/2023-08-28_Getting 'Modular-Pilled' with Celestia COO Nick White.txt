foreign let's get started Nick would love to have you introduce yourself hey guys I'm Nick white I am the CEO at Celestia labs and I've been working in I got modular pills first in like late 2020 before we really had the language to describe what modular blockchains were um uh and I've been working them like basically since then and I think that they're really critical for the future of blockchain infrastructure I think they solved the major issues around like the core infrastructure for scaling decentralized applications so both just scalability but also customizability and offering shared security so these are all the things I'll get into in my talk um should I start out yeah let's do it cool all right awesome so just about me I already introduce myself um an outline of this talk is essentially what are blockchains so I first want to cover like the basics of what blockchains are you get this important for explaining like why scaling them is hard and then why modular blockchains like how they solve that problem and then we'll talk about what modular blockchains are um what are the benefits of modular blockchains and how modular blockchains work so first what are blockchains so blockchains are tools for trust minimized coordination um I like the Phrase rules without rulers so essentially you know in a typical like if we were to try to like coordinate around something we would typically need to establish a set of rules for that coordination then we'd have like a ruler to arbitrate those rules and enforce them and blockchains enable us to do this in a way without having like a centralized authority to enforce rules and they accomplish this by having every user in the network directly verify that the rules are followed so verification is is at the root of what makes blockchain secure and decentralized um because if you aren't verifying the blockchain yourself then that actually you're trusting someone else to tell you that it's valid that the rules are being followed and then you lose you're re uh you're adding trust back into the system into compromising that core quality what makes the blockchain useful in the first place that's why you know there's an adage in the blockchain community that is don't trust verify unfortunately as we'll see in the next slide verification is what makes scaling blockchain so hard so um verifying the blockchain at least a monolithic blockchain requires two steps the first is that you have to download all the block data and then you have to verify every single transaction of the block one by one and unfortunately that means that if you increase the number of transactions in the block by a factor of 10 for example then the amount of data you have to download and the number of transactions you have to verify also increases by a factor of 10. so the problem with this is that as you increase the number of transactions if you if you go too far basically end users are no longer having a bandwidth or they no longer have a fast enough computer to actually verify the chain themselves so all of a sudden that whole trust minimized nature of blockchain breaks down um so they're kind of been two paths so far at least in the monolithic space for you know how to how to approach this problem one is that you preserve verifiability so you just accept IVs you accept that your blockchain just cannot grow Beyond a certain size and that's what projects like ethereum and Bitcoin have the approach they've taken and then you have other approaches like Solana where you basically just sacrifice verifiability uh in order to gain low fees you just allow the block the block size to grow the blockchain to become uh have a lot like too many transactions for end users to verify and I I think that the second path is not actually a solution because it basically like we said compromises this core quality of verifiability that we're seeking with blockchains so that's that's just some background now we'll get into modular watching so what is a modular blockchain um the definition I like to use sorry it's lagging uh definitely definition I like to use is that modular blockchains decouple the core functions of a blockchain and those functions are execution consensus and data availability so um what's going on here okay there we go sorry there's a little lag on my side a monolithic blockchain is you know that's ethereum Solana Bitcoin pretty much every blockchain that has been built so far every L1 um they have one set of nodes and one protocol that does every single function at the same time and in a modular stack um you actually separate those functions into separate protocols and separate sets of nodes perform those functions and then those those layers get recombined to perform the the same effect so this is very similar to the internet the architecture of the internet there are seven layers of different protocols that all stack on top of each other and they allow us to have this Rich uh you know fast performant decentralized Internet Protocol that we all enjoy today so blockchain Evolution sort of evolving in a similar Direction with the modular stack um so what are the benefits of modular blockchains um the first one is that modular blockchains solve scalability for the first time so they combine two fundamental Innovations and blockchain architectures to unlock this quality called sublinear scaling so those two technologies or innovations that we'll talk about a little bit later are data availability sampling and Roll-Ups so it's a combination of those two things that make it so that all of a sudden you can actually increase the size of a block the number of transactions in a block um you know by a factor of let's say 10 and the amount of work that it takes to verify that block does not increase by a factor of 10 it increases by a much smaller Factor so all of a sudden you can actually increase the block size while still preserving end user verifiability so the way that this works at a very high level is um you know on the on the left hand side you see a monolithic blockchain where to verify the chain you need to download all the data and verify every single transaction in a modular blockchain you download a tiny sample of the data and you just verify a single proof that proves to you that all those transactions are valid so the the top right is what we call data availability sampling I'll explain more about how that works and the bottom part is is a roll up where you use a proof to prove validity so there are actually three paths right this third path allows you to actually preserve verifiability and gain load fees uh and that's what Celestia is building and that's what the modular stack achieves so you can see in this diagram a monolithic blockchain like ethereum in its current form has a fixed block size so as the number of as a demand for transactions increases the the costs the fees for users increase um in a modular blockchain context the block space is not fixed it's actually elastic so as there's more demand and more users come online you can actually increase the amount of supply and keep the fees constant so we think this is going to be very very important for actual mainstream adoption another benefit of module blockchains is that is that they're flexible so because you separate consensus from execution um you're not locked into one programming environment or virtual machine so you can kind of think of Monolithic blockchains as like a let's say you bought a new laptop and it's a Windows machine you can only run Windows operating system that limits the kinds of applications you can run on that on that computer so blockchains are very similar or monolithic blockchains are in that um if you have like ethereum it only runs the ebm or if you have Solana only runs the Solana VM in a modular watching because you decouple those things you can run whatever execution environment you want and you can you can basically customize it to fit your application so this is uh you know what people call app chains essentially yeah and the last benefit is that modular blockchains provide shared security so in a monolithic World each blockchain kind of lives in its own world and has to bootstrap its own security and its own new consensus Network um and also those chains uh are isolated in a way that they actually can't have trust minimized bridging with each other so they all when they interoperate it can't be very secure in a modular blockchain context you have shared security so it's similar to like um smart contracts on ethereum when you deploy a smart contract on ethereum um those contracts uh can talk to each other in a trust minimized way and interoperate and those those smart contracts don't require you to deploy a whole new blockchain right to build your application and that's what modular blockchains achieve but at the sort of like blockchain level so you can deploy your own blockchain without having to create a new network of validators and and nodes and those blockchains can actually uh interoperate in a very secure way so you can one way to think about this that you're familiar with Cosmos is that like the modular blockchain approach that Celestia is building it takes the best of the ethereum world the world computer model where you have shared security and it's easy to deploy new apps with the best of the cosmos app chain model where you have sovereignty and customizability as well as scalability so um just to wrap up or sort of to to summarize the benefits of modular blockchain so that you have scalability uh you have shared security and you have sovereignty or customizability um and all three of these features are not things that you can achieve uh in together in a monolithic uh model so one way to to think about this is that in the web 2 uh world you have the cloud so that's the cloud is the primary way in which developers today deploy web apps and in the cloud model you have a data center which provides us raw resource of compute that is customizable very scalable very cost effective and developers plug into that and they pay as they go and they customize they deploy their own virtual machine that is tailored to their application and they can scale up or scale down their sort of the amount of compute that they consume in the web tree model this is what the the modular stack uh provides something that's very similar but instead of a data center you have a Data Network and so the data Network like Celestia provides this raw resource of block space that a blockchain developer can tap into to launch their own custom blockchain and consume and scale up the amount of resources they need to consume on demand it's very cost effective and I just last thing on this point is that this is no longer just like it's not just Celestia I've only really mentioned Celestia so far but there's a whole ecosystem of different uh projects building uh in the modular stack across you know all layers of the stack as well as like the surrounding infrastructure and um also not in here or even you can consider a lot of the ethereum roll-up teams uh as part of the modular ecosystem and even ethereum even Avail there's a lot of other projects that are building towards this direction so how do modular blockchains work um the first thing to understand is data availability so what is data availability data availability is basically nodes need to verify that the data behind a certain block has been published and is available to be downloaded if someone wanted to download it um this is kind of a nuanced and confusing thing but um essentially the the end users of Celestia don't have to care what the data actually is they just need to know that it's there and that it's been published so um one way to think about this I mean first I just also want to dispel a very common misconception which is data availability does not equal data storage so data storage is more like panning food it's like you want to preserve data so that you can retrieve it later right and data availability is more like an all-you-can-eat buffet it's like people are like hey here's my data I'm posting it out there for anyone to see anyone to sample you can go come and have a taste and uh and like Serve Yourself right um and uh so that that's kind of like a good mental model to use so they're very very different functions but a lot of people get confused because I and I understand why because the the terminologies is like a little bit vague and sounds very similar to data storage so anyway like rweave or filecoin are not data availability Solutions and uh uh like this kind of also demonstrates this in a more technical way so data availability you're verifying the new transaction data like the latest block you want to verify the data is there so that you can verify and accept know that you can trust that block before accepting it and data storage you're retrieving old transaction data so data availability um and scalability this is sort of gets to the root of what data availability sampling is so as we mentioned earlier in the monolithic architecture you actually have to download the full block data to verify that it's all there right like if I need to know that all the data behind a block is has been published naively I would need to actually verify all of it I need to download all of it and check that it's all there the the magic of data availability sampling is that I can verify that it's all there with a very high statistical likelihood without actually having to download all of it so I can download just a tiny tiny fraction of the block but have a 99.99 and a nine percent um guarantee that all of it is available so this means that you can have bigger and bigger blocks without really increasing the cost um of verifying the block so the one of the the core Technologies uh one of the the things that we use in data available sampling is called a ratio coding and it's the same technology that's used in CDs and QR codes essentially you take the original transaction data and you expand it um and such that if you try to erase some of those the transaction data you can still recover the entire block so this means that if someone is hiding data they have to hide a huge portion of the Block in order to do that so that makes it very easy to You Know sample the block and find where the the hidden data is and this is kind of like a visual representation you can imagine you know just sampling random pieces in this two-dimensional Square um and this is very like a simplified version of what Celestia is doing under the hood um if you guys are interested in learning more there's a whole paper so Mustafa who's the co-founder of Celestia co-authored of paper italic in 2018 I think um titled data availability sampling and frog proofs and the second piece of how what modular blockchains work are Roll-Ups so what Roll-Ups do is that they prove that a block of transactions are valid so that users don't have to verify every transaction themselves so in the ZK roll-up context they use validity proofs so you take uh you assume that a block is guilty invalid until proven innocent valid so you um essentially approver would actually run uh like sort of compute the actual State transition function and verify every transaction and would give you a proof that that when you execute those transactions this is what you get this is what the output is so you don't have to redo that work you know because of the soundness of the proof system that that is indeed valid and in an optimistic role of context you actually use something different called frog proofs which is sort of like the inverse so you assume just as a base case at every block that you see is valid um until someone raises a what's called a frog proof in which case you verify that proof and it's that proof to verify is true then that means that there is fraud in that block and you shouldn't accept it so there's like a lot of more detail into how these systems actually work but the important part is that you by using these you no longer have to actually verify all the transactions one by one you can verify them in a big batch so you can roll them up and verify and roll them up into a proof and just verify that proof um but again um Roll-Ups require that the underlying transaction data has been made available so like the in order to trust that these proof systems are secure you have to also know that the data is available and that's why data availability and roll ups are kind of like yin and yang um and they they It's a combination of them together that that solve scalability so this is kind of what a roll-up actually looks like under the hood um you know there's the the transaction data gets posted to a consensus and data availability layer and there's a state proof which is that proof I was talking about that gets sent either to a Smart contract in sort of the ethereum roll-up model or get sent directly to the roll-up nodes in a sovereign rule of like more Celestial Centric model um and the last point that I want to talk about is um the modular blockchains there are uh there's a new type of node which is called a light node so traditionally in blockchains you have full nodes and like clients so in a full node it downloads all the data and verifies uh every single transaction it's kind of like the monolithic context that I was explaining before but those are really expensive to run so um in other blockchains for example like Bitcoin there's something called a light client where you do a very minimal amount of verification to get at least some security but you don't actually verify the full um the full block and the cool thing about modular blockchains is that they actually upgrade like clients to become light nodes so um like like we said earlier you can actually verify the blockchain without doing very much work but you get almost the same level of security basically as as a full node but doing you know a a dramatically smaller amount of work so this is how a basic like client would work is you just check the header and you make sure it has enough signatures or you make sure that it has enough proof of work behind it and then you just assume that it's valid so you're making an honest majority assumption which again is inserting trust so that's why like clients aren't really um secure enough to be considered like a solution to to verification and in a light node context you're checking the header and you're also checking that the blocked data is available as well as in a row of context verifying a proof that the execution is now it's your light notice is actually truly verifying the the underlying blockchain and the cool thing is that this is possible to run on very light Hardware with very low resources so people um all over the world have been running their Celestia light nodes on you know non-traditional Hardware like gaming consoles or on their smartphones and really the goal is is frankly to put a light node on every smartphone in the world and that way we can have like truly decentralized and secure uh blockchains for everyone so uh that's it for me if you want to learn more there's a learn modular where we put a lot of these resources and education and there's also a build modular which is like if you're a developer and you want to play around with the things that we have um that we built as well as like the different projects in our ecosystem there's a lot of things to play around with and um also you know get in touch with me I'm at Nick white on Twitter and so I see our website is celestia.org and we are at celestia.org on Twitter so thank you guys again and looking forward to q a well thanks so much uh that was incredible Nick so now we have a couple questions from the audience but I also have a bunch of questions I want to ask you kind of related to this topic so let's just get started so as you laid out there's some very clear benefits to a modular architecture and that's kind of where the space is headed but I'm really curious like what do you think are some benefits of a monolithic architecture um that some of our Builders should consider when they're figuring out which architecture to choose you know um I would say the more time that goes on the less and less benefits there are for a monolithic architecture I would say right now I would say in in theory or rather in like in the future like as the stack matures that Gap will narrow and narrow like right now the modular stack is relatively new and um still has uh there's a lot of things that are like features are still being built and are yet to launch so I would say that's that's probably the only Advantage I would say and it's sort of like a short-term one is just that some monolithic chains like ethereum or like Solana are a little bit more tried and true and they're a little bit more mature in terms of the tech stack so if you're building the modular stack today it will in some it could be a little bit more challenging and tricky for now but I would say that long term uh that will like that will only decrease essentially and become they'll become more and more similar and and like in fact I think the modular stack will um end up being easier and like just have a lot of benefits over the monolithic stack I can get more specific if you want yeah like one thing I'm curious about is like the way I think about it I feel like each layer of the stack in a modular architecture has sort of different economic models different like token incentives Etc so I'm curious like how you think about coordinating all of these tokens and whether that adds complexity that may be like a monolithic structure doesn't have yeah so actually you don't one of the beauties of the modular stack is you don't really need more tokens so one of the the cool things is like um you know if you if you want to launch a new blockchain typically you do need to have a token to stake and to like pay for fees and all these things and in a modular stack actually like Roll-Ups they don't issue their own token like arbitrum I mean they end up issuing their own token for governance or something but there's actually no reason to functionally launch your own token as a roll-up so it's completely an option essentially so if you want to add that complexity you can but you can also avoid it if that makes sense there's no there's no avoiding though paying for things like gas or paying for things like data availability because you're consuming resources but um it doesn't mean that you have to manage um multiple tokens at the same time and there's also really cool work being done at the intense layer which will abstract away a lot of that complexity it sounds like you're talk about that a bit later and then there's also like the question around this complexity generally that like you have all these different layers plugging into each other and um you know on the one hand it gives you so much more flexibility about the other hand there's just so many different moving pieces and does that you know cause issues I think the the trade-off there is just that it will take a little bit like I said a little bit longer for the stack to mature like um you know that is one benefit of Monolithic blockchains those choices are made and then all those Integrations are kind of like uh all tested there's only like one path and uh in a modular context because there's so many different moving Parts you have to make sure that each one of those plays nice with each other and that ends up like taking a little bit longer to make sure those interfaces are really standardized and then they and they work and so that's that's partly why you know modular blockchains have a little ways to go in terms of maturing but long term I don't think like long term it's gonna be like like you know going to like a cloud provider like AWS and like you know clicking a few buttons and configuring your chain and it should just work um TM so but we do have a ways to go to make that a reality right this all makes sense and I'm glad you mentioned intense we're going to be talking about that on Thursday so I think this ties in really well into that I guess like one other facet of this I see is like trust minimization so like the best part of modular structures is obviously that you have specialization at each part of the stack but this like introduces dependencies at every layer so how do you how do you I guess think about that um so the question is like the the interdependencies between the different layers of the stack essentially yeah I mean kind of like I said like and what it boils down to is abstractions and and having the right interfaces between these different layers um and frankly it's still quite early but I think um you know for example we've made a lot of progress in defining sort of The Da interface that we hope will get um adopted as a standard so for example we we integrated with optimism right and we helped them abstract the op node data availability interface so I could support uh things like Celestia or could support ethereum or even Bitcoin or like any L1 hopefully can like be plugged in to that data availability interface but we're going to need that for the execution layer or for the shared sequencing layer or for maybe the proving sides I guess that's kind of like similar to the execution but not quite um like and and there's a lot of teams working on these things so I really like the work of uh for example Sovereign Labs um they're they're building a really flexible framework where you know you can choose between optimistic or ZK you can you have there's a sort of an um comes from the cosmos world but there's an ABCI interface between the person um like sort of the execution layer and and the actual like consensus and ordering layers so um yeah it all comes down to interfaces basically got it that makes sense yeah I guess now that we're touching on data availability I'm curious like now that there's all these different options for alternative DA's like Celestia like how do you see ethereum's role in the da space in the future good question so um ethereum today I would say is the dominant da layered um because that's where all the current roles are deployed Celestia is not not live yet um but ethereum was never you know designed for data availability it was designed to be a world computer and so all of the a lot of the design decisions were kind of made before people were even aware that this is how blockchains would be used in the future so um for that reason ethereum and its current form is really not well suited to be uh used as a data availability layer like it first of all does not support data availability sampling so it's not very scalable and second of all like the inner that you it's like a very hacky way the way that people use it as a DA layer is you host the data as call data and it's also a very hacky way of kind of like using it for an intent uh for purpose that it wasn't intended for um that's going to change um you know they're they're already working on eip4844 which is going to add like a whole new capacity for just data blobs on ethereum and also I think we'll make make it more usable for that purpose which is really good um however eip4844 doesn't support data availability sampling and that will only so it's it's kind of like a block size increase and it's a finite block size and increase so it won't really it'll be more useful but it won't be more like actually fully scalable until they ship Bank charting um which um I'm not sure what the timeline is there but um Celestia it sort of just to draw the contrast is was like created with this sole purpose in mind with the realization that l1s of the future will be used probably almost exclusively for data availability and all execution will happen on Roll-Ups so Celestia has no execution no smart contracts uh supports datability sampling and so um it's really optimized for that for that use case right I think Alpha challenging chat had like a good um kind of follow-up question to that he said do you think the ux gains are a major reason for da layers to become front and center da layers require a single block confirmation for cross roll up versus other cross-trained Solutions require two plus block confirmations so this kind of goes into interoperability but I'm curious if you have any thoughts on this question yeah so um one of the advantages as I said a building in the modular stack is that you gain shared security um and one aspect of shared security is like secure interoperability and um the reason that the modular stack enables this is that if you post if two let's say there's two chains and they're each posting their block data to a shared consensus and data layer like Celestia though their blocks um both get ordered at the same time so like if they if they weren't there like it um now there's no way when you when you're sharing ordering you can't have one chain just decide unilaterally to reorder its blocks um and then just basically invalidate something that it said happened it's basically a double like a cross chain uh double spend so you you remove that risk and then uh and maybe that's something that he's referring to and then on top of that you also have a way for those chains to verify each other so um even if you verify that the execution of another blockchain is valid using a fraud or validity proof you still have to verify the data availability behind those blocks and um the the beauty of the modular chain uh architecture is that these two separate chains because they're using the same DNA layer are sort of implicitly verifying the data availability of each other's blocks so they can verify they can have a fully verifying Bridge without um like uh without having to like run a full client of each other that makes sense got it yeah that makes sense um nikhail had a great question do you want to unmute and ask it live which one of my first question or myself the second one sure yeah uh thanks Nick so I'm I guess I'm just trying to make this like super concrete right because you have this concept on data layers you have around like modular blockchains that entire concept and you're talking about the movement of data and settlement and execution I'm wondering if you can actually make this a little bit more concrete like if you can give an example of like a protocol today uh that's operating that any of us might be using how it could utilize ethereum or an L2 you mentioned something like optimism and Celestia and like what really are those kind of advantages that a user might get by basically going through with this type of structure yeah absolutely so um that's a great question so one example um would be something like uniswap so I think I think even um what's his name Dan elitzer I think we're gonna post about this of like uni chain right so um if uniswap were built in a in a modular context they could do a lot of things that they can't uh in their current model as a smart contract in ethereum so one of the first things that you could have is they could be much more scalable so like if there's an nft mint happening on ethereum at the same time the users of uniswap don't get affected because uniswap would be running on its own chain and that nft contract or whatever the mint is happening somewhere isolated that's one of the advantages the other thing that they could do is they could um change the actual like underlying evm that their contracts run on top of to you know support things like parallel execution so all of a sudden you could have like trades that don't actually like overlap with each other don't affect the same state it can be uh processed in a parallel way so it speeds up things and makes gas cheaper essentially so and they could probably do lots of other like modifications that would maybe make certain um you know like like operations like mathematical operations that are used to compute the price like cost less gas less gas or I don't know there's a whole range of things that they could do and optimize if they had access to the X like modifying the execution layer but as it is Hayden is constantly posting saying like why can't we support parallel execution on ethereum L1 and the reason is because you know L1 uh core protocol development is like very difficult very slow and it's like it's just hard to actually get a change pushed through so those are some things one of the things that you could do is even start um building in Mev capture to their chains so there's a really cool project called skip um it exists in the modular slash like Cosmos ecosystem where they're building uh tools that enable chains to capture their own Mev natively so all of a sudden uniswap which is you know is probably a majority of the Mev on on ethereum could be instead of like just paying all that Mev back to the ethereum base layer they could be capturing that and maybe redistributing it to their users or using it to fund public goods or who knows what they would want to want to do with it um other things they could do is like fee abstractions uh so like they can make it so that you know users maybe maybe there's maybe like a Unity chain there are actually no fees to interact with the chain um and so like users don't actually have to hold ethereum or any token they can just like trade um so those are the set of things I could probably think of more things but just off the top of my head those are some of the some of the advantages that ethereum uniswap would have um in building building on on like a modular stack yeah yeah thanks to kill I think it was great that we're kind of bringing it down to to Tactical discussions I guess along that same vein so our fellowship cohort is pretty diverse in the sense that everyone's working across every vertical so there's some people doing infrastructure some defy apps some consumer projects so for those people building on like that application side so like D5 consumer Etc I'm curious um like what you think uh they should be thinking about the most when it comes to the modular thesis so like specifically um what sorts of use cases would make for the best like app specific roll-ups I mean I think like D5 is obviously a big one um I think because there's benefits to capturing your own MVP um I think um you know decentralized uh social networks could be very uh uh and gaming also like things that are that require a lot of like on-chain throughput um our natural fits because there will be just there'll be so much block space available um in the modular stack um I mean anything where you need scalability uh customizability uh and shared security which is most applications uh but like I guess you know what what happens is like I said um there's still time for it to mature so like you know uh it might like that the trade-off right now for building on the module stack might be you know it depends on like how much you need those things versus versus um you know maybe maybe they're not as critical for for what you're building um it's really hard to say like blanket like oh these are the applications um that are better off um but yeah long term again I think the the will close that gap of like the the developer experience such that there isn't really this trade-off like it's only benefits yeah I totally agree and I think the gaming example is a great one I think Gaming use cases need High throughput horizontal scaling Etc and they're able to get a high take rate through building their own app specific role that can um specifically utilize all of these things um I guess another question I have is like how do you think about value accrual at different parts of the modular stack like do you have an opinion on like where you think the most value a cruise and how should app developers think about this when they're thinking of launching their own blog space that's a really good question um I think it's premature in general for anyone to say that they like know where valuable accrue even even you know ethereum in its current model although it seems to have pretty strong value or cruel uh kind of based on this model of like scarcity of block space and I don't think that's like long-term desirable because I think you want to have like our where we want to go is a place where box base is very plentiful and so people can afford to use blockchains uh like everyone can um where I think um the way that I think this plays out long term is sort of similar I like to the web 2 uh stack where like you know AWS is an infrastructure provider and um they make a lot of money by providing this infrastructure and like it'll make it by price gouging people they they sell their compute or like their resources and like a reasonable price but they they mark it up enough to make some kind of um profit and they they make money by scaling that up and selling a lot of it and I think that's kind of the model for for Block space but to expand on that there's also the application layer right of of the web 2 stack and the applications are extremely valuable too and in fact the the net value of applications far exceeds the net value of the infrastructure layer and so I think that's that's kind of where we'll go is like the applications capture value by the actual value of the application that they build the infrastructure captures value in proportion to the value of the infrastructure that they provide um so it's not like either or like I don't believe in the fat protocol or the fat app thesis I think it's actually both at the same time yeah it's funny you mentioned this just last week we basically had Hayden from UNICEF come in and he was talking about like basically protocol versus product and how to think about developing both in parallel so very much ties into all of this um I know we only have a couple minutes left so I'll do one audience question and then one of my questions so maybe don't gone do you want to unmute and ask your question about uh like evm and the future ibms I guess yep hello Nick and yeah my question is like there's a lot of execution uh layers and most of them focuses for evm because like most of the uh developer tools and most of the user bases uh the existing user bases uses the EDM but do you think that the future of execution layers will be around both the evm or the VMS that designed for the verifiability and for modular stack is going to be again gained more attraction from the modular stack I'm really curious about your thoughts like krvm or field VM good question um I don't think that there's I don't think it's a I think there there will be like a a set of VMS that are like most popular because I think that VMS do have Network effects around you know tooling and around uh you know just developer adoption um and things like even like Bridges like a lot of things get baked in they bake in the Assumption of like the execution environment that they're interacting with and so I do think long term like I think I think short term maybe the amount of VMS proliferates a bit but long terms the long term it kind of consolidates around a handful uh however I think there will be lots of different releases of these VMS so like the same way there's lots of different releases of like different operating systems um you know like that are somewhat like uh tailored to a specific use case I think you're going to see lots like lots of those if that makes sense um and then I still do think though that there's going to be um these VMS are not all going to be like fully expressive like general purpose VMS like the evm or uh like Solano VM some of them are going to be more like these sdks like kind of similar to the way that the cosmos uh SDK Works where you have these like rebuilt components and you can kind of like choose pick and choose the ones you want to you know combine together and then also build your own little pieces that come in and help customize so I think that's that's where I see things going uh some I think there's a lot of uh Innovation and exploration still to be done and in fact the monolithic architecture is really held back more experimentation at the at the execution layer the VM layer and that's something I'm really excited for with the modular things it reduces the cost to experiment with a new execution model you can just write one and deploy it as a roll up and then see if it works um and so I think we're going to see a lot more I think we're on the verge of seeing a lot more experimentation well great question I guess one thing I just want to end on I guess is what are some predictions you have for the space in the next few years like specifically what excites you when it comes to like the modular stack Roll-Ups Etc good question well uh you know Celestia's minute and launches coming up uh later this year and so I'm really excited for that because that's the kind of the first the first general like purpose like specific builds uh data availability layer and I think that's gonna um it kind of like marks a new chapter in the blockchain space I think it's we're really going to start entering and like the modular era it's still going to be early like I said but um I think it is sort of like the the first step towards making it a reality and there's a lot of projects uh in our ecosystem that are also planning to launch you know I would say within the next year and so they there's a lot of like cool things to look forward to things like Astra like the shared sequencers espresso as well it's a handful of projects maybe even fair block um I think shared sequencing is going to be really cool because it will allow for make a whole nother layer of like customization interoperability ease of deployment for Roll-Ups that we haven't seen yet um I think um I'm excited for new uh approaches to bridging so actually expanding um bridging uh standards like IBC so they support roll up like trust minimize bridging is is going to be really big um trying to think what else um yeah there's probably just too many things I mean obviously all the roll up the Roll-Ups themselves like the sdks like I mentioned Sovereign is something I'm really excited for there's a whole bunch of stuff happening in the op stack tons of of innovation there I'm also excited to see a lot of projects building like another thing that I guess I never mentioned that is really core to the modular thesis is this concept of modularism not maximalism so what's what that means is basically that in a modular stack like it's no longer like uh oh there's only one one way to build blockchains and that's the best it's like it gives developers choice and allows different components to be you know swapped out and connected to each other and so to that and I'm I think it's really cool that like through the optimism stack you people can build chains that leverage last year for da but settle on ethereum and so I think like I also want to dispel this sort of narrative that like you know Celestia and ethereum are competitive they're actually just sort of different protocols each providing different um services and different trade-offs so I don't know that's what I'm really looking forward to and obviously in the future with Celestia we want to continue to scale block space um we want to add trust minimize bridging to the the um base layer so you can actually Bridge cluster tokens there's a lot of like improvements that we have planned for the core protocol after we launch mainnet so long-winded uh convoluted answer no thank you so much that was lovely so I think that's all the time we have for this but obviously there's a bunch of unanswered questions on slack so I might like compile them and send them to you afterwards but this was so lovely thank you so much for coming in Nick this is a great great kickoff session yeah thank you for having me and um I'll see you guys later 