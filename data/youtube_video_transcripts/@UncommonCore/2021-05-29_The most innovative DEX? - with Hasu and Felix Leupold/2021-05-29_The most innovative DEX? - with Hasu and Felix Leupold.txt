welcome to uncommon core where we explore the big ideas in crypto from first principles this show is hosted by suzu the ceo and chief investment officer of three arrows capital and me has a crypto researcher and writer earlier this week i did a deep dive on a new decks trading protocol called cow swap and i was very surprised to see them combine many great ideas into what i would say almost is the most complete trading experience that i had seen so far in d5 to give you a quick overview first of all you no longer publish a fee paying transaction to the public mempool instead you all you do is you sign a transaction and you submit it off-chain to the cow swap relayer which then handles the execution for you you do not have to pay a transaction fee when you just sign a transaction for you this means you can safely set a very low slippage tolerance or even zero because you only ever have to pay a fee if your trade succeeds second and this gets us to the real innovation cow swap looks for a so-called coincidence of wants or cows before sending your order to the regular on-chain exchanges for example if one trader wanted to buy eve at a certain price and another wanted to sell it usually these would both be matched against the automated market makers on let's say unisop but these two could also be matched in theory without paying any ap fees at all right by just matching with each other and this would save them the fees and coursework has off chain servers who can look at this off chain order book and they solve this optimization problem and submit basically optimal matchings for these orders and one guarantee that they give is that all trades in a certain batch have to settle at the same uniform price and if they all settle at the same price then there's no point in reordering um the trades for miners as well so this incidentally also serves mev only after this matching phase is over and um no more coincidence of once can be found then basically cow swap sends any access order that hasn't been filled yet with the regular on chain exchanges right and and sort of settles the rest there and if you didn't get all of that immediately then don't worry um neither did i and that's why i invited um felix leupold from cowswap and gnosis to answer my remaining questions originally we were just going to do that you know just chat about the protocol and he was going to answer my questions but i i did ask if i can record our conversation without having any concrete plans of publishing it but it turned out to be such a great conversation that it wasn't really much of a choice at all so please enjoy this fascinating conversation on cow swap with felix leupold hi felix thanks for taking the time to talk to me so spontaneously i have a few questions about cow swap it seems like a really interesting protocol and i would like to learn more about it so to start out uh can you tell us a bit about yourself and um so what is your position at cowstop and gnosis yeah and it's great to be here thanks for for making the time um i'm a tech lead at the gnosis protocol division uh our hypnosis protocol the gnosis protocol team which is uh one part um of the of of our company um and cow swap um to us really is um is is the kind of the first application of um the underlying protocol that we've been developing hypnosis for almost three years now um so i joined gnosis about three years ago and since then have been focusing first in a very small team just on kind of batch auction mechanisms and how we can apply them to ethereum and then most recently well last year we launched gnosis protocol version one which had some success in the ido space and from then on kind of the team split and we created gnosis auction which is kind of another division within gnosis focusing just on a protocol for idos and buybacks and liquidations and we continued the batch auction kind of idea with gnosis protocol version 2 which we now are launching um to the public under cow swap what do you see as the main problems that exist today and so the the dex base or the amm space right um so when we started out we already saw that it it felt weird if two people trade in the same block on the same token pair but they're getting different prices because well everything that happens within a block is kind of atomic at the same time so for us it felt weird to have kind of a continuous time priority kind of mechanism bolted on top of kind of decentralized trading within ethereum and not just same price right they also pay twice the liquidity fee right but even if they trade in the in the same direction so even if there's no opportunity for them to trade peer-to-peer directly with one another even then they might they pretty surely will get different prices if right well the first one will get the better price than the second one yeah and then most recently well this has been really manifested itself with kind of the rise of mev and kind of this topic has become really big in the ecosystem and this is where we kind of see batch auctions or that was kind of the original reason why we thought that batch auctions might be a good mechanism for that and then the second kind of idea behind gnosis protocol which is kind of less i would say it's less famous or less spoken about right now but one thing that we also kind of feared was fragmentation of liquidity across many different tokens since creating a token ethereum is so cheap we can see it with stable coins for example there's like 10 15 different stable coins tracking the us dollar and so um by far falling back to kind of these two-dimensional markets like uni swap i guess balancers is a protocol that actually allows multi-dimensional markets but you know the classic order books are two-dimensional we thought that it would be nice to just kind of treat all the trades that happen within a block on ethereum as like a giant kind of exchange economy like when you're on a market and you want to trade one good for another and you can do ring trades for example um it doesn't have to be matched directly against another person but if you're you know trying to buy gno and somebody else is trying to sell geno for die and somebody is trying to sell dive for eth and then another person well you're basically trying to buy gino with ether and we can form a ring and and by that can kind of work around potentially fragmented liquidity okay um one major problem that i see is front running and sandwich attacks as well and as i understand it this is also something that causedrop tries to address via the batched auction approach um and i want to dive into that in a second so as i understand it you take all these problems or you sort of take the so there's no uh like unified uh settling price for trades um in the block um there is um even if two users could be matched like in a block they they don't trade in the same direction but rather they trade in opposite directions so really they could be matched with each other but instead they are both matched um they both trade against the uh the market maker instead of with each other and so thereby both pay the liquidity fee and then on top of that sort of you have the mev where um every trade can get front run and uh probably like if the slippage limit allows it then it will get front run and the price impact allows it and you have built um a system that to me it looks sort of like a layout approach to addressing this problem and i was kind of um like to work uh through that with you here briefly so um can you describe like what are the layers that cow swap uses in order to give the trader the best possible price yeah and so maybe another challenge that i forgot to mention um that kind of ties in here is that it is kind of difficult for users today on ethereum to actually do transaction management well um yeah and so kind of the first thing that is different and the most kind of user-facing thing that is different about cow swap and other exchanges is that instead of trading via a transaction like actually sending a transaction to trade yourself executing your trade yourself you just sign a message and hand this message over to an off chain order book um where multiple orders can get batched together right and actually let me interject there already so um so this like the transaction management this is like very very interesting point already um to dive deeper on so um [Music] so it's much better ux for the for the trader of course that they don't need to have even their account for example um but it also serves a very like a a purpose for people who do have ethan their account would be willing to pay a transaction fee and that is that um it's not really economic for basically medium-sized and smaller trades to use zero stippage tolerance right on your trades and that's because um the market will will occasionally move against you to frequently move against you and then your transaction simply fades and you pay the fee anyway um and this is completely removed here right so if if i just sign a message and hand it to you then i basically give this execution risk to um to cow swap exactly um and there's one there's one other advantage um kind of when um the transaction kind of stays well let's say the network is really congested and even with a very professional transaction management we wouldn't be able to settle it quickly and maybe the price or the well not the price but the route that you were about to to settle your trade against let's say you were using balancer yeah is no longer available but maybe another route via sushi swap became available then in our model since you have only agreed on a price and given us a signature for this price you don't care about the actual route that is being taken the so-called solvers so the execution layer of diagnosis protocol can actually change the route between attempts of settlements oh cool do you know sort of other aggregators like one inch work the same so the execution route can can change between blocks so as as soon as you have to submit the transaction yourself the transaction data contains the the route um and so if you set a gas price that is not mined immediately or if there's a spike in usage and you're not speeding up your transaction then as soon as this route is no longer available your transaction will fail okay and this would be even this would be even the case for kind of the execution layer within cow swap but to the user that is completely hidden a solver that notices oh this route is no longer available could try to replace their transaction with a higher gas fee same nonce um to just basically try to well let's let's pick a different route or if the transaction did fail then the solver would take that risk and resubmit it with a different route rather than having the user deal with a failed transaction and having spent a lot of gas on basically doing nothing yeah okay so before we get into sort of the coincidence of once and and such let's to stick with the topic of transaction management so how does a cow sub manage to sort of so that you i as a trader i just give my signature and sort of hand this blob to you like a signed transaction and you can sort of do whatever you want with that right it's not a signed transaction so that's not something yes sorry so what exactly do i sign um so the thing that you're signing is basically a sell token and a buy token if you're which of the two is fixed so if you have a buy order or sell order the then kind of the your limit price that you're willing to accept for this trade and an expiry date but isn't this like isn't this a transaction except i don't i don't publish it so this by itself would not be executable on ethereum kind of on the base layer on top of that there is kind of an approval that you give to our settlement contract and our settlement contract has the logic built into it that if it gets the request to execute a settlement it will basically check this blob and verify that well basically you have uh authored this before using your funds it will it will verify that you've actually authored this transaction and that the authored this trade and that the limit price that the solver is trying to execute is actually well in line with what you were willing to accept okay so what i assign is basically a blob of data that allows you uh sort of the the cow store protocol to build a valid transaction from that exactly yeah okay and i don't i don't pay a fee on that because i just give you the this blob of data of chain but you when you when your solver the the protocol submits the transaction or sort of this this off chain relayer right that you run and that's you still have to pay the gas right exactly and so what we do is we we the user also specifies a fee amount in the cell token and basically if the transaction goes through then the author or the settlement contract can basically keep a fraction of the of the sold tokens as a reward okay so for example i get eve back then there's you're basically like taking a little of that and all that and to recoup the gas fee and if it's another token like do you also accept like any sort of variety of coins that someone might buy yeah um so basically at the moment there's a there's a list of tokens that that we accept and we would basically what happens if if you're trying to um well if somebody tries to trade a token that we don't want to have exposure to which i think at the moment we are still in alpha phase so we're actually accepting um i think even yeah most of the coins and then someone tried some kind of dog talking that i'd never heard of right um but so basically the the logic of the protocol could be that um instead of holding on to the token that you're selling um because it is already doing a swap it could kind of route that fraction into some other token that it trusts so let's say you're trading one coin for another coin but it goes via eth then the protocol could just say well i have the right to so many uh tokens of your cell token but i'm trading it anyway so i might just convert it with the rest of your trade into ether and then just keep the eth or keep some other token on the route or even put in a separate hop if you're trading token to token directly yeah i see okay and this is like would you say this is sort of the optimal approach because it to me it seems um so of course like cow stop is still taking the the risk that the transaction fails and um isn't this like couldn't you do it um i've thought about this i think like missed exchange launched a few days ago and they did something that i have been uh like then approach that i had already talked also talked about in the past that seemed sort of rational to me is where you actually you transmit um sort of a zero an actual zero fee transaction to sort of flashbots for example uh so to to gaf mev and um also pay the miner from the uh output token right and then so the benefit with that obviously being that like your transaction just it cannot fail because the miner can't make any money on the trade unless it executes it only executes if the zero slippage limit is tolerated right so um yeah we looked at the mist exchange and also at archer swap which i think works very very similar um and so may like one caveat of or one that one thing that is suboptimal about or well i will say why it's actually giving us benefits in the long run but at least just if you're if you're just by yourself trading completely isolated and just um you know panning off the execution to some other party going through our settlement contract is a gas overhead um because well the signature verification has to happen in a smart contract instead of kind of the ethereum protocol so we pay gas for all of this and so there is a there is a fixed overhead over using kind of our transaction submission logic on the upside um we feel like well the the one thing that i mentioned already that um the executor can basically change the route the concrete execution plan as maybe the best liquidity sources change that is a huge advantage also kind of in the context of having multi-signature wallets or dao is trading where it may take minutes or hours to actually collect all signatures and you cannot really make a proposal let's use this route because maybe in two hours this route won't be optimal anymore but also candy but also kind of um the thing and that's maybe where cow swap or the name cow comes in one thing that's super powerful is that um the settlement layer can not only execute trades one after another in a single transaction but it can actually execute many of these signed orders at the same time in the same block and that's where we get into the possibility of trading or matching trades directly with one another so avoiding going through uni swap or some other unchain liquidity avoiding paying liquidity provider fees avoiding being front run because those trades can only be executed within the context of cow swap and so we think that even if people just trade in the same direction we can batch the single we can basically make instead of hitting uni swap five times for five trades we can just do one ah oh swap interaction and so we think that we can actually with enough traction save on gas uh for the user so this so you do have the overhead of sort of the the batching contract and the solver um how do you call it what what crunch what is this the settlement contract okay so you you have the overhead of the settlement contract but like what's your guess how many trades need to be there in the same direction in order for you know to like the saving to be larger than sort of the overhead yeah we we benchmarked um and and with uni swap it was around three trades uh per only three hits at three trades we're better well but it it would have to be on the same pair so we haven't done um we don't we haven't done yet many many benchmarks where it's like just but even there we can get some benefits if we just trade 30 random trades yeah just in one transaction we can at least save the 20 000 gas for each transaction and um yeah so there's likely also just by batching there's some some synergies that we can get in terms of gas okay so to get sort of the listener on the same page so you and i we both want to make a trade um you know why you want to buy wbtc with ether and i want to buy ether with wbtc and we want to make this trade at about the same time um and in theory like instead of both trading with the like the automatic mark automated market maker we could also trade with each other except that we don't know that the other person exists right and so that's where that's where like where cow stop comes in because it first checks if there are two people available to want to trade with each other and then they are matched but then as you said also which i hadn't considered before even if we want to both buy eve with wbtc then it can still make sense for us to execute our trade together um because we save we we don't have to we only have to tap we want to swap once basically instead of twice um so for the two of us it doesn't make sense but maybe there's like another person that's also like martin or something yeah and then then suddenly it makes sense okay that's interesting um maybe even to to add you you mentioned kind of the obvious um coincidence of one scenario which is yeah which is kind of the the end like that's that's really clear that if we want to trade the opposite thing we can have a we can have this cow this coincidence of want but even if you're trading um some random token like some some project token for us dollars and i'm i'm probably buying some other random project token with us dollar then what happens in most cases is that it will actually be a two-hop trade of project token to ethe and then eth to usd and so even though we don't have kind of an obvious coincidence of once we're trading different things part of our route actually overlaps in kind of well the opposite direction so we can dissect the trade into its components and then still create a coincidence of once and save part of the lp fee on one hop of our two trades for example okay i haven't uh okay i mean it sounds logical can you can you give an example because i don't think i've digested it yet yeah so well let's say let's say i want to buy well let's say i want to buy gno with us dollars and you might want to buy but you sell as you mean like ustc ustc for example yeah and then we can even say you might want to buy uh rep bitcoin with um with with die for example yeah and then let's say if you did this on uni swap or kind of on whatever amm protocol you'd be using it would route you um it would route me from geno to eth because that's the most liquid pool and then it would rot me from eth to usdc yeah and um let's say that well for you it's kind of the the the other um the other direction so for you it would also route you it would rot you from die to eat and then to wrap bitcoin and so um well basically we could use instead of we can basically skip let's say that the amount is roughly the same we can we can basically skip at least one one route going going via um maybe let's let's let's let's actually say that you are you're buying it with ustc i think that's it's more it's more obvious so we both use the same stablecoin um but even if it's different stablecoins we can use the fact that for example curve or other providers have really really tight rates for stablecoin so we can even get a little bit more margin there but yeah just more the more obvious cases probably if it's both usdc so then in when i'm i was going to buy gino so when i'm buying eth from usdc and because you're selling rep bitcoin you're going via you're selling eth for usdc then on this part of the route we have a coincidence of want and we can just trade against one another and only use the second hop of the route for getting our kind of well more exotic yeah and just but not yeah identical tokens interesting okay so we both you and me we both sign uh we we both sign this i'm still going to call it a transaction even though it's just a blob of data so we just sign the transaction we don't publish it we get handed off chain to the relayer um sort of what what happens next i'm sort of looking to understand like what actually is a batched auction um how does it work right and so there's maybe a difference between what happens now and what we want to happen in the future um because of course the protocol is supposed to be fully decentralized um and so basically what happens is there is an off chain order book that is queryable kind of public for for people um that want to that are running these solvers that are trying to find matchings basically um right now the reality is that we are running a few different implementations of algorithms um but yeah right now it's it's not really this it's not really decentralized yet um but basically permissionless well the only permission that these parties have to have is that they have to have staked um a certain bond in well not the settlement contract but kind of in an authentication contract that allows them to become a so-called solver and that is because by not decentralized like what is actually the thing that they can do right so they they get the order flow basically so they just take they get even water flow is very valuable yeah they get the order flow and they can even so the in the protocol they can also execute the settlement transactions so they have access to to the entire order book and are basically then trying to craft a solution to this multi-dimensional batch auction problem basically having all the limit orders and knowing kind of the state of everything that's on chain what can we do to maximize and that is kind of where the competition comes in and where not everyone can just you know pick the orders that they like and match those and kind of ignore the other orders and basically when they have a solution they announce it to the protocol and we have an optimization criterion which can be roughly estimated as the trader surplus basically how much more in some did people get after well when the matching is taking into account compared to their limit prices so if you were willing to buy eth at i don't know 2500 and but you actually got to buy it at four hundred dollars and you could you bought one eth your surplus is a hundred dollars and so the there's a little bit more nuances to it and this criterion has to be kind of more carefully um what we have a blog article on on on our forum that explains it a little bit more but in high level kind of the idea is we want to maximize the surplus of all the traders in the batch and let kind of bonded but permission the solvers compete for finding the optimal solution here because the problem is mathematically very complex it's a multi-dimensional um auction with kind of well a lot of different liquidity sources and where trades could come from so we expect this to be not really deterministically solvable within like 10-15 seconds and this is why we think there should be different heuristics and different approaches different algorithms and want to kind of make turn this into a competition understood okay yeah i mean the i i would have more questions about sort of the uh the servers but it's not really the most interesting part about it so let's move on sort of to the how actually a batched auction works and what sort of what guarantees it gives to the participants so the the smart contract um basically only verifies that the order that is settled is um well the signature is valid so the user has actually authored this this transaction has authored this trade the the limit price is satisfied so they're getting at least what they what they asked for um and that and and that roughly is kind of what is what is verified on chain um however and that is kind of the reason why solvers are bonded uh we can of course on a protocol level and force other kind of soft criterias such as the clearing price that has been chosen uh can only be within a certain margin of error let's say even 0.3 percent um of the spot price of the most liquid pool um on chain and that you know as a dao could decide well we take units for let's say v3 as kind of the oracle for what is a fair price of a token um and then there could be some kind of soft um soft guarantees on top of just what the smart contract guarantees yeah and kind of that's why we also well solvers need to be bonded because well theoretically i could just pick one order and just settle it against myself because i know it has a very it has a very generous limit price yeah but then basically the kind of the the assumption or what what we have to kind of balance is that the bond is higher much higher than the value that can be extracted from uh from subjects you can take away the bond yeah okay so let's assume let's assume follow to keep it simple that the the servers are they act um not maliciously so they don't participate in their own auctions yeah so what happens then like let's say let's say like you me and three other people they all want to trade um the same pool or not even maybe the same pool but just we have some overlap so what what kind of happens there then yeah so we all submit our signatures into this off chain order book and then many solvers or the one that ends up winning solver will query that order book and get our get our orders and then it depends a bit on the strategy that the the solver employs um we have one we have one solver that actually models this problem as a multi kind of as a mixed integer optimization problem so it really kind of tries to find the globally optimum solution and as long as the problem size is small that's fine so it will actually figure out that maybe there's a ring that we can trade in and maybe then there's some axes which can't match in the ring so it has to find the best on-chain liquidity for this and then well it figures out what that is and kind of crafts this on-chain transactions which consists of our signatures the clearing prices the amounts that our orders are being traded with so basically well if it's filler kill order is the full amount and then what we call interactions so kind of what are the on-chain liquidity pieces that need to be called into in order to fill up the access that we cannot trade directly with one another and then the smart contract well executes the logic it basically takes the funds from it takes all the the costs from the traders that are involved so just um the sell token gets transferred into the settlement contract it then invokes all the kind of on-chain liquidity interactions that it has been sent so it might call into let's say uni swap and get some other funds from balancer yeah and maybe to just like in case it hasn't been clear to everyone who's listening so if there's an access that cannot be matched via the coincidence of once then this is just sent to regular on-chain exchanges exactly yeah um and then the last step is to pay out the proceeds so everyone gets the buy token um according to the uniform clearance prices that were submitted to the settlement country how do you ensure that everyone in the in the um in the batch gets the same price um so we could ensure this in the smart contract logic we could basically say that the prices are submitted as a vector and so it means that basically to get the exchange rate between two items in that vector uh we basically have to multiply it basically the unit let's say the unit in this vector is us dollar and you have um bitcoin and etc in the in that vector and they are represented at dollar prices but somebody's trading ether for bitcoin then we would say well because it's uniform clearing prices they're arbitrage free and so it means basically i can multiply the two prices and and just deduce the exchange rate from bitcoin to ether by only having the price and us dollar from bitcoin and ether okay doesn't matter well let's let's i mean let's give an example let's say uh the price of bitcoin is 25 000 and the price of either 2 500 in this in this vector then just by knowing well there's no arbitrage and it's uniform clearing prices i know okay bitcoin trades ten to one uh against eth uh-huh yes um but okay i'm not sure if my question was too simple to and so well to you actually what you asked how the smart contract so this is how we well at the moment um this is like the smart well the smart contract could theoretically have um different prices for different token pairs and so at the moment this is also something that we expect the protocol or the dow to to observe and basically if a solver submits this a different price on the same token in the same batch then that would also be a slashing card here yeah okay i mean so basically just the the solver the server has this sort of rule that they have to obey which is everyone should have the same clearing price and if they don't then they get slashed right isn't this like isn't it possible to check this like a trivially in the smart contract so right so everyone has the same price then it fails yeah so so basically that's right that's why i said how it could be done the reason why we didn't go with this now in the concrete implementation is that we already rely on a bunch of other kind of soft criterias from the solvers where we say the protocol needs to enforce it and it was slightly more simple to write like the just the data structure we could use in the smart contract was simpler to write if we didn't have to actually enforce that it's a vector and that basically the exchange rates can be computed just from each item we said well if if there is if we create a client that can check that the solvers are behaving correctly and will basically flag an alert if that's the case then it's trivial to add the uniform clearing price check also to this to this one yeah every kind of mathematical check in the transaction makes the transaction more expensive so um i see why you want to reduce this like that opposed opposed to the optimality criterion like is this really the optimum solution which is impossible to compute on chain you're right that the uniform clearing prices could if we really had to i wanted to be in for something okay but it's like it sounds like this is a example where it's much better to have like sort of a fraud proof for example where anyone can permissionlessly submit a transaction where the uniform clearing price has not been obeyed and then they get the bond of the um of the the solver who basically disobeyed the rule right yeah okay that makes more sense and given we have fraud proofs in the system kind of in the logic already then if this was the only thing we relied on fraud proofs for then it would probably not be worth it but um given that we kind of okay so you do it's not it's not even just like someone from the from the gnosis team you know hits the slash button it is actually based on frog proofs okay so in the moment at the moment right now we actually uh we are kind of white listing the or allow listing the the solvers um that can participate and so we make sure that we have a certain trust relationship with the participants in this in this competition in the future we expect this to be done kind of automatically allow listed by posing a bond and then we would assume that the gnosis dao so uh some a decentralized kind of committee can or even like ignore this protocol dao if we want to break it down further will enforce the slashing and kind of well yeah create may it be reality right we could even prediction markets or something like basically create a mechanism that allows to whistle blow and slash yeah i see so when i submit um a trade to you and then sort of first you try to match it with another trader you find to you try to find some overlap whether it's for the entire route or for some part of the road but this sort of this sort of requires for there to be other people who do want to make similar trades and to create this overlap so i'm curious how long is sort of the the length of every batch how long is my limit order valid to be filled by others before it kicks into this um on this on-chain mode where sort of the access is sent to for example one inch all right so um first of all you have control over how long your order is valid um you can you can you can change this in the in the ui you can say by default the order is valid for up to 20 minutes but our logic at the moment is that after 30 seconds we will match it with whatever is available so we wait for um well at the moment up to 30 seconds but you're totally right that um of course this is a this is kind of a chicken and egg problem and we need kind of enough people to use the system for it to actually be um be valuable i don't actually see it here in the ui like is this is not you're not talking about the transaction deadline setting right yes this would be but this would be this would be does it just have like a completely different like in in the regular dex interface this has a completely different meaning right just that transaction doesn't execute whereas you what i'm asking is sort of how long can i make my keep my um my order in the order book before it's kicked out of the order book to the on-chain exchange not expiring so well yeah so right now you don't have control over over this parameter it's set to something like 30 seconds 30 seconds okay and and what we do is at the moment in order to get traction we subsidize the fee significantly so the fee that you're paying on a cow swap trade will actually be much less than what you would pay if you go um let's say on uni swap and did you trade directly and we're envisioning that this form of subsidy could be dependent on how long you're willing to wait um kind of similar to how uberpool back in the days was launching at least i remember it in the us they had like okay if you're willing to wait for five minutes we're going to give you a cheaper rate and then most of the time you didn't get matched because there were not that many people using it at the time it's not even that right i mean i'm kind of curious how you arrived at 30 seconds like it seems that so okay there's one obvious reason like people want to get their trades executed in like some reasonable time but to me it seems like i would be inclined to wait like many minutes in order for there to be to increase the chance that there's some coincidence of wants there right and so to the users that we spoke we well so basically it's we are introducing a completely new way of trading uh by not sending a transaction but sending a signature and so one of the feedbacks that we got immediately was yeah well this is cool this is great but um it takes forever and if i'm trading my or it tricks whatever but it takes you know if we wait five minutes which is actually what we did in protocol v1 people were saying my trade takes forever and i'm trading some you know more volatile tokens so the price movement of the token within these five minutes if against you uh might actually be more impactful to you than saving 0.3 liquidity provision fee or saving a bit of gas now but i have that's what i use the small slippage tolerance for right so yeah so if you do that and if you're an kind of expert user and and know kind of what this does and how you can fine-tune your transaction to still be kind of protected against bad price movements then i can see this is totally this is totally fine and this is totally something we should offer kind of with cow swab as a product what we try to start off with is kind of uni swap in the type of user that goes to uni swap and kind of understands the ui and understands what's happening and wanted to make it as little different as possible from the status quo of trading and that's why at least right now there's no there's no user control so you were saying you optimized it for the regular unisop trader yeah and maybe just one number that kind of makes us confident that even with the 30 seconds we can already kind of see will be able to see a few cows in action is that there's roughly about 30 um dex trades within a block um and in the very beginning when we subsidized um the transaction fees by 90 so made it really cheap for people to to trade um we actually did already uh see multiple batches with um i think up to 20 25 trades in them and then because of the thing that i um tried to explain earlier where we can break up the trades into different hops or different parts we can actually find coincidence of ones or match people with one another on just parts of their trade instead of kind of finding the perfect coincidence of one where people really want to buy the same thing at the same time so if i if i wanted to trade like like a a pretty pretty frequent pair let's say like if wbtc so what is basically my odds at any given time in these 30 seconds that i see someone like that i get a coincidence of once yeah we have uh we have we did this study when we before well basically when we started building the the protocol um um so i don't have the numbers of the top of my head but we did find a reasonable basically we decided i think it was about was it twenty percent that's awesome that would have been actually my my top of the head number as well yeah it's something like it was something like and of course it depends you always well we had like different scenarios how much of the traffic do we get um and of course if we get 100 of the of the traffic if really all dex trades are settled via something like this protocol the coincidence of one potential is much higher than if let's say we get five percent market share or one percent market share ten percent you know i i don't like i don't often say this but you should definitely do liquidity mining i mean like very few protocols have such a big um like can gain so much from that just because like let's say like let's say other does sort of liquidity mining right then you know people deposit to other um as long as they're liquidity rewards and when the rewards are gone they withdraw go to the next protocol right but with you it's actually so once the people are in there and you can remove the rewards completely and they still benefit tremendously from being matched with each other instead of sent to the amm right yeah so for us it's really the question if we need a liquidity mining program because really the liquidity just the kind of passive liquidity can come from any protocol what we really want is a trader incentive program so yeah yeah sorry yeah i i use this long this word like as a reward for like a usage mining thing like just a reward for people to trade there and one one idea that we have that might be cool is something like a happy hour where basically we say at this point in time we either subsidize it completely or you know word out where we say you know let's all meet on campus that's such a great idea that's such a great idea because this is like you bundle all of the matches in that one hour right damn that's pretty clever that's kind of very yeah yeah cool uh that's a good idea um maybe to round it out so what are your plans with cow swaps like what are sort of the next features on the roadmap the any low hanging fruits and so on right so for us as i said you know in the beginning how swap is really just one application of gnosis protocol in the wild and and this is kind of our approach kind of a maybe meme driven and kind of easy to understand playful user-friendly application of this kind of multi-dimensional batch auctions gnosis protocol kind of at its core what we're planning with gnosis protocol in the in the future in the near future is actually to have other decentralized exchanges also provide their order flow to gnosis protocol and increase kind of the amount of trades that we can match with one another so kind of on the horizon we are working very closely together with balancer who recently launched balancer v2 and are hoping to get basically the balancer front-end interface to work via khao soi oh sorry diagnosis protocol um what does it what does balance i have to have to gain from that um so balancer really is interested in giving users the best kind of price and and and trading experience um and so well first of all the the user experience will just be better with cow swap or sorry with grossest protocol because users will not have to pay gas for failed transactions they don't have to worry about transaction management and kind of the user-friendly aspects of it and on top of that balancer is also interested in just providing an interface where people are guaranteed to get the best price they believe that they can be more well at least i cannot be for them but what i understand is that they believe they can be more successful if um they are not kind of super opinionated on you can only trade on our interface via balancer pools but if two people match at the same time then it's totally fine if they if they trade against one another and then only the access is sent to balance uh-huh so basically this means if i trade on balancer then my order would be first sent to cowstop for to to to look for any coincidence of once and then it's basically sent to banister outputs after that but not sort of to one inch for example as far as we as far as my understanding goes right now then um yes they they're even agnostic to which solver would be handling these orders so oh they are full i mean it would make sense that at least the access is sent then to balancer so there's one thing about the yeah there's one thing about the balance integration on our end that we actually very tightly integrated with their v2 contracts and so that it is more gas efficient for gnosis protocol to go via a balancer pool than let's say calling into a completely um different product let's say going via uni swap pools yeah and so as long as the prices on balancer v2 are roughly the same as on other protocols there will be a gas advantage of for gnosis protocol to settle via balancer pools and so the solvers would be showing choosing those because yeah the overall is that's because in the single token world internal calls basically are cheaper that for one and then also and also our integration with their vault is so tight that um it's like really tightly integrated that we can even this the smart contract the settlement contract can even hold some balances inside the internal vault and so we can even avoid kind of um depositing into the world and withdrawing from the world if we don't have to so um yeah our integration there is extremely focused on gas efficiency cool um thanks so much felix um you have built a tremendous protocol here um i haven't done episode focus on e projects uh for a long time so this was very interesting thank you for your time it was very very interesting to talk about it and you want to tell your like our listeners where they can find you on twitter and or where they can find cow swap um yeah so cowswap.exchange is the name of uh well is the the user interface that you can use diagnosis protocol as kind of more fundamental protocol is currently mostly documented on the gnosis forum forum diagnosis and then myself i tweet under the handle uh floydpold f-l-e-u-p-o-l-d-underscore and well gnosis pm is also a twitter account that we where we kind of post news about our products and of course at mev protection is the official twitter account from the cow swap exchange which will update kind of new features that we post push on this front and maybe when happy hour becomes a thing we'll post about these kind of things so yeah that's a good a good fun account to follow as well 