foreign core where we explore the Big Ideas in crypto from first principles this show is hosted by John Charbonneau co-founder and general partner of DBA and me hasu strategy lead at flashbots and advisor to the light of Dao today hatsu and I sat down with Mike noidder from the ethereum foundation and Chris Hager from flashbots we had a great time chatting through PBS also known as proposal Builder separation we talked about the history of PBS on ethereum talking about what it looked like on proof of work and how that brought us to where we are today with Mev boost on ethereum right now we also looked ahead looking at the future of PBS asking each other should we enshrine PBS or not and what would that look like that included talking about really fun new ideas like Pepsi we also had some fun at the end talking about what should PBS look like on other domains especially layer twos on ethereum like other Roll-Ups where we chatted through why we think it could actually look very very different on l2s compared to ethereum itself hope you enjoy what is proposal Builder separation or short as we know it PBS sure uh so the the first thing that I'll pick out that we kind of used before it's the quote from Barnaby is like still my favorite kind of one-liner description of what it really is uh so PBS is first and foremost a design philosophy recognizing that protocol actors May invoke services from third parties in the course of their consensus duties um so like I really like that it's just like a kind of high level setting of what it is um because it really while we look at it in ethereum as like a very concrete implementation the reality is it is just kind of a higher level design philosophy of we understand that we're going to have protocol actors that are responsible for certain things um and then there's going to be an economic incentive and for various other reasons for them to Outsource um certain uh actions to other actors that may not be actually in the protocol so concretely the way that like we're used to thinking about that is in the ethereum worlds where we have validators one of which who will be the active proposer at a given time to propose a block to the rest of the network and the reason that we have concretely proposed or building separation here is that we want that proposer to be relatively unsophisticated and yet be economically competitive such that we can keep the validator set decentralized so they can Outsource the very specialized tasks to this network of specialized block Builders which outside the protocol and those block Builders are responsible for building you know what is the most optimized block that can extract the most value such that they can pass the majority of value back because otherwise what you would have conversely is if we don't have this ability for proposers to kind of uh interact with this out of protocol Market in a relatively trust minimized way well then you would simply have like a very clear return to sophistication where the only way to be a competitive proposer would be okay well now you need to be a builder in-house you need to be super sophisticated and know how to optimize everything so it's trying to get at the fact that you're going to have these different roles and we need to design like what is the right way way to have an interface between these kind of in protocol and out of protocol roles and right now the way that that works with Mev boost is kind of uh strapped on uh way of doing that and like a lot of the research right now that like Mike has been doing over the f is like how do we kind of maybe bring that a little bit more in-house and like what should that look like to try to make that interface between the in protocol and out of protocol actors uh even more trustless yeah and I always like to kind of circle back to vitalik's end game post the last sentence of his post is basically the the future of of many iterations of these designs will probably end up in a world where there's centralized production decentralized verification and strong anti-censorship properties and you know he kind of talks about how some ecosystems might might start more centralized in the in the block production world and evolve into into something that that has decentralized verification only um and others you know could could take different trade-offs in the in the initial state but ultimately like we might always end up in that state where we need to firewall off the heavy duty um kind of actions that the validators need to take from something that um you know can be run on a local machine has like credible decentralization uh features so that's kind of how I like to think about it yeah you spoke to a lot of things that I'm also thinking um I think in particular it's also the case of there is either an implicit or an explicit auction and if the arch auction is implicit it has a lot more negative effects Melodies and incentives to centralization and met um PBS recognizes that not all protocol actors may be able to fulfill um all the duties in a comparatively performant way and need external support for that to also keep the decentralization of the network stable yeah and what I particularly like and kind of why I picked out this this quote is is that it really hones in on PBS as philosophy right um and um I think the pbsd implementation on ethereum faces a lot of criticism from different directions um all great arguments and concerns that we will also go into in this episode but really uh I think that like general idea behind it is one that is extremely sound and I think that all of you laid out here uh really well so with this high level overview out of the way I'd like to go a bit uh you know a couple years back um and hear from you um PBS as an idea where did it start what is its history how do we get from there to where we are today um I think historically the the PBS Marketplace was a little more um explicit in the in the Mev Geth world before we had proof of stake merge so essentially in in that scenario there was you know a few large mining pools that controlled a huge portion of the hash rate um Nev Geth was the ability like provided the ability for for Searchers to send bundles to those miners The Searchers were able to send bundles to The Miner kind of without worry about the miners stealing them because since there were so few the miners reputation was was worth more than stealing the the contents of that bundle so in that in that regard um the the interaction between the Searchers and the block producers was was simpler because there were so many fewer block producers um and then I guess as as the merge kind of approached a lot of people were talking about PBS as a general approach um and I think even we're considering like holding off on shipping the merge until we had some in protocol version of PBS that that could be accompanying you know the actual the merge hard Fork um I think that that was discarded in general because the merge was already you know a huge lift and and adding more complexity to the software into the spec was kind of just going to slow things down more than necessary and so yeah maybe I'd pass it over to Chris here as flashbot stepped in and implemented map boost and that was like the real first PBS instantiation out of protocol that that we saw post merge yeah I think um about one year before the merch uh Stefan from flashcards posted the OG math boost specification uh outlining how proposers could interact with an external block building Network and then work started in the background in in the dev connect meeting on math day in Amsterdam in 22 that was April 22. there was a finalization of all the apis that were needed and from then on it was clear that everybody is shooting for the merge with PBS with math boost PBS enabled I think at this point it was fully unclear how permission or permissionless this whole thing will be and how this plays out but it seemed inevitable that some form of this is going to ship and yeah we work them through the summer to deliver a permissionless relay on the open source software that also other really operators can run and had everything ready in time just in time for the merge um um that include the permissionless Builder access yeah and it might be worth just kind of running through MAV boost as a as a software for people who aren't familiar um so the idea of map boost is there's there's a third party actor here that facilitates the auction between the proposer and the Builder and the reason for that is the the proposer needs to trust that the the block that the Builder produces is both valid and accurately pays them the amount that the that the Builder promised and the builders can't simply send those blocks to the proposal for them to verify that themselves because the proposer could just steal the Mev From the Block and in that way like take away all the earning from from the Builder themselves so the relay kind of sits in the middle it it facilitates this auction in so far as the builders send a bunch of blocks to the relay and the proposer commits to the highest paying of those blocks before they actually see the block contents so that's an important feature here and and that kind of comes up as I think it'll probably come up as we think more broadly about epbs designs which is that proposers need to commit without seeing the contents of their Block in order to protect the builders from from the Mev being stolen so the current status quo I guess post merge there was maybe like three or four relays running immediately and now I think we're up to like eight that that facilitate most of the map boost blocks um a bunch of Builders are are sending blocks to those relays and about 95 of validators are hooked up to one of those relays and and using their uh connection to that relay to Source their block production yeah I mean I I guess I'm really a sucker for proof of work and kind of the history of it so I would add that um in in some ways there was even a form of uh of proposal Builder separation before uh nav gef existed in the in the division of labor that existed between a mining pool operator and the workers um because um the way that it works is the mining pool operator would construct um the block body and then they would send um they would hash the block header once and they would send it to the workers to to Hash it further and that hash would then have the golden none so not right so it you find a bunch of things that you find block construction because there was only one party that had to do like all of the p-ring and the validation and the block construction and so on and also had to invest into latency infrastructure right being like having good propagation to other mining pools and to Big exchanges and so on um and then you had the workers who did like the actual work on on the encrypted block body right so you also had this idea of the commit reveal scheme even back then so it's it's funny how how far back um some of these ideas Trace that um we said that we established PBS as a design philosophy right and I think you already touched on it a little bit John when when you said um we want to protect uh validators from having kind of to do these duties that are so complicated so difficult that it leads to an unevenness you know in in kind of how much money they make or how well they execute these these services so um tell us a bit more about what are the benefits of of PBS as we try to you know unpack this idea of you know let's create a healthy decentralized Market structure yeah so the high level benefit is kind of what uh Mike was talking about before as well um how like in large part decentralization of uh the validator set is a means to an end primarily um and that's to get certain properties out of them and out of the protocol such as censorship resistance liveness and extreme scenarios stuff like that so to get that we want to decentralized validator set and then to get the decentralized validator set we want to make sure to offload all the complexity um to these other builders to the extent that uh possible um so that is like the simplest one is just to keep them decentralized and then the other realization kind of on top of that is hey if we have these more specialized more sophisticated actors that kind of sit next to the protocol that we can like rely on to be economically uh incentivized to keep building these blocks we can kind of lean into that and take advantage of it as long as their power is sufficiently constrained so the simple things like that is like okay we can have Builders do these more complex tasks going forward the the clearest example of that being for scaling um so something like the Dank sharding design where instead of you know having all of these like different subcommittees where you're building all the like you you effectively will now have like one gigantic block with all the data in it and that is like a relatively more complex task um to do for one single person to make this larger block make all the kcg commitments for it et cetera but that helps and produces a more scaling design and keeps the load on the proposers very light it's just a realization that hey we're going to have these specialized actors anyway because there's clearly an economic incentive for Mev capture reasons for them to exist like they will need to so we can take advantage of that lean into it and have them do these other tasks that we can kind of push off to them that like someone needs to do in a more efficient manner and this is a new idea that you're now introducing right because so far we kind of kept it to Mev and and and kind of just the ordering of transactions I mean we touched on some things like then like a mining pool needs latency infrastructure and and good peering and stuff like that but now you're really opening almost like an entirely new like much wider design space right yeah exactly and even like even kind of more extreme scenarios I would say or like kind of push in the same idea to different layers um it's the same kind of thing where depends on who you ask how viable they are uh but like base Roll-Ups as the simple example of like when vitalik had first uh had a post probably a few years ago um on Roll-Ups of like what are the different ways that you could do sequencing designs like one of the ideas was something that I called like total Anarchy at the time and you basically instead of having a sequencer for the roll-up it would just be like you know what's the first one that lands on chain basically is like that's you know that's the block for the roll-up um and the reason that didn't work is because like that would just be an absolute mess like you would have spam on chain like no one would know who's gonna win um it would just be a lot of wasted effort incredibly inefficient like you wouldn't know anything um the reason that like that kind of becomes a more viable design and like this is something that Justin's post kind of touched on earlier this year called base Roll-Ups it's like hey we can lean into the fact that we now like have these more sophisticated and economically rational actors who have this proposer interface where they you know the Builder for the layer one can effectively be uh Slash the Searchers feeding into that kind of actively B the sequencer is for the roll up and say hey like I'm not going to include these 10 failed attempts to get a roll-up Block in here I'm just going to include the like the The Blob that is going to be the most efficient one for this roll up and I'm going to land that one on chain and I'll pass that to the proposer and make sure only that gets in so it you can lean into it uh realizing that there are going to be these economically incentivized parties who are kind of sitting next to the protocol and have this that have them do this kind of additional work acknowledging that like hey they're gonna be sitting there anyway we might as well like lean into them and use them for these different things so that's another simple example um other things of stuff like for statelessness um having them create proofs to make that a viable design um because otherwise like you'll need to give the witnesses to the validators for them to be able to be stateless like leaning into them for all these kinds of different tasks you realize like there's a lot of stuff that we could lean into the builders and like have them kind of Outsource those kind of complexities to them yeah um complexity can then also increase on the proposal side of pet of of PBS for instance in um Pepsi the protocol enforced proposal commitment which are also a form of PBS where there is more arbitrary commitments a proposal can enter into so this whole design space provides a lot of more opportunities to build interesting things so it doesn't necessarily I would say have to increase the complexity on the proposal a lot um because even if they are entering into these arbitrary commitments they don't have to be the ones who fulfill them um and this is like something that kind of Barnaby like touched in a bit in like his last FAQ of like he's talking about like Pepsi boosts and stuff like that um where I mean Outsourcing a full block is just one thing you can Outsource like they can Outsource any of these commitments where a proposer can just be opted into like hey here are the commitments that I've opted into specifically and the Builder as long as they're aware of those like they can build a block that's in recognition of those and like they will send them a block that fulfills those conditions because if they don't fulfill those conditions like they know that you know they're not going to get their block on chain it's okay it's the same kind of incentive as builders for the full block auction as long as like there is a an interface and awareness of like the builders know that the commitments that they're opted into like they can kind of build them for them so if designed well I would say it doesn't have to increase complexity for the proposers necessarily they'll just can also I would add they are out of product collectors can in general do things that in product collectors can't so in Mev in particular I think there's two very clear things um they can keep transactions private right they can have like a build I can run a suit bid auction instead of a an open bid auction um they can do simulation on the transaction so they can have you know well like instead of an oil pay auction and these are some things that were a value that I could do but it's it's like really difficult and it's not possible really to establish this trust right and so ultimately out of protocol um kind of the design space is much bigger and it then leads to to a better Market structure two other features that just kind of jump to mind when you were describing that hazu is um cancellations so like Builders can offer bundle cancellations this is especially important for um for the centralized exchange arbitragers who need you know if if the centralized Exchange price moves against them they need to be able to cancel a bundle and also um oh yeah like instant confirmations like Builders could I mean it kind of depends exactly what what type of confirmation the Searcher is looking for but they could they could give some guarantee on the like post-state route after a bundle you know conditioned on their block winning the the bid so yeah there's there's a lot that uh Builder can do out of the protocol as you mentioned in in general I think we say well PBS allows validate us to stay simple and affordable and connecting that back to what you said John why do we want that it's because we want to maximize the censorship existence of the network right because a lot of that in particular in ethereum so when you talk about layer Twos for example um they all have assumptions built into their own security model that basically says you know the layer one chain can't be censored for you know X period of time or something right so this is actually kind of the the property that that we they were trying to to protect um I've seen another argument discussed and this is really kind of a double-edged sword but it's it's nonetheless interesting to point out um which is the regulatory argument so the argument goes roughly like this right so the less discretion value that does have over the kind of blocks that they build um the less they have to be regulated as any kind of financial intermediary right and and you would really kind of draw the line on the far end like on one side of kind of the extreme Spectrum you would have a validator as a as a like money transmitter but that basically has to kyc uh every single person that transacts to them right and so it would be like an extremely kind of sensored and regulated ethereum and on the other end you have the validator as an ISP or like a Fiverr cable right so it's just like what it transports is just data packages and inspecting all of them would be completely infeasible and so it really has no discretion over what passes through uh its pipes and so I think where we kind of like a big idea behind keeping proposing simple and affordable is really to also I think boost this argument right that that really um proposing is um yeah it should be kind of you know have the least amount discretionary as possible but when you get there um you introduce new problems right then we talk about because yeah like because we are talking about really also like difficult jobs that the builders do um there tends to be you know power or um outcomes in this market um and so now all of a sudden you know it takes a lot fewer things to go wrong uh to to kind of censor that market in turn right and so yeah ultimately you're not really like solving the problem like easily you just like shifting it in some way yeah and it's probably worth just like calling back to immediately post merge the the issues around like ofac compliance and censorship we're largely there because the relays um you know had in had to commit to to censoring those transactions in some way so even though you you allow the the burden of the validators to be shifted to the relay that still opens up like new regulatory surface that um that might be smaller than the regulatory surface of the entire validator set so yeah definitely a trade-off and also you know in terms of censorship resistance I think inclusion lists and their relationship here is also very interesting and this is something John and I have discussed a lot which is if you bring back the the censorship or existence properties and and place them back on the shoulders of the validators now the validator has to opt in to kind of getting these these ofac or these sensor transactions on chain so it's it's kind of like okay I the responsibility is still somewhere it's just like who who shoulders it at the end of the day so yeah oh yeah and that's one of the interesting things with these designs where like it is hard you know to say like you know when you're designing inclusion lists or something like that like are you designing for a specific regulatory environment in mind where there actually aren't clear regulations like it's pretty hard to actually do that um but yeah like some of the designs like that you know if there is a regulatory burden um it's also probably where I say like not legal advice type thing I don't actually know um but like some of the designs like that would seem to put more agency kind of on a particular actor where like we're saying one person is enforcing censorship resistance like they're explicitly saying like you must include this transaction in a block um that maybe looks a little more gray as compared to um something like that and this is one of the reasons that I think that like designed like Suave and other types of encrypted Ben pulls are like they're very often talked about as an Mev solution I think that they're like very interesting from the censorship side of things and like that is like a very underrated property of them is that like they seem to be in the best direction of ensuring these properties for people while also giving everyone plausible deniability of note like I don't I don't know what's in there of completely removing that agency from anyone throughout it's just that like I see a bunch of white noise and I run my algorithm over it like here's what I get at the end of the day um and like that is what starts to really look like at the end of the day is like I'm an ISP I'm sending data packets around I don't know what the hell any of them are and you're just you're you like you really are a dumb pipe at every point in the supply chain so so like that is like a very interesting Dynamic of them that like that I think like does get underrated at times um is that like they are very much a censorship tool um and like making everyone a dumb and for infrastructure provider as opposed to just being you know this like MVP solution which like they are very helpful for you know short-term privacy for things like you know making an auctions incentive compatible Etc but the censorship side of things is like very interesting to me for that reason as well yeah very well put I rounded off with with one more point and then we can move on but I think what I in particularly like about PBS is that it's it's basically acknowledging that a division of labor between different parties will happen no matter what and I think this becomes very clear when you contrast it to kind of you know other watering algorithms for example or other forms our blocks can be constructed um like time-based ordering right because um you with with with PBS you really basically acknowledge that there is a market for ordering these transactions with the goal of maximizing um validator revenue and so that is the most valuable thing for them to do um and if you don't allow or validate us to kind of compete on that you know to to maximize kind of the revenue that way then what you will get is you will get you know other forms um basically of extraction that that I kind of ultimately much more destructive for the chain and so you basically say well if there's Mev to be extracted I want it to be an explicit option I don't want it to be an implicit auction that's harder to monitor um that like leads to spam that leads to latent like an entrenchment of latency Advantage players and all of these things so centralization yeah yeah so it's really about saying you know the acknowledging that the market will find a way and designing around that and I think yeah this is uh this is some like a line of thinking that I think you find in all of banner base uh etiquettes of any risks I was just going to call back to to this idea that you know that we mentioned before which is the the regulatory surface kind of changes um in terms of centralization and I guess not even from a regulatory perspective but just the fact that um you know in the current status quo there's essentially like eight to ten relays that are responsible for 95 of ethereum blocks and you know eight to ten builders that are that are responsible for producing those blocks that has some some definite risks in terms of it those are the the builders especially are the ones in in a position to like capitalize most from from the PBS Market they can um continue to like make make the most money the relays are in this weird position where they're kind of a public good um but still the fact that there's so few of them controlling such a huge part of the market is um is kind of anti the ethos I guess generally and one way this actually manifests not from uh economic perspective but more from just a fragility perspective has showed up in in a few different issues around relay operators and the relationship with consensus clients so immediately after the chappella fork there was a bug in in the relationship with how prism interacted with met boost and that resulted in you know huge Network instability immediately post the hard Fork There Was You Know It took a few epochs for the the chain to finalize there was a lot of missed slots it was full-blown like firefighting mode um and that that comes from the fact that you know there's these 10 relays and the all of the the software that is that is running on the on the validator machines is kind of decoupled from from this med boost external software so there is like consensus stability implications around the the centralization found in in particular in out of protocol PBS systems I will add to that there is the overall technique complexity of Android PBS um the merge is now basically just a year ago and the whole year we've been like thinking about moving PBS more in protocol how to get rid and and move beyond the relays as trust detectors and it's a super hard challenges where you may need a lot of additional responsibilities you may need to increase the consensus protocol complexity which is already pretty hard to to reason about and it could introduce new nuanced reorg risks or vulnerabilities and this is just the thing that is very hard a very hard problem to get right so I would say there is a lot of overall technical risk to on the path to infra to call PBS um yeah I mean I I have like a bit more kind of Arcane point but um I mean clearly we are seeing that um proposal separation can exist outside the protocol um and so that's you know where it does so far most of the time um and not all of this stuff is actually maintained by um ethm core developers and and so I guess like as someone who was working for the ATM Foundation Mike like what do you think this does to kind of the power dynamics in in like the ethereum ecosystem is it on the one hand more that like we have to change the definition of what it means to be a core developer or or is it that you know ethereum should eventually like try to pull everything into the protocol like what what do you think it does to to detect like the invisible kind of power in the ecosystem yeah I would say Barnaby has a really nice post on this we keep calling calling him out but he has a post called um seeing like a protocol and he defines kind of what what it what it could look like to enshrine different things and and when to draw the line and say okay this is out of protocol versus in protocol and I I think part of epbs and the work that that I've been focusing on is kind of figuring out um you know not only what to enshrine like what design works for Epps whatever technically speaking but also like on a more meta level should we actually do the enshrinement and one of our recent pieces that that we wrote with us for actually um and a few others was kind of talking about the the role of PBS and and Shrine PBS in the in the world in which a relay Market exists outside of the protocol still um so we'll probably touch on that later but I guess in the in the current meta where where Mev boost essentially is core protocol software I think there's a bit of an an ownership mismatch you know like the flashbots org wrote this code and and it's been like working really well for for the year that has been that's been running post merge um but I think everyone would agree that the testing and tooling and specification around that code is is not at the same level of the core consensus clients you know and part of that is because you know it's it's sort of a public good but it's also um you know originally written by flashbots so I'm not sure exactly how the ownership should evolve and and the politics there I will say I guess one of my big reasons why I like intron PBS is because it makes that that distinction a lot more clear like it draws the Line in the Sand is like this is the in protocol mechanism that we're going to maintain in terms of the consensus spec and the client teams if you want to go outside of that you have to rely on on out of protocol software that might inherently be more brittle more risky um Etc so yeah hopefully that answered your question do you think it's more risky for ethereum that important part of the um stacker maintained by kind of non-equarium foundation teams that may even have a commercial interest or do you think it's more risky that it doesn't hmm yeah I think it it feels more risky in the current state and and I'll say especially right now it feels like the equilibrium we're in is not stable um the the relays are kind of fighting for their lives in terms of some of them are our third party kind of incredibly neutral relays that are trying to get funding from from Grants and other things other relays are are parts of you know companies and Commercial entities that are trying to either monetize or trying to figure out like if this is part of the core business model um and you know I think even some of the the larger relay operators now it's it's not clear that if we don't find a viable funding mechanism we'll be around by you know the end of the year for example so I think um insofar as we get to a world where there's only like two or three relays that is much riskier to the protocol um than the current status quo which seems to be the direction we're headed in so I would say um yeah either either enshrining something and and clearly delineating between in protocol and out of protocol PBS or finding a way to ensure that the the map boost ecosystem is more stable into the future and more sustainable is is going to be critical in the coming weeks and months if we see in the protocol that there are some incentives for different um actors who specialize or even the same actor to to specialize in some way that they can make more money right or that they can do additional things for the protocol um I I feel like we have established PBS almost as kind of the canonical solution to this problem but this is not the case at all right so I would I kind of want to place it in uh kind of in contrast to some other things that you could also do um so what would you see as like the main kind of schools of thought that uh in some way competing with PBS on solving that problem so in ethereum I don't know that there really is a meaningful alternative to PBS like in the specific ethereum context because the way that you like the the kind of like broad directional alternative to PBS is just completely constraining what the proposer is allowed to do effectively um and like you know you you specify like very concrete rules of like this is what you must follow um so like some of the fair ordering type quote unquote Fair um ordering proposals um where you're trying to say like all the consensus participants like enforce upon each other like this is the ordering that you must follow within this block um so to the extent that that happens um there really isn't room to be Outsourcing block production at that point because it's supposed to be at least deterministic of like this is exactly the process like the block that you should be outputting out uh from this like the reality is like you're not going to be able to Enron something that prescriptive um in ethereum generally and so if you assume that there are going to be decentralized participants within the validator set and they're going to have some amount of agency um to propose a different block like the natural result of that is there is going like there are going to be different people in the world who have like a Better Block at different times and there's going to be an economic incentive for them to kind of like Outsource that production at different times so I don't really think that there's an alternative to PBS to any meaningful extent like within ethereum um given like a lot of the design constraints that it gives itself um for what it's optimizing for and outside of ethereum outside of ethereum I think that like you can argue that there are credible Alternatives and like the incredible alternatives are very opinionated and very app specific and so those like you can say that you know you don't need to Outsource to this arbitrary Market because you know we know for our application very specifically like this is the transaction ordering that is going to be welfare or maximizing for like what we want to achieve and so we can ingrain very specifically like this is the transaction ordering that like must result um potentially difficult to achieve that um but like you can credibly have a mechanism that like works pretty well where I don't think it's like just even reasonably like viable at all to do something like like that on ethereum which is incredibly opinionated which is incredibly constrained I think you can make a credible argument for that in like certain app specific use cases um but the thing is like even in the app specific use cases I think that the reality is it is still a spectrum on like how much are you constraining what you're doing and so like one of the things that I feel like is sometimes seen as an alternative to PBS um is what's called protocol owned building so this is something that like is more popular in the cosmos context with like the skip guys are working on where you know we have these app specific chains and so they have this notion of protocol on building which is you have certain consensus rules that uh enforce like certain validity conditions upon the blocks so we have it as part of our consensus in you know a chain like osmosis that you know after these trades like we check if there's an Arbitrage if there's an Arbitrage like it is baked into consensus that that is like that that Arbitrage is automatically closed closed captioning not available may very well be you can still Outsource block production so you can have protocol and building where you have like certain validity conditions that are enforced but you could still like the validator can still Outsource to some other Builder to build according to those rules and that's kind of what I was getting back to before um uh when I was like mentioning Pepsi briefly with Chris is that like you don't necessarily have to just because you have more constraints on the proposer that doesn't necessarily mean that like there is no more freedom left or like they have to do it themselves Pepsi is a similar idea of Pepsi is a way for proposers to constrain the like the the allowable space of like what kind of block it can propose in much the same way that like protocol loan building does um the difference is more that like protocol and building takes the very kind of Cosmos approach of you know tap specific and we can reasonably say you know for our given application this is the right way to constrain the the search space of like allowable blocks that like is relatively well welfare optimizing um so like every validator has to go by that commitment whereas Pepsi is kind of the like ethereum variation of that where we can say that because ethereum is very general purpose it is like optimizing for very different guarantees and so you have to allow proposers to be able to like locally make those constraints and those commitments which are very analogous to what protocol and building like wants to do um but in like a very generic context of like constraining you know what is the block that I'm going to Output kind of at the end of the day so like like a lot of things are viewed as uh alternatives to PBS and I think that like that is like kind of one of the things that like I try to like camera more is like BBS isn't just supposed to refer to like this is the concrete implementation that we see on ethereum today it is just like the acknowledgment of like there's probably going to be a separation between different actors and there is a spectrum of like what that separation is and like how much we constrain what those different actors can do um and I think that we're like starting to see that increasingly across different ecosystems so like PBS really is a spectrum of like what kind of constraints are you putting on different people and like what is the interaction between them yeah another thing that came to mind here is that um especially in the ethereum context The Ordering of a set of transactions could be worth different to different actors right like a certain block might be worth a lot to a builder only because they can can close the second leg of the ARB on a centralized exchange you know whereas that that block itself might be worth a lot less to to a validator that produced it locally um because they don't have the liquidity on the centralized exchange so there seems to be like yeah with with such a general purpose um design it doesn't seem that viable to to just say Okay this has to be the most valuable block according to everyone's view so this block becomes canonical like by that definition you know and and additionally just the idea of um coming to consensus over the set of transactions that can construct that can like be eligible to be in a block is is a very difficult thing too because everyone's in the PDP Network they have a different view of of the world and yeah I think that's one of the design challenges that ethereum faces yeah and I mean uh the more you try to constrain the more you push the auction to happen outside of the protocol right um because when you on the one hand say I'm gonna constrain the weather in some way like on what block they can build then all of a sudden now that two things can happen one is the value that becomes really focused on the things that they can that they still can control for example where do I run my machine and who was allowed to run it in their machine next to my machine right or second you really push it kind of to um I mean this is like the most likely thing but that's the second thing is really you kind of push extraction away from the value that even it's super unlikely but to like researcher Market that then happens you know in a in a way that's kind of Highly latency uh optimized that that has like very strong kind of lunatic oil Dynamics um in Mev and then ultimately um like in a lot of other things as well I want to also point the spotlight at one more thing that I think is picking up a little more when I read Twitter it seems like you know a few the same people always but like a few people are talking about it which is the idea that why do we have to make validators like small at all I mean ultimately isn't the goal of ethereum to be useful to people it's so shouldn't we start from the idea of what properties should a blockchain have to be the optimal let's say base layer for decentralized finance and so what is the biggest problem in decentralized finance well it's probably um you know all of of liquidity because it's very difficult to be a competitive market maker on ethereum because you're bleeding so much money to Arbitrage right and so I think this has kind of been you know people are kind of honing in on that as the problem and so they're asking well how can we um like we do semi for IPs but also for Traders and I think one thing you see is um well what if we just lowered the block time a lot right for example you know fewer blocks means there's less potential to reorder transactions um there's fewer I mean there's there's less Mev market makers can update the bits faster all of these things right um what's kind of your view on on this idea of well let's sacrifice um you know some decentralization invalid at us to make ethereum more useful as far as the people on Twitter who are saying that I mean I'm often one of the people on Twitter who are saying that um to some extent and like that's a little bit of what I've like poked out lately um I I just think it's important to kind of delineate between what is ethereum's place on that Spectrum versus what are the other chains place on that Spectrum um because yeah uh like there are plenty of more opinionated optimizations that ethereum could make to make it better for Traders better for users better in these like different very concrete ways but you are inherently favoring a certain like class of users by doing that over other certain guarantees and like that that isn't inherently going to be a trade-off with a lot of those changes and just broad brush Strokes um like generally the way that I view it is like that is not ethereum's primary user is you know some low latency Trader um quite frankly um like very often other chains things like roll-ups will optimize more for like what is directly the user the trader like what is their ux what is their latency like all of those things that matter a lot I view that less as like ethereum's primary customer where like Roll-Ups are building for those users in large part ethereum is building for Roll-Ups and other types of like longer term slower use cases that need like really strong guarantees at the end of the day like that which is why like I think it's a very practical decision for a lot of the the reasons for ethereum to like have a permissionless validator set and like this is some of the stuff that I touch on like there are trade-offs to have permissionless validator set particularly in the short term of that means that your validator is not going to be able to enforce any kind of like Mev protection it's harder for them to enforce censorship resistance potentially um it you need to add other mechanisms like conclusion lists but like things like MVP you basically end up pushing it to these out of protocol Builders so now because you know a validator on ethereum probably will you know if I send it out to the public mental I will get front run I will get sandwiched um what do we do like we push that like private mempool like we push it to a builder as opposed to you know a chain that has a more opinionated validator sets and can have you know a handful of validators that we trust and we say hey like Don't Front run the users because if you front run them like we're going to kick you out of here and like that actually makes sense as a trade-off for other teams I just don't think that makes sense as a trade-off for ethereum because like it is trying to provide a fundamentally different set of guarantees like if you are looking as a user to use a low latency chain where you can send your things to the public Med pool and you're not going to get front run and you want to pay low fees you shouldn't use ethereum like and I'm just like fine to say that like you should go use a roll-up like that's kind of the whole point um ethereum is just like optimizing for a very different set of trade-offs so that Roll-Ups can optimize for the exact opposite other end of trade-offs where they can be more guarded and opinionated in their designs where ethereum is very like trying to be very unopinionated and very robust and very Broad in its design goals and like kind of pushing those intricacies over to like different layers of the stock so generally like the my response is like those trade-offs do make sense they just don't necessarily make sense for ethereum and like different protocols should have different you know spots on the trado Spectrum depending on like who is your user what are the guarantees that they're trying to provide uh changing gearsia a little bit um we PBS is a design philosophy but it also has an implementation on ethereum today that's that's called Mev boost right then and you are one of the main people working on this uh Mev boost ecosystem for a long time Chris so um can you describe for us kind of what is what is the current state of um the Mev boost ecosystem and then we will transition that a little bit into how it's going to evolve in the future the current state of the nav boost ecosystem um yeah that's all topic here from the software itself to the really ecosystem to the Builder ecosystem uh to the protocol I think they have both protocol is the one thing that stayed relatively unchanged so far with the only change right now being default for four upgrade where we introduced the blobs and they also need to go all the way through the Builder Network through the relays to the proposals and there's a lot of heavy thing to do here that is all in progress um off on the really side I think we've reached a somewhat unstable equilibrium with the 10 relays that are providing Services um of course there's the downside of proposals that the more realistic ad they inherit the weakest sector the security guarantees of the weakest link so even though it might be maybe looking good on paper to spin up as many release as possible in practice for proposals it often would mean more security guarantees release are too powerful trusted actors run by private businesses this is not great for the whole trust and a rogue really can cause a lot of harm um to proposers to builders to the blockchain stability itself this is something that we are very strongly looking to mitigate on the path tool environment the Builder ecosystem is constantly changing with the with about like four to five Builders producing the majority of the blocks I think the top two Builders they have been relatively stable recently um really scared that I always a good website to track it there is RC pillar and people build and now it is also Titan that are dominating the market with I would say like almost 70 of the blocks then there is um flash button below 69 um with 10 about each and then a steep drop off to two percent for other builders so I would say it's like somewhat almost centralized um set of players here uh it's probably not too easy to to to ramp up there's a lot of of things these um High Market Share Builders do to gain it but yeah we will see how that shapes up um soft device overall I think math boost is relatively stable now um really operation is the more demanding task for operators mostly right now um it provides a lot of U.S protection validity checks payment checks it has a lot of things to do that requires a lot of compute um it's it's not quite easy to run it but possible then there is the performance and latency optimizations that the ultrasounds team and Mike in particular has implemented over the past couple of months that yeah also really boosted their inclusion rate of this so optimistic relaying in particular which means that the guarantees are changed in a in a certain way that the Builder blocks they are not validated anymore before they reach the proposal and the proposer might sign blindly to it and the optimistic really is basically guarantee a reimbursement in case of a fault so this is an interesting development that's currently run by the ultrasound relay and I think some other really I think I'm not sure if Blogspot is also running optimistic mode on some Builders um that also has a lot of additional operational overhead flashbots is not doing optimistically relaying yeah and I think overall like our focus is moving beyond release um the sooner the better yeah I was just gonna say part part of the optimistic um kind of road map and the idea of of making some evolution in the relays is to try and make them actually cheaper to run so what optimistic relaying does is it tries to simplify the task of being a Relay operator because the blocks don't have to be simulated kind of in the same you know a few hundred milliseconds right before the end of the slot so by by spreading out the simulation over the subsequent slot the the actual overhead of running a relay could could go down quite significantly and this is part of kind of this path to hopefully more more sustainable and more economic relays and as Chris mentioned the the trade-off here is additional overhead overhead from the relay operation perspective because Builders have to be collateralized with the relay and um you know if if there's ever any any failure then that's kind of on the relay to reimburse the proposer for that issue but yeah the the kind of long tail goal here is to get to a point where we can explore and and kind of forerun some of the features that would be present in an enshrined PBS mechanism through the existing relay Market that we have today so that's that's kind of the the high level goal of Optimus to create Lane generally yeah let's stick with that um for for a bit here so epbs and Shrine PBS what is it um what is really the Centric problem that um that it's it's trying to solve or that needs to be solved to have Epps yeah I think the the high level problem is just trying to eliminate the the need for the Relay market so yes ideally we want some way to facilitate the auction between the proposer and the Builder without needing a trusted third party and what why is it difficult to do that yeah it's difficult um because the the relays provide some services that the the protocol actually you know we can try to provide them in the protocol but they're slightly different in the the way they actually manifest themselves so I like in in our recent epbs um relays post epbs post I think we we described PBS as kind of a two-part mechanism it has a commit reveal scheme which is to enforce that the proposer commits to a bid before seeing the actual block and then it has an unconditional payment mechanism the relays enforce the unconditional payment mechanism through basically checking the contents of the block because the relays have the Block in the clear they can see okay the balance before and after the the blocks executed increases for the for the proposer so like what do all of these things tell us about what's the minimum viable Epps going to look like yeah so the minimum viable epbs would be a commit reveal scheme to allow the proposers to commit to a builder block and then an unconditional payment mechanism so the unconditional payment mechanism is important because we no longer have the relay to verify that the payment goes from the Builder to the proposer so the the kind of easiest version of this is what we've proposed called top of block payments and the requirement here is that the Builder submits along with their bid a valid transaction that pays the proposer the amount that is associated with the bid so this um this along with just enforcing that the proposer kind of at the protocol level can can sign on to a block header without seeing the block contents is the minimal epbs instantiation that that we're considering so I assume that would require then changes to how blocks are work basically in ethereum like the format of them yeah so the the important enforcement mechanism here is that if a proposer commits to a block and the the Builder has a chance basically to reveal their payload and that payload can make it on chain so the the kind of trade-off in the design space here is how do we ensure that if once the proposal reveals their payload that payload becomes part of the canonical chain um there's a couple different ways to do this you can give the Builder block Fork Choice weight explicitly which is kind of the original line of thought that vitalik's two slot PBS and the kind of the rest of the designs went with the most recent design we have is called the payload timeliness committee where there's a committee that specifically attests to the availability of the payload from the Builder without actually giving explicit Fork Choice weight to the Builder block so yeah it does change the consensus rules um but the the idea would be that most of the the structure of the block Remains the Same you just have you have to enforce that if the Builder reveals their payload it it becomes canonical and if it doesn't reveal the payload that the payment is still executed right exactly okay so epbs is one way that that PBS is going to evolve as we have at um another angle is all of the roll ups are looking to decentralize the sequence in some way so we'll talk about what that means exactly because different people can have variety different opinions um but one of the things that they are kind of looking at is is PBS but really it's like it's part of like a much broader design Spectrum than you have on on on the layer one so John can you kind of walk us through like how uh to what like degree does like to be neat at all like some form of PBS on on layer 2 and how are these these different teams thinking about it yeah um so I I would say broadly they have a lot more flexibility in their designs um is the like fairy tale Dr of it where ethereum like kind of as I mentioned before like as this very uh strict set of constraints where it's like you know we want to be very you know generalized unopinionated super permissionless all of those conditions like there it makes it much harder to optimize for um and the reality is Roll-Ups are going to have a lot more degrees of flexibility there so they don't need to have necessarily a gigantic permissionless set of sequencers they can have potentially one or a handful or some permission set of them um and that just like it makes it much easier to design the process like that interface between um the preposers who's kind of like the sequencer more or less here and like some kind of out of protocol Builder um so it makes it much easier if you like you kind of know who all the parties are and like they're able to have like some sort of trust interaction between them for proper execution um and fulfilling their commitments so that makes it a lot easier and the other part is also they can be way more opinionated than ethereum is going to be so Roll-Ups can play around with things like you know threshold encryption with some variations of you know uh like first come first serve with the batch auction like Shin's proposal there are going to be a lot of these different variations that are going to be more opinionated and people are going to try different things it's going to be like basically the better analogy for them and large part is Cosmos compared to ethereum like Roll-Ups are the Cosmos app chains of like the ethereum vision uh realistically like they are not ethereum itself like that is the whole point of like kind of what I was going back to before of like ethereum makes a certain set of trade-offs that are like very difficult to deal with so that Roll-Ups in large part do not have to deal with those and they can optimize for another kind of end of the trade-offs um in large part though some form of PBS is likely going to rise slash be necessary um in them like what that looks like will look very different but for those same reasons before like even when you constrain the search Bases like you do certain things like critical and building or you can strain certain ordering rules there's so are going to potentially be degrees of freedom that like you want to Outsource to a competitive market such that like you are getting the best block um that the sequencers are going to put in there at the end of the day that makes sense and another topic that we have touched already on in this call is Pepsi so how does what is Pepsi and how does it relate to PBS cool yeah so Pepsi is a proposal from barnabay it stands for protocol enforced proposal commitments and the idea here is that it kind of generalizes PBS insofar as expanding the set of commitments that a proposer can make that are enforced at the Block validity level so the idea is in this in this new design proposers can sign up for different block validity conditions that are applied to their block and this this is kind of often compared to the the type of commitments that could be made through eigenlayer but I think the important distinction is that I eigenlayer commitments are only enforceable kind of at the execution layer meaning they're only enforceable by slashing the the stake of the validator kind of after the fact if if they don't fulfill the commitments that they made Pepsi is is kind of a stronger commitment or in my mind um kind of closer to the medal of ethereum in that the commitments are actually part of the the fork Choice Rule and part of the the state transition function so if a proposer commits to something and their block doesn't satisfy that that constraint then it's not even able to to be part of the blockchain because of the commitments that they made so in I like to think about the the difference between epbs and Pepsi as the difference between um homogeneous and heterogeneous commitments that the proposer can make so in in epbs we're saying we're gonna specifically enshrine a single version of the mechanism that the proposer and Builders like participate in so that could be a full block auction so the proposers can commit to a specific block hash the Builder has to reveal a payload that corresponds to that block hash it could also be more General like the proposer commits that they sell their their block production rights for the entire slot to the Builder so instead of specifying the the block that the Builder has to produce they say whatever the the build like whatever the Builder wants they can make as long as it's signed by a specific Builder Pub key for example um yeah in general like the space of commitments is just the single commitment that the proposer can make in intro and PBS Pepsi is different in that different proposers can make different commitments from slot to slot so the slot and proposer could say I'll I only want to sell the the first one million gas of my block I'm selling it to this Builder the bundle that comes there has to be signed by that builder for example um but the next proposer the slot n plus one proposer could commit to selling their entire block to a different Builder and that that's that like heterogeneity of the commitments is I think the important distinction between epbs and Pepsi could you say that PBS is a kind of very specific commitment protocol in the sense it allows Builders to commit to validators and validates to commit to build us um in a way that lets them exchange blocks for money without leaking the information and then Pepsi is a kind of Highly generalized commitment protocol where both parties can make I mean especially validators can make more elaborate commitments to the builders yeah absolutely I don't see Pepsi and epbs as like mutually exclusive in any way I see Pepsi as kind of the superset of epbs and Barnaby actually mentioned this in his recent FAQ he said you know the way to do Pepsi might be to start with limiting the set of commitments that a proposer can make and that commitment set might just be a single commitment which is I I agree to sell my entire block to this Builder and the the road map could evolve to kind of open up the space of commitments that the proposers makes um and yeah that that would be probably the the direction we go if if we decide Pepsi is the right roadmap and is the idea still to express these commitments as smart contracts uh I think the yeah the implementation details are still very much kind of being ironed out um and yeah there's there's people thinking specifically about Pepsi boost like what that could look like in the Boost ecosystem and yeah I think the the research stage of Pepsi is still in the very early days in the same way that most the epbs implementations are too so imagine that Pepsi is live I know that runs counter to what you just said is like the early research but imagine it's live and it's there's only two possible commitments that can be made here so let's say it's full blocks and I don't know it's not auction or it's like auctioning off your block in advance whatever right something else um so how do I now learn what commitment should I make is it basically like I can imagine there's a form of of math boost or like you know some kind of block Market but instead of only showing me what's the highest bid it also shows me what kind of commitments I have to make and then how do I kind of decide between those things is am I just continuously just picking whatever the highest bid is the same way that it does today with pretty much no discretion yeah so I guess um in Pepsi boost like if we did this out of protocol maybe it's easiest to start there the the proposer would like broadcast their commitments and the relay would as part of the block validity checks that the relay does they would make sure that the Builder in you know the Builder block that's produced satisfies those conditions in Pepsi in protocol I think the the question becomes a little more complicated because in order to enforce it at the fork Choice rule you really need that commitment to be encoded in the block data somehow so basically the the slot n commitments need to be available for the slot in a testing committee because part of their Fork Choice rule is going to ensure that those commitments are satisfied by a valid block that's produced at slot n so the the probable mechanism that that fits in here is before their slot the proposer at slot n needs to publicize the commitments that they're willing to make for their slot and in the slot n minus one block those commitments are included and encoded in some way that um that is enforceable by the next round of out of stations amazing I think the what up right does anyone have any any points that they want to make this is kind of a broad thing I guess um you can kind of just like as a high level um way to think of like these kind of proposal commitments and the constraints you're putting it is kind of the other side of the coin of like when everyone talks about the new buzzword of intents it's just like from the opposite end where like this whole notion of you know expressing an intent versus a a typical like transaction is like the general idea is you're being very prescriptive in a typical like transaction based model where you're saying like here's the execution Tracer like this is exactly the path of this transaction like this is what will happen versus this notion of intense whatever it means is like you are generally giving some certain broader set of constraints on like hey this doesn't need you know I don't want to be so prescriptive like this is the exact execution path that you're taking but like hey here are the constraints that I you know that I'm happy with as long as anything within like this kind of Realm is the result of whatever you do like I'm happy with that at the end of the day and then like let someone else go figure out the optimal way to do that and like very similarly on like like this proposer commitments thing it's like it is kind of the other side of the coin of that where you are saying like what is the right balance of like what are the constraints that we impose on builders in the scenario from like the proposer side of things um as opposed to just having like a very prescriptive mechanism which is like I will sign a commitment and you will give me a full block and like this is it as opposed to like hey what if we could say like you give me this full block but I'm going to give you these constraints of like it's a block but it has to meet like it has to have like this certain type of transaction ordering it and like I want like this Oracle transaction at the top of the block and then the rest of it like you do whatever is like the most like uh welfare maximizing thing like whatever you get the most value out of so it's kind of like both of them have like that similar trade-off of like what is the right way to express these types of constraints in a way that is like practical um because also when you have like absolutely no constraints um you know it starts to become like a potentially intractable problem that is just like too difficult to be useful and when you're too constrained you know you're possibly destroying value because you're enshrining something that is like very concrete and there's like a broader kind of search space here that like you wanna you wanna kind of work around let me ask you if philosophical question so if in Pepsi a proposal can you know first make a commitment then a bid has to honor it and then Suave a A validator can request a block that has certain properties so they are also you know basically enforcing a commitment um and they cannot see the contents of the block so they have no discretion over like withdrawing um whatever um commitment they made is it is it the same is it different it's a similar idea from like kind of two different perspectives I would say it's like broadly what you're doing there is like both of them are imposing some constraint whether it's the user side of what they're telling Suave of like hey here are the constraints that I want fulfilled like it really like I didn't even mean it from the user side right it's really the validator that can say give me the valuable block that has like property X for example yeah yeah and I'm saying like basically Suave is the black box that like matches kind of both ends of those because what you're saying is like yes like the validator can tell Suave like hey give me a block that like satisfies these conditions and then on the other side of them the user is like sending things into swap saying like hey here are my transactions just do something with them that like satisfies you know my kind of constraints and then Suave is that thing kind of in the middle that takes like okay here are the validative constraints here are the constraints that all the users like that they gave me and now I can match those together what is like the optimal uh like outcome of this like send it along to the proposer and like now they can kick it out what do we learn from all of this okay one thing I guess commitments are very powerful anything else any takeaways from you guys on this episode episode before we wrap up uh like the the biggest high level thing for me is just like honestly kind of goes back to the thing that we said in the first place is like a lot of the criticism around PBS is just like very misguided in that it's like it's really a criticism of like a specific mechanism that ethereum has in place and is looking at it is not really a criticism of the idea that like hey there's naturally going to be a division of labor for like certain kinds of specialization and even when you make opinionated you know protocol own building type stuff that doesn't mean that they're it's impossible to have any kind of like division of labor um so it's just realizing that like there's always going to be this kind of separation of roles to some extent and you just need to like understand in the context of like your own protocol like what is the right place on the trade-off spectrum of like does it just look like a very simple very dumb like hey I sign a commitment you give me a full block and like that's it or is it a very opinionated kind of interaction where like there's some kind of Outsource but like you're giving a lot of constraints and a lot of enforcement over that it's just like it's a different trade-off spectrum and like different protocols should have like a different spot on that it's not like a PBS is good or PBS is bad it's just like different uh kind of versions of it make sense in different places well said overall I think about as clear is that and running PBS is hard it's a challenge I think we have been making really good progress as a community towards that and I think it it makes sense to start like we did with my first with a out of protocol way to experiment and then iterating towards and shining it and yeah I think I'm very excited to see where it's going next and and working on it with all of you guys okay fantastic so thank you guys so much um for the discussion thanks for having us thanks it was nice being here hey John what did you think about this episode well it took us like five tries or something like that over the past month but it was worth it um it was a lot of fun doing this one uh so I I guess for a background for the for the listeners uh we first tried to do this episode I think like over a month ago we did it uh in Vienna where like the the four of us and then Tomas and Tony had like spent a week together right after ECC which was a ton of fun uh jamming on like all the PBS too much from flashpots and Tony was that are from the etm foundation um spent like a week jamming on the PBS stuff and then we tried to record it at the end of the week and just absolute like awful audio quality on the laptop took a few tries to do it um finally recorded it a couple weeks ago and now we're finally doing the recap uh currently in the middle of SBC for me um so finally getting to put it together but it was it was a lot of fun doing this one yeah it's been a long way coming I'm really great glad to to put this out what was for you the highlight of the episode the Highlight for me I would probably say talking about Pepsi um that's kind of it's at least the most fun thing for me at the moment because I feel like it's the most probably under talked about thing recently compared to like what will be talked about um upcoming at least a little bit of like it's an idea that feels like it's been kicking around for a while that like Barnaby had brought up last year um and that like kind of went away after that for like a few months it was like kind of this like fun thought experiment thing and then especially in the last few months or so seems to be just kind of coming back like much more meaningfully um I also am probably biased it's like front of my mind because I just came from listening to Barnaby give a presentation on Pepsi like two or three hours ago so it's kind of front of mind for me um but it it is very interesting because like there's clearly a lot of thought being given on like like what should really PBS look like to the extent that it's enshrined in the protocol and like there's a very very wide design space on like the types of commitments that like uh it kind of makes sense to potentially have and potentially even in the shorter term of outer protocol versions of that stuff like Pepsi boost and um and in particular I mean like you just sent me the link right before this of like Mev Boost Plus and boost plus plus which is like the idea for Megan layer um which touches on a lot of the same ideas and the like the the tougher part with like those kinds of constructions um so so for brief context uh we'll we'll link it in the show notes but um before the listeners like Mev boots plus and boost plus plus they're like ideas for Megan layer which are basically partial blocks auctions where you can allow like the proposer to opt in to restaking commitments where they can say like hey I agree that I'm going to sell the top half of this block I'm going to agree to this and then I'll get the block body and then after that I can add in you know whatever I want at the bottom of the block and there's various reasons why I like partial block auctions might be interesting um but like the initial cited reason of why this came up um actually a year ago now almost to the date remember it first came up at SPC last year was like particularly as a censorship tool of similar to the idea of inclusion list it's a way for proposers to like give them back agency of like okay even if the Builder's censoring you know I only have to sell the the top of the block that's what has the value in it anyway and then I can stick something in the bottom of the block um the the tougher part of doing kind of this stuff in much more putting the control on the proposer's hands as opposed to having the protocol enforce proposed equipments is the fact that that the browser can still deviate from this so the like these ones that are secured by restaking are very challenged in the fact that the proposer can deviate from this so like let's say that they want to just they agree to do the top of the block but they can make more than they'll be slashed by deviating from that then they're incentivized to do so yeah um and like the simplest example of that is like even if um you have like say a sandwich trade in there that is you know it might be for a small amount of profit but like as we've seen with a low-carb Crusader like unbundling that could be a very profitable thing to unbundle so it might be worth it if you know if they ever got sent a bundle Through Math Boost Plus to be like hey I'm gonna unbundle this and then just get slashed my 30 you know two eth or whatever it's like um you know the max effect of balance change could really help with that which is really the idea of combining many validators into one right um so a single value that I wouldn't just have 32 Eve stake to it but it could have you know hundreds of thousands of Eve really and in that case there would be much more value available for slashing so it's interesting it makes effective balance they want it for very different reasons but it's it could also help here so it is possible to even do that without Max effect balance that is like a clearer way to do it but it is possible if someone just opts in to the re like they could just opt in for their restaking commitment of just like hey I tie all of these together so like when they tie in the first place like they just tie in like okay if I screw up with this proposer you know all of these say 10 for posters are all linked like you could slash all of them too yeah identity layer on top or something the problem with doing that kind of thing is obviously like that becomes super centralizing of like okay well now you need a million dollars to make a commitment and like now the small guy can't do that anymore so like that's the kind of trade-off um the nice way to solve it is you have it be protocol enforce these types of commitments now it's it's the it's no longer a hey I just you know I lose my 32 eth if I deviate from this thing it's if I try to deviate this from this thing the entire testing committee will just reject the block as invalid um so seeing that design space get played out a little bit more is like very interesting to see um and it's like it's clearly getting more thought in the last couple months which has been a lot of fun so it's top of mind for a bunch of people but do you think it would be big in terms of impact do you think it would be implemented do you think it would be heavily used I still have mixed thoughts on this my I definitely think some forms of it will happen um I think that there is going to be certainly enough incentive to do something like Pepsi boost whether it makes its way to be in protocol I am very mixed on um that I don't have as high a confidence it feels very likely that someone will do something like a Pepsi boost out of protocol like there are various commitments that you can enforce them at a different layer where like you basically just rely as opposed to like as opposed to the Mev Boost Plus type thing where like you give the propos you you're relying on the proposers to do this you can just basically hand that off to a relay where like you trust the relay to enforce the commitments um so like something like that like definitely makes sense and I think that there are variations of this which could be interesting which people are probably going to be worth experimenting with does it get to the point where it makes it into the protocol for ethereum that's where I have a lot of questions um it's it's much harder to tell like they are very fundamentally useful things that these commitments can make um which is why you like you will definitely see these types of things um happen on a lot of other chains that are very opinionated like we talked about with like the protocol and building type stuff yeah um those are for like those are specific implementations of Pepsi in a sense where like Pepsi is the very general sense of that um so it's difficult for me to say on ethereum that like if that something like that would ever make its way into the protocol it's also incredibly early stages of like what would like there is no concrete implementation of like what something like Pepsi would look like it's just like the very fun thing at the moment to like at least think about if like it's a very broad generalization of PBS which is super interesting um because it does seem like there's a lot of consideration right now of like what if at all should epbs look like um and that like rethinking it from first principles and like that kind of leads you to okay what is the most general idea possible that we can put on top of a potential Epps and like it's something like Pepsi which is cool yeah whether we do it or not I think it's good to basically explore the entire design space I think almost as the most extreme option that can be built like the most generalized and then yeah I mean it may be the case that we land somewhere that's totally different from that right but I think it's like this is something like totally like tangent but this is something that I think I learned over like the two years that I'm doing strategy work at at flashbots and and lidoors way which is you know don't stop at like there's a human bias if you generated one good option to just stop and do it you know and you really have to force yourself actively to keep asking you know and what else and what else and what else and it's so difficult but it's so important and I think for protocol design even more and so I I think I I can really see that um at work here yeah and I think they've done a good job of that with epbs in particular where it kind of felt like uh you know a year a year and a half ago or whatever it felt like oh like this two slot PBS design like this is what we're definitely going to do in the short term I was like yeah this seems like it works um yeah and you could implement it and I I like that there's been a lot more just fundamental consideration certainly throughout the course of this year of okay just like from first person was like why do we really want this thing what like what in the first place are the properties that we need out of it do we even need to enshrine something to get those properties um and are there better ways like more General ways to do it and like a lot of that exploration I think is really valuable um yeah and is producing a lot of very interesting stuff that like probably gets implemented to some extent uh what but like even if some of it doesn't get implemented on ethereum like it's very valuable research that's going to be incredibly useful for like a lot of l2s who are thinking going to be thinking about the same ideas as they go through this and yeah who are going to be even more likely to experiment like sure we're gonna like we'll go use this thing like this sounds really valuable yeah I mean for me fundamentally if I now see a proposal that is just an implementation you know that doesn't start with um okay here's a description of the problem that we're trying to solve in here are all of the constraints oh and here's like five different things that would be possible and here the trade-offs and for reasons XYZ we would suggest to use that one but it like deserves more research you know that's the kind of I think Clarity of thinking that you need in the future to make any changes to ethereum or really to any kind of open protocol and if I don't see that I'm you know almost like by default I'm against you know I just um but I think we're increasingly kind of moving towards them it's very good to see yeah yeah so one thing that I really liked and I don't it's that kind of came out in the episode I think really well is um that PBS is not an implementation kind of building on that previous point right PBS really is a design philosophy that is in itself extremely broad right all it really says is there are incentives for a division of labor in the protocol or like framing it differently for protocol actors to Outsource part of their duties to uh to external actors who might be more specialized and then those are explicitly not in the protocol but what the protocol can do is provide you know like an expressive and like as trustless as possible interfaces as it can um to to make it so that that this Outsourcing really becomes as easy and like as fair and as egalitarian as possible because if it doesn't then what you see is you know some protocol actors might be better at Outsourcing than others and um and this is kind of what we saw initially with you know Mev in kind of pre uh proposal Builder separation dates right where there wasn't such a trustless interface um and like a way for validators or mining puts to really discover Okay so who are The Searchers you know I should be working with and and and now the business and so on and so um yeah just like zooming out basically and looking at at this entire thing as a design philosophy that that's really like strongly rooted in in kind of fairness and decentralization of the protocol that was for me I would say um the highlight yeah yeah I like that yeah and it's definitely been really interesting to see I've noticed this more over the past several months particularly as Pepsi has like gotten a bit more attention is a lot of it's a bit what we talked about in the episode of where a lot of these ideas that are almost thought about as opposites of each other of like the ethereum PBS and then there's like the cosmos protocol I'm building or the more opinionated things you start to realize when you start to do the morsel searching of like okay fundamentally what are these things and you think look at things like Pepsi and you realize like how many parallels actually across those different systems there are and hey they actually work really well together it's not like this one or this one yeah they like very much do fit together in these different ways and there's like they look very different in different ecosystems when you have different goals but yeah watching how the pieces like actually fit together now and it's like you just approach different from different ends has been like very cool yeah I have to give you a shout out I think especially for that with um you know your efforts around um proof of governance right which is really I think what what you're doing very effectively is just removing politics and ideology from what should really be kind of a technical subject matter right um just because just because it's ethereum you know the ethereum ecosystem and ethereum on layer one has PBS doesn't mean that you know the exact same implementation should also work for or should also be the right one for layer twos but have totally different kind of needs and goals and constraints right and so it's really about you know taking the politics out of it and approaching it from first principles and really seeing um well these are all part of the the same kind of design family and different implementations work best under different conditions and you know they are all fair game right it doesn't matter where they were invented if something was invented in Cosmos or whether it was invented you know by the ethereum foundation or was invented by flashpots um you know we are here to kind of build the best crypto ecosystem that we can and so um yeah this is something that I see very um heavily in in your research yeah appreciate it one thing that that you pointed out to me that we didn't talk about much in the episode was the question whether to end Shrine um proposalability separation or not in ethereum um how do you think about that yeah yeah it was weird I felt bad that we didn't cover this I feel like it was the most obvious thing for us to cover it was also like right after micro at the post too um on a lot of this stuff yeah so I mean like this is a lot of the interesting kind of like it's really the core question for PBS but also so many other things tangential to the protocol right now um like PBS uh restaking Pepsi like a lot a lot of them kind of touch different areas where it's like what is that boundary of the protocol um again we'll she'll go look at a bunch of Barnabas uh writings and presentations on this of the like the seeing like a protocol and what the boundaries are is great we should just call it the episode The Ghost of fun pretty much yeah like the Ghost of Christmas Past or something yeah we're recording him for half of it um but yeah like that that is a lot of what it is is like what is fundamentally like kind of the protocol's boundary what is its role what should be in protocol what should be out um and that is like the fundamental question that a lot of the researchers at the f are doing on PBS right now um is that question and it's been interesting um there's definitely been I feel like a bit of a change in this was a lot of what we book about at Vienna particularly after HCC is so a lot of the reason to do um and try and PBS cpbs um for a long time was thought of as okay we'll do epbs and then the relays go away like that's kind of the reason to do it and there's starting to be more I would say realization lately is that okay even if we do epbs uh relays probably stick around or something very much like them in a reduced role I would say from where they are today where they're significantly less systemically important and less relied upon and they provide less of an advantage but like where there is probably still an incentive to use some sort of out of protocol solutions that are probably more optimal than using the enshrines um PBS protocol so the some of the simple examples are so like even if we do this in Shrine PBS where like there's you know this canonical like P2P pool where like this is where the bids are and this is what you're supposed to listen to what are some advantages that you know some sort of out of protocol actor like a relay could still provincial really provide you so a couple of the simple ones that seem to be pretty important or one of the really simple ones is just flexible payments of like the way that you would do the payments um in this kind of Epps world would be like the main idea is probably to do like something called like to be top-of-block payments where you know I would be able to as a builder like send you a bid that you know even if I don't give you the block body like you could take the payment so that works well in most cases there are certain times where you would want more flexible payments of let's say this is like a gigantic Mev block where I'm Gonna Get You know a thousand eth in the block or whatever and I'm only going to be able to give you the bid for that a thousand Heath like after the execution payload so I can't send you the like thousand each and the top of block payment because like I actually don't have it yet the only way I could send it to you is like you know you need a check that like ended at the end of the block like hey I made the money and like I can actually send it to you so that's a service that really really is fronting the money but only atomically for the relates trustless right but that is something that the protocol cannot do yeah they're they're effectively guaranteeing to the proposer like hey don't wear like the relay like the the Builder is good for this like the block like they definitely capture it we're gonna pay it too at the end um and so like that is one scenario where like it is still potentially useful to have you know some sort of third party who's mediating this Fair exchange between the proposer and the builders that may be more of like an edge case one I'd say the more pointed ones are specifically like through the bidding process of cancellations is one where a lot of these in particular like the sex decks Arbitrage or Builders um they will be like continuously updating their bids throughout the slot and there are times where they will potentially want to cancel their bids at certain times because you know prices moved all chain and I need to like lower my bid actually and so you can't cancel if you broadcast something to a P2P like public mempool there's no way to do that but a really they can do that of you know we just have a limitation that like hey as a proposer you can only call get header one so they'll call it at the end of the slot and I can cancel before then um could also do private auctions which is like essentially helpful for some Builders who don't want to reveal everything and then the last thing is just like simple latency relays are probably going to be like some latency optimization service is probably going to be able to get a faster connection between if they're like absolutely optimized between the Builder and the proposer as opposed to sending it just to the uh to the main like P2P mempool so it's very possible that you would be you would be able to get like your bid you know slightly later towards the end if you're using the relay as opposed to the P2P mempool so it gives you these like on the margin optimizations and that becomes like the fundamental question of you know is this even the relay like that we think of it as as it is today uh like I was going to ask you exactly and it's like so like is it the relay or is it not it like it is a different like it almost is a different role it's like it is a just like almost like a latency Optimizer I mean like whatever you want to call it like it's not a fundamental role that it's needed anymore to just mediate the fair exchange between the proposals and the builders where you know and that is the like interesting difference is like today basically if the re basically if the relays go down today like the whole PBS thing doesn't work really yeah um like there is no interface between the builders and proposers in this world if the relays go down okay maybe the like latency at the end of the slot is like slightly sub-optimal and there are times where like you can't cancel bids like they're optimizations but it's not like PBS doesn't fundamentally work well it's like okay you got to build a box locally now so it's a it's a very large Delta and like they're sort of like an optimization service at that point as opposed to this is like a fundamental role in the middle of this thing and like it doesn't work without them so it is a very different um kind of point there so do you envision that if we build this form of epbs that that basically makes you know the the bits it's trustless um what those trustless quote unquote in protocol bits be used even for services where the quote-unquote relay would be used as well like can they be used together or would it be either or yeah yeah the relay could still just like send along those uh trustless type payments so like they could work together in that form um so like it would it would certainly make sense for them to support the like protocol approved type um payment in addition to the flexible payments like kind of where they're needed the in protocol payment doesn't really it doesn't have any downsides right it's it's using the PDP layout where the kind of disadvantage comes from and so you can use the like centralized relay rails but put the in protocol and trustless payment um I mean it's also potentially actually better I I should probably point out in one in trustlessness of like you really don't have to trust them and then two potentially latency optimization of like if you can avoid having to do the flexible bottom of the block payment yeah that is better because if I could just send the top of the block payment then the relay doesn't even have to check anything like they don't need to waste time simulating anything if the relay has to simulate the block and then check at the bottom like hey this is there um then like that does take additional latency so yeah I mean something that I really regretted after releasing this post or kind of contributing it is even calling it a relay because as you say yes it's pretty much nothing to do anymore with the relay that we have and so to say that quote-unquote relays will stick around um after EPS is not accurate um because you're just like like kind of moving um the gold posts you know it's like um yeah simply because it's it's not a relay anymore and so I think um I'm landing on the more optimistic side I would say on the soil debate that like we should do this I think it's a good idea um and even if some form of out of protocol infrastructure may still use that the the like structural importance um of this infrastructure will be very low right and so yeah I think it's a good idea yeah it definitely does seem to be quite additive to put it in there and like yeah to your point I probably do agree I probably could honestly call them something else because like that is the unclear like like they're not a systemic role anymore it is just like this kind of additional service where it's unclear like what it what exactly is the dealt like yeah and that's the it's effectively reducing the cost of altruism as a way to put it like massively where the Delta today is your options are build a block locally or do the full PBS yeah so like there's just a gigantic Delta between the two of them where the difference in this world would be okay use the PBS you know enshrine canonical and use this latency optimized relay thing like maybe you were in like one percent more like it's it's unclear like what exactly is the number on that like yeah it may be such a small margin that like for most people it's honestly just like not even worth doing it at that point yeah of like it's such a small optimization I don't really care it doesn't even justify the cost and the additional risk of running out of particle software maintaining this thing it's just like forget it like the other thing works 99 is good I don't care about the last like five milliseconds at the end of this thing and like that exact Delta like does matter and it's unclear exactly what it is yeah um but yeah like it is a very fundamentally different role as opposed to like this is the like Central Point that was like holding up the whole PBS auction yeah I agree um one more thing that I want to touch on is kind of I mean I was I was kind of giving Mike a bit of a hard time asking him about um you know different governance entities um in ethereum and like the power distribution who maintains what what this means for the decentralization of the overall ecosystem and um Kudos you gave a good answer um I still want to talk about this a bit more with you so um I mean right now it's it's pretty much the case I think that you know the ethereum foundation is working on epbs um with the help of various other researchers I think flashbots is contributing as our various you know other parties um meanwhile um flashbots is primarily maintaining Mev boost and that's where you more have the ethereum foundation and support primarily supporting kind of with research um you know folks like Tony for example have done um you know do some great monitoring data analysis and increasingly also like Academia is starting to contribute to this and so what would you think about the idea of um yeah so on the one hand you you could kind of you know enshrine it and I think um Mike especially was was kind of hinting at that idea right so um you could resolve this like power um like I would it's not a struggle in any sense it's like you could you could like um this separation you could address it by just you know saying explicitly okay PBS is now part of the protocol and so you know the protocol depths basically also have to work on it right and make sure that it it stays up to date and it stays optimal um but the alternative may be um to basically uh yeah create like more sustainability and maybe governance um you know around PBS but outside the protocol so between these two options um you know what do you think yeah I mean part of it's a Time Horizon question um of I don't think that you need to like rush to enshrine something because of this um like you definitely want to take your time on it um in an ideal world yeah you solve these problems and you Enron stuff and you don't have to rely on you know different companies with different interests to be like funding this stuff and developing it Etc um I mean like it is the fundamental like recurring Trend with the theorem of like I mean like even like execution charge to Roll-Ups yeah I mean like is somewhat of the same Trend honestly um of you start to realize like hey maybe like this actually works really well if we let the free market just like take this thing and kind of keep it innovating it over time um it particularly becomes like that to depending on your view of you know how much does this thing need to keep being updated over time like that becomes a big part of it quite frankly of if you start to have more confidence of like okay this is a mechanism which is very simple it is very forward compatible like it's not very opinionated this is something which like works and like you know it can last the next 10 years 20 years whatever then you feel pretty good about like okay we could just been trying this thing like it's really simple like it works um you don't need to like leave people to keep innovating keep changing this thing over time in the way that like you know Roll-Ups or something else like they're gonna keep changing um so part of it changes based on that view I would say is like how confident are you that this thing is like actually static and can stay there for a long time at that point like you want to try and you want to put it in the protocol if possible because like yeah just leaving it out to different companies like you know people that have different interests and like that you know leads to potentially worse outcomes over time so it is sub-optimal I would say in the short to medium term at least um I definitely think it makes sense like you don't need to rush to do these things like the the main pressing result of that though is okay we do need to figure out funding for a lot of the tangential stuff particularly for Relay funding yeah um that it that is like the main question out of like this PBS golden you know similar ideas is that and this is part of you know part of the benefit of epbs in my mind is like it gets rid of the relay funding issues at that point like you should not get any funding like you are a latency optimization service you're not like fundamental to the protocol um but the the big question today is that we're not there and the relays are pretty fundamental um to holding up the the PBS process at least for the untrusted participants so in the absence of relays you would have today like you know the top 90 or whatever number of validators and top 90 percent of Builders like they're fine like they could trust each other you know Lido and beaver build like hey we know each other we can trust each other it's fine um but the relays are fundamental to upholding the hay that you know that last five percent ten percent whatever that number is of like they would not be trusted to you know receive something from a builder um so they are fundamental for that and as of right now like they're not a business that's able to to monetize that so the question is like how do how do we try to fund these as a hopefully you know hopefully we have a upbs at some point in the you know next level beers whatever it is but for today you know people have to run these relays it cost some money and you know it may not be profitable for them to do so so figuring out that is like that that is one of the main directives of something like this yeah I I would agree I mean I think like how static you can make it um how close you think you are to like something that can be static I think for me that is a key determinant either you want to pull it into the protocol um I think before that point it really makes sense to you know address kind of the relay sustainability issues um you know why are we talking about this I mean it's because relays basically have a hard time monetizing um in a market driven way because you know they they basically become too like if some realized charge fees they become too easy to bypass and to really create um an incentive to uh just for a build up basically to run their own relay or for a pool to run their own relay and at that point um you know they can do a cheaper and better and faster basically so it's it's like the current market structure really doesn't support monetization through fees and to me this suggests that what we need is kind of um an entity like an independent entity that can support relays to grant funding and um in my view this could also solve you know some of the other issues you know like it could make the governance of Mev boost more open equipment support the development work and yeah possibly even um like kind of you know govern like the the not just Mev booths but kind of more the umbrella idea of PBS that we have been talking about and and kind of um for example uh help layer tools figure out you know what they should be doing um with regards to this yeah certainly on the base layer depending on where the epbs road kind of goes I mean like I definitely see that being valuable um I've mentioned this before I don't I I don't see this needing to play a role for layer twos at all in my mind uh so I'm curious to hear your thoughts on that yeah why not um so I give you my kiss I give you my kiss the case is not it's not at all about sustainability right I'm not saying I'm not saying like um that entity should fund the research for layer too so that would be crazy all right I think the layer twos can pay for it um and I think it's like especially they could contribute to something like that um through like as the grants like actually like the grantees like if you were so um uh I I mean more in the sense that there is not a whole lot of expertise right now um invading this right so you basically like want to bring parties together right you want to bring the parties who need it and to confront it with the parties who actually can can build it um and to like understand deeply like what goes into making kind of an efficient and robust um kind of implementation of this and yeah that's my thinking behind it what about you so what exactly would the l2's involvement in this really be then I mean like they would be funding it if anything not like being a recipient of it like I like I I don't see why you need enough oh sorry I mean I maybe used the wrong word yeah no they would be funding it and they would like Outsource the building of their form of PBS possibly to you know the same parties who do it on layer one or like kind of this body do you think they want to own the building into like maintenance of this yes so I mean one I'm influenced by the fact that like I I think that they are very different problems in many ways um layer ones versus layer twos and I think that different Roll-Ups also have probably make sense for them to have very different opinionated designs on PBS like it can look very very different from one role to another um so part of it is that part of that is also like I think that is something that like fundamentally they do kind of want control over like for some of them it is a pretty important selling point of uh like what they're going for like like arbitrim being kind of the simplest example of like a lot of their research around first come first serve and like how that's evolved over time like that is a pretty important thing to them of like you know this is what they're saying to users like hey these are the types of guarantees like we care about a lot so I I don't see them like wanting to Outsource like oh hey this like other entity like please tell us how to do PBS so I don't think they like want to Outsource that necessarily um I think that they like having different different teams like having opinionated in different stances on some of these things so I don't know that like they really need to Outsource it and I think like I think that they have the resources internally to do it certainly um and like this is where the like the governance and the ownership of this type what this type of committee is like matters a lot that you obviously do not want it to be that we are Outsourcing this to some committee that like has some other agenda behind it um that like you know is not aligned with what we're doing yeah no I mean not completely agree right I mean it basically whatever PBS um is developed for layer 2 has to adhere to their you know policies um I think it would be an unsustainable situation though if every layer 2 had its own implementation of this um because it basically becomes like a security nightmare um I mean you see all of the things that can go wrong on htmlr1 already and so I think standardization um like across at least a few shelling points you know maybe you have like two to three different flavors and and they kind of have you know their own kind of customization options um or different policies aren't forced by a government so I'd like proof of governance that you have like yeah you do have PBS but the policy comes from governance and governance like you wanted to us the builders and whitelists them I think something like that is probably um you know a good middle way because if you really have like a unique implementation for everyone I don't know that it's it's very trustworthy to be honest yeah I I think what you described there is kind of where I'm more likely Envision it happening is like they're going to be standards when within the different verticals of like you start to see this already with like optimism talking about the super chain and the law of chains where you know each chain within that super chain can have uh meaningful flexibility to you know you know we can have different sequencer designs across them like maybe you do use the shared sequence or maybe you don't you know different flexibility within that but that there are certain approved standards of like hey you have to abide by this yeah if like you want to be part of this ecosystem yeah and certain opinionated decisions around something like PBS or allowable sequencer designs is something that you could certainly see falling within there where you know hey within this like optimism super chain like here are the things that like are acceptable and like these are approved you know governance stamped of like this works we approve of this like this works really well similarly for like the optimism uh sorry for the arbitrum kind of stack and like the polygons and the Stark Nets and so on like within each of those verticals I would imagine like that core team is doing a lot of research of like hey here are the approved things that like we think work really well and makes it very easy if you know you want to spin up a new chain within that ecosystem because I agree if like if literally every single chain out there has to do this like it's it's insane it's impossible my guess is like there are a few basic standards that like may look different from one ecosystem to the next where like for the arbitrum one I mean for example of like they are still pursuing you know some variation of first come first serve um whether it's like time boost or whatever and that is going to look very very different versus if you do you know you slap something like meth boost on a on another roll-up ecosystem so I think there will be like different certain standards um across different ecosystems like that may be useful in different places yeah um it's also very important to have standards on the Builder side for what it's worth right because you like if you're designing this then you want basically you'd want to make it as easy as possible for Builders to join and you want them to have the same basically interface that they have to other Roll-Ups um especially in a like cross-domain world right because like a lot of your value um basically comes from you know getting access to the same or making it easy for the same block Builders to to build your chain that may also build you know ethereum optimism putting on option whatever and so I think yeah really there's a huge um incentive for standardization of these interfaces and yeah I mean that kind of almost gets us to you know the vision for um for Suave and like why you want like a shared mempool if I want to share it um block building layer yeah yeah and yeah and in particular on that like as you start to think of like okay particularly in this future of say that there are many Roll-Ups and you know they each have some variation of PBS or something that looks similar to it you know who are the builders across these ecosystems I think you probably agree that like we're already in a pretty far from optimal state of like what the Builder Market on ethereum looks like where you have like two or three entities that build the vast majority of blocks um you know what is that going to start to look like when we start to talk about like okay now we have a bunch of different Roll-Ups and you know what's the Builder Market on roll up number 42 gonna look like it's probably not going to be like oh it's a thousand different people who are like perfectly competitive with each other yeah uh I would be rather surprised if that's what it looks like and like you start to realize like okay like there's a lot of effort being put into ethereum today and already it's like quite imperfect like where does that equilibrium end up and just assuming that like oh there's gonna be a bunch of competitive builders for all of these million different chains uh seems like highly unrealistic and you probably need a more holistic solution of like okay how do we decentralize this role and like constrain the power more meaningfully so on the point of censorship resistance John um we are seeing a lot of proposals around giving basically propose us more agency right whether it's through inclusion lists or you know I mean people's Plus or Pepsi um and also like in Mev boost itself now there's some you know Min bit um I believe which is a feature that basically lets you build a block locally unless um the value of the block that you can get from um the Builder Market exceeds a certain value and that value you can configure so you can basically say you know let me build the the top 70 Through Math boost and like the bottom 30 locally right um and this is like all ways of giving more agency to the proposer and like and I I think like we fully get the idea of why you would want this I mean of course like you want to make the protocol more censorship resistance Etc but then do you think that there's also a market demand from validators to actually use this um a big part of my worry is that there's a market demand to not have it in place um that it's very much the opposite um like so much of the discussion um particularly early on with ideas like inclusion lists and Med Boost Plus proposal suffixes was this trade-off between wanting to give back proposers agency and like trying to kind of keep them dumb of like hey we want to have statelessness we want to be compatible with these things we're like they don't have to enforce these things I think at this point I'm pretty confidently feel that the bigger trade-off is realistically just on a like potentially practical like legal and Regulatory side of things of I don't think that most people want to like have the like the agency thrown on them like hey you're the person who enforces censorship resistance of all these things um where like and it's difficult for anything like ethereum to ever design itself around like trying to guess at like the current estimation of what regulations in a given jurisdiction are like you don't want to be designing based on oh I as a validator think that like maybe this is okay legally to do like the Practical reality is like so much of crypto regulations like it's incredibly unclear what the guidance is um but it is a very practical simple point of like it is very possible that a lot of validators are going to be uncomfortable saying hey like I'm going to enforce that I'm going to put all of these you know oh fact transactions in there like they're reason that relays and Builders are understandably like personally uncomfortable doing that um and you would imagine that like a lot of large validators are going to have similar stances of like if it is unclear regulation wise like what we are supposed to be doing there may be hesitation to to exercise those rights even if they were given those rights um so like that that is a meaningful kind of fear of Mind of like is that there's an assumption that if we give proposals to tool to enforce censorship resistance that they will use them and it's like a lot of the other concerns around it was like oh is it you know it's you know they have to be altruistic to use something like an inclusion list like they don't make money by doing it I don't really think that's a concern like it's very negligible those kind of incentives it is entirely uh are people going to feel legally uh like comfortable doing this when like there isn't really upside to them so that is a meaningful question um in my mind and that is why I've continued to increasingly be interested in the more like privacy side of things of various forms of encrypted mempools where it is the much more encompassing solution of providing the censorship resistance while also giving absolutely everyone uh plausible deniability effectively throughout the entire supply chain whereas the more inclusionless and boost plus side of things is we are going to put it squarely on one person's back and say like hey this is up to you please enforce censorship resistance um and that works fine if you assume that everyone is like willing to do that it's hard to assume that when you have a permissionless protocol and a lot of large entities who are probably going to end up in the shoes but removing anyone's agency to do anything at all and you have to let everything through is like kind of seems to be the better long-term solution of like how to provide a lot of these guarantees so like yeah it was something that we touched on a bit in the episode of well things like Suave and threshold encrypted mempools and like different variations thereof are often are very often presented in the like hey this is an Mev tool they really are a censorship tool just as much and like those do go very much hand in hand like there's a reason they go hand in hand um and like it is very useful in these kind of situations yeah I completely agree I I'm I fall on the more bearish Camp about any kind of posa agency tools I think that like there is a design constraint and all of this and this is that proposers don't want agency and so a solution that requires them to you know exert agency in my book is not going to solve the problem I think what you need is you need a solution that's compliant with proposals not having agency not wanting agency and to me you know the idea of kind of you know an encrypted mempool and encrypted Computing environment where blocks can be built as the you know where you can have a kind of you know efficient block building on top of private data to me that is the only solution that I can see to this problem and yeah very bullish that it certainly seems the most all-encompassing solution to me um the quick the question that I still have and why I probably still lean somewhat positive on them is like something like inclusion lists is it detrimental in any way to add it in there or is it like purely additive so like let's say you added something like conclusion lists and you know in the bad case like let's say most validators are like hey I am not legally comfortable doing this but you know a good portion of them use it is that worth implementing probably probably is in my mind and that and that's like an open question of or maybe they just don't even want that tool available to them in the first place for like the reasons described um it's it's like nothing is a a cure-all on these short to medium term Solutions but like yeah it does seem to be a valuable tool still nonetheless and like that's kind of where I am still like it does help on the margin like there are certainly going to be some amount of validators who will use this who are comfortable doing so um I would agree and like where is it worth it like what is the Tipping Point of where it's worth it is like that's what's kind of yeah it's tougher I would agree I mean the solution to censorship is probably a patchwork of different objects that all work together that are used by different parties based on kind of their risk preferences percent I mean I don't think inclusion lists hurt in any way I don't think they will be used heavily but you can argue the same thing for something like Min bit in in math books right actually that's also a fair amount of it's not a big amount but it's like a sufficient amount of the network who use this right yeah and then you can say maybe you know for a system like ethereum you know that's okay you know like um to to kind of give the properties that it does that that like at any point like a sufficient number of of redditors should mine um your transaction it doesn't need to be the case that all of them have to mine it you know all the time and um I I think if if you're really trying to Target kind of you know the letter option um it's probably unfeasible you know you're probably gonna run your your head against the wall and um yeah I think like it's like pragmatism I guess over ideology it's like a good final words to wrap it up which is like I think this is really the the whole idea around PBS right that like PBS really is like the win of of pragmatism and like realism about Market forces over uh ideology yeah I will strongly agree on that I love that as a final note John it's been a pleasure likewise took the long road to get this done after five or six tries in a month or so but I apologies to the audience will hopefully be quicker on the next episode um but it's a lot of fun thanks for joining us today as always nothing we say here is investment or legal advice the views expressed by the course are their personal views alone please see our podcast description for more disclosures if you enjoyed this episode please feel free to subscribe and share it on Twitter thanks and goodbye foreign 