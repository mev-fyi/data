all right another round of applause for our lido finance friends vasily and andre [Applause] so uh i think in january i was like researching crypto and cosmos and i would always talk to my girlfriend about it and then she sat me down one day and she's like i don't care you need to find friends to talk to about it so i made a twitter account called coney daddy and uh things have gone really really well um look at all my new friends i get to talk to and you guys actually understand it all more so than i do fantastic well a new friend that i made this week he's the co-founder of celestia ismail coffee [Applause] hello um first of all i want to thank the conference organizers again for this like awesome event so nice to meet all of you in person again um i'm ismail i'm going to talk about celestia and how it brings uh scalable shared security to like millions potentially millions of blockchains um first a few words about me um i'm the cto and co-founder as coney daddy already said and i used to be also like a tenement a core engineer before that i was a research engineer at epfl where i think it with like blockchain scaling privacy enhancing technologies and consensus and all like distributed systems uh you can find me on github and on twitter on the mz crowd quite inquire um so let's dive in with um what is celestia um it's a modular scalable security layer or like a blockchain stack and why should you care because it makes it easier for you to deploy your application specific blockchain um with like the thing that that it removes is the requirement that's currently there that you have to deploy your own consensus network so if you want to deploy your application specific chain currently you of course have to bootstrap a proof of stake network right and we remove this and you can like more frictionless deploy your own decentralized blockchain um so let's let's start with something that most of you probably know like many uh new audience are familiar with with like the abstraction layers in tenement tendermint already does something really nice it separates consensus from execution so um the the execution you can think of like a transaction that modifies account balances and how this is achieved in tenement is um there's a thin layer called avci and the state machine is a can is a separate software layer it could also run in a separate like process but it's still on the same blockchain right what we do at celestia essentially is we take this like monolithic blockchain architecture where everything runs on one chain like consensus and the execution of the transactions to a more modular stack so in our case the the base layer celestia just as consensus and provides security and uh you can put the data on there and on top of that you can plug your application specific chains don't have to run your own consensus you could even have something that runs smart contracts on top of that um yeah and then in the traditional world this would be all in one chain as i said um so this this has some this is comparable to uh like you can draw an analogy to the evolution of the web here because like if you look at the early web the only way you could like deploy your web application or your website was you have to like uh host your own physical server essentially and then the next step like the next iteration was basically you have websites that you can deploy using shared hosting providers but these shared hosting providers would choose the the the programming languages you can use the interfaces and everything so you you were you would be kind of stuck with like the choices that the service provider did for you um in the current web websites run on virtual machines so you have your complete complete freedom on like how you host your website and similarly um we believe that the uh uh blockchain space will evolve and already is evolving actually if you look at the first cryptocurrencies they were one like application essentially and uh each blockchain like bitcoin litecoin and all of this uh had their own blockchain and their own consensus the next iteration was like ethereum where you where you could deploy your smart contracts on one uh uh execution layer essentially and we believe uh the the next iteration of that is a the modern crypto ecosystem that's actually to to a great extent already a reality thanks to like cosmos essentially where applications run on their own app specific chains but what's missing is like a shared security layer and we believe that's the that's the next iteration so how do blockchains actually work uh current blockchains usually um um couple consensus with state executionism as i said so to for a full note to validate if uh um a block is valid what you make sure is a block has consensus and then you actually also verify each transaction and execute those so you check if the block has consensus and you check if the transactions are valid right this is like a bottleneck because every full node has to execute every transaction um [Music] yeah and uh celestia changes this to um [Music] like the the design of celestia basically is the answer to what if you can like post arbitrary blobs to the to the chain and they do not modify the state so you can even dump like invalid transactions onto the chain without having any impact these would just be ignored right unlike how does execution work nodes and clients can actually download these transactions and execute them locally that's that's the that's a basic idea right it's actually interesting like an interesting historic fact about this is that in the very early days of cosmos um jay and bucky had a very similar idea which called like was which was called supertanker where you uh basically would dump uh the other chains transactions on the hub um that had several problems i'll explain a bit more of this later so that's what like uh because of these problems the hub is what it is today instead of this um and celestia has some answers on like why how to do this properly in a decentralized way so what like celestia does is also it asks like the block does it have consensus right like as before but instead of checking if the transactions are valid you just make sure that they are available so they were published to the network and they are available for like full notes to execute um yeah that's basically it and um so how do you make sure that the block is available i mentioned before that um [Music] like if you dump many transactions of like your millions of blockchains essentially uh on on the base layer the block can become potentially very large and if you think of like the the bitcoin scaling days for instance there there was like a big debate about like small blocks big blocks and like how big blocks create uh uh centralization and in celestia you we fix this or like there's a solution to this in celestia which is called data availability sampling uh it's a technique that enables you to um make sure that the full block with all the data and all the transactions was actually published to the network um without having to download the block sure if you download the block it's easy it's trivial to to make sure it's available because you downloaded it and you can verify the block but what if um you just like could download a tiny portion of the block instead and get like very high probabilistic guarantees that the full block is available and that's what like data availability sampling enables how it roughly works i won't go into details but like how it roughly works is you how you lay out the block in shares and then you erase eraser code these shares and razor coding is a very simple technique known since like i think the 80s and um [Music] this eraser coding and this block layout essentially enables what i said before that you can download really just a tiny portion of the of the block and have like almost 100 certainty that the full block is available um why is this interesting you the the cool thing about this is the more nodes you have in the network uh the more data you can basically host uh securely right so you get similar uh scalability guarantees as uh um as uh in bittorrent and bittorrent is like the most scalable uh decentralized protocol that was deployed so far uh so this is like very very interesting which is like we can we trying to bring that uh scalability of bittorrent to the blockchain world essentially like just to summarize again the execution model is that applications use celestia just to store the data and the full nodes of celestia the main chain do not process these transactions right uh the data is then processed locally as i said well that that could raise the question what if you have like light science for instance or like uh uh nodes that um cannot process all these transactions right like if you have a like client you don't want to download even your application specific transactions and the answer to this is uh you can solve this with like light lines and the roll up what is a rollup a rollup is like so it's a it's a it's they're quite hyped in the ethereum ecosystem and they're not like very uh uh much much made it into the cosmos ecosystem and we we will change this um so a rollup is essentially a blockchain that posts its blocks onto another blockchain right it's basically what i said before instead of the transactions now you post the block including a state route and um and um um that makes makes your application specific chain a roll up essentially there's two kinds of roll ups there's zk roll ups and optimistic roll-ups we're currently focusing on the optimistic case but something like celestia is necessary in both scenarios essentially um yeah in optimistic rollups um you need something for light clients to make sure that uh that the block is actually valid because you only receive a header and um um the the block proposal the block producer could essentially also be just a centralized sequencer which is currently in all ethereum roll-ups is mostly the case that there's just centralized sequences how do you make sure that they do not just post invalid blocks how do you ensure that by state fraud proofs essentially um like in zika roles is not necessary because in zika roll-ups you can you can uh you have a cryptographic guarantee that the state is actually valid right that's that's the only difference people confuse this often that's why i'm mentioning this um another technique we're using so like i said all the applications right they post the data onto uh the celestia main chain how do you ensure that the application specific chains only need to care about their application specific data right um the technique the technique we use is a namespace mercury you could think of like a a merkle tree a binary mercury that is like domain separated by name spaces so they're sorted by namespaces and that enables clients to download their specific uh application specific chunk of data um you can think of it like from a tenement perspective think of it as like a multi-tenant tenement essentially okay well like i don't know if i confused you so far or not well like uh how do we actually get to a millions of blockchains right um i think so what celestia does it reduces the barrier of energy and like you don't have to deploy your own proof of stake network but i think you have to lower the barrier on all levels as well so so we need we need more we need to do more in we need better tooling and we need more better documentation that's i think key to achieve this goal independent of like the scalability technique um like celestia that would enable millions of blockchains in theory in practice we need better tooling for this and better like developer usability i think we can learn a lot as the cosmos ecosystem we can learn a lot from ethereum here because like the tooling there is great and the documentation as well and we improved a lot but there's still a lot to learn i think um so what are the challenges we're facing specific to celestia and where we could have like we could need some like community input and some interesting challenges if you want to work on those um one thing i mentioned briefly are state fraud proofs right like we need those for like rollups these application specific chains if you connect them for instance to each other um or just for light clients um you need these state fraud proofs um we we and we have originally we wanted to focus on like cosmos sdk based application specific chains we realized that it's actually quite difficult to have state fraud proofs in the cosmos sdk essentially because it's very uh the cosmos sdk itself is very unconstrained and not very very well specified and it's also constantly changing um so this is one challenge we're looking at and i think uh here we could tell use a a a lot of help in like very clearly defining the sdk and its modules and defining a set of constraints how to make the cosmos sdk state fraud provable efficiently so um this place into the next step like where i mentioned also you need state fraud proofs for roll-ups right and [Music] for roll-ups it's even more tricky because if you think of you have two chains they're connected via ibc and um [Music] imagine like there's a state like there's an invalid state on the on one chain and you are connected to to that one chain you need a way to execute the transactions of the other application specific chain right so you need additionally to the efficient state fraud provability essentially what you need is a default execution environment where you can easily take another application state machine and run part of it so that's easy in like smart contracts but very challenging for like the cosmos sdk as well because like it's basically go code you can do whatever you want right so um [Music] yeah that's a very interesting uh challenge and we're looking into the evm as a potential solution to that [Music] and we're also talking to federer and evmos it's uh we're looking into making the evm essentially more state fraud provable and like many other teams we basically need avci plus plus we're very hyped about this actually we had an implementation of the first phase of abci plus plus long before it was actually fully specified uh in fact i don't want to take any credit of this in fact but like i told dave that uh why not it's it's actually odd that you only have like uh avci callbacks to the state machine in in the last phase of the consensus why not have them in all phases and that's what basically abci plus plus is um so we needed to modify uh the block before we're proposing it to separate the state relevant portions from the blobs essentially that i mentioned before we needed we're looking we're eyeballing with immediate execution instead of the deferred execution model that tenement currently has where like the the the state route is uh the state route in block n represents the transactions of the previous block n minus one essentially um another challenge we face so what i mentioned data availability sampling is quite uh it has much more requirements and like much more challenging requirements to the peer-to-peer layer so we are looking on internally pushing to uh move to lippy to p so our stack is is based on the p2p and parts of like ipfs and um we also uh try and try and uh to push for tenement itself to move to the p2p and we're potentially collaborating on this with protocol apps and uh interchangeabh and informal and if you're interested in like like in p2p work please come talk to us later as well and another thing that uh we we faced is that tenement is the although it's like an awesome piece of software uh it's um [Music] not as easy as uh it could be to swap out certain components in tenement without having to maintain a fork right so it's like we mercalize the block differently we do the erasure coding and uh yeah again it would be nice if the peer-to-peer layer was easily it was easier to swap out the peer-to-peer layer because like this is currently quite intertwined in tenement so that's brings me to the end of my talk so to summarize again we are building the first really scalable modular universal consensus and data layer that brings shared security and it will enable people to developers to develop their to deploy their own application specific chain without having to deploy your proof of stake network and we envision long term that this will enable global communities that can self-organize using decentralized networks and tools without being burdened by existing power structures you can learn more on our homepage on i don't know if i still have time on questions or not i'm uh yeah there's one minute left if you have questions but i also we have a booth and uh nick a colleague of mine and me we're there please ask us uh all questions that you have come talk to us as well thank you [Applause] thank you so much man well done well done all right 