I'll tell you about the story of roll kit I will go into what rock it is I'll tell you about the motivation of this talk about open interfaces I'll tell you what the interfaces are the local integrates with and like the interface and the sequencing API and then wrap it up presenting you the roll kit node and how it interacts with those components so where do we begin um Mustafa wrote in his lazy Ledger Paper about lazy Ledger and one of the things that was still an open question was execution like clients like one of the current limitations of lazy Ledger is that it's not obvious how to build light clients for applications so that clients do not have to download all of the applications messages to let the applications know the application state so how do we solve that John and Mustafa went to Defcon Japan and thought about this problem and came back with the idea okay it has been rollers roll ups it always has um the tree of Israel thought about and said okay we're going to implement an enshrined settlement layer which will be a roll of it itself and other Roll-Ups will be able to settle on this in trying settlement layer and the thing that the stack that they chose it was very close to them was temperament with Cosmos SDK so here we already have the first uh interface the ABC interface that they had to integrate with they had to make a decision either we're going to use tenurement and rip out the core the hard the consensus engine or we're going to rewrite it from the bottom up and use a new P2P layer and they chose the happy path because to have a cleaner repository and make it more General and usable so optiment was born and in the first years Ismail and Thomas were working on it but in the last year we expanded and rebranded the team grew via Royal kit we were branded because we will not only support optimistic roles but in the future ZK Roll-Ups as well um okay so where are we at uh we have rocket in the middle it's a it creates the blockchain and it talks to the state machines through the ABC interface application blockchain interface and post the data and the headers to the data availability chain and this is us delegating the availability and consensus to and that availability layer so we are a roll-up and we already see just with this one interface how much Innovation it can create so the first idea is hey we have an existing tenement chain and we will switch out tenurement with rocket and we use the same state machine the same application switch to lines in the go mod and we will have a tenement chain now as a roll-up crescented that and have as Dex as a roller for example the other thing which is okay I'm not going to use the ABS the Cosmos SDK but the ABCI directly and a Community member did that and used fuel to make it ABC compatible and basically created a fuel Sovereign roll up on top of Celestia just by complying with this ABCI interface and now what you can also do is choose a VM on top of the cosmos SDK that's what we're very excited about what Argus is doing Argus is building the World engine on top of roll kit and they use Polaris as far as it's a great VM evm that is built on top of the cosmos SDK and they had some talks and I think there will be another talk today so please check them out um okay now what is the motivation here we already saw that how ABCI creates Innovation through uh just being an interface you can come be compatible with and it creates an effect of collaboration because now we have a community which has as as the only goal to build you know State machines through the ABCI interface and while complying with an interface you can innovate through different means so let's say we have the datability interface and just because there exists this interface you can now say Okay I want to build another data availability layer to comply with that and build it out the next uh motivation is we will have interoperability and I think IBC is a perfect example for that where different chains can use IBC together to communicate with each other or I can use the different data availabilities layers to switch them out we also have transparency transparency is important because by just understanding that there is an interface and to see how the components talk to each other we can derive functionalities and we will understand what kind of trust assumptions people make how how they interact with each other and it will decrease the learning curve of people getting into this space because they will be able to focus on only one component and we'll be able to understand how these components work together okay um open interfaces make it possible to be future proof If I have a I built my application and the underlying component would change I would need to upright upgrade the whole stack possibly but if I can modulize it I can only upgrade one and specialize it and this will give developers the ease of that if you develop with such a framework you will you'll be able to pick and choose and it will stay compatible for the future the fifth point that I think is I guess a little bit nuanced and interesting is that the uh when a application let's say in web 2 um uh looks for funding the let's say it's I don't know Twitter uh we the the people who fund the application don't really care about the underlying stack infrastructure stack so it is either AWS or Google Cloud but they will use some cloud provider and the same also applies for web3 in web 3 when we want to fund an application we are also taking a bet on the underlying ecosystem and on the underlying infrastructure and if you can give the guarantee that hey you're not taking a risk on this ecosystem because you can switch out components in the future you can give much more funding and capital to application developers because they will be able to um you know make it future proof and the the risk is basically eliminated and the last point is lower cost and lower switching costs I will reference the talk by Chris golds about it's a type of Mev and his presentation was at tldr and I'll just make a tldr of his tldr um it's basically if a bridge can give you two options to exit to the L1 the Bridge can basically charge you as much as you would be charged as going through L1 so they have the power the Monopoly to be able to take that so what you have to do is keep switching costs low from one to another so when you um and basically have like a threat of fork so the uh this is like is the slow game how we introduce the two so when they um that those sequencers or the availability layers or Bridges whatever cannot extract that value because if they do the other components would be able to switch and this would of course result in lower costs for the end user okay so we were in the same Developers get some water sorry guys all right thanks Calum um we were the same developers who did the da interface for the op stack um imagine what this now gives as a option for the op stack to give to choose and pick the different data availability layer and we saw the same thing happen with what we did in rocket so a similar date availability interface and we chose to deploy the first solvent roll up on top of Bitcoin and now there is a there was a huge craze and so many l2s and what not are popping up on bitcoin and we the only thing that we did is make Bitcoin comply with this interface and now we like spawned a craze of innovation to see like okay how do we improve Bitcoin like do we want to uh get like introduce op codes into Bitcoin to verify uh ZK Roll-Ups easier and this is a prime example of how you can spawn Innovation through just an interface so the goal would be to enhance the interface make it even more compatible with other data availability layers one major goal is for local to stay incredibly neutral to Celestia which is important for um the to keep developing the modular ecosystem and to allow developers to create rollups regardless of what data availability layer they want to choose and this will like of course go forth with a more canonical Bitcoin implementation Avail integration and then following more data availabilities layers when they come out and the other part is that the moment we create those data availability clients for they're going to be layers other Frameworks can also just comply from the other side which means that the moment we have a new roll-up framework there will already be like those State availability clients that they can comply with so new rollout Frameworks can emerge and use those clients for the benefit okay I'll give you a nice solid experiment let's imagine we have two data availability layers and we can now because it's switch and choose we can optimize as a community what we want to prioritize available blob space costs provide latency Economic Security liveness failure finality not liveness failure well I'll give you an example right um let's say we have two data availability layers and you don't have to pick and choose let's say we have one that prioritizes uh finality and the other one that prioritizes liveness so you can always have the live at the finality favoring the availability but if that fails we can have the liveness favoring data availability layer pickup and us as a community we can decide how we can interpret and read those bytes the next sequencing the next interface will be the sequencing API or the sequencing interface right when when the modular stack evolves we know we see specialized software and the same we see also with sequencing shared sequencing emerging with Austria espresso Fair block and others and we work together to come up with a common sequencing API with the goal to have a unit unified interface between all shared sequencers and roll up Frameworks so we can plug and play this component as well and of course this is a collaborative effort so we have to decide it's a community how to come to consensus and it's great that we can work on this together um and of course there's also bass right I mean we can use the data availability layer as a shared sequencer now if we think further okay we have the Bitcoin implementation now we have based I mean The Logical conclusion is to make a social experiment um on the 20th of April there will be a base Bitcoin roll up and what does it mean based means that I can delegate uh inclusion and ordering to the data availability layer that means if I control ordering I can also control reordering which means I can control Mev I'm leaking Mev to bitcoin and now I feel this will be a very interesting site to see how Bitcoin as a whole will deal with Mev um I'll leave it at that I think that will be a fun social experiment to wrap up we have the rocket no in the middle we can talk to the state machine through the ABCI interface we can talk to the sequencer to the sequencing API to the DA layer to the the DNA interface and through the bridge to something like IBC and in the middle we have the core the fork Choice rule which we Define how we want to follow the blockchain how do you want to interpret that and how much power do you want to give to those components and the exciting part here why I love working on this is because every single part is influencing Mev extracting Mev or giving back Mev to the community so this is a like it's highly complicated and like nuanced topic that you have to deal with and so I encourage everyone to dive more into this research research and to see how you can contribute going forward and this is just the tip of the iceberg I mean the moment we have Plug and Play components we can have crazy uh roll-up variants and designs to optimize especially for your use case and like redundancy and picking multiple da layers or having for example also multiple proving systems I don't know you can have the same data availability bytes and have a optimistic and azk roll up on top a hybrid version so this is another type of research that I encourage everyone to look into because the the design that we created by decoupling components is exploding okay to conclude modular blockchains need open interfaces we have high dependencies between each other so to communicate we have to agree on standards we need to keep switching costs low because we don't want to go on to the slow game where one thing can extract the Mev and like keep it but we have to have a credible threat of a fork to go to something else uh Bitcoin will get Mev and the last part is rocket is the open roller framework which will give you the opportunity to integrate with those things those interfaces okay thank you so much um [Applause] I want to point go back okay I also say it um please join the workshop we'll have in two hours build a roll up on rolekit.dev contribute to our GitHub and most importantly ask questions I'll be upstairs with a whiteboard oh my voice um yeah so yeah thank you guys let's roll [Applause] 