hey all you modulars out there welcome to Celestia spotlights where we hear from the people at the Forefront of the modular movement I'm Nick white CEO of celestial Labs today I'm thrilled to have on Neil samani Neil is co-founder of eclipse where he's building the first customizable modular Roll-Ups using the Solana VM Yes you heard that right the Solana VM is going modular and coming to a roll-up near you Neil is here to tell us all about that and more Neil welcome to Celestia spotlights it's been a crazy week how are you doing hey Nick thanks for having me yeah it has been a crazy week especially for the Solana Community a lot of folks um and they were indirectly or directly impacted by FTX so want to take a second and acknowledge that a lot of people I think are getting back on their feet which is good and I think uh this is gonna end better for everyone than uh than how it started so I'm feeling pretty positive about things now yeah you know I I think we've all been a bit distracted with everything unfolding you know Blow by blow on Twitter and uh the the the cool thing is that the builders are here to stay and I actually sense that in the Solana community that this is a real trial by fire and and the core Community is going to stick around and so um yeah it's good to have you on and and I know that you're embedded in the Solana Community but you're also kind of taking a new spin on it you're going taking Solana modular um so anyway I think let's start out by uh just tell us a bit about your background I know that previously you were on the dark side of Finance over at Citadel what what uh what brought you over to you know crypto yeah so I was working over at Citadel I was doing Commodities research so specifically doing Power and Gas and I was always interested in crypto I bought my first Bitcoin in like 2015 or something but uh around March of this uh this year I left I was reading a bunch of crypto white papers and I was started and I started building something in the Terra ecosystem so I was building an evm it's a way to run ethereum by code on Terra and I thought that was interesting because I just saw how quickly binance smart chain took off given it was ebm compatible and I saw all these other evm compatible l1's really precipitously growing and I saw Tara growing without that so I thought it was a very natural idea to bring EDM compatibility to one of these Cosmos chains obviously Tara depacked uh and then you reached out and I chatted with the Celestia team I was already talking with Jacob arloch before he had joined Celestia and he had already sort of gotten me primed to like the Celestia thesis you guys made a very strong argument that Roll-Ups were the path to scaling crypto I read off on my own came to the same conclusion and uh hit the ground running and started talking with a lot of folks in the Solana Community who were interested in the idea of having their own Solana VM roll-up for many of the reasons mentioned just that they get to customize the roll up however they want they get sovereignty they can always leave the L1 if they want to and those are the kinds of benefits that we want to bring to the salon community very cool well uh you know start out in Terra ecosystem and then it depeg now you're in the Solana ecosystem and all this stuff is happening uh you're you're open too no I'm just kidding um so you touched on it a little bit that uh you know we reached out to you we started talking to you about modular blockchains and Jacob obviously was sharing sharing sort of the modular viewpoint but I'm curious if there was a an aha moment for you or like when when did you really feel like you fell down the modular rabbit hole and what was it that you know spoke to you I think it's after Tara's d-pag I saw a lot of the TV owl flow out of a lot of the l1s and I realized that every time we spit up another L1 in order to secure it you basically have to split the security and take some of that security from existing at once because there's only a finite amount of economic resources out there so if you're like a proof of work chain for example you spin up another proof of work chain some of those computers now have to secure this new chain and at some point and that's the only way that we're going to scale then at some point we're just weakening the security every single time which for Roll-Ups that has the exact opposite effect where you're building on top of the same decentralized based layer you're increasing the economic activity and that increases the fee but then that also incentivizes more computers and more nodes to join this highly decentralized base layer so that was the cell and I think that's still the reason why I think that it's the most viable path toward economic scalability like economically sustainable scalability yeah I I agree with you you're touching on the point that you know in a roll-up setup everyone's sharing a common security layer and rather than fragmenting that security with separate blockchains that then have to you know spin up their own validator sets have their own proof of stake token or what have you you can all kind of share down your resources into one common layer and it just it makes a lot more sense and it's also lower overhead to launch a new chain um absolutely yeah there's so many different aspects of it but I'm so glad that you know we had those conversations and and uh convinced you to sort of hop into the modular ecosystem so uh now tell us a little bit more about Eclipse specifically uh we know that it's you know Solana virtual machine roll ups but give us more color give us a little bit more of a overview of the project yeah so the way that I've been describing it lately is as Salon or virtual machine Roll-Ups as a service it's like you want to have your own chain maybe you're a web 2 company who wants to develop a web 2 scale application you're Disney and you want to let people stream movies and stream micro payments as they're watching it or something like that so you want to have your own chain and you want to use the fastest VM out there which right now is a salon or virtual machine and you want to be future proof even if some L1 becomes outdated you don't have to Rebel at all of your all of your code you want to you want to be able to swap that off very easily so that these are like this is the motivation behind it uh and the problems that we basically have to solve in order for that to work is we have to first factor out the salon or virtual machine and the salon execution layer from this very monolithic repo second we have to turn it into a roll-up so we have to set up this August scaffolding for optimistic settlement and the third thing is that we have to basically enable IBC messages to connect it to the cosmos ecosystem which has never been done before but that's why we received a Solana Foundation Grant and that's how you we initially funded that development got it so on the technical side you're taking the Solana sort of virtual machine out of the Solana consensus all all the rest of the node software essentially so you're isolating that piece then you're building this sort of optimistic roll up capabilities as well as like a settlement layer and then the last part is the IBC sort of for interoperability so you're I guess adapting IBC or making it compatible with the Solana VM right yeah like if we wanted to build on ethereum and that was the only album that we wanted to support then we would probably would have implemented the Solana optimistic roll-up settlement on ethereum as a smart contract but the reality is that we just aren't we're not that long the ethereum dog charting roadmap because it's so slow and I feel like Celestia is already there like that's the reason why we like Celestia so much because it's what ethereum should be and it's what they already should be working toward much more aggressively and I think that uh that it basically gives us the opportunity to launch a blockchain of the future now rather than waiting for like ethereum's roadmap to actually come to to reality yeah I think well you know to ethereum's credit I think that they uh you know are are willing to adapt right and they're they're they were one of the first ecosystems to actually go all in modular you know with the role of centric roadmap and over time they their sort of tech stack or their end game has become like started to look more and more like uh Celestia's roadmap um agreed you know unfortunately but fortunately for Celestia we're starting from scratch whereas they have sort of this monolithic L1 baggage essentially that they have to kind of build around I think that they will get there but it's just inevitably a much slower process and there's so much more value at risk so yeah I I understand where you're coming from um so you talked a little bit about the different you know ethereum as a settlement layer versus other places um tell me tell me why like how do you see settlement playing out in the long term as as like you know will there be one settlement layer to rule them all will they be one virtual machine that every everyone settles down to or is there going to be lots of different ones and why yeah so I think the settlement layer to some degree has to accommodate the execution layer that you're writing on top of it so for the Solana virtual machine if we wanted to like use multiple layer ones then we could have re-implemented settlement on every single layer one but because we want to allow people to customize that we have to break the settlement layer out so similarly for other virtual machines such as the evm I'd also expect people to build like honest minority settlement layers for the evm which I think like Astra is doing or maybe Dimension uh and any other like maybe move for example might have its own honest minority settlement there then we might also see subtle malares that exist on l1s uh but but then that also sort of makes the L1 less specialized because now it's not only used just for data availability but it also has to have like settlement capabilities so so that's kind of what I see as a future of settlement maybe like you'll have people doing settlement on ethereum and then you'll also have honest minority settlement layers but I see like very little reason to be doing for example Solomon on chain on Solana that seems like the worst of Both Worlds yeah that makes sense and do you think that it makes sense to couple settlement with the data availability layer like should it should settlement be enshrined or should it be uh like it's a separate chain that you know Builders can build yeah depends on the use case right I feel like if someone's willing to pay the fees to make it an ethereum roll up with settlement on ethereum then they should go for it but if you look at like optimism right now it's still not trivially cheap because ethereum gas fees are still high they have to do settlement on chain if they did settlement elsewhere and then I mean it'd still be pretty expensive because now they self-destro data somewhere but uh but in the case that if ethereum actually builds out their dog sharding plan and it was just used for data storage then then that's like a much more affordable option so I yeah I think it depends on how decentralized or like how much you care about about the security of the um yeah but I guess I guess it basically depends on on what your your thrac model is yeah yeah well the reason I ask is that we get a lot of flack from people about not having enshrined settlement on Celestia because um in some ways you know it makes us or isn't like this easy plugable option for role of developers so you know it means that people have yeah if you do sell them somewhere else now yeah but but what people don't realize is that actually you can build a settlement layer on top of Celestia and and those are already happening you know eclipse is going to be one Astra Dimension there's a bunch uh and and I think for Celestia what really really care about is be incredibly neutral and I think in order for a data availability layer to be credibly neutral it should not enshrine settlement because it's kind of you know it's favoring one specific settlement layer one specific type of uh settlement environment and rather we want to be as universal as possible and and and cater to as many different ecosystems as possible agreed yeah that's why people are sometimes confused by that because they'll ask how is it possible that you're doing a Solana VM roll-up that's storing blocks of data onto polygon or something or onto ethereum because those aren't that they don't use the SPM but that's exactly the point because we factored out settlement and settlement isn't isn't tied to the to the data availability layer all that da is doing is destroying blocks and that could be blocks of it from any virtual machine yeah so we covered settlement I now want to shift to execution and you know the different execution environments out there obviously evm was the first and the most widely adopted probably has the best tooling the most projects building on it um but where do you see the Solana VM growing in the next few years and what do you think has contributed to it its success because I would say the Solano VM is the second most widely adopted um you know blockchain VM after the evm yeah this the svm is solving a different problem which is that this the Solana virtual machine and specifically the sea level runtime is highly parallelized so it's optimizing for just extremely high throughput and as a result it imposes more requirements on developers such as the fact that you have to say what addresses you're going to read from or write to because that's how it enables that parallelism but I think there's a lot of cool stuff going on such as like seahorse Lane lets you write python programs or you can write your Solana program in Python and allows you convert it to a fully typed rust program that can then be run on Solana there's like a great fee Market coming up uh it's soon the Solana VM will support move byte code and Neons coming out in December so it'll support EDM by code so the salon of VM is like the Swiss army knife of virtual machines can support all sorts of buy codes it's super parallelized and that's why we picked it when we were when we were developing the the roll-up initially really should we just make our own bespoke fast VM should we just borrow a move but these are like untested and this is like a completely new territory whereas if we use the salon of virtual machine then we benefit from all this tooling that already exists so that was the thinking behind why why we chose it that's pretty wild that um you can run I guess well you're already kind of doing that but that you can run move or even evm byte code on the Solana VM I I you know I guess that touches on your previous project which was you were you were trying to build an evm on top of uh Cosmos on on Terra so yeah I guess that you're pretty familiar with how those things work but um yeah and yeah the way it normally ends up working is like it'll be a fork of some repo like Sputnik VM is an evm implementation for rust and it's almost kind of like a gap like go ethereum it'll go through each line of bike code and be like oh you want to add these two numbers I'm going to add them now and it just goes through line by line uh and it's a smart contract uh written and deployed to the to the blockchain that you want to have like evm capability for yeah you know the interesting thing is that this also connects the settlement in that um you know a settlement layer it's it's easy for it to for example verify a fraud proof uh within an execution environment that it knows about but if it doesn't natively know about that execution environment then that has to verify that fraud proof within a smart contract that understands that yeah execution so I guess I I hadn't thought of that before but it's actually a very similar problem so maybe even the eclipse settlement layer can use some of this technology to in the future settle Roll-Ups that are not only Solana VM roll-ups yeah definitely I think it's a lot easier when you're building your own settlement layer because you can control the gas costs and stuff whereas if we were trying to do Solana VM settlement on ethereum then like maybe some of the elliptic curve operations or something are super expensive to to settle on on the ethereum L1 or maybe it's just like not even it's just prohibitively expensive and it's not possible at all whereas by having your own settlement layer then we don't have to worry about that and we'll always be able to do the settlement the question is just like what is an honest minority with respect to like where which L1 are we are we depending on for security and that that's sort of up to the user got it um well we're getting pretty technical here um but one last thing on this sort of General thrust is how do you think about the difference between Sovereign Roll-Ups and Roll-Ups that actually aren't Sovereign that use a settlement yeah um where do you where do you see the trade-offs there and which which one are you building yeah so like Eclipse Roll-Ups aren't stubborn from the eclipse thought on my layer they're like governance Roll-Ups whereas a sovereign rule like our settlement layer is is Sovereign doesn't necessarily rely on on any particular L1 but uh but yeah I I think if the thinking is like if you if you want to be able to truly replace all the parts of what your uh of which Your Role or what your chain is building on then obviously you need complete sovereignty but I think most people don't want to be responsible for all of those parts and I that's what's nice about having this variety of options it increases the design space and people can say Oh I wanna I'm okay with relying on eclipse for salamand because I pre I feel pretty confident they're going to do that correctly uh and and we'll give them the option where if they want to plug in their own consensus and become their own layer one then they could but but by default I don't think people want to have that I don't know if they if they need that level of sovereignty whereas being like a sovereign develop I think is a really good in between stage for someone who was like previously their own layer one then they become a sovereign roll-up so that that's like a first step for them and then maybe down the line they become just like a total roll up and they're and they're dependent on some some other enshrine layer yeah to me um modularism is all about choice and flexibility and um you know obviously Celestia has been beating the drum about Sovereign Roll-Ups but it's not because we think that Sovereign Roll-Ups or you know that you have to build one way or the other um it's just that we think people should have the choice and you know other ecosystems like ethereum oh like over emphasize the that you have to use the settlement layer right but like we we feel that it's important that people realize that Roll-Ups can be their own chains in and of themselves they they're they're not fully independent because they do borrow the security of an underlying L1 but they're not they're not they don't have to you know post their State updates somewhere they and they can they should be able to buy their own social consensus fork and upgrade and do these things if they want to if they don't want to they don't have to it's it's totally optional um so yeah that that's it's cool that you guys are are kind of like you see that the pros and cons I think most people may you know if you're a casual developer you might just want to you know deploy onto a settlement layer it actually makes your life a lot easier in a lot of ways so there's no right and wrong yep agreed so uh let's go back to Eclipse a little bit more specifically um so you well you you guys are going to build the sentiment layer and it's it is its own Standalone chain with a set of validators or is it going to be uh itself a roll-up that you know has its own Sovereign settlement oh yeah so the Solomon layer is honest minority so it is it is a Roll-Up yeah and it'll post those blocks of data for the Solomon layer to Celestia and then and it's going to be an optimistic roll up with fraud proofs that are sent around on the peer-to-peer Network yep that's right yeah got it and So eventually it will become a zero knowledge roll up and we're developing that right now we're actually leveraging the risk zero code and we do this jit compilation between uh Solana programs which is typically BPF by code and risk five by code and then we use risk zero which is able to run risk five by code and give it zero knowledge proof yeah I'm a real fan of of receiver for the people listening who aren't familiar risk zero is building a proving system for uh the risk five uh instruction set so what that means in more like layman terms is that you can take code so uh and then compile it down to risk five and then prove it and that way you can build like you can it really it makes it a lot easier to build ZK Roll-Ups because uh rather than using these new instruction sets like Cairo um risk 5 already has a ton of support it might not be optimized but it has the support there and there's lots of it's very easy I think like there's already compilers right from let's say rust or a lot of these like high-level languages down into risk five so that's that's really exciting uh so you're starting optimistic yeah you pivot you'll pivot towards ZK in the future when that's ready um yeah and it might even just be an option that we give to people it's like are you deployed an eclipse roll up do you want to use optimistic settlement zero knowledge or do you want to just do like proof of authority that's an option too and it might make sense for a lot of these centralized entities who are moving into web3 maybe they just want to run all the nodes but they also want to get the benefits of like transparency and people can make sure that nothing was done uh in an invalid way maybe they do have like some sort of verifiable Randomness still but uh but but but then they they also want to collect all the sequencer fees themselves or maybe they want to subsidize gas there's some reason why they want to run the nodes themselves yeah one of the things that I find really interesting about modular blockchains is that um you know the earlier Cycles those of us who have been around since you know 2017 and 18 uh wave uh one of the really popular things was in Enterprise blockchain or like private blockchains and uh obviously nothing really came of those things like hyper Ledger and and all those things um for obvious reasons and that's because you know blockchains I think that the the real value proposition of them is that they're public and verifiable but if someone's running a private blockchain it's like well you know it like yeah why not just use a server yeah this is a server right uh but but the interesting thing is that what Roll-Ups do is I think they they strike this Middle Ground where you can have uh let's say I'm I'm Circle right and I'm I want to have like a usdc chain I wouldn't it's it's probably bad for me from a regular regulatory perspective to launch my own blockchain and have my own proof of State coin and whatever else uh and this would be the same for lots of different um Enterprise uh like uh entities but I would also if I launch on let's say slana or ethereum I may not have the control and the customizability or even sovereignty that I might want so you're kind of stuck between these two options and the cool thing about a roll up is it's kind of like that that Goldilocks like Middle Ground where you can have your own chain without actually having to you know do all this kind of regulatory scary stuff again you're just paying fees to the data availability layer and yet you have the customizability and sovereignty of your own chain so I could see a lot of uh a lot more Enterprises using Roll-Ups uh going forward because they just kind of unlock a new use case yeah Enterprise Roll-Ups make a lot of sense compared especially compared to Enterprise L1 switched out and maybe that's what FTX should have looked like like a centralized exchange where because because you still want to control stuff like making the blockchain permission you don't want random people being able to on-ramp onto the exchange necessarily if they're a centralized exchange but then you also get proof of reserves and you maybe they could have somehow Incorporated proof of liabilities we could have prevented the kind of fraud that occurred yeah yeah absolutely if there was if everything was on chain if there's a roll-up there it would have been transparent there would have been safeguards essentially like they wouldn't have been allowed to take your funds it wouldn't have been custodial to begin with um yeah so again like uh I I wanna I feel like I'm almost there but I wanna fully understand the sort of eclipse stack so we mentioned three things at the beginning one was taking the Solana run time out the second one was the um fraud proofs and settlement and the last thing was IBC we kind of talked about the the fraud-person settlement I'm curious like how challenging has it been to extract the Solana VM from the Solana node software yeah so it's it's pretty monolithic but I think what jump did recently with fire dancer is really interesting and we haven't looked too carefully at it uh just given that we've been working with the Solana core repo but they basically turned the Solana client into this modular um repo but the thing is now in order to run that it's like 10 different binaries which would run all of them separately so there's pros and cons to it but it also means that you can take like a piece out of it and uh and like use that separately so yeah what would we we basically want to take out the vote messages in particular so if you look at the Solana blocks if for every validator they have to put this additional transaction in and that's counted toward the trend that's the line of transactions per second so if you look at like popular public measurements it'll say Solana's TPS is like 3 000 TPS or something like that but actually like three quarters of that is votes so that the true TPS is closer to like 700 800 whereas for Eclipse we don't have those vote messages so we're actually able to get more throughput out of the salon if you have wow yeah I think a lot of people don't really there's a lot of fun it goes both ways people are always like look how high the TPS is and then all the youth Max is like oh all of its votes uh but then it's like well even if it is most of its votes you know it's still pretty high uh but yeah I find it interesting that that choice was made to to have the the votes like as actual like transactions um but yeah you know you touched on the fact that I didn't realize that the fire dancer was making the Solana stack modular uh it's cool because like we're seeing this across all the different ecosystems like obviously Cosmos was the first and again for the audience like uh there's an important distinction between modular software stacks and and actual modular protocols so like when we say modular blockchain what we mean is actually a protocol that itself is modular meaning it just does you know one function like data availability or does execution uh but there's also this other side which originated with Cosmos which is a modular software where the the way that they built their software like they they still build monolithic protocols but the software inside the protocol is modular so you have the the piece of code the library or the yeah the piece of code that runs consensus then you have the piece of code that's actually doing the execution like the state machine and all that and so Cosmos kind of started this with Cosmos SDK and tendermint and then you know ethereum started going this way more recently uh with their they have like the execution client and they have the actual like eth2 like proof of State client um and now and so I didn't realize that Salon was doing the same thing and there's just so many benefits it makes sense like modular modularize everything including the software is kind of my my perspective and it's probably gonna make your your guys life a lot easier I imagine yeah you can do things like swap out the consensus or throw it away all together very cool and then now let's to finish up sort of the the eclipse stack tell me a bit about the IBC side of things like what are the challenges there um and what does development look like yeah so this is the first ever IBC implementation for Roll-Ups and then it's also an IBC implementation for the Solana state so for Roll-Ups especially for optimistic gloves usually there's a challenge period so if you go and send IVC messages out of your optimistic roll-up that can pose an issue if your optimistic Roll Up is rolled back because for the next week or however long the challenge period is that's always a possibility so you actually need those off those IBC messages to be either subject to a challenge period where you could pass a fraud proof or you just only send the IBC message when finality has already occurred so that's the challenge with IBC it also requires just getting I mean there's like different elliptic curves that are used for Solana so a lot of IBC Rio yeah I don't think any IVC relayers support the elliptic curves that are that are used so that's the kind of work that we have to do we push a lot of that Upstream so that's the IVC working then you also have to implement just like a regular bridge so like a non-ibc bridge uh maybe one that uses full nodes and the reason for that is that then you can get fast finality bridging out of the eclipse Network because otherwise you'd have to always have to wait that challenge period when you say like full node Bridges what do you mean do you mean something like it should be like uh something that's running the yeah it's running the eclipse client uh and it's just following all the eclipse blocks and it's actually uh it's aware of like what the what the uh Fork Choice rule is and it it basically if you want to bridge your money out it's like all right Nothing's Gonna Get rolled back up until this point so we can go ahead and just do it got it but that's not running on chain right so that would be like an intermediate service like axillar or yeah okay got it yeah and didn't uh I think if I recall correctly the Solana Foundation gave you guys a grant to build support like IBC support for Solana essentially yep that's right yeah that's what our grant is for to basically build IBC messages for the Solana VM that's pretty cool I like it's it's very cool to me that this Lana ecosystem is supporting you guys uh and the work that you're doing because I think it's it's going to benefit them you know um in the long term for sure so I agreed yeah Anatoly is an Isis guy he also personally Angel invested and I the thinking is that if there's going to be a bunch of Roll-Ups and chains out there they'd prefer that it's the svm rather than some competing execution layer like the ebn and it helps everyone because we might make improvements to sell on a virtual machine as well like we're gonna possibly work with Skip and introduce the concept of blocks back into Solana and maybe that's not ideal for the Solana L1 but the reason why you might want in a roll-up is because now you can do an Mev auction so that's like it's just giving people more options on how to use a salon event yeah yeah uh well uh you know Anatoly and the whole Solana team we have a lot of respect for them and I love that they're they're very positive some you know and yeah for Celestia like you know our uh ethos is modularism not maximalism right it's like it's not about competing and who's going to be the chain or the ecosystem to rule them all it's like hey this is a this is a positive sum game we are each building different components and contributing to this like larger this huge you know Tech stack and and if we build it in the right way it's gonna be possible for everyone to sort of like benefit together and if Builders will win as well because they can mix and match everything and so yeah I'm I'm really stoked that the Solana ecosystem is is backing you guys um for people who haven't heard of skip another really uh exciting project coming out of the causes ecosystem that are taking a new approach to Mev like a more modular approach to Mev uh so I'm excited to hear that you're working with them as well so we get this we got the eclipse stack those three different components um now I'm curious like where does the data availability layer come in where does for example Eclipse plug into Celestia how does that work yeah so the execution layer for a clip so the Solana VM produces a block and that's stored on some data availability layer or alternately you could pass that to the settlement layer the settlement layer does whatever work it needs to do and the settlement layer stores both its blocks and execution layer block onto Celestia or whatever da layer you want to use so uh like we've chatted with other dlars like polygonabell and eigenlayer but we're excited to be starting with Celestia and we'll continue supporting it because like Celestia is also like the whole motivation why we made this like blockchain modular and it's I think it's going to be uh first to Market so that helps check and how do you see so so just to explain again so you have the eclipse settlement layer which is itself a roll-up on Celestia or or another data availability layer and then you have the other sort of eclipse instances which are Roll-Ups that are settling to that layer and they're all kind of posting their data down or that or they might post it to the settlement layer and then down uh depending on sort of their preference yep and and will there be a separate so let's say you launch your first launch on Celestia then you know let's say Avail is is live later will you launch a separate settlement layer on top of a veil or will there be some way to unify these ecosystems and have one single settlement layer across them yeah this single settlement layer right now the way it's being designed is this one settlement layer we'll be able to post two different data availability layers got it and so will it post to all of them simultaneously or will like users choose I think you would just pick one yeah so that's like the the thinking if you deploy a roll-up then you get to pick which da layer do you want to use depending on maybe some da layers or more decentralized or something and maybe they're more expensive whereas other ones might be totally centralized and super cheap so they get to pick that part and uh and we leave it up to them got it that makes sense and how do you guys see the sort of evolving ecosystem of data availability layers like where do you what do you think is most important for a data availability layer to provide um and like why would why would a developer or a user or an ecosystem like Eclipse choose a specific one over the other yeah well I think table Stakes is just the sophistication of the data availability proof so some some chains just have better datability sampling than others uh or maybe like the worst case is if you just have to store the full block and then it's not really doing data availability but it's just doing data storage and that's that's how we're implementing it for the Solana L1 right now we just have to store the full block there and there's no sort of clever sampling that's going on and that's also a very expensive solution uh but but maybe some user wants to use Solana because maybe that's where they're coming from maybe they want to they like Solana consensus and they're willing to pay the price for that and alternatively they might go like even more extreme and store it on ethereum or something where the fees are even higher but I I think ultimately uh people are going to be thinking about what's their cost preference and their cost sensitivity and and they're going to be thinking about what are the other benefits that a specific data availability layer confers in terms of like how decentralized is it and uh and like whatever other properties maybe maybe they might prefer like a kzg commitment if they want to have some sort of like zero knowledge datability proof maybe there's some more sophisticated users might have preferences about that yeah I think what you were touching on there is um the the overhead right of a data availability layer because so if I'm if I'm a roll-up and I'm using I'm posting my data to a specific data availability layer then uh all the clients of my role up also have to you know check that the data is available so if you're using a monolithic blockchain like Solana or even right now the the evm that does not have data availability sampling you have to actually just download all that data you have to go in and like retrieve all of it which is a lot more overhead um and in a blockchain like Celestia it's just sampling so it's a very very light process um and and very very low overhead so I think that's definitely a big one and also like the the actual security of the scheme as well you know how well how secure is is their sampling scheme I think there's going to be a range of of trade-offs there and then as you said the kzg versus optimistic from our perspective at least from what we've seen in the benchmarks of of kzg commitments they're just very expensive and slow to compute so it's kind of it doesn't seem practical at this stage but it might be and there's actually even a possibility that there's going to be other ways of having a sort of validity like a like a non-optimistic encoding scheme um but only only Mustafa could explain that to you um but yeah that that's cool to hear your guy's perspective you know on on the different trade-offs of data availability it's gonna be really exciting to see as more of them come online how they how they measure up to each other and I think costs obviously is going to be a big one um you know how do you guys think about costs in in in the data availability landscape like is that really one of the main um like points to the trade-off curve for you guys like oh this one's gonna be it's too expensive or is it going to be like as long as it's below a certain threshold that's fine um we'll use it yeah uh like similar to you guys we try to maintain credible neutrality so if someone's building an eclipse chain we don't want to like push our preference on them me personally like that's definitely something I was thinking about as we were building this initial version of of eclipse out because I was initially going to deploy it to ethereum and the cost was just so prohibitively expensive but I was like this this is just never gonna work and we need to find some other solution or just graph the idea all together unless there is some data availability layer that exists and and that's why Celestia was a perfect solution uh but yeah I I think it for for most people I think it's something more like there's a threshold where people think this is effectively zero zero like if they're using the salon on blockchain for example the gas cost in general is so low that people don't even think about it whereas for ethereum people 100 time the gas like they'll be waiting there they're like oh I should wait 30 seconds because that's the site suggested time or whatever so that that's it's like a zero one thing on whether people are thinking about gas at all or whether they're not thinking about it and then there's like the other binary which is just it's just so egregiously expensive that it's just off the off the map altogether yeah I think the the the real benefit for the ecosystem of data availability layers is that it's going to make block space so abundant and so cheap and hopefully we can go back to a world where users and developers don't even it's not something they think about you know it's not like they're like oh I really gotta optimize this gas or oh like I want to wait oh today gas is too expensive so I'm just not gonna you know mint my nfts or or what have you um so I'm excited for that to happen and the last question on data availability layers is do you what do you think about like the ecosystem on top of a data availability layer do you think that that's important like the network effects of let's say the other Roll-Ups because as you know one of the benefits of a modular blockchain stack is that Roll-Ups that are built on the same on a common data availability layer have trust minimized bridging meaning that they can bridge in a in a fully secure way um so there is sort of a network effect around that property do you think that that's going to be an important thing or do you think you know developers are going to be like ah you know trusted bridging yeah adding up the network effects yeah I think they accrue more to the Solomon layer because if you're like a breaching money between uh like yeah you definitely if you're sharing data availability layer then obviously like you only have to rely on this one assumption which is that that L1 is not going to be like compromised or something but but also it's like you can get fast Fidelity bridging between optimistic Roll-Ups that exist on the same settlement layer whereas if they're on different settlement layers uh I guess you'd probably have to you'd run the risk that both of these chains get pulled back or something say yeah they're effectively like sharing settlement layers in some way so yeah I I guess that that's what I I think of like the network effects for Roll-Ups are a little bit weaker than on a monolithic L1 just because when all the all the small contracts are deployed together and of course you get Atomic composability but yeah there's definitely still some serious Network effects and bridging yeah it's gonna be exciting and I love having debates on Twitter with people about you know where where will the network affect a crew because it's still uh anyone's anyone's guess uh so zooming out to just the modular blockchain ecosystem in general what are you most excited about uh and where do you see the space evolving as a whole yeah I think I'm really excited about those sorts of institutional Roll-Ups that we were talking about before where like the Disney's of the world or spotifys or something might have their own roll up or I think games having their own Roll-Ups is really interesting mythical games is building their own L1 right now which probably doesn't make that much sense in the context of what we're discussing which is that they just want their own execution layer really and they don't want to have to worry about like running the infrastructure for an entire L1 so I I think we're gonna start seeing more of that I think gaming is a really great application because uh oftentimes games can use their own chain for a variety of reasons maybe they want to adjust block times or maybe they want to Mint a million nfts I think that's that's one Cool Wave and another one is token incentivized physical infrastructure so helium drops I think like a million nfts every week some crazy number and there's not really a great chain that could support that volume of nft drops even Solana like nft drops are famously what causes Solana to throw up so having like an NF having infrastructure that's like designed for nft men's uh it probably shouldn't be its own L1 because like now roll up Tech is at the point where uh where we can actually use that so I'm excited to see like unique solutions to the kinds of problems that that have sort of hampered the mass adoption and scalability of applications on layer ones so yeah those those are the two things I'm keeping an eye out for I I think it's got to get to a point where it's as easy as deploying a smart contract or even simpler than that even smart contracts are are almost too difficult because if I want to deploy like a website to AWS they have all these like you could like spin up your own instance and do all that stuff but they also have extremely simple ways to just scaffold it instantly just to play it like straight with your CLI so we we need stuff like that I I think that's the next wave um so you you took the words right out of my mouth when that's kind of been our our vision and I'm glad that you share it of making it as easy to deploy a new blockchain as it is to deploy a smart contract and actually even like you said further it should be you know like AWS it should be like Cloud for web 2 where you know just a few clicks and then boom you know you have your server your website your web app whatever live and ready to go uh and and it can scale up and down you know you can shut it off all those things that level of flexibility is where we should be shooting for um and I think I agree people aren't thinking like nearly big enough in terms of how usable crypto needs to be in order to have mass adoption like these tiny things like waiting challenge periods or waiting for gas like that people are like oh it's like not that big of a deal but that's like leagues of away from where it has to be in order for like my mom to be able to use crypto she's not going to wait for gas prices she does she shouldn't even know what that means yeah absolutely yeah I think we've we will have one when um you know people aren't really aware that they're using a blockchain necessarily like it's just uh it just works um yeah that's amazing so to to wrap things up I want to ask you where is Eclipse now in the development cycle when you know what what are the upcoming things on your roadmap when can people start trying stuff out and using things yeah so we're excited to launch our test map and again end of January beginning of February next year so 2023 uh so q1 2023 will have three test net chains one's for D5 one is for Consumer gaming nft stuff and the last is for token incentivized physical infrastructure and they're gonna be able to pass IBC messages between each other sounds like we're probably going to enable test out IBC messages possibly with OKC or some other chain uh just to kind of show that we're able to pass IBC messages outside of the eclipse Network and we'll support Celestia as a DA layer possibly others such as polygonabale or eigenlayer depending on if they're if their test Nets are ready to accommodate us but at a minimum we'll support Celestia and and yeah that we're giving early access to a handful of protocols we're keeping it to 30 protocols for Early Access but there's like hundreds of protocols that have signed up and we'll let them just Deploy on their own but we're gonna actually hand hold some subset of these protocols for either especially big protocols that are moving to eclipse or maybe they just are a unique use case they're just getting started such as a lot of these token incentivized physical infrastructure projects are just uh they're they're early enough where we're even connecting them with Venture Partners right now and we're helping them with their architecture so we might take a more Hands-On approach for some of those wow so you already have your test net coming up you have people already lined up ready to go lots of first use cases that's that's amazing and where do you see Eclipse you know uh when do you plan to launch mainnet and then like what do you see for the first let's say year or two of the project from there on out yeah so mainnap will be and if Q2 of next year so we're gonna align with uh obviously we're like limited by Celestia's main net launch so we'll sort of time it with you guys and uh and yeah after that I think the next step is getting these like big web 2 Enterprises to start deploying Eclipse chains professionally and then it'll be self-service we'll enable settlement so initially for the test app we're going to run all the nodes ourselves similar to optimism's launch where they run the node they don't enable settlement so they don't enable fault proofs uh but we'll enable that stuff later got it yeah well Celestia mainnet launch Q2 2023 uh stoked that you guys are will be there with us along for the ride um so if people wanna is there any any last message you want to you know share with the audience um and where can people find out more about eclipse yeah um so one thing is we're gonna be launching our brand soon so you can sign up for our Chestnut or our website you can put your email in we'll send you uh details there the second is to follow us on Twitter it's eclipse fnd eclipse Foundation uh that's that's our handle on Twitter you can follow me personally Neil salami and and we'll be posting about all the updates for eclipse cool well Neil uh you know I'm a big fan of eclipse and what you guys are doing uh it's been a pleasure to have you guys on Celestia spotlights you guys are the first project um which is is cool and uh thank you so much for sharing all this information great thank you Nick all right take care 