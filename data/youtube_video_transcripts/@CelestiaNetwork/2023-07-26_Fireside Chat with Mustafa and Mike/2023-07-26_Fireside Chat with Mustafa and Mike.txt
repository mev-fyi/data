all right everyone everyone having a good modular Summit let's give a hand to Celestia for organizing this Maven 11. this is amazing and this is the last panel of the day so everyone gets a trophy and a cookie for staying and watching us thank you uh Mustafa I've got a lot of questions for you about Celestia about the history and how we've gone from lazy ledger to here and sort of what you expect from the future but I was told actually that you at one point got arrested for hacking the CIA and I've just got to get you to tell that story on stage so give us the inside scoop what's the history here yeah so we're starting straight with that okay um yeah I mean I kind of like got into programming at early age and um you know that's like the first programming language I Learned was PHP and I started like thinking about ways that you know programmers could make mistakes in their code and then I started like learning hacking naturally through that way like my first experience of a hack was when I was doing my math homework I didn't have a calculator with me but how old were you when you were doing this well like the chocolate thing like when I was I was like 11. and I don't have my I don't have a calculator but I need to do my math homework so I search online for like online calculator and I found this like shitty like Pearl calculator on this um math professor's website I think it was like University of Maryland and it was like a text box it was like a text text box where you can like type in sums and it will give you the result so I was thinking Hmm I wonder if he implemented this in the most basic way that a programmer would probably implement this which is it was using Pearl so you the way you would do it is you would take the user import and you would input it into a function called evaluate and that basically evaluates computer like parallel computer code so not only you can type in like sums into this calculator you could actually type in like computer code into the calculator and the server would execute it so I would so you could actually hack the entire server to this exploitable calculator and so like I managed to get access to like this to this University server you know it's by typing computer commands in this calculator and then you know emailed the professor and he managed he tried to fix it and then I found a way around it and you know and that was kind of like a very interesting experience for me but then I kind of got like more involved in hacking when I'm I started becoming more involved in like internet in activism um I was involved with the groups like Anonymous and laltec um anonymous was doing denial of service attacks against various entities that they were protesting against so for example like when we clicks when PayPal and visa and MasterCard block donations typically they do the denial of service attack against PayPal and Visa MasterCard to take them offline and you know it was like thousands of people in the chat rooms kind of coordinating this but for me I thought that was kind of interesting but it didn't really do much except for gain some media attention so I decided okay why why don't I actually try to you know hack something and like get information get information that could shed light on wrongdoing so then I started so then I like found some technical people and I found like I noticed like a few people that were more technical than others and I brought them into a private Channel and kind of started a hacking group through there eventually spend out into LOL SEC so just to sum this up by the way the difference Mustafa between you and me when we're 11 you know if I didn't have a calculator I just didn't do my homework and try to hack a new one out of the out of the web uh and just to bring us up to the current time and I think you were about 16 years old at this point right you're sort of casting around and looking for a righteous group that you can hack and you uh you settled on the CIA which is uh that's a bold Choice um tell me how does the the CIA take to hackers are they you know is that particularly welcomed yeah I mean so the funny thing is like you know CIA was one of the many things that we kind of like attacked but the funny thing is that the CIA wasn't even technically a hack it was a denial of service attack so it's like it's all up service attack you're not actually getting confidential information so we just took the CIA with we took the CIA website offline and that was like that that's like a very basic thing like that's not even like the most you know we did more advanced things than that but like that was the thing that got the most attention um or one of the things I got the most press attention because like it was very embarrassing for the CIA to have their website take um taken offline did they uh thank you for this and say thanks for showing a vulnerability in their system or were they a little less forgiving um that can be in some very strange ways of that all right we'll dig at that a little later but uh I think this is a great story to tell because I sort of want to um I think many there are a lot of very unique people in the crypto space and I think the people who have made an enormous impact actually come at this not from a short-term money-making perspective but from an ideological how can we change the world perspective so I think that's just important background for folks in the audience to understand uh now I want to actually move us forward a little bit in time and talk about lazy Ledger which was originally the name of Celestia and sort of the white paper and idea that launched this entire wave of modularity that's frankly blossomed into something super amazing that we're witnessing you know this week in Paris so tell us a little bit about how lazy Ledger came to be and what are the early iterations of that modular idea look like yeah sure so um I've been interested in peer-to-peer systems for even before Bitcoin existed like I was interested in BitTorrent and peer-to-peer file sharing because I used to like download stuff from Pirate Bay and that was very it was very interesting to me that people could kind of just download stuff and kind of like permissionlessly and the interesting the reason why I'm interested the reason why I was so interested in PHP systems is because so many people try to shut down their Pirate Bay and but to this day is still online so it's like extremely censorship resistant and that's thanks to technology like BitTorrent and dhts so then I learned about Bitcoin in 2010 2011. I was following that and um I was kind of like following the research conversations going on it was like this IRC Channel called Bitcoin Wizards where people were discussing theoretical improvements to bitcoin and um I noticed that it was like a one megabyte block size limit in Bitcoin and I was like asking people what what you're going to do when it gets reached and people weren't worried about it at a time they were like it would never get reached but then it got it got hit pretty soon in around 2013 2012 and you know transaction fees became very expensive and then the Bitcoin Community started debating about how to fix that problem and you kind of like split into two camps one Camp wanted to increase the block size and that can spin out into Bitcoin cash and another camp um wanted to use layer two technologies and payment channels and lightning Network and that was the Bitcoin cap that kind of prevailed the Bitcoin main Network but the reason why they didn't want to increase the block size was because the fundamental principle of blockchains and cryptocurrency is that end users should be able to fully verify and validate the chain and if you increase the block size it will make it more expensive to for users to run full nodes so then I started thinking about like well um about this problem more and then I started doing a PhD at UCL with 2016 focusing on layer 1 scaling and we were at the time people were talking about sharding that was like the most interesting is getting solution at the time and I could also the people called chain space which was uh like the first sharding protocol for smart contracts to be proposed and I was also this was around the time when ethereum 2.0 was researching sharding but all of the the problem with all of these proposals were that they weren't dealing in the K they weren't dealing with the case where A Shard goes bad it was pretty much like a block size increase like the security model for this proposal for us like increasing the block size but there was no way to actually validate what the shards were doing to fix that you need to have fraud groups and GK proofs and that's what Roll-Ups are doing but at the time the reason people um there was a missing problem to making foolproof and Decay proof works at work which was a data availability problem which was an unsolved problem at the time and um so I started like doing more research into the data availability problem and I co-authored this paper with vitalik on how to scale data availability using data availability sampling and then I realized that this is actually basically the core primitive that makes a blockchain work like a blockchain fundamentally at its core is basically a data availability layer and the consensus layer so then I proposed lazy Ledger which was a kind of a paper that proposed a blockchain that or layer one chain that takes layer one back to its core components that's why it's called lazy Ledger because it's a lazy blockchain that does not do any computation only those consensus and data availability and this and those this was an idea I proposed about three months before optimistic Roll-Ups were proposed so when optimistic was also proposed everything kind of clicked together because in my paper I didn't really have a fully fleshed out execution model an optimistic rollouts provided there so then it kind of made a lot of sense to actually build this because um roll-up Century roadmaps need a scalable data layer yeah I actually want to you know get into the weeds of data availability I think that's a word that many people understand kind of on a surface level but it's such an important sort of Roadblock in terms of realizing the Grand Vision that many great talks have actually laid out today um so I kind of want to actually go through like and maybe just Define sort of the basic components of a stack which to me is the execution the data availability the settlement and then the consensus and can we focus on that data availability question like how would you like let's say there were a bunch of five-year-olds in this audience like how would you explain the importance of that and then why is solving data availability such a critical roadblock not only for scaling base layer infrastructure but for the cost of apps yeah so like here's how I would explain it when Bitcoin was created bitcoin was created to solve What's called the double spend problem when the double spend problem is is where is this fundamental problem in digital in creating digital cache where if uh Alice has a certain amount of funds how do you prevent others from spending their funds the same funds twice and the way that you prevent that is by having a blockchain that orders transactions because if Alice tries to spend their fund twice then only the first transaction will go through and the second transaction will be rejected but in Bitcoin and this rule where only the first transaction can go through or a rule where you can only spend funds that you actually have is enshrined into every Bitcoin node so that if your if you run a full node and you receive a block that has an invalid transaction your full node will execute every transaction and reject the block a block that contains any invalid transactions so miners can't misbehave in that way but the question I kind of led to Lazy Ledger was well um and why data availability is so important is well is a thought experiment which is what if you created a what what is the simplest version of Bitcoin you can create what if you had a version of Bitcoin with no rules about what transactions can go into the chain which means imagine a version of Bitcoin where um conflicting transactions or transactions that double spend coins actually allows to be on the chain well how would that be how how can that still be secure how can that still prevent doubles building problem well it's pretty easy all you have to do is make sure that the clients simply ignore the second transaction right so like technically you don't need to enshrine computation or transaction validity rules to the chain itself you can push that away to another layer or you can push that away to a client side node so where the layer that you're pushing it to Simply ignores those invalid transactions and if you do that then you're basically using the blockchain um not for computation but only for a ordering and B data availability and the reason why ordering is important is obvious because you need to know which transaction came first to know which is the real transaction that actually got to spend spend those coins and the reason why you need data availability is because you need to know the complete set you need to know all the transactions that happened to know which one even came first in the first place like if the transaction if not all the transactions were published only some of them then you don't know if there's a missing transaction in the set that wasn't published that might have come before that made sense so I want to you know understand from the perspective of I mean you know in kind of simple words it's a lot of applications they need data they want to do it in a way that's cheap and I want to start uh you know painting a picture for those in the audience like if we solve this problem what Market structure changes are going to happen here so you know from a cost structure my understanding for especially Roll-Ups and things like that is that data availability is a massive cost for them right critically it's a variable cost that will it doesn't get cheaper it's not some fixed cost you can amortize across a whole bunch of users it's actually something that is going to scale relative to the amount of transactions that happen so I want to get a sense of let's say you know these apps start using Celestia for data availability they massively lower their cost what is the impact of this from a market structure standpoint do we see lots of new apps launching are there business models that are enabled with a lower cost of transactions that end up happening that have been recruited from happening before like what are the like first order implications of this yeah I mean like the kind of like most immediate obvious implication is you have cheaper cheaper data availability leads to cheaper transaction fees and I do think that a lot of usage of web3 applications have been bottlenecked by the fact that transaction fees are too high like if we had cheaper cheap transaction fees I would honestly genuinely think that we would see a lot more applications being deployed on web3 and not just D5 applications but also you know for example to give an example like this will be discussed in the gaming track tomorrow but there's various on-chain games that only are only practical with a high data 3 port or even for financial applications imagine you wanted to just use like the whole original purpose of Bitcoin was to use it as a peer-to-peer cache system but we don't have a single um widely used blockchain that is used usable as a peer-to-peer cache system because of the transaction fees um so if we if if we have like scalable the a you have cheap transaction fees then it can actually be used to what the original purpose of Bitcoin was which is which is peer-to-peer cash not just you know a store of value or um or some investment or something like but people hold because they think it will go up or trade indexes and so on and so forth um I think that's and and I think this the other kind of effect is uh yeah we'll see a lot more applications become practical as a result of Cheaper transaction fees but also by having scalable the a and having on a modular blockchain stack we'll be able to see a lot more experimentation with different execution environments with certain things that people wanted to do before are not possible so some examples of that is that um like various projects um have Manta for example have modified the evm to add certain zke or privacy friendly opcodes that are possible on the standard evm or for example curio have modified the evm to um create a 0.5 tick game engine to be able to run a real-time strategy game on with it which wouldn't be possible on a standard evm and historically it was impossible to do that without deploying a new layer one if you wanted to deploy a new execution environment which is a lot of overhead to use like a web 2 analog imagine if you had to have a physical server somewhere just to experiment with a new programming language or new database today that's not the case because you can just put up a virtual server in the cloud on AWS or digital ocean so you can you can think of roll ups on a scalable DNA error as like virtual blockchains that enable people to experiment with different um execution environments that unlock things and enable things that fundamentally weren't possible before I have a question for you Mustafa which is I sort of found myself wondering as you were just discussing there there's kind of this question that's a little fuzzy to me of like just as a hypothetical you know with the proliferation of many different execution environments now it's not just the evm many data availability layers right used to be just ethereum da but now we've got eigenda and Celestia Avail other providers and different uh you know choices for settlement and consensus as well it's very possible in a very near time in the future that you could be using an application that's built on that Solana virtual machine using Celestia as da but settling to ethereum and the question is what chain are you on at that point and where is the lock-in for these different environments yeah um basically the question uh like the whole point like the whole point of engineering is to kind of shift away from a world where you have this tribalistic crypto environment where it's like this Chain versus that chain you know it's like you know ethereum versus Lana versus Avalanche which is a very Zero Sum mindset um and long term is important for changes to have a social mode but long term um you know before crypto growth for crypto good to go the mainstream ultimately users care about like usable products not necessarily you know which which chain that they're on as long as the chain has basic um unnecessary decentralization and security properties and yeah and I think like yeah people right now kind of frame things like you know this app on this chain you know like you need to swap on polygon you need to swap on Avalanche C chain in the future like people would be thinking in those kind of terms people will be thinking okay this is the app and it uses this stack underneath like when you use it when you use a when you interact with a website today on the web you don't you don't necessarily um care too much about like what stack is using underneath in many cases you don't even know and like when you go on Google you don't know is it using Linux is it using FreeBSD you don't necessarily know as long as it provides properties that you need yeah I want to um actually do a little thought exercise here and imagine that you and I are sitting down it's five years from now when we're having this Fireside and I've got some questions for you to dust off the old crystal ball here and I want to ask you about how things have played out during that time what does the market structure look like and what are some of the big changes that we might not be super obvious today so you know we've heard from a lot of great projects today a lot of our uh you know these past couple days basically you know new uh approaches to scaling infrastructure new types of specific blockchains I mean what is the market structure sort of look like for the modular stack I mean are we gonna live in a world of thousands of blockchains like how many different general purpose rollups do we really need are these going to be across two or three trust environments is the multi-chain future really going to play out so I can never just ask one question at a time here yeah like from an engineering perspective when I um kind of started this last year what I envisioned happening in a like two years and it's basically already kind of materializing today was a world where you can like go on the docks and you can click and roll up as a service provider and you can deploy a roll-up chain in two seconds where in fact you have a world where deploying a roll-up chain for your application is more is easier and more convenient than deploying a small contract and so there is a potential world where there's millions of interconnected chains that share security similar to how today there's many millions of web applications running like we've seen a very similar evolution in web 2 you know 10 15 10 15 years ago if you wanted to create a new website a web application you wouldn't you would use like an existing hosted service provider like you might use I don't know like um Squarespace or a Blogspot or WordPress but that's very limiting so now today if you're application developer and you wanted to deploy a new web application it's like easier and more convenient to Simply deploy a virtual machine on the cloud on AWS or digital ocean then using a shared hosting provider and I think you'll see a very similar evolution in web 3 where share the web hosting providers are like not analogous to shed smart contract platforms and in the future it might not seem obvious now but like in the future the obvious ways to develop new applications will not be to deploy your deploy a smart contract on a shared smart contract with environment that everyone shares um but to deploy a new all-up chain similar to how on web 2 you deploy a new virtual machine for applications so uh you know at the risk of asking potentially a spicy question here uh you know I noticed that so in this this future sort of envisioned state of yours where we might have millions of Roll-Ups you know I can't help but notice many of the Roll-Ups today you know have these multi-billion dollar valuations you know a couple million Roll-Ups at a couple billion dollars each starting to talk about some real numbers so I mean how do you kind of see that shaking out is there a consolidation in the future here how many of these general purpose ones do we really need yeah we don't need like this millions of Roll-Ups won't have multi-billion dollar valuations like they were they won't all be like massive roll-ups they will be like they might all be small small applications just like how there's different websites that offer small services or small applications you might imagine like um Dows having their roll-up chains like similar to you know how organizations have their own Discord servers they don't share the same Discord server as everyone else they have their own namespace you can imagine that Dallas might have uh or diff or projects might have their own rollup chains that interoperate with other roll-up chains understood um what about I mean one uh sort of theme and maybe I'm reading a little bit too much into this and other folks think differently is that I think you know five years into Bridges we can all admit that it hasn't been as smooth as we thought it might have been at one point uh and some of especially like intense based architecture sort of points this idea maybe we're not going to find out Bridges as easily as we thought and they'll kind of be a couple of different sort of trust zones or economic sort of zones I mean how do you kind of see the you know it's very easy for me to imagine a world where there's an you know apps that pick out hey I'd like this particular you know evm or execution environment in Celestia for da or whatever but how much do you actually see assets and data being interoperable between these different base chains yeah I mean I think interoperability is you know absolutely critical and that's kind of like the reason why we're building Celestia as a shared security layer that can be used by roll ups to interoperate um without fragmenting their security and that's why we want to we want to um in the cosmos ecosystem we want to replace these committee based IBC Bridges um which are which have a heterogeneous security model that's fragment security with a more homogeneous technical model where roll up share security and use fraud and ZK proofs not committees but it is the case that Bridges today are very janky and very not don't have a good user experience but honestly I honestly think that the fundamental problems like there's there's there's practical solutions to all these fundamental problems it's just it's just fundamentally a lot of it is just like an engineering slog that has to be and a lot of missing pieces of infrastructure that just need to get built so like for example if you take the fact that you know Optimus optimistic roll-ups you know have a seven day challenge period to withdraw from the roll up to the L1 or to another chain you know that's that's solvable with um Atomic swaps um you can if you do it if you have a atomic swap to swap to to swap tokens that's instantaneous and that's what projects like codex do for example um and there's problems like you know you have to have multiple fee tokens to bridge across chains that's also so very solvable and that's like skip is is something that is solving those problems um it's just like it's just it's just it's just I think fundamentally it's just that we're very early um like you know it's comparable to using the internet in the 90s like it was a very janky experience you know you couldn't like stream video for example um you have to you know connect you have to manually click connect and then dial and then do a dial-up connection that takes like a minute to run just so I think it's just I think it's just a matter of being early and I think um there's the the challenges will be solved yeah I I tend to agree with that and that's kind of a nice segue into the you know the next line of questioning here and I don't know do we have infrastructure to take questions from Mustafa from the audience if I kind of want to maybe leave like five minutes at the end or so for that but um yeah raise your hand if you have any questions if you interrupt yeah make it uh we can make it a true fire side here um but one one thing that I'd love to get your opinion on Mustafa is how we eventually end up bringing uh more app Builders into the space because I think the thing that we all want to see is especially in this next cycle a couple apps that really take product Market fit and bring millions of people on chain I think that's the goal here and one uh theme that's come up many times is sort of this chicken and egg problem in between apps and infrastructure where we need good infrastructure to build good apps but then the infrastructure also has to serve the apps that exist and it's kind of like which comes first so how do you kind of think about that problem and then maybe we can talk about like how to bring more more Builders into the space yeah I mean it's definitely like a complaint that people bring up that it's a valid observation that there's a lot more infrastructure projects it seems like there's a lot more infrastructure projects right now than actual applications and you know that might seem wrong but I actually think that's kind of fine in in theorem uh because like fundamentally I think the reason why there's not not uh not a lot of web free developers it's just like it's just that a lot of the things I've seen easy to do with rep 3 is actually not possible to do because of various either scalability or execution environment challenges like take like for example like take the fact that like you know people want to build um like the Uber in web3 that's like a very stereotypical classic thing people say oh yeah that's why isn't Uber on web free like theoretically it's possible it's just like all the tools are very janky like it's impossible to deal in an ethereum L1 no one's going to pay 20 for transaction to be there's you need tooling for you need tooling to um like share location data right in a decentralized way that tooling's you know this that tooling is being built you know there's like PDP um to kind of like exchange messages in a decentralized way um yeah I just think it's just a matter of so I think it is actually a good idea that there's a lot of infrastructure projects out there because to make the developer experience less janky and like more practical to build the things that seem obvious in hindsight like you know like uber for web free but haven't been built um yeah yeah completely agree with that sentiment I think maybe one thing I'd also love to frankly just ask you is the um you know the founder and developer of the Celestia ecosystem is like what is the right way to do BD from your perspective and there's a little bit like there's a couple of different approaches you could take kind of like the bottoms up ecosystem approach that you know several blockchain ecosystems have employed successfully and then there's like a little bit more top down in actually asking people to you know incentivizing Builders and apps to come onto the platform like how do you kind of think about building an ecosystem and doing BD within the context of web3 yeah I think it really depends on um what you're building um like you know if you're building something that's fundamentally new and you're it's the only thing like you're creating a new category and you're the only product that provides that then you probably don't need to do as much you know directly um and a community will actually be formal on that but if you're doing something that's a more competitive to things in an existing category then you probably you'll your main differentiator will probably be having a better BD team so I I really think it depends on on the product and and I see like roll up as a service providers doing a lot of BD um to kind of attract roll-up developers on onto on and so on and so forth but really uh so this year um yeah we do have a we do um have a large community of people naturally building us last year but we do have also BDT members uh trying to um kind of like help people and explain the technology but the way I see it is that um we're just trying to create like a distributed community and we're trying to we're trying to bootstrap a modular stack like we're very happy to have competing the Alias on uh come and talk and kind of come to the summit even though we're we're co-organizing it because ultimately modular stack is only incredible if there's actually a free developers have choice in the stack like people are only going to build if there's there's a there's a lot of choice so that they know that they're not locked into a specific ecosystem yeah I understood I think uh you know folks are it's been really inspiring to watch what Celestia has done and what you guys have achieved over a relatively short amount of time and you know I think one of the things that there's uh no shortage of love for in crypto is a little bit of drops of alpha so like what can folks expect from Celestia you know not revealing anything you can't obviously but like what should people be looking out for over the coming months and year or so yeah I mean like next Milestone from here is mainnet uh currently planned in the fall of this year and that's kind of like what what we're kind of like heads down shipping um working on right now we're trying to you know ship mainnet as soon as possible um because there's a lot of like people uh in the ecosystem that we really need a d a layer a scalable D layer and nothing exists right now screen will have eip4844 you know probably going to available and so on and so forth but there's literally like no da layer right now that's actually usable as a kind of a data layer that provides more than like 10 kilobytes of throughput um so it's like that's a thing that we really need to unblock people on and we also have like a lot of um kind of like people joining the ecosystem and making um announcements integrating different parts of the stack uh you know we recently we had um integration with OP stack where we provided a data availability interface with OP stack so people can deploy upstack roll-ups on Celestia using Celestia as a DA and ethereum as a solament layer and I think you'll be seeing a lot more of that and a lot more Integrations like that with other stacks nice I've got my last question here and then we can open it up to to questions from the audience but um you know if you had to uh I'm always interested to hear from from sort of leaders in this space like the two things that you find yourself thinking about the most or maybe it's like a worry when you're falling asleep at night like man I really just want to make sure that we get this done like what are those like maybe two things for you at the current moment um well I guess like from a very low level perspective I am very active on the engineering side of things um you know trying to make performance improvements when necessary and like I try to follow the developments like people using Celestia to see what the what the what the pain the pain points and bottlenecks are uh with our testness that we've done but from a more high level perspective um the one thing that I kind of think about is to what extent in the long term as crypto goes mainstream we do World users kind of care about how decentralized a blockchain is or to what extent a blockchain kind of conforms with the core values of crypto which is decentralization censorship resistance verifiability because fundamentally like from a user perspective like if someone just created a centralized blockchain with like two validators from user experience perspective it's very similar experience so I kind of like I I think about like like one Theory I have is like um the market will naturally just evolve to centralized Solutions if users don't care but so far we haven't seen that to too much of an extent like we haven't seen like a an overly centralized L1 with like a proof of 10 10 valid group of authority that'll be a very low hanging fruit to build that could that could have like a billion DPS because it's not decentralized um so I think about like how could we need like how um communities or blockchains have social modes and users do care users care about using applications that they know or they they believe are actually decentralized and sensitive resistance but I think about like to what extent that will hold true in the future as because like we're still we're still very early like you know crypto hasn't really amazing adoption but I wonder once we do reach mentioned adoption to if our if the ideals of crypto will ever become significantly diluted it's actually um and real I've actually asked myself a similar question I mean I one thing that I've the way I've sort of phrased it to myself internally is do you think there needs to be some sort of Overton window shift right in order for people to adapt like you can't so for instance privacy I feel I feel like this comes up often in privacy discussions I mean in web 2 right I mean the one thing that's been proven after you know 20 some odd years is that users like don't really care that much about their privacy and most the vast vast majority will not take even very basic steps to protect it and how are you going to build privacy related infrastructure for people that simply do not demand or seem to evaluate with their actions almost at all so do we need some kind of Overton window shift from a societal standpoint for some of these Market structures to take place the way that we want or what do you think about that yeah I mean we've seen web 2 evolve in a very similar way like um you know like the early days of the web it was much more decentralized people had their own blogs um they weren't sharing data with big Tech now we have you know people just using Facebook most most of all these using Facebook sharing the data with everyone but in web 2 the interesting like unfortunately like humanity is very reactive and not proactive like before 2011 um most websites were just using HTTP like you would log into Facebook uh like this actually is something I saw like when I was in my hiking days like the thing is Tunisian government was um capturing people's logins to Facebook because Facebook did not have HTTP enabled or enforced on login page but the thing that changed the fundamental thing that changed um made people have a big push and to encryption and encrypted messaging apps and HTTP apps and more privacy was once Northern um leaked um the NSA files in 2011 or 2010. and that was kind of like a big moment where there was like it was like a massive difference before and after like before nothing was encrypted basically like no one gave it cared about https like all the messaging apps were not encrypted after that everything started and you know everything it was basically encrypted by default you know WhatsApp is now encrypted you know everything he uses https um and then you know there's been various scandals that actually made has made web 2 privacy the Forefront of um many people's mind like you know the Cambridge analytic Scandal you know people like Facebook has a huge problem it has a huge perception problem with privacy and ultimately unfortunately I think like it could end up similarly to web3 like right now people don't care about uh Financial privacy but they're they're probably will be all a decentralization to some extent but there probably will be a moment in the future where people learn that actually is very important because there'll be like kind of like a Pearl Harbor of you know Financial transactional privacy um maybe someone is doing something very bad with this all these Unchained transactions you know like outcome analytics is is one of them for example doing de-anonymizing people based on their untrained activity for example yeah I tend to agree with that guys we're in the final minutes here and I want to open it up to the audience see if they have anything they want to ask Mustafa foreign so there's a lot of Da solutions that are going to be live in the next year and two or two which is really exciting what do you think are the known unknowns around having these things live around scaling them like what do you think might potentially break and and the kind of open questions around the design space here yeah I think there's a few open questions I think one of the biggest one is how do we get people to run light nodes because the way that the the only way to securely scale data availability is through having data availability sampling night nodes and the more the more light nodes you have the bigger the block size you can have but historically we kind of over the past decade we've had a model of web 3 where people just interact with decentral wires or PC endpoints which kind of defeats the whole point of web3 anyway because that's like a very web 2 model you might as well just use web2 because you're just interacting with a centralized database and trusting a trusted dead body so I think like we need to think about like ways to get more people to run light nodes and like maybe by having I don't know Mina is doing some great work on this they have a browser version of their light node so you can actually run I mean in your browser so I think that's a good first step and then we need to figure out how to integrate these light nodes into wallets by default so for example instead of metamask connecting to infuria metamask should run an in-browser light node in the background and connect directly to the ethereum based Network I think it's very important like known um unknown that people should think about like how do we incentivize and get more people running wallets with light nodes thanks for the talk let us really enlightening to hear um so I think one difference between the last bear market and this one is the fragmentation of the ecosystem that now we have so many different layer tools going on that historians might call this the L2 Wars that are going on now so I was wondering is someone creating a Dap how do you choose the right L2 to build on and what happens if the L2 you've built on fails you might be able to retrieve account balances but can you retrieve transaction history reputation all of these other aspects yeah that's a good question um I would actually say that yeah there's a lot there's a lot of components in the modular stack there's a lot of l2s but I would actually say um it's actually less fragmented than the previous Market uh bull markets because in the previous bull markets like it was way more fragmented because people were just building alternative layer one networks that what did not collaborate with each other at least with layer twos um they can all call uh coordinate with each other in the same stack and you know like um like part of the month advantages or what we're trying to achieve for the modular stack is that you can replace components in the stack so you know if you deploy something using a specific type of if like if you deploy something on arbitrary roll up and you can swap that out with the optimism roller for example or like you're not locked in to a specific vendor that's like a very important component of the modular stack I think that's more practical when you take into example of roll-up app chains like if you if you want to develop a roll-up app chain let's say I don't know using the op stack you don't and um you choose Celestia as a da if Celestia fails but you can replace the that the Celestia with a different day layer very easily because there's a common da interface so I honest I wouldn't necessarily say fragmentation I would say that there's more freedom of choice and sometimes that that's not necessarily always a good thing sometimes there's too much choice and that's very difficult for developers to compare the trade dots but that's also an open problem which is how do we um get developers to understand the trade-offs between these different components and execution environments in the stack thank you um great talk Mustafa and Mike thank you so much for the for the all the details I love that you touch the Business Development Area and I think it's great that you guys have a dedicated team inside the inside the protocol uh I would say that probably many of the projects at least at the start may not have this so I was wondering what are some learnings that you see in terms of like what works what doesn't work in terms of Business Development or like maybe some advices that you would give to your builders um and maybe like what's your strategy so you were saying like that would depend on of the product itself but like in particular case for Celestia as you are like closer and closer to the main net like how would you like what are would be some strategies for growing the ecosystem that you you would want to explore yeah I mean I think like our kind of like overall long-term goal is to bootstrap a kind of like self-serving community like um I think um I like ideally like we're trying to create a new category so um I think for any protocol the success of any protocol should not depend on any kind of centralized BD team otherwise it's not really essential it's not really the essential you know and so that's why we've kind of I try to create a community that a modular community and that can kind of like um have a kind of like a mass or a network effect and so like if you think about like other pieces of infrastructure with network effects like let's take AWS for example AWS has a massive community and of Developers and the like there's like you don't need you don't need a centralized BD team of WS because it has a network effect where every loss of lots of apis integrate lws so and so like it's very easy to use AWS because it has wider Community Support and so for Celestia and other dealers there's a very similar process there where we want to make sure that Celestia as a da is supported by as many da interfaces and roll-up Frameworks as possible you know we started with the op stack integration building we want to have the community develop more Integrations so that Celestia you know will be like the default the a option for these you know roll-up stacks and eventually you have like a cell a community that kind of bootstraps yourself and you don't necessarily need like a centralized BD team to kind of push it Forward just like you know ethereum doesn't have a centralized BDT team for example guys I think unfortunately that is all the time that we have guys everyone give it up for Mustafa what first of all excellent event thank you for the chat this was really great 