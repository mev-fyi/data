welcome to the show tell me your name and oh sorry tell me your name I'm Brian Redford nice to meet you Brian and what's your involvement with risk zero I'm a co-founder and the CEO if you were to give an elevator pitch of what that is give it to me yeah number zero is a computational platform that brings the power of ZK to developers across the modular ecosystem and uh really any on-chain and off chain uh ecosystem the current strong focus on enabling applications to prove uh very complex computations that uh were previously infusible um okay and how were they previously infeasible uh just in terms of overall gas for instance uh you can take an existing evm run this on top of uh versus zero or build a very complex order book or a set of like voting Primitives for instance that take into account any number of other signals and produce an application that actually verifies all of this stuff on chains you can think about how like dydx or some of these other order books are largely off Chain by using zero zkvm it allows you to actually do those computations sort of alongside the chain and then prove them very easily on Jay does it introduce any centralized components um currently uh yes however will be progressively decentralizing over time so right now because especially because of ZK you know there's not so much there's not as much centralization risk but clearly we really care about I'm ensuring there's a wide pool of people being able to prove these computations and then obviously sort of permissionless and um unbreakable nature of decentralizations gotta be is critically important for any of these kind of yeah of course yeah sure the single point of failure then in the current state what is that yeah I would say uh I guess you know the sort of centralized server on top of Amazon but it's pretty resilient so AWS like a lot of us if AWS goes down then yeah then then much of the network then yeah Bonsai at a service that we're launching on top of a zero um well nice won't be working yeah for that period of time um however the original the position VM itself is completely open source and it doesn't is actually independent of any particular bit of infrastructure so people can use the the KVM anywhere already just not the sort of service that packages it up is there any risk of the whoever runs the server lying about what it's proving no that's the I mean that's the beauty of ZK is it's actually as long as your ZK system is implemented correctly um and the security level is high enough then it's actually as far as we know impossible yeah okay all right so the zkvm can we talk about the architecture a little and unpack that yeah so um it depends on how familiar the audiences are with ZK in general Cosmo's audience pretty deeply technical CK is not going to be a mystery to them people are probably most familiar with ZK EVMS and people are familiar with what an evm is the evm has a very long set of instructions and it was primarily designed you know to do smart contract style computation and over time it's sort of accreted more and more of these pre-compiled gadgets um so the our team sort of two years ago when we started this um we had built this high performance CK proving system and when we took a setback and looked at what we thought was going to be most useful in general it was to not build a ZK evm but to build a ZK VM that actually implements the same kind of computer architecture you would see inside a computer so the main reason to do this is to allow normal applications to run in a ZK context including even the evm itself as I mentioned earlier so this this approach effectively lets you run programs right or even solidity in the ZK context without having to sort of rewrite everything or spend a ton of energy building a very specific sort of zkavia okay is the thought process around that not to constrain the possible set of developers to solidity only yeah it's uh it's to allow people to leverage um you know the tons of work that's already been done in the rest of the sort of computing landscape like we just published an example of ZK sentiment analysis that you can just import a library uh and pass a paragraph into it and you can guess that I'm an analysis out of it back which would be useful in a potentially in a social network setting where you might want to prove that your content a certain tone or certain whatever before you actually post it okay got it so are those the set of use cases that you had in mind when building this um the the main set of use cases we had in mind when we when we built a company was really just scaling decentralized Computing in general um so we had uh we had sort of explored building an ALT L1 utilizing ZK and the consensus player and I still think there's like some really interesting possibilities there but um you know especially with the evolution of the sort of modular narrative um you know I don't know that traditional kind of very vertical l1s make much sense anymore so right we're making as much sense the way they used to be constructed right there's also the intro if you introduce novel cryptography then it potentially breaks compatibility and composability with a lot of the other applications at the L1 level so then how does risk zero introduce azk layer that doesn't break composability yeah well I think one of the most interesting things about ZK is that it's actually highly amenable to increasing composability as we've seen with all the kind of ZK like client work but people like succinct have done um and people are doing it across the industry because you've improved does it increase composability but trade-off decentralization at all um I think the trade not not fundamentally no right sure um but uh yeah because you can run the sort of cryptographic system of another chain inside like off chain and the ZK context and then prove that in a way that's easily verifiable on the chain that you're interested in improving this thing to it actually yeah you don't necessarily need to introduce New cryptographic Primitives depending on the chain for instance we use Starks but we after we produce this like Mega Stark that maybe represents an entire youth block we can then sort of produce a graph 16 snark which can easily be verified on ethereum so there are lots of ways to sort of take a proof and I think make it more portable to particular ecosystems okay so how does this tie back into the modular architecture so the service we're launching on top of on top of the zkvm is really intended to be a modular execution framework that lets people use ZK to uh you know process any kind of computation they want on that state and possibly sort of include off-chain state or historical data in that computation and then use that as part of any application so rather than having the sort of Monolithic world where you have uh you know the execution engine has a very strong part of a particular stack this lets people leverage a bunch of additional computation from mobile apps from L1 from l2s Etc okay so has this effectively decoupled the Roll Up application from the what da layer or it's more from the execution layer like you could take into its extreme you would um so you can imagine the sort of order book case um you you place your order on chain and then the da layer actually they make sure that the order is valid um places it on the da layer and then after you know some period of time passes or after every order is placed logic actually runs off chain that does most of the application logic so in a sense it decouples application logic from the chain and that depends on whether you actually want that application logic to be you know on chain visible in your smart contract and you're willing to pay the gas associated with that logic yeah what are the trust assumptions involved in this if there's some turn a lot not a lot like well if if this is if the computation is happening off chain and how does the da layer understand whoever submitting the data is doing it yeah I don't know the da layer would necessarily understand but um you know any the execution layer would be able to actually run a program that verifies the proof just like you have programs ethereum to verify Graphics team groups um you can verify any kind of uh start or anything else and usually in that proof it would contain okay here's the input state or at least a hash of the input State and um there's a pointer to the program that was run and here's the actual results so in the case of an order book it would be the set of orders that are settled and then the logic on chain would just verify that and then effectively Advance the state to the next state so turn the blockchains into more of like simple State machines um yeah okay cool does it actually use Celestia in any way um is it it certainly you can we haven't had any applications built on it but that's actually going to be part of this um sort of voting example that we've been voting out okay so what part of the modular stack does risk zero sit yeah a couple different ones actually so there are some rollout Frameworks that actually use with zero to prove their state transitions kind of behind the scene like uh sovereigners are one of the first adapters for that and then sorry let me interrupt you for a second is the idea to circumvent the need for like clients and and use ZK to that's one thing you can build with it so I would say like we will also be building an e-flight client and sort of an ethereum co-processing module on co-processing modules for um for a bunch of other chains that said you can also use it in a pure infrastructural capacity where it's effectively transparent into the user so we have a couple of projects that could flip some and hence off doing this when you say you have a couple of different projects like eclipse what do you mean by that um so at eclipse and Sovereign both are these sort of rollouts and we've talked to a role hit a bunch although we haven't moved any sort of formally with them and then there are a couple other projects and like incubation stage who are effectively trying to build new ways to write programs and use ZK to make these more composable worlds layer of sovereign but um they have an SDK you program your app in this SDK and then any app made in the sort of sovereign world has uh like automatic uh composability with other apps in that world but they're still effectively completely otherwise completely silent so you don't have any kind of like cross at gas concerns and they use uh us and and other proving engines in the future in order to actually make the sort of seamless composability happen behind the scenes Sovereign sounds similar to vistara this is another one that's the star actually uses uh they actually support creating Sovereign apps from the star okay and how does the developer compose all of these different tools to build a sovereign roll-up at the end of the day I mean I I think I think the star is probably on the right track with uh you know trying to build some tooling to help people figure this out so we're currently more concerned on the about the sort of Base infrastructure level rather than patching it all up in a way that's easy for customers to use it I think sovereign's a great way to for customers to navigate that but I also think that developers are going to have a lot of options in terms of you know construction case to figure out how to piece together various aspects of the modular ecosystem right great so where do you think this whole thing is headed I mean you clearly have drunk The Sovereign role of Kool-Aid the modular architecture Kool-Aid and as soon as it clicked for me really quickly coming from the cosmos ecosystem although I think for most people who are going to be listening to this podcast maybe even a couple years in it's not going to be completely obvious yeah um I mean to me just coming from you know 20 years of computer science it just kind of vertical transfer right extensibility and scalability it makes sense yeah and and just also lock in and creativity developers don't really like having single vertical silos where they're told okay it's very no those things are very useful for making bleeding edge platforms and and increasing productivity but at the end of the day you know developers want to have the freedom to create I think modular architectures do that not only that but practically that kind of architecture doesn't scale to the billions of users of online users yeah generally not I mean I think there are some limited example like in The Trusted World there are examples of people building you know highly vertically siled non-modular through the scale well but yes in a decentralized context almost certainly not yeah all right as people say you know if if you could do it unequally would have been done by there right so was the is ZK VM a completely original implementation from risk zero or was it forked from our implementations yeah it was completely done by us are there other projects that are that you'd imagine would be forking it in the future um you know I wouldn't yes I think some people might have forked it the way it was sort of open sourced we'd um it makes it somewhat difficult to Fork I guess because the circuit descriptions are just a giant file it's kind of hard to decode um but uh realistically at this point you know they're like what 20 25 proof systems and development so it's a really active area so people might work at the version that we're working on now the sort of version three will be far more useful for for people to modify and do whatever they want with I'm assuming that in the short term the zkevn is going to have market dominance so yeah I would imagine that the ZK VM if it were to try to be compatible with that ecosystem for growth purposes you know and how is it not or is it so uh yeah it is uh entirely compatible at this point in the sense that um you can run the evm on top of the zkvm so all of these EVMS uh obviously lost them written and rust you can bio rust or um well not go right now but rust in general uh to risk five you can run risk five on top of our zkvm and then prove something so there's several there's like this proof of uh reserves examples people have made there's proven exploit examples people have made and these are basically the the proof of exploit example people can provide a solidity program and you can actually prove that you can drain a contract without showing how like I you know I extracted 500 000 from this contract but I'm not going to show you how I'm just going to show you proof that that was possible so that's like one example of compatibility there so we will be building out this effectively for each client that looks a lot like the ZK uh evm yeah but it'll be based on existing ABM code like we won't have written any of the evm or so okay given that you have this vision of how the blockchain space is going to evolve in the future like how do you think it is going to evolve but is it going to be like is the evm or ZK evm going to uh be Lindy still you know or is the evm that gets the ethereum layer one going to maintain its status as the de facto settlement layer where do you think it's headed I think the the settlement layer dominance is going to persist for a while um personally although we'll see what happens to perpetuity I mean I doubt it okay but it's hard to say um just because the space is so nation and um you know the interest level and broader Society tends to tends to go back and forth it's hard it's hard to say like our cdbc is going to adopt ethereum as there's that on a layer um are they going to have anything they're adopting xrp okay there you go so yeah so I I don't know it's hard to say uh pretty bullish uh overall on the the long-term prospects of the ecosystem especially with account abstraction starting to come into play and like just the set of user experience improvements that are okay coming online yeah all right given that we're at the modular Summit and this is a cosmos podcast um how does Rick's risk zero potentially tie back to causal status yeah so we've actually had like fairly limited support for Cosmos for um nine months ago or something Jake cartno added like made a little Dao Dao ZK like voting example in Juno um so uh using risk zero yeah so because it caused the cosmos through cosmosum has the ability to do a lot more than the evm per se you know for the evening we have to go to this process of building up the snark converting it to or start converting it to a snark and then putting it on a chain on Cosmos chains you could just put the Stark directly on the chain and verify it and it's incredibly cheap so um yeah so it's already kind of uh supported the cosmos ecosystem for a long time from a POC perspective yeah from a POC perspective so um you know as soon as we're sort of wrapped up the ethereum integration like obviously kind of our next Target is to do a more first class integration with Cosmos chains so oh that's exciting so it's not just POC yeah right was that actually on your roadmap or is that something that you spun up just now no it was actually it was actually more on a roadmap than ethereum I think before really before FTX collapsed and how did fgx change things uh it seems like it just shifted the um the dominance away from of some sort of all Bill web narratives and everybody kind of piled on to it that and ZK EVMS being complete I think people and the merge there's like ethereum kept doing things right other ecosystems kind of stalled out in a lot of ways it seemed like and um why was how was the merge right and how did other moves by other ecosystem stall out um the so the merge is probably one of the most complex sort of examples of you know replacing the engine on a plane while it's in a fight so and people I already I remember um as someone who's fairly new to the space I remember insane pessimism around the murders like is it ever actually going to happen and you know proof of stake is that ever going to work for ethereum and so it seemed like there was a lot of doubt around the maybe future viability of the ethereum ecosystem until the merge was complete and after that it seemed like a lot of people um sort of went back in that direction like how did how did fgx's collapse lend itself to bad optics for all L1 ecosystems um yeah I mean maybe the Thai is not so strong there that was kind of my perception afterwards that Solana kind of like disappeared as a thing okay all right for Solana yeah okay but but why why would that essentially been really impacted Cosmos at all but I'm a little after um so okay no strong opinions there other than other than it was a perception of of yeah and seeing also aptos's launch kind of go nowhere um after that could have been due to the FTX collapse and the kind of lack of external money to kind of pump early ecosystems um but certain new things we start to take off again so right okay got it are there any Milestones that you're looking forward to that you could share about what risk zero is planning yeah absolutely so um sometime this fall we're going to be officially at version 10 which in our mind is like D5 already so currently um you know being an earlier project and a cryptography project and something that lets you you know roll up a ton of pvl and transactions into a single you know Block it's pretty critically important that you get security right on that front so um in addition to stabilizing the apis and um doing a general release of the multi-service um yeah we'll actually have the system at a solid 1.0 that anybody can use to build applications on maintenance okay do the cost savings compare to what's proposed via dank sharding um I think uh that's really application specific I think Bank sharding makes uh lowers the cost effectively for um for the kind of things we would do in ethereum so uh we haven't I don't think we've done a full re-analysis of the sort of gas Savings in all these cases but um yeah so so is D5 they use the primary use case that you had in mind when when building this no we've seen a lot of traction and interest in the defy side outside of the sort of um proving other state machines so okay so I mean you did mention order books but whatever what else were you what had did you have in mind uh initially I mean terrific any application especially gaming and social those are the things that are most interesting to me and I think most relevant but um the more we've gone into it the more I'm sort of convinced over the Long Haul there's going to be a lot of Enterprise sort of automation business automation Enterprise always seems to come back and forth you know it comes it comes back and it's full swing and then it goes back out and then it comes back yeah security tokens yeah I feel like the combination of zkml account abstraction and um getting ZK to a point where you can actually like reconcile Swift Bank transfers very easily and you know as well as the likely um increase in I guess regulation and maybe like maybe the space and Regulators are going to come to some kind of like the taunt and agree to some amount of inspection and you could actually use ZK to make sure you can preserve privacy while still giving Regulators some ability to um to interact with what's going on I'm honestly pessimistic or realistic about the regulation space yeah fair enough I think yeah the more clear the regulatory framework becomes the more it seems like they are definitely going to apply the web to traditional framework to web3 or a decentralized tech and it still fails to recognize the decentralized nature of a lot of these things so it still does not answer the questions that we have and at that point we may need to create a wholly separate regulatory like a self-regulatory body for our own space yeah I've actually um so talking to alluvial I don't think that they're doing this exactly but I'm talking to some people here who are trying to effectively build up reputation scores and these kinds of things so people can build some amount of monitoring in and I think I do think because the technology necessary to kind of self-regulate is quite Advanced I don't know that The Regulators make up on that thanks for coming on the show of course thanks 