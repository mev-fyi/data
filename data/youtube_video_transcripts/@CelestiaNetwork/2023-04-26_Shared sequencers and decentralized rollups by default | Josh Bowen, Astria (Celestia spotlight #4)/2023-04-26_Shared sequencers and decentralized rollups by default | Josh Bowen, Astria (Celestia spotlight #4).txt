we want to see a million Roll-Ups and maybe in five years yeah we do see like a million Roll-Ups I really want to see this kind of you know to use like a like an overused term like a Cambrian explosion of like innovation in these State machines driven by this kind of infrastructure being provided for them as a service but in a decentralized way hey all my fellow modulars out there welcome to another episode of Celestia spotlights where we hear from the people at the Forefront of the modular movement I'm Nick white CEO of Celestia labs and today my guest is Josh Bowen who is building Austria the shared sequencer Network and as I've said many times I think that shared sequencing is the next most important layer of the modular stack to be built after the da layer itself and I also think that if it's built correctly and designed correctly a shared sequencer Network could dramatically lower the overhead cost of launching your own roll up and provide a bunch of other benefits which we'll get into I also want to just do a quick shout out to Josh himself who actually started out on the Celestia Labs team a little while ago before spinning out to launch Austria and we're very proud of him and what he's achieved so far so welcome Josh thanks Nick really happy to be here so uh let's just jump right in and I know you prepared some slides to explain what Astra is and I think everyone's going to be really curious to learn more about the product how it works so let's go into that yeah great um so we call after the shared sequencer Network and we'll kind of Dive Right into some of the more technical details kind of during this presentation talk here um so kind of the the core thing we think that is important that after is providing is is for Roll-Ups to be decentralized by default and when we mean you know default the really key thing is we see a lot of Roll-Ups you know today that are centralized but have you know obviously like road maps and like plans for how they're going to decentralize themselves but we can obviously see as part of these plans that it's like a relatively significant effort for the Roll-Ups to move from being you know the centralized sequencer run by like the labs team um to something that is fully decentralized through you know a governance mechanism and you know multi-fig on on chain or whatever like this um and so we think kind of with this future of you know many thousands of Roll-Ups um that we think is kind of necessary to scale blockchain sufficiently um we think it's important that new Roll-Ups that stand up are decentralized by default rather than you know going through the same kind of iterative process of standing up in a centralized Manner and then over time decentralizing because we can see kind of the the level of work it is for even the larger kind of established Roll-Ups that have been live for you know better than part of a year now um or or approaching two years for like arbitrum and optimism um so kind of just going into you know what kind of Austria is and kind of how we see it in this space so we call you know um Astria the shared sequencer network but there's an important you know kind of like untied component there that's like a decentralized network here um and so you know Astera is this shared and decentralized network and what we mean by that is you know shared here means that multiple Roll-Ups can use the singular kind of um Network and then when we say decentralized it's really this concept of kind of leader rotation or leader selection similar to any kind of existing layer one blockchain wherein there isn't a single actor that is responsible for proposing every single block um across all time we think it's important for you know censorship resistance and liveness guarantees to have a decentralized set of block proposers um and and the way you accomplish this is a very similar structure to what you do with you know existing layer one networks that have this kind of leader rotation mechanism um going kind of more into detail I guess on what it is to be you know when we say like a sequencer like what is a sequencer here um we really think it's useful to kind of break down you know the flow of transactions through uh blockchain or like a roll-up you know more generally um into the components that actually happen right so if you're a user of you know roll-up or even you know now one when you create a transaction you're going to submit it into what's called you know mempool or a transaction pool right and this mempool is kind of peer-to-peer network of nodes that are all kind of sharing a view of these transactions but the transactions are unordered relative to each other you know they're all just kind of fitting in this pool and then there's this phase where you actually order the transactions and this is what we consider um a block right you have this block and fundamentally the distinction going from a mempool to a block is a step of ordering the transactions relative to each other um from this pool of all available transactions and then there's the third phase um that right now is kind of bundled into the ordering steps but that's execution and and the execution is what actually happens when you apply um a state transition function over this you know existing ordered blocks um and there is you know a state machine you know like the ethereum virtual machine is defined to buy um being able to take a prior you know state of the database um take an ordered block as an input apply that state transition function and you generate a new state database um like a new state in time right and and a state route alongside that and that's actually you know that State Route is what is kind of the key component of the header that is shared to like like client whether the wallets or Bridges um so I guess uh going kind of forward again into kind of like this is you know the kind of core diagram and comparison we use it kind of a high level here um that we shared in like our blog post um you can see the comparison on the left where we have these independent and centralized sequencers this is kind of the standard for Rolex today um users will send their transactions to the sequencer for a given roll-up that Rolex is responsible for doing both the kind of production of the block or The Ordering of that block the and the execution of it and at this phase they give this user this kind of um soft commitment but it is fundamentally like a trusted commitment right you're just the user getting this kind of response from you know optimism or arbitrum is assuming that the sequencer um that's like a single entity is being like truthful here um and then the sequencer they're also responsible for you know bundling or batching or whatever terminology you want to use and submitting the contents of this block to a data availability layer you know whether that's you know some thing like Celestia um or you know with existing Roll-Ups using um you know ethereum L1 kind of call data adds their data availability layer um we're obviously paper overing some details of kind of like you know execution and like the specific you know fraud proofer zero knowledge proof mechanisms but we're trying to look at kind of a high level flow of data here um what we see is like a like a better kind of system using a decentralized and shared sequencer here is that users submit their transactions to um the shared sequencer and the shared sequencer is responsible for performing The Ordering of blocks um for multiple Roll-Ups at a given time um and then you have the shared sequencer um again kind of providing this soft commitment to to end users and saying hey here is um you know my ordering of the blocks um and and this is I guess it's given to the Roll-Ups that invest the users but you can also have this shared sequencer um be responsible for writing all the data to the data availability layer so you have the singular batch that it is composed of transactions that have a kind of defined ordering for multiple Roll-Ups and you write that as kind of one you know batch to the data availability layer um and we consider that data availability layer giving what we consider like a hard or like a firm commitment right um I think in optimism terminology I think this is considered um safe or final I'm not sure exactly which terminology is but there's a phase where you go from this statement of like the the sequencer is giving you a guarantee over the ordering to the data availability layer has accepted and kind of produced a block on top of that ordering has given you its own kind of commitment um over that and we fundamentally see this like a more optimal system and we can go in more depth here um into why we think this is like truly like a like a better kind of structured system here um I think the key thing and this is going to be um kind of in the weeds here to kind of move on here right is getting in kind of like Mev so so a lot of the kind of what we presented on that last slide is kind of intentionally a bit high level here um we're not covering the details of exactly what is happening um and when we dive into this really we get into um you know what is called like the Mev supply chain so you know this diagram here was taken from the post from I think last May um by the flashbots team um and this kind of demonstrates you know when you as a user are creating a transaction what is the flow of this transaction through this whole system right and so you know all the way on the left we have the user and they're going to kind of sign this transaction fundamentally the transaction is expressing some kind of intent um and again we're not going to get into the weeds of like intent-based programming and various kind of ways around that but you know what you're saying is you know in say a peer-to-peer sense you're saying I want to send you know money from you know this individual to like this individual right and I am allowed to kind of um approve that transaction by way of having you know the the private key to to sign those funds um more commonly this might be something like using um you know even a swap contract cracked on chain and saying I want to swap you know token a for token B um and then the wallet is kind of responsible I guess for taking the users um you know I guess like intention like an abstract sense right and creating this transaction doing the signing of that process and then this transaction is sent you know what's not going to be stated here because it's a complicated to structure these if this transaction is going into a mempool um whether that is a private mempool or a public mempool so what we saw on on the previous um slides that there's this phase of going from a mempool to an ordered block and there's actually a couple of steps in between there um when we get an Integrity of what we see is this kind of you know proposer Builder separation order flow um and when this transaction goes in the mempool um that is where it becomes accessible to Searchers and Searchers are responsible for looking at transaction in the mempool and essentially extracting Mev or or finding you know what they're searching for right if these Mev opportunities um and that Mev opportunity is kind of where um The Ordering of a you know transactions relative to each other and this could be literally you know one transaction Rel to another you know three transactions um this is where you get things like front running you get back running you get sandwiches um these Searchers are you know looking for context in these transactions that can be valuable um and therefore they're trying to extract that value um so this transaction at this phase is going into a mempool the Searcher will then create what is called a bundle and a bundle is you know just a set of of transactions but specifically with metadata applied to the transaction within the bundle are ordered relative to each other and then there's another phase and that is the building phase and what this Builder does the Builder is responsible for receiving um like a large quantity of these bundles and then saying okay based on the bundles I have what is the optimal block to build and then the Builder is then responsible for kind of sending this block to a to a validator or in kind of the monitor this would be considered a proposer and we prefer the terminology proposer because specifically we're not doing validation but the kind of core thing kind of throughout this whole flow is that all of this is relative to ordering of the transactions you know again this block here is just like an ordered set of transactions um and I I think it might be kind of you know two in the weeks to go into kind of like all the economic reasoning why we have this kind of separation of um you know actors in the system that do this phase but we we think the key thing here is that there is fundamentally in this kind of world public the steady state right like if you have a system that is running for a long period of time has user demand in it you see um multiple actors in the system that are responsible for doing a lot of action you know currently like off chain right um where the Searchers find these MAV opportunities um and the builders construct the blocks and the the validators or the proposers fundamentally what they're trending towards is being this very intentionally naive actor wherein they are given this right just by the structural elements of how leader-based blockchains um work and produce blocks that they are allowed to kind of pick what is the next um valid Block in the chain um obviously within the bound of the state transition function of that chain um and what they actually are incentivized to do is to sell that right to the highest bidder because it's fundamentally A specialized activity to construct these these optimal blocks this building step is actually um relatively like high demand from like a like a computational perspective um so this is what we see as Mev supply chain and we'll go into kind of how we see um the Mev supply chain applying to existing rollups and then how we see it kind of applying to a shared sequencer Network here so we go into this is our you know again relatively simplified view of what is an existing Rolex um kind of Mev supply chain state right you have this user on the left they're going to talk to an RPC node um whether this is you know the uh right now you know I think uh inferior you know Alchemy et cetera you know a running node for you know things like Optimum and arbitrum you could also you know submit directly to like optimism and arbitrim here but they're going to check their transaction this is essentially you know where the wallet phase would be it's going from user to intent to transaction check that transaction into the RPC and this RPC isn't going to send what is what is an Eastland term like a pending transaction um and that's going to go into the Roll-Ups men pool here um and that is where Searchers are going to pull from the roll-up men pool they're going to create these bundles they're going to submit those bundles to the builders the Builder is going to create blocks and those blocks are going to go to the proposer for the roll-up that proposal roll-up is going to do two things it's going to give a soft commitment when it picks a block it's going to give a soft commitment of that block back to the roll-up RPC um and you know again these could be you know strictly the same actors but it's going to get back to that user's RPC so that user can get this soft commitment here um it's also going to submit a batch to the data availability layer when that batch is kind of accepted you know the uh roll-up will get this firm commitment um from the data availability layer so this is how we see kind of the existing state of roll up um like Med Supply Chain um and really you know it's Med Supply Chain but this is overall what we did just like transactional supply chain this is a flow of you know it's order flow um if we kind of you know go into how we see like a shared sequencer fundamentally the kind of structure here looks relatively similar um where again we see a user um and this is where we're kind of going into more details from our kind of higher level diagram before the user is actually still doing this um you know we're calling the check transaction phase right this is essentially like a like a signature check um on the the actual kind of transaction they're submitting to a given roll-up and that's happening at the roll-up RPC node but then the roll up um kind of instead of in the previous slide where it would submitted to the roll up specific mempool it is sending it to the shared sequence there's mempool um and so this is again where the pending transactions happen but a lot of the flow from here is actually relatively similar and that this single roll-up use case you still have a role of RPC give the pending transaction to a member pool um that mempool is going to be looked at by Searchers those Searchers will create bundles those bundles will be passed to a builder or a set of Builders those Builders will then create blocks and they will bid these blocks to the proposer you know kind of the key distinction here right is if we look at the Shared sequencer you know we've drawn it as a way to show there are multiple boxes here actually this shared sequence they're right again is part of like a decentralized network here so this isn't um a single proposer for every block there is a rotation here a leader rotation and different proposers get different flocks and they get to propose that um but fundamentally they're still accepting blocks and those blocks are still going to be kind of bid for and then a soft commitment is passed to the roll-up and a batch is sent to the data availability layer and you still get this firm commitment um so if we go and compare these kind of you know next to each other right we can see that really structurally the system isn't all that different um when we have you know one roll up here right um the flow is still you know kind of left to right similar you know we're really swapping out this roll-up mempool here um for the shared sequence remember pool and this roll-up proposer for the shared sequencer proposer but now the rest of the flow is is actually very similar um and so there's kind of a benefit here even in the single sequencer case and and that is that you know uh Austria as kind of a project focusing on this shared sequencing component um and specifically providing that decentralization as a service to these Roll-Ups which utilize the shared sequencer we're just kind of incentivized in like our product Vision to you know make this kind of you know shared sequencing component decentralized from like day one you know we don't intend to kind of have this iterative launch where we have oh here's our Central live you know you know block proposer here um that we're going decentralized from like the day we go to like a public test net from the day we go to any kind of like mainnet launch um and so we think that's you know an important part of this um but really if it gets more interesting when you look at having multiple Roll-Ups here right so if we go to the kind of um single centralized sequencer case and we want to have two Roll-Ups you know this is really what we're seeing today right we essentially duplicate the entire supply chain for both Roll-Ups whereas if I'm a user and I'm submitting a transaction to optimism here it flows through this kind of optimism specific stack whereas if I'm submitting to um you know arbitrary or something this is going to submit through the arbitrum specific stack and what we end up seeing here is that for every roll up we add we have a lot of duplicative work um you know each Roll Up is kind of standing up everything um that another roll-up is and they're not sharing resourcing here right you know they're sharing this data availability layer um but they're not sharing you know they've got a proposed their thing and this is why you know if we see optimism you know decentralize their sequence they're prior to arbitrum that doesn't inherently save arbitrine really that much work like they could borrow the design they can maybe share some code but fundamentally they're gonna have to do the work of decentralizing that sequencer again um where we compare this to a multi-road up um you know World using a shared sequencer you know you have this user here right and they can submit their transactions to multiple different you know roll-up rpcs but all of these Roll-Ups are then going to submit their pending transactions to the single shared sequencer mempool right and then this goes through kind of this middle section right is the same right it's shared between all of the Roll-Ups and we think that's kind of the core benefit here right you know the Searchers are feeding out of the same mempool um the Builder they're building you know a single block that goes to the shared sequencers proposer right this proposer again it's decentralized we do think that's a huge benefit here an important thing and then it's writing a single batch to the data availability layer so you can see we can have you know three Roll-Ups here and they are responsible for standing up you know what we're calling like their RPC node or their roll up node here right um but they can share all this resourcing and so you know if we add you know many many more Roll-Ups you know whether it's dozens hundreds or thousands of them um it's still a much smaller amount of work than if we were building up this whole supply chain for every single roll-up we stack on top um and yeah uh that is the end of my slides here um would love if you have kind of points that you think are more useful to kind of dig into um more thoroughly I know that with kind of you know a relatively rapid summary of a lot of stuff and there are still some kind of open bits here um but nickel kind of pass over to you there no I love that um so just to summarize basically what my takeaway is that um you know the shared sequencer Network basically reduces a lot of the Redundant effort for people to run this sort of it's not just the Mev sort of supply chain but but in general the the supply chain of like you know launching and maintaining your own rollup and so um one of the things that pops out to me is that in this model uh who is actually like like say you know if I my role actually has Mev people are incentivized to to run a builder right and to to build the blocks and stuff and and probably even do execution you know and and generate the the state DB and state commitments and so on but in uh in the case where I'm a new roll-up maybe there isn't you know or maybe I just don't have Mev I'm a use case that just doesn't have much Mev who's actually the one doing the execution you know and generating the new state commitments uh even generating fraud proofs and ZK proofs Etc like that's that's the one Gap I guess that I'm seeing this model yeah so if you know when we see this again right it's kind of hard to Define this model and like a you know if we had like a strict like sequence diagram right there is a little bit of like back and forth and it's a little bit hard to see in like a left to right case um but if we just look at like this model and focus on like one roll up here right you know fundamentally um if you're like like an end user in like an existing L1 or like a roll-up right you know if you run your own full node right then you always have you know the strongest you know security guarantees because you are executing the state yourself you are keeping a copy of the state DB you are executing every new block and updating your own local copy of your state DB right and this fundamental I think what's important is this isn't different if you're a running you know one full note or or a roll up full node right fundamentally if I choose to run a full node of optimism right um and I subscribe to all the new blocks provided by you know the optimism block proposer you don't have any Reliance on like a fraud proof or a zero knowledge proof right because you know you executed the block you know that this is actually a valid block or is not a valid block right and this is this um you know one of and kind of like honesty assumption right you know if you are the individual you can always run that node yourself and provide yourself with this one event honesty um so something that I think and probably like the best um kind of like more formally written kind of comparison of this would probably be like arbitrones white paper where they go into the explicit distinction between the ordering of the blocks and the submission of a batch and then what they call I believe the roll up sub protocol um and so there is this extra phase of this state route right where you still have someone who has to generate a state route and that State Route um to kind of give a guarantee of validity to like clients um and so I guess yeah going back to the kind of running your own full node don't need any other outside party to do execution they can accept an ordered block they can execute themselves they have their new state DB they don't need anyone else to provide them with you know this header that says hey here is you know the valid kind of State Route um at this time but if you're running a light client where there's really two primary users of a like client right there are you know end users running wallets whether it's you know metamask or Kepler or whatever right or there are bridges right um and so in the kind of what is assumed to be kind of the standard model of Roll-Ups now right you know what we call an L2 in the ethereum land right fundamentally the L1 you know Bridge is a light client of the roll-up right so this is where this kind of fraud proof mechanism comes in it's fundamentally um you know a layer two and a layer one are two distinct you know networks right what they share is a guarantee of the availability of data um right so at the phase when a batch for a roll-up is submitting to a data availability layer that data availability layer is now aware and has the same kind of you know synchronous guarantee of what data was available at this time and that is you know what we consider kind of trust minimized bridging but going to kind of the state level of this um you have this kind of on-chain bridging contract on the other one I'm gonna stay in like ethereum land because I think it's like more kind of understood on how these roll-up protocols um work with like a bridging fence which I think is one that people focus on a lot there is this assumption that that's kind of bundled into like the robot but fundamentally it's a bridge like any other bridge in that you have a light client that if not the same chain as you know the roll up right you know if we had two Cosmos chains right fundamentally there is a receiving chain and that receiving chain has to be convinced that the sending chain is not lying to it before it takes some action on its side you know whether this is you know minting new transactions or you know whatever kind of like execution it wants to do for you know one of these kind of generic uh maybe not token Bridges but like uh what they call like generic you know kind of like messaging Bridges um and so there is you know in this roll-up case right some party that that we'll call the validator for this case like the validating party that's responsible for submitting a state route and fundamentally attesting to what is a valid state route to a receiving side of the bridge right so um again arbitrary actually flushes this out quite well and that they have a set of validators that are currently white listed right even either actors that are responsible for submitting um new state routes to the on-chain contract on the receiving bridge in this case it's on the L1 um this is again similar to how you would see like IBC where if I have um you know a committee in IBC land right that is you know doing you know this kind of like signature aggregation right and it is sending this message to a receiving chain fundamentally what that sending chain is doing is a testing to a given State Route and then sending it to the receiving change so um that's what we see this in in our model is this roll-up because the key thing is this sequencer right um fundamentally he's only doing the ordering it's not doing the execution of the blocks um and so you do still need the what we'll call like a validating node to actually do bridging but we think it's important to note that that is not strictly kind of like a necessary component of like being a roll-up right and in Celestial terminology we have this concept of sovereign Roll-Ups and Sovereign ropes do not have these enshrined Bridges with any given settlement layer right they Define their own you know Destiny their own definition of canonicity of the state of the roller um and we kind of fundamentally view the kind of bridging concept as something that is separate that is better you know you trust minimized bridges are better than non-trust minimized Bridges right um but it's fundamentally separate from the roll-up component so maybe um is there a more specific kind of component of that that's like useful to dig into here I know you mentioned you know the fraud proof or the the ZK proof and this kind of who is the actor doing this um but like at a high level RV is it like there's no reason that should only be done by a single actor um you know I I think um with Kelvin from optimism who had a good talk at each global some number of weeks ago um that really kind of like dove into this and then you know packing the Cormac how to follow on blog post um that kind of summarized um kind of his view on that as well but can go into details on kind of whatever is like useful here well I think to summarize what you're saying is is basically that Austria's function is is very much sort of independent and agnostic to like whatever sort of like model the the roll-up Builder chooses as as far as like ensuring the validity uh or like proving that the state route or like doing the execution essentially and people can either there can either be support it could be like a pessimistic roll up where it's like oh you either run a full node or you know you have no guarantees or it could be like you know hey you have to actually someone's responsible for generating a ZK proof and ZK proving the validity um and so that makes sense to me I think I was I was more commenting on the fact that of of the developer experience which is that let's say I'm a developer right the goal right for all of this and for the modular stack is that to make it turn key so what I want to deploy a roll up you know I just press a button and I don't have to like we want it to be as easy as deploying a smart contract where there's like basically no infrastructure required essentially and I am seeing for example you know an RPC so someone's probably going to be responsible for deploying and maintaining that RPC node I think that's pretty easy like someone could build a service for that but I'm but that RPC node is not the same thing as as someone standing there and saying I'm actually going to be responsible for generating and circulating fraud proof for example so I guess I was I was thinking to myself you know Builders if there's Mev or like people doing as part of the MVP pipeline might already be doing the execution so they might fulfill that role out of the box but if they aren't there then like a roll-up Builder may have to actually say hey I'm going to run that service you know internally or maybe there's some way of incentivizing it that that's really what I was going to end I don't want to go too much further on that but if you have like a quick a quick comment there and then we can move on yeah there's definitely yeah I think you know this kind of roll up RPC right question like like who runs that right like fundamentally you know your roll up is still has its own you know State transition function right like what do you define as like the state machine of your rollup and someone still has to do that execution as you noted right you know the builders are incentivized to do this execution if there is Mev to be extracted then they will do the stimulation over you know one roll-up or many Roll-Ups right to find what is this kind of you know um potentially multi-roll-up you know optimal ordered block that like maximizes kind of their return there but if you're you know a new role upright and haven't kind of signaled or you know kind of gotten support here you know the thing that we think is is you know very nice and kind of clean here that like this degrades or degenerates to kind of the current status quo right where you could say you know okay we are the roll-up development team we're early we're looking to kind of find product Market fit or get adoption or whatever and we're gonna run this you know roll up RPC infrastructure ourselves um and you know you're welcome to do that and then you know users have kind of the same status quo they have now of saying hey I'm gonna go talk to this full node hosted by inferior or Alchemy or the roll-up development team and that's where they're going to kind of make their kind of trust assumptions um the kind of nice part is that you're not bundling your um censorship resistance or liveness guarantees into that block production is fundamentally a distinct element of this system that is done by this existing decentralized Network that you know you get to buy into right that's why we consider like decentralization as a service right thinking about this off-the-shelf construction of a roll-up you want to be able to pick and choose these different kind of components to build up a system right so you say okay I'm gonna go to Celestia and I'm going to use Celestia for my data availability and let me go to Astra I'm going to use that for my block production my shared sequencing and then right now I'm going to choose to stand up my own roll up and I'm going to run my RPC note or I'm going to work with inferior or Alchemy or you know pocket Network or something to stand up in our PC node and then going into bridging we think that will look kind of very similar to how we see um bridging right now where if you're a chain and you want to get kind of fast existing liquidity you're probably going to negotiate with you know layer 0 or axillar or Wormhole or um you know the the hyperlane guys right and you're going to tie into some existing liquidity Network that will give you this kind of interoperability um between these chains but again it's just another component you're able to get off the shelf and you have a lot of optionality into that and you know just one left it's like long term we also think this is what will happen on the on the Zero knowledge proof side right you know we see the work happening with you know the sparkwear guys on their sharp shared prover you know the risk zero guys with their Bonsai Network are you know building up these networks to incentivize the computation right because it's relatively expensive computationally generated zero knowledge proof but again it becomes this existing network of actors that are incentivized to say hey I don't care what goes in the proof I am paid for you know essentially my marginal computation power and knowledge at executing computations of this shape and form you you pass your roll up State machine into that with you know okay I have this state and I have this you know block and I want to execute the state transition function I want you to give me a Stark on the back end of that right um again it's just part of this kind of overall holistic system such that we really drop the effort of deploying a roll-up you know as low as possible similarly to how we think cloud services have allowed it to launch you know a web 2 kind of centralized application to a very low amount of effort you don't need to call a co-location facility and go get a rack or whatever you know you click three buttons you deploy your app it's live we want rollups to have you know the same space and that really will open up you know Innovation and experimentation and kind of you know abundance of um kind of transaction throughput by building on these existing kind of you know decentralized networks that build up this overall modular ecosystem yeah absolutely I uh I'm also really excited by the fact that um you know people like resero and starkware are building these sort of decentralized networks that provide these services that are going to be key components to the modular stack of deploying a roll-up uh and and so like they could do the proving for example and you don't have to because that's that would be a huge lift if I wanted to deploy my own ZK roll up but oh I have to run the prover um you know not only does that probably take a lot of expertise it's also just expensive to set up and and you know maintain and so it makes perfect sense that that becomes um you know a decentralized service that people can can tap into so completely agree there and like the more of these layers and components that turn out that can be built that way the more they should be I think and even I mean things like you know pocket Network which does decentralized RPC service stuff maybe there's something there to you know to help decentralize or automate the the launching of the RPC layer of this of this diagram so I don't know I'm I'm really excited because it feels like it's within reach that we can actually make this a reality and not end in a decentralized way like that's that's the important thing it's really funny because you know I remember back in 2017 there was this buzzword of like blockchains as a service right and and that in that era it was basically like private Chains It's like you know and even I I know you know teams like AWS or even Google Cloud you know started launching these things with oh one click and deploy your own blockchain network or what have you but didn't make any sense because it's all like centralized um but now we're actually getting to a stage where it's possible to to have decentralized blockchains as a service uh and every layer every component is actually run on on a decentralized network so uh it's really really cool um and I think it's within reach so I have a bunch of other questions and and you know I want us to get through them all so hopefully it's hard not to get like way too deep into each of these but like hopefully we can like touch on a bunch of these without like getting too down the rabbit hole um so one of my next questions is basically around the economics of Astra so you mentioned that you know Austria is sort of decentralized sequencing as a service so I'm wondering how does you know if I'm a developer I deploy my role up like how do I pay for this service or do I pay for it or sort of how does it work or maybe Austria's you know the way that it operates and funds itself is just through Mev because it kind of has this you know preferred like spot in in the sequencing in the Mev uh sort of like supply chain where it can just capture value without actually you know asking for people to pay uh so I'm curious how you see this all functioning economically because that's obviously important for the viability of something like this yeah so I think there's really two parts when you think about like you know how like there's like a structural element of like literally like the wiring of like how do I pay for this right or they're the economic element of it and that is you know based on the market structure of actors within the system who is able to demand you know a higher or or price because they have kind of more dominant kind of competitive pressures and one of the things we see and why I think the kind of Mev supply chain is such like an interesting concept especially in this kind of shared sequence or a sense and really especially in the sense of separating this ordering from the execution um we're leaving out one bit here I guess I'll note and that's if there's a relayer and I'm not trying not to go too much in the weeds here but fundamentally the thing that we're seeing in relayers right now is that a relayer is an actor really is a sidecar on top of a validator in like ether one right and this relayer is responsible for accepting a large amount of trash traffic it's really like a high bandwidth component and then it's also responsible for checking the blocks that are received from the builders so it's I'm responsible for making sure they're valid before it sends them off to a proposer and this is like a trusted party here right and again I don't want to go too much in the weeds here but what we're seeing kind of happen is the the ultrasound money guys is like Justin Drake um is they launched this thing called optimistic relay and fundamentally it's not doing this execution face of the blocks and why we think that's really interesting is because it models very similarly to how easy the shared secrets of component that is only doing ordering and not execution of the block because we see this trend over time wherein the block proposer this actor that again just has an artifact of how leader based blockchain networks produce the next chain in the block is allowed to kind of rubber stamp and say I attest to the validity of this block and it is an x-block and that is a monopoly that that um that actor has within that system and the concerning thing about this Monopoly right is it's not like a horrible Monopoly it's not like the centralized sequencers would have the Monopoly over time it has a monopoly for this given block but a monopoly is still very powerful force in like an economic system right it says you know it can say well if no one pays me a valid price then there's no blocks this time right um and what we see is kind of desirable is to drive the amount of value that this Monopoly is able to extract out of this system um as low as possible there will always be this fundamental kind of value as being a monopoly but what we want is we want to Trend towards saying like there is this proposer and it must exist as an artifact of how these leader-based systems work this proposer doesn't do a lot of work right now right it just says hey I will accept whatever is the highest bid a block that is sent to me it's your job to tell me and and determine what is the highest bid block and I will just accept that um so we think that's like a rule that we want to kind of minimize the value for so like economically that's kind of what we're trending towards we see this as being um beneficial in that you know what we say is also that like we want Roll-Ups that utilize the shared sequencer to maintain their sovereignty and what we mean by that is that it's very easy for them to leave the network and the ways in which this is done um is because the network is inherently a very simple component you know what this shared sequencer network is doing is gonna it's part of this like the proof of stake leader selection based blockchain it's just rubber stamping and saying someone else these these Builders and then these Searchers and you know the the user at the end did effort to say I either want a transaction in and I found valuable you know economic ordering opportunities and I did the simulation work of finding you know how I could most optimally pack a block to kind of maximize the value of this block the size of this block given the gas limit um and and they did work right um and and we want you know the work that is done by this kind of Monopoly holistic proposer component to be minimized and structured in such a way that you say hey we think this monopolistic actor is being rent extractive right they're just you know abusing their position and maximizing the amount of rent they can take out a system while minimizing the amount of work they do we want to make it easy to say hey if that's the case you should go use a different sequencer component whether that's your own sequencer component or whether you stand up you know through like hard forking or whatever an alternative sequencing Network and this is enabled again because it's a very simple component and really kind of going back to your point on you know who's doing this kind of state validation right this RPC node the sequencer doesn't own the state of the roll-up the roll-up you know owns its own State database right and state is fundamentally the thing that is hard to Fork whereas if you say hey we're gonna pause the network and it's going to take us 30 minutes we're gonna be down for 30 minutes or whatever right you can do it you know the hot flop but you just say we're just going to readjust this one parameter and say this is now the actor that we trust whether it is a networked actor as the canonical block production mechanism right um and by making that very easy in our design we think that minimizes the amount of rent that this proposer component will be able to extract from the system um touching really briefly on kind of the wiring kind of system of this fundamentally you know this shared sequencer is a network um and and as a network right that's kind of decentralized Byzantine fault Network we do need a civil resistance mechanism right and so I think a lot of times people kind of forget and I've gotten in like a weird sense of like you know tokenized you know everything that's not my personal view right um it's the idea that these tokens exist as a fundamental requirement of running this Byzantine fault tolerant decentralized Network whereas if you don't have some sense of metering in the network you will get spam on the network and so the existence of the token is because one of these networks needs to have this native um kind of concept of metering access to the network and this is fundamentally what like gas is forth you're saying I want to use this network it's providing me a service in our case it's giving you sequencing and it's giving you decentralized sequencing right um that is permissionless for any kind of roll up to choose to utilize and tie into its system um but it does require a token I guess is what I'm saying um but a token in this kind of like you know true sense of this kind of like commoditized element that it's really a measurement of like a unit of work essentially for the network to do um so combining those two things I guess um it's maybe kind of beyond the scope here of kind of like you know what happened at this user state but touching briefly on this kind of MAV supply chain and some things we've heard around like erc4337 and other kinds of um account obstructions that I'll prove we think there's potential um to see things like gasless transactions at least abstracting away this proposer component through you know you know Searchers saying you know hey if you send your order flow here and I pick up your order flow I am going to monetize um that on my side and I don't really need whatever your kind of Base fee component is to kind of be able to monetize that you know there's some kind of again this kind of civil base cost right in the network of the network costs as much computationally use um and you know the actors that are potentially kind of you know comfortable paying that cost because they have other economic incentives are the Searchers or these Builders and however they negotiate kind of their rate between them as you know fundamentally kind of like um intelligent actors in this system right they're they're non-naive actors um again that's not like a detailed answer we're not kind of committed to one specific structure here but that's roughly kind of the direction we're thinking this goes in thank you yeah I am really glad to hear that you guys care a lot about the sovereignty of the Roll-Ups um because obviously that's something that Celestia believes in and in general I think the modular blockchain movement stands for is people and developers and communities who are running these Roll-Ups should have you know the freedom of choice to do what they want and if they were like you know locked in to Austria or whatever Austria had some kind of like control over their system that would be very undesirable and problematic um so it's good to hear that you guys are not seeking that kind of outcome and uh in terms of the account abstraction I think that's going to be it'll be really really uh powerful to make it so that you the user experience is as smooth as possible and if there's like too many tokens or like they have to think too much about payments I feel like there's ways of internalizing the costs and abstracting it away from the end user and um yeah so it's going to be interesting to see how this all plays out um some other questions that I was like the last sort of technical question that I have um and we have a bunch more to cover and we're running low on time so hopefully we can go quickly on this but like I just want to hear quickly you know I think really a lot about the developer experience and and at the end of the day you know to me the the user of Austria or even Celestia is a developer so why would I if I'm I want to deploy an application right why would I choose to deploy on a shared sequence of network like Austria versus two other options one I could deploy a smart contract you know on an existing sort of you know General execution chain or roll-up or B I could actually launch a based rule up meaning that I in this diagram you can emerge the data availability layer with the shared sequencer proposer thing and all of a sudden you know you just you kind of eliminate the need for this shared sequencer interface between the roll up and the da layer so I'm curious how do you see those two things and that I know that's that could be a big question but hopefully uh yeah you can answer that without uh you know in a shorter amount of time I know it's like a huge huge topic though yeah I mean that's certainly like a huge brushing I was like fundamentally asking like what is the like justification of to some degree like like Roblox app specific change various things you know I'll touch on like the first one right it's like the smart contract versus like chain right and fundamental I guess in my mind they've got like two you know good reasons maybe to do this right like like smart contracts are like fundamentally I think they've provided an almost like like unrealistic like quality of experience right like I come from like a cloud background right though you know working on like serverless things right and the idea is trying to abstract the way infrastructure from like end users um and like the cloud is still like not there you still have to kind of pretend there's like infrastructure somewhere right where smart contracts with this network there like you deploy a smart contract and it will run forever forever that's like an almost like unbelievable level of thing the trade-off they've made fundamentally is like it's difficult to scale right like these you know the whole face we're in right very hard to scale the singular networks right um you know and so we see kind of uh it's myself right and I'm not saying I'm speaking for like necessarily the whole project but uh I think if you're doing a smart contract versus another chain again there's two points one is just scale right like is that change is too congested such that you don't think you're gonna get yourself through there's this thing um called like a Noisy Neighbor issue and kind of shared resource usage right um you know I think we've seen this on you know Solana you know especially because it didn't have like kind of like this um you know State contention you know bidding you know mechanism um where you see you know okay someone's doing an nft mint today so every every other application on the chain is like infeasible to use because the chain is just kind of congested right so there's use cases like that where you say actually I don't want to share the chain with those guys I don't you know work with them I don't drop right with them I'd rather be over here in my own lane I'm not sure resourcing with them because you know sometimes when they're busy um I get a degraded quality of service that's one of this kind of trade-offs of sharing um fundamentally a state right there are ways to resolve that in these chains the lawn has made progress there you know there's a lot of you know research on ethereum on kind of resolving these things with like theme markets and whatever but fundamentally there's like congestion and standing up your own chain might be aware on that there's also this question of like um you know app specificity and kind of design of this state machine right you know a smart contract is going to be dependent on the virtual machine it runs on right whether that's you know a cause of awesome one you know the ethereum virtual machine the Solana Universal machine IC level um or like feel right but like fundamentally you're building a contract that's an inheriting kind of some assumptions on like how you construct your stuff within that larger more generic State machine um you know the kind of Cosmo thesis about specific changes is that like maybe if you built it from ground up you know or using a framework that is at least more flexible um you would get benefits there and so I think those are kind of two of the kind of reasons why you would do that and I guess I'll choose to just not go into more detail here just for like time reasons going into the other questions I think is maybe it's more relevant immediately to us maybe and like it's like it's more existential question of kind of like like why should a shared sequence Network exist and I think we view this is an evolution Right Touch on like based Roll-Ups right of like why should a sequencer exist at all right you know for from like the base role of concept like there's not a strict requirement for a sequencer all the end users could still submit their transactions directly to the data layer um we think there's really two broad categories and maybe that's not even like a clean distinction but um so going to like like a history thing right like arbitrary like they started without like sequencers right they started as like what is now termed like a base roll up or what the rule kit team calls like a pure Fork Choice rule where you submit your transactions directly to you know uh called the base layer right um fundamentally what they saw was that there was you know I guess there was demand so there's user experience Demand right um your base layer is going to be designed for some reason so you know I obviously have more experience with Celestia Celestia in in my view right I'm not speaking first last year but is is optimized for data throughput and I mean that in that Celestia can kind of give you know good strong guarantees of the availability of the maximum amount of data in a decentralized manner right that is what it is done that is how it's designed and architected to optimize for that thing um one of the trade-offs of that is like you know when I'm paper rolling over a lot of things right you know Celestia people you know Evan four specifically might have like a lot better are kind of context on this but like there was a trade-off in Block size and block speed right so you could have smaller blocks going faster you could have larger blocks going slower my understanding of Celestia is that you know the way the kind of share encoding works it is more optimal to have larger slower blocks than if that smaller faster blocks right and that fundamentally conflicts with like user experience kind of like expectations right you know um you know there's any number of studies out there um I'm not remembering the one off top of my head but there's one from like 91 that's like um you know the kind of one reference that's like users want something between one and four seconds response time right that's just what they like to see you know you see this in you know how Google defines its ranking of pages or whatever right um but that's a fundamental trade-off with the optimal way to design this deeply technical system that's optimizing throughput the layer above it right the the shared sequencer layer is you know if we look on this diagram here right we have this concept of soft commitment or the firm commitment it somewhat analogous right to a caching layer where you say okay we're going to get a commitment in two seconds or three seconds or one second or whatever we defined as like the block time of the shared sequencer but faster than the data availability layer and it's going to give you this soft commitment over that it's good enough for you to take it for that maybe you're doing a very large transaction and you want to wait for kind of a longer time to get more guarantees of settlement I think on this point I would reference everyone to kind of like Nick Carter's post from I want to say that's 2019 and it was I think titled something along the lines of like uh it's the settlement Assurance is stupid it's like like the title of this post and fundamentally saying what is settlement settlement is a guarantee or a probabilistic I guess I'll say guarantee that a transaction won't refer right if I'm sending a billion dollars when am I confident that the receiving party has a billion dollars and I can't take that back right different Financial structural systems have different kind of guarantees of finality I'm in the system and so as we'll say there's this like capturing benefit right um touching really quick on one more quickly okay there is this like also just structural element on both Celestia and I believe in protodine charting and dining charting I've talked to Kelvin a little bit about this but I'm not that clear there's but but essentially there's a minimum size of data you can buy on a data availability layer right I believe in Celestia it's like 512 bytes or something like that and what this means is that if I'm a user and all my transactions go to the data layer and I have a transaction where the intent and signature et cetera et cetera like the content of this transaction is 50 bytes I still have to buy 500 bytes and I can say okay fine like I'm just paying 450 by Textra and again this ties into the um structural design of how have you best construct a chain that maximizes data throughput um that's like an order of magnitude that's like not nothing right like everyone would like their blockchains to be 10 times more efficient right so there is this benefit in having just like a batching layer and this is what the sequencer is and combining these we think there's a reason why sequencers should exist why should there be a shared sequencer um again that goes back to kind of how we started this of like decentralization it's like a hard process both technically and kind of like uh I'll say like like in like an operational like business sense right you have to convince a large number of actors in geographically distributed settings to run nodes in your network that takes work right that is a negotiation um we think that we can provide a system that is generic enough in its kind of interfaces with these roll ups that it's less work for them to go buy in and pay whatever the market rate is for decentralized Block production sequencing right um than it is to go try to do the effort of you know standing up their whole network I think I think there's prior kind of um validation I'll say or at least evidence of the demand for this through both you know polka dots kind of parachain so some structure it kind of shares security right where they say you know hey people want to buy this in they don't want to stand up their own network every single time um as well as you know cosmosis you know interchange security or replicated security they're calling it now um our system is distinct I probably won't go into the details here because it just you know a long-winded thing but we do think there is some benefit to kind of sharing security having one larger more economically secure network that you know resolves this specific task and then it is beneficial for Roll-Ups to just buy the market rate for that again very similar to Cloud stuff everyone could go stand up their own data center but like that's like a very high bootstrapping cost you'd rather pay the market rate to get that as a service and we think that's fundamentally like the optimal way to do this and to make it lower effort to launch a rollout got it nice um I think that uh yeah that's that's a very uh clean clean answer in response to the those questions and you know the data availability layer at the end of the day it has different sort of design I guess goals then you might want for this shared sequencing property and and I think what's nice about having these decoupled is that you can kind of get the best of both worlds like the the sum uh or like what is it I can't remember the sum is greater than the the hole is greater than the sum of its parts basically um and the other cool thing is that I Envision a future where there's multiple shared sequencer networks right and the each one might might be designed differently for different properties or have different specializations and I think that that's gonna again increase the choice for Builders um and and be able to like sort of customize what they want so again modularism not maximalism we say it all the time but it really is true that the more choice that developers have the the better the systems they can build and the better the end user experience the more you know crypto can actually be adopted and used so very exciting so um some some last questions um are you know something that I I don't think people are necessarily as aware of I know you guys are really pushing hard on the shared sequencing side of this thing but one of the parts of your project is also launching this evm chain you guys are kind of in the sense going to be the first user or consumer of this charity Network yourselves so I want to hear a little bit about Astra AVM and your plans there what's the Ambitions for this evm role as far as I am aware it's the first general purpose evm chain or roll up to be launching on Celestia so I think it has this kind of like you know unique position potentially so I want to hear more about you know what you guys are going to be building yeah so without going too deep in like the the history here but like you know the origin of Austria of the project was centered around like the how do we deploy Roll-Ups generally on top of celestion an evm rolled up specifically on top of Celestia and the shared sequence there came out of essentially just architectural designs for how to accomplish this so there was always in our head like okay we're already pretty far down the path of like building an evm or thinking about how to build an evm here right so there's some path dependency to it but also when we were building CBM you know we started building it you know terming it like a settlement layer right um and when we really looked at it from like a first principle approach what we were thinking with like what are we actually trying to do and what we're trying to do is say we're trying to make it the easiest possible to build rollups because fundamentally I view competition as like the thing that is necessary to drive an ecosystem forward you need someone saying I am incentivized to do better than you and if I do better than you then you have to catch up and then the ecosystem moves forward as a whole right um so we were trying to say how do we make it as low barrier entry for someone to build Rolex as possible and so we saw this evm as this settlement layer right and then we thought well what is the settlement layer giving you and what a settlement layer gives you really is like this this you know opportunity this place you do like like bridging and kind of like um really like liquidity because like you know blockchains are like fundamentally these Financial elements right so liquidity pool somewhere and it is you know this Hub and spoke model of like liquidity within an ecosystem but we also saw this need for us building the evm and for other chains as well to get this ability to have this kind of sequencing um you know as a service right it's like decentralized sync with the service we needed that for our evm and we knew that other Chains would have it so that's why we're building this kind of two pillars of things is the evm we see as if you know I don't love the term but like settlement layer wherein other Roll-Ups can say hey I want to stand something up I want to use the shared sequencer Network or or not but they want to stand something up within Celestia and they want to get the benefits of this trust minimized bridging we want to do again similar to the shared Secrets there are a lot of the legwork of establishing these relationships whether it's with you know centralized exchanges whether it's with other ecosystems through bridging um whether it's through with stable coin issuers and provide this kind of um base level resources that will be desirable for other Roll-Ups that are just kind of fundamental kind of like you know like to program right like things that don't scale right like everyone has to do it themselves and we think we can do it and provide this kind of um you know this resource to other Roll-Ups within the ecosystem that is more beneficial and then on one more point right you know I also think kind of the the term right like eating your own dog food right is like extremely important you know I've experienced the negatives of this you know for years in my career you know you know in the past that like gcp I think one of the reasons gcp struggles is Google doesn't build on top of gcp right so what I mean is we want to build this evm and this evm is building on top of the shared sequencer what that means is if we want the evm to be a good product the shared sequencer has to be a good product for that and this is a forcing function on making sure that we're building something that is actually desirable to other Roll-Ups in the ecosystem if we just said hey here's the shared sequencer we think it is good and someone comes and say Ah that's not that good then like okay great we have to go back to the drawing board and we have this difficult iterative design process if we say we're building this here is the component that's using it if it's hard for that component to use it we can know that kind of internally and we can iterate more rapidly um kind of like as a project um to build like what we think is like a better solution for everyone yeah I think that uh dog fooding is extremely important and in some ways you know something that we're excited you know you guys are also building on top of Celestia itself and giving us a lot of feedback and same with you know other projects like roll kit or Sovereign labs and um obviously we need to be uh incredibly neutral but like having users and and sometimes being your first user is is extremely valuable I'm actually kind of surprised that Google doesn't even run on gcp that's kind of a red flag to me um but yeah in terms of you know and this is something that people also get hung up on about Celestia is like hey there's no you know settlement as part of the da layer because they come from an ethereum mindset ethereum model where you know part of ethereum is it has this in tried settlement layer and um frankly in our opinion it's not something that belongs within the da layer the da layer should be minimal and as basically you know generalizable as as possible and when you add settlement you're kind of making choices that like cause externalities for other people building on top of it and so I expect you know lots of but at the same time settlement is important those people are right you know there is a need for this kind of function but we just feel that it shouldn't be at the L1 and so I'm excited and glad to hear that you guys want to provide this to the ecosystem because I do think it's very valuable to you know have a liquidity Hub or have exchange Integrations or asset issuance Etc you know this is this is a very fundamental like function that needs to be supplied to the broader modular ecosystem and um you know some some Roll-Ups also require a settlement layer especially the evm being probably the most commonly required one to do interactive verification games and and actually verify their fraud proof so um this is going to be I'm really really glad that this is also part of it it's like two birds with one stone you guys are doing the shared sequencing you're also adding this settlement functionality to the ecosystem so super stoked um okay now we just have a bunch of Rapid Fire questions and uh you have to answer each one it might be really hard but try to answer each one of these in only 30 seconds okay you ready yep will Astra support other da layers or only just Celestia we plan to support other da layers we think structurally it's not like that difficult um but we're not we're not doing that like at the start you know the varying things of like uh you know premature optimization is not the right thing but like you know designing two generic of an interface from the start is just like more engineering work so we do intend to you know theoretically you know support multiple da layers but like right now we're just building for Celestia because we want to build for one interface um and Celestia is also the one we have the most Comfort level yeah and I I've I was talking to Evan um one of the engineers who is you know helped I think to inspire this shared sequencer vision and one of the things that we couldn't get like figure out was like does it make sense for the same shared sequencer Network to plug into multiple DNA layers and like how does that how does that work like it's a it's a non-trivial problem I think it's very possible but it's also kind of like you have to think about it pretty carefully when you're designing the system so I mean I'm curious you know when that when that does happen I'd love to see that design and I think it's you know it should be that that way again that there's multiple DNA layers and maybe people can like choose which one they post to and and the mempool is kind of unified I don't know um so the next one do you expect most of the Roll-Ups to put on Astra to be app specific Roll-Ups or to be general purpose I don't know if strong opinion on that and I think those terms are like a little bit like flaky so like when we were designing this we had this concept like you know the sliding scale between like app specific being like literally like Cosmos SDK it dripped us this one thing and like general purpose being like it's like an evm we have this idea of like maybe it's an ebm but it only has like three applications on it because there's still certain applications that kind of compose together well you know you might want to have like a local um lending protocol give you like flash loans right next to your decks but maybe you don't need like an nft Market on that same thing but like you want those things so we don't like a strong opinion on that we're pretty open we're talking to like broadly like you know other people and again we're designing our interface to integrate the shared seems to be very very generic such that like we don't kind of restrict at all the state machine that is designed to work with it but I don't think we have like a perspective on like which of these we have a preference for um we're staying open and seeing what like the market decides um they want to build yeah I think it's good to be to build to be generic and uh let the market decide and uh I think the way that you guys have like built it will will be suitable for for either use case I'm just curious to see how it all plays out personally because it's it's just it's interesting that like you know reason about um okay next one what kind of consensus algorithm will Astria run yeah so right now we're using penrith um we haven't kind of made any like I guess like committed decision but you know we do share you know some of the opinions of you know people like Zaki you know who are like you know many people have tried to make a objectively like better consensus algorithm than tender men to deploy that and get adoption and many people have failed um there are many many chains running tendermen it is well known it is formally verified um it has been robustly tested um we're generally confident with it again it's like easy to work with so right now we're building on tendermint um you know we've looked at some of the others but like it still an open question of whether it's worth kind of the the resourcing to kind of more thoroughly investigate one of these consensus algorithms that's either kind of done at a research level but not done an engineering level um or whether it's useful going to some kind of fully you know not pbft so therefore not single slot finality um consensus algorithm you know but right now we're planning on using tendermint and we're doing kind of active investigation research internally on whether you know we want to kind of you know research or kind of like build on something else yeah I think that's a very practical approach I mean tendermint is kind of the gold standard and uh you know so it's a safe bet although I do feel like certain things like I mean people tend to complain about tenderness mempool and like certain things that are quite seem quite important to like a shared sequencer and I just wonder I think there's a whole realm you know to explore different uh consensus mechanisms and and with different trade-offs but yeah which one of them are really like production ready I don't know maybe things like uh bull shark and and the things that like the the sui and and Aptos people have built I don't know anyway that's interesting um and you'll definitely go ahead it's really great like when we say like temperament like it's more like tendermint as like the kind of like finality Gadget or whatever right like the tenement structure you know the the work you know that like you know having Forbes and others inside of Celestia have done to like you know improve like the men pool inside of like tendermen on their own like Fork of like Celestia core right you know those are also things like we're looking at so it's not saying like we're just gonna use bog standard tenement not change anything but we think that's kind of like tendermint ecosystem I guess more correctly let's call it the comet bft now yeah it's like a very strong candidate for like the optimal kind of like you know maybe not optimal but like it's good enough and you're not going to necessarily dramatically you know 10x improve your product by using something else and you might 10x the amount of work you have to do yeah I think um Bucky whenever he hears Thunderman is like inside like I don't know cringing he's like comment comment BFG anyway um all right uh two more questions will Austria improve cross roll up composability yeah so do we think it will and again this is like a useful diagram to have right if you see multiple Roll-Ups submitting transactions to a shared you know mempool and then they get put in the same block right there is you know a guarantee over the inclusion of those transactions then they're ordering kind of like relative to each other right so you can guarantee that you know these Roll-Ups are saying you know they're going to pull you know the same block from the shared sequencer they're going to pull their subset of that block that is their transaction they're going to execute it um so we do think there's like kind of inclusion guarantees around that that allow you to do some interesting kind of atomic things what you know and I was gonna go over through anything but we want to be a pretty explicit about it's like this isn't like some like holy grail of like you know you're gonna be able to do like a lock mint burn um you know three-stage bridge in like a single block because fundamentally you can't guarantee that a given roll-up um executed the block on the attack so strictly you could do it we don't believe it it's not strictly safe to do so um and so whether people do it or not it's like I'm in the air because like you could say you know do a lock mint burn and then um let's say the like mint transaction on like roll up B is just like reverted or whatever for like visibility that your roll up doesn't have into another roll up will you just you know like disappeared some amount of tokens Into The Ether um whether or not people get degenerate enough to just yellow that and say hey we're willing to kind of risk that on like a bridge that's up to them um who do you think there are some general improvements you know in that space here yeah modularism not Maximus and people can build whatever they want take whatever risk they want um but yeah I think in general you want to build you know yeah well I think that's that's one of the things that people are really hyped up about for shared sequencers and I think that's one of the things that will cause maybe a network effect is like hey if you share the same share sequencer network with another roll up you can have this improved composability um and and I think that's going to be something that will be a big part of this last last question we'll ask you to give Roll-Ups the ability to capture their own Mev so you know we've had you on with you know the skip team on a you know modular Mev episode and people haven't listened that I encourage them to um and you know a big topic there was Sovereign mov uh which is this idea that like you know chains Sovereign chains should have the ability to capture and internalize Mev that they generate and then redistribute that to whoever they think you know deserves it like spend that money that protocol treat that as protocol Revenue in a sense and uh so I think that's another really big incentive for people for example to build a roll up in the first place or an app chain rather than just you know deploy a smart contract and so I'm curious if you guys are thinking about that yeah so is not like a 30 second question it's definitely not a question or or more uh I I will say like like there's like a personal opinion and there's like where we land up right so like my personal opinion is that like the token governance is like a bad thing and so kind of when I asked this question when I discuss this question my question like when they say like pay the role up like who is like the roll up right um to some degree right you have this decentralized network that needs simple resistance that needs a token that does production that is like a thing that is like paid like why do you want some external kind of like I'm gonna say like State and I don't mean state in like the you know it's a state DB I mean like why do you want a separate governance actors that are extracting taxes on your transaction throughput you as a user why do you want to be tied to one roll up versus you want to pay the market rate for using a roll up and you don't necessarily want to bump back to the kind of proposer thing right there's like this balance between like the governance of a roll-up and like the users that will roll up and I'm not sure the users want to have you know additional taxation that that's like a personal kind of like anarchistic like opinion that it's that much spicy from like a technical perspective there's some complexities of like when you say we pay back roll ups right again there's like who is Roll-Ups right like where am I if I'm saying I'm going to send ten dollars to like you know the roll up where am I literally sending those dollars on what chain am I sending those ten dollars how is that executed I think there's a lot of open questions here um we're not certainly like opposed to it and like there's no kind of like structural limitation for that um but I have somewhat biased opinions on whether or not that is a desirable thing for like end users and one of our kind of views is that we want to reduce again the effort to stand up a roll-up such that we don't necessarily think that like a roll-up should be something that is able to extract like a large amount of rent from users of those Roll-Ups right now it's a lot of work to stand up a roll-up if you come to very little work to stand up a roll up maybe those Roll-Ups portion of kind of you know whatever like transaction throughput that they're returning back to them is very very minimal and maybe we end up in again an account abstraction Style Space similar to like you know James press which is like an EV wallet stuff where actually the revenue is going back to the users who are actually submitting the transaction for it rather than having this kind of Taxation in the system that says hey I'm a roll-up and I'm just a bag of state with users on it and I'm going to attract rent again so this is father but maybe would be I guess the final answer here yeah I mean uh yeah this is such a longer conversation but you know obviously I don't think anyone would agree that like oh it's a better outcome if we you know actually extract rent from users kind of against their will uh because clearly those like incentives are just not aligned but I think that there is like part of sovereign mov is saying hey this is the kind of mov that is okay and not okay so it's like also like potentially trying to protect the users in the first place there's also a certain amount of Mev that is simply just you know uh like uh it's kind of inherent to these systems and and we'll you know be present no matter what and it doesn't necessarily have to have negative externalities to users although it may but the point is where should like who should actually get that value and I think that at least providing some mechanism to to to to to channel that value into certain ways intentionally rather than you know just like letting it go to whoever you know I don't know wherever on the supply chain that it ends up I think that's a very powerful idea so anyway um okay now we're gonna start sort of wrapping up here I want to hear again quickly like what is the vision for Astria five years from now if the project is successful like where what is Austria in five years yes I mean there's like a very like open question right a large question I think there's like many things it could be but like fundamentally what we want to see is we want to feel like an abundant like I can say like number of Roll-Ups and and really like what we want to see is like the blockchain industry I'll use that broadly right you know as a whole move forward right you know when I'm asked like you know why like like blockchains right like why it's like a useful thing I say like look like the base case you can explain to anyone is I'm like what if you had a system that could do Financial transactions at a cheaper rate than visa and they were structured in such a way that they didn't want to take a three percent rake that B10 MasterCard take they want to take a one and a half percent rate right so and that all requires scaling right and so like in the back of my mind that's always the goal right is get the throughput high enough whether that has to be across you know a thousand chains 10 000 chains or whether we figure out how to do it on 10 chains I think we want to just get the throughput high enough this system is valid especially we can remove kind of these like rent extractive actors and cartels from like the overall system of like Financial transactions what we see after you're kind of playing into that right again we really see this is Pro providing these kind of hard to bootstrap or expensive to bootstrap resources to this modular ecosystem right it's the two pillow we had like this settlement layer it's like evm-based settlement layer that does a lot of the kind of BD leg work of providing you know token you know issue and stuff you know bridging between other ecosystems um and just you know the settlement layer the competitually do ivgs you know or you know if you want to do like uh you know a non-sovered roll-up on that right that's an option while all being within the same data availability layer again the other pillar being this kind of shared decentralized you can say where you can kind of buy decentralized um secret thing as a service um at like a market price we'll see this as driving many many Roll-Ups and the thing that I think is really valuable out of that is um you know going to kind of like the cloud case and you know my co-founder you know Jordan had like a good kind of post on this um we see there being more experimentation in like applications and when I say applications that could either be smart contracts or that could be you know State machines themselves if you reduce the barrier to entry then you can have more experimentation whereas right now if I want to launch a chain right it's a very large effort to like stand up a chain and launch a new chain and get it you know decentralized if you can say hey all I have to do to launch a chain is go take this open source software change a few things I don't like about it or I prefer to make it my custom thing and then off the shelf I can grab this you know data availability layer this sequencing layer you know uh this validity proof layer and I don't have to build any of that they have clearly defined interfaces and I can tie in and I can use this base template you can iterate much more rapidly because just the amount of people and human resources to launch a new Roll Up is reduced so much that now we can maybe move out of okay 90 of the chains are running on evm okay that's great but like there are a lot of known issues with the evm but it's very difficult to build a competitor to it because of just the bootstrapping cost to do so so ideally we're seeing you know after it you know I I generally want to be kind of more pragmatic in my statements here right you know we've seen people like the bass guy say like we want like a billion users next year like that's just not gonna happen guys um but like you know we'd say we want to see a million Roll-Ups and maybe in five years yeah we do see like a million Roll-Ups I really want to see this kind of you know to use like a like an overused term like a Cambrian explosion of like innovation in these State machines driven by this kind of infrastructure being provided for them as a service but in a decentralized way absolutely uh the the analogy that I like to use is essentially I mean what ethereum did for decentralized applications uh I think the modular stack will do for blockchains themselves so ethereum made it you know before when you know in the Bitcoin sort of era in order to launch a new D app you had to build a new blockchain from scratch all of a sudden ethereum came along you could you know deploy your application by just writing a few lines of code as a smart contract and then all of a sudden what did that do it lowered the barrier to entry it made it so much faster to innovate and all then what did you get you got this Cambrian explosion like you said you got D5 you got nfts you got dials you got all these use cases that we know and love today and um now I think we're doing the same thing we're removing the barrier and entry or lowering the the overhead cost uh at a layer even deeper in the stack which is not just to you know write a smart contract and launch an application but actually to launch your own blockchain to create a new you know execution environment to experiment with all these things that are like just way way way more powerful I think and and also will be way more scalable so uh I could not agree more and I hope that in five years if we have if we have a million Roll-Ups in five years I will I can die happy I think um so uh last question is where can people sort of like play around you guys have anything sort of live is there a test net or will there be a test net soon where can people play around with stuff and also where could in general can people learn more and follow the progress of Austria yeah so we have a website it's austria.org a-s-t-r-i-a.org um blog.astria.org is where we have an introduction post that's probably the most thorough kind of like written summary of this I've also you know really referenced people to um John charbonneau's wonderful you know I don't know really really long blog post but recently had one called like roll it's not real that covers shared he would think that also goes into composability I highly recommend that if you want to summary on this from playing with our stuff you know we we kind of you know coming out of Celestia we really kind of um carried over one of the things I really liked about Celestia which is like from day one our code of Open Source I've never figured out or bothered to set up a business account on GitHub such that we have any private repositories right we have no credit card with GitHub all of our code is open source um it is one of MIT or Apache 2 licenses if you find a code base that is not you know please ping us um you know maybe don't harass our Engineers too much but we are working on getting something that is kind of you know runnable on a devs machine in some kind of like Docker kubernetes kind of cluster setup we're hoping to have that done by you know an over promise here but like end of this week noting we're recording on you know April 12th right now um so ideally you know April uh you know 14th we have something out or maybe next Monday um and then we hope to have something um you know for kind of like a trusted partner kind of you know devnet past net whatever I call it um available in you know coming weeks you know if things go really well maybe it's two weeks maybe it's three weeks so um it's not quite like here's a public RPC yet um but we are very very close to having something that we're comfortable kind of sharing publicly and again our code is all open source you can go to github.com austria.org um just all one word after your org um a polkadar code um again please be respectful of like the engineers and don't like you know harass them a bunch but we we have open source you know we welcome contributions um and if you want to go got it you can go look in the repos there cool and uh I'm glad you guys are building open source and uh for people who don't know Mustafa is a die-hard open source person obviously from his activism days and you know even things like he basically refuses to use like almost anything that's not open source uh including like he doesn't use Microsoft Office he uses Libre office and stuff like that and uh anyway it cracks me up I'm glad that you guys are carrying that on uh just the last thing before we go off you guys are hiring right um are there any like open roles you guys are like you know seeking to fill yeah so right now you know our team is um you know nine people um we are hiring for you know I guess the key roles would be you know we're looking for like like Deborah on Solutions Engineers people um we are always kind of looking for good software Engineers you know we don't feel like we absolutely need like a bunch more right now but we are really always happy to kind of you know accept kind of inbound interest and go through that and we'll reach out to people if we think they're really strong fit for this position um you know our code base is you know primarily rust we do have a bit of go you know basing that we're like you know tender men we have some Cosmo stuff in there we're also looking for solidity people um you know on this kind of solution bench in your front and just giving us some kind of solidity expertise inside the org we're also looking for um you know you'll get Chief of Staff kind of head of operations role um and and generally you know if you think you know this is a product is really exciting to you um you know we welcome kind of like inbound interest um you know you can reach us at like contact austria.org um you know or you know reach out to us on um yeah yeah it's like that that's like the best way to reach out we also have on our website right there is like a jobs page on astra.org um you know send inbound interest there um follow us on Twitter twitter.com astria.org again all one word you know I'm Josh Bowen I'm under J Sky Bowen um on Twitter um you know so reach out you know if you're interested um you know we're always happy to kind of chat with people cool well there you have it guys um you're hearing from the man himself Josh Bowen about the future of decentralized sequencers at Austria and um we're definitely going to be following this closely and uh I hope you guys you know end up listening to a bunch of other interviews I'm sure Josh is doing the tour right now and uh there's a lot to absorb uh in this Vision I Feel Like We Only scratched the surface I wish we had more time but uh thank you Josh for coming on and um we'll see you soon yeah thanks Nick thanks for taking the time 