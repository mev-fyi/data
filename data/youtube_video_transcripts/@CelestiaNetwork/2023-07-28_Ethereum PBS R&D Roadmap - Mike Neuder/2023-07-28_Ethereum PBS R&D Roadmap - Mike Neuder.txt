hello everyone so my name is Mike neuter I work at the ethereum foundation and today I'll be talking about ethereum PBS r d roadmap so a quick sketch of my talk I'll first go through what we Define as PBS this is kind of a buzzword lately so I'll Define it in terms of what we mean for the ethereum consensus layer and then I'm going to run through kind of Rapid Fire style five implementations of PBS there are some overlaps between them we can um kind of see see the similarities but I'll present each each of them kind of in their own right and then after that I'll try and synthesize by pulling them together explaining the design trade-offs between each one the timelines and yeah kind of try and connect the dots in a way that hasn't been done very well yet because I think a lot of the proposals and the discussion has been scattered across different Forum posts and Twitter threads so yeah that's kind of what we're going to go through cool so defining proposalability separation in ethereum L1 this is a post from metallic in June of 2021 so this was already over a year before the merge and the idea here is to keep the proposer set which is kind of the decentralized set of validators that are selected through proof of stake to propose blocks for a given slot and we want to keep them relatively unsophisticated so we want it to be kind of accessible for people to run these validators at home on on consumer grade Hardware without much sophistication on the other hand the builders are the people who are going to construct very valuable blocks and what this means is they're they're capable of of extracting a lot of Mev this might require liquidity on different exchanges it might require a lot of compute intensive algorithms because you know there's there's a lot of different permutations of of transaction ordering to try and so these will be highly sophisticated actors and the goal is to decouple these two roles to avoid the centralization pressure and what I mean by centralization pressure is that if we don't kind of formally decouple these two roles then there's very likely to be a world in which Builders collude with large staking pools staking pools are incentivized to do this because they can kind of benefit from the builders who are really specialized at extracting Mev so they get higher Rewards and the um the the builders basically collude with them and yeah the the reason that the collusion is able to be kind of credible is because the staking pools have reputation and this reputation isn't something that would be accessible to the to the kind of everyday solo Staker and this kind of fits into the broader picture of the vitalik's end game post which is the idea that um block production is going to be highly specialized we kind of have to accept that and firewall off the the centralization from the decentralized validator set in some way so that's what proposer Builder separation aims to do cool so this is the first of the five designs I'll run through and oh I should say the the designs I like to categorize in terms of in protocol versus out of protocol and what that means is if if it's in protocol then it's something we change in the consensus layer spec it's part of like the honest behavior of being a validator in ethereum proof of stake Network oops sorry oh yeah this is right um but if it's out of protocol then it's it's kind of like the sidecar thing that that the consensus layer isn't aware of but maybe many of the validators are are making use of so meth boost is what exists today this is the software that was written by flashbots um right after the merge and the idea here is that there's a third party to facilitate the relationship between the Builder and the proposer and this third party is called the relay they broker the trust between the two and and conduct this auction to give the proposer the highest paying block from the Builder so Builders are sending blocks to relays relays forward the headers onto the proposers and the proposers commit to a header without actually seeing the block so the trust assumption from the Builder to the relay is that the relay doesn't steal the Builder's Mev the proposer trusts the relay to serve them a valid header because they're signing some some header to a block without actually seeing that that header corresponds to a valid list of transactions so the the trust is brokered there and the way they relays interact with this is they run the sidecar software called math boost some have Boost kind of interacts with the consensus and execution layer clients and outsources the block production rights to this external block building infrastructure called the relay and we see very massive adoption like great product Market fit for Med boost so 95 of ethereum blocks are being built using this infrastructure immediately after the merge it kind of skyrocketed from from 50 all the way up to to near to nearly every block being built through Mev boost cool the the next design I wanted to talk about is kind of the original two slot PBS design and I would say for the for the past two years about this has been kind of historically what people referred to as enshrined PBS or in protocol PBS and this is a post from metallic and he presents this idea where you separate each slot into two blocks basically or two slots so there's a beacon block the beacon block contains some commitment from a builder to build a block and the intermediate block or the Builder block actually includes the set of transactions so kind of logically we're just splitting one execution layer you know update one set of transactions into two blocks and it's this kind of commit reveal scheme that that we use in Mev boost it's just authenticated and the kind of authorized through the protocol itself and the way the testing committee works is it the the testers are the people who vote for different blocks kind of saying I think this is the head of the chain and the testing committee is split between the first block and the second block and yeah the the partition happens and the the kind of tldr of this is that it actually weakens the security properties of the consensus layer and I won't go into the details of uh of this now but because of this we thought of a new design and this is this is pretty recent this is a a few weeks ago and it's called the payload timeliness committee and this is another in protocol solution I should say the previous solution was also in protocol so these are these are changes to the consensus spec that that facilitate the the PBS implementation so this is this is quite similar to vitalik's two slot design the difference here is that we have a consensus layer block similar to before it contains a commitment to a builder bid the Builder bid just basically says like this is how much value I'm willing to pay to produce the Block in your slot and it also contains the header which is like a commitment to the list of the transactions so this is voted on with the the testing committee this is all like as it as it happens today the only difference is there's kind of a hole in the in the block where the execution payload will go and the Builder reveals the execution payload once they're confident that the Builder block or that the the block that the proposer proposed will will become on chain and then we have this thing called the payload timeliness committee which actually makes these votes to the timeliness and availability of of the payload so this is it's quite similar to before the differences are mostly in the fork Choice rule but the important thing here is we think this has like Better reorg Properties in terms of securing the consensus layer cool um now I wanted to present one other kind of out of protocol solution for PBS and this is what we're calling optimistic relay and the difference here is that instead of kind of doing the in protocol version where you go through EIP process you modify the consensus spec you update the client software and then you perform a hard Fork we have this this relay infrastructure that's already running we already have 95 percent of blocks using the relays so we can make the the relay you know optimistic we can make the the med boost relay ecosystem look slightly more like than trying to PBS version by changing the code that actually runs on the relay and reducing the relay responsibilities so this this plot or this diagram shows the block submission flow for map boost and you can see there's kind of a lot of tasks that the relay does and a lot of latency involved in those tasks so the Builder submits the block the relay validates the block against the execution layer and then publishes the box to the consensus layer client so the idea is how can we make this look more like epbs and and when we say epbs that's enshrined or in protocol PBS like how can we take the infrastructure today and evolve it towards what we want it to look like in protocol and the idea is we can just work from what we have today and remove some of the relay responsibilities so optimistic V1 we say okay take the block validation out of the system this saves some latency it also makes the relays easier to run because now they don't have quite the the operational and and compute costs of of simulating all these blocks very quickly and the way we protect the proposers is we say if a builder ends up submitting an invalid block that wins the auction we'll have some Builder collateral and we'll execute some out of protocol Builder slashing so we'll just say okay we're going to use the Builder collateral to refund the proposer no no problem like that's how we get around the removing the validity check from the submission the second version of the optimistic relay is actually removing the block download from the the fast path so in the same way before if the Builder submits a block or doesn't end up sending the entire block contents to the to the relay we say okay we're going to slash the Builder that's a penalty that will be able to use the collateral to to refund the validator and the end game version of optimistic relaying and these these diagrams are kind of wordy so don't worry too much about the details but the end great end game here is that the Builder and the proposer actually interact through the P2P layer so they gossip the Builder gossips the bid the proposers gossips the signed bid and the relay essentially just takes a snapshot of the the mempool of the P2P layer at a given timestamps and the tests to the the accuracy and the timeliness of different events and really if you kind of break it down this is kind of what the payload timeliness committee does but it's just being done by the relay itself and the relay holds the collateral rather than the protocol so this is kind of the the molding of the relay responsibilities and the relay efficiency into something that should potentially be more compatible with intron PBS okay and the last PBS design and again bear with me it will you know the remainder of the presentation is about drawing the connections between all of these the last one I wanted to talk about is called proposer enforce protocol commitments again this is an in protocol implementation and it's it represents a much more General framework for allowing proposers to commit to things in the protocol and it's actively being worked on by by Barnabas and Diego and the idea is that you use block validity to enforce commitments so proposers commit to doing something and if they don't fulfill that commitment in the block that they produce that block just won't be valid according to consensus rules so the the kind of cool thing about this General framework is that PBS can be enshrined through these protocol commitments so you can have a proposer commit to a builder and then if if the proposer block doesn't include that Builder's bid then the block won't even be considered valid so the difference here is we check the the block validity we use that to enforce the the proposer commitments rather than the testing committee cool so that was kind of a fire hose but hopefully the next few slides will help connect the dots and draw the the relationships between all these things so on the top row I have two slot PTC payload timings committee and Pepsi so those are the in protocol versions of PBS the bottom row is that boost and optimistic relay which are the out-of-protocol versions so PTC and tuslot are really closely related but basically we trade off what's called reorg resilience or this is part of like the consensus stability the consensus safety we trade it off for Builder safety so we're saying okay we want if we're choosing between these two basically we decide how much we want to give the Builder assurances versus how much we want the protocol to be to have certain properties to go from PTC to Pepsi we use block validity instead of a committee so this is kind of like who is doing the enforcement of these these commitments and these checks uh um and Pepsi is is doing the the commitment at the Block validity level on the bottom oh I should say also this is the heart diagram so hopefully that will become clear in the next you know coming clicks um the bottom we have Mev boost which evolves into the optimistic relay and this is just really Evolution and this is kind of already happening some relays are running optimistic some relays have have private closed Source versions of their software so this is kind of like already in progress of of happening and if we want to go from two slot to Pepsi we can kind of view it as a more General version of doing PBS so Pepsi doesn't put any constraints on what the exact mechanism you use to do the PBS it just says have some some way for the protocol to enforce commitments from the proposer now the the left side of the heart is as Mev boost evolves into two slot or the payload timeliness committee we can kind of think of that as just enshrining the existing commit reveal architecture of nav boost into the protocol so that's like the enshrinement path for those two things is is through through that evolution and then the right hand side of the heart is evolving the optimistic relay into the payload timeliness committee and this is essentially just as I was saying before replacing the the relay responsibilities with the payload timeliness committee responsibilities and the cherry on top is Nev burn and inclusionless so these are kind of two additional features that that are hopefully going to be part of the protocol I'll give a quick overview meth burn is the idea that we want to take Mev and instead of giving it to the proposer we want to burn it so kind of provably destroy it through the through the protocol and inclusionless is a way we can say we want a certain set of transactions to be kind of force included into a slot so this is a mechanism to to enforce censorship resistance and both math burn and inclusion lists depend on one of two slot payload timeliness committee or Pepsi so that's why the three arrows the three dotted arrows kind of come down and and show the dependency between those two and and one of the in protocol Solutions and the key takeaway here is that you can't do either of those things with an out of protocol solution so that's kind of one of the big cons of of having this out of protocol software cool so that that was kind of like a mind map of the relationship between all of the the five designs I also thought it would be cool to kind of go through a few specific categories and compare the designs kind of directly versus each other I clumped optimistic relaying and Mev boost into the First Column the second column is just payload time in this committee or two slot and the third column is Pepsi because Pepsi is is kind of its own variant of of a design space so the first axis I guess we can evaluate them on is the time to ship slash the protocol diff so the Mev boost relay is already running optimistic relay roadmap is is kind of in progress this is something we can do now oh I should say the the three colors red red yellow or sorry green yellow red green is kind of good the good outcome yellow is the medium outcome and red is the bad outcome so which that's why I call it the traffic light Matrix um so yeah nav boost is already running it's kind of already in existence today PTC we think of as a relatively minor diff like it's you know there's a big change to the consensus layer but it's not so dramatic that it requires a whole consensus layer recall essentially and Pepsi is is really dramatic in so far as it allows proposers to commit to kind of arbitrary things there's a lot of design considerations around what what those commitments look like how those commitments are like encoded on chain etc etc and you can kind of think of Pepsi as almost like an enshrined eigen layer so there's all sorts of kind of tail risk at least associated with kind of opening up the the doors and letting people to commit to arbitrary theme things as proposers the next axis I wanted to present was decentralization so Nev boost is kind of by definition centralized there's only about eight relays that handle all the blocks and um you know the that's kind of part of the expectation is that there's only going to be a few relays and a few builders that connect with those relays PTC is extremely decentralized in that it shouldn't change the validating role at all basically being a validator changes um like the the role that the valid data plays in the ecosystem has has very minor differences so in that in that regard it has the same decentrality decentralization properties that we have today from the validator set and Pepsi I put as yellow because there's a world in which Pepsi involves many more commitments those commitments might require higher compute higher bandwidth and as a result there might be kind of a competitive advantage of joining a staking pool that is able to run more infrastructure in the same argument or the same vein of arguments that that present eigenlayer as a potential centralization Vector in the system bypassability so this is the idea that there's kind of some way to to get around the mechanism that we design and for Builders to collude with proposers typically it's the process is Builders colluding with proposers to avoid any kind of tax imposed by the system or any inefficiency imposed by the system so meth boost I say is is not really Bypass or it's green in that regard because the builders already have close relationships with the relays the relays kind of do the Builder's job of connecting to the validators so there's not really any incentive for Builders as as currently existing today to go around the relay because the relay is essentially like subsidizing the Builder's job for them for the PTC I put it as red because there's kind of no way to enforce that the proposer actually uses the mechanism that we put into the protocol the relay infrastructure would probably still exist they could just Outsource their block production to the relay rather than using the the P2P layer to get their blocks Pepsi I put is yellow because there's a world in which the enforcement of the commitments and the set of commitments that a proposer can make makes it harder for the Builder to circumvent the protocol and in that regard it might be better in terms of bypassability in terms of censorship resistance I put Mev boost as red because there's basically no way to do inclusion lists there's no way to force through transactions in today's relay ecosystem but both PTC and Pepsi are like very very like out of the box compatible with inclusionless and that's the censorship resistant um yeah design that that we're looking forward to in the future yeah the next one is flexibility so in terms of what you can do with the relays I put it as yellow because it seems like there's a relatively large amount of things you can do but since it's out of protocol you can't enforce things like MAV burn you can't enforce things like inclusion lists so the relays can evolve and it's kind of a latency game where the relays are maybe competing with each other maybe um May yeah maybe updating their their software in a closed Source way but in in the same vein they're not able to do anything through the protocol because it's this out of protocol software the PTC flexibility is red because really we're just saying this we're going to take an opinionated stance on what we're going to include in the protocol and it's going to be this commit reveal scheme very similar to map boost and we're just going to kind of make it happen in in the short to medium turn Pepsi on the other hand is is maximally flexible because you're saying these proposers can commit to any arbitrary thing essentially and we want to give them the flexibility to to decide if they commit or if they don't and those those commitments are going to be enforced at the protocol layer okay two more unknown unknowns um from the relay perspective I don't really think there's any unknown unknowns because we're we're already kind of in this regime for PTC we think the spec change would be relatively minimal and and something that we can Envision kind of in today's world Pepsi I put as as red because in in you know I keep calling back to the eigenlayer thing but we're just really not sure what people will commit to we're really not sure how those enforcements um will go it has kind of increased slashing potential um there's just a lot less we know about the potential tail risk events that that this type of system enables lastly Mev burn compatibility this is something that I I mentioned in the heart diagram but the idea here is that in order to do burn you need one of the enshrined versions so you can't use the relays as is existing today you need to do either PTC or Pepsi and to wrap up I thought just kind of like a tldr Vibe check on each of the three I would say that the relay approaches kind of move fast and break things this is like the the Silicon Valley style of we're all gonna to play this game we're gonna compete and may the best you know relay win PTC is more like let's get something in the protocol like the relays aren't very sustainable there's talks about relay funding issues and sustainability around the current existing framework like it doesn't feel like we're in an equilibrium in any way so if we if we decide to go ahead with PTC we could get something in protocol in the next months you know yeah hopefully months um and that's that's the goal of of the middle column the Pepsi version is this is kind of an aesthetic thing it feels correct in terms of protocol being maximally flexible and and maximally um idealistic in some way of of letting the proposers to commit to things but it could be opening Pandora's Box so we're we're unsure what we're getting at there's kind of these tail risk events that I mentioned earlier but it could be the right approach in the long run So yeah thank you very much and that's all [Applause] 