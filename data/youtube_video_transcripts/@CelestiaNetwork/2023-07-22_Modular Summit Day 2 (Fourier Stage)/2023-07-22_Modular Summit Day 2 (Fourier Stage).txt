[Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] thank you [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] thank you [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] please [Music] foreign [Music] thank you [Music] [Music] [Music] thank you [Music] thank you [Music] all right looks like it works we're gonna get started to introduce myself on the Grom from Celestia we'll be your MC today looking at the list here it's looking pretty good first off we're going to talk about roll kid who start a roll kit [Applause] yes roll kit has made some buzz and our first guest uh is Gabriel uh from the roll K team who will speak about unleashing the power of open interfaces Gabe all right test I need a clicker good morning guys I hope you had a great week in Paris so far I'll tell you about the story of roll kit I will go into what rock it is I'll tell you about the motivation of this talk about open interfaces I'll tell you what the interfaces are that roll code integrates with and like the interface and the sequencing API and then wrap it up presenting you the roll kit node and how it interacts with those components so where do we begin um Mustafa wrote in this lazy Ledger Paper about lazy Ledger and one of the things that was still an open question was execution like clients like one of the current limitations of lazy Ledger is that it's not obvious how to build light clients for applications so that clients do not have to download all of the applications messages to let the applications know the application state so how do we solve that John and Mustafa went to Defcon Japan and thought about this problem and came back with the idea that okay it has been realized Roll-Ups it always has um the tree with Ismail thought about and said okay we're going to implement an enshrined settlement layer which will be a roll up itself and other Roll-Ups will be able to settle on this and trying settlement layer and the thing that the stack that they chose it was very close to them was tenement of Cosmos SDK so here we already have the first interface the ABC interface that they had to integrate with and they had to make a decision either we're going to use tender mint and rip out the core the heart the consensus engine or we're going to rewrite it from the bottom up and use a new P2P layout and they chose the happy path because to have a cleaner repository and make it more General and usable so Optimum was born and in the first years Ismail and Thomas were working on it but in the last year we expanded and rebranded the team grew via rocket um we rebranded because we will not only support optimistic roles but in the future ZK Roll-Ups as well um okay so where are we at we have rocket in the middle it's a it creates the blockchain and it talks to the state machines through the ABC interface application blockchain interface and post the data and the headers to the data availability chain and this is us delegating the availability and consensus to the availability layer so we are a roll-up and we already see just with this one interface how much Innovation it can create so the first idea is hey we have an existing tenement chain and we will switch out tenement with rocket and we use the same state machine the same application switch two lines in the go mod and we will have a tenement chain now as a roll up crescented that and have a decks as a roller for example the other thing which is okay I'm not going to use the ABS the Cosmos SDK but the ABCI directly and a Community member uh did that and used fuel to make it ABC compatible and basically created a fuel Sovereign roll up on top of Celestia just by complying with this ABCI interface and now what you can also do is choose a VM on top of the cosmos SDK that's what we're very excited about what Argus is doing Argus is building the World engine on top of roll kit and they use Polaris as far as it's a great VM evm that is built on top of the cosmos SDK and they had some talks and I think there will be another talk today so please check them out um okay now what is the motivation here we already saw that how ABCI creates Innovation through just being an interface you can come be compatible with and it creates an effect of collaboration because now we have a community which has as as the only goal to build you know State machines through the ABCI interface and while complying with an interface you can innovate through different means so let's say we have the datability interface and just because there exists this interface you can now say Okay I want to build another data availability layer to comply with that and build it out the next uh motivation is we will have interoperability and I think IBC is a perfect example for that where different chains can use IBC together to communicate with each other or I can use the different data availabilities layers to switch them out we also have transparency transparency is important because by just understanding that there is an interface and to see how the components talk to each other we can derive functionalities and we will understand what kind of trust assumptions people make how how they interact with each other and it will decrease the learning curve of people getting into this space because they will be able to focus on only one component and we'll be able to understand how these components work together okay um open interfaces make it possible to be future proof If I have a I built my application and the underlying component would change I would need to operate upgrade the whole stack possibly but if I can modulize it I can only upgrade one and specialize it and this will give a developers the ease of that if you develop with such a framework you will you'll be able to pick and choose and it will stay compatible for the future the fifth point that I think is I guess a little bit nuanced and interesting is that the uh when a application let's say in web 2 um looks for funding the let's say it's I don't know Twitter we the the people who fund the application don't really care about the underlying stack infrastructure stack so it is either AWS or Google Cloud but they will use some cloud provider and the same also applies for web3 in web3 when we want to fund an application we are also taking a bet on the underlying ecosystem and on the underlying infrastructure and if you can give the guarantee that hey you're not taking a risk on this ecosystem because you can switch out components in the future you can give much more funding and capital to application developers because they will be able to um you know make it future proof and the the risk is basically eliminated and the last point is lower cost and lower switching costs I will reference the talk by Chris golds about it's a type of Mev and his presentation was at tldr and I'll just make a tldr of this tldr it's basically everbridge can give you two options to access to the L1 the Bridge can uh basically charge you as much as you would be charged as going through the L1 so they have the power the Monopoly to be able to take that so what you have to do is keep switching costs low from one to another so when you um and basically have like a threat of fork so the uh this is like this is the slow game how we introduced it to so when they um that those sequencers or the availability layers or Bridges whatever cannot extract that value because if they do the other components would be able to switch and this would of course result in lower costs for the end user okay so we were in the same Developers get some water sorry guys all right thanks Callum um we were the same developers who did the da interface for the op stack um imagine uh what this now gives as a option for the op stack to give to choose and pick the different data availability layer and we saw the same thing happen with what we did in rocket so a similar data availability interface and we chose to deploy the first solvent roll up on top of Bitcoin and now there is a there was a huge craze and so many l2s and what not are popping up on bitcoin and we the only thing that we did is make Bitcoin comply with this interface and now we like spawned a craze of innovation to see like okay how do we improve Bitcoin like do we want to get like introduce op codes into Bitcoin to verify ZK rollups easier and this is a prime example of how you can spawn Innovation through just an interface so the goal would be to enhance the interface make it even more compatible with other data availability layers one major goal is for all Q2 stay incredibly neutral to Celestia which is important for um the to keep developing the module ecosystem and to allow Developers to create rollups regardless of what data availability layer they want to choose and this will like of course go forth with a more canonical Bitcoin implementation Avail integration and then following more data availabilities layers when they come out and the other part is that the moment we create those datability clients for the availability layers other Frameworks can also just comply from the other side which means that the moment we have a new roll-up framework there will already be like those the availability clients that they can comply with so new roll-up Frameworks can emerge and use those clients for the benefit okay I'll give you a nice thought experiment let's imagine we have two data availability layers and we can now because it's switch and choose we can optimize as a community what we want to prioritize available blob space costs provide latency Economic Security liveness failure well I'll give you an example right um let's say we have two data availability layers and you don't have to pick and choose let's say we have one that prioritizes finality and the other one that prioritizes liveness so you can always have the live at the finality favoring the availability but if that fails we can have the liveness favoring data availability layer pickup and us as a community we can decide how we can interpret and read those bytes the next sequencing the next interface will be the sequencing API or the sequencing interface right when when the modular stack evolves we know we see specialized software and the same we see also with sequencing shared sequencing emerging with Astra espresso Fair block and others and we work together to come up with a common sequencing API with the goal to have a unified interface between all shared sequencers and roll up Frameworks so we can plug and play this component as well and of course this is a collaborative effort so we have to decide it's a community how to come to consensus and it's great that we can work on this together um and of course there's also base right I mean we can use the data availability layer as a shared sequencer now if we think further okay we have the Bitcoin implementation now we have based I mean The Logical conclusion is to make a social experiment on the 20th of April there will be a base Bitcoin roll up and what does it mean based means that I can delegate uh inclusion and ordering to the data availability layer that means if I control ordering I can also control reordering which means I can control Mev I'm leaking Mev to bitcoin and now I feel this will be a very interesting site to see how Bitcoin as a whole will deal with Mev um I'll leave it at that I think that will be a fun social experiment to wrap up we have the rocket no in the middle we can talk to the state machine through the abcr interface we can talk to the sequencer to the sequencing API to the DA layer to the DNA interface and to the bridge to something like IBC and in the middle we have the core the fork Choice rule which we Define how we want to follow the blockchain how do you want to interpret that and how much power do you want to give to those components and the exciting part here why I love working on this is because every single part is influencing Mev extracting Mev or giving back Mev to the community so this is a like it's highly complicated and like nuanced topic that you have to deal with so I encourage everyone to dive more into this research research and to see how you can contribute going forward and this is just the tip of the iceberg I mean the moment we have Plug and Play components we can have crazy uh roll-up variants and designs to optimize especially for your use case and like redundancy and picking multiple da layers or having for example also multiple proving systems I don't know you can have the same data availability bytes and have a optimistic and azk roll up on top a hybrid version so this is another type of research that I encourage everyone to look into because the the design that we created by decoupling components is exploding okay to conclude modular blockchains need open interfaces we have high dependencies between each other so to communicate we have to agree on standards we need to keep switching costs low because we don't want to go into the slow game where one thing can extract the Mev and like keep it but we have to have a credible thread of a fork to go to something else uh Bitcoin will get Mev and the last part is rocket is the open roller framework which will give you the opportunity to integrate with those things those interfaces okay thank you so much um [Applause] I want to [Applause] go back okay I'll still say it um please join the workshop we'll have in two hours uh build a roll up on Roll kit.dev contribute to our GitHub and most importantly ask questions I'll be upstairs with a whiteboard oh my voice um yeah so yeah thank you guys let's roll thank you thank you Gabriel roll kit is a force okay next we're gonna have a panel and I'm reading that the title is build whatever which we'll figure out what that means and the panelists uh include some big heavy hitter names in devrel in this industry [Applause] uh so our guests are gonna be Cami Yaz Henry with David Phelps moderating please welcome our guests for a devrel panel on build whatever because can we not do the thing when I ask a question we just pass it down instead just like talk openly yeah just like let's have a conversation yeah whatever you want to talk about whatever you want we also have a special guest here today Daniel from scroll yeah a little Cameo up here I was gonna just try to act like I was Tina but whatever works yeah you could yeah I think I think you do a fairer firm uh impression uh hi everyone I'm uh I'm David Phelps uh I I am not a devrel I am a founder of a project called showcase where we build Unchained contests that are really used for customer acquisition and retention which means my job is talking to devrels all day because they're really I think the people in the ecosystem who do the acquiring and retention of our users who are devs um so I'd love to talk about that a bit and I think like to start um I I guess an open kind of question I have is like you know what is the responsibility of getting people into this space um versus like what is the responsibility of getting people who are already in the space into your specific project and how do you think about them um I I can start so when it comes to getting people into the space you have to think about it from their developer Persona like are they coming from the gaming sector are they coming from the web 2 sector and then for each one of them you have a different strategy for like onboarding them into your specific platform but for people already in this space who understand those technical um um complexity that come with webtree you definitely have a different strategy for the developer's Journey um for web3 people so it actually depends on the developer Persona that you'll you're targeting so first Celestia I mean we're modular we go for everyone right but like there are priorities obviously yeah yeah I mean it's it depends on what is the priority so right now we really like evm developers um because evm is the biggest uh developer market for web3 um and we also uh looking at Cosmos like we focus on Cosmos um and within that people who want to build in defy or gaming or nfds each one of them would have a specific kind of developer's Journey so that we onboard them with their favorite smart contract language do whatever demo application they want to build so that they know how to like add complexity over time and build their dream products I think generally all the devrels here and all the devils in general see themselves as Educators so I think all of us see our roles as bigger than our companies because people up here I don't really know exactly but we've all worked at different protocols no one works for one project for like 20 years and that's the only thing you care about onboarding too so I think at least for me speaking like I like meeting people where they are and for me getting them onboarded into my specific project matters less just because first and foremost I believe in education I have like certain principles that I stand by so for me it's more important to get people thinking about blockchain and meeting people where they are if it's like they know nothing about it then we go there if they're like I really want to like spin up my own roll up then like we go there yeah as for me I I don't do what you describe I don't have an overarch angle I like educating people but it's a mean to an end and my objective is to get as many people building in my in my ecosystem right so I guess one of the challenges where do you draw the line as to what people need to know and that's what you were describing right you have to Define your user Persona my perception is that especially when you're a small company and we're in a small ecosystem you got to focus so there are some people I just don't talk to I have a bunch of resources to point them and if they want to pick these up I'm happy to help them but the people I go after and I make sure they follow up I tend to draw the line to a pretty small number of people so I tend to focus on specific uh developer and specific developer category um usually defined us usually like we don't do a lot of Outreach we spot people on social media we ask questions and then we follow up with them yeah exactly yeah but I think like you said maybe we have different kind of profiles because before I was in crypto I was an educator I taught cater tall computer science so I just have a different view of what devrel looks like I think yeah I think for any of these right like oftentimes devrels are you know a developer's first Contact in the space with any project um whether that's through YouTube videos or being at a conference like where the accessible piece of our projects and so um I'm happy to have lots of conversations with people that want to build on Stark net or want to build anywhere else right like um I think we have kind of a responsibility to give developers the best experience in the space to keep them around in the space like that is the thing we're still trying to do and if that doesn't mean they land on scroll like no real skin off my back honestly right like I want them to have build the best products they can and so if that means I can make connections to other folks like that's that's great too all right so let's make this a little bit spicier I think everyone's given the nice answer here which is we all want to grow the pie for the ecosystem get more people here but you know there are some L2 Wars going on right now really uh and you know so I'm especially curious we have two great you know L2 if we can call if we even use that term anymore uh devrel's here and you know there's been certain battles between let's say you know scroll versus polygon I think has been you know a pretty it's like the WWE for you know modular people uh to follow on Twitter um so like I am also curious like I mean how do you think about you know differentiation uh with competitors you probably haven't you know easy answer for this one with Cairo which we'll come back to but um like how yeah you know to what degree are you are you really competing with you know others have very similar Tech but maybe different ideologies or different communities you know and different values uh in in and and to what degree is that play a role in in your work and Daniel I'd love to start with you on this one yeah I mean I think you named out a lot of the things that are differentiators right like maybe at the tech level if I'm not talking to someone that's interested in protocol level research stuff they might not be too interested in the difference between zkevm back ends and zero knowledge proofs right and so there's no reason to really get into some of those details if we think that um yeah so again like I view devrel as a social practice not just a technological education thing which education is social too but um at that level um I think you can let how you interact with devs how you engage them how you like see and try to meet their needs be a differentiator right and like other teams do great devrel and it's great to look at them and be like they're supporting their developers better than we are like what are we doing wrong here what can we steal from them to like better support devs um but I don't know maybe that's the too nice of an answer but yeah it's a differentiator for you I mean those are the categories of different but what's what's the specific differentiator yeah I guess it is um but there's a there's another aspect too where it's like you know the background context being like obviously the polygon folks are like brilliant right and the worst engineer at zkevm is like a far better Dev than I am right so like um I think I can talk about like what drew me to scroll which is like this kind of like really true intention of being Community First and like trying to engage with individuals and less of like a transactional relationship with the people that are like maybe building on us right um and maybe that just kind of like comes back to to my interests personally but I think we're all trying to solve a really hard question which is if we're like sticking to certain crypto ethos at least that I believe in is that we're trying to solve like multi-million dollar engineering things like that's the human capital that it takes to have this happen which brings in VCS in the world if there's vzs in the audience I love you but we also don't want corporate capture of these protocols and the technology that we're building right and so um doing our best to make it clear and to like make sure that there's Pathways that say like as we're building scaling solutions for ethereum we have to scale the technology but we also have to scale the community and the ethos and the things that actually make it special or else we'll lose ethereum before we end up getting these billion users right so um the way I approach the phrase differentiation when people be like okay so why should I build on Celestia over ethereum because of 48 44 or um polygon of veil or eigenlayer and one of the biggest differentiators actually drew me in was that we don't have an execution environment and that's so liberating we don't really care what people's execution environments are so if you're coming from the evm world you can build a roll-up on top of Celeste if you're coming from the Solana world you can also build a roll-up on top of Celestia compared to any what you would call competitors which I don't really call competitors but they're all attached to one execution environment which is the evm and they're very limited in the kind of market share they can capture and developer space whereas because we're actually like more like we don't have an execution environment that for me was the biggest differentiator any kind of L1 that comes out right now with a unique execution environment the way I see them is oh that's a cool new roll up on top of Celestia so that's how I approach it can I ask you a question about that I feel like there's like something interesting there where as a product you your your developer audience would seem to like stray a lot from I think these people just building smart contracts right like doing protocol design that needs your product is like a much deeper tier of knowledge and experience and other things and so do you feel like you're you're put in a position to like suggest a DA layer as a solution to things that it's not a solution for or do you just try to mostly hone in on these I guess like maybe the underlying question is like how many Roll-Ups do there need to be and like how do you see that for for like talking to devs about what they're trying to build yeah so the challenge there has been like initially coming into Celestia like my assumption was like you know the whole thing about it was deploy your roll up as easy as deploying a smart contract but to capture most devs in the smart contract space they're like you know they come with their smart contract code they're like they're so excited oh modularity and stuff and then they go to the docs and the first thing they got to do is run a node and then deploy a roll up and they're like wait a second I just want to deploy my smart contracts and play around with things right so that was initially an interesting challenge to try to address because you want to capture two different types of persona that emerged as a property of modular uh ecosystem one it goes um smart contract developers and then there's a new category called that I'm calling roll-up developers and the roll-up devs are what I would consider emerge between the application smart contract devs on the upper layer and core devs on the bottom layer because it allows you to mix strengths from like deploying a roll up and then deploying your smart contract on it but it was a gap in the beginning and how I addressed it was we deploy test net like so I have a big test net driven development strategy for onboarding developers so that the first thing they're if they're interested in an evm we provide them a test first so they can you know deploy their smart contract they're like okay I'm playing around with it and then take them and do the roll up if they're interested to deploy a roll-up which could be like a few lines of code for them that's actually a good story because I remember like six months ago or something I was helping the East Denver team organize like a pre-eat Denver Workshop series and they were like we specifically want to get like people who were maybe thinking about hacking for the first time like pulled all the way in so let's do some really easy beginner workshops for something that they can come to East Denver and do and feel you know feel proud of like yes I did this one thing for the first time and I remembered that was kind of one of my worries when Josh my friend at Celestia was like can we do a Celestia one and I was like well these are people who like maybe have never coded before like have never done anything in crypto coding before so I don't know if they're gonna be able to like deploy their own roll up I don't know if that makes sense and Josh was like no like it's gonna be easy and I was like I don't know like they're people who don't even know like how to set the solidity version of like in the compiler and we ended up doing it and they ended up finding a way to like address it but I do remember at one point in Celestia that was something that I was worried about is like how do you capture the vast majority of developers when the vast majority of developers are not protocol developers but rather app developers so it's good to see how you guys have solved for that in the last couple of months like the answer test Nets like for every new architecture that you want to build like let's say it's uh let's say it's an Emerging Market kind of evm testing uh it kind of you know L1 that wants to become an L2 on top of ethereum stuff you can build an architecture for that we have a thing called the quantum gravity bridge where it allows you to roll up to settle on ethereum or any other settlement layer but take data from Celestia so from for the application that would be like okay that allowed me to have an optimism roll up that is scalable for my application but I don't know if I'm confident enough in running that roll up on a you know in a test environment so you provide them a test step for that architecture for them to see the benefits of scalability otherwise might want to do a sovereign roll-up which what we call um that allows them not like um to pay a fee to the settlement layer and stuff to become sovereign in that sense and people might be interested in that um and see what that architecture is like we provide him a testament for that um so for any kind of specific architecture you we just give them an RPC endpoint and a faucet they don't have to really understand how it got deployed but it allows them to deploy the application and see how easy it is and then it takes them to that next step after which you deploy their own node frankly I mean I'm very biased about like nodes and stuff I love running a node I think everyone should be running a node even a light node or it doesn't matter if it's Celestia or ethereum or any kind of protocol running a node should be really straightforward um and I think like everyone who the developer should do that but also you don't have to maintain one because that's like infrastructure level stuff throughout the dev it's nice to have a something like impure or something else that actually improved your developer experience but even that's even though that's available just for like the practice you should be running a node just to practice just practice for the end of the world like when we all have to run our own nodes so so I think there's a recurring theme here which is you know the tech is getting more complex every year which means the learning curve for new people entering the ecosystem is getting harder and so you know this answer you know create test Nets like create sandboxes for for devs to plan the person I'd really love to hear from here is Henry uh because I think in some ways probably you know starkware has the most uh formidable Tech maybe perhaps we could say in the space and so I'd love to hear how you're facing those challenges of getting people on board to Cairo which even for for deep devs is a uh not not often their background yeah um I mean I agree with you we do have interesting Tech but there are really interesting interesting stuff everywhere and there's a lot of stuff I don't know about like so just we don't have the greatest Tech we have great Tech everyone has a lot of us formidable formidable sorry so yeah so how do you onboard people on on Cairo and how hard it is well I don't know often the question comes like why should I learn Cairo is it difficult and everything and like I have a few one-liner so usually I ask people like hey is solidity the last language you'll ever learn most people say no right because it doesn't make sense like the the the point is convincing them that it makes sense right so it's showing them why it's worth learning a new language versus using something you already know and I think that at the end of the day nobody stays in an ecosystem because there are slightly better tooling or the developer experience is slightly better um people stay for either a deep conviction they have in the fact that the tech is good and powerful or for the community like David said earlier and I fully agree with that so I tend to focus on those stuff right the developer experience is not great not great of course but this is something that most people can overcome and if you explain and you take time to explain then most people will will overcome it so it will overcome it so we just focus on the on what's in the distance and the people around you that's what we tend to do that make sense yeah I mean I think um yeah I feel like starkware is in a pretty cool position right because on the one hand you do have this barrier to entry but it lets you kind of have that style right where you were finding people that are already interested and then you can like pull them in a little bit I think the the quote that I think of is um someone in your team has compared it to the eating glass right and like web3 is full of masochists that like for some reason want to like run up against the bleeding edge of technology and just hit their head against a wall a lot but once you've done that right you've kind of created like a community of people that have gone through this collectively together um fully and like they understand deeply what everyone else is kind of like working with and doing um and it kind of like creates this moat for your project and your product where a liar too right you can take that smart contract like our goal is to like kind of be a boring product in a sense right we want to be as evm compatible as possible so you can take your code from mainnet and put it on scroll but that also means you can take your code off of scroll and throw it anywhere else right and so we really have to focus in on figuring out like what does it need to build that Community when we don't have a shared glass eating ritual but yeah I think the glass eating meme is awful but but it is fun I'll say this and we're at an interesting point now because the dev experience and the user experience is getting much better so we're gonna have to switch a little bit that the way it works and I'm really curious to see how we're gonna get to community who are like super tight eight glass together how they get familiar and nice with people who are not and who are not in the club yet and won't have to smash their head against the wall I think I maybe had a similar experience from my time at fuel because we also had a programming language that we created and we're trying to onboard people too and what I found was kind of the same thing as you is that people who people were masochists and they're like there's barely any documentation it we have like a new release every day so my code breaks like every other day the tooling changes every day like my commands from yesterday don't work but they were into it and they were in The Forum helping other people answer these questions like they kind of became advocates for the community for other developers and I always tell people they're like oh is it going to be hard to learn a new language like am I going to be able to pick this up and I'm like I think all the developers I always tell them like what's the first language you ever learned they're like python or JavaScript or whatever and then I compare it to solidity I'm like how different is it really like it's not that different like just different syntax but everything is pretty much the same and that kind of helps them get to a place where it's like the language itself really isn't the problem and I think Cairo is probably the same thing like the language itself really isn't that hard to learn it's really not that different all of the mental models for how to program are the same you just have to look up is it a is it a colon is it a semicolon is it a comma and like that isn't that hard you just look it up but the real thing is like why are people coming and I feel I think it was like we were building a different VM and that was something really interesting to developers who were trying to look beyond the evm so less about the language I see a lot of mistakes people make when it comes to languages they look at oh we're designing this really really good language that's gonna replace solidity or something like that and that's valid but the thing is the best language never wins in terms of adoption it's always what people most interested in solidity is notorious for not being that great but it still has the largest adoption um like sway versus Cosmos for example both the rest space cosmosm is inferior this way but yet cosmosm dominates the cognos community nobody's like saying like you know all the things about the featured added in sway are much better than in cosmosm and yet Cosmos and dominance and even though it has something so it's always like the way I see it I see I don't see oh python is better than JavaScript solidity is like sway is better than solidity I see where's the market share and I'll just go for that because I'm not going to be there to improve the programming language I'm just going to go for the developers that are interested in the ones that have the largest programming language um adoption yeah this is interesting I mean something I think a lot about with community building is that there's um almost a trade-off between acquisition and retention you know if like users are very easy to acquire they're often very hard to retain because if they were easy for you to acquire they're going to be easy for someone else to acquire as well I think this is what you're getting at with a broken glass right it's like it's very very hard to acquire devs to your ecosystem once they're in they're gonna stay right so it's a hard acquisition often leads to like really good retention and I think that there's almost a trade-off here right because it's like there are things we want Network effects for like languages for languages you want as many people as possible using that because that's what's going to dominate right you want cause you know if Cosmos and solidity like take over it doesn't matter what else comes along if they're dominant in that position on the other hand like within your own project like starknet you might not want to get as many people involved as possible you might just want to get the really really good ones right and so there's different goals at play here right between like you know trying to scale language versus trying to scale a company and I'm yeah I'm just curious how you guys think about retention here and you know of users too yes so when we talk about acquisition versus retention we're looking at a sales funnel right correct right but in devrel you can't look at it as a sales funnel you have to look at it as a cycle like it it's more like a cycle that the developer Journey has to be a continuous cycle so on the uh acquisition part this is what we call like you know developer marketing like how do you get them to notice you like whether it's a hackathon that where they see oh like um your protocol building a hackathon there's a conference um like a Twitter post a blog post and stuff that gets gets their interest so they they go to your documentation and then there's like five stages of that journey and stuff but like basically by the time that there's a retention at the retention model you're basically have uh like you know them so well you know what they're looking for they helped improve your product with feedback and stuff and you're just thinking about developer success how do we give them a grant and stuff because they're like they went through all of that journey and stuff and when they go get a grant or they maybe get an investment to start their startup with that new application they built on your protocol that actually continues the cycle because you can use that success story to pull in new Dev back to the acquisition model so it's actually more of a cycle because keep in mind we're not selling anything that requires you to like buy something and then like you know you're you know you sell it exactly open source code right so that it's much harder to quantify it from a sales point of view rather than from like contributions and like you know projects being built on top of that protocol I mean it almost sounds like we're building you know like building like religions in a way right where it's like you wanna you wanna draw somebody in so that they will then draw more people in as well like that's that's your point here yes crypto and MLM is crypto there's this thing that I use called the orbit model that's used to describe like how we grow communities and I learned about it like sometime last year actually while I was working in crypto and it kind of describes what yeah says where it's not about like how long do they stay in and then when do they leave and how much money did it take to acquire them or how much time but rather a way of looking at it as like orbits where there's an outer orbit where there are people who like are aware of you but don't really care are not involved there's people who are observers sorry these are The Observers and they're people who participate somehow they like like your tweets or they want to show up to your thing they want to show up to your side event and then there's people that are building on you and then finally there's like the core team there's like people who are diehards people who are like The Advocates or whatever program you have who are like fall into that category so instead of looking at it as like acquiring and retention it's like where are they in that map and for a lot of people it's like a Venn diagram of all the different ecosystems we're all observers to most ecosystems were we tend to be like particip in a few and then we're like the core of one or two so right it's not like Winner Takes all some like zero sum but rather how can you get the most people as close to your inner circle as possible yeah and your strategy with that orbit model is basically for for every orbit level you're trying to get us that you're trying to think of a strategy to pull them to the next orbit level until they get to become Fanatics like that's like the closest orbit to the core Dives these people are like your Die Hard fan they see your core devs as Superstars and rock stars um you see a lot in the past especially with ethereum like if you go to any ethereum hackathon a lot of these um hackers when they see a core Dev from the EF or like from the EIP process they look up to them you know so it's like you know they're like they read about them they see them on Twitter they see them on the call and stuff um so these are your Superstars and you know having those Fanatics at that close level there's a lot of strategy you can do for you know keeping them in that orbit like you know inviting them to dinner or like you know special limited edition swag or like hang out with your core devs and stuff compared to people at the farthest orbit were might have signed up to a newsletter and you're just sending them updates until something Peaks their interests that they go into your community and find out more I kind of like thinking about it in terms of acquisition and retention the orbit model I hadn't heard about it but it sounds interesting but in terms of acquisition and retention I feel like it's not exclusively a sales thing right I mean it's about how you get people interested and do they stick around they can go ever somewhere else but I don't know I feel like it makes sense and on my end does should devrel focus on acquisition versus retention I think I think you should be aware of both because doing acquisition without retention make no sense and you can't do retention if you don't have acquisition right um and on our from my perspective uh what really impacts this is mostly like the maturity of your product if the product is really hard to use you have to focus on retention a lot and you mentioned this earlier right and when tension we do a lot of retention through Community stuff like you mentioned because that's what made people stick around in my experience and as far as acquisition go with a little bit of that but um but it's it's not where we spend most of our Focus now we're again in a fun place where this is going to change in the next few weeks I'm super curious to see how this is going to go but how do you quantify it I don't try to quantify it I I like I don't try to quantify it and put numbers on because you mentioned Community for the retention partner in fact Community should be for both like would Community get acquisition and would Community get retention I mean you can use Community for everything and we try to use the like we try to scale through the community everything we do like at the end of the day we don't want to be a central up where everything goes through us we want to empower the community to grow itself right all right and to a certain extent this goes for Tech infrastructure but also for this kind of stuff so I mean we use Community for retention but also for acquisition I look forward to the kpi session we have after this on our metrics here but I think there's also something fun I think that maybe is maybe in this panel unique to scroll but I'm not sure which is that um you know you you mentioned Dev personas a little bit right but like more and more at scroll I've been trying to like evangelize internally internally that it's it's hard to call our devs a singular Community right like we really have to start thinking about the devs that are building on our platform and consuming scroll as a product versus the devs that we want building scroll right like we want people contributing to our core protocol we want people contributing to our ZK circuits and building interesting things on the edges of the ecosystem that blur the line between like core code and stuff that ends up living on an evm right um and for each of these you kind of have to have different tactics and different ways to approach it and really think about like what motivates a someone that's writing Halo 2 circuits in an open source context versus your adaptive it's also like it must be a much smaller Community right I mean the number of people who are able to write this kind of circuit and contribute to scroll like you you don't treat a community with a few tens of people hundreds of people the same way you treat the community with like thousands of people no I think that's kind of the point though right like you know we have 500 000 people in our Discord that's not a community right like that's like it's it's it's something very different right and so I think I want to like let I think most of the time when people in web3 use the word Community they're talking about an audience um and I don't think that's something that we should be deluding the word community and that's why I think like identifying actually what are the sub communities the set of communities that make up the scroll Community lets us really like meet the needs of those devs right whether it's five hardcore people that like really want to learn these circuits really deeply or as people like we have you know we have a decently large devrel team at scroll and we have folks that I think um do general education super super well and they'd be very poorly suited to be devrels for the circuits and by letting on people kind of focus on those things and know what they're good at and know where they need to like push things off to other folks really helps us kind of focus in on that um you mentioned that one sector is smaller than the other I don't think it matters because if you find me one really good core Dev who's external to the team that's worth a lot and my point is not in terms of value it's in terms of in terms of tool right you don't communicate with 10 people the same way you communicate with a thousand right of course like a telegram group yeah because you want to call it the one to end relationship with developers right but like for when it comes to the core protocol there are a lot of programs and strategies you can do to actually align core devs external and internal around your core protocol like the EIP process um which is actually based on ietf standard and python enhancement proposals like Azure process is something that's actually really well done because in the end when you have so many external core devs like in ethereum they call it cat hurting because it's really hard like to get everyone together and stuff but at the end of the day you have a really dedicated Community even though it's small of core devs who actually understand the protocol in and out even if they're not paid or they're like you know an external researcher and stuff they actually care and they're actually building that Community like look at Tim Baker Tim Baco is not necessarily A devro in the traditional sense but he does have that devrel um Persona when he would go on every EIP call but all core devs he would live tweet about what people are saying and then he became the coordinator of the EIP process after that because a lot of people follow it who's saying there was a lot of debate in ethereum there was like hey what's updates on the merge and stuff like that so yeah I mean like even just a smaller Community it's still like that's the community that changes everything related to the protocol um if you look at Gap there's probably like 30 40 people in the world to understand that like as like in an hour right so even though it's smaller these people are super valuable because they're such an important that depth is so important for ethereum you know so so yes I think you're you're not something that I'm really interested in which is attention economy like you know to what degree is important to play into like what you referred to before as rock stars in the ecosystem right like if you get one of those rock stars in the ecosystem that's gonna do a lot of damage for for you so what it came this is this is really for you I think you've been pretty unique in this because you've you've developed I think a Persona as a Creator in the space um like you know which is like you're gen Z devrel right so like people follow you and they know you as a personality not just as a Dev they know you for like where you're going what you're doing and it's like people people love you for that and so yeah and this is what Yaz was saying before too you know to what degree is it is important for for everyone here to be a rock star to what you know or to what degree is important to think about you know attention economy and how you're commanding like this new world we live in of like the Creator economy like where you are a Creator or at least maybe some of your devs are also creators that command wide audiences and people care about on a personal level as well uh this is really a question about brand and brand building I'll start by saying I don't think I it was a purposeful thing I think it just happened over a long period of Time personality was just too strong yeah Vibes were too good and then people were just like feeling it no but I do think that in devrel a lot of your job is to be on the Forefront of Technologies that's like this new thing exists you're one of the first people in the space that knows how to do it so you have to make the video you have to write the dogs like you have to make it possible for everyone else to know how to do it and I think because of that it kind of creates this like image of like rockstarism where it's just like it's just by Nature if you're one of the first people in the space who's able to do something because you're the closest to the devs who made it you're the closest to the people the John Adler's of the world who you can sit down and be like hey how do you do this and then you make it palatable for everyone else um but how important is it honestly people ask me this all the time like teams come up to me and they're like how important is it to have like a Twitter personality be my devrel versus just like you know someone who's a good engineer and I always tell them it's not the most important thing like that's not the thing you should be optimizing for but it is important I think it is important and not just because for your brand but because brands are built around people they're not built necessarily around Tech because like Daniel was saying there might be a point where your Tech is so similar to 10 other companies especially as L2 Wars rage on I think in a year they'll be five to ten more evml twos so it's like if they're all the same the differentiator isn't the tech it's not like the I don't know the like low level stuff that matters but it's how does the people on your team make everyone feel how do you lead a community how do you yeah it's just like how do you make people feel how do people feel about you and how do people trust you I think when you're a devrel it's more about trust and someone asked me they're like I posted a picture of me playing basketball here in Paris and they're like do you ever work at these conferences and then I replied I was like devrel is a long game as a joke but it's true because it's not about like me trying to sell you whatever project I'm working on right this instant and like you have to use it today but it's a relationship that gets built over many months and sometimes many years and it's something that in a year and two years when I'm working on something people are gonna be like oh I trust what she's working on because over the last two years I've seen her be like XYZ adjectives and now I have trust in this person and that's how brands are built I think yeah I mean it feels like a huge shift that we're seeing across all of culture which is that you know brands are now a reflection of the people who work for them rather than people being a reflection of the brand they work for and yeah I'd be curious everyone else is thinking about this question of how important is it to be a Twitter personality um my strategy has always been to make the core Dev the Rockstar so I tried as much as possible to create that culture in ethereum that allowed for core devs to actually become more visible and stuff now it's kind of tricky because core Dev they don't necessarily want to be very public basing and stuff and they don't have to be right but like people should know who the cordoves are so I focus more on actually making the core depth on my team um more visible and there's a lot of ways that we're planning to do that and stuff because I want like you know like an element of trust and who is building this protocol and how like who they are and stuff and to follow you know what you know kind of features we want to implement the trade-offs and stuff when it comes to me personally I mean I've been in the space for six seven years um I don't really care about building a Twitter Persona I think it's important for a lot of people but for me I'm not tweeting that much um I tweet maybe like you know spicy takes every now and then right but um it's not my way of trying to pull in people um to the space I'd rather utilize more like uh like the you know like the protocols Twitter account for that kind of stuff um for me it's yeah I think that's more for like the personal brand and personal brand is super important um but I think like getting people into that space doesn't only have to come from your Twitter ground it can come from different Twitter accounts and that can you know be utilized more yeah I wish I'd lived in a world where personal brand was a phase phrase that didn't exist but it does um I think core tenets of devrel um like values that you just have to have are accessibility and empathy right and I think the Twitter thing can be a double-edged sword where one if people feel like they kind of like know you and they can kind of know your personality it makes them feel very like free to come up to you and start a conversation and tell you about what they're building and ask you questions and kind of breaks down that barrier so for accessibility it's incredible right but I think also if you if your persona and brand pushes too far from like letting you actually be real and empathetic to needs and people come and like start seeing falsity there um that can be an issue as well because I think what it can do is as a devrel can put you to have transactional relationships as opposed to ones that are like more long-lived and more I don't know actually worrying about people as opposed to the transaction um so does personality matter I'm not very good at it so I'll say no no but jokes aside I I don't I'm kind of like you yes I don't like that much making things about me I also but but but I see the power of this and it does you people follow people so you need people leading the pack and then again I think my uh my Approach would be slightly like the same as you shine light on people who can lead other people I would tend to shine light on people in the community people who have interesting life stories people who are doing inspiring stuff people who are accessible and trying to instead of like being the light in the dark that leads people being the catalyzer that makes various lights shine and if possible ideally outside the core team and now it's out the the lead developer because it helps with decentralization and it helps multiply viewpoints all right well this is this is all the time we have I just want to say everyone's being modest in the stage but these actually are four rock stars of the ecosystem so big round of applause for everyone here it's fun okay so that concludes our developer theme we're going to switch gears here and go into gaming as it's a big Hot Topic in the modular stack so to kick things off we're going to invite David Zhu from Argus Morris and David brillenbaugh please welcome to kick off gaming in a fireside chat building and funding on chain games uh yeah check check how's everyone doing today hopefully everyone's doing well um would uh love to kind of start this panel with some great people that I've come to know and research for a little bit and so uh the first kind of question I'd love to for y'all to do is do a quick intro talk about yourselves uh what you do and how you got into gaming hello um nice to meet you all and thanks for coming my name is Morris um I'm the co-founder of primodium which is a currently a fully unchain game that you can play it's live uh before promoting I built a crypto product called uh Critters which was basically a play to earned version of Minecraft unfortunately Microsoft decided to pull the plug on it so we moved to building foliage in games afterwards I'm also figured out a bunch of Theses along the way of building that before building stuff in crypto I was your typical B2B SAS startup founder we went through YC in summer 2019 and have been building our company since then and uh yeah it's about my career background my name is David I run a venture fund called duneventures we invest at the intersection of gaming and Technology we do everything from web3 to VR to Ai and all the above we've been investing for the last three years and yeah awesome thanks for the introductions y'all um so I think today's panel will be a really quick chat about uh things from about online gaming both from the builders and the investors perspective and hopefully we'll have like a casual conversation with some hot takes sprinkled throughout so yeah I'd love to first start off with kind of the general kind of questions we were thinking about um I think the first question is just are on-chain games even made for normal gamers uh for the time being I don't think so and I don't think it'll be for a very well for quite a while at the very least the reason why is just because if you want to get people to play well the main reason in my view to build an on-chain game is because when you have decentralized scarcity well when you have decentralized uh consensus for every in-game action and every in-game asset all of these in-game assets and so on have real value um and and this is something that people in crypto specifically are happy to ascribe real value too it's kind of like Bitcoin and nfts and so on um such that normal players while they can understand that it will take a lot longer to rock and so you know you can launch a game put it on like Reddit or put it on steam or something like that a lot of people will try it but like pretty much nobody will bother sticking uh whereas if you give that to a crypto audience a lot more people will stick and so it's like well at this point if you're trying to launch to a normal audience then and like 99.9 of them churn then you know it's a bit of a Fool's errand at the moment to focus fully on that yeah I think the short answer is is no um but I think the more interesting question is what is a gamer um I think if we look back 15 years ago I think if you had shown mobile games or Candy Crush 2 uh a World of Warcraft Dev he would have told you that's not a game and so the question is how do we Define what a gamer is and does crypto gaming and crypto gaming audience just change or expand the audience definition I think that's that's the more interesting question so I think the short answer is no I think crypto games will be an entirely new audience that's good and so kind of extrapolating from that kind of crypto Gamers being a new audience I think we also you've talked a little about like normal Gamers as well that's kind of how they like the framed the initial for question would love to kind of see what y'all think like in the next Advent of like when online gaming will become a trend or will become some kind of uh category within gaming how will the normal normal gamer ever find an on-chain game will it be through do you think do you think traditional platforms will Embrace this kind of watching game native or will be like entirely new avenues well right now the primary methods of user acquisition for on-chain games and the like is uh Twitter right um and Twitter has normal people on it so it's not involved in quitter sorry that's not involved in uh in crypto and so at that point yeah I think that the traditional channels would be would be that but then again the focus is that do you really need to focus on traditional as in like non-crypto native people to be playing your game and I would argue the answer isn't is is no because um if you look at D5 for example like there's there's clearly enough of a market size of people familiar with uh with crypto participating in it rather than needing to really onboard whoever else that that aren't already familiar um yeah I don't have much data I think um the interesting thing about crypto is you have entirely new viral uh distribution mechanisms you can use right which is like gabelin uses this term like uh free to own I think it is and basically using tokens as a way to onboard users and so I think there's a lot of really novel ways we don't we don't understand today that we'll we'll use to acquire players awesome yeah that makes a lot of sense so kind of moving on I think here's kind of the first kind of question that could lead to some discussion think a little bit about like ugc ugc like user gender content and stuff like that um how do you solve the Dilemma that launching games aim to thrive through composability but players mostly create ugc or use gender content if the game is already thriving such as Minecraft or Roblox yeah so that's that's actually one of the main reasons why I I don't focus on composability for the time being uh like it's something there it's something people can do um we're built on top of mud so people can just add more systems and components if they'd like but that's not the main focus of like why people should play the game so I think I think there are a couple of games out there that like they primarily focus on the part that like oh you can you can play this aspect of the game a little bit differently just because like now you can write specific rule sets between players and so on um but as you said that's not something that players are going to bother doing until like the play the game is much more Advanced uh if you will um and so that's why as I was going back to it you have to really figure out well aside from composability then what kind of features does an on-chain game provide um as as to a in terms of like entertainment for players like what kind of features does it provide to players uh such that they can't get anywhere else so they would come play your own chain game in my view it's uh it's basically an in-game economy that is real so realize in the sense that they are denominated in real value uh like ethereum or usdc or whatever else and that the game is completely decentralized such that the economy isn't really owned by anybody and some something that's very similar to Eve except everything is of real value this aspect of building an in-game economy is a lot harder to build if the game wasn't on chain because of regulatory problems for one we can take more into that and also the other side is um oracles are uh are pretty uh are pretty insecure and so like when you have an entire game entire Logic on chain uh then you can have a much more secure game economy that isn't really uh as vulnerable nothing odd okay sounds good yeah I think we could dig into the regulatory side a little bit from both the Builder and the investor perspective you kind of mentioned a little bit about that um what are some of the kind of regulatory kind of insights that you have both as a game builder yeah also maybe as an investor um so I'm not a lawyer uh that this is not legal advice but this is to the best of my understanding uh as as somebody building the space so um the main reason why most games today don't have don't allow you to cash out like for example if you have a sword or something and you get like 40 coins out of it they don't let you convert that 40 coins into like 40 dollars is because of a thing called money transmission rules uh so basically if if the company is the one that's like you know if your currency in-game has real value and the company is the one that's helping facilitate the transactions of people getting stuff to one another this is only pertaining to the us as well I know we're in France but as a US company so yeah so so you you have this money transmission problem that like if your currency is of real value and you're and you're transferring money from one player to another you'd be considered a money transmitter um the thing about on-chain games is that even if people are transferring assets of real value to players um you are not actually The Entity that's that's that's doing that for them the ethereum network is um so you what you are as a game company is more of a peer-to-peer service provider that you link up you know two people that want to send stuff to one another as opposed to you as a company that's facilitating that now that's not to say that like you you do that and everything's all fine now obviously if there are money laundering that's happening on your platform it doesn't matter if you're not a money transmitter you don't have to register as one um but yeah that that just means that like compared to a normal game um in terms of regulatory stuff there is last there's there's a different architecture that you can do in terms of building the game such that it doesn't touch on these roles as as as much um there's a there's a very good article written by Amy Madison um who is talking about web3 gaming regulatory stuff uh I would recommend you guys look it up um and read through that yeah I don't have much to add I think uh the shortest we just don't know um you know money in games is very complicated legal topic um things like skill skill based gaming Etc have different regulatory regimes depending on which U.S state you're in you need different licenses and opinions uh you know some traditional gaming companies we work with have to get opinions from 50 plus companies 50 plus States and uh and that's just the US and you know doesn't even include massive countries like China and India so um yeah the tldr is that it's gonna be very complicated we don't know what it's going to look like um so we're very early I'll also I'm talking primarily in terms of money transmission because that that's what um pertains most to the type of game that we want to build in terms of having an economy and having people uh trade with one another but there are other considerations like tokens whether or not their Securities and so on and so forth that uh fortunately for us we don't have to think about that too much in terms of the way we're designing our product but uh that is also a big topic that isn't covered here yet absolutely yeah thanks for sharing that kind of perspective um I think we can probably move on to a little bit more of a builder perspective I think um and obviously if there's any kind of investor takes on it as well I think the first question is what is the hook for on-chain gaming as a challenge it can you like can you phrase in a way that does not exist inside the traditional gaming Market yeah so that's going back to what I was uh kind of hammering on again which was just that it's a it's it's the fact that okay so the analogy that I like to give is and Matt Levine and Satoshi has kind of written about this in in better terms and I can put uh but basically if you have Bitcoin running on one person's computer uh it's saying that you know I've got one Bitcoin you've got three Bitcoin and so on it's just one person's computer nobody's gonna bother ascribing real value to that Bitcoin there uh but as soon as you put it on a network and as soon as there is decentralized consensus uh now there's there's provable scarcity of that one Bitcoin and three Bitcoin and so on such that people are happy to ascribe real value to it now whether that real value should be a dollar or thirty thousand dollars is up to debate but the point is because of this product architecture now all of a sudden people are happy you ascribe real Ali to it and and that in my view is the main product Market fit of crypto as a product if you will um and so when you kind of push that out to a bit of a logical extreme you can build and you build a game entirely um on chain in this case basically you get to create a world a story and so on around these numbers that are running on chain so you can build a story around ethereum you can build a story around Bitcoin obviously those already have its own myths and so on that have been built but when you build an online game you get to do that entirely from scratch with your own Resources with your own tokens and so on such a people are happy to ascribe Rio Valley to everything that goes on in there and that is in my view a very different way of looking at it from like you know your traditional games such as if I made a carrot farming app today and it was spawning 10 carats a day and so on nobody would bother ascribing real value to that 10 carats just because it's not on chain it's not on it's not crypto it's not real um and that is the way that people feel it um and so if you kind of looking on chain games like that's the that is the the different feeling that people get uh from from playing something that that is on Chain versus playing something that isn't um we actually see that today then like when we have a test net version of the game um sure it's live and it's a game it's a game that you can play it's just the same as like any other web flash games that you can play from like anywhere else it's just the same but it's not live it's not real because it's not on Main net and it's not like you know the assets aren't real and so that that's my view of like what the difference is are from like auction games and on chain games um if you will yeah I think the only thing I have to yeah I think that's right I think um it's the the addition of values is going to be at least the the initial hook to why people play games right I think value has existed in games for for a long time uh but tends to happen in sort of gray markets uh or dark markets uh when you think about like yield farming on on World of Warcraft or job or whatever it is um those things happen value is transacted but it's very very difficult um Publishers don't like it for things like Regulatory and legal reasons uh they don't want to get money transmitter licenses and so the idea hopefully is that blockchains make it much easier to transmit value across games because the value exists it's a question of unlocking it awesome yeah thanks I think a quick like kind of follow-up there I think there's is like taking the ad like the devil's advocator again the opposite perspective of like do we really need to put everything on chain for example there's some people who say like computationally intensive things don't need to put on chain or um only certain assets especially within like play to earn or game five it's only the tokens or the assets not the actual gameplay yeah in my in my view it's a it's a security uh concept not Securities but security uh in terms of um vulnerabilities and so on and so uh in our case when we were running our previous project basically we had this in-game economy uh this was this is basically it was a Minecraft server um that had tokens that are in there that people can buy and sell different items like it's your typical Minecraft gaming economy sorry Minecraft server economy where Minecraft has a lot of items people buy and sell it to one another so there is a way that you can do it on you can do it off chain which yes it's computation and also it's Minecraft which game right so uh so everything was was computed off chain and then there's an oracle that gives them give them like gives token back to gives tokens back to them based on kind of how uh how how how they've transacted and so on and how much time they played it was a player in implementation so how much you've played Minecraft and so on you would not believe well maybe you could but people were spending a lot of effort and a lot of time every single day just just trying to break the Oracle and then if they do you know they'd start by salami slicing a little bit and then afterwards they like come through and then now they're exploiting like 50 ethereum like at a time that was happening a lot well we were catching most of it but it's like you know even one time it's it's a lot uh and so you know when you have an oracle for for an off chain compute now I I think we can talk we can talk about ZK um Roll-Ups which is probably a little bit different but I'm not um enough of an expert on that as of yet so um but either way like when we were doing an oracle there um is extremely insecure and people were trying to break it all the time and it's just like well if you can try to duplicate a Minecraft diamond like twice you could just try to sell it like so you know if a diamond is like 10 cents now you'll just try to like exploit that uh to get like 500 000 diamonds and yeah so that would be the main reason why I would think most stuff happened to be on chain but obviously there's some breakthroughs here that are making it to that Security will be less of an issue there yeah I I just think of it like a design space I think some people will do like web 2.5 where it's only nfts on chain and some people will do everything on chain and they'll have different benefits and trade-offs um some will be more massive peel the lesson chain probably the more Mass Appeal at least in the short term um but maybe more value you have in more Vibrant Community you have if more things are Unchained so I think it's just a question of the person who's building the game and the design trade-offs absolutely um so yeah now digging kind of like the future of launching games or games in general do you all feel like the web can become a solid platform for games again I know primordium is built on web for now and I think kind of for context for the for the audience like parallel trading card game like they have a downloadable like on Windows oh baby which is a upcoming games has like a desktop client launcher and alluvium also has a downloadable like what are y'all's thoughts so this this may be maybe a bit of a naivete from my end but I think most people have metamasks only in their browser and don't want to bother figuring out like if they download a thing like just how do they connect a web3 wallet to it then maybe you'd have like I don't know email sign up that so on and so forth um for one uh I personally actually like web games a lot but I know I'm definitely in the minority for two these are just client like to pull to put the game on on the web like these are just clients um you can you can build it in unity and then it'd be cross-platform like instantly so well maybe not instantly but either way uh the point is like I think the web is like web is a client is good just because that's where most people do their crypto stuff and so if they have their metamask wallet there it's just it's just the easiest way of doing it in my view and uh yeah if if there is a need to have it be cross-platforms and they're pretty easy ways to like port a game from the browser to to an app and so on yeah I think there's been a lot of development on the browser side from a technical perspective that now enables you to have sort of near native performance in terms of games or 3D graphics on a web browser uh like Chrome and so it's it's no it used to be a technical question I think in terms of can you build performant games on browser and the answer was usually no at least on the higher end um I think that's changing quite quickly and so maybe we'll see a Renaissance of a browser I'm a little bit skeptical but I think it's it's definitely a possibility yeah there's also a phaser that's that's quite good for uh for browser-based games it improved our game performance by a lot awesome well I think that kind of wraps up the Builder side of things I think we're going to dive into the more investor focused um we'll start off with a heater um within the on-chain game Space it says uh we wrote like most people and teams working on on-chain games right now have never had much or any experience in making games are investors supposed to assume they can just learn about game making through trial and error doing I'll take it oh I mean I I I I can comment a thing or two but I'm not an investor so I'll take it then um yeah I I think I differ from most investors in the in the sense that I'm actually quite uninterested in backing insiders um I think if you have game development experience it might be even a negative you have too many biases just like you wouldn't want an Activision Blizzard developer building a mobile game they just wouldn't get it you want some some dude in Finland to build the game uh who had never built games before you need an entirely new kind of open design space to think about on Jane games I think it's been true for most of the history of technology that you want Outsiders for almost anything big I think it's definitely been true in in media and games it's always net new players non-existing players and so um I think it'll tend to be true for launching games where the majority of the really big companies will come from from Outsiders it'll come from probably College dropouts or something like that Tim Sweeney you know built built uh you know a lot of the the architecture for 3D graphics and and now obviously fortnite um and and it's true for mobile games and it's been true for almost every big shift in games so like I'm I'm sort of not uninterested in investing in Insiders yeah my view is the main main thing about younger Founders uh based on all the folks that I know around me um is that by definition if you have two college kids working in the dorm room um by definition it's it's not a defensible product but it is uh especially when they have a new insight that people who didn't live with the technology or so on like just don't understand it nearly as much and so uh when you have when you have a new design space like what David said here I think that's where people that don't otherwise have existing exposure or existing biases would probably shine better than uh than people that have been just been in the space been trying it out um much more yeah and you see it in the decisions they make right I think if you look at the web 2.5 space where it's heavily traditional games with nfts added to it with little Innovation it's mostly existing developers that have built games at previous companies if you look at uh people building on-chain games like primordium or Argus it's it's Net News Founders that have never built games before in our learning um I'd say it's really hard to build games obviously they're the most complex form of media but um it's happened many times before most of the big games that you play were built by modders or by Outsiders and so um yeah I'm sort of not concerned awesome yeah thanks for those answers um here's a kind of a point on investing I think what's the point in investing in infrastructure that powers games or the games themselves ninety percent of the of the value of the market acoustic content always or IP however you want to describe it um but we're at an interesting phase in the market where there's no essentially core infrastructure scalability and so um the question is do you focus on content do you focus on infrastructure I think that that's actually a psyop I think the right answer is actually both you want to build both core infrastructure while you build content it's the hardest fattest startup you can build but it's actually probably the right startup um the most important companies in Media or games tend to build both if you look at sort of epic games they build 3D architecture they build Unreal Engine and then they're also built you know Unreal Tournament and they also built obviously fortnite and so um you look at that same in kind of Niantic building AR games they build core AR infrastructure and they obviously built Pokemon go um and so I think it's going to continue to rhyme true that the best companies are full stock they build core infrastructure world engines or whatever and then they also build content on top of it and the content doc Foods the infrastructure and so it's actually a very important two-way parallel Street where you have a deep understanding of what's enabled by the technology and then you're also building and iterating it through content so you want to own the most valuable part of the stack which is content but you also want to have a deep understanding of our underlying infrastructure which can be a massive or loss leader yeah I don't I don't have too much comments here because I'm not again I'm not investing but uh WID is on chain gaming a different platform such as mobile or VR Gaming or is it a different means of development composability Etc um yeah I think um I think that the interesting question is um is is unchain gaming mostly a monetization Innovation or is it a platform Innovation or distribution Innovation right I think we look at uh I think a good way to think about it is like mobile mobile was a platform Innovation new ways of Distributing to a billion plus users but it was also a monetization innovation in the sense that the apps are created free to play gaming at scale which wasn't really a thing before um and so I think crypto will end up being both where you you obviously have a monetization Innovation using using on-chain payments um but you also maybe have a platform Innovation and so it'll be interesting I think the monetization Innovation is a very obvious pathway that a lot of people are taking both in web 2.5 and on chain games I think um it's more unclear like the more pure on chain games like what the value ad is there we're we're also seeing um building an on-chain game is also a back-end Innovation uh just architecture-wise and so yeah that's that's the way that we're looking at it awesome um so I think we can probably start wrapping up I think the final question that I have is really kind of for both of y'all I was thinking how can we better align as an on-chain game Community to innovate and Advance more effectively but from the investors and Builders perspective uh what do you mean by alignment and this is like like moving like net benefit moving forward open sourcing things that we can do ways that we can contribute so so far I think uh the the community has been been pretty uh nice to everybody uh and so I I'm not quite sure if there's a an issue with alignment for the time being like all the investors are very happily trying out everything and also giving feedback the open source contributors are obviously looking for everybody to develop on their thing and also um trying to get more people on board and so there's hackathons there's Community meetups there's so on and I think I think all of that is uh is coming together quite quite nicely for the time being yeah I'm actually leaving Paris I'm quite optimistic about the on-chain games Community I think if you contrast it with like the web 2.5 space it's very like rugs are probably the right word to use like it's it's very like nft Drop heavy uh feel like I'm getting scammed out of anything and no value being added um and then you look at the on-chain game Space I was at Hacker House on Wednesday and I'd say four or five of the top builders in on-chain gaming we're all together in the same room collab collaborating even though they're all making decision different decisions around architecture and design and all this stuff they're all collaborating all open source um all trying to push forward what we can do technically on the on-chain game Space and so it makes me very very optimistic about where we're headed awesome well thank you all so much this is a great conversation and uh yeah we should be good thanks for coming thank you David and David hey thanks again [Music] thank you [Music] give it a minute or two [Music] thank you [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign foreign [Music] [Music] [Music] foreign [Music] [Music] foreign and for those of you who are uh live streaming tune in uh to deepen our gaming theme we're going to introduce uh the founder and CEO of Argus labs Scott senato to talk the inner game thesis end game for on-chain games please welcome Scott [Applause] awesome thank you cool hello everyone so um today I want to talk about a little bit that I have been very passionate about and it is about thinking about the practical thesis for ancient games um for a long time we've talked about launching games from perspective of really kind of hobbyists right thinking about like what could the future be where like you know the world is on chain however we haven't really thought about how could businesses succeed in an environment of fully ancient games and this is what the intergame thesis is going about it's going to be bad just so oops so just quickly introduce myself my name is Scott I'm the founder of Vargas previously I was co-creator of dark force the first fully on chain uhmrts game built using ZK snarks and before we kind of get on to what the intro game thesis actually is I think it's useful for us to have a quick of background of how ancient games have evolved in the past few years since the phase zero which is around 2020 when we started publishing dark force and creating the first fully on chin games so dark force as some of you might have already known is a fully like a fully on chain space exploration mmrts game on ethereum powered by CK snarks back then not a lot of games really exist not even the current thing that people think about as crypto games and dark force became this Beacon of Hope for a consumer application on ethereum we use the blockchain not only as a way to host nfts or host in-game assets but to also as a way to like you know have user on content that directly ensure operates with the game state that again is fully Unchained as a result we had thousands of players who are playing the game within the first few weeks of launch and flooded a blockchain which back then was called xdi now known as ignosis chain with tens of thousands of transactions burning trillions of units of gas for like executing the game move so this became the big bang for um fully on chain games we created a realization that building an interoperable open and troubles system is powerful even outside of decentralized Finance consumer applications benefit from these open and tropical system by creating an open and user General content layer on top of their game by default but dark force people are able to build their own clients and players can also build platforms on top of the game expanding the design space for things like like Guild systems mercenary systems and so on and so forth for example in Dark Forest people created like like a bounty a bounty marketplace where you can basically pay people to kill another player in the game and they will get rewarded if that player is killed automatically on chain without the need of an off-chain platform uh smart contracts are basically able to read directly from the game state to verify where not a certain player or certain planet have been killed and this became a really powerful realization for a lot of game developers in terms of Designing their game with that open and composibility in mind and the next phase became the Taurus world that right now we are living in um like After the Dark Forest had its success in 2020 a lot of people are continues to be perplexed by fully ancient games and this leads to the birth of the concept of autonomous world with companies like lattice who have been pushing uh like autonomous World libraries like mud and so on and so forth to make it easier for people to build their full yarn chain games content companies like primordium is also building a fully on chain game that uses this autonomous World Concepts to create constraints of physics for digital worlds and again there's also increasing number of people building uh libraries and Frameworks for people that are interested in building uh fully engine games autonomous world like things like mud dojo and some others built by companies like curio and so on and so forth so the key unlock with this this phase of on-chain games is digital physics it's a realization that that open doesn't necessarily mean it's loss it answers the question of how do we handle open and probability and composibility with a game when there is some constraint that is imposed to give you an example here is that you have to contrast uh an autonomous world or like kind of like a digital physics with client-side modding right if you play let's say I don't know GTA 5 with a mod you can make anyone look however you want you can like you know add cheat code that makes you have unlimited amount of money and this is the key thing that we need to kind of understand when we're building fully ancient games is that just because you have an open system and you have an untroppable system that people can contribute to it doesn't mean that the player can do whatever it wants the player the Creator like kind of architect of the worlds are able to set constraints and create some level of digital physics that Define what a player can and cannot do when they are kind of building on top of these games and this is like how it manifests itself like through things like an OP craft and mud where a player agree upon a shared digital physical constraint and again open doesn't mean that the users can do whatever for example in opcraft you can't just like you know spawn a block from thin air you've got to get the block first you need to go to that location to place the block and so on and so forth doesn't mean that like you know be just because a smart contract or other like you know players can can operate with the game or build a client that interprets with the game that they can do uh whatever they want so that's digital physics the next phase is the intergame which us at Argus are presumably excited about so the inter game as is basically just a short for the intuitive games so far when we're thinking about interoperability and composibility in full yanchen games we're talking about it with it in context of like one game talking with like let's say a smart contract that is um like you know talking directly with a smart contract of the game these are kind of the most like rudimentary forms of like intropolitical and tropical and composibility that I that we saw exist in on-chain games however an open and an open system in games doesn't always like need to center around um the games itself as you can see right now like the game industry surprisingly is actually much more siled than our financial system like for example like if you are using like you know like you know again Banks you can still use like things like plaid to integrate um like your you know your banking data with let's say a fintech platform so right now banks are are more open uh in terms of like you know um API and interop then how you know um like a game like um like how a game would for example if you're using uh like you know playing a game using steam you can't even like use your epic account to play uh the game you can't use like you know you can't transfer your item out outside of the game if a game that you deploy a multiplayer multiple game that you Deploy on Steam um wants to migrate off to a different platform you can't carry over those data you would have to just basically have create a new slate of game items and this creates a lot of problem when you want to kind of basically build like a large scale fully engine games with kind of more complicated stakeholders in reality um like you know the game industry is not built only by this like you know independent Studios there are kind of other like you know people like you know in indie game Publishers there's also plot distribution platforms um there's like marketplaces there's is like first party marketplaces there's third-party marketplaces there are console companies and so this leads to the question of like how these different layers of the gaming stakeholders are able to support uh like and communicate with each other and again we have to understand that even though we want this intra open and probable system that doesn't mean that we want to allow everyone to be able to do whatever in the same way let's say like you know with one game you can't just like want to allow another game to spawn millions and hundreds of dollars in your other game in in another another person's game so the concept of physics and like digital physics goes beyond than just a single game it is a constraint that needs to be imposed on like this different interoperability layer within like the game the game publisher and game publisher to like let's say another game publisher and so on and so forth and so this is what the internet of game is it's a realization that interoperably can go Way Beyond the games than just between games between users and content Beyond just working with smart contracts with within our smart contracts and last but not least of course the communication of games between games there's a lot of nuances when kind of like when people want to build this since the dawn of like nfts and like like 2018 when crypto crypto kitties have first came out people have always asked the question right like what does it look like when a game like half and probable game assets across different games a lot of people in the NFD crowd would have come up with this idea that hey like you can bring your sword from World of Warcraft to like Counter-Strike which if you think about it it doesn't really make sense there needs to be some level of constraints and like how do you coordinate these transferable assets or even transferable data or transferable state or transferable identity and this is where like a protocol is needed to kind of resolve that there needs to be some some level of coordination and there's needs to be some level of like physics constraints across these different games for these kind of like cross you know stakeholder interoperability and composability to work and this is like what the world engine is the world engine is basically a shared substrate a shared agreement agreement between different Publishers between different games between different smart contracts to basically have like a like a seamless interoperability across them it's the same way to interpret identity the same way for also and understand assets the same way for us to add limitations over what kind of thing what kind of interoperability is allowed across these different systems and again at the end of the day we want to allow each developers each game Publishers and each you know game studios to have full power over their own game we want to allow them to be able to set this physics constraints the same way that they are able to deal with autonomous worlds and at the end of the day the end game for the world engine is to basically be the TCP for games I know that's a term that is abuse a lot in blockchain everyone wants to be the TCP of everything but that's basically kind of like how I would describe it so now again the world engine is what we're trying to do with it is to become a trojan horse for the inter game era we want to make it as easy as possible for people to build games that are default open right now if you want to build like an open game you want to build an autonomous world you have to chew bullets it's very hard to coordinate it you have to like figure out how to deploy your own rollups how to how to configure your roll ups to be able to like you know bridge out to like other Roll-Ups and communicate with other games um and the world engine is designed to really abstract away all those problems from the lowest level which is like how do you do shared sequencing due to the like highest level to such as building your own game game engine runtime and so on and so forth the rolling engine is designed to be contributor friendly so we are very open with uh like you know with kind of like the idea of people building their own game engine runtimes for example and it's again maximally extensible so that you can fit it to however you want to fit your game and it's also open source right now at Argus labs um so like this is like a star game template if you guys are interested in building a game chart which is like our kind of game Run time that is designed to be open by default uh you can you can use this and by launching a game chart on top of the world engine sequencer you're allowing other game shards to be able to communicate with you through the shared sequencer system and yeah that's all for my talk and thank you for having me [Applause] [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] thank you [Music] [Music] [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign foreign [Music] thank you [Music] [Music] thank you [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign foreign [Music] thank you foreign okay to continue our gaming theme I'd like to introduce North swap shared sequencing for gamers and small raids but all right hey everyone um this is going to be uh this is going to be fun because I literally have two talks and uh way too many slides so it's gonna be a little bit you know a little bit rush but I'm putting ideas out there if you don't understand something don't feel dumb and just come come find me ask it ask about it um so it's like for for small brains but also brains are on crack basically so I hope you follow me in this journey so basically the two things I speak about is um why onshine Games should be roll up should you roll up what's the point and what are the benefits and then um something I'm really excited about Roll-Ups is the possibilities afforded by sequencing to do good things for games and so I'm gonna speak about the design space for decentralized and share sequencing which is um a little bit technical but a little bit you know fun to talk about it's a little bit nerdy like me so uh I hope uh you're feeling exciting so I had um this talk in HTC which I'm basically gonna give you the the the smooth um speed up version like the you know executive summary of that uh also I've done this talk like three three times this week so it's I have that part for it down so I can do it fast uh so I'm working like card game called Xerox Fable it's fully Unchained and it's like magic the Gathering or earthstone it's another development and I want to do this game right so I want to make it decentralized I want to make it such that every can extend it and for this it needs to be on chain and it needs to be I think it's on roll up four a bunch of Reason um this is a gaming track so I probably guess you know why Games should be on chain but if you don't have a talk at Denver that explains my reasons for that so here are some like challenges that uh game face like game may have a lot of action so they need throughput um you probably want to onboard a lot of users so this user probably don't want to pay 10 cents for each of their transactions so a transaction should be free you don't want nft drop to just disrupt your gas so that's gas isolation and you can already see everything your own chain ensures gas is isolation um you want you know actually decentralization you don't want anybody to be able to shut down the game if they press a button that's the goal uh you want costume below because you probably still want to make money from your game uh so you're running a business you might have cost and you have free free transactions So you you're not making money on the on the roll up so costs will be really low as you know if you ask a user to install metamask and this guy is not in crypto he's like okay I want to play this game so I have to install this thing I have to remember these 12 words write them down store them under my underwear and inside my Swiss bank and then I need to log on to my bank and transfer to coinbase and then from coinbase to optimism and it's not gonna work so you need a way to at least let people try the game um for free and then without doing all these shenanigans um then there are a few more challenges these are not super specific to roll up but like my game versus my card game you draw a hand of cards and these cards the opponent cannot see them so it's private information you can't do that in a normal blockchain you need something like zero knowledge proofs I think game should be extensible so that there's a whole software architecture for that and if your game has some Financial aspect like nfts maybe you need trading liquidity so that you can connect the buyers and the sellers and probably you want to have some some kind of people that speculate that they can supply liquidity on your stuff um so my point is like roll ups help with most of these for various reasons uh and really what they do is that they have low cost and they have good integration and security so if you don't know why Roll-Ups are secure I don't have time to explain it to you but just ask me it's a it's a way to make a chain that generate the security of another chain often ethereum what's not obvious that they're cheaper to run than uh their own chain you know that there's like um Cosmos which is a ecosystem of sovereign chains everybody can run their own chain and sort of they all talk to each other um it might not be obvious why running a roll-up is cheaper than to run a custom machine so I'm going to explain that um so there's two reasons why the robot is cheaper one is the security is taken care by the layer one chain so for instance ethereum and so what you need when you run a layer two is something called a sequence or a sequencer is the entity that takes the transaction and makes a block out of it if the sequencer is evil two bad things can happen first if the sequencer just stops uh your game is stopped you roll up stop nothing happens second thing is a sequential does not like you we can just say haha I'm not going to put your transaction in the block that's censorship uh but you know at at least the sequencer cannot steal your so that's uh what you call liveness and super distance uh and uh you know stealing your stuff that's security and so because it's a little bit less crucial you need less stickers you need less people to run the sequencers versus the values and l2s can do something like Risk taking and risk so basically if you want to pay you want to pay the validators if you have a chain if you are a raw up you want to pay the sequencers um the problem if you're a chain is that user of your own token which means you're printing money this is great the problem is like people need to stake your token so they're exposed to a very volatile crypto something so they will want to be paid like 50 return every year um because of the risk and you know you could also print your own token and just spend it so like that's still money um the other thing is you could use an existing tokens you could use ethereum but if you do that people can use ethereum to get returns somewhere else right they could do staking and earn six percent per year so you need to beat that rate if you use something like Risk taking um it means like people are already earning returns by validating ethereum but on top of that they can also validate your node and if they cheat there they'll be slashed also so basically they stack the yield and they stack the responsibilities and because it's additive um you need to pay less less of a yield for that and so that's why Roll-Ups are cheaper um the other thing that's annoying if you're a game developer like myself and you want to launch a roll up is you need to recruit all these sequencers right if you're a big Rob if you're at the optimism arbitrum it's okay you just go to another chain link you go to Alchemy you go to infrar and you say can you run my node can you sign on the website and they're like yes of course you well know this is a good thing for us uh if it's me they're like who the are you  off um and so what I want to do is build a marketplace where everybody's interested in sequencing can come and say hey I'm posting my bond here that is open to be slashed and I will um I will let you contract my services to sequence your roll up and then if I'm a roll-up a game like say that wants to be a roll up then I come and say hey here's my Note software here's how much I will pay you and then you sort of match these two things and you cut a lot of the red tape and so it's easy finally the the final opportunity and this is the bridge the second part of the talk is that like decentralized sequencing is what when you just don't have a single sequencer right so you avoid the the censorship and the liveness issue because if a guy goes offline or if a guy is evil and wants to censor there's always another guy that can do it after decent shared sequencing is when you have decentralized sequencing but also you say well all these sequencers they're not just gonna validate one roll up they're gonna validate many roll ups uh and then if they do that what they can actually do is they can do cross chain transaction that are safe at least they're as safe as the set of sequencers and they're fast they're you know um immediate in fact and so this is not very figured out how to do that there's a there's a big design space where multiple trade-offs and I want to talk a little bit about these trade-offs today but it would be amazing right like you have your own chain with all the benefits of your own chain it doesn't have a lot of cost it's easy to set up and also you can get instantaneous bridging to other chain you can get liquidity you can even split your own game into multiple Roll-Ups I think I have a slide speaking about that layer um and so one of these annual explorers that all your sequencers that you have a few hundreds of them the one of them is picked to propose and all the others sign on it and if you do that well you have 200 signatures on your block and this is less secure than security of ethereum but still more secure than just one random dude saying like hey this is the block and so if you're comfortable with a lower level of security you could use that to do fast Bridges even outside of shared sequencing and you could also do that for a cheap data availabilities data availability is where you put your your blocks so that other people can re-execute them and right now you need to put an ethereum very expensive on something cheaper like Celestia against the a but the cheapest thing you can do is not put it anywhere just on the nodes and if 200 sequencers say I have seen this block and I can give it to you that can be a good enough Insurance like if you're doing a game especially and if it's not the economic part uh it might be a little bit less secure like you say oh I'm gonna roll back the last two hours of World of Warcraft you know it's not going to crush the financial system so you might accept the trade-off there um yeah so white Central sequencing is good for game I just pretty much explain this another thing is that the only way right now to deploy your envelope is to something called the op stack the op stack is as of now not super secure because there's no fault proof which is a system that ensures the security and so in in the meantime like having the signature from the sequencers they couldn't that could improve the security of the of the op stack so you know if you can Implement that fast I would be great so shared sequencing this thing where a bunch of sequencer lets you sequence a bunch of stuff a bunch of Roll-Ups uh what do you do with that you can do game style sharding so if your game is so big that it doesn't even fit in a single roll-up you have so many transactions that it doesn't fit well why not split it in multiple Parts like if you're a RPG and you have a continent uh put to a multiple continents in your game in Game World just put a continent on every roll up or maybe split by system like the financial system is going to be on our roll up that's going to be a little bit more secure and the game system the battle system is going to roll up and then you just do instant transactions between them okay this first part of uh This is Gonna this is gonna be tough uh share sequencing I'm gonna rush through six model of shared sequencing um of decentralized Ensure sequencing and sort of highlight some some trade-offs that you can have there because it's not like so far I painted a Rosy picture like oh we can do instantaneous things that are secure right it's not that easy and I explain why so the basic basic thing you can do is you have a bunch of sequencers you know 300 of them you just pick one every turn to propose and that's it you can do one at a time so like you're number one your number two you're number three or you can just pick randomly um and you know after a while the the probabilities will even out this is actually safe right the thing is um it's safe in the sense of roll ups so you can't really a roll up is really safe to bridge from L1 to L2 all right so from our ethereum to optimism really safe really fast from optimism to ethereum you have to wait seven days to see if nobody says hey there's a problem there this is an easy design it's easy to extend to be shared uh the problem is like if some guy says it's your turn to do a Blog and it doesn't answer well you just miss the block too bad and then there's this thing called Mev where you know people just Arbitrage and stuff and uh it would be good if you could capture some of this profit for the chain and this model doesn't do that and some of them all we'll see later um okay this very simply is just this idea that you have 300 sequencers you want them to sign on the block that's being proposed at least two-thirds and you can do a bunch of things that I already mentioned uh you know data availability for cheap uh low security Bridge uh the thing is though because you need everybody to sign on it uh it limits the set of sequencers so you can you cannot do 10 000 sequencers because uh then the time to just get everybody to know about everybody else's vote would be too long so there's a trade-off there but because we're not using this for security it's kind of fine okay so this is the model we just take the previous one right just a guy proposes and we add uh all the other guys sign on it right this is basically it it's still safe and fast it still is extensible now we get all the extra goodies we get that availability bridging uh Wheels you can also sort of once you see the signature you're like okay my my thing is then like you can have some confidence that this thing is going to be on the chain the problem is like if nobody signs you know like if there's a network split and one third of network is there one third is there and then one other third is like I don't know just nuked by China um like you you can sense this is broken and the question is how do you deal with that like do you let it go do you go into recovery mode where signatures are no longer needed so that's something you need to think about are you still not capturing any mov uh I'm gonna skip that there's some way to mitigate the problem that's what I just said like just go into recovery mode if if you you don't get signatures okay so no shared sequencing simplest model you take the previous model and then what you add on top is like oh instead of adding one roll up now you're validating a bunch of Roll-Ups and you're proposing blocks for all of them and so what you can do now is like oh this transaction wants to do something on chain a and it wants to do something on chain B and you're gonna put these two things and if you lie if you the other sequencer will be like hey you did the thing on chain B but you do thing on chain a uh and you'll get slashed and the block will be invalid so this is super secure it's super fast uh what's the problem well the problem is essentially the red thing there which is you're essentially one huge roll up that just happens to be made of smaller roll ups and so this doesn't scale at all but it can still be useful right because each roll up can be configured completely differently you can have blocks that take different time it can have different tokens to pay the fees it can even be implemented completely differently and it's easy to paralyze because most transactions will not be cross-roll apps you just have one server for the Rob A1 server for Robbie and then you have one server to handle like sort of the coordination of them but still it's not really scalable uh um some idea to make this better is like okay we have a big set and we're really strict about which roll up can be in this set but maybe I'm making my game roll up and I really want to share um I really want to cross the crocheting transaction with optimism so I'm like hey I'm looking for guys to be to to sequence my roll up but only the guys that are sequencing optimism can be included and so let's make it a little bit more permissionless and let's use sometimes do question transaction another model is um and this is this is a decentralized so we're going back to the centralized instead of shared but then we'll do that but shared uh is the meva model and so Mev is this thing where you extract value from the chain from Arbitrage and Oracle backgrounds and a is for auctions and so in this model uh there's no sequence there's no like sequencer that's being selected to propose the block instead it's like people are bidding they say I want to propose the block and I will pay the network to EastEnders whatever three cents to um have this right and um yeah this is this is pretty simple it lets you capture the immediately which is good uh and otherwise that's all the the you know the same characteristic as before the extension to share sequencing is stormy that's the next slide uh and yeah and there's multiple auction models so either you need to bid in advance but then you don't really know about the Meg that you will have like you don't really know how much money you can make so you need to build very little or uh multiple people are bidding but they're including uh model transaction in public and that's sort of annoying because you know people have like Secret Sauce to make money and they don't like when that's revealed um and then you can take that and make it shared so now the model is the the person that's bidding is not only bidding to put a block on a single roll up they're bidding to put a block on rob a b c d for instance but also be on Rob D and E like they can select the set of blocks that they want to bid for so this is a great model I like it because sort of the market decides which roll apps are going to be connected with um cross-chain transactions now there's a hard problem with this which is like these bits can be overlapping and how do you select which pin is winning so I gave an example you got the first uh Auctioneer on the right the first bidder is like okay I'm gonna pay rob a two dollars or a B one dollar over receipt two dollars and then the other guy says I'm gonna pay two dollars as well I'm gonna be three dollars so that's more and then PC one dollar so that's less and the question is which one do you pick because you can accept both at the same time um and if you think try to think about all the Simple Solutions that don't really work like in this case I'm gonna I'm gonna pick the one that pays the most in total but then that's unfair to that so that would be the one on the right but that's unfair to B which is paid less and maybe B is systematically being paid less um and that's a problem and you can't also like like there are a few Solutions and we don't really have time to go into it but it's also important that it's not manipulatable so people like sort of make fake bids to manipulate the thing so I have a strongman solution there but this is like just a you know shower idea basically is that something that's interesting to you just talk to me uh oh we already had the last one so I think we'll make it in time uh amazing uh so so far the model we've had was the model of Atomic execution where I have a transaction that has multiple Parts on multiple Roll-Ups and I want everything to succeed so sort of a classical example is um I want to swap like a token on a chain Bridge the swap token and buy nft with that but if I can't buy the nft then I don't want to do the swap in the first place I don't want to pay fees I don't want to be exposed to volatility another model of crocheting execution is atomic inclusion where I say I want to do this action on channel and I want to do this action on chain B but it's sort of not a causal relationship between the two and atomic inclusion does not guarantee execution does not guarantee success so you say both of these transactions will be included on their chain that's what I guarantee but maybe they will fail there I just guarantee they'll be included at the same time so that's a lot less powerful so you can't do bridging for instance because bridging is typically okay you lock some tokens here and then you mend them on the other side and if you just take that and you include them both of them and uh the Locking transaction fails now you've minted token and they've not been locked on the other side so you've just printed money so that's obviously bad but if if you can do that and there's some ways to use that with escrow models or for some other examples are not bridging it can be useful if that's good enough for you then that's really really easy to to operationalize because basically you just make a new roll up you let it sequence all the cross chain transactions so you say okay this this set of transaction needs to be included this set needs to be included Etc and then all Dr rollups have to follow the single roll up and just obey the rules they say okay this bundle was a transaction for me so I should include it um and so that's pretty simple but it's more it's powerful and uh yeah okay we can skip this um I'll skip this so I'm interested in working on this I know there's all our companies like working on something similar right now and I'm trying to talk to them um my interest is building something that's fully open source everywhere we can deploy permissionlessly make it really easy on the on the small guy essentially because some of the sequencing work is really for the big Roll-Ups I want it to be like hey I'm just two guy in a bedroom we're working a game we want to do our own roll up it shouldn't requires uh it shouldn't require even tens of thousands of dollars just you know a few hundred should be enough uh it should be easy to do just clone a GitHub repo and just do some comments um and there's a lot of people interested in pursuing that vision and I'm looking for people to build with me to use this stuff to comment on it to fund it that kind of stuff um so yeah if you have any kind of Interest or any kind of question if you did not understand anything but you're interested just talk to me and uh yeah that's about it thank you [Applause] yeah as a way to secure the decentralized sequencers and then um do they apply to all of these models how do you see them uh overlapping with the different ways of doing it uh different kinds of designs that you showed yeah so in general there's two roles to just taking one is Sybil resistance so if you're in a select in a set like um round robin or randomly you need staking to make sure that I don't command and like be hey I'm 10 000 sequencers the other role is to prevent misbehavior or discourage I think in a lot of case there's not a lot of safety thing that you really need slashing for but it's good to desensitivize like annoying Behavior like oh I'm not answering you know and so you know encourage liveness discourage censorship resistance and things like that um so dude does it apply to all of the models or I think it mostly apply to all the models like you you probably don't need it in the auction model as long as you ensure that the auctioneer always pay their bit because it might be that they they say like they win the bid but then they don't post the block right or they do something invalid so you want to make sure that in any case they paid what they say they would pay yeah thank you thank you thank you so much for uh I wanted to ask you I feel like like one of the important priority of like shared sequencer is that the uh you know not to be like a bottleneck they skip the execution part it just be you know like the mechanism for ordering but uh you know like when we start talking about like Mev especially like cross-chain Mev like does it mean that in like shared sequencers need to be like protocol aware and actually like execute transactions to understand like where is the immedi yeah I don't think any any design is really gonna ever be uh you don't execute I think you always execute and the the reason for that even if you design something or you don't theoretically execute there's gonna be uh the proposal Builder separation where the proposal is the person that's in the protocol and has the right to propose and the Builder is a person that's actually gonna Supply the the transaction they're just gonna have a off-chain deal if you want with the proposal to do that so that you can extract indeed the movie um I guess it could be possible if you don't have anything which for games that's very very possible that you don't have any miv right uh so that would be possible I see okay thanks I just like wondering if you like I it's not like it's like another you know like bottleneck that we like trying to avoid like going from like layer one to Layer Two is like another like yeah that is a big problem that's why this thing don't scale and the shared one you for Atomic execution you really want execution uh unless you're doing the last model of atomic inclusion there you can literally just do uh sequencing like you said without execution yeah all good all right thank you very much yes nice yes so I just hold this and then talk into here I just hold this and talk into the mic okay great are we good to start okay perfect so yeah let's talk about uh infra for fully launching games I'm sure you heard of a couple hot talks on this but I want to take a slightly different approach by the way how do you uh progress the next slide green button oh there we go and back is okay great yeah so uh let's talk about Keystone which is our uh which is what we recently developed as the the new flagship uh fully on chain game infra and but I'll take a a slightly different approach where we start from the experience that launching games need to or are uniquely poised to create and then the design paradigms that can create those experiences and finally what infra can support those type of design paradigms and for those of you who aren't familiar curio is a crypto native game and infrastructure company we are pretty we're like basically all in on fully launching games and we want to make it happen as soon as possible uh and we're both building games to push forward the game design barriers as well as the infrastructure so yeah that's the that's that will be the structure of the talk first a quick philosophical philosophical detour what do you think makes the world real world feel real is it just the rendering quality or is there something else and there's definitely some an important piece to this which is the social relations we have with other people uh if you think about it humans are social animals from the beginning and the relations we have with other people are very complex there's you can't really Define someone as a pure friend or a pure enemy it's very rare that that happens and we have all kinds of interactions with people um and varying degrees of promises and agreements and contracts that gets that that happened now Virtual Worlds today and games today have a very limited social interactions if you think about it compared to the real world and why is that um let's take a look at a couple of game models today the first genre I would call social 1.0 which is uh purely PVP based and the only social relationship that happens in these games is uh competition so players fight each other this is StarCraft by the way um and you know CS go and OverWatch and these games all belong to this category there's not really any cooperation and the only thing that happens is competition which is very drastically different from The Real World and a lot of player complaints in this category is like one the onboarding costs the barrier to entry is pretty high usually because there's a lot of skills involved and there's not that much social interaction so um and then the next step kind of uh in the in the multiplayer genre with social relations is social 2.0 where most of MMOs are and in this category there are two types of PRI primary interactions one is cooperation within a certain groups such as the alliances defined by the game or competition between the groups so players are no longer just competing on the individual level they're also cooperating within a group and competing between groups but this is still very different from the what we see in the real world which where people can can act you know anywhere between friends and enemies and that's what makes it interesting so what exactly is missing right let's take a specific example from the previous picture which is Rise of Kingdoms um which is ammo style civilization right when in this game let's say the player highlighted the two players highlighted into two different guilds or alliances one to trade with each other let's say want to trade resources uh two types of resources they can't and they also don't need to because the game is defined as competition between guilds right there's there's no need for play-to-player interactions which takes away a lot of the fun and this does not limit to players that happens between guilds guilds as well let's say the two what goes on the top one to sign a peace treaty for some time they can't also they really can't do that they can promise to each other but if one side betrays there's no punishment that will come right and and that equals No Deal so what does the real world do better than games add these in my mind there's two very important components the existence of Highly valuable assets such as your house or anything that makes you really care and interaction and and effective law enforcement that protects people's interactions around these assets right and that's why people you know when you walk to work and and fight your colleague over a a small disagreement you don't have to worry about them taking your house or killing you or something like that because there's a mechanism that protects you from uh from getting those harm but there's no not such thing in Virtual Worlds or games today and I think uh so blockchains actually already figured out half of the the solution which is the existence of digital assets we have digital assets that can get very highly valuable and decentralized so it's protected some people might even say it's more secure than in the real world but there's not really the equivalence of law enforcement right when people make promises to each other there's not an entity that can say okay I will enforce these for you and today's game the problem is that there's not a language in which the the players can tell the game engine what they're agreeing to right so that the game engine can take care of the promises for them so this is like a pretty trivial example where let's say in a grand strategy game I don't know if you can see the text but let's say you have a player named vitalik right next to you and you are equal strength and you're fighting over a couple gold mines and suddenly there's this player called Justin Sun that's approached that approaches both of you and with like a lot of high level Horsemen right and and reasonably you want to stop attacking each other for a bit so that you can both defend against this much stronger player but let's say in two and let's say you agree to do this for three turns but in two turns you decided you just really want the gold mines and you're gonna attack italic anyways what happens well nothing really happens and in fact if everyone does that to vitalik he's going to quit the game and blame the game for not being designed very well so what can make this up right what can allow Justice to come in Virtual Worlds and let players not worry about uh and and worry about breaking promises and actually interact fairly with other people well we designed a system called treaty which is actually very straightforward it's using smart contracts to enforce social contracts in games so basically in MMOs and Grand strategy games players are able to create us create or reuse smart contracts that Define their relations with other people in a way that gets enforced automatically by the blockchain over some trigger condition so what do I mean by this some examples of this include a simple thing like non-aggression packs which we just showed with an example of with vitalik two more complex things like North Atlantic Treaty Organization you can have Guild currencies that on chain Saudi Arabia's can launch to back with their oil you can even have different kinds of governance models that govern how policies get passed and treaties are we think important social building blocks for blockchain for online games is to allow players to exact to do exactly the social interactions that they couldn't do for a long time and this is uniquely suited for blockchain because smart contracts is already exist but they currently don't have a function in much more context Rich worlds like games compared to things like D5 nfts so yeah we were we we built a game out of 3D and we launched this January 2023 so this year and people really enjoyed it people made some wife jokes about this for playing the game too long and and not sleeping while not washing dishes but anyways the game lasted for a week and actually the end result of the game was affected by some player creating a treaty called loan agreement they basically the the ultimate Victor of the game were able to loan troops from another player and to raid the alliance who are already occupy the center of the game the the game which is the flag tile that is the victory condition so that was pretty cool but we ran into some other problem and yeah like I think players really enjoyed it and we have we're so confident about the design space of high high State PVP adding on the social interactions that we're building a real you know real-time World strategy game with high stakes fully on chain and hopefully launched that in a couple months but I think we ran into problems as well which is with uh with regards to Performance right each transaction of our game which wasn't that complicated uh when there were 20 players playing right you you check a couple treaties you check permissions and you you move people you battle it they took anywhere from 20 million gas to a couple hundred million gas right and that's not even because the smart contracts poorly written it's just because the game is so context Rich right you need to perform a lot of logic in one transaction and that's why Polaris were joking that the player the the blue troops which indicate movement in our game don't actually move and the red ones don't actually attack because the moment of intent uh was was just too far from the moment of execution in the games and this is not unique to our games this is a share problem with all fully on chain game Frameworks today right because all the logic is implemented as smart contracts that live on top of the blockchain that use usually evm or starknet execution environments to uh to to run the game right which these systems are not meant to do and you know it's games like Dark Forest kind of avoid this problem by designing their game in a way so that all the actions take really long time and that's what meant to be so you know Dark Forest had energy Rays taking anywhere between 15 minutes to several hours to send which is which work I I would say could potentially works for some players but if you want to get to mass adoption and have a lot of players who don't really care about the blockchain elements and just want new experience come this is very limiting right and so uh specific problems games are very context rich and they have much bigger transaction size uh and and because of that you have some follow-on problems like stacked you deep so you have to do more gets um which you know even just crypto cripples the system and there's a lack of game tick so what that means is let's say if you want to move from point A to point B the intent is moving to point B but the actions are uh you might want to move many times before you get to point B that usually traditional engines take care of using this thing called game tick which is kind of like the sun rising every day or Seasons coming every year automatically and they don't come because someone send a transaction that the Sun would rise today and in the same way you move in the game you take every step that the game engine basically take for you you don't have to send transactions every time and check the permissions every time and check intent which are wasted computation and finally solidity is not it's okay for small dollar scale games but to create a game as complex as some of the even medium stage size games in web 2 it's it's very very complex and there are much better suited languages that and stacks that allow players to develop or allow game developers to develop much faster and more stably so because of all these challenges we thought okay we wanted to preserve the social composability uh we wanted to create a to preserve the social composability aka the ability to create contracts social contracts and the trustlessness of the logic and the assets but also we want to add high performance and great graphics and basically all the ux stuff so game a great game developers can create these fully on chain games that will take us to the next stage right and that's why we created Keystone which is a it's a sovereign game engine framework meant to specifically 100x the performance while preserving some of the best parts of fully on chain games and um I so I should need to switch screen to show the demo but uh you can find this on our Twitter basically we put we spent two weeks putting Warcraft 3 the game on chain and all the movements and battles you see with the dozens of troops moving and attacking at the same time um you know sub second level happen in real time on chain right and all the logic are are on chain so that's like a huge step from what we see today with today's Frameworks including our past framework with pretty so key features of Keystone include its high throughput ECS based game engine ECS just States the the way games uh game data is stored and it supports the the fast game Tech supports classic RTS style games like Age of Empires you can theoretically for for a fairly simple game get to 66 per second which is pretty much you know what all you need right for for a close to like very very real uh type of type of experience it supports historical State querying so you can write treaties such as if something didn't happen for three turns then you know whatever reward that is or punishment this is not about the current state it's about historical State and finally it supports evm based treaties so 3D store use solidity but use pre-compiles to get inside certain States and finally it's written goes so basically I'll talk about the the architecture you have the game logic that lives on the same layer as the evm so it's it's not really fully on-chain but fully in chain um because if you think about it the digital physics for the the game rules don't really change that often just like the evm layer right and what happens is the evm supports all of the social contracts players make with each other in real time whereas the game tick and a lot of defeat like indexer and a lot of other features that blockchains currently don't have with games are added uh in parallel with evm and introoperate with custom stateful pre-compiles and this whole system set all data to Celestia da for anyone to basically observe and be able to challenge the validity and also to ethereum for payouts and the asset related features right and basically there will be a multi-sig of Guardians that that are basically sequencers of this whole thing and the multi-six is able to kick out to vote out anyone who acts maliciously and um and you know based on players input um so yeah and this is this is like we basically open source this by the end of May and uh we're we're in the process of still improving the system uh coming up with uh Keystone V2 probably in the next couple weeks we want to um you know all games obviously built on top we're getting more people who are interested in building uh launching games that are not just hobby projects to build on top um and to really impress people so um yeah definitely welcome all suggestions or questions here um but yeah we think this is the first step toward games that have massively complex social relations like Ready Player One um that also have highly valuable assets this is what we don't have today in in today's virtual games so yeah we're building Keystone V2 we're working on the flagship game which is the high-stick strategy game and ultimately we are uh as I said earlier like the game Space that um on full engine games open is massive and we alone cannot possibly explore given probably five percent of everything and so uh but in order for games voting on Keystone to succeed um we can just host hackathons we don't think that's enough for a game like you have to worry about so many things like art distribution and and capital we will provide all of that for you um as long as yeah yeah like if you talk to us we'll like figure out what's the best way to be on chain for you what's like the tick rate um design like how do you how do you settle data how do you get your initial group of players um we'll even match you with the artist team the r teams we have uh for basically much better looking games than today's launching games uh support you with all of that so you and focus on the mechanism so yeah that's everything um I think we're slightly over but I think we're gonna take some questions foreign [Applause] oh okay you're next hey um great presentation thank you um so I'm just curious in terms of the users for these games right um who do you think this appeals to primarily is it your um hardcore on-chain Gamers like the ones who played Dark Forest or is it more crypto Gamers who are like your axes Etc or probably they're more for speculation or do you think there is a pathway for this to get entirely non-crypto Gamers from outside world mobile or mobile or you know um console based right just curious where is this going from a user standpoint yeah that's a great question so we're solving a very fundamental user need and it's more on the psychological rather than technical side where we're attracting players who are generally very willing to uh who are interested in highly PVP types of games with high stakes uh and and at the same time perhaps are looking for more more complex social interactions in in online games so imagine if you're a competitive DOTA if you're a really good DOTA player but you're not competitive so you're not enough to participate in Esports right but you still really want to play RTS games and play with Stakes with other people right and perhaps win or lose based on your skills and you want to improve your skills so you can perhaps earn more right that's the type of people that we think we're attract we will attract that's obviously in hypothesis right we still need to test it but it's drastically different from today's blockchain or like web 2.5 Gamers who are I would say looking for asset appreciation which is unsustainable it might have a big overlap with today's fully on chain players but not perfectly because I do think a lot of fully launching players today are only interested in the technicals but are not really looking for a good experience I do think the ultimate goal is to get people who for example like Starcraft or like poker right and like basically fit the criteria I described earlier to come right and we need to basically solve a lot of problems before that comes true okay thank you yeah foreign Technical and one social question Let's Do It um my technical question is uh in my mental model of like time it takes change to execute thing like the bottleneck is really um the miracleization like committing to the state um yeah some any form of commitment like how how do you do that um because you managed to bypass this bottleneck by doing something clever or don't you yeah roots or something uh yeah that is the the slow part you're right um and there's kind of different ways to think about it if you need real-time settlement um I don't know every like on a sub second level I think you might just like that that might just have trade-offs with how complex the game can be um and or I'll turn alternatively you can have uh kind of a challenge period after let's say each game lasts for three days or something at the beginning right I I don't think we'll have like very persistent games at the beginning do you have strategic depth in that case you can have a challenge period after the game so that people can run the game over right uh after after this the data is settled and localized and settled um and uh make sure that everything's this this fair and then basically the payout then happens um so I think it really depends on the specific game um setup that you have yeah and also this this is not like this is very early like we haven't thought too much about consensus uh of of like the localized data that's a hard hard problem that I think we're we're thinking about so yeah yeah so yeah yeah if I'm correct is that there's some outcomes that you care about like this player one and maybe these resources shifted after the game right and so the the game nodes will commit to that and then you can sort of challenge that these are not the correct outcome but you don't need to miracleize the whole state with all the health at any point right exactly we or we could immortalize the whole state if it's you know if it's doable yeah yeah yeah it's a really interesting question there uh the other one is like okay so you the premise of your game is well not the premise like one of the big features is you want the smart contract agreement between player but you don't you think that sometimes like the the sort of drama of it is what uh gets gets people hooked you know like the Betrayal and the like um game theory of it like oh I have this agreement with this guy but I need to watch my back because he might betray me and then if but if he does his reputation is going to be ruined and it's like sort of an iterated game thing like don't you think that's worth preserving some of that or how are you think about it no this is a key question so let me just ask you right let's say like your you know in today's corporate world right everyone signs contracts like ndas with each other and like freaking like I don't know whatever other types of contracts but there's still tons of betrayal that happen right and they are basically kind of like loopholes of the the contract that gets exploited and that makes the whole betrayal more interesting so let's say I sign a non-aggression pack with you it doesn't say I can't have a vassal state that can attack you right I can pass the troops to them to attack you right that's something so we're creating these structure for very blatant violations to be impossible but you can think of it basically requires players to think on a higher level and like betray on on a more interesting level if if that makes sense yeah that's interesting that's cool it's definitely like the goal is definitely not to avoid all like avoid any social relationship change in fact it's to encourage that but by freeing a lot of the minute for like to small things to worry about like uh like if I want to do a trade for three level for three turns with you I don't want that to be broken if I'm doing that with like 500 other players but then I can think strategically like oh like maybe what vassal State should I set up over like the next 500 turns to have what kind of XYZ goal right so like you're actually expanding design space of the interaction that are possible because there are things you would never ever do right if you couldn't trust people yes and there are also things such as you know we don't allow we probably won't allow permanent non-aggression packs just for the you know for the reason you mentioned right you know we can have all 3DS time bounded to like 500 seconds or something like that that's also a pretty like straightforward thing to do uh to limit the uh the negative these consequences cool yeah awesome across that [Music] thank you [Music] [Music] [Music] thank you [Music] thank you foreign [Music] [Music] [Music] thank you [Music] [Music] thank you [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign foreign [Music] [Music] [Music] [Music] foreign [Music] thank you [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] [Music] thank you [Music] [Music] [Music] [Music] foreign [Music] thank you [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] thank you thank you [Music] foreign [Music] thank you [Music] [Music] thank you [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] foreign thank you [Music] foreign foreign [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] thank you [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] too much [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] thank you [Music] thank you [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] foreign thank you [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] thank you [Music] [Music] foreign foreign [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] [Music] questions [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] okay so up next we have Michael from block works and Alex from ZK sync for a fireside chat about cksync and ZK technology welcome to Stage guys all right all right thanks everyone for coming Alex it's great to be here with you enjoying the week it's a pleasure all right um so we've only got about 20 minutes I believe and I want you to basically uh I want to get deep in the weeds with you about uh ZK sync and what you're building at ZK stack um maybe we could actually start at a high level you know I've heard you describe ZK stack actually as a set of architectures or Frameworks for people who want to build app chains so maybe we could get into some of the high level and almost like take us back to the room when you were originally ideating some of those decisions for ZK era and then we can get into some of the actual components about uh what makes up the ZK stack sure so what like let's start with what what is the case stack uh we have been focused on ZK sync uh Ezekiel roll up technology for uh several years now we released error errors uh a the first zkvm live on magnet and it's now the the most popular ziki roll up also in ethereum network like where we are the most used L2 by number of trans actions over the last month and third by TBL and we have seen a lot of interest in uh reusing the like a lot of interest from Builders who want to create their own blockchains their own Roll-Ups their own application specific chains and we realized that we should just open again record this what was open source from the beginning but we want to adopt it in the form that makes it easy for anyone to build their own custom chains on ZK technology so ZK stack is a framework it's a modular customizable framework that allows you to take our code and create your own custom ZK chains uh you have a choice of all the different components for example you can choose the different data availability modes it can be a on-chain data availability mode which make your chain azk roll up it can be a validium it can be a mix of both called volition or we call it GK parter you can customize the sequencer you can have you can go for centralized sequencer or a decentralized sequencer which we're working on or you can you might use something entirely different and reach the stack and share it with others you can customize the the way you you deal with like you might maybe you want to use your own token for some things like you have full control over all aspects of the stack but the the great the like really interesting property of ZK stack is it's designed from the beginning to be interoperable with other zika Stacks uh or other like what we call hyper chains uh using a new primitive we call hyper Bridges this is something only possible if you build if you start building in a shared ecosystem there are certain technical properties that you need to enforce in all of these chains have to use the shirts uh shared like base contract on on layer one of the shirt like people call it bridge I don't like the word bridge for for this type of thing but it it must be a shared thing and then you need to use this common standard for uh for passing messages and for for transferring assets and this is really powerful because then the hyper chains can be connected seamlessly and trustlessly in a huge unified liquidity ecosystem which can grow indefinitely just like the internet so that's what hybrid uh Ezekiel second hybridgens are initial in natural that's a really helpful explanation there and I want to get into the Weeds on some of those individual components I'd also actually even like to start a little bit more high level and just get some of the what were some of the original design principles and problems that you were trying to solve for so in talking about the hyper the hyper chain infrastructure it's clear interoperability was a big sort of design decision or um you know something that you prioritize in the beginning like walk us through some of the other original problems that you were trying to solve uh with the ZK stack uh so the we started gksync with the mission to make blockchains Universal accessible for everyone so to scale blockchains while preserving the core values the core properties that make the blockchains valuable like but specifically public permissionless blockchains and I think by now it's very clear that ethereum has crystallized as as the well I mean to me it's uh it's it's my personal take like ethereum is is likely going going to be the settlement layer for most of the internet of value we'll have some Alternatives but like for now they will have to compete with ethereum so we're focusing on ethereum but we're making the theory modular and extensible uh and spreadable um we have been thinking about like what's the end state of this internet of value have to look like like what what must be the the eventual like if we take the certain properties we have to articulate them well what do we want to preserve and then we have to imagine how does this look like on at scale so to we had an intuition which has been guiding us on those properties recently we published something called the ZK credito uh which is a manifested a mission statement of mission philosophy statement for the Ezekiel community in general uh where we articulate very specifically like we want trustlessness we want resilience we want censorship resistance lots of like the system must be accessible affordable by anyone like like and then like the list goes on uh there are I think eight properties there and then all of that has to work at scale meaning the um the the systems have to be able to grow just like the internet so one of the properties is called hyperscalability if you think of the Internet it's impossible to to conceive that all of the world's internet transactions web servers application servers are running on a single server right like or or even on the single Data Center it it just physically on scale right so you you end up with a multi-server multi-computational peripheral like Paradigm which supports parallelism to arbitrary degree where you can add more servers more uh links more data clusters to it and it will just grow and absorb arbitrary number of users an arbitrary number of transactions and apply to the work of blockchains this means you need to plan for a multi-chain world and if if we if we will have multiple chains running in parallel they have to be connected the same way internet services are connected like a simple example is an email you have your address I have matters like Alex at matter Labs you have your address Michael at I don't know Gmail block works or something you can send email from any address on any domain to any other address or any on any other domain in one click it doesn't cost you more in terms of effort time like it will just arrive in a few seconds or or cost the same with web pages and hyperlinks you can go from any domain any page on any domain to any other page in just exactly one click you don't have to to spend more this is the property of hyperpages that we uh aim to preserve there or like this is this has been the core part of our design how do we create a multi-chain system following the vision of like the internet of chains first articulated by Cosmos and then polkadot that actually works that actually gives you trustlessness where you don't have to rely on validators of those bridges on some custodians we will have native assets that follow the bridging Paradigm like the the when we say Bridge uh we think of pieces of land connected by something over water so if you have a bridge between two islands you have assets on one Island you have like a pile of gold there or like a car of gold you can just move it over the bridge and so it will disappear on the first island and will appear on the other Island yeah but that's not how the bridges work today but we have like the inter chain Bridges between layer ones or or Sovereign chains more uh work more like you have to park the car on one side and then you get an IOU and then you go to the other side like we swim over and then you carry over this IU where the assets are actually in custody by someone else which is not native not extensible like you have to trust those guys and so on so like the uh we wanted to preserve this and the only technology which we have today which is capable of doing it at arbitrary scale is Decay their knowledge process validity probes this is what hyper hyper producing hypertensive based on so I really like that example of thinking about how the internet scaled and how it can't all be on one server obviously but like it's actually if you maybe go one layer deeper and look at the interoperability of the current Internet it's there is part of the web which is open and then you start to see like closed off clusters or parts that are slightly less interoperable with other parts of the web an example might be the great firewall of of China right now the internet works over there or like you know government sort of restricted networks or even frankly like Google or Facebook right which are kind of kind of open and interoperable but really are really closed Gardens that want to keep you on their platform so I would love to get a little bit more specific about how you see interoperability across different layer twos because my sort of in hearing you describe what the ZK stack will enable is a bunch of hyper chains that are highly interoperable with one another but it's the plan for that to be interoperable with other layer twos like the uh either other ZK Roll-Ups or like the optimism or arbitrums of the world like how do you see big sort of layer twos interacting with one another going forward that would be an ideal goal for us in ethereum to come up on the standard that allows us to to to be completely interoperable that would unfortunately require some very fundamental changes at the bay at player one protocol so we have to to build some like kind of common bridge that is designed for ZK architectures that is shared across all of us and this is basically enshrined into the uh base architecture maybe one day we'll arrive at that but first we need to experiment we will see this experimentation happening between different ecosystems uh a few of them are are experimenting with this kind of designs with like a local ecosystem of application specific or generic chains more tightly connected than just arbitrary Roll-Ups on ethereum um so we'll see experimentation maybe some standards will crystallize over time got it I want to actually get into some of the different modular components that you were alluding to before so there's data availability um provers sequencers Etc let's try to like close our eyes and put ourselves in the perspective of someone who wants to build their own uh hyper chain on zksync or using the ZK stack how would you how are they kind of thinking about what are the most important components kind of to tackle first and what are some of the options that they're looking at I you like when I'm thinking from a builder perspective right my Builder had on I I'm thinking about properties of a system I want to to get I'm not thinking in terms of components I'm thinking like what do I want from the system uh for me the priorities would be number one security this is something non-negotiable yep like you can't like if you're building a system their security does not matter you probably don't need blockchain you're on blockchain for decentralization and four the Ultimate Security where every user can verify all the transactions so that that is something highly important and the uh here ZK stack shines because we this is one of the most bottle tested Frameworks that we have uh today with over half a billion dollar TBR on ethereum and um being the most used L2 of at least for the last month with 25 million transactions uh almost uh we invested over four million dollars in security Audits and like various orders for all components of the system with top tier Auditors in security contests we are having mechanisms for security defense in depth with uh delayed withdrawals and various other techniques and we're working on on extending this this thing because we the the uh we have to keep in mind that all the roll-up Technologies are still relatively new and there can be bugs and you want multiple layers of Defense even if one layer fails you still want to rely on others for security so that's the security perspective uh the second perspective uh the second property I would want from a uh from a system uh or from from a framework to build my chain on is reliability like highly reliable liveness this is critical for D5 applications this is critical for your users for fully for the Fantastic QX because if your system goes down for like frequently for prolonged period of times you're not going to make it like people will lose trust and the system is not going to work so you really want to take a bottle that's the architecture and this includes also being able to accommodate spikes in activity right like surges in in the demand for transactions like if you're if you're like like let's say we're we're doing like 10 TPS on average uh right now like from organic demand uh but if the capacity was only like 20 TPS a uh any event like a popular nft mint drop or uh some um you know token issue would bring the network to its knees because a lot of people would try to reach it and we've seen it on on other networks like they are not capable of accommodizing this uh the the actual law so the uh this is why we like we we knew that that's going to be um an important factor we did not take guess as the uh the base for the chain we started building our own custom sequencer implemented thrust from the beginning and we're capable of doing over 100 TPS comfortable now and like we're still working on on making things like we're far from optimal can do thousands of TPS but the real lot that shows over 100 right and uh you know I think ZK saying you guys were some of the early ones that really experimented with account abstraction as well which just allows you so much more flexibility so am I correct in assuming that you know creators of these hyper chains they'll be able to specify whatever gas token they want uh the even the users today on GK sync era can specify what they want to pay their gas in WoW or you can you can have like um sponsored transactions for uh certain users like they don't have to need any gas at all right pay from Smart contracts or you can you can delegate uh um you can sponsor transactions from from some accounts like you have full flexibility and we we have a account of section indeed natively implemented at the protocol level so it's not limited to certain types of accounts that you have specifically deployed any metamask wallet any other wallet in ethereum can profit from it and can do gasless transactions or or pay fees in any token yeah I wanna I wanna ask you a couple questions about sort of decentralizing some of the more centralizing parts of L2 design today maybe we can talk a little bit about the sequencer and then also uh the state of the prover how proving is done on zkc sure so sequencer is for some applications they will be happy with centralized sequencer especially for high frequency transactions with lower latency but most blockchain use cases require full decentralization of the entire stack we are very aware of this this is one of the priorities we're working with high priority on decentralizing the sequencer or we will have some results in in in in probably a few months from now um the but it's kind of even a less in like lesser priority than decentralizing the prover paradoxically because you need to be able to at least distribute the prover across many different types of distributed compute systems of doing cloud services or or user systems because otherwise you like if you're approver uh has very high Computing requirements on the hardware you're going to be locked into the most efficient uh Cloud providers and they will have a lot of power over you right it will be able to just shut it down this was very clear to us from from the beginning and uh we uh invested heavily in in GPU optimizations and recently like just this week we announced bujam a new implementation of the proof system that's the orders thank you orders of making it more performant than than what we had before it's one of the fastest proof systems in the world we made joint benchmarks or like a seller Network made benchmarks across multiple different implementations um which we published and uh interesting thing is our implementation of the GPU for this new proof system only requires like 6 to 16 gigabytes of RAM like it's we can bring it down to six like on on by default it's configured for 16. so you can run it on any GPU like on consumer gpus on gaming computers on anywhere in the cloud on all the cloud services like if we're not like previous systems required like hundreds like 500 gigabytes of RAM which will be prohibitively High barrier for entry right so the idea maybe to you know state it for any of like a five-year-old brain like mine is right now if proofs are being done by you know one very large expensive computer in an AWS uh sort of service right now the idea would be to distribute that computation actually to Hardware devices with very low or very you know cheap well right now for existing Ezekiel Roll-Ups they are not done on one one huge computer they're down on many huge computers in parallel which you have to spin up and and shut down uh just in time depending on how your demand fluctuates uh so like it's actually like you you can like if the systems are not efficient enough or or have very tight specialization requirements for Hardware you might just run out of the hardware uh in on on those Cloud providers so like you really want something very generic that can can reuse any type of uh gpus designed for machine learning for for like all the generic kind of computations nice sounds like a really easy problem to solve well uh zero knowledge proofs made a huge uh progress over the last couple of years so like we we have very mature systems now indeed like in all the like you know it took a work of many Brilliant Minds to get to this state all the incremental uh improvements are um like not as as hard as as as the the they used to be like five years ago yeah so um I guess I know we've got to wrap it up here now but uh yeah as you mentioned before to just give ZK uh sync a shout out yeah the tvl has been going up into the right transactions have been going up and to the right like what do you tribute that success to and then give us a little hint of what we should expect in the in the next 12 months anything you can share with the audience all right sure so we we've read it more as a uh responsibility than a success at this stage because we know that those systems experimental people are trying things out uh um we the next step for us would be lowering transaction fees very significantly from where we are today we have two paths for this one is the transaction uh or like a data compression uh which will soon find its way to mainnet and right now we're we're a slightly above optimistic roll ups data compression techniques that the optimistic rollups already use will bring us below them uh and on top of that we will have some really interesting properties resulting from the fact that we use state divs for data availability not transaction inputs like optimistic rollups and like basically all the other ZK AVM projects that I've seen uh which means for certain transaction types we will be hundreds if not thousand times cheaper or in other words you can you will be able to do many more of those transactions like think of Oracle updates you can do 100 Oracle updates for like 100 ticks of the same Oracle update in the same batch and you will only have to pay for one data availability slot because you're constantly updating the same slot and at the end we only have to publish this one build which will open really interesting possibilities for for whole class of applications that's really exciting Alex congratulations on the news and yeah thanks guys for listening sorry the next one is just be Kenny Davis foreign [Music] glimpse into the future of ZK um through ZK sync next up we have Kenny from Manta to talk about uh celestiums and evm specific uh ZK applications all right thank you hey there I guess I'm just gonna take a seat um is there a is there a clicker do I can I get a clicker do I have presentations here oh perfect all right no worries no worries okay so um I'm gonna try to go through these really quickly because I know we're running a little bit uh behind but a very simple explanation here is just you know this is a very fancy car right it's just a it's a Lamborghini and uh this is a Toyota Prius right and so despite being so different in some ways they actually share a lot of similarities and one of the similarities they share here is this company called Auto live um and autoliv is uh it does it manufactures seat belts and so whether you're sitting in a Lamborghini or whether you're sitting in a Toyota Prius you are using an auto live seat belt and the reason is because seat belt manufacturing requires you know compliance adherence regulations making sure people are safe when accidents happen and car companies right Lamborghini they want to build these super luxurious cars Prius Toyota Prius Toyota wants to build the super economical cars that are efficient right and so everyone has what they want to build in mind their vision for a perfect car but that perfect car doesn't require them to build the seat belts from scratch by themselves and so instead they purchase seat belts from autoliv and it's the same in many Industries right so in technology you've got software as a service system integrators that bring together pieces from all over the place and then even Airline seats so Airbus for example they don't build their own Airline seats to just buy manufactured Airline seats and stick them into planes uh and so that's exactly what we're doing uh using zero knowledge and so the problem with zero knowledge is that um it's traditionally extremely complicated for a solidity engineer right so if you're building a decentralized application you're focused on building an nft Marketplace You're Building focused on building some sort of defy lending protocol um you don't know cryptography you may not know rust you may not understand you know math behind elliptic curve cryptography and all that other stuff but that's a problem because ZK right now right and I think in the future of web3 is a critical piece for actually scaling out a huge user base right if you've got um you know 5000 daily active users sure maybe ZK isn't necessarily important but when you try to scale that out to 10 million daily active users like what Duolingo has then all of a sudden now you've got 10 million people making data points on the blockchain every single day and every single data point is fully public and so that becomes a huge issue right because now it becomes a huge surveillance tool and so ZK inevitably is a critical component for decentralized applications but the problem is that there's not really any way for solidity Engineers to easily build these types of applications and so that's where we come in so we offered an environment where we actually abstract away all that complexity on the ZK side and offer it as sdks offer it as interface contracts so that solidity developers can actually integrate these features into their applications without having to build it from scratch themselves so back to the seat belt analogy you don't have to worry about the compliance you don't have to worry about the regulation you don't have to worry about the safety you don't have to worry about the the materials right like it's all there um through our circuits that are abstracted away through the smart contracts and so why is Manta Pacific that perfect environment to build it's because we have lowered and optimized transaction fees transaction costs for ZK uh related transactions on chain and so if you've ever used like a ZK um tool on ethereum it's super expensive especially compared relatively to other applications on eth and so we've taken away some of that cost through using Celestia for um the data availability layer we have modified the op stack through Caldera and we are introducing our Universal circuits um through the ZK side and so we we call it ZK as a service it essentially allows people to build ZK enabled features directly into their applications only using solidity and I'll give an example of this just a second so ZK Shuffle is actually one of those example circuits ZK Shuffle allows um on-chain private shuffling so what that means is like if you're playing a card game right you probably want to um Shuffle the deck but if you Shuffle the deck without any privacy then everyone can see the state of the deck so everyone can see where every card is and that ruins the whole card game and that's why card games on chain don't exist right you might have card games off chain that bet with crypto but you don't have fully on-chained card games but with ZK Shuffle using zero knowledge proofs and hormomorphic encryption you're actually able to achieve that and um yeah if you don't want to interface with the actual contract itself we have sdks as well um and so our SDK allows developers to actually build even faster than just interacting with our contracts ZK Holdem is actually live on our testnet right now and in the past um two days of being live they've run uh about 5 000 over 5000 games now um around the world from people that are actively playing online on chain poker fully on chain poker with each other uh you know you can try it out yourself and yeah so just to kind of give you an example to uh quantify this so we're building a very simple game a very simple game where we Shuffle the deck and then we choose a card from the top and then before we reveal the cards we um we place a bet and we place a bet we reveal the card the higher card wins basically right so it's a pretty simple game but if you were to build this game from scratch on uh any sort of evm machine it would probably take a thousand lines of code by comparison if you use the Manta interface contracts through the universal contracts it's going to take about 150 lines of code and then if you use the SDK itself it's only going to take you 30 lines of code to build that same exact game right so the amount of time and effort that it takes is significantly reduced not just on the coding side but also on the mental Readiness side because you don't have to think about the cryptography learn rust learn circom etc etc so it takes a lot of time or it takes a lot less time and it takes a lot less coding friction uh yeah so we're live um and yeah that's that's that cool I think I have two minutes left any questions all right yes yeah good question so there's there's two phases to this the first phase is actually we're deploying the universal circuits as contracts themselves right and so that's going to enable us to just allow developers to hit the ground running from day one but what we are doing is we're um we're essentially building them into the pre-compiles on the execution layer and so in the future the verification happens directly within the execution layer uh and so that can help with covering costs even further so right now it's just smart contracts and in the future it'll be on the execution layer cool you're using are you using the PSC ZK evm or what store or using your own zkevm or how do you store things oh it's not a it's not a ZK evm it's an OP it's op right so we're not using um any sort of like ZK on the infrastructure level or the scalability side yes yeah so we're using so some of these circuits will be using like sumaphor uh from PSE and then some of these we're actually going to be building in-house okay cool yeah that's that's it thanks yeah let's do it cool thank you so much Kenny really appreciate that and seeing uh ZK technology turn from theoretical to application uh which is extremely exciting um next up we have Ishmael to talk about zero knowledge proofs [Music] um sorry zero knowledge proofs for modular state all right yes thank you thank you very much and I'm guessing this is this is the clicker awesome perfect so the title of this talk is zero knowledge proofs for modular state composability so broadly speaking when we discuss building expressive zero knowledge computation that uses on-chain data we typically discuss it from the landscape of how to build VMS that support different execution languages that run on top of on-chain State one of the things that we often don't discuss is the state itself and what is the data what is the data that an application has access to at the point that is executing a state transition and so to start with broadly I'll I like to make the statement that state machines and modular State machines in particular are constrained by access to State and at the point of execution the existing on-chain data structures that we interact with typically have limitations in the computation that we can run on this data so by on-chain state what we mean typically is all of the blockchain state that's contained for all contracts all account balances and then you can think more broadly as all receipt routes or transaction routes that exist with respect to a single point in time the totality of a block and by extension all previous blocks that are linked to it so when we think about State access on chain in the context of a monolithic infrastructure typically execution storage and access are rather simple so contracts have access to all variables contained in them intuitively as well as to the broader storage tree through running inclusion proofs and they have access to state of other contracts through calling view functions when we think about this in the modular context things get a little bit more out of hand typically execution environments are separate State trees are separate and access is asynchronous and can only occur through bridging and messaging and what this means is that we are fundamentally in the modular context existing and building applications in an environment where computation on state is fundamentally fragmented we have 0.4 second two second block times or even faster in some cases spitting out new version data structures that we are for the most part unable to execute computation over a morass of historical data a massive cross-chain data functionally a large data Lake that we really are unable to verifiably access if you are on a given modular roll-up you likely don't have access to your own historical State at the point that your application is executing State Transitions and even more probably you don't have access to the state of other applications and other modular roll-ups very likely not their current state and even more likely not even their historical so you might say What About Storage proofs what about storage proofs there's a lot that people are talking about storage proofs now but in reality they are really only a slight Improvement what they're good at is saying you have a block header and with respect to some historical index of some historical block number there exists some state in the world tree so the value of memory slot n at address X at block height let's say p minus k equals something that you now want to compute on what this can't let you do is very things that are rather expressive so assume I have a contract on a GameFly application with a canonical bridge to ethereum my dap needs to access as part of its its logic every pudgy Penguins nft owned by a given address in SQL this was off chain it'd be very easy to compete with this select all from pudgy Penguins where owner equals XYZ but as a thought experiment how do we do this on chain and verifiably well for those of you familiar with solidity you would know you have to iterate through every storage slot for that nft and check who the owner is this is a mapping type and it could be an arbitrary size and this is the same principle that applies for computing on most on-chain data there is really unless you are to build a custom side index to store information not really an ability to verifiably compute on top of large sets of on-chain data let alone to extract meaningful properties through the execution of Quarry specific languages or data parallel computation broadly um and so what this leads us to is is a very specific set of parameters under which we can access State data on chain if you want to ask a question like you know variables contained in a given contract you could likely message something back and forth between chains or if it's on the same chain as you a roll-up access that to a function call you can also access what storage proofs in the simplest context a single slot at a single point in time of an arbitrary contract that you have the block header of but what you can't do is very expressive questions searching and computation on data the same way you could do in a web 2 database you can't say what are all of the nfts owned by address x with property y what you can't say is what is the price of eth to USD pair in univ3 over the past n blocks when doing some computation to factor outliers and broadly you can't do volatility either there's really a data constrained and data scarce environment when interacting on chain increasing the expressivity of the VM and now supporting rust or now supporting go we're now supporting another front-end language for the the the the the execution of contracts in on an execution layer doesn't solve these fundamental issues and this is where we get to to what our team at LaGrange does so LaGrange builds what we call ZK mapreduce which is a proprietary proof construction optimized for generating large-scale batch proofs on top of on-chain State concurrently with arbitrary Dynamic data parallel computation it's a lot of words but what that means is you can run mapreduce SQL spark rdd verifiably on top of large amounts of on-chain data and consume the results from your contract now you might say well where does the data come from what makes this interesting is that this is transport layer agnostic so if you have a canonical bridge if there's a cross chain protocol that you've opted into using for your liquidity transfer or if you have some inherent interoperability in the in the modular protocol you use for other instances and other modular modular rollups you can consume all of that state as you would traditionally but you can now add this type of additional computation on top of it to natively inherit the same security assumptions so how to generate a proof is quite straightforward what you knew is you take a block header from The Source chain that you trust from some cross chain protocol and it could even be from the chain you're on where the block.header call and then you specify a range of block numbers and storage slots and then a data parallel computation to run on top of it next all you need is a verification contract on the destination chain or even on the Chain itself that you're that you're Computing on to derive and to verify the result of that execution and why is this valuable it's because it allows you to start treating on chain state from the perspective of an application like the underlying database that it is you can now compute over historical blocks at a scale that was otherwise unprecedented you can compute over multi-train blocks and cross-chain data at a scale that was otherwise unprecedented and you can do so without incurring any additional security assumptions or risk to your protocol so let's go through a couple use cases we talked about the nft one before where you want to select some feature set or some some um property or you want to select entities based on some property so in this example you can compute with our construction directly on top of the on-train data and derive a result that is verifiable with respect to where you want that query to be to be verified you can think of the Second Use case right let's say a dow wants to issue a reward for users who have completed some prerequisite or some preconditions um that are relevant to that Dow's operations in this case what you can do is you can take the on-chain data relevant to that activity you can split it you can map computation to it then you can reduce and you can get a final proof that can leverage that you can use and verify to understand the com this complex query and to be able to run that verifiably on top of on chain state and you know another interesting use case for example if you would like to do a Black Shoals analysis and what you would need for that is volatility you can derive that trustlessly on chain the same way you would from a database your computation can run on top of historical blocks verifiably at a scale of let's say you know one month of ethereum blocks roughly 220 000 blocks and the latency on the computation is is the Minimus at scale since these constructions have some very interesting properties that are otherwise unavailable in um in zero knowledge implementations and so what our proofs have is something that we call fully full updatability and what this means is that portions of our computation in particular data parallel computation that run on top of overlapping or non-overlapping data sets can be composed and combined back together to form new proofs and what this means is that when you think of the constraints on zero knowledge computation historically it is the proving time it is what can I compute in a relevant period of time such that my computation can be verified without incurring or resulting in um a time delay that makes the the computation not useful and so with the updatability and the composability of proofs you can as you compute more leverage the same underlying uh portions of that proof to compose them together to form new ones and so what this does is that scale it minimizes proving time for generating large and expressive computations on data and simultaneously it allows you to scale not through uh expensive recomputation but through but through composition and recombination of proofs and because this can run on overlapping and non-overlapping data sets and portions of proofs can be very quickly and very easily cataloged and recomposed the result is proof generation times that are you know in the orders of magnitude of I think in our paper it's about 1600 times faster than the naive implementations and so for more information on this we'll be doing a talk at SPC uh later this summer we'll be unveiling the details of the construction and the performance of it as well as releasing a test and around this point as well that concludes the talk uh any questions yeah infrastructure before yeah so what we require typically is a prover that is running um that we require approver right and you also require the approver to have have access to correctly indexed data from the training question so that can compute the computation out of circuit and then verify the result then verified in circuit initially we're running approvers ourselves because that makes the the uh the overhead much much less and makes it much easier to integrate with but eventually we'll decentralize the proving infrastructure yeah our construction is proving system agnostic so we can support anything that uses either recursion or folding it's like most most modern proof systems the first implementation implications we have use use plancky 2 and Nova thank you anything else all right well thank you thank everyone foreign [Applause] thank you so much thank you Ishmael for the beautiful talk on the important work LaGrange is doing for composibility and ZK technology next up we have a panel for ZK applications moderated by ashita with Daniel um see Daniel Harry Niraj and lakshman again to talk about novel applications of ZK welcome to the stage thanks guys yes yeah Harry 's a charismatic guy too be funny okay um all right we are going to be talking about some exciting ZK applications um as you may know um dkps have only really become feasible in the last few years and there's been tons of experimentation going around trying to use them to extend and improve on existing technology so specifically we're going to talk about machine learning and a little bit on identity given the expertise of our panelists so we'll start off with the introductions I'm Ishida and I do research in the space hey everybody I'm Daniel and we started a company called modulus we work on zero knowledge machine learning and I'm I'm lakshman I work on Persona where we think about what identity looks like on ethereum in 100 years which turns out to use zero knowledge can each of us or can each of you walk us through the state of ZK Tech right now um and specifically what's been built within and outside of crypto and what's still a work in progress sure yeah I think actually launchman and I agree on maybe a lot of this so I'll make sure to leave some protein to be shared but um kind of from our perspective and modulus the big scary thing about all this investment into ZK and its application to blockchain networks is that it's all focused on proving uh VM operations or EVMS right which kind of makes sense right we want to improve the entire execution of a blockchain network compress that effectively and then bring that on to the network that's doing the verification awesome but it leaves a lot of space for other kinds of kind of specialization right so in the case of modulus we're really excited about machine learning and if you know anything about AI operations you know that it's super repetitive it's highly structured and it has these architectural features that represent a down selection of all possible VM operations right and so I guess our Insight was that potentially if we build a ZK system that's you know purpose oriented for machine learning then we can get much better proving overhead and actually this this is a little bit of what Harry works on as well um but uh yeah so that's kind of our orientation we think that might be true but uh yeah yeah I mean we were we were just talking about this backstage but a very similar observation that um you know what what a zero knowledge proof isn't the ideal there's there's many different parameters you can improve on based on what specifically you're trying to do um and so a lot obviously most attention is on scaling VMS which I think is is a good thing um we think mostly about the zero knowledge side and specifically uh getting things to work in a very resource constrained environment like it's super important for a true zero knowledge application for like the users of the application to not be delegating the proving anywhere else or sending the private information anywhere else so we spent a lot of time thinking about this very specific problem about making these very specific ZK circuits I.E like proving a signature for giving crypto system work on a mobile device and that's let us down like a pretty unique path in terms of in terms of proofing system and stuff like that and um but at the same time it's it's it's super inspiring seeing we we take a lot of inspiration from um all of the stuff happening in the more General General systems because um you know the thing I'm learning I I'm honestly um not a cryptographer by training I've been learning a lot as we go but the the uh the moving pieces of a lot of these systems are kind of very common um and so we're learning a lot just learning like seeing what's being tried and understanding like the different trade-offs between using the different components of these systems which is cool hey harry you want to do a little intro and we're just talking about the state of ZK Tech um so talking about what's been built within and outside of crypto and what's still a work in progress awesome um so yeah I'm Harry I'm one of the co-founders of Jensen we're a machine learning compute protocol which uses proof systems in order to lower the costs of verifying the trading has happened um concretely we use um polynomial interactive article proofs in our verification system which were quite recently popularized by Justin Fowler I think broadly speaking in the kind of wider applied zero knowledge space there's like free Trends which which come to mind um the first would be around the overalls kind of trend away from using elliptic curve cryptography into using more of kind of hash function security so you see that with examples like startnet you also look at things like the kind of emergence of material knowledge um if you're in Virtual machines uh which assist with the The Wider kind of confirmation of a lot of the blocks in the chain itself so you see that with scroll but then most relevantly for us it's about very kind of operation specific forms of zero knowledge um so for example you see with z conduits a ziko library for doing um serial knowledge image classification like zkcnn they've uh they typically use kind of off the shelf um improved systems for that but we think that that can become you know much much faster like maybe free artitudes of magnitude faster uh if you if you specialize the the proof systems so that's a bit about me and then the kind of free areas that I'm excited about thank you so first let's touch on identity I'm excited to see what you say about this so in the Advent of AI do you think it's important to distinguish Bots from humans and how how far can biometric verification take us yeah so I I've you know it's funny I've been having this conversation with a lot of people recently and I I'm I'm in a like strongly opinions weekly held per place of Mind where uh I want long people that tell me I'm wrong but also I I feel it's something feels quite true about what I think right now which is uh I think there's like a conflation between like Ai and Bots which is humans controlling AI um in the sense that you know distinguishing it's it's if if we're distinguishing between like a human having made the signature on some piece of data um as whether or not it's like an AI a human could could stamp a like could stamp a thousand pieces of data and send them to like a bunch of bots and distribute to a bunch of people and I think that's that's the thing I think a lot of people are scared about when they look at like Twitter Bots and like sort of like connect that that problem with sort of like the value of distinguishing Ai and humans and and I think that that's really distinguishing humans from humans with Bots which is which is a which is slightly different um as for like literally whether or not it's good to distinguish humans and AI uh yeah I I I think um you know in in the stuff we're building we think a lot about the importance of exit in our systems we want humans or AI to sort of like be able to shed their old identity and form a new identity like very easily this feels like fundamental to you know some of my personal values and you know some of the old crypto libertarian crypto Anarchist values and um and feels like a good property of a system to have and it's hard to have such a system if every human is only one Identity or is identifiable as a human so I think that's quite challenging I also worry that if the probability of like AI Doom is high then any system that is good at identifying humans is really like a human directory for Bots to kind of or for AI you know like it becomes a tool for control by not necessarily something that humans are using anymore so it's a very it's a very nuanced question I don't know I don't know what the answers are here but I also think that the there narratives are probably a little simplified yeah you guys have anything Todd Harry I've got lots of ads I I think um I think it's important for two reasons um the first one is there will be I reckon in the next nine months a major public outcry about the use of um or I guess the acquisition of other people's identities and it's used to defraud people you know with the state-of-the-art kind of generative voice and vision models it will become essentially impossible to delineate real from fake and a really kind of clean way of you know solving that problem is by somehow proving your humanity and then using that proof to say chunk and sign any calls or or um or kind of you know video that you you create on chain so you can imagine that if you were in like a zoom call at this simultaneous to the zoom call you could be kind of independently confirming that yeah you're on that call it's you it's your private key Etc uh that's the kind of short run benefit of it I think it's just more of a kind of uh security and fraud piece but the longer term Advantage I think is you know we see a Jensen within the next five years the majority of compute being requisitioned will be by machines not people we think that the kind of substrate for artificial general intelligence will be on chain and when that happens you get these kind of very like philosophical almost like Blade Runner style questions about you know who's real and you know who has rights and whatever rights of the kind of autonomous beings out there I think having you know a way to confirm yourself is essentially the same as having a passport or an identity in general and you need that to function in a world where we're kind of coexisting with another artificial species think humans and Bots how do you think we can be collaborative in the future foreign yeah I think it starts with the ability to I think kind of what's already been mentioned but just stamp one as one and one the other has the other right so in some sense what we work at UH on at modulus is the ability for AI processes or AI models or AGI one day potentially uh to stamp their work right um we do the is model kind of process right um I mean the way we do it is using ZK circuits and generating a proof that's verified somewhere but you can imagine uh the analog being like an artist signing their uh their their their their Masterpiece and then giving it to somebody and in that signature being what testifies to the authenticity of that work right in fact we're in the process of taking a generative model in this case it outputs pixel art but and putting it on chain via this like ZK process and embedding it in kind of the nft container right so the the actual machine artist is itself on chain and that's really interesting right because that suddenly this this like AI process is a distinct distinguishable entity and obviously like you can imagine lots of these different agents interacting with each other as a you know a kind of collaborative process on chain because there is that agreed upon immutable uh basis for reality there so that's like One Vision there's lots of other ones um but I try to get very very specific because AI is so expressive and it's so easy to get into the you know AGI conversation I'm still trying to you know get my toast to come out right every time so there's always more Nuance right and more kind of process to get there I'm actually kind of curious to ask ask both of you um and just I mean just to push back because I I think I represent the other perspective like what why fundamentally it is is it good for uh Ai and humans to sort of be distinguished online and and I think one one sort of you know this is more of a feeling than a like a rational like thought but you know uh it seems conceivable that such a delineation creates less empathy between the two agents in the very long term um like I think uh uh I I'm sort of maybe naively envisioning a world you know where there are these more powerful beings out there but you know we're all sort of you know doing the thing and it doesn't matter who's who you know um yeah I'm just I just would like to I'm curious to dig into that a bit more yeah um so for me it fundamentally comes down to liability a good example this would be autonomous driving if you have a car which is self-driving and the car crashes into someone do you think you're as responsible as if you were driving it if the answer is no then at fault which is for me then it follows that when you have a brain machine interface and you know attached to your skull in approximately 10 years and and that interface is using a neural network to you know expand the you know the scope and memory that you have in your mind and also making some decisions for you like maybe it's filtering your emails or something or maybe it's doing even more things are the actions of that model your actions I think the answer is also no so that requires her to be an individual identity for the organic part of your brain and the artificial part of your brain yeah I think the liability point is very concrete but uh maybe the the other orientation to tackle this this precise kind of premise around empathy uh and to be clear I don't think it will be binary right there will be some operations and some ambiguity as a default and then there will be certain kind of properties or processes that are stamped with signatures in the future that's kind of my impression of things uh but I actually think the the the better path to having empathy for one another or making the collaboration more productive is the capacity to delineate bot from human right uh you know you just look at kind of stability Ai and stable diffusion and all this uproar against like I'm an artist I feel like my artwork is being attacked because um you know it's being used to train uh models are much more performant than I can be at a really high scale we'll look at the Hollywood kind of protests right now between the writers and the actors saying I just want you to put in the contract that you're not going to replace me with an llm that's very performant right um I don't think it's at all practical to put the brakes on the you know life-changing technologies that can be very productive for society like llms or generative models but I also think that if we want to build like some uh like this is what I guess blockchain systems are really good at right which is like ground truth right like this is the the reality that in the digital world anyways that we can all we all have to agree to so if we can take advantage of that property and put the things that we want to differentiate or delineate on that ledger then that for me anyways is a more egalitarian way of uh approaching empathy right between humans and agents yeah that makes sense I mean I I I suppose there are also humans whose factors on chain make them see more AI than some AIS right like yeah yeah like I that that's that's a fair point yeah it don't enable gays in this too much and and take the panel away from actual applications of CK but we can talk I'm excited to jam more on this later yeah that's interesting um so we can switch gears and talk about Z camel a little bit um so Daniel and Harry what's sort of the state of machine learning at the moment and the role that trust plays um sure yeah I I guess um you know from my angle um you know modulus we spent a lot of time thinking about costs I'm sure Jensen's actually quite similar in this regard uh in part because to me as a you know we all kind of we're doing AI research before this right um the story of AI is a little bit the story of cost right like what happened in 2009-ish that suddenly deep learning as a method for training models and then generating these like emergent amazing magical outputs uh why is it that 2009 was this pivotal year where Decades of theory something up went into practice uh for me it's gpus and the fact that this this new like Computing form factor became widely accessible and like look you can build a GPU server Farm out of CPUs it would just be significantly more expensive right so we brought the cost of compute down significantly made it much more accessible and in selling these these methods of training models um deep learning right often time zone um gave us the models that we are all like really excited about today right and uh you know for for obviously we can draw parallels to the ZK world and circuits I think that's later in the conversation but maybe I'll just end by saying um it's this it's like super non-obvious right like it's not like if I get more parameters my performance on my model is like linearly better it's this weird step function looking thing where emergent properties just show up as models get bigger and more sophisticated um that doesn't seem to be changing anytime soon so we're just all marching towards more parameters and more compute and more electricity and so forth um I'm sure that like blows up Jensen's Tam into something amazing which is awesome I'm very excited for Harry and Ben but um I think from my angle we're just at the beginning right uh because although that is the dominant Trend there's also the trend of more sophisticated architectures Better Learning models or Better Learning methodologies right quantizing our models to save on electricity and make them more ZK friendly there's all these subfields of research which are emerging as well underneath the current of more compute more compute more performance more attention more money um so yeah AI is uh most likely or almost certainly going to be the most expressive Transformer transformative technology of our time besides maybe crypto but I'm biased yeah I would just Vibe on all of that um for anyone who doesn't know the kind of tour for through the force of uh of deep learning came out in the kind of late 1940s the neural network architectures then during the kind of 50s had its first applied use case predicting whoever for the U.S Navy big like kind of winter in between late 2000s stacking different layers of a neural network and combining it with something uh called stochastic gradient descent so basically the idea that you are comfortable with the model learning in a slightly randomized but more efficient way combined with the compute power that Daniel mentioned caused an explosion in image recognition models so like the classic was like predicting is it a cat or like you know is it like a Muffet or is a dog or is it a muffin and all this kind of like these kind of funny toy examples and then throughout the kind of 2010s we got to the point where around 2018 2019 Transformer models came out Transformer models were basically uh used a concept called attention where you have different heads on the model you could think of like a kind of Hydra of lots of different heads and they're each paying attention to different things in a sentence and then more recently kind of the fusion models came out I think core to to our thinking around the kind of reasoning for using zero knowledge machine learning in this space uh is really what Daniel said it's around cost so just kind of two important things here generally speaking if you throw more gpus at something it gets better the kind of scaling laws do hold we haven't broken them yet um and number two there's enormous kind of margins charged by the cloud oligopolists like AWS and Azure around 70 to 80 percent if you can find a way in a decentralized setting peer-to-peer with no middleman to train these models you essentially increase every dollar spent on training by four to five x the best way to do that in our opinion is to use very lightweight proof systems and then immediately you find yourself in this kind of conversation around your own Ultra machine learning because you don't want to set you don't have lots of people trading the model it gets super expensive a good example of like an attempt and that would have been true bit by a touch and another version of 2016-17 uh which was a really good kind of first step in the direction but it didn't go far enough to getting the overhead down I think we calculated it to be like 6X which get basically adds the margin back on um however with the recent advancements in perths you get that cost way down we anticipate that the cost right now is about 25 uh in Jensen to verifying the the models being trained which makes it you knew that economic substantially better versus the cloud Giants So Daniel could you discuss some of the trade-offs between using um zkp's amongst other Fair like like fhes or something else with varying to ml sure yeah I I guess um um you know ZK has become kind of a dominant narrative within the crypto Zeitgeist because it has this like kind of bizarre property that we call succinctness that makes it a great fit for blockchains um but it's always important to remind ourselves especially here in the ZK world that there are in fact other cryptographic techniques um and they do different things and they're all super exciting right fhe kind of I guess fully homework encryption is most um I guess by default associated with privacy and the ability to operate over data without understanding or having the capacity to understand that data the actual like content of that data um so you know there's a lot of privacy applications on that and of course there's NPC where you want to split up some key or any number of other techniques as well within the the Canon of cryptography right a lot of which is often used in the crypto industry I guess what I'll say on that is um and not to hammer a point constantly but is nonetheless cost right there is always a cost to doing these sophisticated cryptographic operations than to not do them right in fact like when we talk to our early customers the first thing we always ask them is can you get away with not using this right just like don't do any crypto just do it the normal way right um do it centrally are things broken okay then we can talk uh the cryptography right because it's always a premium and so the that that's what I try to focus on just to make things really specific and practical again but certainly um when it comes to the day-to-day work of what it looks like to marry machine learning and ZK we actually still have a lot to learn from these other avenues including fhe right which have been dealing with the intersection for a lot longer just as an academic discipline um so a non-trivial portion of my time is spent talking to academics in those uh kind of disciplines as well how what has been achieved so far as representing ml models as a circuit like are we at the point where we can express really complex models with a lot of parameters or has it's just been pretty much r d early stage um yeah training maybe yeah um with training uh it isn't at a level yet so if we think about the circuit generation or even as Daniel said you know looking at from a fully homomorphic perspective it's just it's just too slow for our use case which is generic training without the kind of privacy component it is just too slow but we do use it for though is inference within training to monitor model loss and that works well um typically because you don't have to you you don't have to a put all the data through you can just put like a batch for um and also because you can typically you know check point loss in a kind of in kind of intervals as opposed to having to do it all the time um and the benefit of course of being able to monitor the model's training uh like learning I guess over time is that things start to look unusual you can then pinpoint kind of audits around the area which looks unusual which makes this the whole system much more secure I think broadly speaking there's a kind of there's always going to be a lag particularly with the fully homomorphic stuff um behind the the kind of state of the art just using a GPU kind of locally with in kind of clear text um but there are definitely use cases for it as a Daniel mentioned I guess laksham what does that look like in like the world of like signatures right which to me right in the machine learning world and probably Harry as well it's like oh signatures should be relatively straightforward um but maybe does your focus on like client and devices change that yeah so there's there's one there's one like um so so one of the really um challenging things that I think is true of a lot of like ZK applications is we need to sort of like adapt sort of the length or the the the numerical Primitives of sort of like whatever whatever we're trying to do to some field some finite field um I think a lot of our challenges have come from doing um trying to do arithmetic in a field that's smaller than the field that of the cryptography we're actually trying to do wrong field arithmetic and this is like really untenable on a on a like a mobile device because the the witness of the ZK circuit becomes really really large um so we've spent a lot of time so so literally like the memory requirements become very very big that's the thing that'll probably heat up your device if you're using like some other other zero knowledge proof stuff and I think um so we spent a lot of time kind of trying to see I think I think broadly have the premise that there are certain crypto systems and signature schemes that'll probably be 80 of signatures that matter matter in the world but then kind of want to be open to like making statements about many different systems so uh We've we're choosing proving systems based on their ability to be agnostic to the underlying field so that we can kind of like change that up as we go um but yeah it's a very it's a very different much tighter and scoped problem but also one with the constraint of you know like memory on a on a mobile device yeah okay very interesting and part of why I ask is because we also struggle with memory now the scale might be a little different right it's like vgpus and AWS and Azure sorry Harry for now um and uh you know it's it gets very expensive very quickly because um you know oftentimes it's like the peak memory consumption in the proving process right and so we need to rent a massive machine even if we don't use all the capabilities of that machine most of the time right and that's just a product of what proving systems often are but that doesn't make any sense when you think about the structure of machine learning compute right which is like generally pretty predictable very consistent um and so the I guess our Insight when we bumped into that initially in our early days of of just like looking at this almost as a scientific curiosity is this proving schema is not appropriately acknowledging the fact that we're down selecting for a more specific kind of problem right um and maybe the two Harry's earlier point about building custom provers which are actually tailor-made for that per like that that specific function I think one of the narratives which will pick up some more gas again in the crypto Zeitgeist if I'm allowed to Hazard a guess here is this idea around specialized proving CMOS or proving systems um and I'm very excited for modulus to put in our kind of spin on that as well as Persona or Jensen but um you know in some sense the proof is in the pudding performance one of those um and I think when y'all see these numbers it's like man for these really intensive applications whether it's training inference for machine learning or for proving anything on a mobile phone on an edge device it makes sense to go down the specialized route and once you do the water is warmer the sky is clearer your spouse is more attractive your kids are more disciplined and you know life's just better so um this panel I think actually represents like one side of this debate um unfortunately we all agree with each other maybe that's not very exciting well there are some there are some other like for I don't know if this is true if if lookups are something you guys think much about but I think in my perception there's like you know this one day magical technology and improving systems like a lookup table basically and at some point it'll be economical to just do it do whatever we want with a lookup table and we're sort of like following the space and we expect at some point that curve will cross the way we're doing things in a very specialized way but also maybe not um I'm also actually on this topic and just because I have like two experts here to ask about it what's it like doing like floating Point arithmetic in uh in a field I mean that's a brilliant question we we spend a lot of time thinking about this where basically we all right for our system more broadly we need reproducibility in in the kind of model training process there's kind of like there's four places it gets ruined the first is machine learning Frameworks typically just aren't reproducible they have Randomness in them obviously like random seeds Etc a bit lower down you then have you know if you're training it in a decentralized system you have all the various devices because we don't use a standardized like piece of Hardware it's lots of different kind of gpus from different manufacturers mainly the video um and then they're all different then thirdly the way the gpus kind of compile the the kind of the code the way they execute them in the kernels are all different so we're actually having to rewrite lots of the kernels ourselves the carrying GPU Engineers to do that so that our runtime does it and then you get even more abstract that you know you can get like a bit Flip or something from like a cosmic ray yeah add all that in and it's a really tough challenge uh we looked a lot of kind of like model quantization of course the issue around the quantization is if you quantize it too much when you just you lose the kind of the signal so to speak you know then if you're plotting kind of lost but it's quantized to like three or like four bits or something like that you're not really it's just like a straight line so uh so yeah it's it's a really really good question the trade-off would be you know if you create hard you know custom Hardware which works really well with it then you come you kind of fall into like a centralized trap which is something that we think about there's a good example of um like internet uh computer protocol they went down this route of like we're gonna make this like one type of Hardware it's going to work really well they call them like canisters whatever to us that's just way too much centralization it also makes you into a hardware company which is you know makes a makes a hard problem even harder I mean I would just Echo everything that Harry just said uh I think the problem is it's acute but it's not as acute on the inference side um you know uh we we get away with a little more thankfully um but maybe just to attack the same question from a different angle you know when we talk to our partners and early customers never do they go how what is your quantization schema is it 8-bit is it like what happens when you like lose a couple digits when you blow up you know your your your floating Point into a finite field um they just go hey does it still work question mark right like how much performance do I lose when I need to prove to the world that I didn't manipulate my algorithm right um so if you want to take it from like the customer Centric approach the the pain point lies in that more Precision less loss usually means more expensive on the proving side right so um we're helped by the fact that again machine learning models are generally a bit squishier so they're a little more tolerant to to these kinds of accuracy losses um but it is very much an ongoing kind of research question the last thing I'll say is we're not the only ones thinking about it right because obviously when you quantize a model um first of all it's a lot more memory efficient and so all these folks working on llms that are eating into like massive like Hardware uh you know there's only three of these machines in the world and so they're super expensive they're really incentive to find ways to bring that memory footprint down and so we're helped by that research interest we're super aligned on that the other thing is when you quantize a model there are a lot more energy efficient as in literally electricity sipped from the wall right and so if you want to run some complex model on embedded Hardware on your smart glasses or on your phone or on your smart watch you know you want to quantize it and do all that so there are a lot of compliments and in the same way that earlier I mentioned you know ZK ml anyways we have a lot to learn from the fhe world because they've already been working with machine learning operations for a while it applies to quantization as well yeah I've had one final point to that again I agree with all of it it's just common thread on this panel but we uh we very much think of like the kind of I guess extensive quantization as being very connected to kind of computational Liberty a good example this was around the Llama model which someone kind of quite quickly quantized when it was leaked and then you got kind of running on a Raspberry Pi and then that's you know there's a decentralization kind of meta point there about you know if you can actually make these things work on consumer Hardware devices in a relatively kind of you know constrained way that does a lot for people's ability to you know number one compute but also then to just build a different kind of models as well so you touched a bit on how expensive it is to build out a decentralized GPU Network specifically for machine learning could you talk about why it was important to stay narrow and just focus on training machine learning models um and why would it would a developer or a team go for a decentralized network that's it potentially expensive potentially um yeah like potentially expensive potentially take a long time to put together yeah sure I think just kind of three points here um so our our kind of our founding my co-founder and IB kind of came from the machine learning world we didn't come from the connect cryptography or or wider crypto world and we Face these problems ourselves so he was doing a PhD my co-founder Ben he had like four gpus under his desk but he was competing with you know papers from Google which were using a thousand gpus and it was just completely kind of you know impossible and then I was an industry where we were trading um fire detection models at large scale and that you know burned a lot of a lot of cash uh so our our uh our thinking was number one it's important to get these costs down and that's only going to get worse with time which is proven true with the recent advances in the llm training on the numbers we're seeing the second point is that if people are going to use this number one they're not going to be crypto people they're going to be machine learning people so immediately they're kind of at odds with you know holding cryptocurrencies and everything that comes with it you have to drop into your workflow usually people will have kind of free clusters they'll have their kind of data cluster or these server training data they'll have their parameter cluster or the store the updated parameters and then another compute cluster which is where the kind of the cache guys burned and we uh we basically drop in for that compute cluster is I should say that for us the it's very expensive to build what we're building but it's expensive to build it and it's because it makes it super cheap to use it and then the benefit will be we anticipate a roughly 75 cost reduction to 80 cost reduction versus using AWS and a really interesting way of thinking about this is if you look at some of the rounds which are happening just now on the market you see you know inflection Ai and stuff like that they raise like over a billion dollars you could easily kind of bet the building that roughly 800 to 900 million of that's going on compute training costs and if you come to someone and say hey we can turn that kind of 900 million into 4.5 billion dollars for you that's Ultra compelling so when we saw that you know a couple of years ago we were like this is the most important thing and finally to your point about staying narrow we think that the problems in training are quite distinct from the problems and inference and we're very big Believers in the kind of Finn versus fat protocol dichotomy so lots of thin protocols makes more sense than one kind of big generic fat protocol for the same way that if you're actually building proof systems it makes sense to have super kind of custom improvers Etc it's just more efficient and effective so for us we thought we're just going to do training it's just going to be the kind of you know neural network training it's not going to be like statistical machine learning models and uh we're going to ignore all calls to sort of do inference and lots of people try to sway US during over the years during the the art boom like the stability AI like generative art and people are like oh you know you should do like art for nfts and stuff like this and we were like no thank you it's interesting because we've also gotten the other direction we focus on inference and we're like we're going to stay narrow I see Jensen out over there and I'm terrified of them so I never want to compete with them and throughout our um you know past year or so that we've existed there's been a lot of like oh why don't you tackle the training problem right why don't you uh look at the opportunity space there um and yes plus one to everything here you mentioned um and then one last thing which is in operation these two kind of steps look quite different I mean that's the truth of it right so even if kind of from the outside it's like ah it's a uniform surface area right just machine learning what does that mean when you actually dive into the pond so to speak there are radically different animals right and it makes sense to have specialized approaches to tackle each problem statement so how big of a problem is it that models like open AIS is behind an API and these developers are just trusting the output that comes out of them right would opening I haven't want to in the future like build in a verification system they're just right now trying to keep this model alive yeah I mean anyone who's a student of History knows that when you trust huge centralized entities with run by small a small number of people with something as important as kind of as what Daniel said you know like what's truth what's ground truth what's real what's not real it ends up getting pretty pretty dark like pretty very pretty pretty quickly so there's that kind of philosophically it's it's not a good idea I'd say number one but number two there's just also a kind of I I kind of I think a lot about the idea that AI is really just like the kind of artificial extension of your own brain and it comes to this idea that if you were if if you have to trust something to read your thoughts you know you read like it gets to a point where you just have to know that it's what it says it is you can't let open AI read your thoughts on like a high bandwidth BMI and just be like cool with yeah sure it's it's probably fine you know it's like Google was the the last like point where you could do that I think because most people what they think versus what they put into Google is probably like 99.9 percent true the result of that hold out there's always that stuff that you might not want to type into Google for various reasons particularly if you're not living in the Western World so you're living in a more oppressive country and you don't want to kind of you know expose yourself to have like different political views Etc if you've got something drilled into your skull and you're you think the wrong fault and then that can result in you being detained or something bad happening as a horror story so it's a very good kind of antidote to the kind of tyranny which will be ushered in if it's kept centralized honestly I'm just learning from you guys right now which is really sweet um I I'm curious um yeah I think I think it's like very clear to me why um from like from the perspective of like a company doing training why training verification is very valuable and it's obvious why from like a a human interacting with open AI interest verification is valuable are do either of these do you perceive that either of these sets of proofs are valuable to have on chain for some future notion of a chain or is it sufficient for them to just be kind of like move you know just being distributed on the internet I mean my thinking I've got lots of thoughts on that I think like a kind of slightly less like glamorous one is actually just for like tax purposes and so if you if you um if you sell your your likeness which everybody here will do you know in um in uh I don't know if anyone's watched the movie Her of Jacqueline Phoenix there's a scene in it when he's talking to um the the machine which is playing by Scarlett Johansson and she's having kind of like 5 000 simultaneous conversations that you know the fact that we are constrained is people to one Zoo meeting I think is like pretty bad number one is like dislike Zoom meetings intensely but number two because you know you could do a week's worth of Zoom meetings if you just license out your likeness and it did all these things however you you you um you and then you yourself could be in you know the real you could be inserted in zoo meetings but when you you think about you know how if you would say an actor or something and you make your likeness available to a studio how can you prove that you were in the model you know how can you prove that it's in your training date how can you prove that actually they produced it with you and having the receipts for that on chain even if they're shielded in some ways very useful that's like a boring example tax but it has way more kind of like there's way more philosophical reasons I think it's a very very general or cool generalization of that which is that chains are really auditable so if you want it seen and understood by everyone then that's uh it's a good place to put it yeah yeah I mean I I spend a lot of time thinking about um like why are we in crypto uh right like earnestly right like like there's a lot about crypto that is not great um a lot of grifters a lot of fraudsters a lot of ups and downs emotionally it's it's just like taxing uh my parents are not proud of me because they don't know what I'm doing um you know like I think a lot of us in this room can just like walk away and go into AI there's like more money there right now right more excitement more intention uh and for me it comes down to something very simple which is I like it here like I like these crypto values around like decentralization being building really robust secure systems and networks uh Distributing ownership in a way that you know my backyard Silicon Valley has been so bad at right despite all the prosperity that has been built over the past however many years um I like those values and uh you know it's built uh what I think is is this like very exciting Dynamic industry that we get to play in and then when it comes to AI right like here is a technology which is diametrically opposite in personality right well while cryptography which underpins the crypto industry is generally speaking very humble very discrete very specific this is a statement that I'm making and no further right AI is so expressive right it's infinitely expressive and it's so centralizing and it's taking all these resources and Gathering it and so when it comes to marrying the two in a way that I think acknowledges what both are good at and also for me has like this like mission-driven Dimension to it where it's like maybe these values can travel Beyond crypto I hope crypto is huge uh in the future but maybe we can bring these values around like trust or don't trust verify uh out to the rest of the world right um it's like a really exciting intersection right to marry these really appropriately but then also leverage as a vehicle to bring these values elsewhere right we often talk about you get a credit score you get an ad process whatever and you see like a Twitter verified check mark next to that score at least back when Twitter verify cement anything but um and like you can click on that and like interface with the on-chain verifier contracts see the model card understand what that actually means for you as the end consumer and then potentially bringing that to the rest of the world right uh I mean maybe the rest of the world doesn't care that's fine but uh I'm very excited to try nonetheless yeah thank you this is really insightful we are at time thanks everyone [Applause] stage thank you sir thank you okay now I know how to operate this so thank you um tough crowd tough crowd I know you um so my name is ishai now the co-founder of Dimension and this talk is going to be about eibc and IBC in a new dimension um so eibc is a paper that I wrote with the team about optimistic Roll-Ups in an IBC setting but let's talk a little bit about context what is dimension and how does it connect to ybc so Dimension is a network of modular blockchains called rollaps we're in the modular Summit so it's worthy to say that these modular blockchains they post data to a DA layer like Celestia or like a veil or any other da modules or da capabilities that we're going to have in the future and these roll apps are modular by execution as well so they can choose their execution environment and they settle to the dimension Hub which acts kind of as a router to this internet of Roll-Ups to this network of modular blockchains that is called Dimension so the dimension hub um is a sediment layer with an enshrined support for our roll of framework which is called the rdk this is a unique architecture I think seeing a lot of these lectures here and a lot of talks in the modular Summit I noticed that Dimension has a very unique architecture as one of or I would say probably the only settlement layer that focuses on modular settlement and validating bridge for Roll-Ups so that's that's interesting and it also enshrines the roll-up framework that we've built I think the difference between Dimension to ethereum for that matter in terms of settlement is that Dimension doesn't use Smart contracts for Roll-Ups it actually uses the chain itself to support these Roll-Ups and to gain more decentralization for sequencers from day one so this is kind of uh why we built Dimension but let's talk about eibc and what it is so eibc is an IBC based protocol for supporting optimistic rollups um what does this mean and why do we need this protocol why can't we use just IBC uh this is a question that comes to mind why can't we use vanilla IBC for rollaps just reminding you all um Dimension roll apps are optimistic prolapse so this question comes to mind and the answer is we can actually use IBC we can use IBC and we use IBC so from from the dimension Hub to the Roll-Ups themselves we use regular IBC this is not an issue but from the roll apps themselves back to the dimension Hub we can use IBC but we have a setback we have a setback that is common to every optimistic roll-up because of a characteristic that optimistic rollups have which is the fraud proof dispute period so optimistic Roll-Ups are the most popular scaling solution I guess most of you know that on ethereum in terms of tvl in terms of popularity you see arbitrum you see optimism you see all these rollups they're very very popular but they have a few issues one of them as I mentioned is the dispute period so the dispute period basically prevents us from trusting the roll up immediately we need to allow other participants in the network to submit a fraud Booth so it's a one of an assumption that somebody's listening or somebody's capable of submitting a prod proof to the settlement layer um but there's another setback that we that's not that known or not that common of people uh to talk about or to think about is the verifiers Dilemma The verifiers Dilemma is the situation where a sequencer is honest and is being honest for quite a while let's say that and other full node operators don't have any incentive to run a full note for rollap contrary to an L1 or a customs chain where they can validate and earn rewards earn fees uh roll a full node does not have any incentive to continue running this full node when he knows that the sequencer is honest he's assuming that this might be a possibility for him to catch fraud and maybe make money but the more we go in time the more we understand okay the sequencer is honest and most of the verifiers would just stop operating these nodes these nodes cost money so they just eventually stop and the verify and then the full note or the sequencer by that time of point the point of time they could be tempted to start uh cheating or doing any malicious State transitions so this is the verifiers Dilemma we have to make sure that in an internet of rollups like we envision in dimension where we say Cosmos is just the the tip of the iceberg we can build an internet of Roll-Ups which are connected to the cosmos ecosystem vibc and via the dimension Hub we must figure out a way to understand who will verify these Roll-Ups and to understand how we can trust these Roll-Ups or these sequencers if they don't have a lot of full nodes out there so these are two big problems if you want to address an internet of Roll-Ups that is based on the optimistic approach so we have a solution and this is what I want to talk about today the solution is called eibc E is for escrow so eibc is an IBC rapper on the settlement layer that basically transforms the settlement layer into a Clearing House of IBC withdrawals that are tradable or that you can use to clear them before the dispute period so we want to address the dispute period we want people to get an instant transfer experience and not damage the ux for everybody because of the dispute period we have for optimistic Roll-Ups so this is a short kind of uh brief about eibc let's understand how it works in detail so for understanding that we need to address the assumptions so the first assumption is that users are willing to pay an additional fee for instant withdrawals this is obvious if you want to get out of a roll-up if you want to get out of an exchange you would pay a little bit more to get out of that roll-up or that exchange or whatever it is you would pay a fee the second assumption is that verifying a roll-up eliminates the rollback risk for the verifier so assuming I am suspecting something or whatever it is I'm running a full note of the roll up I have now verified the state I eliminated the risk of it to eliminate the risk of rollback the third assumption is that verifiers who encounter fraud will submit a fraud proof I think these are pretty feasible assumptions that we can take and it will help us move forward with the flow of eibc and how it works so let's talk about the flow so Alice is a user on roll up X she sends an eibc withdrawal requesting uh 10 dime out of the roll-up um so Alice says I want to withdraw 10 dime and I'm willing to pay one dime fee okay this is an example uh it's not the implementation but just an example so Alice wants to withdraw 10 dime she sends it as a regular transaction to the roll app um with the with the fee with the review requirements later on the eibc message is related to this to the settlement layer escrow module which cues it and this is an important fact an important detail here the eibc message is relayed to the settlement layer to the escrow module and not to Alice itself so Alice is not getting the the eibc uh withdrawal remember remember we have to wait for finalization there is a fraud proof dispute period so we need to make sure that we only accept the real IBC message after the fraud dispute period super important so we need to figure out how we can counterpass this um this hurdle okay now Bob which is a liquidity provider and uh remember Bob because he's also a verifier but remember him Bob is a liquidity provider who decides to fulfill the eibc message the ABC transfer he's willing to purchase the delayed IBC message that Alice has already sent remember the settlement layer escrows these IBC messages and he can actually auction them so Bob is capable of purchasing a future withdrawal and paying nine dimes right now remember Alice wanted to pay a fee for getting out of the roll-up immediately so she she's willing to get 99 for a 10 dime in the future uh which Bob is willing to wait for so Bob actually sends the nine dimes to the settlement layer escrow module the eivc module on the settlement layer delivers Bob's tokens right Bob sent nine tokens and now delivers the nine tokens to Alice immediately right so Alice wasn't capable or she didn't want to wait she got her nine dime immediately and the original eibc message of Alice the 10 dime is now waiting for finalization but it's rerouted for Bob's address so what we did here we made the settlement layer a clearing house for roll-up withdrawals so we actually we we took um one need about us is I want to get out of the roll-up immediately I'm willing to pay the settlement layer escrow is the message it knows it can't accept it because of the optimistic assumption and Bob is willing to take that additional risk an additional waiting time uh for that fee okay but what happens if there's no one who wants to fulfill the eibc transfer the IBC liquidity transfer in this scenario the message would would just wait transfer the IBC message would just wait as usual and would finalize and would be transferred to Alice according to the optimistic assumption that we'll wait for the dispute period so this this eibc protocol is is fully compatible with ABC it just uses a wrapper on the settlement layer to create a market for the future withdrawals it's a market and this is what it is and this is I think what makes it super exciting because it elegantly provides economic and crypto economic assumptions or Game Theory to create a better system so let's look at the results the result is Alice received her tokens immediately without waiting the dispute period Alice is now capable of transferring vibc of course her funds or tokens whatever she wants to any other roll-up in the ecosystem that's pretty amazing because once you withdrawal out of rolap X or whatever rollup you are you can easily deliver the tokens or transfer the tokens to any other roll-up that's connected to the to the ecosystem so by solving what we did in the first leg in the first flow how do we get out of the roll-up we actually get a roll-up to roll up system that works fluently um so Alice also didn't need to trust any centralized actor for bridging this is super important because uh you know right now everybody's using arbiting optimism whatever role up on ethereum or whatever rollup that is optimistic they're using it with the liquidity provider that they Trust so we Leverage The IBC mechanism and we leverage the trust in the validated set of the dimension Hub to create a trust minimized environment for people to use and uh basically to leverage it the other result from Bob's side is Bob made money I think it's super important to understand that we want to allow or we want to enable as much ecosystem participants that will make money this will this creates a community it creates an economy um it it it you know rewards the players that are in the ecosystem and it's good but Bob apart from making money has a crucial incentive right now to verify the roll up and this is I think this is what makes the ABC super special and super important uh and elegant is that we kill um two birds with one stone and we allow the ecosystem to verify itself so according to usage according to if a roll-up is popular you would know that it's being verified because somebody wants to get out and somebody's willing to give liquidity so you would know that this roll-up is safe because it's being verified so we're using crypto economics we're using Game Theory instead of computation to create this incentive mechanism to verify thousands of or 10 tens of thousands of Roll-Ups uh with crypto economics and uh by that solving the verifiers Dilemma so the verified dilemma is solved the fraud proof dispute period is mostly solved if there's interest in the roll-up right so if somebody's in the roll up if somebody wants to take the risk of running it it's also soft so it's also kind of a on-demand situation and uh yeah and we get a better better ecosystem and a better experience for our users uh creating this internet of Roll-Ups with immediate withdrawals and usage of the original IBC mechanism um I guess we're getting to the end of this presentation thank you uh maybe time for Q a don't be too rough I know you got you're going to have hard questions especially you in the back there yeah um any q a anybody wants that something I assume not okay thank you [Applause] thank you hello hello all right thank you so much I'm trying to go I'm your MC for this next segment or for the rest of the cosmos track we're going to welcome our next speaker Jack zamplin to talk about modular IBC patterns welcome on stage hello hi hard to compete with vitalik okay so this is forward that's backwards all right okay modular IBC patterns since we're here at the modular Summit everything's modular um just a quick introduction hi my name is Jack samplin I'm the co-founder and CEO of Strangelove you might know me from the cosmos Hub the cosmos SDK IBC Akash sommelier and or Noble I've been working deeply within the cosmos ecosystem for many years Strangelove is dedicated to building IBC and supporting its growth and that's uh what I've spent most the last few years doing and that's what my company does so just a quick refresher on IBC for folks I think this particular audience probably doesn't need it um but I think the broader modular audience there's a lot of people unfamiliar with IBC especially the core underlying primitive so I do think it's important to kind of dig through these so IBC is a general message passing framework for blockchains it's modular by Design and there's some key Primitives that are really important to think about the first one is clients so clients contain all the authentication logic which chain am I talking to what are its validators how do I know that the state transitions it's providing are valid connections and channels make up the middle layer which is the transport layer and this is the sort of like how do you connect one smart contract to another and it's the on-chain pieces that help Define that and then there's packets so from a developer's perspective that middle layer which we call the Tau transport ordering and authentication you don't really need to care about it's uh kind of the the key part of the protocol and it helps you build everything on top as a developer if you're a chain developer you might want to care about clients because maybe you have some uh unique consensus or you're an optimistic roll-up or you're a ZK roll up and you've got some different cryptographic properties that your chain needs to authenticate it and you would encode that into a client and that runs on all of the chains that you want to connect to and then on top of all of this infrastructure we build the packets and this is the application data formats that you send data back and forth with so Roll-Ups um we've got ZK Roll-Ups we've got optimistic Roll-Ups and some other stuff based Roll-Ups modular pilled Roll-Ups I don't know people are coming up with all kinds of stuff but for I think for like practical purposes there's really two we've got ZK Roll-Ups which are kind of the future and optimistic Roll-Ups which are the the today technology and I think that bringing IBC to each of those there's some unique challenges to each of these different architectures so I'm going to dig into optimistic Roll-Ups a little bit the dimension team was just up here and they showed you guys the right way to do optimistic IBC and I think that the the escrow thing that you guys presented was was really cool and like being able to optimistically accept that is one way to get around the dispute period this is the hard way this is not the easy way and the the dispute period does lead to some bad ux but like you guys had a really elegant way of getting around that this is similar to what Uma protocol is doing on ethereum and it is uh you know definitely One Way Forward that's kind of tough ux for users in a lot of ways and I think it can end up being hard to reason about then there's the easier way and basically this comes down to a committee whether it's a multi-sig a validator set um or some sort of combination of those there's a committee of keys that um provides that authentication logic and helps validate the data coming into your chain this tends to lead to much better ux and is a lot easier for users to reason about even though it introduces additional trust assumptions so the right and the hard way I've talked to a lot of folks about it it's been hard to get people behind building that out and like building on top of that for a variety of reasons so I've been thinking a lot about committees and I came up with kind of a fun little committee design that uh seeing if anyone's interested in so let me talk about this Stamper idea you'd have a tender mint chain where essentially validators attest to the optimistic roll-up header so what does this mean each of the validators will be running a full node for the optimistic roll up and then submitting the app hashes to the the chain via vote extensions or some other mechanism once you reach consensus on those headers you can write them to State and then clients would be able to trust those and the on-chain like client of this is basically a tender mint like client which is a huge benefit but there's instead of checking the Stamper chains state for packet inclusion you go check the the state of the roll-up for packet inclusion so one of the benefits of this design is it is the minimal change to the set of like underlying Primitives and libraries that are maintained by the core teams that would enable us to like offer the developer experience that we want which is that the roll up connects directly to any other chain in IBC and is able to bridge seamlessly that way and from a developer perspective you just send a packet directly from your roll up to any chain in IBC that connects to that Network um and this is a cool design but I think the biggest problem with this is It's a committee like any other it's kind of fundamentally the same trust assumption as hyperlan or axillar or Wormhole or any of these other committee based interoperability Solutions so I probably not going to build this maybe somebody does if you're interested please hit me up but what I'm more excited about I think is ZK Roll-Ups where the hard way and the easy way is the same you use a Celestia light node to check for data availability and then you add the ZK proof to The Sovereign roll-up and suddenly you're able to connect directly from that ZK roll up to anywhere else in the IBC Network this is what users want bring in its all chains and Bridges at the end of the day and like this kind of eliminates this idea of the settlement layer in a lot of ways which I think is why it's tough from a mental model for a lot of folks so on that side of things we're going to be working with uh Duality Labs Sovereign labs and informal systems to help bring the first IBC ZK like client to Market and try to drive some value directly to the hub so from an architecture perspective what does this look like we've got Celestia where the ZK roll-up is writing all of its state two for the data availability layer and then Duality which is an ICS chain would be running this like client for the ZK Sovereign roll-up and helping enable communication with the rest of the roll-up with the rest of the IBC ecosystem that like client could run on any other chain but I think initially we'll probably just run it on duality and I think that this project is going to be a good blueprint for future ZK roll-up Integrations because there's a lot of different ZK Technologies out there we're not going to have to do this once we're going to have to do this like 10 to 15 times as these cryptographic standards change as the proofs get faster and faster and help improve in performance so yeah I guess that's kind of what I had prepared it's just kind of a brief overview but happy to answer any questions that folks have yes sir yeah for sure so which part should I break down a little bit more yes yep where does the Thunderman chain come into play in this sense yeah for sure so uh the roll-up would incentivize the tender mint chain in some way I think the easiest way is to have it the role of operator would deposit IBC into this would deposit usdc into this Timberman chain and say Hey validators I want you to finalize my roll-up headers basically the validators would then spin Up full nodes for each of the roll-ups and because they're listening directly to the state transitions on the network on that P2P Network they're going to see the latest block headers as they come in each validator will have an independent view of that state and then every time they see a new header they write it to the the tender mint chain once and then you're checking every block once two-thirds of validators have seen the same header we commit that header into State you can then prove that header using the like client on a counterparty chain so that you can prove that that header is included in the Stamper State and then you can check it for packet inclusion on the roll up side does that make sense Yeah so basically it's really cutting short the optimistic time yeah so exactly between it's like between uh so there's ZK which is directly this and this is like sort of unvalidating you so no need to worry yes and I think the key idea here is like one thing that I don't like about kubernetes and I think a lot of other folks don't like about committees is you end up having these multi-hop transactions and it kind of forces this really sub-optimal developer user experience and adds a lot of latency in many cases and with this committee the latency issue is still potentially there but I think that there's a lot of ways to shave that down and uh also from an app developer's perspective it offers that point-to-point IBC experience that most developers are familiar with and I think like practically Roll-Ups are going to want to connect to like five to ten key chains to help bring in liquidity and provide other markets and potentially provide services via IBC and having to do that over multi-hop it's a complicated developer user experience so that was kind of the motivation behind the design cool I think just one thing maybe I would say my only concern with this is that there is some bootstrapping cost in terms of making validators actually do it for your roll up because initially initially way back then like one one and a half years ago we also had this notion in mind but we really wanted to make it super easy and to bootstrap basically roll up yeah this is I I think this is the the complex part and the devil's in the detail of all these designs I think for that you know there's a lot of like restaking designs that you could potentially do where you're giving locking up tokens with the validator and they're getting paid in yield those most of those are in kind it's not really compelling for validators I think in order to make this system work you'd have to literally just pay the validators money in order to cover it one of the like cool and fun aspects of that design is that you uh the Stamper chain could easily degrade service for the Roll-Ups in the event that user doesn't pay they just start maybe finalizing only one every 10 headers and then if payment doesn't continue maybe one every hundred and then finally dropping service after a predefined period of time and you can easily offer different service tiers for different Roll-Ups and different payment methods and I think that there's a lot of like room and flexibility to innovate on that side of things um but yeah it's like again the market needs to be there a little bit in order for the solution to really be viable yeah cool thank you yeah absolutely anyone else have any questions Susanna I saw you had one did I answer it already with the sample idea this would be like linked to the conditional clients idea that you were wanting so that you link the two yeah I think conditional clients is like a nice to have it's not necessarily A must-have you could so we've got that wasm client and go now that accepts sort of like arbitrary wasm code and I think this is going to go a long way to helping users only have to write their client once in Rust and then kind of deploy everywhere so like that's one key piece of this but one of the things we did when building that Walzem client is we took the tender mint uh light client from was uh ibcrs and wrapped it in a smart contract and a lot of the testing we did was against that tenderbend client to ensure that it has the same properties as the tenderbend client and go and we could easily Fork that contract and then in the functions where we're checking for packet inclusion within the um within IBC you just substitute the roll-up header instead of the Stamper header so it's a really light Fork of that client and would be an extremely minimal change set conditional clients would make this nice and easy and be a lot more ergonomic and space saving but in order to ship it sooner you could easily do it the other way but I think that like this is one of many use cases for conditional like clients and it's yeah but it's not a dependency any other questions for folks awesome that sounds great thank you guys very much for your time really appreciate it today you guys have a great one all right we ended up being early so we're going to take a little break until the next one next one's at 4 20. [Music] thank you [Music] [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] foreign [Music] thank you [Music] hello [Music] okay and we are back we have David C from Babylon here next he's going to talk about Bitcoin staking unlocking 21 million Bitcoins to secure the decentralized economy welcome David thank you it's going to give a Stanford lecture thank you very much always good to be introduced by an astronaut gives me some special um special status here thank you thank you great all right so today I'm going to talk about this new protocol that we just uh uh design in the past few months and currently building right now so yeah so Bitcoin sticking all right so let's first understand what's the problem we're trying to address here so okay the problem we're trying to address is the proof of stick security by definition proof of stick means that the security is sticked protected by capital and therefore Capital intensive so right now many of these chains are paying pretty high reward for staking ranging from five percent in ethereum to 20 40 on a cosmos chain so this is very expensive and uh right now this cost is paid by basic inflation of the coin so inflation is not good you don't want to inflate the current until it's necessary there's also a pretty big competition between the utility of the coin and the state and the security and so we would like to reduce this tension and reduce the cost of capital in general okay so that's the problem trying to solved and the way we try to solve this problem is to recognize that outside is proof of stick World there is another world in the crypto land which is basically Bitcoin so proof of Stack has slightly less than 50 percent the market cap Bitcoin has slightly more than 50 the market cap so the observation here is that Bitcoin can be a source of capital for sticking so let's think about why it is a good source of capital for sticking okay everyone has some Bitcoins all right but most of them has next to zero yield so most of Bitcoin is actually idle so I know Bitcoin means that this Bitcoin or you're not competing like for example ethereum for yield for D5 for example so providing a stacking option for them is could be attractive all right number two is that the Bitcoin holders in general are quite decentralized at least more decentralized compared to many proof of stake chains so by providing Bitcoin as a stacking asset that would also help to decentralize your network three Bitcoin relatively is the least volatile asset within the crypto Market and we've done some study on that the volatility of Bitcoin is less than half of many assets so if you combine the three together you can think of Bitcoin is actually a pretty excellent staking asset sticking asset so our idea was to use this Bitcoin asset 600 billion worth of staking asset potentially to secure all the proof of stick chains in the world okay so all right let's think about this a little bit more right let's step back and think about this so Bitcoin from Bitcoin you provide security to approval section in return Bitcoin holders can get yield from these chains now these chains are already providing yield but they're providing very high yield to extract native token to have a large supply of Bitcoin and a relatively stable market value is a good source of capital for these chains so that is the um assumption that is the uh problem we're trying to solved okay all right so uh why is this not a trivial problem so okay so so far this is the setup of the problem our goal is to use Bitcoin to secure proof of stake chain so what do we call this concept so we are in some sense inventing A New Concept here and this New Concept we called Bitcoin stacking okay so if you look at this const lab it's going to wear a constant weird name right because Bitcoin everyone associate with proof of work State K of course is a natural key Concept in proof of stick how can we put these two words together it doesn't make sense right but actually it does make sense because Bitcoin although is a proof of work chain it is still an asset it is still an asset it's still a crypto asset and we're saying we're using this very secure crypto asset secured by proof of work to secure approval section or to add security approval section so Bitcoin sticking okay so anyone have any question about this concept all right okay man I do sound like a Professor or something like that it's like habit it's hard to break habit oh there's a question all right thank you very much thank you very much okay it's just a money bond for you to not make mistakes yeah yeah yeah but of course it's a collateral right yeah what I'm trying to say yes maybe someone else can come up with that idea yeah what I'm trying to say oh I just focus on bitcoin yeah that's why I'm just saying um it's it's a pow blue uh coin right so if you use that to provide security to a POS chain yes um then um it's the same as any other asset to secure those POs change it's a crypto asset though yeah I've seen it but it's also an asset in which a lot of people wants to hold that's true right so what we're saying is this right when we're thinking about this is this suppose you're you're a um person and your choice is the Forum okay you want to buy some altcoin and earn Alcorn yield okay or this is now giving you an option you can buy Bitcoin and get outcome you okay so that's a pretty I think interesting concept right because then you can reduce the volatility of your principal but still get some upside on the yield okay so that's the setup good thank you very much yeah and more questions okay good missions yeah good thank you thank you see the the trick of a good professor is to get the student answer each other questions you know that's the challenge there okay thank you all right okay so now we should wish technology right so there's a problem trying to solve so why is it why is this problem challenging well it is basically a two-sided market right we have Bitcoin holders on the left hand side and proof of stick chains on the right hand side so on the left hand side we want to make sure that this is a very secure experience for them because Bitcoin holders are very conservative they don't want to lose the Bitcoin so this protocol should protect the BTC stickers holders very strongly okay on the other side another hand for the proof of Stack chain they want to get security from the Bitcoin in particular they want it to be a true security so that in case there's anything bad happens then they can slash the Bitcoin stickers okay so the slashing therefore has to be very sharp it is only under bad behavior of the weather would that slashing occur and not under any other circumstances okay all right so this is the problem that we solve so we came up with a protocol a Bitcoin sticking protocol which essentially solves this dual objective of protecting both sides of the market all right so um now the biggest challenge actually to achieve this is the fact that Bitcoin doesn't have a smart contract okay so I'll come back to this point a little bit later but the constraint is that there are no smart contract Bitcoin okay now what we can achieve is full security so food slashing through slashing so in other words value just do bad things we can slash the Bitcoin and number two is we can do trustless sticking which means that there is no bridging no bridging of the Bitcoin from the Bitcoin chain to the proof of stake chain through custodial or otherwise okay through a centralized custodial or otherwise okay so let's think about these two objectives and these two properties that we achieve um the first one is to provide full security to bitcoin chain right that's the right side of the market the second one is to provide through protection to the Bitcoin holders that's the second one now if you relax one of them for example you bridge the Bitcoin from the Bitcoin chain to the previous exchange through some rap asset like rap BTC then it's quite easy to achieve full security because now your token is as though it's sitting on the proof of stake chain your smart contract proven State chain you can do all the slashing you want okay now however we don't want to bridge to the Bitcoin stays on the Bitcoin chain and but we don't have a smart contract on bitcoin chain to do the slashing so thereby that's the challenge of the problem and in fact uh that is kind of cutting to the heart of why so many Bitcoins are idle so many becomes either precisely because there is no smart contract no Intelligence on the smart con chain so it's very hard to securely Bridge the money away and get it back okay all right so what we're saying is that for this particular use case of providing security very important use case I think uh there's no bridging needed okay so how do we do this so let's run through um experience from a sticker so Alice has one Bitcoin what else do is assigns the contract a stacking contract a sticking contract on the Bitcoin chain uh Bitcoin doesn't have Smart contract but it does have a scripting language which allows you to write some very simple contract so in this simple contract there are two possibly we're spending this Bitcoin either Alice can withdraw this Bitcoin and claim back the Bitcoin in say three days okay this is a standard unbonding with some delay okay second Alice will burn the BTC into a burn address okay so these are the only two ways of spending this Bitcoin both of which are controlled by Alice both of which are controlled by us so this is self-custodial contract no third party yeah exactly exactly why would Alice burn his own money right her own money that doesn't make sense at all those option is needed though because we needed to have an option of slashing Alice this is where the second option is so let's yeah so wait one minute all right good question though all right so so Alice after um signing this contract can now validate approval stick chain okay so Alice to tie the two system together Alice will use the same key that control the address that controls the BTC addressed to assign blocks to assign blocks on the proof of Stack chain okay I'll tell you a little bit more about how the signing is done but right now we're using the same key and so in the happy path Alice will be behaving honestly honestly and will continue validating blocks and improve of stake chain and the money will stay on the Bitcoin chain until Alice wants to resign or wants to withdraw the money and after a few days Alice will claim back the stick and obtain the reward good this is a happy path now in the unhappy path in the unhappy path okay Alice will turn evil and now tries to do something bad on the proof of Stack chain the bad the worst thing you can do improve a stick chain is to create a fork on The Proven stick chain okay now this is a slashable offense pretty looking for in fact it's the one of the very few slashable offense to protect the safety of the chain so what we can do using cryptography is that using a special modification of Alice signature what we can do is to force Alice Key Alice private key to be leaked to be leaked this enables anybody to send a transaction back to the proof of stake chain to slash Alice okay to slash Alice now how do I go back do I go back here I don't know how to go back maybe here I don't know okay go back good okay all right okay so now anybody can activate can pretend to be Alice and activate the second path so this answers the question of why Alice will ever burn the PC because it has done something bad and that's something bad will force the review of the private key which will automatically enable anybody to slash this money okay so this allows flashing to happen very good so that's basically the key design we have some extra additional complexities protocol for example we would like to allow a fast and bonding of the stake BDC to ensure that the Bitcoin holders can maintain High liquidity this is achieved by providing some kind of synchronization between the Bitcoin chain and a uh proof of Stack chain like Cosmos and this like osmosis in this example so we need some cross chain synchronization and we already have a Time stamping protocol if you have heard my uh my talk at Cosmo verse for example last year we we built a Time stamping protocol which allows precisely the synchronization so that enables us to do fast and bonding and more importantly or in the context of this summit we're in a modular Summit okay so someone asked me what the hell your talk has to do with modularity and then very quickly I have to think about something uh it turns out that actually our protocol is very modular so we want to so our vision right in the first line is to be able to provide Bitcoin security through staking Bitcoin staking to as many people stick chain in the world okay so if our protocol has to adapt to change everybody's proof of stake protocol forget it nobody wants to change the protocol so how we designed it is we designed using a modular tool called phonology Gadget okay so fanatic Gadget is a concept invented by vitalik many years ago six years ago around which essentially is a way to add add a modular addition to the proof of stake chain to any previous stake chain to give you additional finality functioning and in this case the functionality we add is we can think of as BTC validated fast funnel BTC value the finality okay so because the revealing of the private key requires some special signature that's why we have to add this vanity Gadget because the original protocol will not be using the signature in fact it could be using another section like EDU ed1441519 something like that two five five one nine yes okay all right okay so this allows us to broaden the application to many different chains um okay so so modularity we use this constant final Gadget already mentioned started in this paper cast body Friendly Ghost friendly fanatic Gadget Casper FFG invented by vitalik and we had a paper two years ago which have a secure design of this finale Gadget so finality Gadget is the concept invented by vitalik but there's some security issues with the design we fixed that in this paper um okay so we applied similar concept here all right so here's the architecture of the whole system you can think of there's a data plane and there's a control plane so in the data plane the validators will be using these special signatures to provide BTC security to all these chains whatever change that was accepted as a BTC stake on the control plane Babylon will be running a timestamping protocol some kind of interface that allows the BTC to be synchronized with all these chains synchronous always changed Babylon itself will also be BTC secured okay so that's the architecture that we have all right so we have built this architecture to some extent we already have a Time stamping test net so now there are 31 chains 31 Cosmos chains Cosmos SDK chain sitting on our test net synchronized with the Bitcoin chain synchronized with the Bitcoin chain uh you can visit the website okay all right so finally I think this is a pretty interesting use case for Bitcoin uh Bitcoin can't really leave the Bitcoin chain securely but it can be used to secure proof of stake chain securely so security means two things here one security to the approval stick chain two security to the sticker as well and through this we're hoping to provide a some integration to the two economies thank you [Applause] [Music] what are the steps to mainnet and what progress with these 31 chains yeah the 31 changes on it's a Time stamping test net the next step is we're going to evolve this test PC sticking test net and invite all these 31 chains and more chains to join to do the BTC stacking and then we want to involve the main net to our Target is to launch the main app before the next halfing okay so can you give an example what kind of decision would the governance of any of these chains it will see let's say in a governance proposal right to vote if I'm a holder of uh any of the governance token on these genes what what it would be example of uh we propose to enable X and Y like what will it says will be following the proposal will be okay we allow a certain percentage of our sticking market cap to be BT system okay think about it it's like an investment portfolio I allow instead of right now it's all stocks 5 or 30. I said hey I don't want all stocks I don't have volatility I want some bonds I want 30 bonus in my portfolio 40 bonds that is decided by the government's purpose thank you well then another question uh uh what are the main challenges that are yet to be resolved for this to to go live on mainnet and actually be usable by some of these consumer chains yeah the challenges will will so the challenge will be to bring two sides onto the table we have to get some uh some BTC holders to stack and some change to accept the stacking through the governor's proposal and how would the other side the consumer side uh interact with uh with the protocol let's say okay implementation right question is that so Dave would for example if there's a customer change it will be tenement consensus we would add this at the top of the tournament and this will be a software upgrade so this will also be a software governance proposal change and it will uh this uh final the gadget uh what would it do the tournament blocks is finalized okay if you retirement and then after it's finalized then we will assign an extra run of signatures to do a BTC finalization of the block and these signatures will be the special signatures for which give you double sign they will the private key will be leaked and how will this uh then get to that point of a private key of Alice being leaked like what will actually trigger the transaction where does the Alice's private key is stored from the signatures on the two blocks that you double sign in we can extract anyone who observes these two signatures will be able to extract the Privacy I see let's have that be the final question you guys could do further q a thank you thank you back there thank you David thank you excellent talk thank you thank you as well trying to break open yeah okay panel cyborg is our moderator uh we're cyborg and we're going to invite our panelists I would just let people settle in first by the way cyborg fought an incredible fight at the osmocon boxing ring last night that was kick ass thank you oh man I know you know we should do that all of the time like too much drama to be resolved in Cosmos okay so our moderator is Mr Cyborg and going from this way to that Jack is missing okay well we've got Marco Barr SDK core developer Marco bar Barbara yes Marco bar Sean [Music] um Sean birth weight yes Magnus marinick from skip protocol and Jack Zeppelin from sommelier and Strangelove cool so we have a small intimate audience so everyone will get a chance to ask questions um looks like Cosmo verse right looks like a cosmos panel we had model everybody looks like customers um yeah so Cosmos infrastructure um I think I'm going to start with Marco here and maybe you can explain for the audience that he's not familiar with the how things work in Cosmos um what's the layer of the line or how do you um what are the different parts of the stack for Cosmos and who are the builders behind each of these parts yeah so there's at the core layer there's three distinct protocols so there's Comet bft uh currently maintained by informal systems above that comes the I would like to I like to call it the middleware and the state machine that is a cosmos SDK that is maintained by myself and binary Builders and then we have IBC go and this is like the third component of the core layer I like to call it the kernel layer that is maintained by interchange Gambia and then above that we have a few application layers so we have the EV we have Polaris ethernet cosmosum some movie M stuff like that but I'd say like the Three core layers that are fundamental to the inner chain stack uh are would be common bft IBC go and the cosmos sck and Jack I think you have a lot of thoughts about you know the like you guys especially Marco and Jake who worked on something called the cosmos Builder Foundation right and you have thoughts about the way that uh you know funding for all the different part of the stack should work in Cosmos maybe you can share a little bit of your thoughts on that yeah I think right now The Interchange Foundation is doing most of the funding and you know that's not a long-term sustainable path there's this is kind of a classic open source funding problem where there's a lot of uh economically viable businesses essentially that build on top of this core software and we need to find a way to get those folks to help contribute to the maintenance of the core stack and you know I've been talking a lot of folks for for a long time but that that's kind of the fundamental uh friction point there is there's folks out there who want to do it um there's folks out there who have the money to do it but there's nowhere to put that right now that that's sort of credibly neutral and sort of made up of a council of the core Builders and um yeah still looking for folks to work with on that been chatting with skip quite a bit about that yeah so Escape actually is in kind of a new project like Marco and Jack have been Cosmos for a while was there for you you know anything like surprising or obvious that Cosmos should do to kind of improve their current model that we have the current model of funding of funding yeah and the way you know work is being done in general to to build the stack yeah I mean uh I mean I don't want to be too critical but uh you should be very critical like it's a very small audience you can say whatever you want I mean we we started out by basically learning tender mint and uh tender mint was a very complicated code base for us to learn and you know we we quickly realized you know what one of the things we realized quite quickly was how um you know the stock is meant to be modular meaning ABCI is sort of this abstraction that is outside of tenerment uh we realize that like tender mint and the cosmos SDK are actually quite coupled in many different ways and I think this was found out by other teams afterwards like Polaris Etc um and so I think you know one thing that that could be done is uh you know making those different pieces of the stack a little bit more accessible um I think there's been really good work um that's sort of happening behind the scenes here but tendermint basically becoming more comprehensible um and easier to understand more modular more easily you know easy to add things to and take things out of you know we started by having to modify tender mint and build this thing called Mev tenorment which you know now we're moving sort of away from but basically we try to build in uh you know uh basically an ordering mechanism into the mempool which which didn't really exist it was sort of this fifo based system and it was very difficult it took a long time um and I think you know that it was tough to modify the core stack in that way and we learned a lot through that and I think hopefully shared a couple of those things with core builders Sean I think you were part of the you know initial tournament team you took part in some of these decisions right at informal so while I was at informal we spent a lot of work trying to position the software of tender men as a core consensus you know engine in a position where it could be like testable I think it was very hard to make significant changes I think that tender meant when it was conceived was like heads and shoulders above any sort of alternative and like since then I think like the industry has had a lot of time to catch up while tender mint innovation has has really slowed and I think we could attribute that to some of the complexity in the any architecture um the architecture there coming back to the original question about like funding and like what role does the like the capital flows have to do with this which I think is like sort of the more interesting interesting question um we have to we have to like look at like where the money came from and I think like most of the money that funds most of the core infrastructure comes from a single entity right which did not intend to raise like enough money for that when it raised it so like tenement raised like 16 million that balloon to like half a billion dollar Treasury and then spent years like reconfiguring itself to like be Capital efficient with that much money which I think is a a very hard thing to do um still ongoing Still Still ongoing and I think fundamentally it's a it's like this is at the core of like the broken model because there isn't really any sort of genuine economic surplus that you could sort of redirect to places that are more productive or take away from places that are unproductive so broadly speaking most of the capital that is allocated is unproductive so that's like the base level right that you don't know like there's very few profitable protocols modulo the cosmos Hub most uh most other Protocols are very unprofitable so it's very hard to say like oh as an ecosystem we're gonna like let those ecosystems die or like let those chains die or like redirect it where it needs to be so I think what's what's really missing is is like a new way of doing like Surplus Recycling and not just like funding a new entity a new centralized entity or a set of entities with VC money you know or whatever but still the ITF has like 300 million dollars right at the moment in in the on the books if if you were uh you know the the president of the ACF or the managing director of the ACF like what would you change on on day one I was I would I would I would send it all to a burn address and then see if the ecosystem was meant to survive or I would take like the cosmos Hub and I would um inflate it maybe like one billion dollars into a fund that was you know governed by a multi-sig of like people who could get easily unelected you know could be Jack or whatever I don't care the initial version but what's important is like it should go like everything else should go away any any any Capital that is held underneath like a body which is not like elected in a transparent way should probably go away it is kind of um like in Cosmos in all these ecosystems it's always been like everyone like we we licensed the software Apache we like stand by Apache everyone can take the software do whatever um it's it's a pro and a con because if you license it some other way they're not going to come users aren't going to come and so it's like a double-edged sword there but the other part is from the get-go no one ever really thought of oh like what will be the funding story in five to ten years and so no one really built that Narrative of like oh like we should build a narrative of when there's a launch of a chain um the team coordinates assist the team like uh helps them launch and then like they get an allocation or they get some sort of continuous allocation to help align road maps that was never thought and now it's kind of like I mean we're having this conversation not only in the cosmos ecosystem in ethereum polka dot literally everywhere that like oh like raising into a single Foundation off a singles Ico is a good idea for like the first five years but if you want to last like 100 years you're not going to be here if that's the only plan yeah because if you hear like composable Finance talking about parity and you know the way things work there it doesn't seem to work much better than than we work in Cosmos with the AC I think you know there's like a age-old startup Montage raising too much money will kill your company just as surely is not having enough money and I think that you know there's a lot of lessons that we've forgotten from the web 2 world and the kind of the classic startup world and blockchain I think that that's a really key one so you Jack if you were president of the ICF what do you do on day one I like Sean's idea that's real that's that's real base [Laughter] I also think like we need to stop um hating on developers who want to monetize their software like the ICS 999 stuff is kind of like cringed to me because like Larry put a lot of work into that and it seems very good but people sort of are saying to him well no one's going to use it because it's not open source and you know you get a grant for it but then like okay the grants expired then it you know money's out and then it's open source and you can't make any more money off of it it's like why would you do this I think for a lot of reasons application so I agree with you we need to get developers paid more but I think the ICS 9991 and IBC application Protocols are kind of a special case because really in order to do that you have to like bootstrap a bunch of chains that do it yeah in order for it to have any value and then there need to be apps built on top of it but how do you bootstrap that without giving it away and then at what point are you going to start charging for it and there's no real built-in mechanism to like be able to do that at the application protocol layer the like client layer I do think is a much better layer to add those types of BSL licenses and to allow uh applications to have certain like exclusivity periods or put in writers where there's a certain amount of public good funding that needs to be reached before those things become fully open source because it kind of like forces the settlement layer narrative and it allows that chain a chance to help build some IBC routes through it build those trade routes and bootstrap them um whereas the application protocol layer there there is that bootstrapping problem that exists so yeah the Larry thing is tough like I I love Larry I really like ICS 999 I'd love to use it more but it's yeah Larry should be the president of the ICF we should just like change the burner just be here but but if you go down that path then it's like a like I I like to think of like early parody like when they license everything like GPL and like substrate was licensed GPL and like Enterprises would come and just be like hey like can you please re-license it to Apache so we can like work out a way to use it and I think like we have the cosmos SDK has a ton more users that we actually don't know of that I find out daily that it's like oh like like I was talking with uh Wormhole and like jump and they have like a private Cosmos SDK chain for their like signature process and stuff like this and it's just like people use it because they don't have to worry about this license issue but then it's like the downside is like everyone's been saying like everyone uses it but no one ever thinks back like oh we have to give back because it's sustainable but it might be that like if the ICF were to say like um I mean every year now the budget's going down and down for like these uh for these products and it's like if the ICF says like oh like we're cutting it off at this number whatever else is more you have to get from anywhere else I think teams might start like showing up and being like hey like we need this feature we want this feature we want this feature and if the teams are like sorry like we're getting paid only to do this then teams will be like okay like we're happy to like contribute and then that kind of bootstraps accomplish an interesting thing about the BSL license is you can set a cap Beyond which you go full open source so for instance you could have a some software develop under BSL and then each chain we need to contribute some amounts and when that Gap is reached it becomes fully open source for everyone to use I think that's a great idea yeah I think more more people should be using that so talking about Duality and I think you're talking about the the roll up stuff with Duality so let's uh let's talk about that and how we make um IBC roll-up friendly we are yeah at the Celestia Summit here uh Jack for you you are the the IPC guy uh what's uh what's needed to make sure that rollups use IBC between themselves and also between app chains yeah you know we need to build out the infrastructure this requires funding it requires teams you know I'm sitting here talking to the dimension guys and they have a working fraud proof IBC implementation which is really cool um seeing that more broadly adopted but I think the biggest problem with the roll-up model right now is there's no overall consensus on what the final architecture for these Roll-Ups is going to be each of the architectures that's been developed by these different companies each has their own sort of like unique cryptographic assumptions that you would have to bake into a like client so there's I think a two-pronged approach to this problem um one is we've done a lot of work in the core code bases IBC go ibcrs relayers both Hermes and uh relay to help abstract a way that this sort of like Cosmos specific assumptions a lot of this work has happened over the last year helping bring the composable finance work to uh market and I think we're going to do three or four non-standard IBC Integrations this year as a community next year we need to do 30 to 12 to 30 probably uh we need to like mini X that this capacity this ability to bring IBC like clients to new places so I think that's one part of it but I think also building in better relationships with teams like Wormhole hyperlane and axillar where there's these committee based solutions that might have different transport layers but we can build shims or other compatibility mechanisms to allow developers to use those IBC interfaces anywhere and Sub in different transport layers because that that's fundamentally what they are and those committee based Solutions can go places that a like client-based architecture can't a little bit quicker um and you know we've always thought that they're going to be hubs and those are potentially hubs I want to come back later to the Harper Lane stuff because that was an interesting topic last week or the week before that but first like um the skip team has been working I think you guys got a research grant grant from Celestia uh on on the on the Mev stuff how do you know about that yeah we're working a little bit Yeah okay well um what what are what is it about do you do you know about that or do you not know about that uh about IBC or about um the the grants of the sales Tech Grant is is there something there or is it just something I made up uh we are working with them on on the research side I mean I think that most apt thing there it's is less about Mev but more about uh sort of IBC and and this idea of these like apis that we we put out where you know the idea is like no matter what uh bridging protocol you you use if it's hyperlane if it's layer zero or whatever else it is um or if it's IBC of course you can do these things in one click right you can transfer you can swap um and it's not a complicated like pathing problem and so you know a lot of that work has been helped out by pfm and IBC hooks one by Strangelove and the other by osmosis um but they allow you to just like mesh together all of these different Bridges um and just have these workflows be extremely simple and I think in the roll-up land this is you know talk that I gave before but like in roll-up land that's going to become a lot worse I think right like you're going to have so many different Roll-Ups they're all going to have their own gas tokens they're all going to have their own routing protocols and you just want to create an abstraction above that and I think I mean I'm going to say the word but I also think intense might be helpful here CC raps um but you know like there needs to be a solution there um to help fix that right and now from the cosmos SDK side there's already like stuff like roll kit for instance where they're taking the cosmos SDK they are essentially removing comets from the cosmos SDK can you talk a little bit about that how roll up how you see rollup framework evolve and how they compare to the SDK so the direction we're going with the SDK is um we want to extract abstract like ABCI away from the user we want to abstract consensus engine away from the user it's already kind of there and kind of like when you're developing an SDK application evm or no evm cosmosm no cosmosum that it's like either a roll-up or a chain and so we've been working with the roll kit team they have a lot of ideas in terms of different block construction different header construction to enable different use cases what we're really learning is the past months is that the ABCI is really limiting in what you can build with it just because it provides these limitations you can access the P2P layer it has this mempool like people want to do different things with the mempool but it's like you have this app side Maple now and now it's kind of like being conflated on like what is app what is the consensus engine what it what the app should take care of and what the consensus engine should take care of and so like going forward like yeah like we're we're working with a few teams roll kit Dimension and like just talking down like what they need to enable like a better role kit a better roll-up future just so we are as competitive as like everyone else and so and also just like rebuilding the software in a way that okay Roll-Ups are today what is tomorrow if tomorrow is something else like are we ready can we take advantage of that um and so we're just taking the software like basically almost rewriting the software to enable that I mean Market the way that you've described it to me is the SDK is this layer that helps coordinate between different consensus mechanisms in different uh security mechanisms on the bottom and then different VM layers on the top is that kind of how you describe it yeah it's um the SDK is kind of like this middleware kernel and then the modules are like in evm world we can kind of call them like pre-compiles and then you those are like their kernel level apis and then the application layer will be your evm cosmosm move whatever you really want I just think that that is like clearly the final architecture for in application or VM framework and uh like the work that you guys are doing right now I just think it's awesome can I ask a question how Marco no Sean but how do you design like a general framework for Roll-Ups when there there aren't any Roll-Ups and they're still like I don't know how Roll-Ups are going to work and I've spent a lot of time looking at shared sequencers a lot of times studying like across fuel across um roll kit all the the the the Roll-Ups that will be right um what are the core Primitives that uh that they need and uh and how do we embed that in the SDK well the so the the sequencer the roll-up uh aspect of it is like a replacement of the consensus engine um and above we're kind of like meant to only really worry about here's a consensus interface um if you do like the consensus interface like we can just mimic ABC I plus plus prepare process vote extension and finalize um and then it's just like the roll up has the option to like implement it as no Ops or not um and so it's it's less so like what is a roll-up and what is not a roll-up to the application to the application it's just a distributed System state machine and underneath it's it can be Comet it can be whatever um and then in the future like the idea is like okay uh we we so we kick-started this like runtime working group and now we're doing some research on like different consensus interfaces so you kind of have like this immediate finality that is tenderment um then you have roll kit you have the longest chain uh you have Roll-Ups you have longest chain and then you have this hybrid consensus world and it's like what is the consensus interface that kind of like fits this fits these worlds to enable users to do it really whatever they want I think in in Sean just to your direct question while we don't have a lot of idea what Roll-Ups are are they real we don't know um what we do have a lot of idea about and a lot of prior art on is what application developers one need and I think that fundamentally the whole purpose of rollup is to decouple the application development experience from the other concerns there and I think that you know we do know what application developers need they want to write in the programming languages and paradigms that they're used to and the closer we can come to providing those in an ergonomic way to as many users as possible that's how we get the adoption on the developer side also just curious um when Polaris was sort of being developed uh did that like inform any uh or like I guess bring out any like sore spots in the SDK that oh a hundred percent like I'm curious about that I mean no it's it's perfect like we can all go home today like the SDK is perfect like you don't need to build any more uh sdks um no I mean like they're they're really pushing so the SDK and like comment in the initial design and like if you talk to Jay if you talk to Bucky like it's meant to build it be this modular software that um raised too much money and then all of a sudden like slowed down and then they needed to launch and they needed to Like Glue things together real quick um and so it's like you we're kind of like going in that original but it's like Polaris is pushing the modularity of the software like to the brink and we're learning a lot and like we're like the feedback loop is very close with them just because um they're a user that we're considering a power user that will like push the envelope of the SDK as a middleware they just had their workshop um devs giving a talk and they have like pre-comp asynchronous pre-compiles for their evm and and so on and so all this stuff is really pushing it then it's like Dave um like we hop on a call every two weeks and he's like okay these are the issues he gives me a list of like 50 and then we try and fix at least 20 of them before the next call um and then the list just keeps growing is that Dave from osmosis or Dave from uh bear chain and does it even matter do you just add them together and just call it all Dave yeah yeah we just we just aggregate them yes yes sometimes it's a depending on who you talk to it could be a Zeke proof except bear chain isn't real so so do you see do you see the cosmos SDK to move so I like the way you describe like the kernel and the VMS on top but you see the cosmos as you keep becoming itself like a roll-up framework uh I mean it's at the end of the day it's we want it to be more of a library and I mean like today it's Roll-Ups like people are raising millions of dollars on the phrase in their pitch decks of roll up I am a roll-up um and so it's like yeah sure like it's a it's a roll-up SDK and then maybe tomorrow it's a blockchain and everyone's back on the blockchain sovereignty like owning your own D.A and everything like that and then all of a sudden like okay like we want it to be where the application developer can decide between a roll-up or a blockchain like up until lunch so it's like it's basically the they're building their state machine everything stays the same they're just deciding between um finality and like or longest chain and then all of a sudden it's like okay we want to be a roll-up or we want to be a chain because maybe it's like they raise money to be a roll-up and then all of a sudden like they're getting a lot of hype they're getting a lot of users on their test Nets and stuff like this and they're like okay maybe we can own our own sovereignty um and our own D.A and let's see how that goes because at the end of the day if it doesn't go well they can also roll back to be a roll-up um I mean we're seeing this with uh like Crescent is also kind of like playing around with the idea of being a roll-up instead of a chain it turns out its run UPS aren't real they can come back to being a chain exactly for them uh Sean You're Gonna Be My tournament combat expert today so how do we because you have experience in that um how do we make commits more roll-up friendly the same way we do with IBC and rewrite it in Rust we write it in Russ that's step one I think like at this point um I've thought about this a lot and like there's one idea of making like incremental progress um on sort of the the core components like you know block saying State sync the P2P layer these sorts of things you know rebranding it I think what would be interesting and a good sign of like commitment to the future is if we actually you know put together a little bit of money it doesn't have to be that much all at once maybe five million to start and we actually just like you know pot commit to building a second implementation of the core client that's supporting like 100 billion dollars of value I think I think probably 5 million is enough to start and I think it'll probably cost 20 to finish um something like this and and I think that you could build in different incentivizations maybe it's mov maybe it's relayer fees I don't know there's there's probably a bunch of ways to sort of create a sustainable model for when this infrastructure has product Market fit you should probably not monetize infrastructure before it does but what it does it should be monetized and yeah I think it'd be interesting to start to start from sketch because I mean it's like tenurements what 10 years old in crypto time which is no 22 000. yeah it's it's it's 10 years old which is 100 years old in crypto yeah I think whether it's in rust or another programming language what we fundamentally need is better modularity out of tenderbent you know it was uh like we accumulated users before we were able to make the breaking changes that we needed to really have the flexibility in the core software and if you go look at the one function that is the state machine with the giant switch statement you see all of the pieces of storage in P2P and mempool just plugged directly into that function in a way that makes it literally impossible to pull out the different pieces and work on them individually if we had a more modular tenderment then we could allow users that want to continue to use the core protocol to do it and then allow better experimentation at each of those layers in an independent way where it doesn't block on a core team and yeah I've exactly got a lot of thoughts on this just to just to build on what code does too and there's something we can't see but I mean um like talking to the roll Kid team like if you look at roll kit then what it is um it's if if tenement if comment was modular and like it was they had interface separation between everything like roll kit would most likely be using the glue like the node package to glue their specific packages together their own P2P whatever they want but at the fundamental um base at the fundamental Foundation it would still be Comet and they could still be using the mempool in a much more um easier way than they are now um and so it's like I mean like at the like potentially you could say that like if Comet tenderment was fully modular and it was actually nicely written um there wouldn't be a need for roll kit like equal role kit would just be a another couple modules for comet that's interesting I don't know if they talked to us about that but that would be uh that would be something to follow up on I also think yeah there's like this opportunity um like I know for example like scroll is looking for a decentralized sequencer and they're considering tenderment right and it's like tenorman can play multiple roles because it is as many things at once it is a consensus layer but it's also a sequencer and a decentralized sequencer um and like I think when you ask the question like how do you make tender mitt more friendly to roll ups I mean first of all I've asked begs a question of like what is a roll-up um and sort of like what do you need to abstract out like in the case of Celestia it's posting the data to you know the the data availability later so it's like maybe creating some kind of like better tooling around that but I also think it's like you want to make I think you want to separate out the pieces of tenderbent so that the people who need the decentralized sequencer which I think is going to be a huge thing in Roll-Ups can just use that and the people who need the consensus with which they may not need um can be just like separated out on that note I I think that the and this sounds horribly heretical but uh here it is I think that the uh POA design space is something that's incredibly underexplored like why would you pay a DA and a sequencer and like all these different pieces if you just need to spin up like a five to ten node validator set that maybe there's some ability to rotate those validators some different controls over who the validators are different ways to punish misbehavior and uh then you've got full tender Bend you've got the ability to IBC to anywhere and maybe it allows you to still opt into some of those services like data availability that you might need but I think that that's like probably one of the biggest needs is a better POA module for the SDK I've got one that I've been working on that's sort of like a copy of the open Libra one where validators vouch for each other and if you've got enough vouches you can join the set and if your vouchers get pulled away you get kicked out a very simple mechanism but you can easily imagine advancing that more how those vouches are given out the number of vouches that are needed there's a lot of like easy parameters to play around with there that I think would offer a lot of flexibility to app builders right as a short-term solution or as a long-term solution this POA thing I think that like there's this idea of progressive decentralization you know everything starts out a little bit more centralized like an idea starts in one person's head and then it sort of propagates outwards and we see this deeply in the ethereum community with the optimistic Roll-Ups op is a super common stack but I don't think they have the fraud proofs working on mainnet right now so like does it give the trust assumptions that they're billing it no it's like one sequence for running an AWS so like is a five-person validator set better than one sequencer running in AWS can you pull that POA module and then plug in a different staking module or a different implementation for security later absolutely and I think that because of the flexibility out of the course stack the ability to uh sort of progressively decentralize and change those mechanisms over time is a huge benefit so Marco you may take note for the POA module from Jack um yeah so let's talk a little bit since we have Skip and make a take here let's um you guys have been evolving like both projects kind of move I believe maybe um that's what I feel at least away from Mev and more into intents and ux and uh more like uh immediate topics so maybe Sean I think you retired the module recently like the you you had built a an Mev module for chains uh maybe can you talk a little bit about that decision and where Mega Tech is heading well I think like Mecca Tech never wanted to like introduce new intermediaries into the supply chain I think we wanted to integrate supply chain like integrate like the parties that were there like Mev was founded to like or sorry Mac attack was founded to like rewrite tender Mitten rust is the truth and like we explored Mev because we thought it was like going to be a viable way for sustainable funding for infrastructure that's why you had the budget and everything yeah that was like the whole the whole premise and and when we look at Mev and I think like skip also diagnosed I think we had similar diagnosis at this the same time is like one there's not that much and it's really an application Level thing that is inevitably going to be internalized by protocols right I don't think there's going to be a singular block space Market you know I don't think or unified execution environmental or whatever you call it I don't I think Suave is going to be great but I think uniswap X is also going to be great for those things I don't think Cal swap is going to go away the day that um that Suave is is live there's going to be there's going to be many markets and so we want to build like the infrastructure that supports those many markets oh all good um yeah I mean Mev is very small in Cosmos um if you want to be a search or I would not recommend it uh I'd say like where we've looked more is you know we got very deep into this like transaction pipeline right so you know looking at where transactions are coming from and and uh you know uh IBC based chains really have two sources of order flow one is from the front ends right so like your wallet uh or a front end um and then the second one is relayers right so so relayers are inputting transactions into a chain and we just started to think a little bit more about like well how can we sort of like move a little bit higher up the stack to actually leverage some of the stuff that we had done to make things easier to use and so that's really when we got into this you know IPC routing issue which we realized was a problem for a lot of people um that's generally where we where we we'd like to be in the future is is really thinking about how can we use how can we better use the transaction life cycle to help users and make Cosmos usable and interoperable um and uh you know like sort of power it by Mev you know you use like the pieces of Mev like simulation and bundling and ordering and you know block space construction to try to make that process um financially sustainable potentially who knows uh but then you know definitely uh you know like better usage yeah and I just to like tack onto the end of that real quick over the other stage there's a lot of folks talking about proposal Builder separation complexity strategies and a number of other things and I think a lot of the res the reason for that is in ethereum there's one big pipe where all of the like exploitable information comes through and like that's where the Mev comes from and because of the the architecture of Cosmos there's never going to be that one big pipe and because of the ability of app devs in the app chain world to control their underlying consensus it gives them a lot more tools to combat this and there's a lot more different ways but I think that we're very lucky as a community to be able to watch that one big pipe see how the battle over it plays out and pick the best in class Solutions uh for that over time I was wondering for one one more question for uh Skip and make it take like you guys are both both evolving in the same space um are you looking at each other to see what the author is doing and trying to feel another need or what's uh what's the strategy between your two companies we talk every month we talk a month yeah nice chat what do you talk about whether you send an NDA boxing rematches no uh we talk about like what we see the ecosystem needing and then how they can complement each other in in in in in growing that that pie and seeing if there's room to collaboration or you know friendly competition we try and stay open to both yeah I'd say both have a lot of respect for each other's team um and uh yeah I think in general um we want to make sure that I think both of us want to make sure that we're like actually moving in this direction of ux as far as I understand it and making sure that we're not just like you know we've recently been tweeting this thing like grow the pie right like that's really where we want our mindset to be um because we've just realized ourselves like Cosmos is not big enough to support us um and to support you know the amount of teams that I think want to grow um and so we're just really laser focused on trying to bring do anything we can to try to grow the ecosystem um no matter what it takes because otherwise it's like why what are we doing um that's really where we've shifted cool uh Jack I wanted to talk to about hyperlane with you so that was a big deal last week right like hyperlane is uh is going to be like at least the way I understand it quite competitive to IBC within the cosmos ecosystem so yeah what's your what's your take on the on the hyperlane and why you why did you decide that stranger should work with them I mean Max is down there talking about growing the pie and I I really think that that is sort of key to my thinking as well we need better routes in and out of this ecosystem and you know For Better or For Worse it's just the reality of the situation we haven't been able to deliver them as quickly as we needed to with IBC and especially with the Advent of Roll-Ups and all of these things coming we need a way to be able to participate in those economies as cosmos and if we don't have them then you know this problem of ecosystem growth continues to be compounded that's why we chose to take the work with hyperlane they've got a lot of traction within the their existing Community they're incredibly ideologically aligned with IBC and is part of the contract with working with them they've agreed to figure out a way to align hyperlade with IBC whether it's figure out a way to fit the hyperlane verification into an IBC client which looks practically impossible in a lot of ways but building a shim layer that allows developers to use either semantics and the different transport layers moving to and from these Roll-Ups I think even like we were talking earlier about the number of different like clients that need to be developed for these different roll-up architectures um you know that's a huge lift it's going to be hard and people are going to be inventing these things faster than we can connect them and there's always going to be a need for these kind of committee based Solutions and I think it was like in January I had a long dialogue with Zachy about this I went back and forth with him for like a month and I was like personally like really conflicted honestly like I've dedicated the last bunch of years of my life to IBC and I was like this seems competitive do I need to do it and you know we do need to do it and we're not going to win by sitting off on an island and telling everyone we're right we're going to win by being pragmatic we're going to win by working with more and more people and IBC is this open standard with no token attached with this sort of like Immaculate Conception I do fundamentally believe it will win but we need help we need to work with some of these other things and figure out how to build those developer experiences and keep linking this ecosystem to more ecosystems and that's why I took the hyperlane work it's kind of like early on where like a cosmos came about because it was like oh there's a bunch of chains they're all siled like they can't communicate to each other let's create a communication protocol but then there's now so many communication protocols but they're all like ecosystem bound so like within polkadot you have like xcm that's like within their poke within their ecosystem but then you have a multi-sig bridge going out and Cosmos you have IBC and then a multi-sig bridge going out and ethereum it's like more or less all multi-sig bridges and so on it's all multi-state bridges so now it's like we kind of have siled ecosystems of trustless bridges so now it's like okay like we can connect chains in ecosystems now we have to pass the barrier between ecosystems but I also have a question like what is it I think uh they just asked me to stop I wish we could continue but I don't know if we have a like this lady asked me to stop the bell I don't know I think someone's up next Tebow thank you very much thank you for moderating this great questions great discussion thank you [Applause] give that back to them all right thank you to our panelists we're going to welcome Yong in Lee next to talk about securing connected liquidity for modular blockchains okay my name is I'm I'm in charge of the hero partnership at Crescent and I'm here to share what we've done and what we are going to do about the modular blockchain and before before I start about what we are going to do and what we've done on the modular blockchain I just want to point out some strength and advantage of the modular blockchain thank you can I get some help so how can I oh I see so I want to start with the why modular blockchain first so why modular blockchain first so modular instead of one blockchain doing everything modular modular blockchain specialize and optimize uh to perform a given function to perform a given functions and this specialization provides a provider breakthrough in special scalability low entry barrier and flexibility also interoperability it's enabling developer to build smart blockchain application for method option okay let's Deep dive into each strength one by one the scalability scaling difficulties mostly occur when one blockchain tries to handle all functions at once under a single layer but when we think about the mode core concept of the modular blockchain is that they separate all functions they separate the function across the multiple chains so this kind of the concept uh bring a lot of the scalability so the modular layer 1 like a Celestia they can specialize in providing a daily data availability and security so modular layer 1 can focus its own research on providing data availability and security for the layer too like a Roll-Up okay next one is the so next one is the actually the next page is the low entry barrier for the developers if developer could focus on the minimum such as execution and they can just plug in another modular blockchain component to handle the specific task like like execution then it can highly reduce the burden of running a new blockchain so um learning a new blockchain so next one is the so I I just want to back yeah I want to explain about yeah I'm sorry about that so the last one is the flexibility so purpose build blockchain pro offers greater flexibility with respect to trade-off and Implement a design design implementation so um layer so the design Implement so when you think about the security and data availability layer they can they can get an extra benefit from the scale from the scalability because all all kind of the transaction is process it separately and when you think about the security execution layer which is optimized to the scalability that can get a huge if huge benefit from the security so we just talk about the what kind of the benefit and all kind of the advantage of the modular blockchain has then let's I just want to share about how we can flourish the modular blockchain so there it is really important for the modular blockchain to expand and build their their Market that can utilize and intensify the modularity so there are so many segments uh segments you can see the D5 game and NF team at Toppers which can intensify that and tap into the modularity so I just want to uh talk about the D5 more deeply so when it comes to the D5 so to bring out the best in the modularity is that securing the connected liquidity so Crescent has a crescent has a vision to support the securing the connected liquidity then securing the liquidity is securing the connected liquidity is why is that so important it's because that because securing connected liquidy play an important role not only for the D5 but also the entire ecosystem there's a great example of the arbystrom actually RB Trump said to Market strategy that can bring a high tvl and high high connected like the entire this arbitrary ecosystem so they set the high tvl Market strategy so they start to incubate a lot a various part of the segments is DM and they they expand and they support a lot of the various segments D5 or D5 and various segmented if the app the app protocol so here's interesting data that we can we can see how arbitrome actually make a great Market strategy and go to market so the first of first of all the tvl they set the high tvl Market strategy so they so they incubate and they start to expand their Market which can bring a high tvl so this is as you can see at this point you can see the high tvl and it can make a lot of the app as well so because they their go to market strategy was the incubating various DF and various segments so the number of the DF is increased and next one is the daily active user because of the their go to market strategy their daily active user grow naturally because the number of DF increase and and organically a lot of user brought a lot of transaction as well so consequently as a result you can see a lot of the transaction can make a revenue of the entire platform so here's the here's the virtual cycle that RBS are actually going through the TBL growth and they set the market strategy that can bring a high tvl so they incubate a lot of the DM and they incubate the utility and it makes a lot of user and it brings a lot of transaction so transaction brings a lot of a lot of Revenue so this Revenue can for can contribute a lot of great utility and a lot of or tons of the user user experience and user inter face so it this kind of the virtual cycle going through over and over and over and again on the entire arbitrary ecosystem so it's the modular ecosystem so to thrive in the modularity ecosystem they need to focus on the securing high high tvl so Crescent has a vision to Crescent has a vision to migrate specific feature on the Celestia to contribute the celestial ecosystem we have been built Crescent on the Celestia for securing the connected liquidity which means a tvl so I'm here to share about our experience about uh our experience about the module making a modularity and migration on the Celestia all the experience consists of the first step the first step is the roll kit version so actually the celestial rocket is made by the ick on and the most app chain or the most made by the SK also so you guys need to check the each for each version of the S key to make it compatible you need to understand what kind of version SDK each each thing has been made the next step is for the customized SDK you need to choose the two direction the first direction is the rebasing and remove and second direction is the overriding and debugging the reason why we need to go through this process is that most app chain heavily customize their SDK for their app chain so and this kind of SDK like customized SDK can cause a conflict because rocket also made by the ASCII and f chain also made by the SK so you need to figure out what is the conflict and you need to you need to fix the conflict the first way is just rebasing and removing all the conflict and second one is just overriding and debugging all the conflict so actually we we tried a both of way the first one the first direction we tried it under the block race Chestnut on the Celestia and it only take a it only took one day and second direction we tried it for today's demo and it took three days the first reaction is easy and fast and second Direction takes much more time but there's a two there's a big pros and cons the first one is easy and fast that is a big strength but you cannot completely migrate your whole functions on the under Celestia but second because it's just removing it the second direction is overriding and debugging all the conflict so you can use complete version of your your old protocol on the Celestia so on the right side we write down all the modules that make a conflict between look at SDK and Crescent SDK on the Black Block race we just remove all the conflict but for today's demo we debug all the function so I can show you the complete version of Crescent on the Celestia so here's the last last step of the our experience so we finished to finish to make a roll of as under Celestia so I just want to share about our complete version of Crescent on Celestia so this is the way we choose the second Direction so because we debug all the conflict we can use complete version of the Crescent on the Celestia so not only for the swap but also the order book transaction and the range it pool we can use all our protocol function on the Celestia very very completely so this is the demo that we walk walk through all our protocol function on Celestia and it works very well services so this demo video uh is the two minutes lasting because we are testing all our function function and all our protocol on this LST to check it uh working well so all transaction and all Swap all order book all the thing is working well okay can we move to the last slide so I just want to share about our review so without the critical modification so it's really easy to integrate it on the Celestia so that is the big strength and actually Celestia is made by the AC so it's really easy and convenient to the developer who has an experience on the cosmos ecosystem and the last one is roll obtain has a row dependency to the Celestia main chain so it's easy to conveniently operating the chain so here's the here so this is the thing we want to share about the experience we we've got and thank you for listening this presentation thank you [Applause] all right thanks young and we're going to bring up the next Cosmos panel the applications panel so we have our moderator Zion Thomas okay what's your name Walt what Smith all right Walt Smith is our moderator of the applications panel and our panelists are Albert Chan hi hi all right that's Albert young and Lee who you just saw right uh Yelena Uric of jurik maybe I shouldn't have been so uh optimistic about Noble and uh Dan Lynch of cosmology and Dev bear Dev bear and Dev bear is coming but we do we want to wait for him or s or go on and and have him join in a bit okay we are waiting uno momento no no problemo huh we are waiting for death bear so how did Dev bear is anonymous uh is he oh he has a mask yeah okay all right is it a bear mask oh bears oh wait is that him all right we got Dev we got Smokey wait oh I totally see his face I don't want to you know uh anticipate anything I don't want to like give it away but it's possible the Bears are the most bearish so let's see what's that that's all about but we'll see what he has to say for himself Deb bear is putting what project are you with uh are you with the team you're a Galaxy oh okay okay all right all right I see a bear in the back he looks like a college mascot yeah all right and we're on we've got Dev bear am I sitting on their left yeah the thing dead mouse discount okay perfect I'm good all right Cosmo's applications thanks thanks for joining us guys I'm uh Walt I'm an investor at Galaxy um we've got a panel talking about applications in Cosmos the over under on this guy taking that off is 20 minutes so you can place your bets in the back with skip but uh um to kick things off I'm going to let everyone kind of introduce themselves what they're what they're focused on within the cosmos ecosystem or adjacent to it and kind of talk about applications that they see today um that their ecosystems are focused on but also um have already built and then um kind of who they are as well so if you want to go ahead and kick it off uh hey I'm Dan Lynch uh founder of cosmology we're building the Adobe for web3 meaning we have a suite of products for the interchain and which our products are actually becoming the standard we're probably powering it's hard to give exact numbers but probably about 80 percent of all the front-end applications in the cosmos everything from low level encoding to wall interfaces all the top projects like osmosis do idx Juno and stargaze are using our tooling for everything and essentially our focus is really on just minimizing the gap between intention and execution helping developers execute their ideas a big fan of what you're doing um so I'm Elena I'm a co-founder of noble noble is a native asset issuance chain in the cosmos ecosystem we're bringing native usdc to Cosmos and also other stable coins and working with acid is Shores one-on-one to really enable that um on-ramp into the ecosystem so happy to be here hi I'm Albert I'm the co-founder and CTO of injective labs such as the development company behind injective the layer one blockchain so injective is a blockchain built around Finance focusing on defy at our core we offer a high performance on-chain fully on chain decentralized order book based exchange for spot perps Futures and binary options and have a whole host of other defy applications and now we are looking into integrating with rollups to bring svm and evm compatibility as well Cosmos uh hello my name is I'm in charge of the head of partnership at the Crescent Crescent is the one of the spinal project by the B Harvest uh per Crescent is the order book tax I order book hire bear attack so we are supporting old Trend old Swap and transaction and defy D5 defy protocol transaction and we want to build a nice to meet you and and last but not least I'm Deborah CTO co-founder bear chains evm compatible one built using Cosmos oh do I not have my mic on is it not working yeah how about Mike and I'm good oh is it good it's ridiculous but it's good um so yeah to kind of start again yeah uh bear chain evm compatible alone on Cosmos um what we did is we replaced proof of stake with what we want proof of liquidity it's an extension of delegated proof of stake that like aligns validators with providing liquidity on the chain and makes it so that uh the act of providing liquidity is what's basically giving you network ownership in addition to that we've also built a Polaris which is an evm framework that allows for True native EDM equivalents that's interoperable with Cosmos IBC and all of all of that fun stuff and super super excited to be here to talk about Cosmos applications yeah and just super quick because I think we missed it if you could just say like wear your protocol or project is at is it live is it on testnet so just starting back with you going quickly through uh yeah we're we're live uh we're currently powering uh stuff on osmosis do you know stargaze dydx I think they're using our tools but they're probably not launched yet the new Cosmos version as well as a ton of other projects so yeah we have about eight different products all live uh worshipers uh yeah so we have a mainnet uh with a validator set that is a hub uh validator set so it's a subset of the Hub um and we will be transitioning to Interchange Security in a few months yeah injective has been on mainnet since 2021 so about two years now so croissant have been launched since last year and it's been a year and a half and for the bee Harvest we're running a market maker and r d Center and toss as well so all of all of our protocol are on mainnet will be entering test net throughout Q3 and we have multiple teams starting to integrate Polaris into their devnets as well great so kind of um I think for the audience we're probably you know we're all at a crypto conference so we're all pretty familiar but um just kind of interested in hearing different perspectives you know we have like a general purpose chain we have a couple versions of like interchange security or or applied um some sort of like restaking or shared security and then um someone who touches almost every Every Chain in Cosmos so um and kind of like your words and we'll start with uh Dev bear who's working on something a little bit more general purpose where do you kind of see application design and Cosmos being different and and why is it different or if it's not different um why do you think there's such an emphasis on like application sovereignty and kind of like a tight coupling with consensus and the other pieces in the stack yeah I think having an app chain it's really interesting because it does give you that solverty as you mentioned right it allows you to Define your own rules it allows you to find how you want to build your your application not only at an application layer but in an infrastructure layer as well um and a big part of what allows for that is the ux the dead ux of Cosmos you know ability to take something that's complicated like a blockchain you know bring it down into things that are simple to understand like modules and really break things apart I think has done a really really good job of that additionally I think what's a really cool interesting thing is the concept of like app chains that are built on top of VMS as well so things like op staff where they're like okay you know you can launch your app chain et cetera et cetera and write all your things in solidity which is like a framework that um that you know people know how to use really well and that's part of why we build Polaris as well as we see that you know we want people to build app chains we think app chains definitely the future but we want to make them more accessible to devs who maybe don't know go or arrest and feel that sometimes having a virtual machine is the way to go and we can just bring it back this way I think like option concept is pretty interesting because I'm very new in customers ecosystem uh I know customers has a like pretty long history but I was I work at channeling for of almost three years and I moved to here last year so it's pretty interesting so all the application on top of the app chain can fully enjoy the customer customization so it can pretty uh friendly for the protocol level so for example on the ethereum basis like it's really hard to use a fast fast transaction like the order of Magneto fast transaction but it can it has a challenge on the ethereum but on the outline it we can customize it and we can use all the different the module so it's pretty interesting for the protocol and the apps level I think some one new area that injective has been thinking as an app chain as a sovereign f chain has been with regards to Roll-Ups um and you know mainly Roll-Ups you might see on more established layer ones like ethereum where you cannot make protocol level changes so it's restrictive to what you can do but something that we've been you know thinking through is like what if you could have for example a more of an enshrined roll-up where um and the reason for for doing so is to have more Atomic composability where suppose like each of the validators that of the injective blockchain were also part of the uh sequencer Network then they could just you know submit the the header and State Route data information to injective and for example that could allow for um bypassing a fraudproof window right and allow for more Atomic composability but you know these sorts of protocol level changes you would never be able to make be able to make on something like ethereum because you know it's just ossified and it would take years for anything as radical as that to to be to have to occur but you have this flexibility right alternatively you could also explore things like energy and security um so if you want to use instead of roll up have you know something like a fork of fmos or parachain to have evm capability you can do so so there's a lot bigger design space that you can experiment with and you know that that's I I would say at all layers of the stack right and with people like skip you can do things like prioritize mempools you can what inject it for example you can use ethereum accounts you can support metamask So at all layers of the stack you have uh flexibility and um that you know really allows for chains to differentiate themselves and find unique value proposition to offer to end users eventually yeah I mean I think for Noble we like love we Leverage The Cosmos SDK quite a lot and I mean there's all these modules that you know make a lot of sense uh you know for for Noble's use case and so we really leverage a lot of the open source sort of you know modules that teams like osmosis have built when it comes to things like token Factory or even things on the protocol side like you know the packet forward middleware so just really leveraging the open source kind of Primitives that exist is like why we think it's really easy to build in Cosmos to be honest I think that um the cosmos represents like the flagship representation of the third generation of blockchain if you look at the first generation of blockchain which is digital money like store value couldn't do much with it so we fixed that by creating the second uh generation of blockchain which is like ethereum and programmability and so the third generation represents interoperability um kind of like horizontal sharding where you can create your own app chain and customize things what's also interesting is it also opens up a whole new design space a lot of the tools in ethereum are very monochromatic because everything is just built on one chain and they're sort of you know one library for sort of interacting with everything Cosmos is very unique because now we have to actually look at all these different changes all their customizations and still try to come up with tooling to create these cohesive ways of working with their functionalities so that's actually a really interesting challenge for us that we've also solved with you know compilers and transpilers um and and so it's actually really fun working with all the chains and helping them expose all these unique different unique features but then creating like a unified way to access them so I really love the cosmos and whatever's building yeah so I I think it'd be interesting to get everyone's kind of perspective um you know ethereum's 2015 Cosmos is 2017 really 2019 and uh right around 2019 you know ethereum kind of transitions away from plasma and starts thinking about optimistic scaling with Roll-Ups and then even kind of looking into the future with validity Roll-Ups so how do you I mean injective you've mentioned it you've also mentioned kind of this transition from money to programmability to kind of the cosmos third vision of like an internet um scale type system so how do you guys kind of see Roll-Ups within this framework do you think it's all compatible or very differentiated so you can you can start um I've definitely heard some people talking about creating IBC connections to layer twos I will admit I'm not the expert and roll up so I'll pass it but I will say that I have heard some uh interoperable support well we're really excited to kind of you know connect with the roll-up ecosystem especially obviously with the Celestia ecosystem from from like what is currently kind of the status quo it is not a solved kind of question of like how you bring IBC to Roll-Ups but you know bridging protocols like hyperlane and kind of other examples are trying to you know solve for that so um you know I don't know if that like answers your question but I think that at the end of the day like IBC as this kind of standardized interoperable kind of you know protocol for you know permissionless like message passing you know at least for Cosmos like kind of bulls or whatever like that's what we see as the future of this you know message passing across different different layer ones and layer twos right now it's like not the case yet and other than I guess poke it out to Cosmos but um you know I think we'll get there eventually yeah I would say there's a lot of engineering work involved here particularly um you know for IBC you have to currently wait for the fraud proof window to pass which in the case of you know ethereum is seven days so obviously these windows can be shorter but that really hampers composability especially from developers or users and Cosmos expecting instant finality because that's how it currently is you don't want to you know set back uh you don't you don't have to make that trade-off right so I think that's why as I mentioned before we're exploring ways to have more Atomic imposibility and the design space is quite quite large as a as an app chain because you don't you're not restrained by you know existing consensus rules or protocols that you have to follow um but yeah I will say that injective is still quite early here but we are partnering with um you know espresso and systems and many others to figure this out yeah actually like in 2019 and only of 2020 2020 it's like IBC and Cosmos is quite fake and it's pretty early to for me so I don't know what they're doing and what what they will going to build but after they launched the IPC and I ICA stuff I pretty understand what it is and it's pretty simple and easy to the retail not only for the retail user but also the developers so like thanks to the IBC like a lot of the developers a lot of the retail users doesn't need to worry about the bridge bridge risk and Bridge issue like recently like except the IBC a lot of the bridge they have a they still suffering from the rich Bridge risk so if we can utilize like IVC concept or ICA or old customer spaces uh technology that we can solve a lot of problem I think it's pretty good to good to start and with the modularity and intensifying the modularity technology we can break we can break through all the challenges I guess yeah I think at the end of the day like speaking about it specifically from like a roll-up context is is an interesting lens because at the end of the day I think it's important that people have the scalability and have the tools to build applications that they want and we can talk about like what's the best scaling mechanism is it roll ups is it things like ICS but at the end of the day like people who are building applications just want to build applications um you know people that are building with you know react for people that are building with Django they don't really you know care what they're using to get the job done it's just the fact that it works for their use case um and I think we need to think about the scalability and these bridging solutions kind of in the same way where you know if I'm an application I need access to these other applications or to liquidity or something of the sort and like what's the easiest and lowest cost way to get that for them yeah I mean I think it comes down to like the path of least resistance and like what is like the most optimal path from getting from point A to point B and I think in Cosmos we see that like really simply with IBC and doing a token transfer like I mean it used to be kind of hard like when IBC first launched in 2020 I like I remember being like what is going on like you know how do I like do like a manual token transfer like in Kepler with like the dev mode the developer mode story but um that has like greatly improved in terms of like the user experience in the past like I guess three three and a half years um you know things like automatic routing things like pack and forward middleware things like what skip is doing to just make it super straightforward to get from point A to point B without having to like do a million swaps in between which like used to be the case not quite a million but you got my point yeah so kind of coming from the sidelines I think um obviously developers love kind of like being in Cosmos land like it's very friendly it's great documentation there's a lot of things that you can kind of plug and play and and build how you want but um crypto broadly but also specifically Cosmos has struggled with adoption it's everything's pretty prone to like you know the financial cycle but um what are kind of the applications and also the changes to the stack whether it's ux custody something what are the kind of the next steps in the next you know six months to close out the year and then going into the future that makes you really excited both on the application side and then on kind of the user experience friction side uh yeah well I mean the way the way I see this is that um you rewind about a year ago and to build an application in the cosmos you know first it would have taken you you know between three to seven days to connect a wallet um and you'd have to manually write all your encoders um so this is something where you know you're you're trying to build an app you have this great idea but you get lost in the weeds with all these you know complexities around things that as a developer let's say you're trying to build the user interface and you're trying to create that user experience that will onboard these non-technical people or these lay people from The Real World into crypto um but but in reality the type of Technology skill set required was like a senior engineer that understood blockchain so after cosmology um came out of the scene we basically abstracted all that so we can minimize that distance to where now you have your ID you can actually build it and this is actually quite new we've you know only recently kind of gone through the full stack to where you know if you have a cosmos chain and or a cosmos smart contract all of the front end tooling can now be completely automated so they were kind of fighting this impedance for like the past you know year or a couple years now to where the user experience has greatly suffered because the developer experience has suffered so now that we've fixed that developer experience and provided you know a streamlined workflow for developers to the point where if you're a junior web 2 react UI developer you don't have to know anything about blockchain now to start building dapps inside of the cosmos so I think then we can bring in open the floodgates to all the web 2 developers who now have all these great ideas and they can build something and I think that's how we can create beautiful user experiences to have mass adoption yeah I mean I'll talk about it from like the perspective like a you know just like your average user and then I'll talk about it from like Noble's perspective but you know from the perspective of an average user I think it's you know a lot of what Dan just said like you know I think me is that uh my profile or kind of my Persona or my user Persona is pretty good you know I know pretty basic like HTML it's a markdown I can like read a little bit of go I like no logic but like I can't like you know fully code it adapt but there's all these tools all of these like really like seamless ways of like interacting with like the cosmastack so I mean this is kind of like back in the day this is a necessarily a thing that is around anymore maybe I'm wrong but things like starport with like you know a couple lines of code you can like you know create your own Cosmos blockchain this is a tool that um the ignite team built a couple years ago so just making like extremely user friendly making Kepler you know um kind of more versatile making all these like different integration points just accessible uh Obviously good documentation I mean these are all things that um you know need to drive our ecosystem forward and I think we're getting uh lot better at it and I'm quite optimistic so that's like more on like on the user side just you know on your like Saturday night like what am I gonna do I'll kind of play with starport like why not um but then you know more like mainstream kind of like what's going to bring like you know thousands of people to you know it you know the next thousands people to injective or to osmosis or to you know all of these app chains um you know I I talk a lot a lot about this it is liquidity it is like the institutions it is actually partnering with them and being able to speak their language and actually being able to advocate for Cosmos like standards and the cosmos stack and like going through the motions of like explaining like what is IBC like you know what is middleware like in this IPC world you know how how do you know how do you mint how do you burn like what are the standards for you know things like acid issue and switches obviously what like noble was focused on so um you know in terms of like the application itself um you know I'm very excited and proud of what we're doing with with Noble and you know bringing native usdc to the ecosystem and uh just really making sure that Noble can serve all of the other um you know app chains that need this you know liquidity need these like you know more institutional focused um actors to kind of come in and feel comfortable with the ecosystem not to put you on the spot do you but do you see like other asset types for Noble down the line and and what does that kind of look like I mean we're very focused on stable coins and we see like you know these Fiat collateralized stable coins as um having huge like real world like use cases and like one of the things that motivates like a lot of our team is Real World Adoption and I think we've seen uscc really do well in this space and so really we you know stable coins are like a big part of it and really just being an ambassador for that asset issuer within the space so you know not competing on D5 not competing as a Dex being just saying we are here to propagate your asset as far and wide as possible and making sure we have the right integration points and we can have people actually use it properly and not have these like concerns so um you know stable coins wrapped assets you know rwas we'll see where the world takes us yeah in terms of you know the next wave of adoption I think there's two things here to look at uh one is that there have to be sufficiently compelling opportunities and products for people to use um on chain that are are better or think that they they cannot find in in trotify or C5 um and and two that we have to have infrastructure and tooling that can enable um a lot more experimentations a lot more shots on goal to do that I think the work that you know Dan does for example at cosmology is great um but even it's at all layers right it's from the RPC stack it's from even in Cosmos like the kinds of applications like making the bar Lower you know it's quite challenging for people to learn not only rust but you know Cosmos and all these Cosmos Concepts in order to just build a simple application right so expanding the even at the Virtual Machine level like allowing for evm and svm um and and having good composability with that is really important um yeah and I I think also that like bringing real real world assets um is very valuable here um usdc as an example but also you know on-chain treasuries and and the initial promise of defy right like if like I I just talked to a protocol I forgot their name um you know you can as a user right now Buy treasuries in your shop account sure that's great but you know this protocol was trying to do you know treasuries plus you sell like a straddle so you can juice your yield further and it's it's that sort of thing so instead of earning five percent you can earn eight percent ten percent right that's you know one example of you know how D5 can can offer more compelling opportunities yes maybe it's not as crazy as it was in D5 summer but it's it's these sorts of experimentations that we have to enable at a much larger scale if you want to have a chance I think at um greater mass adoption uh I think when it comes to the mass adoption the most important thing is we need to make it easy from the protocol level like for example when they think about the sushi sushi swaps like beginning they just add one code and one function from the unisa so it's really easy to make an easy to deploy to another Pro DF but on the closed musical system they need to operate and they need to concern about how they can support the chain security so it is a very tricky part of the cosmos obtain perspective so not only for the running a like a protocol and DF they need but also they need to concern about how they can secure the chain security and how they can make a ballot their own validator set so it is a real tricky part but thanks to the Celestia so we can easily use their their module and their layer so they don't need to worry about the bootstrapping their own validator set on security or data availability so we can you utilize that kind of product very well and not as well as the Saga Saga Saga they support the app chain a lot so they can reduce the burden of the running a new app chain so thanks to this kind of the new protocol I think uh Mass adoption will be coming very soon yeah to get a talent I think a little bit of what every everyone said um you know obviously bias here is definitely coming from the ethereum ecosystem but seeing how easy it is for um people to deploy solidity and Viper Smart contracts on in that ecosystem and in retrospect or in comparison to like cosmosm um you know you need you need to be like a senior engineer to deploy a cosmos adapt but you know my 12 year old cousin can build solidity depths and you know send tokens to his friends and it's really easy um so I think getting it more more simple at the end of the day right like people don't want to have to worry about maintaining a validator set people don't worry want to worry about like learning rust or having to learn new tools they just want to be able to reuse things that maybe Legacy and maybe old you know as you mentioned ethereum 2015 it's approaching you know almost a decade old at this point um but in in that sense it's kind of reached somewhat of the JavaScript Legacy where you know when people who are maybe doing a coding Boot Camp or people who are self-taught get into computer science like they quite often more than not get into JavaScript because it's easy it's you know start making fun things they can see their progress if they're building a little web app or a little node.js app or react app or whatever and that's kind of how I see solidity is that you know you can you know clone soul mate deploy a little token and it just kind of works right so it's really friendly and makes it really easy to onboard not only experience devs who are building crazy protocols with opt-in components and stuff but the next generation of Builders as well who you know maybe still in high school or Elementary School I just want to make a comment I'd completely agree um in general I think it's not a technology problem it's a people problem and um you're right like rust is a very difficult language and Cosmos is actually based on Rust and if you look at things uh languages like typescript there are millions and millions of developers uh so if there's a way to like open those floodgates to bring those folks into writing smart contracts that's like a huge uh lower uh barrier of Entry um actually I don't know if you guys know this but cosmology while we've mostly been focused on front end technology recently acquired the tarenuan team and we actually have a compiler to Cosmos and that actually has a very sort of hybrid uh rust to end typescript like language is very simple makes the semantics of the smart contracts into the syntax so it's actually very simple and our goal with uh our Cosmos compiler is to actually onboard a lot of these you know Python and typescript developers that I see those languages as languages of the people and so that's a big part of our strategy to onboard more developers from web 2 into web 3. so kind of to wrap things up here do you guys want to each outside of the you know the project you're associated with uh what's one application you think represents kind of the cosmos coupling of consensus and application and kind of creating something unique really really well and what's something that could be within your you know your Project's ecosystem or it could be outside of it but still in Cosmos that you're really excited for and think could be a potential Catalyst or kind of um bring in more adoption I I don't remember preparing for this you put me on the spot I'm just kidding in terms of projects uh I think um the bad kids nft collection is pretty awesome uh because it's like super unique and like what first I was kind of into the punks and all these other things because you know I was looking at ethereum for inspiration it took me a while to realize it but like the bad kids are so unique um I know it's not actually like a you know like a project that's powered by developers but you know the stargaze team did build the nft marketplace um you know and and I'm really excited about uh bad kids and just like kind of like the um you know what Joe was talking about with you know the art world uh yesterday to osmo con I just found like really inspiring to think about um and I'm really excited about kind of you know catalyzing more of a creative artistic uh Creations by just you know giving more tools so people can actually execute their ideas I think it's been so technically difficult to build things that as we lower the bar um just just giving creators what they need to do and and what they what they want to build so that's about it yeah I mean I'm having a hard time coming up with like one one example like you know I don't want to just say like one name and have that kind of like you know live forever yeah um you know so what I'm excited about is actually like the components coming together so these different projects coming together and actually like powering something very meaningful so to you know to dance like point about nfts um we'll have a little bit more to share about this in a couple weeks but you know being able to buy you know and if a bad kid on stargaze one click with usdc um you know that's not possible right now there was a bit of like a Twitter kind of viral thing that happened a few weeks ago where a bunch of ethereum people wanted to buy a bad kid um they didn't know how they were like what are stars like what is this nonsense um well you'll you very soon uh it'll be abstracted away and it'll actually be very easy within your wallet to one click buy an nft with something like usdc or maybe even another currency so um things like this are just really exciting and I think will make people realize like how powerful like the cosmo seek system really is yeah I'm excited quite about the layer two work that we're doing with eclipse and also espresso actually having a decentralized sequence sequencer Network um and yeah having it in production with IBC as well so there's a lot to figure out there for interoperability and atomicity but I think these are solvable problems and it's just a matter of actually you know doing it so yeah um I think the Lakers taking protocol improve a lot of user experience I guess like from from the capital efficiency perspective like most of the crypto people they don't care about the capital efficiency and the risk management management they're not good at this kind of stuff but uh things to leak is taking protocol user can experience and the user can understand what is the capital efficiency otherwise the better better choice to invest and what is the risk management so I think it would be it was a great use case it was a great application for the user experience about the D5 protocol and yeah and for the upcoming protocol but not the new protocol but I I heard that I don't want to speak the spec specific protocol's name but I heard that some protocol and some of app chain they're preparing The Interchange query Oracle right now so actually Cosmos ecosystem we don't have any specific Oracle protocol so we need it definitely also I like using your interchange query is very very important to the entire Cosmos ecosystem because we are like using our IPC can make a delay so entertain query would be ideal so I'm looking for the and I'm very excited about the new Oracle protocol yeah a lot of what we're focusing on is figuring out ways to take existing ethereum things and bring them into Cosmos and onboard those users in a way that's really easy for instance one of the things we're working on with the guys at skip is a Road Extension based Oracle that will tie into bear chain to provide to provide pricing and those pricing will be exposed to the ebm Via an interface that's identical to chain link right so we're trying to find ways to onboard users and bring users from other chains from the evm ecosystem into the cosmos ecosystem through things that they're familiar with you know when you have to reinvent the wheel when you add friction when you you know force people to learn what pack32 is when you force people to learn what cosmosum is it can add that friction but I think what kind of the in the angle that we're really approaching is like okay you know bear chain is an evm chain how do we you know bring evm users that's kind of you know it's very familiar to them et cetera and over time they'll still realize oh you know what's this IBC pre-compile you guys have oh what's this what's this and you onboard them into Cosmos in a way where they don't even realize they're being onboarded because they just see it as an evm chain that's something that should we're familiar with great thank you um we have about three minutes for any audience questions um could be for a specific project or more generally otherwise we can wrap it up so any questions I think everyone's just building Cosmos application and so they don't have any questions well thanks guys um we'll stick around after if you want to grab contacts for anyone but thank you very much for joining us thank you thanks ABC s [Music] thank you foreign [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] now we are on the very last Talk of the day we have Dev bear from bear chain to talk about Polaris thank you very much it's audio audio good here's your clicker okay no your clicker do you have it you have a deck I don't have a clicker this is the clicker can you see are you okay putting it in front of me I got like limited your eyes are like okay yeah yeah it's not it's not ideal but the audio's audio is good though Perfect all right green button to go forward perfect um so yeah so today I'm going to be talking about players DVM Frameworks um and kind of give it a high level overview of bear chain as well so a little context of myself Devar um CTO bear chain um and bear chain is an evm compatible L1 built on the cosmos SDK and what we did is we replace the traditional proof of stake system with what we call proof of liquidity which allows for reutilizing staked assets to provide liquidity and making validators validators sorry validators take weight associated with how much liquidity they're providing so before we get started just want to give a little intro of our team our team comes from a wide variety of Team comes from a wide variety of backgrounds including web 2 web 3 all over the place and wouldn't be able to to build anything without them you know this being a cosmos adjacent con conference a lot of people ask us like why you know why EDM and the simple answer is there's the developer tooling and just the access to to utilizing the technology is so much simpler um you know there's millions and millions of JavaScript developers and we see the evm as kind of the JavaScript of of blockchain and we think that by utilizing these type of Technologies and making it really easy for for people to build applications that we can onboard more users into into blockchain in general and the next question is why Polaris and when we sought out to build bear chain we had a lot of complicated logic that we had to add to the base layer and we saw that just like simply forking death we're taking another evm framework made it extremely extremely difficult to do this we looked into kind of some other app chain Frameworks and we realized that the commonality between them was that a lot of the time that they would get to something that was evm-ish and the problem with evm ish is that it's different than what developers assume it's different than what people assume and then you end up with compatibility issues like we've seen with like ZK sync and some of the other other l1s where it's just not close enough and it can lead to problems in just poor developer experience and the idea here is that we want to introduce an easy way for app chains to create an evm equivalent evm that allows for them to just plug it in drop it in and create easy and a nice environment for extensions Etc and the idea of this is that we wanted it to be modular so we wanted a way to completely break apart all of the different aspects of the stack very similarly to the concept taken from the cosmos SDK so you know being built on Cosmos we have the networking layer the consensus layer and then the cosmos layer as our traditional application layer and we propose adding a new runtime layer on top of it which allows for the VM to be completely separated from the cosmos runtime which allows for it to be running a fully native standard UVM like you would see on ethereum mainnet and how we accomplish this right now given the limitations of comment in the SDK is we actually are able to build evm blocks from the data that's provided from comet um so we take things like the just the block header in general block height block time stamp Etc aggregate all the transactions out of it and are able to construct an evm block that is equivalent to to how you would see on on mainnet then what we do is we apply all the evm state Transitions and then we essentially post that block back up to the comment chain or the cosmos chain and store it State Route in the ivl tree so how how do we do this when we went when we went to start out to build an evm that's interoperable with Cosmos and ABCI in general we wanted to come up with like what is the simplest easiest way to build a blockchain and at the end of the day we see it as pretty much three main processes so the first is that you need a way to like build the block and assemble the block so you're taking effectively a list of transactions ordering them in some way you need it then once you have that list of transactions you need a way to process them you know apply the VM State transition store the data Etc and then lastly you need a way to actually permit the block and make that part of the canonical chain so in ABCI this is prepare proposal process proposal and finalize block and in death this is your you know your Geth Miner your gas State processor and then your store is your state DB or your blockchain so we realized that a lot of common blockchain Frameworks other than just gas and Cosmos kind of follow the same general pattern so we realize that in Polaris what we could do is we can go and actually generalize this into basically three main interfaces or three main kind of constructs a block Builder a block processor and then a storage provider so what we do in Polaris is we essentially bifurcate the actual block building and processing and storage from the execution itself so in order to maintain that perfect kind of Json RPC compatibility with evm you know mempool block building et cetera is we actually run all of the all of the kind of block building and storage on the cosmo side and effectively just use message passing to allow the evm execution client to do all the things it needs to do so for instance here we have an example here if I will just submit a transaction for for executing an evm I would actually do that directly to the ethereum side Json RPC and that will get inserted into my pool from there that gets passed over basically a message system which allows for ABCI to pick it up so then the Builder is able to pick it up and then that's how the proposal is made so all of that is done on the cosmo side but the actual user was interacting with the EDM side secondly from there we processed that proposal that basically again is taking that list of transactions that was built processing it through the system that's talking to storage that's talking to the actual evm interpreter et cetera and it's all done through this message passing Channel and then lastly we need a way to store what we did so simply in finalize block we're able to go and just write it to disk and say this now Buck is in the chain this also kind of allows us for queries as well so we not only do we able to support like native EDM transactions but also full Json RPC compatibility for queries Etc and we do it through a similar model the message dispatcher is able to get the request from the RPC talk to the cosmo storage and handle it that way this also works for you know transaction simulation for you know if you're running a Searcher that's trying to build a block you could do do it this way so the eve call goes to Json RPC goes to the dispatcher and is able to touch not only the storage but can touch the processor which touches The evm Interpreter etc etc what this also allows us to do is it allows us to make all these components really really pluggable so in in the traditional kind of if you were to compile it all together you'd have to kind of choose an evm and you're stuck with what you kind of choose with um but what we're working on is making it so that you can plug in kind of different components from different clients and make it so you can really increase the client diversity so this example here you could take you know the transaction pool from ref the mempool from ref you could use airguns RPC which is notably very very well done and then if you just wanted to use like the standard get VM you could totally do that at the same time you could just choose to use all of them which is you know if you really like rust for instance you can do it this way last thing we also engineered something what we call the pre-compile development kit which allows people to write these extensions to the evm or these pre-compiles in a way that's like really really friendly traditionally if you look at this like pre-compiled example from Geth you have to like write these really convoluted simple kind of structs that are really kind of hard to use right you take input bytes the return type is bytes and overall it's just a very kind of raw experience which makes it really difficult for developers to add functionality to their to their app chain or to their to their layer one or two um but what we did is we made it so that you are trying to get towards the concept of writing a pre-compiler should be as familiar as possible to someone who is solidity or Viper native so if you look on the left here this is for the cosmo staking module we have like a staking.sol which is effectively you know getting your validators delegating et cetera et cetera and we're actually able to map those types directly to ghost trucks using reflection Etc so if you look here you know comma.address is the address which adheres to kind of what we see in solidity you know return types being big int is like a un256 etc et cetera and then what we do is we utilize that same cost concept of the message patching so when we kind of see a pre-compile and we call it we're able to use the the message dispatcher to pass that over to the pre-compile manager which can call the corresponding Cosmos module which is really really nice from that developer user experience perspective so at the end of the day we can have all this cool Tech but what do the advancements actually enable so the first thing that I think is really cool is it allows for in the first time in Cosmos to have genuine client diversity on bear chain for instance we wrote all of our transactions through the evm and by proxy all of them will be utilizing different clients depending on what you know what execution client that validator or node is running this is really good for exploits it's just generally a good practice to have and overall it is the first time in Cosmos that we've seen this which we think is a really really exciting addition um lastly it allows for some really interesting uh things to happen at the base layer you've created a nice way to not only you know write application logic but also introduce that application logic into the base layer and create really cool things it allowed us to write some of our defy logic that we use in our proof of liquidity system on bear chain and tie that into ABCI in a really native way and it allowed us to kind of start building some of these interesting products like flash Bara Slinky which is the Oracle that I mentioned during the panel and then things like integrating roll kit into Polaris IBC into Polaris Etc so earlier today I did a workshop with Diego and Josh from Celestia that was basically showing some of the modularity of Polaris and really showcasing how truly evm equivalent is so we had a d Celestia da devnet running that's being used for data availability and consensus then we had a Polaris SDK chain that was integrated with Wolcott that was rolling up to the DA and then lastly to really show off that UVM compatibility we were able to deploy an OP stack chain that's utilizing that Polaris chain for its settlement which really goes to show how we truly have like an evm equivalent chain not only from an execution perspective but rpcs and everything all the way down as the op stack deployment stuff is notoriously a little finicky and is a really good test to see where we are and that's everything I have thank you guys for coming [Applause] right so it would be for any Polaris chain so it would be enabling like a chain that is running in Polaris that has you know 100 validators to create client diversity within their chain themselves so it would allow for you know for for like the evm yeah for the evm right okay is Polaris a like a consensus middle layer so the way you think about it is it allows for any Cosmo chain to integrate an evm really really easily so because it's completely separated all you have to do is kind of import the this module and it's allowed allows it to talk oh it's a module yeah allows it to talk to an execution client so like if 100 oh cool that is fun thanks thank you hey um is the idea behind something like a flash Bearer to essentially have like proposer Builder separation for Polaris chains or is it more like the current uh version of like Meb boost kind of thing yeah so right now the current implementation of flash prayer is built on top of Skip's pob um so it's basically taking skips qrb all of their very cosmos-specific logic and adaptering it over to integrate into flashbots so it'll be all not flashbots as in what we see on Main net but the flashbots interfaces and what that allows us to do is it allows for Searchers that are running their bots on mainnet or allows them to integrate their existing code into a Polaris chain again with the concept of reducing friction for bringing ethereum ecosystem devs into Cosmos because they don't have to go rewrite all their tooling Etc nice thank you sweet awesome thank you [Applause] [Music] foreign [Music] [Music] [Music] foreign [Music] thank you foreign foreign foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] thank you foreign [Music] thank you foreign foreign [Music] [Music] [Music] foreign [Music] [Music] 