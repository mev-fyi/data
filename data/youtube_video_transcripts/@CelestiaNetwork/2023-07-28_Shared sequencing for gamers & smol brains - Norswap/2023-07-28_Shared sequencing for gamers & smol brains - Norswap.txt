all right hey everyone um this is going to be uh this is going to be fun because I literally have two talks and uh way too many slides so it's gonna be a little bit you know a little bit rush but I'm putting ideas out there if you don't understand something don't feel dumb and just come come find me ask it ask about it um so it's like for for small brains but also brains are on crack basically so I hope you follow me in this journey so basically the two things we must speak about is um why onshine Games should be roll up should you roll up what's the point and what are the benefits and then um something I'm really excited about Roll-Ups is the possibilities afforded by sequencing to do good things for games and so I'm gonna speak about the design space for decentralized and share sequencing which is um a little bit technical but a little bit you know fun to talk about it's a little bit nerdy like me so I hope uh you're feeling exciting so I had um this talk in HCC which I'm basically gonna give you the the smoothed um speed up version like the you know executive summary of that uh also I've done this talk like three three times this week so it's I have that part for it down so I can do it fast uh so I'm working like card game called Xerox Fable it's fully Unchained and it's like magic the Gathering or earthstone it's another development and I want to do this game right so I want to make it decentralized I want to make it such that every can extend it and for this it needs to be on chain and it needs to be I think it's on roll up for a bunch of Reason um this is a gaming track so I probably guess you know why game should be Unchained but if you don't have a talk at Denver that explains my reasons for that so here are some like challenges that uh game face like game may have a lot of action so they need throughput um you probably want to onboard a lot of users so this user probably don't want to pay 10 cents for each of their transactions so a transaction should be free you don't want nft drop to just disrupt your gas so that's gas isolation yeah you can already see everything your own chain and sure's gas is isolation um you want you know actually decentralization you don't want anybody to be able to shut down the game if they press a button that's the goal uh you want custom below because you probably still want to make money from your game uh so you're running a business you might have cost and you have future free transactions So you you're not making money on the on the roll up so costs will be really low as you know if you ask a user to install metamask and this guy is not in crypto he's like okay I want to play this game so I have to install this thing I have to remember these 12 words write them down store them under my underwear and inside my Swiss bank and then I need to log on to my bank and transfer to coinbase and then from coinbase to optimism and it's not gonna work so you need a way to at least let people try the game um for free and then without doing all these Shenanigans um then there are a few more challenges these are not super specific to roll up but like my game was my card game you draw a hand of cards and these cards the opponent cannot see them so it's private information you can't do that in a normal blockchain you need something like zero knowledge proofs I think game should be extensible so that there's a whole software architecture for that and if your game has some Financial aspect like nfts maybe you need trading liquidity so that you can connect the buyers and the sellers and probably you want to have some some kind of people that speculate so that they can supply liquidity on your stuff um so my point is like roll ups help with most of these for various reasons uh and really what they do is that they have low cost and they have good integration and security so if you don't know why Roll-Ups are secure I don't have time to explain it to you but just ask me it's a it's a way to make a chain that generate the security of another chain often ethereum what's not obvious that they're cheaper to run than uh their own chain you know that there's like um Cosmos which is a ecosystem of sovereign chains uh everybody can run their own chain and sort of all talk to each other um it might not be obvious why running a roll-up is cheaper than to run a custom machine so I'm going to explain that um so there's two reasons why the Rope is cheaper one is the security is taken care by the layer one chain so for instance ethereum and so what you need when you run a layer two is something called a sequence or a sequencer is the entity that takes the transaction makes a block out of it if the sequencer is evil two bad things can happen first if the sequencer just stops uh your game is stopped you roll up stop nothing happens second thing is a sequential does not like you we can just say haha I'm not going to put your transaction in the block that's censorship uh but you know at least the sequencer cannot steal your so that's uh what you call liveness and super distance uh and uh you know stealing your stuff that's security and so because it's a little bit less crucial you need less stickers you need less people to run the sequencers versus the values and l2s can do something like Risk taking and risk so basically if you want to pay you want to pay the validators if you have a chain if you are a raw up you want to pay the sequencers um the problem if you're a chain is that you either have your own token which means you're printing money this is great the problem is like people need to stake your token so they're exposed to a very volatile crypto something so they will want to be paid like 50 return every year um because of the risk and you know you could also print your own token and just spend it so like that's still money um the other thing is you could use an existing token so you could use ethereum but if you do that people can use ethereum to get returns somewhere else right they could do staking and earn six percent per year so you need to beat that rate if you use something like Risk taking um it means like people are already earning returns by validating ethereum but on top of that they can also validate your node and if they cheat there they'll be slashed also so basically they stack the yield and they stack the responsibilities and because it's additive um you need to pay less less of a yield for that and so that's why Roll-Ups are cheaper um the other thing that's annoying if you're a game developer like myself and you want to launch a roll up is you need to recruit all these sequencers right if you're a big Rob if you're at the optimism arbitrary it's okay you just go to another chain link you go to Alchemy you go to infrar and you say can you run my node can you sign on the website and they're like yes of course you well know this is a good thing for us uh if it's me they're like who the are you  off um and so what I want to do is build a marketplace where everybody's interested in sequencing can come and say hey I'm posting my bond here that is open to be slashed and I will um I will let you contract my services to sequence your roll up and then if I'm a roll-up a game like say that wants to be a roll up then I come and say hey here's my Note software here's how much I will pay you and then you sort of match these two things and you cut a lot of the red tape and so it's easy finally the the final opportunity and this is the bridge the second part of the talk is that like decentralized sequencing is what when you just don't have a single sequencer right so you avoid the the censorship and the liveness issue because if a guy goes offline or if a guy is evil and wants to censor there's always another guy that can do it after decent shared sequencing is when you have decentralized sequencing but also you say well all these sequencers they're not just gonna validate one roll up they're going to validate many roll ups and then if they do that what they can actually do is they can do cross chain transaction that are safe at least they're as safe as the set of sequencers and they're fast they're you know um immediate in fact and so this is not very figured out how to do that there's a there's a big design space where multiple trade-offs and I want to talk a little bit about these trade-offs today but it would be amazing right like you have your own chain with all the benefits of your own chain it doesn't have a lot of costs it's easy to set up and also you can get instantaneous bridging to other chain you can get liquidity you can even split your own game into multiple Roll-Ups I think I have a slide speaking about that layer um and so one of these annual explorers that all your sequencers that you have a few hundreds of them the one of them is picked to propose and all the other sign on it and if you do that well you have 200 signatures on your block and this is less secure than security of ethereum but still more secure than just one random dude saying like hey this is the block and so if you're comfortable with a lower level of security you could use that to do fast Bridges even outside of shared sequencing and you could also do that for a cheap data availabilities data availability is where you put your your blocks so that other people can re-execute them and right now you need to put it on ethereum very expensive on something cheaper like Celestia against the a but the cheapest thing you can do is not put it anywhere just on the nodes and if 200 sequencers say I have seen this block and I can give it to you that can be a good enough Insurance like if you're doing a game especially and if it's not the economic part uh it might be a little bit less secure like you say oh I'm gonna roll back the last two hours of World of Warcraft you know it's not going to crush the financial system so you might accept the trade-off there um yeah so white Central sequencing is good for game I just pretty much explain this another thing is that the only way right now to deploy your own roll up is to something called the op stack the op stack is as of now not super secure because there's no fault proof which is a system that ensures a security and so in in the meantime like having the signature from the sequencers they couldn't that could improve the security of the of the op stack so you know if you can Implement that fast I would be great so shared sequencing this thing where a bunch of sequencer lets you sequence a bunch of stuff a bunch of Roll-Ups uh what do you do with that you can do game style sharding so if your game is so big that it doesn't even fit in a single roll-up you have so many transactions that doesn't fit well why not split it in multiple Parts like if you're a RPG and you have a continent uh put to a multiple continents in your game in Game World just put a continent on every roll up or maybe split by system like the financial system is going to be in our roll up that's going to be a little bit more secure and the game system the battle system is going to roll up and then you just do instant transactions between them okay this first part of the uh This is Gonna this is gonna be tough uh share sequencing I'm gonna rush through six model of shared sequencing um of decentralized Ensure sequencing and sort of highlight some some trade-offs that you can have there because it's not like so far I painted a Rosy picture like oh we can do instantaneous things that are secure right it's not that easy and I explain why so the basic basic thing you can do is you have a bunch of sequencers you know 300 of them you just pick one every turn to propose and that's it you can do one at a time so like you're number one your number two you're number three or you can just pick randomly um and you know after a while the the probabilities will even out this is actually safe right the thing is um it's safe in the sense of roll apps so you can't really a roll up is really safe to bridge from L1 to L2 all right so from our ethereum to optimism really safe really fast from optimism to ethereum you have to wait seven days to see if nobody says hey there's a problem there so that easy design it's easy to extend to be shared uh the problem is like if some guy says it's your turn to do a Blog and it doesn't answer well you just miss the block too bad and then there's this thing called Mev where you know people just Arbitrage and stuff and uh it would be good if you could capture some of this profit for the chain and this model doesn't do that and some of them all we'll see later okay this very simply is just this idea that you have 300 sequencers you want them to sign on the block that's being proposed at least two-thirds and you can do a bunch of things that I already mentioned uh you know data availability for cheap uh low security Bridge uh the thing is though because you need everybody to sign on it uh it limits the set of sequencers so you can you cannot do 10 000 sequencers because uh then the time to just get everybody to know about everybody else's vote would be too long so there's a trade-off there but because we're not using this for security it's kind of fine okay so this is the model we just take the previous one right just a guy proposes and we add uh all the other guys sign on it right this is basically it it's still safe and fast it still is extensible now we get all the extra goodies we get that availability bridging uh Wheels you can also sort of once you see the signature you're like okay my my thing is then like I can have some confidence that this thing is going to be on the chain the problem is like if nobody signs you know like if there's a network split and one third of network is there one third is there and then one other third is like I don't know just nuked about China um like you you can sense this is broken and the question is how do you deal with that like do you let it go do you go into recovery mode where the signatures are no longer needed so that's something you need to think about are you still not capturing any Mev uh I'm gonna skip that there's some way to mitigate the problem that's what I just said like just go into recovery mode if if you you don't get signatures okay so no shared sequencing simplest model you take the previous model and then what you add on top is like oh instead of adding one roll up now you're validating a bunch of Roll-Ups and you're proposing blocks for all of them and so what you can do now is like oh this transaction wants to do something on chain a and it wants to do something on chain B and you're going to put these two things and if you lie if you the other sequencer will be like hey you did the thing on chain B but you didn't do thing on chain a uh and you'll get slashed and the block will be invalid so this is super secure it's super fast uh what's the problem well the problem is essentially the red thing there which is you're essentially one new draw up that just happens to be made of smaller roll ups and so this doesn't scale at all but it can still be useful right because each roll up can be configured completely differently it can have blocks that take different time it can have different tokens to pay the fees it can even be implemented completely differently uh and it's easy to paralyze because most transactions will not be cross-roll apps you just have one server for the Rob A1 server for Ruby and then you have one server to handle like sort of the coordination of them but still it's not really scalable uh um some idea to make this better is like okay we have a big set and we're really strict about which roll up can be in this set but maybe I'm making my game roll up and I really want to share um I really want to cross do crocheting transaction with optimism so I'm like hey I'm looking for guys to be to to sequence my roll-up but only the guys that are sequencing optimism can be included and so let's make it a little bit more permissionless and let's use sometimes do question transaction another model is um and this is this is a decentralized so we're going back to decentralized instead of shared but then we'll do that but shared uh is the meva model and so Mev is this thing where you extract value from the chain from Arbitrage and Oracle backgrounds and a is for auctions and so in this model uh there's no sequence there's no like sequencer that's being selected to propose the block instead it's like people are bidding they say I want to propose the block and I will pay the network to EastEnders whatever three cents to um have this right and um yeah this is this is pretty simple it lets you capture the image which is good uh and otherwise that's all the the you know the same characteristic as before the extension to share sequencing is stormy that's the next slide uh and yeah and there's multiple auction models so either you need to bid in advance but then you don't really know about the Meg that you will have like you don't really know how much money you can make so you need to bid very little or multiple people are bidding but they're including all their transaction in public and that's sort of annoying because you know people have like Secret Sauce to make money and they don't like when that's revealed um and then you can take that and make it shared so now the model is the the person that's bidding is not only bidding to put a block on a single roll up they're bidding to put a block on rob a b c d for instance but also be on Rob DNE like they can select the set of blocks that they want to bid for so this is a great model I like it because sort of the market decides which roll apps are going to be connected with um cross-chain transactions now there's a hard problem with this which is like these bits can be overlapping and how do you select which pin is winning so I gave an example you got the first uh Auctioneer on the right the first better is like okay I'm gonna pay rob a two dollars or a B one dollar over receipt two dollars and then the other guy says I'm gonna pay two dollars as well I'm gonna be three dollars so that's more and then PC one dollar so that's less and the question is which one do you pick because you can accept both at the same time um and if you think trying to think about all the Simple Solutions that don't really work like in this case I'm gonna I'm gonna pick the one that pays the most in total but then that's unfair to that and so that would be the one on the right but that's unfair to B which is paid less and maybe B is systematically being paid less um and that's a problem and you can't also like like there are a few Solutions and we don't really have time to go into it but it's also important that it's not manipulatable so people like sort of make fake bids to manipulate the thing so I have a strongman solution there but this is like just a you know shower idea basically is that something that's interesting to you just talk to me uh oh we already had the last one so I think we'll make it in time uh amazing uh so so far the model we've had was the model of Atomic execution where I have a transaction that has multiple Parts on multiple Roll-Ups and I want everything to succeed so sort of a classical example is um I want to swap like a token on a chain Bridge the swap token and buy nft with that but if I can't buy the nft then I don't want to do the swap in the first place I don't want to pay fees I don't want to be exposed to volatility another model of crocheting execution is atomic inclusion where I say I want to do this action on channel and I want to do this action on chain B but it's sort of not a causal relationship between the two and atomic conclusion does not guarantee execution does not guarantee success so you say both of these transactions will be included on their chain that's what I guarantee but maybe they will fail there I just guarantee they'll be included at the same time so that's a lot less powerful so you can't do bridging for instance because bridging is typically okay you lock some tokens here and then you mend them on the other side and if you just take that and you include them both of them and uh the Locking transaction fails now you've minted token and they've not been locked on the other side so you've just printed money so that's obviously bad but if if you can do that and there's some ways to use that with escrow models or for some other examples are not bridging it can be useful if that's good enough for you then that's really really easy to to operationalize because basically you just make a new roll up you let it sequence all the cross chain transactions so you say okay this this set of transaction needs to be included this set needs to be included Etc so and then all Dr rollups have to follow the single roll up and just obey the rules they say okay this bundle was a transaction for me so I should include it um and so that's pretty simple but it's more it's powerful and uh yeah okay we can skip this um I'll skip this so I'm interested in working on this I know there's all our companies like working on something similar right now and I'm trying to talk to them um my interest is building something that's fully open source everywhere we can deploy permissionlessly make it really easy on the on the small guy essentially because some of the sequencing work is really for the big Roll-Ups I want it to be like hey I'm just two guy in a bedroom we're working a game we want to do our own roll up it shouldn't requires uh it shouldn't require even tens of thousands of dollars just you know a few hundreds would be enough uh it should be easy to do just clone a GitHub repo and just do some comments um and there's a lot of people interested in pursuing that vision and I'm looking for people to build with me to use this stuff to comment on it to fund it that kind of stuff um so yeah if you have any kind of Interest or any kind of question if you did not understand anything but you're interested just talk to me and uh yeah that's about it thank you [Applause] yeah uh as a way to secure the decentralized sequencers and then um do they apply to all of these models how do you see them overlapping with the different ways of doing it different kinds of designs that you showed yeah so in general there's two roles to just taking one is Sybil resistance so if you're in a select in a set like um round robin or randomly you need staking to make sure that I don't command and like be hey I'm 10 000 sequencers uh the other role is to prevent misbehavior or discourage I think in a lot of case there's not a lot of safety thing that you really need slashing for but it's good to desensitivize like annoying Behavior like oh I'm not answering you know and so you know encourage liveness discourage censorship resistance and things like that um so dude does it apply to all of the models or I think it mostly apply to all the models like you you probably don't need it in the auction model as long as you ensure that the auctioneer always pay their bed because it might be that they they say like they win the bid but then they don't post the block right or they do something invalid so you want to make sure that in any case they paid what they say they would pay yeah thank you thank you thank you so much for uh I wanted to ask you I feel like like one of the important priority of like shared sequencers that the uh you know not to be like a bottleneck they skip the execution part it just be you know like the mechanism for ordering but uh you know like when we start talking about like Mev especially like cross-chain Mev like does it mean that in like shared sequencers need to be like protocol aware and actually like execute transactions to understand like where is the immedi yeah I don't think any any design is really gonna ever be uh you don't execute I think you always execute and the the reason for that even if you design something or you don't theoretically execute there's gonna be uh the proposed Rebuilders the version where the proposal is the person that's in the protocol and has the right to propose and the Builder is the person that's actually gonna Supply the the transaction they're just gonna have a off-chain deal if you want with the proposal to do that so that you can extract indeed the movie um I guess it could be possible if you don't have any which for games that's very very possible that you don't have any image right so that would be possible I see okay thanks I just like wondering if you like I isn't like it's like another like bottleneck that we like trying to avoid like going from like layer one to Layer Two is like another like yeah that is a big problem that's why this thing don't scale and the shared one you for Atomic execution you really want execution uh unless you're doing the last model of atomic inclusion there you can literally just do uh sequencing like you said without execution yeah all good all right thank you very much 