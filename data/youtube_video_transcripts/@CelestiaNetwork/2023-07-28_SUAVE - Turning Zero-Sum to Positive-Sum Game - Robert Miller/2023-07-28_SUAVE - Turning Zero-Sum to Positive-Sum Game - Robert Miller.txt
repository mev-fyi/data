I'm Robert Miller I had I have a talk here obviously and in thinking about what to talk to you all today about a thought first should I say something about PBS it's pbs.day and I thought no you you probably have heard something about PBS before at this point you know about it someone else will talk about it then I thought should I talk about Suave we just released a a new blog post outlining an architecture introducing the mevm I thought well I'm not sure that's the most interesting thing since uh you can go and read my blog post on how the mevm and our latest design for Suave works and looking at the past schedule that I had this week it seemed that there are a lot of new chains and domains that are interested in integrating PBS and they're interested in knowing about how Suave can support them if they do support PBS and so that that's sort of the premise of my talk is how support many different domains heterologist domains that have different virtual machines different ways of ordering and what is the architecture that enables that and I'm going to begin by giving you a little bit uh maybe these slides are a little different than I expected but I will Begin by giving you some context on the thinking behind Suave and where we were a few years ago when the early ideas of suave started to coalesce for flashbots something like late 2021 so this is kind of the the first idea Mev is fundamental it's fundamental to every domain and that's for a few reasons the the first is this ability that blockchains give you to make commitments and you can commit to pay for some arbitrary State and that then Alters the incentives of the party that's ordering transactions second is that we use this ability to commit as a part of a common design pattern in Building permissionless Systems so these commitments are a fundamental part of something like defy in liquidations you give a permissionless bribe to anyone who will update the state of your collateral when prices have moved or in crypto kitties you give a permissionless payment to anyone who calls a function to update the state of the system so this permissionless bribe this permissionless commitment that anyone can capture is kind of this common design pattern to the systems that we're building and lastly mev's fundamental because even if you don't have Mev on one domain there exists Mev between the boundaries of different domains and that creates value extraction opportunities you know if there was no Mev on ethereum there would still be Med between ethereum and BSC as an example so that was the first idea second idea Mev has these negative effects so rational actors pursuing their incentives pursuing these permissionless commitments that make you money are going to create negative externalities in their wake if you don't deal with it appropriately so that's things like priority gas auctions spam latency Wars that lead to wasted block space Network load at the limit it can destabilize consensus itself which is which is where Mev began with Flash Boys 2.0 economic centralization of um you know validators integrating with trade firms and sandwiching you know et cetera there's all sorts of ways in which Mev can have negative effects if you don't um if you don't properly deal with this and we unfortunately have a slightly old version of my slides but we will roll with it um so what do you do about this uh this uh what what flashpots is trying to do is our project called Suave so that stands for the single unified auction for Value expression it's our project attempting to address this this really ambitious problem of Med being fundamental to you know every single domain and having negative effects and there being many different types of domains in the future that have heterogeneous different designs so you know there are non-evm chains there are chains that will order with first come first serve and we can't just copy paste flashbots and and other people's Mev infrastructure to every single domain how do we offer Med solutions to many different domains in a way that is actually decentralized and um you know what I want to to get across today is that there's these two key ways that Suave addresses this in in the broadest way possible and again we're rolling with an old set of slides but that's fine so the first is the medm we just announced this last week it's this modular expressive composable programming framework that allows developers to leverage credible and private compute and I'll dig into that a little bit more in a moment but what that means is you can take what is currently centralized off-chain Med infrastructure and turn it into a smart contract on a decentralized blockchain and the second is what we call execution predicates this is arbitrary preference expression on the execution you desire again we'll dig into that so first the mevm it's a modified version of the evm that flashbots is launching we've taken the normally evm we've added new pre-compiles to it for Mev use cases that's really useful because by exposing every primitive in the Mev supply chain as a pre-compile you can program your med infrastructure as smart contracts on on a blockchain which you think is really cool and moreover you can do it within the familiar developer tooling of the evm you can do it in Foundry you can do it in your normal developer environment and it really lowers the barrier's entry of deploying new applications because anyone who knows solidity can do it uh so how does the mevm work this is what the architecture looks like there are a few stakeholders a few components I'll run you through each of it it's at the core of suave is this medm chain that we're launching again it's standard evm with extra pre-compiles for Med use cases that's things like take a transaction simulate it return me the result we have a confidential data store in the middle you can think of this as a data availability layer where encrypted data is stored because there's too much data to store it all on chain so this is decoupled from the chain State itself and we have an execution node this is not a consensus node but it's tightly coupled with the chain it's a a node that provides private and credible compute that can be called by the medm's pre-compiles and the the way that these different stakeholders interactive Suave is developers Define contracts like quarterflow auctions block building algorithms centralized RFQ routers Maybe users send what we call bids that's a combination of contracts that they authorize to access their private data and some private data like a signed transaction and executors who are your arbitrageurs your Searchers Builders are looking at bids seeing how you can interact with them and trying to background them merge them do Mev things finally Suave produces blocks for proposers that are listening to them to dig into the notion of execution nodes a little bit more because this is a really important concept the actual chain swap chain itself stores what bids are pending it doesn't store any private data that's stored in This off-chain Confidential data store but it registers a user's bid so a user saying like hey I have this private transaction I want it included on chain and it also registers these contracts that developers have programmed their Mev applications in and those contracts when the user authorizes them are executed within what we call execution nodes where an execution node will read the the code of a smart contract and execute it accordingly I'll give you an example in a moment but as an example a smart contract might say simulate this transaction and allow a Searcher to try to background it and if the Searcher successfully backgrounds it send that on to a block building algorithm we run these execution nodes in trusted execution environments like in sgx to provide some level of integrity and privacy to it that isn't contingent on centralized trust in a party like flashbots um this is an example mevm contract so it's it's standard solidity with a couple extra pre-compiles so you can see here you know the the Fifth Line we get ethereum State something that you normally can't do within solidity we're we're deploying this on Suave chain but we can have access to the latest ethereum mainnet state it takes a bunch of bundles that are sent as inputs simulates them so it's simulating orders of ordered lists of transactions against ethereum mainnet State we're getting the gas price of those sorting them trying to apply them to a pending block so it looks really similar to solidity because it literally is but it is able to leverage these new Mev pre-compiles that call out to the credible private compute provided by the execution node in a trusted execution environment to let someone program a block Builder which right now is this you know monolithic thing off chain in solidity on soft chain which we think is pretty cool and one of the ways that we are thinking about uh scaling Suave to many different types of domains is that you don't need to only run evm type execution and execution nodes so you can have an execution node that supports wasm or you can have an execution node that supports any weird roll-up VM that exists and then users can program their smart contracts to call out to that within native evm on Suave chain so you can do block building for non-evm chains so long as you have these execution nodes for different domains so for every given DM we'll have execution nodes that that folks will run in the stress of execution environments and you have this single unified platform for writing Mev infrastructure that can access many different types of execution nodes that's one way that we are attempting to address you know Mev across many many many many different types of heterogeneous domains the other way that I think is really interesting to talk about uh is this notion of execution predicates you may have heard this as intents or preferences before but this lets users Define arbitrary conditions that they want to be executed for so uh in you know familiar Ned use cases I want to pay X if transaction has 0x Baba is included in one block 100 I want to include if the or I want to pay only if this array is included or things that you can't do today which might be interesting for some use cases like I want to pay if my contract emits a log and why I'm talking about this is because this unlocks new searching strategies that you can't do with current Mev infrastructure today so as an example I want to call I I want to pay one eth if you call my contract and it emits a log provides an incentive for either latency or spam Searchers to try to hit your contract until it's successfully called right so you could deploy this contract on on Suave have a corresponding contract on a low latency domain where spam is the the dominant strategy and it provides an incentive for this Marketplace of people to spam your contract on your behalf so democratizing Mev search on other types of domains even if they're not natively integrated into PBS itself which is very interesting or across domain I want to pay for X State on ethereum and why State on arbitrum gives this incentive for Atomic execution across two different domains and and you know since you are programming this in solidity as a smart contract you can get as bespoke as you want with these execution predicates which is really interesting because Searchers can express or users can express conditions that are more complicated than anything the market currently supports at the moment which either incentivizes people to collaborate together to execute on these conditions or it incentivizes the creation of new infrastructure to be able to support more complicated types of credit codes so that was my talk slides got a little bit screwed up so I had a little bit more content but that's okay so thanks for listening that's how we plan on addressing many different domains for for Suave regardless of whether you are PBS or not PBS we have a couple different callouts here so if you're interested in integrating as a roll-up please reach out if your developer interested in building Med applications in Suave please reach out as well wallets if you're interested in maybe redistribution so interest for private order flow and that is a QR code if you want to if you want to work at flashbots so thank you so much really appreciate it I think we have Mike coming and talking about PBS next [Applause] 