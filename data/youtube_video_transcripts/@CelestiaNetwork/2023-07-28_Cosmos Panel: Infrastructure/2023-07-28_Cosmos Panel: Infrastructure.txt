cool so we have a small intimate audience so everyone will get a chance to ask questions um it looks like Cosmo verse right it looks like a cosmos panel we had model already looks like customers um yeah so Cosmos infrastructure um I think I'm going to start with Marco here and maybe you can explain for the audience that he's not familiar with the how things work in Cosmos um what's the layer of the line or how do you um what are the different part of the stack for Cosmos and who are the builders behind each of these parts yeah so there's at the core layer there's three distinct protocols so there's Comet bft uh currently maintained by informal systems above that comes the I would like to I like to call it the middleware and the state machine that is a cosmos SDK that is maintained by myself and binary Builders and then we have IBC go and this is like the third component of the core layer I like to call it the kernel layer that is maintained by interchange Gamba and then above that we have a few application layers so we have the EV we have Polaris etherment cosmosum some movie M stuff like that but I'd say like the Three core layers that are fundamental to The Interchange stack are would be common bft IBC go and the cosmos sck and Jack I think you have a lot of thoughts about you know the like you guys especially Marco and Jake who worked on something called the cosmos Builder Foundation right and you have thoughts about the way that uh you know funding for all the different part of the stack should work in Cosmos maybe you can share a little bit of your thoughts on that yeah I think right now The Interchange Foundation is doing most of the funding and you know that's not a long-term sustainable path there's this is kind of a classic open source funding problem where there's a lot of uh economically viable businesses essentially that build on top of this core software and we need to find a way to get those folks to help contribute to the maintenance of the core stack and you know I've been talking a lot of folks for for a long time but that that's kind of the fundamental uh friction point there is there's folks out there who want to do it um there's folks out there who have the money to do it but there's nowhere to put that right now that that's sort of credibly neutral and sort of made up of a council of the core Builders and um yeah still looking for folks to work with on that been chatting with skip quite a bit about that yeah so Escape actually is in kind of a new project like Marco and Jack have been Cosmos for a while was there for you you know anything like surprising or obvious that Cosmos should do to kind of improve their current model that we have the current model of funding of funding yeah and the way you know work is being done in general to to build the stack yeah I mean uh I mean I don't want to be too critical but uh you should be very critical like it's a very small audience you can say whatever you want I mean we we started out by basically learning tenderment and uh tender mint was a very complicated code base for us to learn and you know we we quickly realized you know what one of the things you realized quite quickly was how um you know the stock is meant to be modular meaning ABCI is sort of this abstraction that is outside of tenement uh we realize that like tender mint and the cosmos SDK are actually quite coupled in many different ways and I think this was found out by other teams afterwards like Polaris Etc um and so I think you know one thing that that could be done is uh you know making those different pieces of the stack a little bit more accessible um I think there's been really good work um that's sort of happening behind the scenes here but tenement basically becoming more comprehensible um and easier to understand more modular more easily you know easy to add things to and take things out of you know we started by having to modify tendermint and build this thing called Mev tenerment which you know now we're moving sort of away from but basically we try to build in uh you know uh basically an ordering mechanism into the mempool um which which didn't really exist it was sort of this fifo based system and it was very difficult it took a long time um and I think you know that it was tough to modify the core stack in that way and we learned a lot through that and I think hopefully shared a couple of those things with core builders Sean I think you were part of the you know initial tournament team you took part in some of these decisions right at informal so while I was at informal we spent a lot of work trying to position the software of tenement as a core consensus you know engine in a position where it could be like testable I think it was very hard to make significant changes I think that tender meant when it was conceived was like heads and shoulders above any sort of alternative and like since then I think like the industry has had a lot of time to catch up while tender mint innovation has has really slowed and I think we could attribute that to some of the complexity in the any architecture um the architecture there um coming back to the original question about like funding and like what role does the like the capital flows have to do with this which I think is like sort of the more interesting interesting question um we have to we have to like look at like where the money came from and I think like most of the money that funds most of the core infrastructure comes from a single entity right which did not intend to raise like enough money for that when it raised it so like tenorman raised like 16 million that balloon to like half a billion dollar Treasury and then spent years like reconfiguring itself to like be Capital efficient with that that much money which I think is a a very hard thing to do um still ongoing Still Still ongoing and I think fundamentally it's a it's like this is at the core of like the broken model because there isn't really any sort of genuine economic surplus that you could sort of redirect to places that are more productive or take away from places that are unproductive so broadly speaking most of the capital that is allocated is unproductive so that's like the base level right that you don't know like there's very few profitable protocols modulo the cosmos Hub most uh most other Protocols are very unprofitable so it's very hard to say like oh as an ecosystem we're gonna like let those ecosystems die or like let those chains die or like redirect it where it needs to be so I think what's what's really missing is is like a new way of doing like Surplus Recycling and not just like funding a new entity a new centralized entity or a set of entities with VC money you know or whatever but still the ITF has like 300 million dollars right at the moment in in the on the books if if you were uh you know the the president of the ACF or the managing director of the ACF like what would you change on on day one I was I would I would I would send it all to a burn address and then see if the ecosystem was meant to survive or I would take like the cosmos Hub and I would um inflate it maybe like one billion dollars into a fund that was you know governed by multi-sig of like people who could get easily unelected you know could be Jack or whatever I don't care the initial version but what's important is like it should go like everything else should go away any any any Capital that is held underneath like a body which is not like elected in a transparent way should probably go away it is kind of um like in Cosmos and all these ecosystems it's always been like everyone like we we licensed the software Apache we like stand by Apache everyone can take the software do whatever um it's it's a pro and a con because if you license it some other way they're not going to come users aren't going to come and so it's like a double-edged sword there but the other part is from the get-go no one ever really thought of oh like what will be the funding story in five to ten years and so no one really built that Narrative of like oh like we should build a narrative of when there's a launch of a chain um the team coordinates assist the team like uh helps them launch and then like they get an allocation or they get some sort of continuous allocation to help align road maps that was never thought and now it's kind of like I mean we're having this conversation not only in the cosmos ecosystem in ethereum polka dot literally everywhere that like oh like raising into a single Foundation off a singles Ico is a good idea for like the first five years but if you want to last like 100 years you're not going to be here if that's the only plan yeah because if you hear like composable Finance talking about parity and you know the way things work there it doesn't seem to work much better than than we work in Cosmos with the AC I think you know there's like a age-old startup Montage raising too much money will kill your company just as surely is not having enough money and I think that you know there's a lot of lessons that we've forgotten from the web 2 world and the kind of the classic startup world and blockchain I think that that's a really key one so you Jack if you were president of the ICF what do you do on day one I like Sean's idea that's real that's that's real base [Laughter] I also think like we need to stop um hating on developers who want to monetize their software like the ICS 999 stuff is kind of like cringed to me because like Larry put a lot of work into that and it seems very good but people sort of are saying to him and well no one's going to use it because it's not open source and you know you get a grant for it but then like okay the grants expired then it you know money's out and then it's open source and you can't make any more money off of it it's like why would you do this I think for a lot of reasons application so I agree with you we need to get developers paid more but I think the ICS 9991 and IBC application Protocols are kind of a special case because really in order to do that you have to like bootstrap a bunch of chains that do it yeah in order for it to have any value and then there needs to be apps built on top of it but how do you bootstrap that without giving it away and then at what point are you going to start charging for it and there's no real built-in mechanism to like be able to do that at the application protocol layer the like client layer I do think is a much better layer to add those types of BSL licenses and to allow applications to have certain like exclusivity periods or put in writers where there's a certain amount of public good funding that needs to be reached before those things become fully open source because it kind of like forces the settlement layer narrative and it allows that chain a chance to help build some IBC routes through it build those trade routes and bootstrap them um whereas the application protocol layer there there is that bootstrapping problem that exists so yeah the Larry thing is tough like I I love Larry I really like ICS 999 I'd love to use it more but it's yeah Larry should be the president of the ICF we should just like change the Brenda just be here but but if you go down that path then it's like a like I I like to think of like early parody like when they license everything like GPL and like substrate was licensed GPL and like Enterprises would come and just be like hey like can you please re-license it to Apache so we can like work out a way to use it and I think like we have the cosmos SDK has a ton more users that we actually don't know of that I find out daily that it's like oh like like I was talking with a wormhole and like jump and they have like a private Cosmos SDK chain for their like signature process and stuff like this and it's just like people use it because they don't have to worry about this license issue but then it's like the downside is like everyone's been saying like everyone uses it but no one ever thinks back like oh we have to give back because it's sustainable but it might be that like if the ICF were to say like um I mean every year now the budget's going down and down for like these uh for these products and it's like if the ICF says like oh like we're cutting it off at this number whatever else is more you have to get from anywhere else I think teams might start like showing up and being like hey like we need this feature we want this feature we want this feature and if the teams are like sorry like we're getting paid only to do this then teams will be like okay like we're happy to like contribute and then that kind of bootstraps accomplish an interesting thing about the BSL license is you can set a cap Beyond which you go full open source so for instance you could have a some software develop under BSL and then each chain we need to contribute some amount and when that Gap is reached it becomes fully open source for everyone to use I think it's a great idea yeah yeah I think more more people should be using that so talking about Duality and I think you're talking about the the roll up stuff with Duality so let's uh let's talk about that and how we make IBC roll-up friendly we are at the Celestia Summit here uh Jack for you you are the the IPC guy uh what's uh what's needed to make sure that rollups use IBC between themselves and also between app chains yeah you know we need to build out the infrastructure this requires funding it requires teams you know I'm sitting here talking to the dimension guys and they have a working fraud proof IBC implementation which is really cool um seeing that more broadly adopted but I think the biggest problem with the roll-up model right now is there's no overall consensus on what the final architecture for these Roll-Ups is going to be each of the architectures that's been developed by these different companies each has their own sort of like unique cryptographic assumptions that you would have to bake into a like client so there's I think a two-pronged approach to this problem one is we've done a lot of work in the core code bases IBC go ibcrs relayers both Hermes and uh relay to help abstract a way that this sort of like Cosmos specific assumptions a lot of this work has happened over the last year helping bring the composable finance work to uh market and I think we're going to do three or four non-standard IBC Integrations this year as a community um next year we need to do 30 to 12 to 30 probably uh we need to like mini X that this capacity this ability to bring IBC like clients to new places so I think that's one part of it but I think also building in better relationships with teams like Wormhole hyperlane and axillar where there's these committee based solutions that might have different transport layers but we can build shims or other compatibility mechanisms to allow developers to use those IBC interfaces anywhere and Sub in different transport layers because that that's fundamentally what they are and those committee based Solutions can go places that a like client-based architecture can't a little bit quicker um and you know we've always thought that they're going to be hubs and those are potentially hubs I want to come back later to the hyperlane stuff because that was an interesting topic last week or the week before that but first like um the skip team has been working I think you guys got a research ground run from Celestia uh on on the on the Mev stuff how do you know about that yeah we're working a little bit Yeah okay well um what what are what is it about do you do you know about that or do you not know about that uh about IBC or about um the the grants the sales Tech Grant is there something there or is it just something I made up uh we are working with them on on the research side I mean I think that most apt thing there it's is less about Mev but more about uh sort of IBC and and this idea of these like apis that we we put out where you know the idea is like no matter what uh bridging protocol you you use if it's hyperlane if it's layer zero or whatever else it is um or if it's IBC of course you can do these things in one click right you can transfer you can swap um and it's not a complicated like pathing problem and so you know a lot of that work has been helped out by pfm and IBC hooks one by Strangelove and the other by osmosis um but they allow you to just like mesh together all of these different Bridges um and just have these workflows be extremely simple and I think in the roll-up land this is you know talk that I gave before but like in roll-up land that's going to become a lot worse I think right like you're going to have so many different Roll-Ups they're all going to have their own gas tokens they're all going to have their own routing protocols and you just want to create an abstraction above that and I think I mean I'm going to say the word but I also think intense might be helpful here CC raps um but you know like there needs to be a solution there um to help fix that right now from the cosmos SDK site there's already like stuff like rocket for instance where they're taking the cosmos SDK they are essentially removing comets from the cosmos SDK can you talk a little bit about that how roll up how you see roll-up framework evolve and how they compare to the SDK so the direction we're going with SDK is um we want to extract abstract like ABCI away from the user we want to abstract consensus engine away from the user it's already kind of there um and kind of like when you're developing an SDK application evm or no evm cosmosom no cosmosum that it's like either a roll-up or a chain and so we've been working with the roll kit team they have a lot of ideas in terms of uh different block construction different header construction to enable different use cases what we're really learning is the past months is that the ABCI is really limiting in what you can build with it just because it provides these limitations you can access the P2P layer it has this mempool like people want to do different things with the mempool but it's like you have this upside manifold now and now it's kind of like being conflated on like what is app what is the consensus engine what it what the app should take care of and what the consensus engine should take care of and so like going forward like yeah like we're we're working with a few teams roll kit Dimension and like just how talking on like what they need to enable like a better role kit a better roll-up future just so we are as competitive as like everyone else and so and also just like rebuilding the software in a way that okay Roll-Ups are today what is tomorrow if tomorrow is something else like are we ready can we take advantage of that and so we're just taking the software like basically almost rewriting the software to enable that I mean Market the way that you've described it to me is the SDK is this layer that helps coordinate between different consensus mechanisms and different uh security mechanisms on the bottom and then different VM layers on the top is that kind of how you describe it yeah it's um the SDK is kind of like this middleware kernel and then the modules like in evm world we can kind of call them like pre-compiles and then you those are like their kernel level apis and then the application layer will be your evm cosmosum move whatever you really want I just think that that is like clearly the final architecture for in application or VM framework and like the work that you guys are doing right now I just think it's awesome can I ask a question how Marco no Sean but how do you design like a general framework for Roll-Ups when there there aren't any Roll-Ups and they're still like I don't know how Roll-Ups are going to work and I've spent a lot of time looking at shared sequencers a lot of times studying like across fuel across roll kit all the the the the Roll-Ups that will be right um what are the core Primitives that that they need and uh and how do we embed that in the SDK well the so the the sequencer the roll-up uh aspect of it is like a replacement of the consensus engine um and above we're kind of like meant to only really worry about here's a consensus interface um if you do like the consensus interface like we can just mimic ABC I plus plus prepare process vote extension and finalize um and then it's just like the rollup has the option to like implement it as no Ops or not um and so it's it's less so like what is a roll-up and what is not a roll-up to the application to the application it's just a distributed System state machine and underneath it's it can be Comet it can be whatever um and then in the future like the idea is like okay uh we we so we kick started this like runtime working group and now we're doing some research on like different consensus interfaces so you kind of have like this immediate finality that is tenderment um then you have roll kit you have longest chain uh you have rollups you have longest chain and then you have this hybrid consensus world and it's like what is a consensus interface that kind of like fits this fits these worlds to enable users to do what really whatever they want I think in in Sean just to your direct question while we don't have a lot of idea what Roll-Ups are are they real we don't know um what we do have a lot of idea about and a lot of prior art on is what application developers one need and I think that fundamentally the whole purpose of roll up is to decouple the application development experience from the other concerns there and I think that you know we do know what application developers need they want to write in the programming languages and paradigms that they're used to and the closer we can come to providing those in an ergonomic way to as many users as possible that's how we get the adoption on the developer side also just curious um when Polaris was sort of being developed uh did that like inform any uh or like I guess bring out any like sore spots in the SDK that oh a hundred percent like I'm curious about that I mean no it's it's perfect like we can all go home today like the SDK is perfect like you don't need to build any more uh sdks um no I mean like they're they're really pushing so the SDK and like comment in the initial design and like if you talk to Jay if you talk to Bucky like it's meant to build it be this modular software that um raised too much money and then all of a sudden like slowed down and then they needed to launch and they needed to Like Glue things together real quick um and so it's like you we're kind of like going in that original but it's like Polaris is pushing the modularity of the software like to the brink and we're learning a lot and like we're like the feedback loop is very close with them just because um they're a user that we're considering a power user that will like push the envelope of the SDK as a middleware they just had their workshop um devs giving a talk and they have like pre-comp asynchronous pre-compiles for their evm and and so on and so all this stuff is like really pushing it and then it's like Dave um like we hop on a call every two weeks and he's like okay these are the issues he gives me a list of like 50 and then we try and fix at least 20 of them before the next call um and then the list just keeps growing is that Dave from osmosis or Dave from uh bear chain and does it even matter do you just add them together and just call it all Dave yeah we just we just aggregate them yes yes sometimes it's a depending on who you talk to it could be a Zeke proof except bear chain isn't real so so do you see do you see the cosmos SDK to move so I like the way you describe like the kernel and the VMS on top but you see the cosmos SDK becoming itself like a roll-up framework uh I mean it's at the end of the day it's we want it to be more of a library and I mean like today it's Roll-Ups like people are raising millions of dollars on the phrase in their pitch decks of roll up I am a roll-up um and so it's like yeah sure like it's a it's a roll-up SDK and then maybe tomorrow it's a blockchain and everyone's back on the blockchain sovereignty like owning your own D.A and everything like that and then all of a sudden like okay like we want it to be where the application developer can decide between a roll-up or a blockchain like up until lunch so it's like it's basically the they're building their state machine everything stays the same they're just deciding between um finality and like or longest chain and then all of a sudden it's like okay we want to be a roll-up or we want to be a chain because maybe it's like they raise money to be a roll-up and then all of a sudden like they're getting a lot of hype they're getting a lot of users on their test Nets and stuff like this and they're like okay maybe we can own our own sovereignty um and our own D.A and let's see how that goes because at the end of the day if it doesn't go well they can also roll back to be a roll-up um I mean we're seeing this with uh like Crescent is also kind of like playing around with the idea of being a roll-up instead of a chain if it turns out it's Roll-Ups aren't real they can come back to being a chain exactly for them uh Sean You're Gonna Be My tournament comment expert today so how do we because you have experience in that um how do we make commits more roll-up friendly the same way we do with IBC and rewrite it in Rust we write it in Rust that's step one I think like at this point um I've thought about this a lot and like there's one idea of making like incremental progress um on sort of the the core components like you know block saying State sync the P2P layer these sorts of things you know rebranding it I think what would be interesting and a good sign of like commitment to the future is if we actually you know put together a little bit of money it doesn't have to be that much all at once maybe five million to start and we actually just like you know pot commit to building a second implementation of the core client that's supporting like 100 billion dollars of value I think I think probably 5 million is enough to start and I think it'll probably cost 20 to finish um something like this and and I think that you could build in different incentivizations maybe it's Mev maybe it's relayer fees I don't know there's probably a bunch of ways to sort of create a sustainable model for when this infrastructure has product Market fit you should probably not monetize infrastructure before it does but what it does it should be monetized and yeah I think it'd be interesting to start to start from sketch because I mean it's like tenurements what 10 years old in crypto time which is no 22 000. yeah it's it's it's 10 years old which is 100 years old in crypto yeah I think whether it's in rust or another programming language what we fundamentally need is better modularity out of tenderbent you know it was uh like we accumulated users before we were able to make the breaking changes that we needed to really have the flexibility in the core software and if you go look at the one function that is the state machine with the giant switch statement you see all of the pieces of storage in P2P and mempool just plugged directly into that function in a way that makes it literally impossible to pull out the different pieces and work on them individually if we had a more modular tender mint then we could allow users that want to continue to use the core protocol to do it and then allow better experimentation at each of those layers in an independent way where it doesn't block on a core team and yeah I've exactly got a lot of thoughts on this just to just to build on what your code does too and there's something we can't but I mean um like talking to the roll Kid team like if you look at roll kit than what it is um it's if if tenderment if comment was modular and like it was they had interface separation between everything like roll kits would most likely be using the glue like the node package to glue their specific packages together their own P2P whatever they want but at the fundamental base at the fundamental Foundation it would still be Comet and they could still be using the mempool in a much more um easier way than they are now um and so it's like I mean like at the like potentially you could say that like if Comet tenderment was fully modular and it was actually nicely written um there wouldn't be a need for roll kit like equal kit would just be a another couple modules for comet that's interesting I don't know if they talk to us about that but that would be uh that would be something to follow up on I also think yeah there's like this opportunity um like I know for example like scroll is looking for a decentralized sequencer and they're considering tendermint right and it's like tenorman can play multiple roles because it is as many things at once it is a consensus layer but it's also a sequencer and a decentralized sequencer um and like I think when you ask the question like how do you make tender mint more friendly to roll ups I mean first of all I'd ask begs a question of like what is a roll-up um and sort of like what do you need to abstract out like in the case of Celestia it's posting the data to you know the the data availability later so it's like maybe creating some kind of like better tooling around that but I also think it's like you want to make I think you want to separate out the pieces of tenderbent so that the people who need the decentralized sequencer which I think is going to be a huge thing in Roll-Ups can just use that and the people who need the consensus with which they may not need um can be just like separated out on that note I I think that the and this sounds horribly heretical but uh here it is I think that the uh POA design space is something that's incredibly underexplored like why would you pay a DA in a sequencer and like all these different pieces if you just need to spin up like a 5 to 10 node validator set that maybe there's some ability to rotate those validators some different controls over who the validators are different ways to punish misbehavior and uh then you've got full tender men you've got the ability to IBC to anywhere and maybe it allows you to still opt in to some of those services like data availability that you might need but I think that that's like probably one of the biggest needs is a better POA module for the SDK I've got one that I've been working on that's sort of like a copy of the open Libra one where validators vouch for each other and if you've got enough vouches you can join the set and if your vouchers get pulled away you get kicked out a very simple mechanism but you can easily imagine advancing that more how those vouches are given out the number of vouches that are needed there's a lot of like easy parameters to play around with there that I think would offer a lot of flexibility to app builders right as a short-term solution or as a long-term solution this POA thing I think that like there's this idea of progressive decentralization you know everything starts out a little bit more centralized like an idea starts in one person's head and then it sort of propagates outwards and we see this deeply in the ethereum community with the optimistic Roll-Ups op is the super common stack but I don't think they have the fraud proofs working on mainnet right now so like does it give the trust assumptions that they're billing it no it's like one sequencer running in AWS so like is a five person validator set better than one sequencer running in AWS can you pull that POA module and then plug in a different staking module or a different implementation for security later absolutely and I think that because of the flexibility out of the course stack the ability to uh sort of progressively decentralize and change those mechanisms over time is a huge benefit so Marco you may take note for the epoa module from Jack um yeah so let's talk a little bit since we have Skip and make a take here let's um you guys have been evolving like both projects kind of move I believe maybe um that's what I feel at least away from Mev and more into intents and ux and uh more like uh immediate topics so maybe Sean I think you retired a module recently like the you you had build a an Mev module for chains uh maybe can you talk a little bit about that that decision and where Mega Tech is heading well I think like mechatech never wanted to like introduce new intermediaries into the supply chain I think we wanted to integrate supply chain like integrate like the parties that were there like Mev was founded to like oh sorry Mac attack was founded to like rewrite tender Mitten rust is the truth and like we explored Mev because we thought it was like going to be a viable way for sustainable funding for infrastructure that's why you had the budget and everything yeah that was like the whole the whole premise and and when we look at Mev and I think like skip also diagnosed I think we had similar diagnosis at this the same time is like one there's not that much and it's really an application Level thing that is inevitably going to be internalized by protocols right I don't think there's going to be a singular block space Market you know I don't think or unified execution environmental or whatever you call it swath I don't I think Suave is going to be great but I think uniswap X is also going to be great for those things I don't think Cal swap is going to go away the day that um that Suave is is live there's going to be there's going to be many markets and so we want to build like the infrastructure that supports those many markets oh all good um yeah I mean Mev is very small in Cosmos um if you want to be a search or I would not recommend it uh I'd say like where we've looked more is you know we got very deep into this like transaction pipeline right so you know looking at where transactions are coming from and and uh you know uh IBC based chains really have two sources of order flow one is from the front ends right so like your wallet uh or front end um and then the second one is relayers right so so relayers are inputting transactions into a chain and we just started to think a little bit more about like well how can we sort of like move a little bit higher up the stack to actually leverage some of the stuff that we had done to make things easier to use and so that's really when we got into this you know IPC routing issue which we realized was a problem for a lot of people um that's generally where we where we we'd like to be in the future is is really thinking about how can we use how can we better use the transaction life cycle to help users and make Cosmos usable and interoperable um and uh you know like sort of power it by Mev you know you use like the pieces of Mev like simulation and bundling and ordering and you know block space construction to try to make that process um financially sustainable potentially who knows uh but then you know definitely uh you know like better usage yeah and I just to like tack onto the end of that real quick over the other stage there's a lot of folks talking about proposal Builder separation complex Mev strategies and a number of other things and I think a lot of the res the reason for that is in ethereum there's one big pipe where all of the like exploitable information comes through and like that's where the Mev comes from and because of the the architecture of Cosmos there's never going to be that one big pipe and because of the ability of app devs in the app chain world to control their underlying consensus it gives them a lot more tools to combat this and there's a lot more different ways but I think that we're very lucky as a community to be able to watch that one big pipe see how the battle over it plays out and pick the best in class Solutions uh for that over time I was worrying for one one more question for uh Skip and make a take like you guys are both both evolving in the same space um are you looking at each other to see what the author is doing and trying to feel another need or what's uh what's the strategy between your two companies we talk every month we talk a month yeah nice chat what do you talk about weather can you send an NBA boxing rematches no uh are you fun we talk about like what we see the ecosystem needing and then how we can complement each other in in in in in growing that that pie and seeing if there's room to collaboration or you know friendly competition we try and stay open to both yeah I'd say both have a lot of respect for each other's team um and uh yeah I think in general um we want to make sure that I think both of us want to make sure that we're like actually moving in this direction of ux as far as I understand it and making sure that we're not just like you know we've recently been tweeting this thing like grow the pie right like that's really where we want our mindset to be um because we've just realized ourselves like Cosmos is not big enough to support us um and to support you know the amount of teams that I think want to grow um and so we're just really laser focused on trying to bring do anything we can to try to grow the ecosystem um no matter what it takes because otherwise it's like why what are we doing um that's really where we've shifted cool uh Jack I wanted to talk to about hyperlane with you so that was a big deal last week right like hyperplane is uh is going to be like at least the way I understand it quite competitive to IBC within the cosmos ecosystem so yeah what's your what's your take on the on the hyperlane and why you why did you decide that Strange Love should work with them I mean Max just down there talking about growing the pie and I I really think that that is sort of key to my thinking as well we need better routes in and out of this ecosystem and you know For Better or For Worse it's just the reality of the situation we haven't been able to deliver them as quickly as we needed to with IBC and especially with the Advent of Roll-Ups and all of these things coming we need a way to be able to participate in those economies as cosmos and if we don't have them then you know this problem of ecosystem growth continues to be compounded that's why we chose to take the work with hyperlane they've got a lot of traction within the their existing Community they're incredibly ideologically aligned with IBC it is part of the contract with working with them they've agreed to figure out a way to align hyperlane with IBC whether it's figure out a way to fit the hyperlane verification into an IBC client which looks practically impossible in a lot of ways but building a shim layer that allows developers to use either semantics and the different transport layers moving to and from these Roll-Ups I think even like we were talking earlier about the number of different like clients that need to be developed for these different roll-up architectures um you know that's a huge lift it's going to be hard and people are going to be inventing these things faster than we can connect them and there's always going to be a need for these kind of committee based Solutions and I think it was like in January I had a long dialogue with Zachy about this I went back and forth with him for like a month and I was like personally like really conflicted honestly like I've dedicated the last bunch of years of my life to IBC and I was like this seems competitive do I need to do it and you know we do need to do it and we're not going to win by sitting off on an island and telling everyone we're right we're going to win by being pragmatic we're going to win by working with more and more people and IBC is this open standard with no token attached with this sort of like Immaculate Conception I do fundamentally believe it will win but we need help we need to work with some of these other things and figure out how to build those developer experiences and keep linking this ecosystem to more ecosystems and that's why I took the hyperlane work it's kind of like early on where like a cosmos came about because it was like oh there's a bunch of chains they're all siled like they can't communicate to each other let's create a communication protocol but then there's now so many communication protocols but they're all like ecosystem bound so like within polkadot you have like xcm that's like within their poke within their ecosystem but then you have a multi-sig bridge going out and Cosmos you have IBC and then a multi-sig bridge going out and ethereum it's like more or less all multi-sig bridges and so on it's all multi-state bridges so now it's like we kind of have siled ecosystems of trustless bridges so now it's like okay like we can connect chains in ecosystems now we have to pass the barrier between ecosystems I also have a question like what is it I think uh that just asked me to stop there I wish we could continue but I don't know if we have a like this lady asked me to stop the bell I don't know I think someone's up next Tebow thank you very much thank you for moderating this great questions great discussion thank you [Applause] blah blah 