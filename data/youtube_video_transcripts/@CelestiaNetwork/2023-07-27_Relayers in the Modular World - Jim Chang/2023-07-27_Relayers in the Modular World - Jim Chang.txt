okay awesome well thanks for uh the Celestia team and uh the maven team and all the other sponsors for uh for having me up here um really excited to be talking about something that I don't think many people uh actually talk about uh in the interoperability space and that's relayers and how relayers are incredibly important to kind of the Cross chain ecosystem but also incredibly important as we scale into a modular world and there's more and more kind of modular layers that need more coordination uh and before I start uh just a little bit about me uh I'm Jim I'm the co-founder of catalyst which is a cross chain liquidity network if you guys are here for the rest panel earlier uh they're talking a lot about liquidity and interoperability and how that's really important to kind of this role as an ecosystem world and so we're trying to solve that I'm also a defined Dell Builder and so I've been building the space for coming up on six years now uh most recently I was a product manager at Ave and I've contributed to a few dials like pleaser and get coin as well so kind of uh have loved and known this space for a long time and I'm also a cross chain Enthusiast which I don't really know that means but I read a lot of blog posts a little bit about Catalyst although we're not going to talk too much about it today uh we call it permissionless cross-chain liquidity for the modular future uh basically what that means is we have Sovereign liquidity that lives on different Roll-Ups and they're able to actually coordinate uh permissionless cross chain transfers one another and we can connect all ecosystems so not just evm not just Celestia not just move we can collect all connect all of it quite trivially and we do that through integrals and other kind of complicated math but not going to kind of go over the details of that today instead we're going to talk about relayers and and why they're important and so a little bit of context uh I have liked relayers for a few years now I think it's probably the unsung hero of really you know cross chain and interoperability broadly um relayers uh are called a lot of different names you can call them agents solvers Underwriters what have you uh but basically it's just an entity that moves packets and coordinates any sort of off-chain data in between two different blockchains and so pretty important in the context of moving between blockchains as you can tell uh but why is uh why are relayers important and why are they going to be even more important um it's because of the modular blockchain stack right I think all of you guys are familiar with module blockchains hence why you're here uh you know splitting up all these uh different kind of tasks that a monolithic blockchain does into three separate tests but I think now there is a bit of an evolution on the thinking of it and it's less about you know there's three different tasks but it becomes four different tasks right you have transaction ordering uh using shared sequencers and so now there's four parts of the modular blockchain stack but uh oh what do we have here uh if you guys were here earlier in the week and you guys attended polygon today you would have seen that polygon kind of unveiled their stack and their modular blockchain stack has a few other names they have things like staking and proving and interoperability and so if you look at holistically and you see kind of the modularity of blockchains and more specialization more specialization it starts to look a little bit more like this and so we started off with three things that modular blockchains could do now became four things now become six things or seven things right you have proving you might have liquidity slash staking slash restaking you might have interoperability and that gets a little complicated right and I think what becomes more complicated about it is as there's more and more modularization and more specialization of these blockchains there's more complexity in the verification right if you're trying to send a transaction from one chain or another one roll up to another uh you actually have to verify all the different pieces to ensure that this is a valid transaction right to verify the state verification so it used to be okay you know just moving from chain a to chain B but when you go to a monolithic blockchain you have to make sure this da proof with a shared sequencer to make sure there is a transaction ordering proof as well and it gets more complicated now you need execution proof you need impediment proof you need interoperability all these things need verification and how do you do that I think the simplest way to do it is just to have native verification I.E you have you know like clients that are poignant to one another and so if I would had to send one transaction in this new modular World I'd probably have to have six forms of verification and that gets very complicated very quickly and how do we you know pass all those like client header updates uh to all those different layers how do we actually coordinate the communication between these you know execution layers of one another it's with relayers and so you're starting to see okay wait relayers are super important they're going to become more important and they're kind of everywhere uh and so is it all relayers when you look at the modular blockchain stack not quite but yes and I would say it always has been and so at Catalyst when we think about Building cross-chain Solutions we think it's really important to build a really good relayer system in fact we've had the privilege of working with every interoperability protocol assessing the relayer systems and seeing that it's not quite good enough and so we kind of took it upon ourselves to think about okay what is a really good relayer system and how do we bake in the incentives for a good relayer system into this cross-chain Sovereign liquidity Network that we're building at catalyst so a little bit of a public good A little bit of a side quest so to speak but something that you know we love and feel very nerd sniped by and so what are good requirements for a relayer system uh one calls always arrive it's good when you have things queued up in the outbox and you actually receive those messages uh two pricing is transparent and fair uh you actually know where you're gonna be charged and you know what the margins are going to be charged right now I think a lot of relayers are public goods in the sense that they're lost leaders you have foundations that run them at a loss but I think at scale you probably want to bake in some economics to it and then lastly relaying sufficiently decentralized and it's not decentralization for decentralization's sake there's actually a really important reason why we need that and I can talk about that a little bit later in the presentation and so the first thing you know double clicking um you know we think a lot about what are the big questions behind designing a really important relaying system and then when you break down you know the requirement of having calls always arriving um you realize that there's kind of two pieces to it calls need to arrive but calls need to arrive quickly right they need to arrive within a reasonable time span or else you add latency and therefore what is even the point of of having this happen uh and so at Catalyst you know we were kind of under the assumption that things were just relayed right they just happen uh and you know if you're in test net that might be Excuse Me Maybe the case uh but if you're in production if you're on mainnet uh not typically a case right and so a little bit frustrating there uh and so we realized that calls don't always arrive within a reasonable time span so how do we incentivize this right are we building a system in which relayers are penalized for not timely having timely delivery messages or are we building a system in which it's more of a kind of a willingness to pay users have a willingness pay some sort of bid ass system in order for relayers to be relayed we're kind of still designing the system and the second piece is what if calls don't arrive in a timely manner right and so calls should be able to be canceled or timed out but what happens when a message gets stuck do we need to implement some sort of recovery system do we Implement some sort of bidding system how do you design a mechanism in which people understand or users rather understand or applications understand when relayers are taking too long and you just need to pull the whole plug and try it again and so that's something that's really kind of top of mind for us when we think about designing a good relayer system at catalyst the second piece is pricing being transparent and fair like I said before relaying is free right now well not free but free for the user it's being paid by someone and it's usually the core teams of these interoperability protocols or the foundations or subsidized by the validators or what have you but I think in the end State uh it's really important to to have some sort of economic system for this and so when you're implementing economic system you want it to be fair you want it to be transparent and and people want to know how these routes are actually priced and so there's a couple ways you can actually think about pricing uh a a route for a relayer system you can have it be an algorithm right you go okay here's all these different factors of you know this is what the gas limit is is what the gas price is this is what the consumption is this is what the congestion of the network is you spend out a number right and people just take it that's totally fine another system is having a some sort of bid ask kind of order book so to speak and so users have millions to pay relayers have willingness to accept certain services within a certain threshold and so it starts looking a little bit more like an order book which has of course Mev implications that I'll talk about in a second um or you can have user determined bounties right and so uh I think this one's pretty popular within the IBC ecosystem uh you have a standard called ics29 that has you know this kind of user escrow Bounty where you're saying hey the the user knows how much they want to pay for a cross chain packet uh and they'll put it up and then the relay will take it right uh and kind of the the criticism of that is like how do how do users know how do the users know they're going to pay one dollar two dollar uh it's kind of hard to say and you're kind of leaving a lot of money on the table in that regard uh the second piece is prepaid versus pay at the end right are you going to kind of load up a balance and have someone withdraw from it are you going to actually um kind of pay them at the end once they do this delivery if so there's all sorts of implications right one is what token do you pay it in do you pay it in the origin chain depending a destination chain do you paint usdc what is the price risk of these relayers um and if there is kind of a price risk how is that fairly priced right what is kind of the Oracle in order to have some sort of mid-market price in order to do the swap let's say if it's from usdc to ethers from E thematic or or what have you and so you're starting to see that like okay so a very very simple uh kind of idea becomes very complicated very quickly you're like oh yeah like we should price relayers and now you go down this rabbit hole and you say okay actually it's pretty difficult to do so right uh and then the last piece is how is gas handled right how is gas estimated page running destination and as I'm going to talk about in two slides um it's actually a pretty pretty big trust assumption that you have no matter what kind of system that you're architecting and so what are the assumptions on on that last piece right uh so the most important question when you think about gas estimation is who is doing the gas estimation who's calculating that and so calculating gas on An Origin chain is is pretty straightforward right it's what any kind of client does or or interface does um but doing it uh for the destination chain gets a little tricky right and so you can obviously have some sort of trusted solution you can ping an RPC or you can have some sort of somewhat trusted solution you can use some sort of gas Oracle but the question though is who's making a gas or a call are they taking the margin on the quote if so how much is it solely fine but I would say from our experience of using all these different Primitives is that it's pretty opaque someone's making money user doesn't know and that is not really ideal for us as we're designing our relayer system and there's also trust assumptions on the delivery right let's say everything's perfect you have this perfect price that everyone feels very comfortable with you're leaving no kind of leakage in this economic system um you're so trusting someone right and so many protocols they Pride themselves they're like yes we have an one of n relaying assumption uh but the reality is uh it's not one event it's it's typically more of a one-to-one and why do I say that uh it's because users have to trust the relay they're paying at any given time and so if you are trust if you find a relayer you want to pay them they're going to send the message you give them the money how do you know they send the message right oh as I think as a kind of caveat you could probably pay a lot of different relayers but now you're you know instead of charging one dollar to deliver one message you are holding up five dollars for one of those five relayers to deliver a message and so I think the takeaway here is lots of trust assumptions on this real building the message uh and there needs to be some sort of mitigation for that and so I'm posing a lot of questions with with no answers but this is probably the closest answer that we have so far and we call it conditional payments uh and so it's basically a one-time payment on the source chain uh with some transparent pricing in mind and we try to make it as trust minimized as possible and so the flow for this is is is you know as so so there's a price quote that's generated for the relayer right let's say we're using some sort of top-down systemic pricing algorithm uh we actually use Catalyst as this kind of price Oracle and so we're able to calculate how much gas is on a destination chain and what is the actual Fair rate between the origin and destination chain gas tokens for the swap the user's payment is an escrowed on the source chain with a Time Decay and so there's incentive for these wheelers to go very quickly in order to actually capture the full amount of this escrow and then a relay must return with some information from the destination chain in order for the escrow be released and so we're talking about round trips here not just One Direction but One Direction and then sending an acknowledgment back that something actually happened with the necessary micro proof in order to prove so uh Enzo one of end design because this bounty is open for anyone to claim and so we think that this is a pretty good start on what we think is a much more trust minimized and much more kind of robust and transparent relaying system and then over time we do want to Overlay Mev to this and so like I said one way you could do pricing is have some sort of um you know kind of badass system or order book system which begs the question whereas the Mev kind of coming to that and so I think the Holy Grail that people like to talk about when they talk about relayers and when I say people I mean me and for other people in a telegram group because no one's really talking about this uh is is OFA which is order flow auctions right as folks may be familiar with with uh with mempools and and flashbots and uh and uh private Med pools and so OFA and so you think about this there's an OFA for An Origin chain and they're actually queued up in some sort of auction and then you have these relayers actually bidding for this order flow right and why would they do that because then they have the exclusive right to be the relayer for that order flow and then extract what we call Rev which is just relay extractable value and they're able to bundle this uh order flow and have some sort of sandwiching as well from socket kind of talks about in the screenshot here in the right and they can extract value from it right and there's this kind of additional elements that we call censorship Mev which is okay what is the willingness the pay of a user if you know there is it their transaction um that spans two different domains has a lot of Mev to be extracted if all the relayers coordinate and say hey we're actually not going to pass this message right and so a good example of that is that you know you have a position that's about to be liquidated on Ave you have some collateral it lives on a different chain the relayer recognizes that and says hey you're only paying me one dollar for this hundred thousand dollar liquidation position I think you need to be charging me a little bit more or else we're not going to be delivering that message and so really really big design space as we look at censorship Mev and relay extractable value and again me and four other people on telegram just nerding out about it um so the short answer is yes Mev is going to be really important for incentivizing relayers and having sustainable economics through relayers but we're not quite there yet in terms of having you know sufficient transaction volume or messaging volume in order to justify it and we think that there needs to be a really kind of robust way of doing what we call self-relaying which is if there's no Mev being generated by this specific message you gotta have the relay your own message right because in this Paradigm no one really wants to deliver your packet if you're not generating sort of economic value on their behalf and so before I get to the last piece I just want to say you know we're thinking a lot about exactly what a super robust relayer system looks like we care really about the time we care a lot about the timely delivery of these messages we care a lot about the transparent pricing and the incentivization and overall the future proofing by including Mev into this but lastly and I almost think more most importantly we want to think about the sufficient decentralization of these things and so again some interop protocols have this kind of one-to-one relaying message delivery it could be overtly like layer zero right where even before you deliver a message you have the specified relayer or it could be more tacitly where you have this kind of 101 payment assumption you already paid the relay you hope they do something but you don't know for certain like what I talked about before or you have this kind of one of n system that's slightly more robust but the N is really small because realistically it's just these core teams are running relayers and so the N is more two three four or what have you and not quite as robust as what one of n sounds like when people say one event for a mechanism design and in self-realing can always be a fallback I think it needs to be much much more robust I think this is a very similar narrative than to what the roll-up folks call forced inclusion for Roll-Ups right there's censorship from the sequencer you want to kind of submit into the settlement layer um I think this is a pretty good analogy I think self-relaying needs to be much much more robust and have a lot more research behind it and we a catalyst think a lot about that think a lot about all the different pieces of of a relayer system and why is it important to us because ultimately we think that healthy relaying will equal a healthy modular world it's really hard to have modularity really hard to have state verification between d a layer standard attacks and ordering later execution layer and eventually all the other you know fun layers that kind of come out in the future like a staking layer proving layer what have you they need relayers right and so not necessarily the core focus of catalyst our core focus is liquidity which is something again that all the RAS participants in the last panel said was top of mind for them as a major pain point but relay relaying and decreasing the latency and decreasing the truss assumptions between moving liquidity between Roll-Ups is super important for us too therefore we think a lot about relaying and we want to make it a mission for us in terms of research and a public good perspective to push forward to thinking on relaying research so thank you guys so much for your time thank you feel free to follow Catalyst uh for more updates on that thank you 