so just to give a little bit of background about Skip and also a little bit about Mev so I guess maybe to start like what is Mev um maybe stands for maximal extractable value used to stand for minor extractable value but now uh we don't have minors anymore we have validators and it's basically this concept of you know there was a research paper a while ago called Flash Boys which realized oh wow if you could reorder the transactions within blockchain blocks and you could insert more transactions and you know remove others you could actually generate a lot of money right um so last year uh the revenue amount captured on ethereum in 2021 through uh Mev was roughly like 1.2 billion dollars and then across a lot of the other different Roll-Ups it almost added up to two billion dollars um and the the crazy thing about Meb is it's fully riskless it's it's Atomic capture of value meaning you know you you see strategies like people borrowing you know 500 million dollars of capital with nothing in their account um zero collateral uh in a Flash loan and then executing a series of arbitrages across different exchanges and then repaying that flash loan all in a single Atomic transaction um and because of that because you have essentially infinite leverage on your Capital um it does keep the market much more efficient and allows for many more people to come in and capture these opportunities some of the best Meb Searchers I know are under 20 years old and started from you know their basements so it's a very interesting ecosystem um and it's something that I think is very new um sort of this concept of reordering transactions and public information about mempools is you know sort of a a playing field um it's something that you don't have in traditional finance and if you did would probably invite parties like John Hudson River Trading Jane Street to sort of you know get involved in front run people and sandwich people and so that stuff is happening on um on uh blockchain um and the question is like whether it's good right and which parts of it are good like which parts of it could be prevented um or whether it's all just how it is and whether we should just create systems that at least try to like control it in a way and give people the the ability to compete for it in a way that sort of like maximizes the revenue and upside for other parties involved so when we came into Cosmos um no one was really thinking about this as much um we realized that there weren't any good Meb Solutions and Cosmos natively has first come first served mentals right so it's they're not ordered by gas they're not ordered by tip they're not ordered by anything they're just ordered by sort of the order in which they they were received and so what this meant was you know to capture Mev people would spam members um like as soon as they saw a transaction that created an Arbitrage they would submit a bunch afterwards and all race to be the first to capture it uh so what what is Skip built uh skip is built the ability for sort of those same set of Searchers to compete with one another and also for the ability um for uh individual app chains and individual validators to choose what kinds of Mev that they want to allow so skip is natively front run and sandwiching resistant meaning when we receive a bundle we can we ask that person submitting it to sign so that we can compare the signers of the submitter to the actual transactions within the bundle and then we can say ah like this is obviously a front run or you know this is a sandwich or something like that and then we give validators and in the future app chains the ability to choose okay we don't want that we don't want to allow that because not only is it you know harmful to the user um arguably but it's also potentially like a source of regulation in the future um you know there's like now discussion on flashbots about sort of regulators looking more closely into sort of this front running type system which of course is not allowed because it's Market manipulation in traditional markets but that said we give everyone the choice sort of of what they they want to allow and we also give them the choice of how they want to split their rewards so whether they want to keep it all whether they want to send it to their stakers um whether the app chain wants to encode preferences that send some amount of the Meb back to their liquidity providers sort of split the rewards more fairly than everything goes to the validator um so how does this sort of like fit into the potential like Celestia uh you know narrative or sort of like this idea of basically um optimizing your mempool and like creating your own mempool so we've been thinking a lot about this idea of modular levels so just to share a little bit of a presentation um you know this is sort of like uh you guys can all see this right good yeah okay good to go so like in traditional you know kinderman base chains you have this round robin approach where all validators have their own copy of the nimple um and then they all gossip to each other right so if I have a transaction that I got I'll send it to you and then you send it to you know this guy and this sense of this guy so like roughly everyone sort of hopefully receives the same transactions but they're all in different orders and then eventually you know in a round robin style manner that's dependent upon how much stake you have you get chosen as the proposer and then you just grab what you have in your mempool and then that's the block right and these menthols are are very vanilla right they're just the order in which they were received in their just regular transactions increasingly what we've seen is the demand for something more than just like a regular first come first serve mempool the idea of something like a modular metal right so you have potentially something like Oracle transactions at the top that you know the chain wants to make sure that prices get updated because they feed into other parts of the protocol so a good example of this uh was Tara when it was alive they had Oracle transactions up top they always sort of um were there they were inserted by the validator by a side running process and then those were used later on to decide you know the different prices of the very stable coins well it's sort of a tough word to say now um on Tara uh after that you might want to have like a section for Med right so this is the first transactions after the Oracle transactions maybe everyone saw the Oracle updates there's Mev to be had so now you know a lot of Searchers want to rush in um and that's where like something like skip could come in handy right so we could order those transactions we could filter out sort of like harmful types of Mev if that was desired um and then we could also sort of like maximally uh create like sort of the maximal outcome and then split those rewards to this validator or or someone else maybe you want an order book for some period of that or some amount of that block maybe you have like your own sort of like Central little uh Central limit order book model um or protocol that you want to sort of interface with that section of the mempool uh maybe there's something for batch auctions if you want me view resistance and then maybe after that you have regular transactions right that just come in from the RPC um maybe no one else can touch these so it's kind of like an inclusion list uh so that that way you know if if any of these other protocols were censorship resistant or ofac compliant or sorry if they if they did censor and they were of that compliant then maybe this is the validator or some other party that makes sure that the whole chain is not censored um I think this is a much more exciting model for like how you can structure your mentals and these these like these modules can be just slotted in right um and you can have different protocols submit and compete over the space of each independent module um and you know we these things aren't extremely hard because you can sort of like offer this within the app chain model um and also potentially in the celestial model in terms of you know you can build these things you can have people just easily design them figure it figure it out as part of sort of their protocol or chain wide um you know plans and uh sort of what works best with the protocol and then you can just like ship it to them out of the box um and then you know like you can basically continue to have some kind of round-robin type system where you know different validators or or different different parties have copies of this modular mempool um and then you can shift that copy around in various ways uh to make sure that you know it's not sort of like this this centralized sequence um or sequence here that's basically sort of what I you know what we've been chatting to Celestia about for a little while now um you know modularity also I think comes down to the mempool layer and I think in general we've seen an explosion of interest in terms of you know dydx has a very unique structured mempool um in the future I think you know say for example will have their own cordoned off version of their mempool where some of it's Mev and some of it's Meb resistant and I think in general we'll see like more and more of that so I wanted to pause for any questions yeah I had a question actually um I'm trying to understand where skip fits into the picture here so this makes sense in terms of kind of you know providing this modular architecture on the on the mempool um you know and kind of ordering and uh categorization of of transactions but that's kind of like node node client logic right um so it just kind of specifies uh which transactions fit into which bucket but how does you know how does Skip fit into that picture because from understanding that's just kind of yeah as I said no to client logic um some rules to kind of categorize these transactions and subsequently order them so where does uh skip yeah what what does Skip provide on this on this layer here yeah so I actually so I think like when you when you say like node client logic like I think you can go deeper into that and saying like whether this lives at the consensus or the application layer um traditionally a lot of these Solutions have lived at the consensus layer um so like for example how we build Bev tenderman today it's built into uh like tendermint itself I think in the future these things can actually be built probably into the actual application layer um so that you can encode a lot of these different preferences and not sort of have like you know out-of-band binaries that you have to run and you could also like encode like minimum splits and and things like that um where skip fits into the picture is we run all the simulation infrastructure and ordering infrastructure in order to conduct a healthy mub Market so like any mempool that wants to take advantage of Med in any part of its you know modular architecture uh skip can build that that section for them so like sort of when when the validator or when the node is you know building its uh building the sequence of transactions that are going to become the block it can call out to skip and say hey like what do you have for me Mev wise and then skip can understand where it lives in the stack be like okay I'm wrapped at the Oracle transactions or wherever that is and say well this is these are like the top you know X bundles that we've already simulated and auctioned off um that you sort of that we can transmit to you and then you can insert in that and then that would probably result in the vast majority of the profit for that block okay cool that makes sense so am I correct in thinking you're almost like a an Mev expert service provider so they can you know they can kind of specify you know they're building block X and you will kind of um suggest bundles and uh a collection of transactions which will satisfy or maximize the um value for a particular block according to their rules I mean I guess of a follow-on question to that is um how do you actually Source the insights and the knowledge in terms of uh optimizing block construction because you know if you've got many chains um with each having their own kind of discrete application logic um how do you you know how do you plan to to account for um the uniqueness of each kind of you know applications implementation and uh requirements yeah that's a great question um so we ourselves have a modular infrastructure uh meaning we have like a big part of Mev is simulation right so when a when someone who wants to participate in the end the skip Meb auction submits a bundle we have to give them the promise that will only accept it if we can guarantee that we'll end up on the chain it's valid which means we not only have to simulate it against chain State we also have to simulate it against the most recent proposal and then we also have to simulate it against other bundles that have gone before it um and all those simulations are dependent upon the sort of individual like you said um chain implementation of the cosmos SDK but we have native deployments of skip on all these different chains um that you know use the the native stack and and can perform that simulation um what's really cool on Celestia is uh we would have the ability also if if sort of we were to deploy um in the future to to not only um sort of like simulate and transmit transactions on a single chain and sort of like Chain by Chain but also to much more easily coordinate to the data availability layer right so let's say you wanted to submit a cross chain uh bundle and you wanted an atomicity guarantee to say like I only want this bundle to go through if it executes on chain a and chain B um then we can sort of coordinate quite easily through sort of like shared state to say like okay these are both going to go through or neither of these are going to go through instead of sort of just like one going through or the other going through um this is like one of the big unsolved problems of Mev is sort of this like cross chain atomicity uh but I think when you have shared datability it becomes a lot more accessible potentially um but as you said that's correct we have we we have to update or we keep copies of chain state for each individual chain that we're deployed on and then we run the simulation on top of that got it thank you for your answer of course but so how do you actually like enforce this modular mempool like would someone literally be slashed if they don't comply with this um we you could do that right so like the idea of having this more at the application layer um is you can you can sort of like encode these preferences into like the chain binary so like you know in Gossip or sort of like when consensus is happening you can like tell or like validators uh or sorry yeah like all the different nodes will be will need to apply all the different transactions and if those get processed differently because they use like a different uh mental architecture uh then like it would probably not result in the chain and the same chain State and so like you'd be out of consensus and then we're working on ways right now to actually encode like the payment preferences as well as part of that um but I think you know in general like these things are pretty easy to watch like I think the the weak way to do it is to like look and see sort of how how payments could be like altered and if someone's like defecting and then use like governance to slash that or like more strongly you can try to have these in in within consensus so that if you don't actually pay out in like sort of like the chain encoded preferences and everyone else did then that defecting validator would be just out of consensus or if I guess one-third yeah I guess it requires like all the mempools to be synced before like they try to all process a block in in that situation I mean I don't know if it actually requires all the mempools to be synced I think you can still have this architecture where like there's a single proposer and then they um you know make make the proposal and and then it's more of a question of how do you process those transactions within like the context of the mempool that you should have right um and like to make sure like if you've modified your mempool um that it wouldn't it like the the chain State once you like apply the transactions The Proposal would be like different mm-hmm okay one other thing I was thinking about is as far as returning me visa application layer like one option is like like what basically what the question is what are the options there and like what are the trade-offs that we should be thinking about so like returning Mev let's say to like parties outside of just validators you're saying yeah like maybe the person who made the application uh yeah so I guess I guess that could be the same as the validator yeah um it's a good question uh I mean I think it really depends on like what your chain wants to encourage right um so like if you're a if you're like primarily a DEX um or like your chain is all about sort of like attracting liquidity you might want to sort of like dial up the amount of rewards that go back to LPS um I think like you know in the short run validators usually don't need to be compensated that much because oftentimes they make Bank in the beginning of chains off of like high token rewards um but like as that dials down you might want to like move this is happening a lot in Solana right now where vouchers are very unprofitable at least for a very long period of time um you might want to move that Mev towards the validator to make it sort of like more financially sustainable for them but in general I think like you you can dial these metrics um sort of according to sort of what the needs of the chain are maybe in the beginning it's all about user rewards and getting liquidity I think later on it's more about paying for like a long-term security budget generally like these things have not been that explored right the default I think on every chain that I've seen is all the money goes to uh the validator and you know that makes sense for the validators of course um and it makes it immensely profitable for them but I think like there should be experiments where we we try to distribute any of your rewards more fairly to other participants as well foreign that is mostly sort of what I wanted to present on today um so there's any more questions I can answer them otherwise you guys are always thrilled to feel free to contact us on Twitter or something like that if you're interested yeah I have one more question actually so I'm trying to understand if um if skip would be part of the I guess the consumer chains protocol uh and would it be enforced that every validator you know has to use skip as a service or would it be um you know kind of opt-in because you you mentioned you know the the potential of embedding this at the application layer which would suggest now like a strong um you know kind of a strong dependency on skip in that case um see I'm just trying to understand if if it's opt-in or if it's kind of enforced if you know if your vision is to enforce this on the consumer chain who's looking to leverage uh skip there's a variety of models you can go about this so in general like with Mev you you want to encourage competition between different parties right so like a for example like PBS took advantage of this um but I think the big question for us is how do you encourage competition and how do you decentralize um and have like a variety of Builders without losing preferences right so when you have like like let's say like 20 Builders and they're all competing to build something it's like how do you judge them amongst themselves usually the answer is let's just maximize profit at the expense of everything else and then choose the most profitable one right um usually what that ends up sort of leading to is an ecosystem like on ethereum where you know Mev becomes No Holds Barred and you can't sort of encode the preferences that you want that might be like reducing profit right so like sandwiching accounts for a large percentage of Mev revenue and ethereum um and so like how do you keep like all of those Builders sort of on the same page within the same rule set that the application wants to Define for its users um while still sort of encouraging them to compete against each other on Fair playing field this is something that we're just now exploring um in the future like we want to build systems that encourage like a variety of Builders and help build those systems um but also while having some kind of like protection so this sort of goes back to like right now we're working with like the cosmos SDK team um to build like an in protocol uh PBS module it's not really PBS but it basically is a much more preference setting module that allows for either the valid or the entire chain via the chain binary to sort of like encode preferences of minimum payout bounds to different parties as well as like in protocol run um detection mechanisms for like front running and things like that that can sort of like reject um individual bits if you know if if sort of like people go outside of those bounds but sort of this is I would say like this is generally an open question cheers yeah unless there are no other questions thank you uh but I'll give it another few seconds just in case yeah we're cool thanks everyone for listening in um basic idea again is just we should be able to give protocols the ability to design their mentals in a very easy modular way and to make sure that there's like a variety of parties that can compete for each individual part um mental design space is generally something that I think is relatively unexplored and if anyone else is if anyone's interested in this in the future please reach out we'd love to chat thanks for the presentation yeah thank you so much thanks so yeah cheers thank you thank you 