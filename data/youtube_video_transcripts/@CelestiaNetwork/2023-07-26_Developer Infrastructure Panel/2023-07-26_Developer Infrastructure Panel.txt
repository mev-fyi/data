[Applause] testing's on yeah well hey guys thanks so much for being here today I'm super excited to talk about developer infrastructure in the modular context um you want to get us started by introducing yourself and about what you're building your protocols I guess I have the microphone so I'll go first hi I'm lzrs I'm the founder of modular Cloud so we're building cloud services for modular blockchains and um our first product is a a block Explorer it's one of the things that we do we have a definitely a very different approach to Dora and we actually work with Dora and we're very good friends but um we what we do is we index da layers l1s as well as the roll ups that are on top of them and there's a lot of really interesting implications to doing this and a lot of different architectural decisions that we make as a blockchain cloud company that differs from ones that were previously servicing monolithic chains so I'm excited to dive into this more on this panel hi I'm Josh and I'm a Solutions engineer at Celestia labs and we're building Celestia which is a layer one data availability and consensus layer one blockchain and the goal of what we're building is to make it as easy for people to deploy a blockchain as it currently is to deploy a smart contract so yeah really excited to talk about infrastructure for developers today I'm uh Jordan I'm the CTO co-founder of Austria uh Austria we're we're building a modular uh shared sequencing chain built on top of Celestia right now using modern D.A the the goal of what we're building here is to make it such that when you make deploying a roll-up is as easy as deploying a smart contract that it can also be done in such a way that it's decentralized today the l2s and whatnot that people are familiar with using I'll use centralized sequencers and so we're trying to to change that and hopefully create a uh you know a better future for us in that regard hello again my name is bunny uh also Maurice Trio which I was fine um building multi-chain search engine cool Dora as LC lcrs or l-s-zers said we work very closely with them they're available [Music] indexer uh or also a roller power indexer many names for it uh wherever they are multi-chain search engine um we very much like to we made some interesting infrastructural decisions let's say as well in order to be able to support this module infrastructure um we're very happy to talk about it um a lot of that is just pretty much pretty much relies on very heavy collaboration amongst all of these very compostable infrastructure um so I think a common theme that you know all of you guys talked about and just building modular in general is you know how do we make it simpler to you know build blockchains or Roll-Ups for for teams right um but at the same time you have to interact with a bunch of different layers a bunch of different you know piece together a bunch of things you might not have had to before um so I guess my first question is generally how do you think that developer infrastructure and tooling can you know support um you know making things easier for developers and perhaps if you feel as though developers that are thinking of building module are a little bit intimidated you know in doing so and you know what can be done to support them is that is that for me uh it's for everyone we can I'll take turns um yeah I think that this is um actually a very um difficult problem in engineering but I don't think that it's specific to modular blockchains um when like so the I think the the general problem is and this is something that we Face building an indexer and a block Explorer is um like imagine you have like a thousand different chains these are all going to be built slightly differently and there's going to be nuances in the details of each one of these systems that you can't create a common abstraction on you you can't necessarily for example make an abstract block schema that you build your application on and you can do that and but you're not going to have the depth that every single protocol you're not going to be able to go in you're going to lose resolution on the data so this is a hard thing and I I don't I don't think that it's necessarily a bad thing that we're facing this but but we definitely need to be making the right engineering trade-offs when we're building tools so like the way we think about it is we are there's kind of a spectrum whenever you're as an engineer when you're designing something you're going to have two engineers in a room and one of them is going to say let's make let's over engineer this let's make this super generalizable so we can upgrade it later it's going to be very easy and um on the other end of the spectrum there's going to be an engineer who's saying wait wait no this is the requirements for the customer so let's just build exactly what they need and I think as tool developers and infrastructure developers in the space we need to go way more towards that flexible side so that we can make our tools very adaptable and so the attack that we're taking at modular cloud is we're really focused on acknowledging that we can't generalize across all protocols but what we can do is we can make the developer experience of creating an integration which needs to be done manually but we can make that developer experience as easy as possible yeah oh I I was just gonna say that I think that you know we talk about this in the context sometimes of modular blockchains but I think it's really a a like whole crypto blockchain space problem where you know my my background is like more web 2 and big Tech and the reality of you know someone in that world trying to get into this space is that there's a huge Headroom to just jump in you know if you're uh and you're a front-end Dev and you say I want to build an app and I want to try and use a blockchain you're trying to figure out like how am I gonna run a local blockchain or if I'm using ethereum I'm gonna Pony up you know whatever like 20 a transaction to Dev test this application there's all sorts of hiccups along the way and so much tooling along the way it's it's very complex and it's a huge barrier to entry to actually get some of these ideas onboarded so you know when we think about building and modular we we see it as an opportunity to kind of correct some of that to an extent make it you know I I hear lots of people I talk like well isn't launching something modular like more complicated and I was like well we get to have a more narrow space of what we're focused on which means like we can really work on tailoring that experience and we can make it a lot better and easier to use and then that can breadth can grow as we go more and more specializations and there's more pieces in this space much like if you use you know like Google Cloud today you don't really know how networking works like the the the fact that we're sitting here and like if you want to be a smart contract developer building an app you're like I need to understand exactly how the core protocol works like that that in my mind is an abstraction that we need to to kind of move past in order to so building the tooling so that we can do that in the future is important yeah I was going to say pretty much along those lines I think one of the biggest problems uh well you've pointed out like it's not really a modular problem it's more of a crypto problem in terms of like where the industry is at um I think the most complicated part that needs to be figured out in the next like five ten years is uh those sort of common apis and interfaces that allow uh composability but also like optionality for people to pick what they want to use um so I guess for example like a data availability interface that would be somewhat standard so that people can use different da layers but also use the same tooling I think that's something like rolekit is working on for example Dimension is another example a roll up as a service provider they've packaged together both their rollup SDK along with the celestial light node so instead of having to go and start each one of those manually you can actually do it all in one in the command line interface so I think things like that they're some of them might last some of them might not but I think whatever the like the happy middle ground with all of that is is is the way that this is something that we can take to the web 2 developers and be like hey do you want to try this out it's actually fun and it's not gonna you know you're not going to spend your whole day trying to set up the light node or trying to start the roll up so uh yeah I think we have a long way to go but uh it's really cool to see things like uh Dimensions like roll up SDK for example like that actually exist already um and excited to see where that goes um I'll give a brief I think first of all we very much relate to the point of trying to create a very good somewhat abstract generalizable schema uh it is the noble approach it's very hard um someone in the room is very some people in there are very familiar with that um I think but yeah very much resonate and echoing the fact that it is a lot of trying to create packages trying to create bundles trying to create any semblance of hey we maybe figure out the best way to go about building a D5 specific app chain uh FCS specific app chain uh Define enable nft app chain uh you can leverage composability I think it's a very it's a very one it's a very wonderful thing once you are able to come into an ecosystem and come into an entire industry and say hey there's a lot of people that have done a lot of the groundwork for me already I can just get extremely creative with whatever I want here yeah I totally agree with that as well um and I think you know the challenge then is on you guys you know in developing your protocols to you know make it easier and Abstract that away so they don't have to think about it um so I guess a question for all of you again is what are some of your biggest challenges in doing so what are the biggest hurdles that you have to go through to be able to you know make it simple for everybody else uh things are always changing and I think in the early stages of all this we don't really know what the best way to do it is um so like speaking of like the da interface with roll kit for example like we might have like a beta version of that but at the same time uh we don't know that that's a final version so I think it's just a yeah I guess a factor of like where we are at in the life cycle of this modular ecosystem and crypto ecosystem as a whole yeah I mean I'll definitely Echo that I think that the amount of attempts on goal is the key so the cool thing about this um and like like one thing like for example that you know Austria enables is for um you know it just it lowers the barrier of Entry of having like a decentralized chain so you can you can it used to be really hard to deploy uh blockchain based application and now with Celestia with shared security and now shared sequencing and stuff like this it makes it really easy so from the from the perspective of people actually building applications we're going to have so many more shots on goal on trying to find out that one thing that hits a Zeitgeist like like Bitcoin did I mean I think people don't realize like when Bitcoin came out like nobody thought that that would be something that people would actually find valuable but that application was very valuable and that's why we're all here today because everyone got inspired by this we started trying to improve it and now we're all here at the modular Summit and um I think that's one thing that's going to happen we're going to find out like the killer apps um through making it easier to experiment and we're also on the tooling side also trying to build systems where we can we're basically right now the approach we're taking up modular cloud is we're finding services and like apis that people want like for example people want nft apis for evm rollups so we have an nft API this is something that um there's clear demand for and we're trying to build a collection of these things and then what we're doing is we're finding we're we don't know what a generalized platform is that we don't know how the design should be for a generalized platform that can provide cloud services to all protocols that's a really hard problem but what we're doing is by making a bunch of attempts we're trying we're finding out these General patterns and we're discovering how these things should be built um yeah I think I I resonate a lot with the idea that like you need a lot of attempts um and I think that's one of the things that the modular space really enables and you know one of the things that we think about trying to enable as a as a shared sequencer is launching these Roll-Ups and and what's the likelihood that you know the of the first two blockchains that like really became big that those are like the Final End State and like enabling more iteration on what you can actually do and it's you know um I think that's really important the the difficult part is that if you want to be the base of that Foundation you have to make it such that people can actually innovate um and so I think there's a lot to to how what uh Josh said here of like we're building things for the for the first time and then like we're building things on top of things which are iterating pretty quickly and there's a lot of interconnectedness and bootstrapping your your own project um and so I think the one of the big things that we do internally is like just dog food and what we do it's you know it's hey we have this and it's like cool let's go build a roll up on top of it like you you have to actually make sure that what you do and it's it's not perfect um you know dog fooding we come with our own biases and you try to try to work through that and that's why you get product out to people and you get it in their hands and you find out and the same as any like iterative development approach it's like okay what was wrong with it and what can we do and learn from that hello um can you repeat the question again oh yeah I was just saying like what do you think are the biggest challenges um for you you know in your protocol having to make things easier you know for the user or the developer um I think one of the biggest one is honestly again do I quit everything that everyone said in the room but I actually do give a very concrete example we got a chance to um because we're over there well Jason search engine um we got actually the chance to chat with a bunch of note operators throughout this week um it was a very enlightening and they were very enlightened in chat because we got to see how one of the very core uh entities on the stack is able to think to reason through whether or not to support a certain ecosystem uh we all formed these very implicit types of questions uh some more explicits than other uh some very large node operators have a very concrete equation that they use to actually figure out whether or not to support a certain ecosystem um one skills which but um something interesting is that we one of the very key components of that question is just how much is this ecosystem iterating on their notes uh being able to actually Tinker around with your notes is something very powerfully something that you can you can get very incredibly complex with uh I mean there's nothing necessarily intrinsically wrong with it but there is something where there is a point in which infrastructure providers really want to feel comfortable saying okay this is going to be the one version of decline that I'm gonna be able to spin up 28 notes uh per ecosystem per chain whatever and I'm going to be able to provide industry grade offerings on top of it and yeah that type of offering is just something that has presented to be a very insane straw for everyone like yeah like we might be able to Center schemas and such but still it's something that's a simple quote-unquote simple as defining okay this is an old client can prove to be a very hard thing to do totally um and I think going on to the idea about different you know building in one ecosystem first and then perhaps moving to another I think you know some of you are starting this ethereum ecosystem others more so in the Celestia ecosystem um I guess why would you select one over the other like why did you ever if everyone wants to let me know like why you kind of went with One Direction first and if you feel there are times where just it's just best to stick to one ecosystem and not try to integrate with all of them like if they're just a certain level at which it just becomes too complex um so let's say a couple very a couple of me honestly very practical things I do think to think a lot about infrastructure as being the byproduct of current economic incentives um in that sense incentive alignment at this point is one in which they let's say we do incentivize a plurality of validators within ethereum the theory ecosystem you run a validator on ethereum um on the active set you can get paid to be able to secure ethereum that's that's great uh you run a full note not so much so from this standpoint there there's very much the approach of hey I like this technology I find it very cool I think it's very impressive I think it's the most secure the most optimized for whatever my use case is that's great easy viable economic solution long term and that is not to be let's say incredibly cynical of a lot of really wonderful technology but it is also just to say hey we do need to make uh infrastructure infrastructure is only as sustainable as the economic mechanism holding it so from that standpoint that is something that we took very much into consideration we looked at all the different ecosystems that were the ones that had the most uh the most please play a simple demand the most demand of people asking us hey can you build this can you build this sort of thing uh I'll pay you right now I need to I need to get my hands on whatever you're building right now and that is a very clear Cod example for it however we also know that there's we're in crypto there's the ecosystems that are very very uh wealthy and Powerful still and they may not lend themselves to give us as much flexibility as something that that we can actually do within a modular ecosystem so that is also why we decided to build on top of it we very much think that people can get very creative with it and there's nothing more powerful than very creative creative infrastructure I I think you know to that point on the you know the economics of it all being important I think I take a slightly different approach I I 100 agree but I go down and I look at just kind of the first principles of like okay if I'm trying to build something scalable right we talk about like oh we want users we want like actual useful applications in crypto one of the things I I always say to that is like okay I used to work at a web 2 startup and we had a database that had two terabytes of information that's like six years of of ethereum data uh so the the question is like okay if we want to actually have these useful applications we need like scalability at not like a uh we need a huge multiple and so coming from a first principles of of that is like okay how would I build that and and that's I think modular is just you know if you're building software in the world you know for the most part if you want to scale you end up going more modular um you have specific specializations of what you're working on and so I think that's that's a part of why you know I I look at the space and then to the point of the economics it's like okay well like ethereum can also make these changes and they're working on things that'll help with scalability but it's a it's a question of also just like velocity you have you have all that Economic Security it's it's all in this like one space and you have all this liquidity it's it's difficult to move it's a financial product with a ton of money it's like how quickly Are banks changing their banking systems right like it just doesn't happen that quickly so if you want to actually be like come in and challenge the the incumbent and be like hey we offer something like better it's I'm not going to do the exact same thing as what the incumbent is doing I'm going to actually try and change a lot faster yeah so we um we first started off um supporting Celestia um that was our first integration and that's a cosmos chain essentially so um when we launched our block Explorer we first were only only supported Cosmos and we've since added evm support and we do have proof of concepts of other VMS that are compatible with our infrastructure but those are the two primary ones I just think on a practical level if you support right now Cosmos and evm for your tooling um I think you're going to have uh you're going to have compatibility with a super majority of apps that people are using so that's a really good I'm starting point but I think on a theoretical level the reason why we started with Celestia is back to this point that we were talking about earlier about getting a lot of shots on goal and essentially what is possible with um like let's say that you have the ethereum virtual machine and you want to improve it if you wanted to contribute that Upstream to actually leave the ethereum network as something I'd talked about my talk earlier coordinating with a large group is extremely hard so that's a very difficult process if you want to change that execution environment it's very difficult to do so and there's so there's actually if you look at a blockchain there's actually a lot of things in the monolithic architecture that's all bundled together and these things they don't actually have to be so what needs to be bundled what needs to we need a lot of people to all provide security to The Ordering of the data and there is a strong Network effect in that and if you subdivide that into many different l1s that I'm not saying that there's not viable I think it is very viable and there's a lot of people who are a great solutions for making l1s that are other than just the major top 10 chains I think we're going to see even a lot more L ones but but it does you have to admit that it does sacrifice security and there is kind of like a economies of scale to security as well and especially with data availability sampling as you you add an additional byte to the network it's actually sublinear scaling so it actually takes like log n steps of verification more per n bytes and so that's there's actually a really great property of having an L1 that's just like dominant and that most people contribute to but that Network effect does not necessarily carry over to other parts of what the blockchain is so in my talk I talked about like the fork Choice Rule and you can like like a roll up is basically defining this and this is operating on the on another Fork Choice rule which is like the L1 I give this talk earlier today and um essentially the um like being able to customize a lot of that stuff actually makes it makes it possible to make a lot of improvements to the way that these systems work and a lot of I mean a lot of things in ethereum we're kind of just we were kind of just figuring it out as they went and I it's not necessarily like I think someone had said earlier just because what are the odds that one of the first blockchains was optimally implemented I think that there's a lot of improvement but going through an upgrade path of actually convincing the community to take every single change necessary to to get there is really difficult and also you really don't want to take any you don't want to experiment at all in one of those situations because if you take do try a crazy idea and it destroys the network you're gonna nuke everyone's bags and we're all going to be unemployed so we really don't want to do that um so I think like what's cool about modular blockchains is you can have a bunch of Roll-Ups on top of an L1 this L1 has a giant you know a giant Network effect but the the actual implementations um you you can have these all be permissionless and what you what's kind of cool about this is it actually is a better way of building a blockchain than um it has a really interesting productivity scaling property where you can pair parallelize the iteration process because all the different people that are trying to make different Roll-Ups are not needing to communicate with one another and as a result you can have a much much higher speed of iteration something it's kind of like if you have like a distributed system and you and your application is not designed for that you can't just add nodes that's like trying to build something within the confines of a single project where you have to agree with everybody you're going to have a lot of communication overhead between each person trying to put out put forth an idea but if you have permissionless Innovation you can do everything asynchronously and this can scale you can scale the amount of innovation with the amount of people trying to innovate because everyone can take their own bets and I think that that is why I believe that the modular ecosystem is going to be where the dominant amount of innovation happens and as a result I think there's going to be a large amount of activity in the future on that and that's why we took a strong bet entering this ecosystem very early I guess uh I'm a little biased here I work for Celestial Labs um but I think the thing to take away from me is that uh like people building on top of Celestia uh and actually building on top of other D.A layers uh I forget the actual question but I think the thing that like the reason that I really like yeah I know where I was going to go oh no the question was just you know why start out building in one ecosystem versus another or you know maybe staying in one yeah so I'm definitely biased um but I guess the thing that I do have flexibility uh for like of my choice is what execution environment I'm using uh so I think I just like think in the grand like long term uh having standardization to some degree between those execution environments uh as great as it would be to keep them in the Celestia ecosystem I think that like having the ability to connect with other da layers that are building the same sort of consensus like shared consensus network is something that can be really powerful all right um want to jump in a little more here into your specific protocols um I'm gonna guess I'm gonna start out with both Bunny and lzrs you guys are both building block explorers or search engines um would love to hear from you guys you know how your approaches you know differ or also how they could be similar or additive to each other as well sir yeah I I can go first on this um yeah I think they have a fantastic block Explorer um ours is um it has a very different angle um first of all it's it's primarily for developers and we are trying to build um we have an indexer that works with Roll-Ups and and lots of different chains including da layers and um we think of our block Explorer as kind of like the web console for this so this is like like you can like you know log into AWS and you know set up your services and you know run computations on in their cloud and we think of our block Explorer as just like the the the web interface for our cloud and it's also kind of a reference implementation since it is an open source block Explorer it's a reference implementation so someone who wants to build a product with their Cloud can look at how we use it and they can just copy that exactly and we would love for them to use our apis because that's how we make money um and um I guess like the last but not least I would just say that um we when we design it our approach is that we are very developer focused um and we we because we're working mostly with long tail projects things that are there's not any users at all so we um but no it's true the users are the companies that are developing it and that's who we're talking to a lot and so but so they're debugging things right now this is the stage that they're at um and of course there's the other users on any blockchain protocol I mean that's the question but um I'm sure there's there's hundreds but um yeah no but we're trying to make um all the tools that developers need for you know building applications and debugging their protocols as they're building it live I can confirm there's there's users you know your blockchains um true uh yeah I know as long as the blogs are not empty we're happy or or even you know as long as there's gum people that need block explorers that are very uh we you used to use the word uh human the phrase human readable quite a bit um I feel like over time now I've grown a little bit more detached from it I think it's just more so from the Tampines I also have not so great word uh trying to find a new one for it but legible from the standpoint that is something that people can just understand uh it's maybe maybe friendly is the appropriate word for it uh something that you can feel it's approachable something you can relate to something that does not assume any single level of complexity uh from the user prior to knowing oh I don't know what is a swap but all everyone can understand what is ascent and receiving what is sending and what is someone is receiving um in a swap or exchange transfer beyond that a lot of our infrastructure is set up in such a way that we're able to actually leverage uh infrastructure like model classes to collaborate on let's say hey you have a really wonderful indexing indexer can we get some of that data right uh also in the exact same way that okay going back to the economics of it all um we do believe that let's say if you're building critical infrastructure for a lot of these ecosystem even whether or not they're uh long tail or like very much on the on the at the center of the developer you should be still getting paid you should be still you should still be a very sustainable project on your own right um I think we more so prioritize the fact that developer tooling can only takes us so far in such a way that we can allow people to create uh we can allow providers to create Goods that people can start interacting with very easily however in just developer infrastructure it stops at the point in which as soon as some users are trying to engage with your ecosystem that is where you don't want to show someone hey here's the here's the console right you very much want to create a product that someone else that knows very well how to use the console can then use a product like ours and say hey look you just minted this you just engage with this good just particularly service um you just send money around the world you were just able to bang yourself uh I actually or even let's say something as communication I actually didn't have a phone number for an entire year and I think uh yeah very free and I highly recommend it but being able to leverage your infrastructure let's say uh peer-to-peer messaging that works I had no problem living around the world that way that's awesome might try that actually one day just not having a phone number it's great more questions for you guys I think I'm going to move on just so we don't run out of time here I'm so sorry oh I can keep oh I have five more minutes oh okay perfect all right so great um so basically the way I understand it you know bunny you're more focused on you know the consumer side of things and lzrs more so unlike the developer kind of back-end kind of things um I'd love to hear you know I guess starting with you more about the cloud uh platform that you're building and how you can help yeah they're um so I I think um one issue that is gonna we're going to be facing very soon is like it's becoming very easy to launch a chain and that means there's going to be a lot of chains um and like these chains are continuously producing blocks um and there and the cost of putting data on these chains is now plummeting so people are going to be putting a lot more data on these chains and so um one interesting thing is like so first of all there's basically two child this leads to two challenges one is and I think I might have mentioned this earlier but fragmentation of the different types of implementations of everything so if you have a traditional indexer and cloud-based application or tool that works with for example evm chains you're you're already not going to have compatibility with every non-evm chain and as we get more chains that's going to be a large selection of interesting projects that you're not going to have compatibility with and even within the evm space there's fragmentation so not all EVMS are the same there's some EVMS that don't have like a given like RPC endpoint that you might want or they just don't they they like have like some like pre-compile or like they just have like it just doesn't work exactly the same way and it's it's actually becoming increasingly hard to just simply make an evm compatible tool um so one thing that we're doing is we're just trying to think from first principles how can we rebuild these systems so that we are not making assumptions about what how a protocol should work and we can just let people Define that but as I had mentioned earlier we want to make that developer experience as easy as possible so that's one of the things that we're doing um and the other thing is it's kind of like it's kind of gets into the economics of actually running a cloud-based company and the the and when you have a lot of chains you're going to have this long tail of chains that are somewhat interesting but maybe they're just not extremely well adopted yet or they have potential but they're just not that much usage yet and you might want like accessing any one of these given chains it probably doesn't give much value to people um like maybe not that many people want an API for that but a lot of people will sometimes want to access data from some of these chains and so like if you I can't remember the statistic off the top of my head but last year I was quoting this thing where there's some very large percent of Google searches that are long tail so people are searching for data I'm searching for information on Google and a lot of these searches have never been searched before it's a non-trivial amount it's actually surprisingly high so that what that indicates is that people there are like when you have like a the distribution like you have like a head of data most people are accessing data in the head and this long tail there's a lot of demand to access data in that long tail the problem is that it's really expensive to store that and and if you just say okay well I'll just buy all these terabyte hard drives and just like put them in my basement it's also then hard to actually like run computations on that and access that and query that in a way that is performant and acceptable in a way that is useful for people building applications so we're trying to make the infrastructure um on the the cloud side of things that can allow people to run computations and query this data set and make that available for everyone so um this stuff doesn't just get lost to history you're up why consumer focused um I guess the question was just I believe that you're kind of more on the consumer side you know helping you know users like interact very easily with the block Explorer more so like a search engine so I was just curious as to why you picked that direction over something like modular Cloud which is more of the back end side of things sure um so I say we ver we very much are intentional with the with the wording of referring to our product as a search engine as opposed to a block Explorer um but I'll actually just pick half of uh the there's a lot of queries that do not get actually searched on Google uh the statistic is insane uh as you were saying you know we're just thinking okay just think of like a standard query like five letter like what is and then just insert whatever word do a permutation on that on those characters it's gonna be an insane number um and yes they're not never gonna get searched and I do often find myself finding stuff that oh there's no search result for uh page for this I I think it's kind of fun um then how do you build a product that actually allows you to access these things you don't necessarily build a product that allows you to access only hash data um you may want to do that if you want to specifically again take the approach of letting people be extremely developer focused that is great that is deeper actually the perfect product for that and that is how you want to reference stuff maybe block guide some people do that as well um why not support at all but the point in which we we're very intentional not intentional on on us being a search engine as opposed to block Express is we believe people don't necessarily want to search for a specific data sets or a specific uh how to say it um factual information that all of the top 100 searches on Google uh every single year are all brands they're all brands they're all Goods they're all good their services and the only exceptions are stuff like weather uh food around me and stuff of this sort in different languages as well uh because you know everyone searches is not something appropriate to the Crypt ecosystems therefore I think it's such a good approach to actually take it okay if everyone in the world searches there's anything billions of searches every single month I forget the precise amount but it's definitely on the two digits end of things uh like 36 billion searches I think um everyone don't quote me on that you can Google it yourself but or Dora it yourself someday and we take that approach because we want people to actually not not search for these factual information on every single block every single transaction every single uh internal internal transactions logs whatever decoded locks what we want is people to actually search for these goods and services and we at Dora when you search for nft smart contract right now it's only bound to let's say Aura erc721 uh proxy contracts but we want people to be able to Mint with Endora which you are able to do right now if you searches in a team smart contract again sort of draw block C7 721 you're able to maintain with indoor if you search up uh Dex within Dora you are gonna regenerate a friendly UI for you to be able to engage with the swapping widget within that right now it's of course bound to one of the most used ones we use the uni sub widget in the future we hope to have this very generalizable infrastructure allows you to Leverage every single got an application um regardless of whether or notice the first so the last time that someone's looking for it as well we think that that we've seen we think that that is how people relate currently to goods and services so therefore why you actually not offer that in the space we offer a lot of we have a lot of providers for many things why not actually give give it to people in a way that they're already used to engaging with them sounds great you guys are really additive to each other and kind of approaching it from a different angle um I think it like makes a lot of sense so thanks for going into that um Jordan jumping over to you on shared sequencers um you know there's a number of different shared sequencer networks popping up um including Austria would love to know you know what's different about Austria from both you know the I guess the developer infrastructure experience for the most part or how easy is it will it be to plug in and use your solution yeah I think um I mean first of all we're really excited to see you know uh more people building the shared sequencers we think uh you know it's only a from our perspective it's it's only positive to have more people thinking on this and more people working to you know push us to build something great um I think that the reality of this space is that you know the shared sequencer narrative took off and like I don't know like March April and uh yeah I I think you know espresso yesterday launched like a a demo thing that they they posted which is great pretty cool excited for them we're gonna do a demo of what we have a little bit later here today at a workshop so I think the the reality is that like it's really early and the debating over like who has better product ux and whatnot it's going to be really early I mean to an extent where it's like I I looked this morning I was like oh espresso had this post let me go look and see how this works because I'm going to be talking about how you know we're all thinking about our user experiences and it's it's one of those it's it's just so early to really really give you like a this is our differentiator in terms of how our product actually works what I can talk to is you know like our our experience and whatnot which is that like my my background is in developer tooling I worked at gcp I worked at meta doing like their API designs and worked at a CI CD company for a while so it's like our it's really our background is building developer tooling and so everything we do comes from kind of that mindset of like what is what is a user what is their Journey how do we make it so that it works what are all the things they're going to want to do how do we work on those Integrations and then you know from here we get you know products out and then like I said earlier it's it's going back it's hearing what people have to say and continuing to improve on it before we get to you know a on a launch and that's kind of how we think about it and um yeah thanks for that um I'm also kind of curious from you know the node operator perspective when people are coming in to you know run a sequencer um maybe it's too early to touch on that as well but I'm just curious to hear like who might be you know such an operator is it someone like a traditional validator or you know professional um node operator that already exists for other kind of things yeah I guess then there's a couple I I have kind of a follow-up question but I can answer both of these switches which is when we talk about you know uh a node operator are we talking about like validating sequencing nodes are we talking about like a node that someone runs at home so they have access to the data oh I meant so the former okay um yeah I think you know the the way I think about this is similar to other specialization pieces and similar to tendermint we'll go after you know traditional validators for the most part to start with I think this is a big part of the appeal of a shared sequencer network is if you want to go and launch your blockchain like we're gonna do the leg work of making sure that there's good validators that are using it that's part of like launching this product um and that way when you go and you launch your roll up like you don't have to do that because that's a huge that's a huge it's to people coordination problem um and so whether or not that's you know an Institutional node operator or that's an individual with like their special high performance setup um I think at the end of the day it just comes down to doing it and like well so so it it doesn't I don't have any like specific biases one way or the other um you know we are building our sequencing chain is built on top of comet bft so lean on top of the institutional knowledge that and and I say really like ecosystem knowledge of that people already have in terms of running this thanks for that um yeah Josh your turn so your Solutions engineer at Celestia um would love to know a little bit about what you work on day to day and you know how you're helping the entire Celestia ecosystem build things on top of it um so I guess like a lot of my day-to-days uh mostly maintenance of our documentation uh so if you've run a light node uh there's a good chance of like at least edited something that you followed to do that if you're running a roll-up on Roll kit I also work with their documentation as well um I guess on the integration side of things uh I work like on different execution layer Integrations so I worked with the op stack integration with our engineering team kind of like polish the docs up for that and give it to the end developer to go ahead and play around with um but I guess like one of the most fun things that I've had uh like or enjoyed the most recently is trying to abstract away the console or The Terminal for people when running a light node uh so I have like a beta version of this Mac OS app that I made that you can just download on your Mac like you would any other application and start a node up um so yeah I kind of just experiment with things but uh I think that's the beauty of like where we're at in this space uh we're still figuring all these things out there's many EVMS as lzrs was talking about that could be used as execution environments but some of them have different pre-compiles and just like different properties about them that aren't all the same so figuring out uh like which one of those are best in the long run I think is going to be like uh yeah like a really important thing for the space I kind of got a little bit uh out in the end there but uh yeah you're good a little bit all over the place but mostly experimenting and helping people post data um maybe this might be a bit too early of a question so apologies if so you're good but I'm going back to that you know our first kind of question about how easy things will be um you know given you know everything you just said how easy do you think it will be to launch a roll-up you know using Celestia both from the perspective of you know someone just doing it themselves or developing themselves or you know leveraging a Ras solution yeah um so I guess like one of the next ideas I have for this Mac app is to like first put in a transfer function so it can act like a wallet uh I want to also put in like a posting data to the network function but like the bigger addition to that would be something where you can go in and like literally click like start a roll up or initiate a roll up um and maybe leverage something like that mentioned for example to do that uh so I think like in the next year or so like there are going to be things like that that exist maybe even sooner uh conduit is an example that has not built on top of Celestia yet but they do have the ability if you go to their web interface and make an account for free you can start your own roll up on Gurley and I think that's fascinating uh they handle all the infrastructure for you you can like inspect the logs of the actual uh like software that's running and it's I'm very optimistic about uh like this basically like drag and drop sort of like roll-up infrastructure like the same way that if you want to go make a web store right now you can use Shopify and basically have no knowledge of like development or anything and you have something that works and is a fully fledged product um I guess I'll stop after this but I think that's one of the beauties of where we're at is we're going to be able to figure out all the different pieces of the stack really well and like the really optimistic Vision I have is that the same way that like blockchains work in the future is the same way that software works now I know it's called The OSI model I don't know much about it but there's seven different layers in the way like most applications we use uh operate and like I think I want to get to a point where we don't no one has to know what's going on under the hood of that roll up they just know that they have a roll up here's their like you know special key to access it or whatever but I don't know what happens when I send an email like every single layer of my email I couldn't tell you what happened so like I hope that we get to a point where developer tooling and like even just the end user like products are at that place where people don't have to think about it because it's overwhelming to be honest and I think that's probably one of the biggest challenges of the space so I think we're out of time um yeah at a time thank you guys so much for being here um I would love to do it again sometimes have some more questions for you but it was really an engaging conversation so really appreciate your time um yeah and thanks again everyone thank you [Applause] 