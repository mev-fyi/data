um okay so for context Eclipse builds Roll-Ups as a service so uh this topic might be confusing for some folks and in this presentation so I'm Neil I'm the founder and what I'm going to explain is one like different economic or technical considerations for app specific Roll-Ups gonna talk about the roll-up of the service landscape and uh and yeah well let's get right into it all right so there's been a lot of discussions about rafts or Roll-Ups to the service and what I want to do is I want to First Define what is a roll-up as a service a role as a service is something that deploys roll-up Frameworks and that requires understanding what is a world framework a roll-up framework is something that implements execution and settlement related capabilities for a roll up so this is something like op stock or arbitrum orbit you uh deploy one of these Frameworks yourself or you can use a Ras and then you can start having your own chain for your own application so this is a like Market segmentation in a massari think piece which I actually signed off on the times are at the time so this is partly my own fault for not thinking it through fully but what I think is more useful for this kind of segmentation is to think about what parts of this stack are Cooperative with each other which parts are competitive and I think if that's the right way to frame it so the way that they frame it here is they have sdks which I'd probably call Frameworks instead since they're not all sdks you have shared sequencers and you have no code deployment and I'm going to talk about how I'd reframe this a little bit so what what is the sequencer a sequencer I mean we just had a panel on sequencers right now but it's something that just is ordering ultimately without ordering you have to compute the actual estate transition so that's execution so roll up to the service as they exist right now this is maybe a little bit too narrow I called it isolated sequencers as a service usually it's also deploying the execution related capabilities but that's essentially what Roll-Ups the service as they exist right now are uh they might do some additional support Consulting and some stuff which I added as a footnote I'll talk about that a little bit more but uh what I want to describe is basically what what is the business model so right now it looks like some amount of fixed fee that might be a fixed field charge there's some variable components so it's a percentage of the sequencer fee which you have to actually Define that a little bit a little bit more clearly because that could be a percentage of the congestion fee or the execution fee for a roll-up that could be just in premium that you add to every single transaction but uh this is kind of what I want to address and I think this is something that every roll up as a service should have a view on but the first thing is that the roll-up framework to some degree actually competes with a roll-up as a service and that's something that I'm going to cover in the next couple of so I'm not going to talk about it too much right now the other thing that roll-offs the service have to think about is that given that they're deploying isolated sequencers as a service there aren't actually like a lot of network network effects there aren't really economies of scale for every single isolated sequencer for each additional roll-up that you deploy the service doesn't really get better or it doesn't get cheaper unlike I mean a shared sequencer for example for every additional roll up now you have additional composition between those Roll-Ups or for certain types of services like da the more folks that are using a single da layer than more valid there's more fees coming into the into the system because blocks get full maybe it's a fee Market it goes up that incentivizes more validators to run for like Celestia or something so that's very synergistic whereas for a roll-up as a service that kind of network effect doesn't naturally exist alone there might not even be a token uh so that's something to keep in mind so as I also want to so I think this is the right way that I want to frame that discussion of how a roll-up framework could be competitive what they roll up as a service and the way I want to put it is by thinking about the functions of a modular blockchain so we're here at modular Summit everyone should be aware of this stuff but the functions as Celestia puts in their docs we have execution and I threw a bunch of stuff in there I put sequencing the actual execution of the transactions and Computing the state transition function I put proving for ZK Roll-Ups the second part which John Trav would say doesn't even exist is settlement so it's figuring out like what's the canonical chain or what's like the correct state of this roll up and then there's da which hopefully everyone's aware of here but like let's say you're an optimistic roll up you're a verifier you need to know what were those transactions that were run in order to even call for a fall proof or even on any L1 you need data availability uh just to so that all the full nodes can know what transactions were run they can keep keep in sync with the network so another way of thinking about these functions of a blockchain is these these are the possible ways you can try to accrue value or the place where you can try to capture value whether you're a roll-up framework or some other type of part of the blockchain stack so um so yeah now I want to go a little bit more deeply into each of these three areas and think about where could a roll-up framework feasibly capture value so settlement to me is not a viable place to capture value because one we're not even sure that it exists but two settlement doesn't make very much money so for optimism may not and this is actually all about optimistic Roll-Ups partly because that's what we have deployed for Eclipse right now so that's what I think about the most but you could probably make similar Arguments for ZK Roll-Ups settlement costs might be a little bit higher but even if they're 100 times higher that's still only like 500 bucks a day not a great business to be in for every single chain uh whereas Optimist the mainnet it's an optimistic roll up so it's just basically posting State routes and in the happy path that's just five dollars a day so that's basically zero to me or I mean should be to everyone else as well so a competitive settlement layer to ethereum is going to make even less money because they don't have the security budget of ethereum to justify why they would charge more there's less congestion fewer people would use it so so that's not a great place to play is my point and then da this would basically be the case where a roll-up framework deploys their own competitive da layer uh so this would be like if arbitrum had us to your competitor or something or if any trust became the primary business model and my argument here is that that's not a very great place for a roll-up framework to play either partly because Celestia already exists and we're all using it and for da in particular there's very good reasons for all the roll-offs to try to use the same da layer because you're all like posting to the same place the fees go up like I was saying before it's synergistic for everyone to use the same da layer because more people are providing security for that DNA layer then so so yeah so I'm saying the only place that's viable is actually execution and as a result those fees that come in from the sequencer are basically Zero Sum like you can charge more but that just makes you have a less competitive sequencer or less competitive roll-up framework or Ras so between the roll-up framework and the and I call it isas here isolated sequencer as a service maybe I shouldn't done that I shouldn't have done that because it's just like additional jargon but uh but I just put it there for Simplicity and this is a graph on the left side I wanted things to do like the like the business model game theory of an isas compared to a roll-up framework and those numbers might not make sense because chat GPT generated the graph but uh what I want to convey is that I want to start with the isolated sequencer as a service and think about whether it plays nice or doesn't play nice with the roll-up framework that it's deploying and playing nice means that it shares Revenue back to the roll-up framework and not playing nice means that it tries to capture all the value for itself and in the case where it shares value my argument is that they're subject to being undercut anyone can choose to not play an ice and that's going to drive they're going to win in from an economic positioning and economics is probably the biggest reason why people deploy their own option so I don't think that's a sustainable configuration and if the roll up as a service chooses to not play nice then the roll-up framework themselves it needs to monetize somehow so the roll-up framework likely will deploy their own rasps similar to like what optimism has done with conduit in my opinion so that that's kind of how I would think the student and what I feel is the stable configuration is for roll-up Frameworks to have their own roll up as a service because then they can they have all the flexibility in business model they're not forced to share like some fixed amount of sequencer fees they're not getting undercut by someone else they get all the profit for themselves so that's kind of my thinking and then this is just considering a little bit further the case where a roll-up as a service competes with a roll-up framework themselves so they're deployed this is like if someone's deploying a roll-up framework that they don't own versus a roll-up frame framework deploying their own reps and then I'm just comparing these two cases where my argument is that the roll-up framework has more flexibility they likely already have a liquid token they can subsidize fixed costs so this is this is not like a like a fatal thing it's more just something that every roll-up as a service should have an opinion on this and they should like establish their positioning think about what's their business model and how do they expect to sustainably capture value and the reason why it's really important is because developers care because developers don't want to build on a stack that they think won't exist in like one or two years and that's probably going to happen there's no sustainable business model so this is how I'd reframe the massari framing from before and I've basically renamed Roll-Ups as a service to isolated sequencers and what this really shows is that you can only have an isolated sequencer or a shared sequencer but you can't really have both and then similarly I renamed rollup's sdks to roll up Frameworks just because I like that better it's a little bit more General and then if you're in the roll-up frame or category you should probably find yourself also in isolated sequencers or shared sequencers similar to how op stock or optimism has the Super chain that's likely going to manifest as a as a shared sequencer all right so this is like an economic thing and this slide's a little bit dense so I won't like go through all the specific numbers um but what I wanted to look at is let's say you ran an OP stack chain I use op stack because it's just an open source framework so I deployed it and it costs about an eighth to one eighth to deploy the smart contracts I consider like roughly zero just because overall long enough it's a one-time class so if you're running a roll-up for years and years or something it gets amortized so the recurring costs are more interesting to me and for like most a lot of optimistic rollups they're still posting to the DA layer even if no transactions are run that's because the sequencer is allowed to do some additional stuff so that's half an eighth a day of just overhead cost which gets amortized over the number of transactions and that brings it brings it down and then there's some variable costs and that's the biggest component for all uh for all Roll-Ups and Sanjay at electric actually wrote like a great piece on the cost breakdown for a given transaction on a roll up but the da cost is is the biggest one so this I'm not going to make you do the math but it ends up being about 15 cents on a good day this is assuming like 20 five way gas price uh and then assuming 2 000 bucks per eat but yeah that's basically like the cost that a roll-up transaction can never get lower than that if it's deployed to ethereum itself so this is like considering some of the other things that could potentially impact this like after EIP 4844 maybe the cost goes down by like 10 times or something that's all speculation because we'll have to wait until it's may not similarly we don't really know the Celestia made in that cause because once that's up we'll we'll have to see similarly with eigen DNA but my point is that just look at that variable cost and you should think about what applications make sense or don't make sense given that and I think an obvious one for example a game would never make sense like a fully on-chain game couldn't make sense on the ethereum L1 as a roll-up because 15 cents per transaction is likely prohibitive unless somehow the players are making money off of every transaction but if it's fully on chain every transaction is likely not profitable for them so that's that just seems unlikely to mean whereas a DAC could make a lot more sense so having a variety of Da options is really critical to enabling things like consumer apps uh I mean another way of thinking about this is what does make sense that's probably like D5 people don't really care about paying 10 bips or something like that on a big D5 trade so this is probably reasonable given given like the price propensity or the marginal propensity to spend for uh for D5 users on ethereum a lot of them would make sense to be on their own roll up given that they're used to paying such high fees it's a strictly better solution for those D5 Ops and then I just want to think about most applications do they have that transaction volume to justify amortizing or to feasibly amortize the fixed costs associated with running a roll-up and that answer for most apps is probably no nft projects in particular probably doesn't make sense to be on their own chain small D5 apps probably don't have enough volume so this is I'm not saying this to like discourage app specific webs I think people can experiment but we've seen a lot of app specific Roll-Ups on testnet which would never be viable on mainnet so I just want to point that out and then this is like one last consideration that I want to talk about and yeah there are some technical reasons like in order to do shared sequencing it assumes that there's some Builder the builder needs to generically support many uh I'm I'm maybe assuming some knowledge here but we just had the shared sequencer panel but Builders need to be able to execute for base they have to run a flow node for all these different chains so that implies some sort of interface for execution uh for settlements you need to have some some restrictions on how execution can occur so that's those are some reasons but the main reason to constrain a customizable Roll Up is really just to better motivate the use case because if you look at Cosmos SDK for example this might offend some folks in the audience but I never really felt like there was a plethora or diversity of use cases or implementations for Cosmos sekn if you look at Terra for example without the stable coin it was just a regular Cosmos SDK chain that's how a lot of the chains look at this point so I what I think makes a lot more sense is sector-specific architectures such as a D5 specific architecture with extra short block times that might impose an additional constraint such as sequencer must now be centralized in order to support that short block time or maybe for games for example like we were talking about earlier it might need centralized da or a DAC or something like that so this is an example of a sector-specific architecture that we put together for worlds which is some polychain-backed game fully Unchained Avenue world's previously built uh Unreal Engine 5 so he comes from a traditional gaming background and his view is actually like uh contrary to mine but his view is that the purpose of the blockchain for the game is to act as a read-only interface or well for the users it's not read only but as a game developer they just write to that blockchain and they make it a public API for anyone to compose on top of similar to the steam items API or to I mean there's like a bunch of these that people can compose with but the advantage of being on a blockchain is that it's standardized so that's how he thinks about it and as a result he had these additional constraints which is one he doesn't want the users to know that they're using a blockchain and that's particularly important because he can use steam If he if he abstracts the user or if he abstracts the blockchain from from the user and steam is the biggest distribution channel for games so that's one thing like he doesn't want to build financialization himself such as like these played earned games he's not like a player iron guy and then he also wants to put a bunch of data on chain and like we talked about before that can constrain the da options for him so as a result we built this chain for him we deployed a one of the standard Eclipse chains we put an evm on it I don't know if everyone here is familiar with neon they actually recently went mainnet but it's like a Sputnik VM spotting VM is a rust implementation of the evm deployed as a smart contract to the svm so this is how they achieve this parallelized evm higher throughput than any other evm chain the settlement layer they so zkit the the point that's here is basically that a ZK roll-up can it will never be strictly better than an optimistic roll up and the reason for that is that there's that additional cost for generating the ZK proof whereas for an optimistic role if you're just posting State routes it's always cheaper to do that so it kept it as an optimistic roll up and then the da layer will hopefully Celeste is cheap enough for this to be viable and then otherwise we'll switch them to a DAC so that that's what the world's chain looks like right now and they've been they've been using it pretty heavily all right and now I want to talk about what our roll up a builder looks like and this is our self-service uh deployment framework or our website for this this is a soft launch we haven't posted this anywhere so you're getting the first Glimpse at it this is what it looks like it was actually a video before but I removed that because I didn't want to risk the video not playing or something but this is the front page can specify the network name standard configuration options like the VM and things like that specify block times or things that are a little bit more technical in the future you might expect this to look like templates or just specifications based on the type of uh application that you're deploying whether it's defy or something else it just tells you what the roll-up is going to look like and this is what the chain looks like we're giving a one week free trial so you can heavily slam the chain you can Benchmark it you can try it out yourself and then after a week you can actually pay and it's going to be nft gated so if you scan this QR code and I I won't like waste everyone's time and stay here too long so can you can scan this you can get an nft you'll be on the wait list I'll be sure to let everyone off uh who is here at the modular Summit so I'll get the list later and you can try out this roll-up deployment website so I'll pause for a second yeah of course yeah go for it oh yeah and one last thing we're deploying we're doing an accelerator in San Francisco so this was inspired by modular um what was it modular fellows which is actually kind of how Eclipse came about it was Nick who reached out after Tara depacked and we were just talking about how we could make Solana into a roll-up so we wanted to do something kind of similar for Eclipse to motivate the use cases for app specific Roll-Ups we have some ideas on the types of apps that make sense and we'd want to see in our ecosystem there's also a few uh like rfps for things that we need built into the eclipse core product so we'll be uh we'll have those out as well we're gonna get we're putting aside I think like 200 and 300 Grand something like that we'll be funding different projects and we're actually going to host them in our office and SF so it's in San Francisco based a program but for exceptional projects that are outside of SF we can actually fly you in and this is kind of funny but we have rooms in our office so we can house you and you'll be living with our team and you can talk with her with our Engineers every day and yeah that's that's kind of idea so it's smaller than modular phones this is only five it might even be as small as three depending on how much we think we can reasonably support all right and that's it so I think the rest of this is just like um like appendix stuff so yeah [Applause] 