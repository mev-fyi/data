[Music] foreign [Music] foreign [Music] [Applause] [Music] I know foreign [Music] foreign [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] 10 minutes for the start of the show Diaz minotos [Music] please foreign [Music] [Music] Dot [Music] s [Music] [Music] [Music] when the door [Music] when the two feet [Music] [Music] [Music] thank you [Music] um [Music] [Music] foreign [Music] [Music] um what this is saying then is that just as you don't know how you manage to be conscious how you manage to grow and shape this body of yours that doesn't mean to say that you're not doing it equally you don't know How the Universe shines the Stars constellates the constellation and galactifies the galaxies you don't know but that doesn't mean to say that you aren't doing it in just the same way as you're breathing without knowing how you breathe [Music] thank you five minutes for the start Cinco minutos param pesar [Music] foreign [Music] [Music] foreign foreign [Music] thank you [Music] foreign [Music] [Music] thank you foreign thank you thank you foreign foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] [Music] [Music] foreign [Music] all right [Music] [Music] [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Laughter] [Music] absolutely incredible incredible big round of applause foreign for those who don't recognize the style the style of dance this group is from the Pacific region of Colombia a region called Joko it's actually quite an underdeveloped region and these largely high school and some University students are using dance as a way to get away from the conflict the violence the drugs that exists in that area so yeah honestly another round of applause furthermore this isn't this isn't your typical Colombian dance show but I think it's fitting because of that this isn't your typical conference the senior typical Tech conference this is something unique and we're honored to have them here to show us a part of Colombian culture that most people who come to Colombia don't get to see so once again a huge round of applause foreign so my name is Skyler I'm with the devicon team and I'm here to say to you all today and welcome back to Devcon we've wanted to say we wanted to say that for a long time a long time it's been three years three years since last I've gone three years since we last met in Osaka Japan in 2019 three years of planning this Devcon postponing Fleming again postponing again and I must say it feels great to be here with you all today we're here to celebrate a little bit of what we've done over the last three years and what we still have yet to do and to make progress towards a lot of the outstanding items we still need to do into the future and we're excited for this reunion to take place here in Latin America and what's even cooler yeah Round of Applause for that no what's even cooler though is that there's representation from almost every single Latin American country here right now let's give it up for those from Latin America kinika as they Latin America [Applause] yeah super for three years we've continuously communicated to all of them the same thing our goal was to bring Devcon not just to Colombia not just to Bogota but to the Latin American region as a whole and we emphasize this with our road to Dev gun where just in the past year we've seen 10 plus events organized around latam everything from ethereum Rio Ethan Buenos Aires to Mexico City to Lima to Santiago to ethereum Sao Paulo to Quito to Bogota where we are now and soon to be Medellin in Panama uh coming up in the next couple weeks and this is just talking about major events this isn't talking about the meetups the many meetups that have happened along the way an important to note is that all of these events are Community organized events Devcon is the only one organized by the ethereum foundation the rest done by Volunteers in their free time because they care about ethereum they believe and what it's capable of and they want to improve this world not many communities have this much passion and soul but even still some of you've been asking but why Latin America I've seen some doubts and criticisms some of you on Twitter probably as well it's dangerous they say it's underdeveloped they say why bring our precious Community to a risky developing region when we could stay close to home in our well-developed comfortable countries and quite honestly I think that's the wrong idea ethereum is a coordination mechanism for all of us it allows things like greater Financial inclusion power over your digital assets stop being unjust censorship Sovereign control of your identity and many more and in my opinion ethereum can be most impactful today in developing regions around the world places where serious censorship really does exist where many don't have access to the basic Financial systems where your identity is not guaranteed nor owned by the individual where coordination failures are rampant in the form of corruption or even in the lack of public goods funding and as much as it might be more comfortable to stay in developed regions of the world that's not what we're here for we're here to use ethereum to make the world a better place and the world exists outside the comfortable bubbles many of us live in in fact most of the world lives in these developing regions and this is why we are excited to be here in Latin with you all to one expose the region to ethereum and the incredible community that composes it and two to remind the ethereum community about the types of problems we really are trying to solve with ethereum which is not what's the hottest nft nor where the best defy yield is or other similar distractions but rather how can we provide greater Financial inclusion a more accessible network with lower fees higher censorship resistance identity systems that are more accessible and Sovereign payment systems for the masses true digital ownership and much much more these are the problems that we need to focus on and we need to continue focusing on improving the world and continuing to improve ethereum to be able to do so and on that note I'd like to introduce someone who's actively been helping with just that someone who helped heard one of the largest coordination challenges in Tech History also known as the merch yes that someone is Tim Baker coordinator for all core devs so let's give Tim a big warm welcome thank you amazing talk what amazing job okay oh sweet this is working okay good morning everyone um do I have some slides okay sweet um so good morning I'm Tim Bako and I work with the protocol support team of the ethereum foundation I'm here today to talk about the people and the teams who helped transition in ethereum from proof of work to prove a stake um but before I get started I just want to take a minute to explain what protocol sport is because it's like the first time we use this and um when I told my family I was joining the ef's protocol support team they said it kind of sounded like ethereum's call center or like people would call it like their transaction is stuck or like they can't run their node um and that's that's actually not what we do so the main thing our team does is we help coordinate and facilitate Network upgrades to ethereum um but beyond that we also spend a lot of time trying to figure out how we can better align the community across the people working on layer one all of the infrastructure and teams around them and the people building applications on ethereum another theme to spend a lot of time on is figuring out how can we onboard and retain people to contribute to ethereum um there's a few things we do on that front most recently we announced the ethereum protocol Fellowship which is something where folks who want to come and work on the ethereum protocol can do so for a couple months and uh hopefully then find a job full time working in the space another thing we've done is we've helped launch protocol Guild which is an on-chain organization that helps Dallas individuals and anyone who wants to contribute to fund protocol contributors directly um and lastly we spent a lot of time doing like weird little mementos and things for the community when there's big Milestones that happen um whether these are things like the 1559 nfts uh the merge manual that just went out um we try and think about like how can we uh like memorialize all these big things both for the community and for all the people who worked on it um yeah so that's what we do at products support uh but that's not the main thing I want to talk about um the main topic of today is basically the what I've called like the heroes of the merge all the people all of the teams who helped get ethereum to proof of stake and obviously there's way too many people for me to go over in just a short talk um but at least there's a couple core buckets that are worth highlighting the first is everyone involved on the research side it took many many many years of research and bed ends and new specs to come up with not only a specification for the entire Beacon chain and proof of stage but as well as the transition um the EF research team is obviously a big part of that but they weren't alone um there were other teams such as txrx quilt who played a major role in this aside from from these the next kind of logical one is all of the consensus layer teams they're the people who write this software that powers the beacon chain and literally run proofs runs proof of stake um so these are teams like White House Nimbus prism taku and lodestar and obviously they have all their counterparts on the execution layer so all of the people who wrote the software to run ethereum on proof of work and that still manages basically the evm transaction ethereum State and all of that these are teams like Basu like Geth uh like nethermine and Aragon and last but not least um the merge was a massive massive testing effort uh there's not like a single team or even a single project that we can kind of list encapsulate all of that so I just want to give a shout out to everyone who's worked uh on all of the testing efforts whether this is Hive whether this is all the infrastructure to set up Shadow forks and test line combinations before going live um whether these are the reference tests that client teams kind of implement against folks who works on this specification uh on a consensus layer side who worked on eips and everyone who worked on the security side as well including the bug Ramsey program um so I'd ask everyone to please give a massive Round of Applause that all of these teams all these individuals who moved it there into proof of stake [Applause] nice thanks um and so this is really nice and you know having a shout out on stage at Devcon is obviously super cool but as we were getting closer to the merge this summer I was trying to think like can we do something that'll stay around with all these people um after Defcon is over you know to kind of highlight this contribution um and it was a bit weird to find the right thing so I spent a bunch of time talking with different client team leads people in the EF people in the community asking them like you know what could we do for like all the folks who worked on this um and I had a neat conversation with Ben from the techu team and so he was telling me like all of the people on his team often end up not being able to go to East conferences because they're kind of so into weeds working under stuff that they literally forget about tickets going live they can't find one and then they show up and they can't get in the conference for the protocol they literally rebuild and it's not like they don't want to pay for it or anything it's just like they completely miss it and then they're like stuck at the door for the ethereum conference um so it seemed like a solvable problem like something we could we could do to make their lives easier um and so I spent some time talking to some folks figuring out the best approach for this um and I'm really I'm really happy with what you came up with so I'm excited to announce what we call the merger pass so this is basically a soul-bound token that we're going to be giving to everyone who's contributed to the merge that'll guarantee them access to all of the top ethereum conferences for the next few years um yeah thanks thing and one thing that's neat about this you know because this will all be on chain it'll be public so anyone in the community can obviously extend it and build on it um but I'm really excited today to say you know the first Partners we have for this are Etc Global Devcon At Con I've all agreed to honor this for the next several years uh so can I please get a round of applause for all of these Partners thank you [Applause] there's one last thing to kind of recognize everyone's work on the merge um it's not something I can quite do myself so I'd like to welcome Jonathan Mann on stage to help me with this oh we lost my slides right we still need the slides sorry so you see what Danny's talking about oh can we have the slides on this side please can we get Tim's slides back up Tim Baco everybody how great is Tim Bako thanks what a guy what okay all right thanks Tim uh I'm Jonathan Mann I have been writing a song every single day for the last five thousand and 32 days thank you thank you you don't have to clap you you don't have to clap it's fine it's fine it's okay um it's been four years since I was on stage at Prague I'm super honored to be back here with all of you um and I'm especially honored to have an opportunity to pay tribute to these extraordinary this extraordinary group of people who did this uh unfathomable feat of making the merge not only happen but happen without a hitch it was crazy how that happened you guys so in order to really make this tribute pop for these folks who poured their Blood Sweat and Tears into making the merge happen I need all of your help these lyrics you may recognize these if you watch the merge call I sang this song on the merge call as it was happening um we're gonna do a rendition of it today so I'm gonna sing it once we're going to practice it together and then I'm going to start the song and we'll go and we'll see how it turns out so the chorus goes like this um how's it going okay and a bear has been turned on now she's [Music] all gone that's why she's singing the murder song can you try that with me maybe I want to hear you I'm also filming you so you'll be in song A Day song You're gonna be part of songa Day history but only if you sing loudly all right you ready the lyrics are right there one two three four panda bear has been turned on [Music] me beautiful you guys sound great all right very good [Music] my specialty is folk songs about ethereum [Music] Nimbus kept the light client dream alive prism was the first team to write code for the beacon chain security team quadrupled the bug Bounty size taku built the tool to pick good Fork times Lighthouse optimistic sank bessemerge the bonsai trees death built the Catalyst Aragon pushed the boundaries and still they stayed on track in your mind calculated the difficulty bomb correctly lodestar was a dapped lion DJ and dank grad was focused on scaling Perry Shadow Fort so unfailing and Tim Baker was coordinating oh [Music] the slide get the slide up band of bear has been turned on now she's singing the merch song carbon footprint is all gone that's why that's why she's singing [Music] very good yeah yeah that's right well Micah made sure to keep us all chaotic good Justin lowered the minimum stake from 1500 to 32. [Music] that's a big one access rewrote the beacon chain deposit contract see monkey tested every client pair through and through Mario Vega wrote the test shall we made the panda meme light client and Alex both kept an eye on Mev all the while Marius pushed us to work harder merge faster without bugs Mario Havel made bordell what the Proto Lambda did rayonism Trent nft merge exhibition make eye out with the API engine Danny got us to ship with his vision and vitalik I guess that guy did some stuff I suppose last for us here we go and a bear has been turned up now she's singing the first song [Music] [Applause] [Music] again that's why she's singing now we're going to bring it way down and I want to hear you sing merge is done and we now we all need time to rest yes that's all right get out your phones I want to see that's it panda bear has been turned on now she's singing the bird song carbon footprint is all gone that's why she's singing the merge song [Music] thank you thank you all so much thank you guys for the merge [Applause] impressive impressive impressive let's give another round of applause for these amazing amazing mergers and dancers and dancers maybe you guys can give some dance lessons to the crew we had up here earlier they could they maybe would appreciate it um cool so we can't talk about the merge without specifically hearing from someone who was integral in coordinating and collaborating with this worldwide effort people said a lot of things about the merge and ethereum switch to proof of stake they said it would never happen they said even if it did happen it would fail and during this entire time this person kept working kept collaborating and kept pushing forward to improve ethereum um I would like everyone to give a big welcome to Danny Ryan from the ethereum research team nice clickers up there hello okay thank you Tim thank you Jonathan that was awesome uh you know nice nice little Victory lap the fun thing about this is that uh we have plenty of other work to do and we can uh right when we're done celebrating we can continue forward get back to work sorry sorry uh my name is Danny thanks for having me um work at the uh I work on the research team and name I do a lot of things that aren't just that uh but you know here we go so resilience I want to talk about what we might call the metagame of ethereum L1 we're trying to ship a lot of stuff there's a lot of things underneath the hood that maybe aren't quite clear that that are being worked on and thought about kind of at all times I did ask the internet what should I talk about Devcon got some answers um L2 very important it's gonna be a lot of stuff to talk about this week dig in deep um Hudson if you want to talk this evening I got a lot we can we can exchange some fun stories Kevin um I'm glad it's worked the pseudonym has fooled everyone um and and Johnny Ray I won't do a handstand up here but I love handstands and if y'all want to do handstands out there we can we can join but that's not what I'll talk about today um so again being listening to death but the merch happened finally it did indeed took a village take a village a lot of those people are up here a lot of people are out in the stage and they're also distributed all across the world thanks guys quick quick just like perspective on on what happened um it's been a bit of a non-event which is good it's good that's how it's designed we can kind of see um in that little Spike towards there's two little spikes at the end it looks like participation kind of fell off a cliff real quick right around the merge picked up went back down and it's been kind of leveling off and figuring it out um I think it's worth zooming out because like this this starts at 94 not at zero this is actually what participation looks like there's a gap because our infra wasn't collecting at that point but it's it's pretty damn good when the system was designed years ago we we didn't know what participation would look like we'd think okay so normally it's going to be above two-thirds normally people are the incentives are such that people are gonna turn their machines on and make sure that we're finalizing uh but we thought 70 80 85 would be like kind of normal but really like people are turns out are extremely obsessive about every last attestation I got some laughs up here because uh if you if you're on a client Discord it's like somebody misses one out of station in a month they're like what's wrong with my machine um but anyway shit's pretty good like and and you know there's there's a couple hiccups here and there with a couple clients and and people are uh resolving them moving forward and we have a nice little nice little stable graph blocks turns out those are good too they're coming out in a healthy clip blue there's actually three colors on this graph blue is uh is successful blocks each day and uh almost all of them are let's see but we do we do miss a few slots from people being offline I was actually talking to Terence and it turns out that we miss fewer slots now than before the merge so even though there's more complexity in the system um terence's hypothesis is that uh there's a bit more money on the line you really want those blocks now with those fees uh so the the number of blocks is even better than it was before and then what about reorgs there's another color on this graph presumably it's orange but I don't you know there weren't many before the merge and there's not many after uh in fact Michael Sproul dumped from his node he's seen 26 reorgs although some of those might be double counted and 85 orphaned blocks all of these generally show very late properties so if something's reorged generally we're seeing you know things Landing towards like the last two-thirds of a slot or even like right on that boundary so the network gets a little bit confused and then resolves it and I should say all these reorges are depth one um also from Terence check out his talk in two days um 50 of the orphans so these are the blocks that tried to make it on chain and didn't come from mebus relays there's additional latency and complexity that happens there people are working through it but you know that's that's uh an interesting component here also it depends on your perspective you know some nodes might see like a little reorg and the other node always saw it as solve the correct head so again these numbers I mean that's like one a day so things are pretty pretty smooth I think the the like Uncle rate in proof of work obviously because there's a lot of redundant work happening because of the way competitions uh and proof of work happen but there's like a four percent or eight percent um uncle rate and you know we're at near zero now so things are things are generally working this is what it looks like it's plain and simply healthy again finality step wise very nice almost the entirety of the beacon chain since Genesis has looked exactly like that it's set for this one time I was out to dinner on a Friday and I got a text and it's not a text you want to get on a Friday night there's something up with mainnet from Paul uh there was a little there was yeah the network stayed live we lost some block proposals and we didn't finalize perfectly into epochs it looks like we finalized a few in three epochs and it's been resolved in very clean since I know Victory lap on the merge but like Victory lap on the beacon chain it's been an incredible two years uh and ultrasound on scar ultrasound money ultrasound uh Justin Drake I'm scar it's a nod to onskar convincing us to merge like five or seven days earlier uh to to save on issuance um but Justin's given a great talk tomorrow check it out and before I move on uh there is a merge data challenge going on all of those are like very simple metrics there might be some more interesting stuff going on underneath the hood check it out and submissions are due by the end of the month so you still got plenty of time okay so we shipped but shipping is slow and sometimes feels painful uh certainly from the inside we feel the pain but I know the feel the pain is felt from the outside as well the interest in fact was one of the suggestions for my talk how we quote ship faster I don't think I'm going to talk about how we ship faster but I want to talk about why it's slow and it feels like this both from the internal and the external hopefully this is not a very busy road so much of much of this is fundamental much of like the complexity of shipping here is fundamental it is fundamentally new research fundamentally new mechanisms fundamentally new networking and new crop cryptography ethereum has the luxury of uh having tons of backwards compatibility uh considerations at every moment of every day and quite frankly distributed systems are complicated um it's much easier to get a computer to do something than to get a bunch of computers that you don't control to do something together and agree always and quite frankly much has improved a lot of the conversation in the past couple days with a lot of the L1 devs and a lot of people involved in shipping and improving ethereum um has been like wow this this thing's working well like this is a moderately well-oiled machine like we're moving faster we're getting more done than we used to and some of that's because more core questions of the research have been answered so it is a lot of engineering a lot of that is is alignment and Ethos a lot of that is sophistication and specialization of client devs we have a lot more people on testing we have devops wizards driving our test Nets and helping us at every step of the day dedicated security analysts all sorts of academic collaborations really fun development Retreats and the process is just it's refined it's really moving well so things are slow things aren't going to be fast but they're moving pretty well right now but there are actually a number of considerations that are at odds with speed things that we're thinking about things that we're optimizing at all times that if you looked at it from a naive perspective you'd be like you're you're shooting yourself in the foot you're making this hard and there's but there's good reason that we make things hard and that's the the metagame of ethereum resilience right and I might touch on some of this in in her talk but we're you know we're optimizing for an infinite game we're not optimizing for a pump and dump we're not optimizing for an acquisition we're not optimizing for uh you know people being rich tomorrow you know we're optimizing for ethereum existing and running for 50 plus 100 plus years and being a fundamentally uh foundational protocol of the internet and for Humanity and so we're trying to we're trying to continue to play the game I think we're trying to have redundancy built into the game we're trying to be able to recover in the event that the game fails when you're thinking about 50 plus years like shit's gonna happen and we need to be able to pick up the pieces and keep moving and in fact we need to be able to harden under after this adversity you know not only do you can you pick the pieces back up but can you come back stronger and tuning for ossification and avoidance of capture you know the the more valuable this thing is the more it's valuable for people to kind of get their hands in get their interests in and this thing needs to be robust against anything that might happen in the next 50 years 100 years and when we're thinking when we're thinking about ethereum resilience there's a number of like ways that we might think about it the the most obvious is probably the first the protocol like we're trying to make sure this is a resilient protocol that this thing works next is is kind of the instantiation of the protocol that's the network that's like does this not only fundamentally this abstract protocol work but does it work live and is it resilient in its instantiation of tons of computers distributed across the world doing their thing and then there's the kind of the social layer on top is the social layer resilient is the social error can people come and go Can it can we avoid capture can we deal with with issues in that layer and get I can get into each one of those oh and shortcuts are obviously available we could have a single client we could have a single dictator we could have truncated r d and just ship it we could have easy centralizing solutions we could have a willingness for downtime and we could have processes that are right for capture that's not what we're doing and that's why it's taking a long time and that's why that's how it is so protocol resilience there's a lot of things that go into this this is probably again one of the more obvious things tons of research and design tons of security and testing nothing goes out lightly the the amount of time and effort put on Simplicity in ensuring that the system is generally extensible over time is is profound if you there's a lot of hard jobs in ethereum L1 but if you've done if you've worked on research for any amount of time in this space you've thrown out things that you've worked on for easily a year things you've spent countless amounts of time and you just been like you know what it's not right it's not simple enough it's not right for ethereum and and that that is a regular regular component of this process being able to operate under adverse conditions and be able to recover under these failure modes I think one thing that's a very Guiding Light and I highly recommend vitalik's piece on functional escape velocity but we're we're looking for you know you can throw everything out of protocol you can you can try to build everything into the protocol you can just be like okay this is good let's throw it in okay this is good let's throw it in but instead we're looking for that minimum functional escape velocity and that's an art you know you don't get that easily you get that through years and years of thought and iteration and many protocols only try to avoid failure whereas ethereum is borderline obsessive with the fact that it likely like something can fail and like all of these protocols essentially in a crypto economic protocol it's you get X properties unless this thing happens usually this thing happening being some size attacker someone willing to throw a bunch of money or burn a bunch of money and you know protocols work unless you hit those thresholds but in 50 plus year time Horizon we're going to hit like not necessarily you I can't predict the future but like happens and we need to we're borderline obsessive with not only trying to avoid these failures but to be able to recover from them which takes time the next is Network resilience and there's really a heterogeneous Network and that provides resilience in so many ways so we have multi-client multi-layered Justin actually was pointing out there's another layer we think about the consensus layer the execution layer there's actually this other layer which is kind of the cryptographic layer we rely on a multitude of of black boxed crypto tools which allow for expertise and and separation of layers here we have hobbyist stakers we have home nodes and Regional diversity every single one of these things makes it harder like every arguably multi-layer doesn't but the fact that we have like nine clients working on this thing does not make shipping easier but it makes the network more resilient under failure modes it makes users more resilient in that they can pick different things in the case that something fails hobbyist stakers allow for Like A diversity or participation they allow for fail like backups in the event of failure modes and I'll talk about that home modes Regional diversity similar things I think one thing that we don't think about when we think about like this heterogeneous Network and how it helps us we really obsess over like we want perfect distributions we want like 20 of each client thus if one goes down then like we're 100 good that's the ideal and that actually optimizes for kind of the continuity of the network like the the network can be continuously resilient in the event that you get these perfect spreads so for example you know if we have five clients uh they're perfectly distributed across the network if one goes down you might get a few uh fewer block proposals until it comes up or people switch their nodes but you get finality you get like a really nice quality of service it's great we should move towards that direction there's tons of reasons as a whole and as individuals you know we should try to optimize for this but they all it also helps us even in imperfect distributions and these are more in the tailor scenarios so if that big if if client diversity looks like that on the network that large block goes offline and it's chaos right like we're not finalizing we're getting maybe 50 of the blocks that we're expecting um and and shit's going down but the network continues blocks are built transactions are processed and users have options so in that event users over the course of a day can dynamically you know either that big block gets fixed the network stays online or that big block has issues and users have options to switch through and they can recover and make sure the network continues in the event that it's just one block you don't have all of that that you have zero ability to recover until they turn that thing back on so this goes this goes for some of the other things here I think people sometimes say why are we optimizing for home nodes why are we optimizing for homesteakers you know like if you look at staking distribution you know homesteakers are a third or less like it's clearly not working but it's it does not it's not giving us that kind of perfect distribution that might help in in continuity in the event of intermittent failures but it does help with recovery it's critical for Recovery it's critical for these failure modes so in the event that some of you have mega pool and the mega cartel of pools they finalize something invalid they try to take the chain over then you have a resilient the ability to continue like that that big block finalizes something crazy and that small chunk of of hobbies validators become the backbone of ethereum and continue forward and they don't care ethereum doesn't care you know and the ability like if that was just three large pools and they they're a cartel like it's so much more difficult to recover so we do think things are ourselves for continuity and Recovery we also have it's kind of like these soft things that we're optimizing all the time in the social air you know multi-client is very important for um for Network resilience but it's also very important for Like A diversity or perspective it's very important for ensuring that every stone is unturned it's important for kind of the security of this thing and how everything kind of communicates and comes together similarly a diverse staking set brings more people to the table ensures there's more diverse perspective on the needs of stakers and the desires of the network optimizing for the global very similar we have this incredibly like if you talk to academics almost comically open research process which brings in a multitude of perspectives and helps Harden the social air and ensure that the the social layer is diverse similarly open processes Open Door all around and Albert neon said uh the ethereum is an intellectual gravity well and he said this five years ago and it was it felt kind of true but it's just like increasingly true like increasingly every time I talk to new academics or new people joining it's just like the obsession and the fervor to be involved in this this intellectual pursuit of uh of ethereum the the ultimate nerd snipe just increases more and more similarly um Ben calls ethereum a bizarre in the sense that you know it's not top down controlled it's not top down organized it's not it's not like a well-structured thing and there's chaos but time and time again because of this open nature of this open market of ideas and intellect and engagement and software development like people just show up they join they join the party at the right time they help move things forward and and and get things done and this this is not that this this open wild structure is like not it's not how you optimize things and move as quickly as possible but is a way to be resilient ethereum's L1 structures tend toward a multitude and thus I would say ethereum's L1 structures can sort of ossification like the more people that are at the table the harder the conversation becomes to change things and I won't get into it too deep but I personally believe ethereum ossification in the not so distant future is incredibly important incredibly valuable um like I said earlier the ability to modify change or manipulate this this uh machine is very valuable to us because quite frankly ethereum is not done you know ethereum needs to reach that functional escape velocity but it will be increasingly valuable to others to also potentially attempt to manipulate for their own their own value so a lot of what what's involved in kind of bringing more people to table is to make sure we have a more resilient protocol while we still can manipulate it but to ultimately tie our feet down with bags and not be able to move where's the EF fit in I think I will probably talk about this a bit I think Josh is going to have some interesting perspectives on this as well but in general you know we're we're here to help we're here to coordinate we're here to help connect the dots some of some very interesting work and valuable work does come out of the ethereum foundation but tons and tons more you know this is increasingly just a small piece of the puzzle this is uh the last the last suggestion reporting Back From The Trenches the art of project managing the merge um one Evan I'm not a project manager but you know um the uh I think the the biggest thing is if if someone were to attempt to do such a process in the future is uh know enough to connect the dots contribute enough to uh gain the respect needed of the group and and ultimately get out of the way you know there's there are incredible experts at every layer of everything in the stack and in creating the room for um for people to do the hard work is is one of the most important things here I do want to flip this l1's thinking about resilience all the time like every piece of the puzzle is all about resilience and all about ethereum lasting and being a utility for the future but I do turn this on the application layer I think it's definitely time to think long term um you know I see a lot of unnecessary debt taken out in the application layer you know whether that be complexity governance where things maybe shouldn't be governed upgradeability bad token distributions these things they're liabilities in the sense that they can help you small bits of this it can be very important to Applications but I feel like uh naively if we take a look at applications they they take out quite a bit of this debt for very unclear return I would suggest the application layer more Unix philosophy more of doing small things more of little widgets on chain rather than uh Behemoth type contracts that try to do it all when in doubt minimize or eliminate governance and when you do need governance make it small it governs this one component that interacts with all of these ungovernable components this is very very important like governance is a liability of being able to manipulate and change things like with L1 is going to bite you in the ass if it's not done with Incredible care I recommend to tend towards ossification similarly if you need upgrade abilities today have a path in which you don't need it in the future similarly I think there must be more interesting value generation models than the ones currently being explored today I think there are clearly some very interesting things that are being done on ethereum with tokens governance Etc but I promise you on this new landscape of coordinated games on top of ethereum there are going to be interesting and less um potentially risky value generation models check it out explore the non-financial especially with l2s opening up more scale for ethereum there's much more room in this stack to be doing things Beyond just that defy Beyond just that speculative cool little picture I I do think especially in the identity space especially in the Privacy space there is a lot of incredible work to be done in the next few years oh and if you're writing l2s it's time for fraud proofs it's time for decentralized sequencers I think that goes without being said but if l2s are going to inherit the not only the security but the legitimacy of ethereum we can't go without this stuff and I think the former is is obvious the latter is is not so obvious obviously you can construct secure l2s without a decentralized sequencer but when you start thinking about regulatory risk and other types of things at play here these are a must um so I suggest playing the metagame resilience across the stack not at all not just at all one unify this whole thing um everything built on ethereum does isn't going to necessarily last for 50 plus years but the the applications that matter will and uh quick Happy Birthday to someone in the audience that I could not do any of this without thank you [Music] foreign let's give another huge round of applause to Danny to Danny Danny Ryan cool so all of you on the fifth floor right now needed to walk up or go up the elevator pass through five other floors today and hopefully you saw quite a bit of the work that we have done over the past years putting on and preparing for devcom uh and I hope you appreciate it my first Defcon was actually Defcon 3 in 2017. uh I was actually just a volunteer showed up as a photographer last minute tried to help out and for those of you there maybe remember it was a fun time had a blast the actual conference the organization horrible and uh and that honestly at that time it kind of reflected a lot of what was going on within the EF itself the EF itself was a little bit chaotic and there was a lot to be improved shortly thereafter we got a new executive director her name was Aya miyagochi and things immediately started to turn around and these things don't change fast they're not easy but uh but um but they did start to improve uh and so I would like to welcome I amiguchi who's going to start talking about uh the the values and the importance in the direction of the ethereum foundation to the stage let's give her a big warm welcome Isaiah [Music] hello everyone welcome to Devcon again and welcome back to Devcon from many people my name is I am yaguchi from the ethereum foundation and I'm here to talk about executing with subtraction in the infinite Garden oh we're gonna do this so this.com feels very special for everyone first it's been a long time it's been three years since the last step gone and the second the marriage just happened like you saw and merge is very special not only because of the technical advancement made to the protocol but also because of how this giant project was executed by a decentralized ecosystem I share the vision of infinite Garden last year the vision of ethereum to stay full of infinite players growing as organically as possible to maintain the soul of ethereum the merge was a great example those who walked on the merch are definitely infinite players they didn't do it for themselves to win the world will allow everyone to join at different layers more easily and the work is a great example to show how our game was played to continue the play not for someone to win so what has been the law of the ethereum foundation in this Garden how have we been making decisions and taking actions to support people to play Infinite games instead of fighting to answer this question for you or to for myself I go back to this word subtraction this is one of the three guiding principles of the ethereum foundation we share this in the EF report earlier this year long-term thinking stewardship of values and subtraction and if you any of you remember I spoke about subtraction at devcom plug four years ago time has passed and I've been frequently asked about subtraction recently and I'm never fond of talking about ideas before acting on it um where I grew up in Japan we have this word called which literally means shut up and do the work so but today I feel ready to talk about it a little bit more because we have acted on it we have acted on it since then since the time that I spoke about it in plug it has become our key principle any in fact it is also our underlying strategy for us to make decisions and take actions and the more I think about how subtraction is important to the ethereum foundation the more I feel that subtraction is best for ethereum and that this can be also applied by others so today I'm here to reintroduce subtraction with the story of how the idea was born and sharing some examples with the hope for this to be your inspiration so how it began when I joined ASM Foundation to be honest EF was not really in an organization or okay Hudson is laughing um it was more like a collection of devs and researchers doing different projects there was not even a finance team uh nor our grand team and there was no system to collaborate within anything Foundation very well and so however the decentralized ecosystem was pretty already pretty big already so not jury waves of pleasure were Islam not EF when my participation to the ethereum foundation as the executive director was announced during my early time people gave me different ideas and requests one idea that was suggested to hire the best all the best talents in the world to the AF another idea is to hire CTO of Ethan or a chief strategy officer of with him at the Italian Foundation basically ideas for me to build the EF Empire and that wasn't technically impossible because the price of ether was already decent and it is important to mention these ideas were not seen as crazy ideas if you are a tech startup or an owner boxing it is pretty normal to do this why is it normal tendency it is because our glands are trained to add let me give you a test when you're asked to fix this bubbly unstable Lego bridge and I say I give you five seconds what would you do okay did you think of this so there was an actual study about this Lego Blaze and I also tested with some people this week most people think about adding two blocks in the bottom left especially when you see more Lego blocks in front of you so when you are giving more resources it is more natural to add and spend more without thinking about the option to subtract another example our Defcon team has dip process where Community people can suggest improvements for depcon and the team has received about 50 requests so far among all of those requests no one has suggested to subtract something from devcom so going back to my everydays which with this natural human tendency I can argue that the impact almost no one gave me the other options than adding more it looks like there was only one path to take luckily my blank was less ingenious to add because of my background and I was able to see two paths to take one is to road to add to build the EF Empire the other is to subtract standing in front of the fork I intuitively felt following the past two hours long and decided to go to the other way from there subtraction became My Philosophy to build our team and like I said it has also become our underlying strategy to achieve our mission the mission to support the engineering ecosystem the infinite Garden to support the Islamic entire ethereum ecosystem as a whole not just specific projects with subtraction EF shifted its all to support the entire ecosystem which led to the ecosystem Support Program ESP and the other Grant work we prioritize boosting external groups as much as we can it's also led to third-party allocations to empower other organizations to give grants like us Bitcoin CLR fund political political monologue for example and it is always important to go back to why why do we subtract the ultimate reason is like I said because subtraction is best for ethereum subtraction is best for ethereum and in fact I believe it is critical for ethereum's decentralization best part of ethereum is that it is decentralized and because of this the ecosystem has unique challenges and I see subtraction as a strategy to achieve two main goals the goals that are important to tackle the unique challenges of this decentralized ecosystem and here are two goals the first goal is to subtract to seek the right balance building the name EF Empire and solving all the problems ourselves might have made ourselves look good for the short run but that would have discouraged others to feel that this ecosystem is for everyone to build and the EF could also have become one single point of failure if we kept adding the ecosystem rely on the forever and it is not just about also EF gaps and imbalances happen naturally in the decentralized ecosystem and especially when everyone is trying to add second goal is to subtract to focus on what is most important ethereum has become the largest community in the blockchain industry and it is becoming one of the largest open source communities there are just too many things and improvements to make we need to focus on things that only EF can do and the things that others wouldn't do and that are also important and I like keep asking whys and why do we think subtraction is best for ethereum at the end of the day we believe in ethereum We Believe ethereum can change the world we believe ethereum's potential is too great to be predicted we believe ethereum's potential is too great for any single organization to own [Applause] so there are many examples but I'd like to share a few of how EF executed with subtraction today and keep in mind the whys that I just explained balance and focus um does anyone remember ethernet.org website in 2018 or are you not that um I got this thanks to internet archive so the website used to be about the project within the year for example it suggested you to download a wallet that a team in there was building and all the guidance and instructions were made by the EF people in the bottom it also showed how EF is the main team so restructuring and redesigning this website ethernet.org started in 2018 it took a while to prepare but the idea is to separate ethereum.org as public good of e3m and it is about ethernet in the community if and not about the ethernet Foundation now EF still support the server and the team who are building it but the content and process is all open source and made by Community people's proposals they are roughly about 950 active contributors for the content I hope they are here today thank you [Applause] and another example of balance is regional diversity ethereum is still Western oriented unfortunately and the more important information is out there in English English and more communities have developed in English-speaking countries despite the fact that there are a lot of opportunities in places like Latin America or Asia for example this is why we chose Bogota and Latin America for Devcon and have been supporting teams and individuals in the in the region for them to build their own communities through education and events and other activities the next billion initiative is also for the balance seeking two-thirds of the baby is born today are from developing or emerging economies there are the next billion users or the Builders of ethereum we must include them and we have to start now we also invited 50 Scholars to depcon to have potential to be the next change makers they're also here today laughs and going back to ethereum.org the website now has 48 languages that are supported by 5 000 volunteer community members all over the world they are translating the content every day thank you to those people [Applause] so when we are supporting the project run by a team we're not really looking at the gloss of that single team we are looking at what the glows can do to the entire ecosystem in the long run we want to increasing or encourage open participation and open competition because that would benefit the entire ecosystem for the long run for example the client Community has not been Diversified enough and even though gas is from the yeah the team gets themselves see that is a problem client incentive program was announced at the end of last year as an effort to incentivize and diversify clients each client received 4608 ether to operate on the mainnet there are many things that have been born from the year um the team in ens was the project Nick Johnson studied at the ethereum foundation we suggested that they graduate from the Year back in 2018 and with the help with Virgil who is not here today but they understood the importance of this project becoming independent for the long long run we supported the initial costs and some legal work and now I don't even have to say they're one of the most successful applications as you all know heart yes yes and you may know heart heart from nomik they're from Argentina was one of the major things that you have supported for the focus on the developer experience which back then was something that only F could do and as you know it has become also very successful project from there nomik decided to become a foundation to be able to support things in the devil devx domain and Derek spark who is uh the team that we also support is been doing the research and uh that sorry research of general knowledge Booth um and also like support the applications of ZK to also made the decision to become a foundation so these are a great example of how our subtraction is creating more space for others to participate and then they also subtract for others so EF may be in a unique position in a system and an EF could not have been able to start with subtraction if there were there's nothing to subtract from but I do not think subtraction only matters for EF or only for non-profit organizations since I believe infinite Garden is for Everyone by everyone there is always a chance for everyone to use this philosophy for your guidance I will share the myth and about subtraction and key things to remember first subtraction requires high standard and year of execution so the biggest myth about subtraction is that you should do less you know it aims to subtract power but not the amount of work or amount of effort in fact it certainly requires more work to do when I subtract my power I can't just make people do do things and I I have to explain and convince others to feel that they should act in one way that requires education communication and more research if you have been any part of the merge you understand better than others how it requires more work to do a project doing in a decentralized way subtracting your power not being a boss then doing it in in in a centralized way using centroids power I also mentioned how human Blazer used to adding that means also the subtraction is harder to be recognized there has been study to prove people tend to fail to recognize when something is subtracted compared to when something is added so if the purpose of your work is to be recognized choosing subtraction makes it harder to achieve that your motivation needs to be something else other than being recognized subtraction also does not fulfill the best interest of just one person or a team for example your team may have investors who's interested in the close of your team or the profit they can make out of it or even without that people tend to want to please those who are in front of them for the short term so when you subtract you are doing it for the whole ecosystem which would benefit to yourself in the long term subtraction always comes with with long-term thinking so now you might think oh subtraction sounds very hard it is hard I like to take this an opportunity to say thank you to the people at the ethereum foundation working with me with this principle because their work is very hard and often thankless foreign [Applause] but I also want to share the positive side of this to clarify first you should know that you can add with the subtraction philosophy EF did add things for example we added ESP and when we think about you know how to like who to give guns and how to do that we first think about what problems ethereum has today and after that instead of thinking about how can we solve those problems we ask how can communities solve these problems and how can we help them so yes we can add but the important things is for us to ask this question before adding and subtraction can be actually exciting subtraction makes space for others making an open space for others to join is truly one of the main reasons that ethereum attracts so many people yes it helps to have more people to secure the network but isn't it just fun to work with more people economics and Derek spark I mentioned decided to when they decided to create a foundation they didn't just um do it to be nice they are nice but that's not the only reason but they both of them told me that um you know it is just fun to be able to work with others uh Empower others toward the same goal so there's just this undeniable excitement to be able to empower and to see others grow okay and we tend to think if we subtract power and Empower others the same amount of power will be split into the number of people you empowered that is not true games in the infinite Garden is not a real sum game EF subtracts so you can add and when you grow and learn the Mastery will let others other new players to add and glow there with this Mastery and growth the energy in total is exponentially glowing this means there is no limit of energy we can have in this growing Garden EF used to be equal to almost equal to the entire ethereum ecosystem but not only EF has become just a small part of it the entire size of the ecosystem has grown so much and the ethereum is lucky now that this Garden keeps growing with diverse teams and projects driving and coexisting just like Nature has potential for infinite growth to conclude my talk if you feel a little bit inspired ask those questions do I need better balance do I need better focus and if the answer is yes maybe you can look for things to support in your work or in even in your life you may have to wait for the best timing or also think about other trade-offs but the important thing is to know subtraction is an option for everyone and you might be surprised how that would expand your opportunities thank you for listening if you want to learn more about subtraction or infinite Garden you can go to ethereum.foundation thank you very much [Applause] absolutely amazing amazing another round of applause for Aya another round of applies for IA super so earlier today this morning I talked a little bit about the importance of visiting and bringing the ethereum community to Latin America and one of the things that you might realize while living here or visiting here is the importance of lowering gas fees lowering gas fees and ethereum for those around the world a five dollar transaction fee for those living in developed regions in the U.S or Europe might not be much but here that could be an entire day's salary and what happens here is if the gas fees are that expensive what happens is they end up using alternative chains alternative projects that have cheaper transaction fees but that likely got those transaction fees through sacrifices sacrifices such as sacrificing decentralization and so with ethereum we have a goal to scale ethereum to billions of people and to do so without sacrifices without sacrificing decentralization because when you sacrifice decentralization you end up having the same systems we have today AWS exists for those uses central banks and databases and that's not what we're here to create we're here to create a global credibly neutral settlement layer and we are making concrete steps to reach that point to reach a scalable ethereum that can be used by billions with transaction fees less than five cents it's difficult it's taking time but we're working there and I'd like to invite Carl B kaisen to explain a little bit more about the concrete steps that we're taking to get there so big round of applause for Carl [Music] thank you very much um this Talk's going to be a little bit different uh we'll get into we'll get into why I think to many people what is about to happen in order to to make um ethereum scale as promised will be a bit unexpected anyway let's dig in so I'm going to be talking about summoning the spirit of the dangshod um this might be a strange idea to to many but uh we'll see so as Scala was mentioning we have some problems in terms of fees scalability Etc the idea is there's this power we can call upon the power of dang sharding uh which basically massively scales the data that we have access to Within ethereum and those data availability will allow l2s and whichever other platforms that would like to build on top of us the ethereum chain to massively grow ethereum so the fees will be lower for averages while at the same time we can stop State load which is a I think most of the client teams will attest to a serious issue so how does what what does this look like the idea is that we have these massive Blobs of data where the l2s and whomever else can basically just dump crazy amounts of it um like orders of magnitude more than is currently possible and then we have this this Black Blocks Gadget that's a cryptography Gadget like Danny was talking about earlier these black boxes called the kcg commitment which allows us to take this data and only put a tiny reference to it on chain um but we can also prove wonderful things about this data using using this tool then what we do is we take this um the the the data and once the chain has progressed a little bit we can throw it away and what we've been guaranteed is not that the chain stores the data forever because we can't we can't keep doing that but what we can guarantee is that everyone had access to the data so if you cared about that data you could have downloaded it and you can now be rest assured that your your data is there and available and this is the power of dank sharding and is how ethereum will achieve the the ability to scale to hopefully the entire world's needs so what exactly is inside this box it is a bunch of moon math some polynomials and most importantly for what we heard for today is a a secret it's a secret that I can't know that you can't know the client team's card no no one in the world can know and it is vital that we have the secret in order to enable the powers of dank sharding but it'll also the paths of dank charting are completely decimated if the secret is compromised so the idea is we're going to summon the secret from out of The Ether um the there's a ceremony that I um everyone else sitting here the entire theorem community and hopefully members from around the world will participate in in order to produce the secret in a shared manner and once we all have contributed and attested to it the idea is that as soon as well sorry as long as one of us is honest one of us doesn't try go in the code change the code and throw away sorry sorry keep um sorry one person make sure to throw away the secret that their computer knew for but a moment then we will be good um and this again ties into a bit of what Danny was saying about resiliency uh there are multiple implementations of this that are needed uh we need as many people running it as possible institutions uh homesteakers whomever uh because they could be that final burning candle that keeps ethereum secure um this uh the idea being not that you trust one person to be honest but that you're pretty sure that amongst the thousands of people that have participated there's at least one of us who have done the right thing or in this case not the wrong thing in order to to summon the secret the idea is uh we'll have many interfaces but the primary one will be browser accessible the goal is to have some somewhere on the order of 5000 contributions will take five minutes of your time so hopefully a trivial thing to do to help improve the security of the network and be sure yourself because if you participated you knew that you didn't do any of the the weird things to try compromise the security and the files very small relative to some of these other ceremonies we've seen before my idea was to do a demo to show you quite how simple it is that it's going to be fun interactive people are going to get on stage was going to be a blast there were pandas that were going to be thrown around but unfortunately I've been let down a little bit by the the Wi-Fi conference Wi-Fi and the gods of uh trying to do demos on stage I was warned against that I still persisted and here we are anyway um thus the the idea is uh there's this interface you'll come to the ceremony and there's this guide which will walk you through the processes that you need to partake in to invoke the spirit of the dunkshard um it's as normal you'll sign in with your theorem account um you'll wiggle your mouse around a bit it's collecting all sorts of data you can draw pretty pictures uh write names of lost lovers Etc uh with your mouse you can type some secret that hopefully means something to you but ideally you're going to forget and all of this will be combined with some additional secure some additional Randomness from your computer with the idea being that you don't know it and if even one of these little steps are compromised then uh that's that's not super important um the uh then there's this this contribution phase where your computer starts getting all the um the data um there's a one one server which will send you this information where you are now the person who's been entrusted with the powers of Tau for a moment it's your time to shine you'll take these secrets that or your computer will take these secrets that you've just generated you'll mix it in with everyone else your ancestors in the ceremony who've come before and uh then you you will uh return the powers to the next the next user um and this is how we're gonna have the powers of dangshard uh and dangshotting drawnia um this very complicated chart of what's Happening all that's that's needed to know is for uh dunk charting in eip4844 I don't know if those mean anything to you but this is all part of the uh the search phase of our scaling um that uh in about a month or so we'll be going live with this this main ceremony um and uh hopefully all of you in this room will join me in participating all the people listening um that would that'd really be fantastic Let's uh scale to these these thousands of participants um there'll be grants um I want to encourage people to write their own implementations um you might be scared of cryptography or think that um this is not a not something you've practiced or whatever but you can't really go wrong writing your own implementation there's nowhere to break it it will just tell you sorry you were wrong if you made a mistake so please if you want to try dabble in some cryptography this is a great time to try otherwise if you've got some crazy ideas on how to create a secret you want to do Vision trips in the desert or something flying airplanes um you gonna like destroy your computer afterwards whatever you you think is a meaningful way of creating this the secret or destroying making sure proving to the world that you've destroyed it afterwards in a fun interesting like narratively relevant way um that would there'll be grants that you can uh you can join for doing this so um sign up uh on this thing to be notified I'm sure everyone will be seeing lots of this happening on all the twitters there'll be a pope which uh I know means a lot to a lot of people shout out Patricia on the front row here um and uh yeah so look look forward to this I encourage all of you to uh to to be ready to contribute and uh if you'd like to hear more I have another talk coming up later in the week to dive into the details explain really the the nitty-gritty of the math and why this is a secure thing and why it's a necessary thing um in order for ethereum to achieve our goals thank you super okay last quick thing I promised that shout out the teams that uh have been working on this they've put in an incredible job particularly making sure the demo would be live today which didn't happen but uh thank you so much guys awesome huge round of applies for Carl for the whole kzg team and yeah keep your eyes open for an opportunity to participate in the future of ethereum anybody around the world can participate in this and and help us generate the key towards unlocking ethereum for the billions uh next up the last on our list for the opening ceremony I would like to invite uh just some guy named vitalik buterin to the stage to talk about ethereum in 30 minutes let's give a warm welcome to vitalik okay so um before I start I should mention that we support and love medical Freedom so if anyone wants to wear a mask whether you're immunocompromised or high risk or you just really value and not getting sick you know you're very welcome to we have some special ones in the swag section of the first four you know your choice enjoy um but you know it's so ethereum in 30 minutes um so this is actually not the first time I've given this talk right this is uh well they I've given something like this uh about pretty much once every Defcon I think since uh at least uh Defcon one and uh the point of this talk has always been to just give a kind of big rapid fire introduction into some of the basics of how ethereum Works some of the basics of what ethereum tries to accomplish and you know just try to get it done within um I guess uh right now it's uh 1.8 kiloseconds or a 150 slots um so what is ethereum right ethereum is a general purpose blockchain so people have seen a general purpose uh system platforms before and people have seen blockchains before and I think at this point we can all kind of intuitively understand what the value of both of those categories is right so blockchains can facilitate large-scale consensus they can protect against censorship they can enable censorship resistance applications blockchains are always available if you build on a blockchain and then the thing that you build on that blockchain is going to be available it's not going to just get pulled under you because um you know some particular company decides it would be 12 more profitable if they just change the API on you without notice it is uh you know independent of any one particular nation state it's not dependent on any particular centralized Corporation avoid dependence on centralized parties um it's the you know one neutral ground at a time when almost every other grounds that we see is you know picking picking sides of some kind or other and you know often for very good reasons but you know blockchains are this a kind of base layer between parties that do not trust each other that you know still allows them to have positive sum interactions blockchains can allow applications that are open that are transparent where people who participate on them or can be sure that the application is going to follow the rules that they sign up for right so blockchains are great for you know things that really need stability um so there is a good reason why money is the first app um but there's other apps as well and you know I'm sure a lot of people behind those apps are going to be talking a lot about them at this conference general purpose platforms are powerful too right general purpose platforms are interesting because they open the door to Independent Innovation so if you have a general purpose platform then it just makes it much easier to build something on top of it because if he wants to build some specific thing instead of having to like rebuild all the infrastructure yourself you know you just add a tiny little piece right they can create powerful Network effects between different types of applications so you know you got your uniswap and then you got your like Dow that plugs into the unit Swap and then that you and then that unit swap itself gets used to trade between you know usdc tokens and maker tokens and you can create these kind of complicated chains of seven different applications that all talk to each other and sometimes they talk to each other in insanely crazy ways within one single transaction that uh you know really fun people from Paradigm go and write amazing blog posts about um but so uh General progress platforms lower the barriers to entry they make it simpler to build they enable a lot of innovation and often general purpose platforms end up being far more useful that even the creators originally imagined so ethereum is a general purpose blockchain right and so ethereum tries to be both so this is like one of the sort of three-minute pitches of you know what ethereum could could allow you to do so what what is ethereum and how does this work so these three pictures are from a slide that I use to describe ethereum at some of the previous ethereum in uh 30 minute sessions right so you know you have like single application blockchains which are like pocket calculators then you have like multi-application blockchains that explicitly support a small number of applications I call them Swiss army knife blockchains and then you have you know the smartphone blockchain oh it's a you know it's general purpose and if you want to do something you just like download the app right so these days you know unfortunately maneuver in you know 2022 and uh you know talking about a general blockchain being general purpose as though that's something cool is um you know kind of like a someone selling a house describing their house by saying you know we're we're really modern we have a refrigerator who here has a refrigerator well lots of people have not raised their hands I'm impressed um I guess that do people like order out do people eat raw food like what's the idea here I don't know I mean people have done refrigerator Free Living successfully for like you know 1900 years in the ad era alone but uh that's uh you know it's still impressive um anyway so like what does the blockchain look like right so one of the uh exciting things about doing this presentation this year is that like I actually had to change it a lot right like between a lot of the previous cell ones it's like okay you know it's ethereum here's how it works okay it's a theorem it's how it works okay it's ethereum it's how it works but in between the last Defcon and this one the way that the ethereum blockchain works just like changed very fundamentally right and the the rate of change and our ability to actually execute on and implements changes to the ethereum protocol significant changes that we have wanted to do I'm almost since the protocols are launched and that we've been talking about for almost a decade but you know finally managed to done has really been accelerating right so we had eip1559 in you know 2020 and then the beacon chain launched and now the beacon chain took over and you and uh you know ethereum is only a proof of stake system so you know lots of very big changes and you know lots of different things that we have to talk about right so like remember back in when during the proof of work era we had to talk about how like blocks include Uncle blocks right do people remember this so people remember how like sometimes people would even you know try to be gender neutral call them armor blocks instead of Uncle blocks as well and like you know I get this I you know I get the sentiment very honorable sentiment but like come on like armor just sounds like an insult for people who meditate but okay so these days you know we're proof of stake right and um the blockchain looks kind of different from what it did before right so what so let's like talk about what the blockchain looks like without reference to you know the dark old proof of work era that our grandchildren will eventually remember in the same light as how they remember how houses used to not have refrigerators so you have blocks right and blocks contain transactions what is a transaction a transaction is an object sent by a user that contains information about something that they want to do right so if I want if I have like some if there's the yeah cryptocurrency inside of ethereum and I want to send you one is then that request would be packaged up inside of a transaction if let's say I have an nft and I want to send you the nft that um request is packaged up inside of a transaction if I want to publish an entirely new application then and create the smart contract for the application and that's something I'll cover later that is also packaged up inside of a transaction so a transaction is like a package of day data that contains information about stuff that somebody wants to do these transactions get included in blocks every block is created by by a validator and a bullet so blocks already just these packages of transactions and one new block comes every slot one slot is 12 seconds then we have attestations attestations confirm blocks right so attestations are like these messages signed by other validators that basically solidify the position of a block inside of the API blockchain right so when you a block gets published and then that block within a few seconds it almost immediately gets thousands of attestations supporting it and that and it solidifies that Block's position in the chain such that other blocks that compete with that block that like also try to claim that their you know that are not kind of children of that block but that are you know siblings and then try to claim that they're the real history those blocks are not not going to be able to get through right so in as Danny mentioned you know in the entire almost month that post merge ethereum has been running we've only had like 26 reorgs and that's maybe an over count and even those cases are cases where a block is published too late and it probably did not get many other stations right so lots of attestations in parallel solidify the position of a block in the chain block gets published block gets attested block gets published block has a tested block is published block gets attested right people understand um raise your hand a few who I understand okay wow it's like more people understand this than have a refrigerator this is like a basic okay so let's talk about what happens inside of a blockchain right so uh you know there's the blockchain keeps track of um information that we call State and the the state that the blockchain keeps track of is made up of accounts right and there's two types of accounts basically you can think of them for now as like accounts controlled by people and accounts controlled by robots where the robots also are also only exist inside of the chain right so an externally owned account is this this is an account that represents a user right so like for example if you hold ease today that is stored inside of your externally owned account right so there exists a record which is like an eoa that is in the blockchain that the blockchain keeps track of and that object contains the record saying you know hey this address contains this amount of eth the other kind of account is what we call a contract a contract is like a computer program that lives on chain the code of that computer program is on chain so the chain stores the code of the contract the chain stores internal storage of the contract internal storage as like memories that that contract has the ability to update and contracts are basically how all applications that that are in ethereum work right so an application is generally has an on-chain component that kind of controls the business logic of that application that generally is one or a set of contracts so what do contracts look like um so this is an example of a source code of a simple smart contract and this is by the way in a language called Viper it's a a less well-known language it's the kind of largest alternative to solidity and so if people aesthetically prefer coding in Python syntax I mean like I personally think python is like way aesthetically Superior to anything using curly braces but I know this is a controversial topic and like half of you are going to cancel me um but um you know if uh if that's you or if you like some of uh Viper's kind of other features that like try to kind of take a very Pro or from scratch approach to being sort of more restrictive and more secure in various ways you can check it out but this is a simple you know contract for Asia domain name registry right so basically the same sort of thing that ens is trying to do right so what do we have here right so we have first like a mapping right domains mapping bytes 32 we're gonna and a two a domain right um right so the bytes 32 here is like basically you know the address like what the domain is right so the you know I'm just kind of being very lazy and very simple not introducing strings or variable lengths or fancy stuff and you know if you want to like register George then you would just like put 26 zero bytes and you would like stick George at the end and uh you know that would be the key in the mapping and then the value in the mapping is just who is the owner and what is the IP address that the domain corresponds to right so then we have two functions the first function is set owner right so the point of this function is basically if you are the owner then you can transfer ownership to a new owner or if the domain is not yet claimed then you can call this function set it to yourself or set it to some owner and you can become the owner right so you should be able to you know if you have any programming experience just kind of read the code and understand what's going on right basically you look at what the owner of the particular domain that you're looking at right now is if that owner is zero or if that owner is you then you can set the owner to whatever you want right so that's one function and then the other function is well if you are the owner you can set the IP so what's actually going on here right basically we have these functions and it's a piece of code how does this actually kind of translate to what's happening on a chain right so okay is this better okay I yeah I've been instructed to fix them like but okay hopefully it's better now um so this is a transaction flow example right so basically what we have here is you know you have a the contract that's the a kind of bubble on the bottom the zero X um 849 c41 down there right that is a an account it is a contract account and that contract account is going to have a piece of code what is that code it's a compiled version of this right so that lives on chain and then you have that contract and that it also has some storage now at the top we have a transaction right so as we mentioned before transactions are like these packaged objects that represent requests to do something so in this case um you will we're going to make a request to change the basically calls a set address right so we're going to call it with a particular domain we're going to call it with a particular new address and you're going to make a transaction where the two of the transaction right the two address is the account that you're calling right so it's going to be 0x849 c41 down there the data is going to be the stuff that you call it with and then the signature is like cryptographic data that proves that it actually is you the owner of the sender account that actually created the transaction right so the signature determines who the sender is only the sender like only the owner of the actual private key corresponding to the sender can actually create a transaction with that sender so that transaction gets included in a block what happens in the evm right so it starts off with a call from the like the accounts at the top the ca291d up there right the accounts at the top which is an externally owned account that is the account owned by you right now what does that account do so what are the state changes that happen so first of all your balance goes down a bit to pay for the transaction fee and then a bit of balance gets transferred to the miner or now to the blog proposer and then it makes another call and that call calls down to the contract that is the application and the data of the call encodes what you want to do and then basically it actually does like a series of storage operations that just are what's happening here right so first you do an S load a storage load it's a base to figure out like what actually is a in the domain or in the storage for the particular domain it returns let's say a zero because nothing has happened there yet and then we s store and in this case um you know we're changing the address and it's just going to s store add a particular address that maps to where that domain is stored and it's going to store the new address there right so this is like a very simple example but look this is a bit of a view of you know what happens inside of the evm when you send a transaction so yes this is something in ethereum that has not changed yet right so gas is the unit of resource consumption within ethereum right so examples of gas so a transaction costs a base 21 000 gas each computational step costs usually between 2 and 10 guests depending on how how complicated the operation is editing a storage slot costs 5000 gas or it costs 20 000 gas if the storage one is not filled yet and so you're actually expanding the storage and every byte of data in a transaction costs 16 gas or if it's a zero byte then it only costs four gas right so gas is like this master unit that represents all of the resources that are being consumed during the execution of a transaction if you send a transaction which gets included in a block you have to pay a fee that's proportional to how much gas the transaction consumed right so whatever amount of Reason total resources and transactions consumed you have to pay an amount proportional to that right so the fee is basically the What's called the base fee plus priority fee multiplied by the gas you use so the base fee is like a fee that's adjusted by the protocol it adjusts up or down to try to keep the usage at about the same level and then the priority fee is like an extra amount that you pay the block proposer to sort of encourage them to add your transaction and in this partic generally people just set a priority of one but you know if there's a particular time where lots and lots of people are sending huge numbers of transactions and the blocks are congested you can set a higher priority fee to get in first and a maximum of 30 000 gas can be spent inside of each block right so who remembers how much gas that a basic transaction costs hint it's in the previous slide twenty one thousand okay um so thirty thousand Thirty million divided by Twenty One Thousand anyone want to guess about how much that is one refrigerator excellent answer yeah so it's uh okay right so it is uh you know going to be about about in the yeah 1400 range right so a maximum of fourteen hundred you know roughly simple transactions can make it into each block and uh you know if the transit but on average it's going to be 700 because like the priority fee adjusts to keep the average usage around 50 or sorry the base fee adjust to keep the usage around 15 million but um you know if the transactions get more complicated then they start consuming more gas and and uh you know you a block can include fewer of them so that's what gas says so this is what a transaction object looks like right so a transaction as we mentioned is like this Big Blob of data that represents uh you know a thing that a user wants to do that gets included on chain um and I know you can see it kind of some of the parameters of what they are so transaction type this particular transaction type is 0x02 there's also zero one and like others before it um chain ID which chain is this for are you even sending a transaction for ethereum M or four ethereum classic or for East pal who hero sets a transaction on each power No Hands raised almost Okay I uh a couple of hands raised okay no don't worry you're not canceled um so okay these you know just we want to give people the ability to send a transaction on one chain instead of sending it on all the other chains you know it's not that hard right um nuts this is like an anti-replay value right so every time you send a transaction that gets included the nons also like has to go up by one each time right so this prevents a transaction that you send for being included more than once pretty simple Max priority fee and the priority fee that you're paying Max fee which is like the maximum base fee that you're willing to pay gas limit the maximum gas the transaction is allowed to consume um destination which address the transaction goes to the amount how much how much ease that you're sending um data is uh if you're calling a contracts then the then what is the data that gets passed in the call access to list is like this fancy way to access some accounts and some storage slots kind of earlier and access them a little more cheaply and then the signature is like a cryptographic thing that verifies you know who sent the transaction okay so high level languages right so uh you know we mentioned that there is Viper um there's also solidity there's also um you know lll there's like a long list of kind of various high-level languages that you can write contracts in so when you write a a smart contract you're generally writing in this high level code there's a compiler the compiler converts the high level code to bytecode and it also outputs an API ABI stands for application binary interface it's basically the way to encode particular like requests like things that users want to do like users attempts to call particular functions in the contract into a set of bytes right so in this case like if you call you know set owner with a particular um you know a particular address actually this should be this should be set IP I put an IP and that's a bit of a mistake right then you could use the API and you can convert that into some call data right and the call data is what actually gets into the transaction right so there's this kind of logic that happens that basically converts this sort of high level human readable stuff that people want to do you know both the human readable code of the contract and kind of human readable instructions like you know I wants to send Bob 25 East because I really like him you wouldn't put the I really like him part into the contract you which like send them a love note off chain or something but you know convert that into a kind of byte request that the evm understands so um say consensus right so the thing that actually kind of keeps the whole thing safe so we talked about blocks we talked about as the stations who gets to produce these blocks in attestations anyone can if they deposit 32 East and become a validator right and if you have less than 32 East then you can join the system through stake pools right so there are stake pools you know there's rocket pool there's Lido there's a bunch of other pools and you and if you have less than 32e if you did kind of become part of a validator or using a stake pool as well so deposit 32 East becomes a validator and in each slot 12 seconds 1 over 32 of all validators attest to the block that was created during that slot the validators get Revenue right so why would you stake well you get rewards you get two kinds of rewards you get in protocol rewards so you get automatic rewards for creating blogs creating attestations you know doing all of the good things and you also get priority fees and Mev from transactions right so you know you get Revenue in two ways and validators can you know withdraw at any time well this will be enabled in the next hard Fork right but validators will be able to withdraw at any time with a delay and usually that delay will be pretty short but in extreme cases like if everyone's trying to go throughout the same time then there is going to be a queue and you might have to wait for some amount of time so that's proof of sacred census right basically you know if you have 32 East you can deposit become a validator and all of these validators are the ones that participate in this big system of blocks and attestations that keeps the chain progressing and keeps the blocks that are being added safe um Fox choice right so the reason why we need to have like weird fancy stuff and consensus is because what if you have this situation where people publish two blocks and those blocks disagree with each other right so in this case you have two blocks and these blocks are um you know they're sister blocks right they have the same parent and so clearly you can't get like put both of these blocks in at the same time they might have conflicting transactions they have some of the same transactions they even might have some of the same transactions in different order right but blocks or you know what happens if you have like two blocks that create two conflicting histories you have to choose one of you have to choose one of these histories somehow right and the mechanism that does this choosing is called the fork choice right because the blockchain forked and we have to choose one one part of the fork so the mechanism that does this right now it's called lmd ghost and it's very simple it's just as a station counting basically you have Block in you have Block B and you just count the number of attestations that support block a or support its children and then you also count the number of attestations to support block e Block B or supported indirectly by supporting its children you see which side has more in this case the top side has four the bottom side has six the bottom side wins and so each use Block B right so this is one part of the approve of second census there is also this mechanism called Casper FFG finalization right Casper F of G finalization is like this extra Gadget that lives on top of this attestation game and it gives us this really extra special property that if more than two-thirds of validators are online and honest then after two epochs so one Epoch is 32 slots and or 6.4 minutes so after 12.8 minutes a block gets finalized and that block cannot be reverted right so if we take this example if we take the Block B over here after one Epoch if more than two-thirds of the adjuster is in that Epoch support B then B is Justified and if after another Epoch more than two-thirds of a tester still support B then b gets finalized right once the block is finalized it cannot be reverted but you know in practice waiting for the Casper FFG finality is like more a thing for high value use cases if you are just making a very simple application that's not doing anything super high value then generally one of what we call safe swad is enough for most applications right so if you have one slot we're doing that's what the proposer acts correctly and he gets lots of attestations then that's like generally enough to be secure Merkle tree is um who here knows uh who's um on the get picture here um who here thinks it's records while who here thinks it's Ray dalio um who here thinks it's Craig Wright who here thinks its uh Satoshi um interesting so a few people think Ralph Merkel was Satoshi that's fascinating okay I gave away the answer it's Ralph Merkel right so Ralph Burkle is great because he invented Merkle trees and he also invented um the Merkel Dam guard construction for hash functions um which you know actually has uh has some problems since and uh it's um you know why people want to switch to sponges lately but it was you know an amazing invention for its time and you know he uh recently also doing some interesting stuff about cryonics but you know Merkle trees are great and dojas are also great um rough worker on dojias are not actually connected the only connection is that I like both of them um but the um so what are Merkel trees right a Merkel tree is like this data structure that lets you create one small object that commits to a large number of objects where it becomes very easy to prove for any one of those objects that that object is inside of this entire big entire tree right so you have this one object that's called you know a header and it might be committing to like a million different things and for any one of those million things you can make a short proof that shows that that one thing actually is you know in these set of things like that that's been committed to why do we care about this well ethereum blocks are big the ethereum state is even bigger right the ethereum state is like 40 gigabytes so what if he wants to prove something that happens in a block or prove something about your account and you want to prove it to someone that has these block headers that are at the top but that does not have the entire 40 gig 40 gigabytes or the entire you know really huge amount of the of uh of data in the ethereum chain well Miracle proofs come to the rescue right basically you just provide the value you provide a couple of like sister hashes going up along the tree and anyone can verify the proof by just kind of continuing the hash up the values going going up together and then seeing whether the route they get matches right so really powerful technology ethereum actually you know uses it everywhere last fun thing layer 2 protocols right so most people or increasingly more and more people don't use ethereum directly they use the order called Layer Two protocols that inherit security from ethereum and add higher scalability on top right so roll ups I wrote an article on them they're really fun there was a bunch of them from a user's point of view living on a modern Layer Two feels like living on ethereum you know applications work the same way but because these applications don't stick everything on ethereum directly fees are many times lower so verities are great layer twos are how ethereum is scaling and you know we encourage everyone to pay attention and learn a lot about layer twos this year so finally you know future directions the merge done yay um pick okay next stop the search increasing scalability going finally going sustainably below five cents a transaction go getting us to thousands of transactions a second next up The Verge replacing Merkle trees with more efficient structures don't let ethereum know to be much lighter ethereum notes don't have to have huge amounts of data becomes much easier for anyone to run them yay the perch clearing out all data clearing out technical debt making ethereum nodes easier to run and making ethereum protocols simpler woohoo and uh the Splurge grab bag of various useful stuff account abstraction evm improvements for potion Builder separation making everything amazing with ZK snarks yay ethereum is getting better and I'll have to keep rewriting this presentation for next year amazing thank you guys bye-bye [Applause] huge round of applause for metallic engraving oh wait vitalik I need that Clicker it's Alec vitalik you're the clicker awesome super thank you um okay so we are coming to a close of the opening ceremony but before I close it before we finish I would like to give you all a quick orientation to Devcon to what to expect over the next four days uh and maybe some things that we've done differently this year uh I guess when you give a team three years to plan an event they start to get creative and start to uh think a little bit differently uh and we've learned a lot from past events that we've done past defcons and really have tried to make this one better uh and so a couple things that we've done we've also tried to hear a lot of input and feedback from the community so uh roughly two years ago we launched the dip process which is the devacon Improvement proposal process mirrored after the famous ethereum Improvement proposal process which is named off for many other similar Improvement proposal processes uh the the gist of this is basically we want to hear feedback from you all and we have heard a lot of feedback from you all uh and so we're super excited to have a lot of different Community Integrations in this year's Devcon that we hope you all enjoy uh one of those to highlight is the community hubs on the first floor this year we have six different Community hubs interest groups from around the ethereum ecosystem who have their own dedicated space so be sure to pass through there and talk to them everything from a a woman leaders Hub to a a temporary uh Anonymous Zone to a ZK Hub uh regen and more uh we also have in the basement the hacker basement it's a little hidden so let's see if you can find it but I think I promise it will be worth it if you do feel free to head down there and co-work and chill uh even into the evening hours because Devcon this year is open until 11 pm each night for the first time in Devcon history we're not kicking you out at 5 PM sharp we're open until 11 pm to continue fostering Community collaboration and fun and things like that so and we don't just we're not just leaving the venue open we're also facilitating and encouraging community activities so we've built a Shiva chillout we're calling it in the back of the venue basically with a live stage where we'll have live music from fellow ethereum musicians performing throughout the day and particularly in the evenings alongside our happy hour from four to six so you no longer so now you have an additional option to stay around to hang out to collaborate and to check out different art experiences that will be happening also in the hacker basement and the chiva chillout alongside a special E-flat Sam Community Hub if you're from Latin America and you want to meet your fellow community members head to the chiva chillout on the first floor to meet them and I'll also mentioned a fun dip actually something that was proposed by the community is a treasure hunt so I was told to basically mention this sticker as part of the treasure hunt and to leave the rest up to you this team has been working on this for months months to make this treasure hunt cool and interactive and they've been here in the venue for the last week or so trying to make it fun so uh good luck in that treasure hunt uh and lastly I will say this year we hope you really enjoy the programming we've had the most applications we've ever received at a thousand three hundred plus applications for speakers for for talks for workshops we only had room for roughly 300 of them and so we really had to be selective and so hopefully the content that you see here is is of the highest quality and accessible and available for all so we we wanted to have talks that were not just high level only for experts but also for for beginners and for intermediates so do check out the mobile app that we also created just for Devcon to uh to find the talks that you would like to to attend uh and I'd like to welcome you to what is officially now the biggest Devcon ever by a factor of two and to mention that this is just the start just to start not just of Devcon not just of this week but we're still early this is the start of ethereum we have a lot to go and a lot to do and a lot to build and good luck thank you all hey baby [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] hmm [Music] in your own way my name is Althea I lead Communications on the ef's privacy and scaling team I guess all the important people are at lunch so you get me but as it happens I am really excited to introduce our first Speaker venkatesh Rao who is um the author of the ribbon Farm blog as well as Tempo which is a book about decision making and the author of some of my favorite tweets as well so I will let him take it from here Macintosh welcome put that [Applause] all right can everybody hear me okay sorry I might uh go off or clear my throat a bit I just had about a mile to go with a couple of weeks ago so still recovering so excuse that oh is there a clicker or all right so yeah my name is venkatesh Rao and uh it's kind of complicated to introduce myself so you can go to my website I'm basically a blogger and a couple of other things and I promise you this is the only meme I'll throw at you so I do write a blog a newsletter and so on and this is going to be a pretty abstract talk at a fairly high level but I do have like at least some experience dabbling at a very Hands-On beginner level so I'm coming from somewhere as in it's not up in the cloud so if you're interested I did a long thread last year about my initial explorations of web3 stuff okay so the title of my talk there are many Alternatives it's a reference to Margaret Thatcher's famous line there is no alternative she popularized it I think starting in 1980 and it became the catchphrase of neoliberalism and the basic idea was that as communism was beginning to get discredited there was increasingly no alternative to the idea of Western liberal Democratic ways of running countries with free markets and the institutions that came with it and it became sort of the core of what became known as the Washington consensus so so those of you who need the Short History lesson this was a consensus before blockchain type consensuses and this was the set of practices that the World Bank and IMF used to sort of dictate to countries how they should run their economies and this was around 1989 and as the Cold War ended the thesis became more than an economic thesis and it leveled up into a sort of philosophical historical thesis and one of the things that really helped this along was this book that came out in 91 called the end of history and the last man and it's widely misunderstood but it became sort of a justification for the idea that there is no alternative to the one way to run the world and of course as many of you remember a lot of people were very unhappy with the idea of there is a one single Playbook of how to run the world and I think of them as all teeners as in they don't really want a pluralist world with many systems competing on how to run it but they want to be the default alternative they want to be the way to run the world to which there is no alternative and some of them kind of like lost to history now but some of you may remember the anti-globalization protests and the world social Forum that came up in the late 90s Islamic Terror was another sort of alternate way of running the world in in the making what we now think of as Sovereign individualism type libertarianism the original book actually came out in the late 90s before uh blockchain stuff and of course the Chinese model and deng's model of running an alternate to the Western model came up around them so I Define Athena or there is no alternative Theory as a kind of Maxi thesis it the idea that one winner take all convergent future will dominate the rest of History and again is Bruno Mars In This Crowd so you should attend his talk since he's written uh a book called the history history's beginning and I'm sure he has more to say about it but I think a lot of the use of fukuyama's ideas in the sort of there is no alternative kind of theorizing is basically wrong but okay let's start the story for this talk with Bitcoin and I think of Bitcoin as the alt libertarian Tina Playbook with extra steps so I don't have much more to say about Bitcoin but ethereum I think is not a Tina Theory right it seems to enable many Divergent stories even within itself and in its relationships to other things right so within the ethereum universe you've got artists with their nfts you've got defy degens like going for yield farming and these are very very different types of people they're not like you know when you talk to bitcoin Maxis you expect them to be eating beef reading the same books and sort of the same ideology when you're talking Korean people if you pick one at random you have no idea what you'll get you could get like a far left person into art you'll get a far right as well like you know the traditional legal systems Logics right geometry [Music] on the plane you know if you have a line and you pick a point outside there's only one linear geometries so if you have space standards possibly curved like the sphere on the top you get a situation where there are no possible parallel lines and if you pick up a point outside the gray Circle and try to draw another great circle that does not intersect the first one it's not possible there is no alternative whereas geometry or negativity curved spaces if you have a straight line and then you pick a point outside it you can draw an infinite number of other straight lines through it so think of this as The Motif for hyper complexity here okay so why is hyper complexity important and I claim that hyper complexity allows open-ended evolution and it is the sort of substance of civilizational advances whereas the opposite which is there is no alternative single monolithic States approaching Perfection are a sign of evolutionary dead ends or bottlenecks and my hypothesis is that history evolves when smooth Tina periods kind of trigger discontinuous hyper complexity leaps it's similar to the idea of punctuated equilibrium biology okay some justification since it's kind of like a wild big claim so this is from Parkinson's law management classic and there's a lot of evidence for the idea that you know when a system approaches Perfection it's at the point of collapse Perfection is finality Perfection is death so system approaching that state is about to collapse and die I hope you can see some connections to things that were said earlier in the morning and Tim had to slide up yesterday and yeah it made me grit my teeth because it makes my talk a little harder and I just took this picture in the morning with Danny stock and I thought the headline was perfect perfect with them of finality and maybe Perfection and collapsing that I hope not okay let's see if we can find a way out of that so I love this definition of um civilizational advances by the philosopher Whitehead civilization advances by extending the number of important operations which we can perform without thinking about them so basically the idea of civilization is a series of automations of important things okay so maybe protocol Perfection can also be a foundation for an ecosystem hyper complexity leap so that's sort of the wild speculative hypothesis here I don't know what happened there oh yeah that's going on yeah so a major category of important operations is basically dealing with conflict amongst mutually Divergent narratives right many stories are being told how do you actually deal with conflict an example is religions that compete for believers and promise different afterlives right and for thousands of years we did not actually have a good way of dealing with this and freedom of religion you can think of it as a whitehead advance that automates this particular important operation and in this conference of like 3000 people uh some subset of you are in this room I'm sure that many religions and many levels of sincerity and religious belief are represented and there's a lot of atheists but fundamentally we sort of figured out about 300 400 years ago what it takes for multiple religions to live in the same area without killing each other right so we've replaced religious wars with a kind of pluralist piece so an example a list of examples of Whitehead advances so I've compiled this from a bunch of sources you can see that at the bottom the first three are from fukuyama's other book really good I strongly recommend it if you're interested in these topics the origins of political order the first three are civilizational leaps that really allowed more and more Divergent stories to live in the same region or Nation or country right strong centralized State rule of law which is a very different idea than rule by law if they're just laws that's not enough you need everybody to be under the law some people cannot be above the law so that's rule of law and China even though it innovated a strong Central State it did not develop and still has not developed rule off law it has ruled by law and that developed in Egypt India and later on through Europe that accountable government forgiveness is an idea Hannah Arendt points out is kind of a novel Innovation that came out of Christianity that took us from a regime of like Vendetta filled stories of like you know killing each other in tit-for-tat stories to much more pluralist stories where maybe you didn't have to kill each other maybe forgiveness and they're moving forward is a way separation of religion and state this is a fairly recent idea Spinoza in the 1670s actually had to kind of invent the idea and States had to kind of be developed on the basis of that modern markets I strongly suggest you read Brad delong's new book that just came out slouching towards Utopia and of course what we're talking about here I think crypto is actually one such civilizational Advance or leap and I think there's another big contender in the world today which is machine learning and it's kind of interesting that we have these two things and as tweeting a while ago that maybe crypto is the first foundation and machine learning is the second Foundation like you know in asimov's Psycho history okay so let's put all these things together what's the connection between complexity hyper complexity ossification civilizational advances lots of big wig terms okay let's start with complexity and there's like lots and lots of different ways to think about complexity I'm not going to be talking about all of these but happy to like sidebar with anybody who's interested I could talk for an hour on each of these all are the technical ways these are all technical ways there are social and Humanities ways of thinking about complexity but I'll go with technical and the one I want to like highlight for understanding our topic is one known as skinnifin it's pronounced skinnifin it's a Scottish word it looks like cinnipin but it's Kinison and it was developed by this guy Dave Snowden and this is the picture it thinks of systems in the um within this framework of four regimes of clear complicated complex and chaotic and they're each described by a pattern of constraints and a pattern of how to operate effectively within them so if you work backwards from chaotic chaotic systems lack all constraint and the bits and pieces are highly decoupled which means you have like stories that can evolve that are like disconnected and mutually in commensurate like I said and the best way to act within them is kind of adventurously so you know act sense respond that's the phrase they use which is kind of like living dangerously you could die once you get to complex regimes you have slightly Loosely coupled systems so it's no longer decoupled and you have a more experimental regime where you can do like you know trial and error and it won't always kill you and there's a opportunity to learn and evolve without killing yourself then you get to complicated where constraints start to get tightly coupled and you're in a sense analyzed respond regime where think of it as you have to look at a situation model it analyze it you know with spreadsheets and equations and everything and chances are if you think clearly and do it well it actually won't require much trial and error or you know killing yourself and finally clear it's a completely constrained system there are no degrees of freedom there is no alternative and all you can do is look at reality sense it categorize it and respond you're almost an automaton you're a bot okay let's map this to everything we've talked about so far so the Whitehead definition of civilization I think maps to the path from chaotic to clear right you have a chaotic system you add a little bit more thinking and advancing and it becomes a complex system where it's still hard to manage then it becomes a complicated system and then finally it becomes a clear system where it's been fully automated and you don't have to think about it anymore and the right half of that kind of two by two is the there is no alternative regime right complicated plus clear that's what things that there are no alternative to look like if you look at the neoliberal world order and the Washington consensus World bank's Playbook imf's Playbook that looks like the part on the right there is no alternative it's a complicated and in some places clear thing and of course if you want to add the idea that towards Perfection you get collapsed you have a leap a red leap from clear to chaotic where a system approaches Perfection acquires fragility collapses and then you're back in chaos all right so this is how I think of hyper complexity this is the picture on which it evolves so the question is can we eliminate crisis Pathways in this whole process of evolving hyper complexity can we have smoothly increasing hyper complexity without these you know there is no alternative bottlenecks and my belief is no you cannot maybe you guys think differently but but can we at least reshape crisis Pathways so I went from Green but not quite red so an orange pathway I think of this as equivalent to the question can you do the equivalent of asimovian psycho history and my belief is yeah maybe you can do it this is sort of a very janky work in progress definition but the idea is if you respond to a looming crisis by tweaking the system at an axiomatic level somehow maybe the big crisis becomes a small crisis or even a no crisis and maybe because of that you benefit by getting a period where hyper complexity can grow right and examples are Y2K a crisis that turned out not to be the Montreal protocol for ozone that worked pretty well sort of like backsliding now and ozone is back as a problem some types of corporate self-disruptions seem to work like Netflix moving from you know DVDs to streaming the merge I think I would still put a question mark on it has it actually hit the category of this definition same with a lot of things happening in say climate change like Renewables or carbon capture and note that this is not resilience or accelerationism which are two other ways of thinking about this problem resilience is you make yourself Tough Enough and redundant enough that you can sort of power through the crisis and come out maybe a little broken and battered but you're still alive that's resilience accelerationism is you believe that the system today is so corrupt it deserves to die and you floor the accelerator and burst through the crisis and you come out the other side maybe you know superhuman and a lot of the accelerationists it started as a right-wing philosophy now there's a left accelerationism as well but this is neither resilience nor accelerationism this is what I think of as exactation so you know adapting to something kind of before it happens okay so this is where I think it maps to this is another slight stolen from Tim yesterday so we had a candidate hyper complexity leap starting and before ossification maybe we will enjoy a period of hyper-complexity growth and that's a pretty blurry picture but that's about as blurry as my understanding so I'm fine with that okay how do you design for this process of like you know hopefully reshaped hyper complexity evolution so in search of design principles you can think of like um the spirit of the design principles first so first thing I want to do is infer what a hyper-complexity is like from historical examples not theories so the list of examples I looked at before you know like development of the state the emergence of Christianity things like that it's not the original Tina Playbook of neoliberalism it's not the Silicon Valley Playbook some of you may recognize the phrase breaking smart I wrote a set of essays while working with Andreessen Horowitz about seven years ago and that's the Silicon Valley Playbook I sincerely believe what we're entering now is no longer the Silicon Valley Playbook and of course um what all the other all Tina playbooks the Socialist one the libertarian one I think they're all kind of like not candidates here so right now I'm just thinking through the phenomenology that I think is important in hyper complexity it needs theorizing and I added those last two points as I was listening this morning I love the idea of subtraction over addition and I'm surprised to hear so many mentions of infinite game over finite game I'm really pleased to hear that because James cars is one of my favorite authors and I had the Good Fortune to be in a salon where he spoke a few weeks before he died so one of the last opportunities to hear him and one of the interesting things was I had to assumed he would be kind of this very spiritual theological philosophical philosophical guy who would um I don't know I had a certain picture in my head but it turns out he's a jock at one point in his life he was an athlete a football player and it was really sort of like you know narrative violation for me but when he thinks about finite and infinite games he literally comes from a background of real Sports and games and it's when we talk about like you know hyper games on top of ethereum you really should actually think about real games as well not like an abstract Game Theory okay so this is my last serious slide starting point so I've been sort of collecting I've been thinking about these things for like several years and those of you have been talking to you know that I can go on at length about several of these so for example mediocrity over Excellence is one of the points that gets me in the most trouble I've written a 12-part Blog series about it uh so if you want to argue with me you're going to have to read that first I like this idea of like you know there's a lot of bureaucracy and bureaucracy gets a bad name but you know you guys have things that sound extremely bureaucratic and that's a good thing eip1234 or whatever I love it and I like the idea of bureaucracy over monarchs Messiahs and mobs and this principle it's kind of like a port of an old ietf principle that says something like uh we don't believe in Kings or democracy we believe in rough consensus and running code I think we need an update of that and that might be a good one fat overlaid I've written a bunch about it I want to say a little bit about the seventh one which is entangled fan outs over you Forks sorry and if I'm allowed to say that to you but the idea that you know became popular in the last 10 years a good idea of like you know exit over voice it's sort of went cancerous and now everybody is like exiting from each other and it's like you know a few I'm going to create my own future over there and I think that's gotten unhealthy and really I love what I see in the ethereum community so yesterday in the r d Workshop it was a funny thing happened they had the big room and when the two breakout sessions started there was this group on one end I have a photo I meant to put it in but I couldn't at a fine time but in one room one end of the room there was a bunch of people discussing some complex number Theory and in the other end some really janky practical implementation stuff on software and the room hadn't really been designed for that so both started talking loudly and then there was some crosstalk and there was some joking and then both started speaking very softly and I think that is yeah you're exploring many Futures with like a fork of um a garden of forking paths but they're not like independent and exiting from each other they're entangled so I think of that as you know entangled fan out is about the phrase I'm thinking about so fan as in like you know things diverging not fanatic and if you extrapolate that to the global level you really kind of want to go towards planetary mutualism as opposed to you know Sovereign individualism which seems to be the maybe it's bitcoin's influence but Sovereign individualism seems to be the popular default philosophy in the crypto world I think planetary mutualism is what it should be and what ethereum should lean towards a bunch of others happy to talk to anybody who's interested in any of these they could go on for hours about this uh I have a couple of minutes left I do want to acknowledge a bunch of people so a lot of this thinking actually for the last couple of years it's been happening at this group I belong to the collective we have a Monday morning distributed systems group that discusses kind of more technical uh stuff and a Friday morning study group that talks about like you know online governance and social stuff so if you're interested please do join us and I do want to like shout out to all the people I've listed there so John Miguel K Rafa John many others um all the people who helped me not make a complete ass of myself as I was exploring these topics starting a couple of years ago I have been around the ethereum ecosystem as a lurker since the beginning but I only really got into it a couple of years ago and of course thanks to Tim and vitalik for a bunch of helpful conversations so looks like I ended with a minute to spare so thank you very much [Applause] do we do questions or something or go straight in the next one okay um I think we are moving on to the next talk um we're running a little bit late thank you very much venkatesh that is a lot to think about um our next speaker is Josh Stark who likes to describe his role as working for ethereum at the ethereum foundation I've worked with him for a few years now and I don't think I could get any more accurate than that so he's going to speak a little bit about kind of where the ethereum foundation is coming from where it's going and hopefully demystify a little bit but not too much coming up Josh hey everybody thanks Althea before we get started it's uh one of the kind of cool happy accidents that happens at Defcon in the ethereum community is other people are thinking about some of the same stuff that you are and things just kind of come together I didn't know the content of Danny's talk or is talk or venkatesh's talk today but the four of them I think like have a lot of interrelations and have already kind of expanded some of my ideas about what I'm going to talk about today so very cool to see happen uh I'm Josh Stark I work for ethereum at the ethereum foundation my talk today is about the EF but it's not just about that it's about where the EF came from ethereum itself and where we're going together so let's get into it prologue so imagine you're trying to understand an organism it can't be understood in a void without any context you need to understand the environment it came from the ecosystem that it's a part of and how they interact and then once you understand the environment and understand how one animal fits into it you've also learned something about the possible ecological niches that can be filled by other organisms so you've learned something not just about how this rabbit relates to its environment but also a bigger picture you've learned something about a whole ecosystem and how they fit together so this is a talk about the ethereum foundation but it's not just a talk about the ethereum foundation because it can't be it's a talk about the environment that's spawned and shaped the EF ethereum and its community and about how the EF has evolved in response to it and once you learn something about the ef's ecological niche you also learned something about other niches to be filled other things that could or should exist so this is a talk not just with the EF but about the design space of organizations in our ecosystem about organizations that you might help found about what the community can grow into years and decades into the future so accordingly this talk has three parts first what is ethereum what perspectives help make sense of it second what is the EF how did it revolve in response to those perspectives and third what else can we build together what is the space of possible organizations that will exist in our ecosystem in our community long into the future part one of the best and one of my favorite ways of explaining ethereum is to refer to this ancient parable of the Blind Men and the Elephant you've probably heard this before like an elephant ethereum is extremely big it's also very novel to most the people that are trying to reason about it and so this leads us to often only focus on a small piece of it the piece that is most relevant to us from our perspective often comparing it to something else that we already know and understand so depending on where you're standing ethereum might look like a lot of different things ethereum is a new kind of financial system it enables new assets trading buying and complex Financial Arrangements ethereum is an open source developer platform it's a toolkit that with many pieces that help developers build new kinds of software ethereum is a Cutting Edge r d project that is pushing the boundaries of civil fields at once and maybe inventing some new ones ethereum is a political movement or even multiple political movements as venkatesh alluded to many of us believe in different ways and for different reasons that ethereum can change the way power is distributed around the world ethereum is maybe a new kind of state or a jurisdiction it's a new kind of place to you know write contracts and build an economy or political community ethereum is also a global project our community this community is spread all over the world and where ethereum is going to serve different needs for different people ethereum is also a decentralized project and protocol our community is inherently skeptical of Institutions and wants to avoid relying on them ethereum is also uncertain and changing we're surrounded by an unknown future a fog of War we should be pretty humble about whether we see the full scope of it whether we really know what ethereum is yet and ethereum is inherently a long-term thing can only change the world if it persists pretty long into the future in some form and continues to influence that future ethereum is an infinite game as many speakers have alluded to already that we want to keep playing if ethereum made everyone in this audience very rich but in 10 years is captured and falls apart would you really consider that success I know that I wouldn't so ethereum is all of these things and more these narratives aren't competing with each other there are sincere attempts to understand something that is large and unwieldy and which has no precedent we don't have a grand theory of blockchains yet that everyone understands so we have to piece our understanding together from these different perspectives to see the bigger picture so what does that mean for the ethereum community and the people teams and organizations that are part of it each of these perspectives uh you know on ethereum helps us build a picture of whether what our ecosystem might be in the future it provides us with historical analogies to to drawn and depending which perspective you align with the most you'll have different intuitions about what our community should be if your model is really about a financial system then you probably imagine you know financial institutions Traders liquidity providers and maybe even Regulators just decentralized if your model is a developer platform you might think of a you know loose Alliance of American VC backed companies a few non-profits and some open source contributors if your model is a political movement you might picture advocacy organizations Mass political movements charismatic leaders even political parties of some type so looking across all of this we can at least you know draw out some Pew basic implications and questions one who's going to do the maintenance right even if and after ethereum is ossified there are Stacks and stacks of software built on top of it that makes it usable to people and individuals and users and developers if ethereum is a developer platform there's a lot of developer facing bits that someone's going to have to maintain for five years ten years maybe hundreds of years into the future that's either great news or terrible news if you work on these projects but your children and their grandchildren will be maintaining them ethereum is a long-term project that means maintenance for a very long period of time who's going to do it who will fund public goods this is something that the ethereum community to our credit talks about a lot you know if your frame of reference is a country then you know similarly we have a lot of public goods that we all benefit from that have to be funded and unlike a state we don't have a tax base to pay for it so how's that going to happen who will push these political narratives ahead who will advocate for and explain ethereum to different communities of people for their own use cases do you really think we're ever going to be able to stop making the argument and the internet has spread to every corner of the planet but we still have to talk about it and defend it and explain why it should be neutral why it should exist if you think about it even democracies that have lasted for hundreds of years we're still needed to make the argument about why voting is important and voting rights and civil rights matter we're not going to ever stop talking about ethereum if ethereum is still an infinite game that we're all playing so who's going to you know push that story forward who's going to explain it who's going to try and understand it oh that's backwards uh who will react to new and unexpected problems remember ethereum is extremely uncertain uh could you have predicted what it would look like today five years ago I don't know if you could have how will our community retain a live player advantage to solve the problems that you know we don't even know about yet and finally if ethereum is decentralized then how should that influence the organizations who are part of it how should we think about our role in the ecosystem there's this fundamental tension there's a lot of work to be done now and there's probably a lot of work to be done in the future and the people and teams and organizations of various kinds will have to do that work but we're skeptical of organizations we're very aware of how other movements other technologies have failed in some ways in part because the organizations that Steward them have been captured or failed in many of the innumerable ways that venkatesh talked about as well so I want you to imagine this huge design space on one axis there's the maybe type of organization corporations Dows non-profits co-ops guilds whatever and on the other axis there's the role in ecosystem what they do build applications fund public goods maintain developer tools and lots of other things now some of you are probably thinking Josh why did you make those logos so small I can't actually see them and it's to make a point we're a small community this is early days there's a big space out here that we've only begun to explore and we've only begun to answer some of the questions I've just posed which brings us to part two what is the EF what I'm going to talk about here is you know first some Basics and then how we answer those questions so very quickly the EF is a non-profit and a good way to understand it is that it's a community of teams we're not like a hierarchical organization we're kind of a lot of distinct organizations that collaborate together on some things it's made up of a lot of teams that work on tons of different stuff from client development to research to building developer tools to developing Regional ecosystems to running events like Devcon and a lot more and most those teams are pretty separate and independent from each other and in addition to the teams that are part of our EF Community we provide a lot of grant funding to external organizations to help them grow the ecosystem if you want to learn more about the EF and the basics I'm talking about we published a report earlier this year you can find on our website at ethereum.foundation so the EF has evolved in response to this ecosystem in response to some of the perspectives we just talked about and over time we've come up with our own answers to some of these questions so much been more influential on EF than others and I'm going to talk through three of these questions quickly and how we answer them so this first kind of big tension the theorem is a centralized but we're skeptical of organizations we're very aware that they can sometimes grow to be centralizing forces which brings with them risks and downsides that might stop us from playing our infinite game now remember that all this begins with a certain perspective about centralized power defy applications like Bitcoin and die were a reaction to the failures of financial institutions in many ways web 3 in some ways is a reaction to the failures of web 2 and the institutions that control a lot of the web today we've observed through history of many different industries that they're often a story of centralization and re-centralization of power and with that comes all sorts of risks I probably don't have to list now ethereum is different maybe because the protocol does not depend on institutions and it's very resistant to capture but we should also we need to care not just about the protocol but everything around it all the people and organizations that make it useful to people we should care about ecosystem decentralization as well if you want to learn more about the history of this I recommend this great book by Tim Wu called the master switch and if you want to read more about how it applies to crypto saffron Huang and I wrote a great article well I thought it was great an article about this topic which you can find at this link so one key thing to understand is that centralization doesn't happen you know always for bad reasons it can happen for pretty mundane and innocent reasons you know as Aya talked about we're kind of culturally trained often to want to add things and often that means adding to our own power you know people have good intentions they think I've only had more money more power more influence I could do more good in the world and that's good up to a point but there's lots of obvious ways that it can go sideways eventually you start to sound a little bit like this guy our answer in part is to from the beginning adopt this philosophy that pushes back against those intuitions even when they seem rather innocent this is of course subtraction I gave this concept a much more thorough treatment earlier today so I won't talk about it too much but the idea is that the EF wants to become less important over time not more important we want to make space for the ecosystem to grow around us and you can see this in some of the ways that we act you might have noticed that EF is pretty quiet you might not know a lot about it we don't try to attract a lot of attention to ourselves we spend a lot of time trying to help others grow and become independent of us to become better than us at a lot of things and we have this layered approach to allocating where we involve various parts of the community in helping make decisions about where to provide funding to the ecosystem basically we're trying to be the exact opposite of this guy if you want a simple illustration so second question there's a lot that has to get done we talked about tons of things so who's going to do it a conclusion you can reach pretty quickly is that it just cannot be the ethereum foundation alone think about everything we talked about and then think long into the future for decades and centuries one organization could not possibly do all this it could not possibly do it all well and even if somehow we could it would be a huge centralization risk to our community it wouldn't be the right outcome the answer clearly is that there needs to be an ecosystem around us and Beyond us that is capable of meeting these challenges and adapting to new ones and this is just taking us right back to subtraction the EF needs to become less important over time as the ecosystem grows and becomes more complex and more able to do these things the ef's question is always just how can we help one way we do this is by helping the founders of new organizations that expand and strengthen our ecosystem the Dow research Collective Xerox Park and the Newark Foundation are just a few of the organizations we work with recently and that we work alongside today another way we do this is by choosing not to do things and this is probably an area where we sometimes you know get some criticism but again if the EF tried to do everything we we wouldn't be good at it and it would create a chilling effect that might limit other people's you know intuitions and motivations for contributing to the ecosystem one example of this is that you might know that the EF does not contain a team that's building a consensus or what used to be called an eth2 client back in 2018 this wasn't an obvious choice but today there are five independent consensus layer clients that are live on mainnet today it's an extraordinary success for our ecosystem so third question how do you create an organization that can react to a rapidly changing ecosystem this is definitely a work in progress in just the last five years the ecosystem has trained changed radically and the future is likely to involve even more change growth and evolution this includes the ecosystem growing around us and taking over responsibilities that you know historically the EF might have been responsible for today there are Dows with treasuries larger than the EFS who now contribute on their own to funding those public goods we need to always be reacting to this because we're trying to fit around the ecosystem and not replace it one way we do this is we have this community of teams approach where there's a lot of independent decision makers um you know it simply our org is a bit decentralized the f is this community of teams that can often act quite independently from others which means that when something new happens the EF as a whole doesn't have to like top down pass down a memo the team that knows the most about something just goes and does the thing that they should do another similar idea maybe is that we you know have this layered allocation approach we know that we're not the experts in everything that there's people throughout the ecosystem that know maybe much better than any team inside the EF what to do about something so we involve them in providing grant funding and of course we also involve the community by putting a lot of funding through clrs for example Bitcoin clrs and CLR dot fund to allow individuals in the community to also allocate funding and the EF has a pretty flexible internal structure one example of this is we don't have a lot of titles I don't have a title if somebody asks me what I do I just explain it it takes a bit longer but it's often more accurate to what I'm actually doing at that moment and gives them a lot more information titles are often kind of like Richard feynman's quote about if you name something you think you know it it might not actually give you information you've just you know performed a social ritual of exchanging information and without titles we're a bit more free to adjust organically sometimes people don't want to do something because well it's not in my job description and it's not in my title so I'm not sure that I'm the person to do that at the EF it's a bit easier for someone to say like well someone has to do that so I'm going to do it doesn't matter if it's not in my job description and this also enables people to organically move between teams it's pretty common at the EF for someone to be on a team but really contribute to others as well there are trade-offs here right we're not a perfect Organization for all needs an organization's culture is often defined by what costs we're willing to accept what trade-offs we're willing to accept we're willing to be bad at one thing here is that more flexibility internally also makes the org less legible I can't just call up an org chart that shows me exactly what everyone's doing because people are reacting dynamically to us changes in the ecosystem and giving a ton of Independence to teams also creates operational complexity there's not many standard processes and it's not just a fit for everyone some people want to work in a different kind of environment and that's okay but for those that do want to work here it can be a very good fit so one thing that I talked about the end of her talk is you know in the future probably there are other organizations that can benefit in some ways from what we've learned from our mistakes and our successes there will be ecosystems contained within our ecosystem and organizations in the early moments of those ecosystems might face similar challenges to what the EF has they also might want to pursue a strategy of subtraction of making space for others to grow around you and distributing control to them rather than trying to do everything the simple way the additive way doing it yourself so maybe there's someone in this room today who's starting a new Foundation a project maybe you should think of a subtraction too part three what might else we build together over the years I've spent a lot of time at ethereum hackathons and often talking to developers who are new to the space and a really common thing is that it can take a bit of time to figure out like what do you build with this blockchains are pretty strange things we don't really have precedence for them it can take a while to figure this out you know people think okay it's a secure database I'll put Healthcare data on it or they'll think okay it's just a payments platform I don't understand why the rest of this stuff exists I'll build a payments app it takes a while to build an intuition for it their preconceived notions about you know what a blockchain is what ethereum is limit what they can create it's not that they didn't have the tools or the skills or the time maybe they just hadn't got the ideas right yet I think it's possible that there's a similar dynamic in our community and how we think about building organizations to move ethereum forward a lot of people tend to think well okay this is Tech so the community the ecosystem should look like other Tech ecosystems but ethereum isn't like other Tech and it doesn't want to be and the future it doesn't always look like the recent past it Rhymes but it doesn't repeat so maybe we need to expand our frame of reference to think about what other organizations should exist in that design space maybe we need to explore more of it so today maybe I've expanded your idea of some perspectives that help people you know see what ethereum is every one of these a source of inspiration for what we might build what our community can be or should be each is full of lessons and historical references let's take just one example and look at the lens of ethereum as a political Community or a political organization a state something of that nature if there's truth to that framing then what inspiration can we draw from it well one common way of kind of understanding or conceptualizing conceptualizing a state is divided into three segments the government or the state the private sector companies markets and capital and something called Civil Society Civil Society is this third sector not civil as in nice but civil is in relating to Citizens and their Community it includes organizations and individuals who are neither the government nor private corporations but a third thing a separate thing often they have acted as a check on the power of the state and the market and throughout history organizations that fit Loosely into this category have played a critical role in creating democracies maintaining democracies expanding civil rights and holding people accountable and I think in spirit a lot of the organizations that fit in this bucket have a lot in common with ethereum's values the value of bottom-up organization the dangers of centralized power now ethereum doesn't have and will never have a government analog and it already does have a vibrant private sector so if you frame ethereum as a political project maybe ethereum Civil Society is something we should aspire to maybe we can take inspiration not only from the organizations that built the web but also from organizations that built democracies maybe there's other Role Models out there for us remember this is about inspiration not pattern matching ethereum Civil Society of course couldn't look like that of a nation-state we have different problems we have different opportunities for instance maybe our you know civil society and private sector overlap is a lot larger maybe ethereum gives us the tools for there to be profit-oriented corporations or Dows who can also feed those profits back into public goods we have these new tools built on ethereum like Dows and defy and uncensorable software that expand the design space of what might fit in this box there's this great Frontier being explored primarily by Dao's in the Dow Community great credit to them and our civil society also would not be limited to One Nation or one culture but the incredible range of talent and Innovation from a truly Global community we're already seeing the emergence of something like this there's only a few things in this box but I know there are many more nomec quadratic funding organizations Xerox Park protocol Guild the East acre community and many many more organizations dedicated to something bigger the organizations that are not just users of ethereum but who are supporting the ecosystem rather than just building on top of it I found this quote somewhere um I think it's a pretty good one and it's true ethereum has a soul but Souls like ideas and values and philosophies they need to inhabit something they need people and teams Dows companies organizations to act on them to make them real protocols need a soul but Souls need a body not just one but many thank you very much [Applause] thank you so much Josh pass that to the next guy all right so next up we have Marius Van Der viden who is on the Geth team and works on fuzzing and testing and some other things I know Danny Ryan likes to take all the credit for the merge but these guys played a crucial role as well and he's going to talk about some of the bugs that they found and maybe some of the things that could have gotten horribly wrong but didn't thank you yeah I I was actually surprised that uh that so little got wrong with the merge and I'm I'm really happy to do it to to stand here today and and say that we didn't kill eth um but we tried to and this presentation is a bit about some of the strategies that we use to kill eth and it's a big part of the presentation is about some of the bugs that we found some of the interesting issues that have have popped up during the merge testing and also uh before that during our normal testing so today I'm going to talk a lot about consensus issues consensus issues are differences between the implementation and the spec I think that's the big thing about ethereum we have a specification and we have multiple clients implementing the specification so for the execution layer we have four different clients that Implement exactly the same thing and we need to make sure that they do exactly the same thing because if if one implementation um uh rejects a transaction that they that the other implementations accept then the chain will split into two and uh we want to prevent this and so we over the years we developed a bunch of testing strategies uh for exactly these problems and um one the newest one that we developed for the merge are Shadow Forks basically we take a copy of the blockchain we configure some node some of our nodes with the new rules and at the merge transition the new the new nodes create their own chain which is in parallel to the main to the main chain uh which what is really interesting about it both chains share the same state so all of the transactions that are valid on one chain are also valid on the other this means we can we can run tests with mainnet load which is sometimes very important to test for performance and also later on we will see a bunch of issues that came up during Shadow forking that we wouldn't have found otherwise another big part of what we do is differential testing basically because we have these different implementations it has a we have a we have a really nice uh we have this really nice property that we can verify them against each other so we create an input we give it to the different implementations and then we collect the outputs of these different implementations and verify that everyone does exactly the same thing and there are different strategies to generate these inputs we have for example the ethereum tests which are just static test cases where we know the answer for for the test case but we can we also created fuzzers uh for creating just random mesh transactions and and contracts to test the different implementations um something new that we also did during merge testing is create malicious nodes um malicious notes are basically folks of uh client software that does that changes some of the rules and so malicious notes can insert bad transactions change header fields and really big values or no values and um can try to break the other nodes on the network these malicious notes can we have them for the consensus layer and we have them for the execution layer and the malicious consensus layer nodes can for example double vote so vote on two different uh to to conflicting blocks which would mean that they can be slashed um or use fake signatures send something some weird Network packages and just in general try to cause Mayhem on the chain and this is a non-conclusive list of some of the testing tools that we have built over the years um for example go evm lab is a toolkit for evm testing that we use to um create a test case executed on on a client and collect the the output from the client we have Hive which is a really nice continuous integration regression testing Suite where we have we run these ethereum tests which is a set of 48 000 test cases every night against the different implementations and verify that nothing has gone wrong when they update something and um then we have these malicious nodes both both on the CL and the El node the CL and the El layer and then we have some companies that we work with kurtosis and antithesis for fuzzing and and test Nets these are like bigger test Nets that we that we set up run once one time through the transition and then then verify that the transition was correctly and then we scrapped the test net and and start from start fresh and then we have some some kind of one-off tools uh like TX first which is send some interesting transactions it's not really for finding bugs but more for creating load on the network so if we create a test net one of the first things that we do is use TX first to basically Hammer the nodes and see if they if something breaks the uh with much of us was a one-off tool that we used to First the engine API and we have the beacon first which is a tool that is has been around very long and fuzzes the different Beacon clients and found a bunch of interesting bugs okay so the rest of the talks is just talking about some of the interesting bugs that we found over the years um this bug was found by Martin right before the merge so whenever we have a whenever we have a consensus upgrade whenever we have a fork we actually we ramp up testing we we take out all the all tools that we have and and try to break it um here the Visa client had a had a bug in the gas calculation as you can see there the gas goes down and at some point there's an underflow and the gas goes extremely high this is a consensus issue because other clients will compute this correctly and on networks where biso is the only client this would actually be a Dos Vector in the network because the nodes will keep running the transaction and never stop but they stop once this amount of gases is run out which is basically never um then we have the death of kinsugi so we set up the kinsugi test net which was the the real big test net uh that we had where we also invited the community to participate in in testing and on this uh Kentucky test net we set up the bad block generator the the bad block generator from from the execution layer and it changed the blocks so for example it created a block with invalid extra data and this it actually I think it actually set the extra data and Nimbus was unable to sync because of that and then we had the TX fuzzer running the x-fuzzer created a transaction that had the revert op code in it with a and and this triggered a consensus an issue in ecmjs and so they couldn't uh couldn't there wasn't consensus issue there and then we had a the three-way consensus split which actually broke the network and this was a split between Geth uh the tiku guest combination and piso another mind um yeah so the three-way consensus split basically um we had the father replaced a block hash with its parent hash this block should be rejected because the hash doesn't match what we what we give it within the engine API um this check was actually in this in the spec but some of the clients didn't implement it correctly so bisu did not have this check Netherland actually had the check but it also cached the payloads by block hash and so we looked up the the block hash the wrong block hash and so that it was in the cache and then the the implementation just assumed that the payload was valid so this split the network into Geth and never mind viso with another might be so being wrong guess being actually the the correct client and then we kind of thought okay we're going to fix it and we're going to keep the the network running and and try to to get the network back uh back again and but during this time the bet the the bad block generator actually created another issue it created the block where the block number was set to one and in Geth we have a cache to check whether we need to sync and one issue is with tiku they executed all Forks of the blockchain there were like 30 different competing Forks uh executed them simultaneously which flushed the cache and so we queried the database by parent hash and block number minus one block number minus one was Zero which which failed and triggered another thing cycle and because we were trying to sync to the Genesis block that actually violates some preconditions so get panicked and that the tikku get node shutdown so after we had this three-way consensus split we decided at some point okay it's just too hard we're going to deprecate um deprecate the con the kinsuki test net um I already talked a bit about Hive hive we use Hive to execute a bunch of tests and most of them are spec tests so we for the specification we create test cases and I've found an incredible amount of bugs so shout out to Mario if he's I think he's sitting here yeah and so for example we had a division by zero in the exchange transition configuration call some some rules around the time step didn't really work and so I've really found a lot of issues that we have between guest and the spec and then we had to testing the merge effort which was really nice over 400 people got involved with testing the merge they sent transactions on their test Nets they set up notes reported issues and the most important thing they create a documentation so we should be better at this we should be better at creating uh documentation but we are unfortunately not so we kind of rely on the community to educate other people in the community and they also found some uh some interesting issues in in go ethereum that were kind of related on on the usage of it and uh I think they also found a bunch of other bugs so the community found a bunch of other bugs in different implementations and then we had the shadow Fox the cool thing about the shadow Fox is we are actually testing with the real Network and the real data and so one thing that uh on the on the first year of work we saw um that the gas limit was quickly dropping and the issue there was the default gas limit in gas is actually was actually 8 million and we never caught that and we cut it for the first time during this this Shadow Fox because on mainnet the the miners back then voted to to increase the gas limit um another issue was we had a memory blow up during reorks there was some weird issue where it would re-orc the note 600 000 blocks and this like increased the memory until the the node crashed um re-orging 600 000 blocks is not something that we are able to do but finding this issue actually uh showed us that the real procedure was taking to up to a too much memory and so we changed that and then we had the base the engineers um basically the engineers between the execution layer and the consensus layer is different so what consensus layer clients need to do is change the engineers of the fields and Prism use the wrong Engineers um thus it created bad blocks when the base fee was over 255 255 because one byte you know uh yeah I would really like to get you guys involved uh testing the merch was a was a was a great way for the community to be part of this um and we have a bunch of new upgrades a bunch of interesting stuff um that we also want to test so uh test the search test The Verge and eventually we also want to test the perch and this community efforts makes me really happy that so many people are interested in this are interested in contributing their time so if you um if you want to become part of this I want to give a special thanks to all of these clients all of these client teams and people involved in testing and testing the merge and I want to give a special shout out to Martin I hope he's watching right now for keeping us and ethereum stable we're also currently hiring within the ethereum foundation to increase the the testing efforts the testing team so if you're interested in getting a job at the foundation and and help us test the new updates contact Mario and yeah so for when I inevitably have too much time on my hands I have another eight minutes I have a bunch of backup slides with more cool bugs and issues that we found uh you might remember this one the bug that took down infuro basically the memory returned by the return data copy of code was shallow copied and so when we modified it broke something and we actually found the bug rather quickly and fixed it but the fix wasn't announced we created a new version of get and we kind of forgot about it and someone actually found that bug and triggered it on mainnet because they saw that only one percent of the nodes on mainnet actually still have this this version that that's broken uh the problem with was that these one percent of nodes were actually inferior uh included in fewer notes so uh for three or four hours in Bureau it went down that's why you shouldn't use a centralized RPC provider but that's a that's a that's another issue go run your own notes um and uh yeah we kind of had to take the blame for this um this one was also a really interesting one so we have fuzzles that run on OSS fast continuously and at some point we got an email hey we have a panic and whenever we get a get an email about a panic that's usually pretty bad because then someone could just send a transaction to the network and all of the guest nodes would go down and that's not great so the issue was that you can see the comments that says choose shift equals B minus one but the shift was actually B not B minus one and so that's the fixed body for the issue and we triggered this bug within the mod x pre-compile when the modulo was extremely large yeah then we have the some bug that we've got via the Bounty program so we have the Bounty program if you find something and instead of triggering on it on mainnet send us an email we're especially pissed if we if you send us an email and then go trigger the background mainnet so send us an email first talk to us and you will actually get a bounty um The Bounty size was increased to 250k and we actually quadrupled it for the merge so there's a lot of money to be had if in finding in finding consensus bugs um here when when we input in 256 min 2 to the power of 255 um it would the the implementation of Netherland for the for the modulo operator would actually negate the result-wise resulting in 2 instead of -2 so all other nodes computed -2 another my nodes computer 2 and so they would spit on a split on a different Fork and this one is a Dos via snap request that was found by by Gary n Martin from the guest team and here the issue was that someone could craft a weird get try note packet um that's that's a network packet that requested a missing try note and you could crash a the guest mode with it these kind of issues are not that bad because you only crash one node if we have crashes in if we have crashes within the evm those are usually worse because you can crash a bunch of notes and actually during investigating of this we created a fuzzle for it and the fuzzle found a second panic here we have one I actually wrote my master thesis on fuzzing evm stuff um and created this fuzzy VM program and the fuzzy VM found an issue in the copy op code called Data copy code copy x copy return data copy and the issue was these op codes consume three items from the stack destination source and length of the data to copy and never mind actually halt the execution if length was zero so you can see this is one of the tools we have where we can where we have two different executions we have two different traces of the execution and we can compare them and you can see that here the sorry here the the execution just holds and that's that's the consensus issue um then we had an another issue found by fuzzy VM was a denial of service in in bisu basically when you called the mod x pre-compile piece of wood read all of the parameters even if base length and modular links with this zero and so you could put a really really big exponent and this could crash piece of notes and this is the newest one that we've found right the the 110 22 bug was actually one I guess 122 was actually the version that we wanted to use for mainnet for the merge and it contained a regression that could corrupt the local state basically whenever we we have so we have these try notes this is where all the stuff from the all the contract State and the accounts are stored and when we modify them they need to be flushed to the disk in the same order as they are inserted into what we call the dirty cache and so you want to you want to insert if you modify d b and a you want to insert D first B second and then a third and what we did was actually insert B first and then insert a and then we saw that we should insert D but we saw that b was already inserted so the code assumed that everything was correct and we never inserted D so we ended up with some dangling try notes that's it thank you very much for coming and thank you for having testing the merch and I hope to see uh more guys more people test the merch in the future thank you thank you so much Marius for the talk and also for getting us through the merge in one piece um we've got about a five minute break before our next talk we have Barney B mono up next thank you it's gonna be a good one so stick around we'll see you then five minutes [Music] it's okay oh yeah [Music] five minutes oh [Music] should I go now okay no okay okay okay [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] foreign [Music] foreign [Music] so economic incentives are something that we think a lot about in ethereum but not many people think about it as deeply as our next speaker Barnaby mineral is a researcher and leads the robust incentives group at the ethereum foundation and he's here to talk about proposer Builder separation yes thank you Althea [Applause] all right it's my first talk at Defcon I'm really excited um today I want to talk about proposal Builder separation give some updates you know send Visa update because it's something we've been working on for some time I am the team lead of the robust incentives Group which is a research team at vf3 room Foundation looking at mechanism design game theory economic modeling these fancy stuff in the previous episode let me set a bit of context for what PBS is something we definitely have learned to appreciate more in the last years as blogspace got scarce and has gas fees got more expensive is that we're all learning what block space is capable to do so when we think of it as an economic good we try to understand what its properties are how to sell it and how to provide for it as the protocol so as V ethereum protocol we know that it's valuable it's the raw material that users take advantage of to do their transactions but we know also that some of it is more valuable than the rest for instance being first to do something or being right behind another transaction all these things that we call now Mev that led us to block wars I'm just going to read from the text here while the resistance hashtags take from home solo validators are rookies in the market of Galactic proportions to keep up with the Empire Rebels Source blocks from distant planets but the trade is fraught with difficulties indeed because block space is so valuable and because some people got so good at providing it it has happened even before proof was taking proof of work but parts of the block would be constructed by people who have specific expertise in making the best use of a valuable blog space so we call that Mev gef this was provided by flashbots and in this Mev Gap Network Searchers who have these very sophisticated players submit bundles to at the time what were trusted block producers essentially mining pools who were producing the blocks so these bundles they are very valuable but at the time that the Searchers submit them they don't want anyone to see them because the value the value of a block could easily be copied by your malicious block producer which is why the network relied on only trusted block producers when the block producers receive the bundles there's code there may be combined with one another essentially you're trying to get the most juice out of the scars block space that you are providing as a block producer so how does that look today in proof of stake it looks very empty because I'll add more to it but today you have essentially two options there could be more in the future you could decide to forego this smart network of capable block Builders and build your blog locally just grabbing transactions from your local mempool so in proof of stake the con the clients are divided in two there's the consensus client and the execution engine you're just listening passively to user transactions and including them into your blog or you can summon this much more complex external network that involves many parties so let's talk a bit about them I'll go from right to left as I feel this is probably the more intuitive way to go about it so users send their transaction they are public they are broadcasted around the network The Searchers pick up some of these transactions and make these valuable bundles they forward these bundles to builders and Builders are responsible for making whole blocks and these whole blocks are vent forwarded to relays and the relays act as middlemen in this market between proposers who are the bonded validators in proof of stake and Builders why we need this intermediary is again because these opportunities that Searchers found they are kind of private and so we don't want to reveal them too soon to the block producer we need to make sure that we have a commitment that the blog producer will use the block provided to them by the Builder before the block is actually revealed publicly so the relay is viscosed to the end in this system my Boost is a little piece of software that you can run next to your node so that you talk to this network of relays and once the relay says I have a very juicy blog for you if you use it I will pay you a certain amount of if you sign that block or you sign that block header as a as a Blog proposal via this Builder API with more detail on on this we can really separate it in in three phases the first phase is the bidding phase where the builders and there are full blocks to the relays the relays have to validate that the block is valid and there's no consensus error and that indeed the bid that the Builder declares corresponds to the value of the block in the second phase the beat selection The Proposal listens to these streams of Beats from the relays by default to them have Boost selects the higher speed that the proposal has received and at that time the proposal signs the beat with the builder API and they can no longer make another block they they don't know the full content of their blog but if they were to make another block themselves now they would have signed two different objects and they could be slashed for it in the third phase the relay receives the signed bid from the proposer and at this stage it's confident that it can release the block to the rest of the network and there's not going to be a copy that is being made a few numbers that I got from a few days ago more and more validators seem to choose to use these external block building facility which today leaves pretty much totally out of the protocol 50 as of I think that was Saturday plus both flashbots still operates the dominant relay so 83 percent of the blocks which are received and signed by proposals have been relayed by flashbots and there seems to be seven active relays some of them are all run by the the same entity and they let's say satisfy different trade-offs that the blog proposals may have when they want to to summon this external network foreign so what is PBS this was sort of an intro in what I described before you can think of this as PBS PBS is more of a philosophy so it's proposal Builder separation and it's the idea that as the protocol gets more complex and as the roles of block proposals become more valuable it may not be possible for the blog proposal to do everything and so parts of what the blog proposal does could be outsourced to to third parties outside of a protocol foreign these days I think of PBS as kind of two different things that we've maybe wrongly put together so I call it the proposal Builder separation separation on the first site I think of PBS as a market structure or a way of organizing the duties of The Proposal with respect to the protocol so again there are duties that the blog proposal especially the average blog proposal who's taking from home can't or won't do for instance making this execution block that contains the valuable block space in the future making dong sharding blocks which will contain a lot of data and require very high bandwidth to to propagate maybe even further into the future once we have statelessness Computing the block witness if we want stateless blog proposals that might not be possible for them and even further we might require validity proofs along with execution block to show that the execution is correct so that would rely on enshrining some ZK evm into the into the protocol and so it seems to me that the protocol is becoming more and more complex is asking more and more things to the to the proposal and so maybe it's a good idea to think of ways that we can organize these markets the second half of the separation is is not really the organizing principle but it's really the shape of the market so I think our first half a bit as the legal system he defines who are the players and the second half is more of a business logic what exactly is being sold and what are the contracts that the proposal enters into with these third parties today for PBS when it comes to the execution block and block space the allocation mechanism is a whole block auction so the proposal sells off their entire rights to make a block the current design allocates the right to make the exact block to such a third party as we've seen in MAV boost being a bit more precise about it may boost the allocation mechanism again is this whole block auction and the market structure of map boost places the relays as kind of brokers who broker these deals between the proposal and between the builders a relay they we expect them to to guarantee the validity of the good but we are not protocol actors and we could fail these are a few ways that they could fail for instance they could receive a Blog from a builder and fail to properly validate that it's a valid block this has happened before we really could also [Music] not validate properly that the bid made by the Builder actually corresponds to what is being paid um to The Proposal and it could also fail Midway into the deal and for instance deliver the block late or not at all in which case the proposal doesn't have the opportunity to to propose the block themselves and misses out on some of everyone's so this is kind of the idea of in protocol PBS is moving this systemic part of the system into the protocol so in the in protocol PBS design the protocol becomes the broker and is the one that guarantees that if deals go south The Proposal is still compensated for it so the Builder in this case whenever we make a bid that bit is binding even if they deliver an invalid block or if you don't deliver it at all they would have to pay the proposal up to the bid that they have made it's a bit more detail on this again we can use the same framework or division to to understand this Market in the bidding phase the builders send directly the bits to the proposal for instance there's a couple here five seven eight if the beat selection phase which is slot one The Proposal selects a bit and makes a Bitcoin block that commits to the bit which you can see in green below so seeing this once the proposal makes a beat so this is part of a consensus rule whenever the proposal makes a block you have a row of a testers which is a very large set of stakers who vote to say we've seen this block and this block should belong to the chain so these are testers will give weight to the beacon block and we make save the Block in a way that the Builder sees it and the Builder says well there's no real way for the proposal to go back on their commitment to my bid now and so I feel confident that I can release my block and it's not going to be reverted and stolen that's Slot 2 at the delivery stage the Builder releases the Builder block that contains the the payload and once again you have a row of attesters that makes the Builder block safe so right now what I describe is really the vanilla version of in protocol PBS but of course you may as a proposal your only value may not be you just want to maximize the amount of e that you get and you might want to add some constraints over the block that is being made so that you don't entirely remove your input from the Block production one way to do so is inclusion list so an inclusion list is a list of transaction that the blog Builder must either include or show that we couldn't include in the blog that they made and the only way that they can't include the transaction is if the block is full so if you're trying to keep a transaction away from a block over let's say a long period of time it becomes increasingly difficult to do so and expensive the reason is eip1559 in ethereum today if a block is full the protocol mandated base price increasing exponentially over time so if you want to keep censoring something you have to keep making full blocks and it becomes just impossibly expensive to to do so and so that's the idea behind inclusion lists another way to do it is to just let the proposal make part of the block so for instance we could do the prefix of the suffix and they could let the Builder build the rest of the block designs exist for both sides if the proposal makes the prefix the Builder will make the suffix and this vice versa so that's another way to reintroduce a bit of proposal input into the block Construction the third variant of PBS is the slot auction so I didn't really specify what the bids were but there are two versions in one version the Builder has to commit to a certain block before they make the bid and in this version the Builder doesn't have to commit they're just saying when the time comes I will make a block for you and and you can just select me because I will pay you the most and so this might be more flexible especially when it comes to things like cross domain Mev which require you to do things just in time so we have these three variants and they are not incompatible with one another it's just a matter of deciding you know the trade-offs and and what fits well into the protocol and even for each variant I think there's a bit more a bit more margin for us or a bit more parameters that we can tune so if we do a partial block option we can decide which part if we do inclusion lists you have some leeway on deciding who makes the inclusion list and when and if you auction the slot you can even tell yourself that you know this look with the option much more in advance than just the current block so I've been trying to think maybe adversarially with respect to this PBS proposal and and tell myself well if PBS is really two things a market structure and an allocation mechanism would we enshrine into protocol only the market structure and let people determine the allocation mechanism that they prefer so this is a proposal I recently posted on if research but it's it's very new so I won't talk about it today okay I want to pull out the frame a bit and and look ahead to what might a world with PBS look like so the first question that I guess we ask ourselves a lot as protocol designers is putting things into protocol is really hard and if we do that and when people don't use it there's not really the use for all these overhead and so the first question which I think is natural is would if we had this in protocol PBS would proposal use it one reason why we might not want to is because we could still strike deals of chain with Builders and get the Builder blocks included even though they receive beats on some kind of official gossip channel for the beats is a novel proposal which is called mev's moving it's a mechanism that takes the block value and Smooths it across all the stakers in the protocol rather than giving it only to the current block producer that would make it binding because it would force proposals to accept the higher speed received on this official B Channel but there's more questions there in terms of incentive compatibility that I think we need to to look at another question is would relays still exist I've been talking about this official beat Channel there's questions on how to design that but it could still be the case that proposal would listen to out of protocol bits that come from relays that we prefer for instance relays might be very good at getting you the the best beat very fast in time or they might be constraining the Beats for instance with censorship so as a proposal if there are transaction you don't want to include you could listen to to some relays that that provide you beat with respect to that some Builders may even prefer to use math boosts since they don't need to put the front Capital but it's to the proposal's risk in that case pulling a little bit more what does the protocol see it's a question we asked ourselves when we introduce the ap1559 and the answer was well it prices the congestion in the network it prices the value when the next person who isn't included would be ready to pay to get included and as we add more of these economic mechanism in the protocol we find that the protocol gets more introspection about what happens and the value that people using the protocol get out of it and so one reasonable question is what does the PBS bid value exactly and I think ideally that beat should be the total extractable value that the proposal's position confers um to The Proposal but is it in reality does the pp will the PBS bid really represent this extractable value can it be achieved with a single Builder can it be achieved with a distributed Builder there's more models I think that we can work out on this another way to think about it is made the PBS bit be the spot price or value for the block for instance if there's economic value from selling the rights way in advance before your slot so that people can plan for it and possibly make promises in advance with the PBS bid we are not really capturing that or is there economic value to selling rights to multiple Builders at the same time so these are I think very interesting questions with respect to to PPS putting the frame even larger and especially in this world where more and more of his proposal Duties are performed by Third parties or by Builders is where should the ethereums if a room as a protocol where should the concern stop so we could decide that you know if proposal don't want to do the things that they are told to do by the protocol and if they want to enter into this third party relationships well the protocol can't prevent them from doing so but doesn't have to actively help them either for instance we could keep including more things into the Builder API at the client level just so that the communication can happen between the proposals and these third parties but call it a day and let the out of protocol markets develop there We could decide to draw the boundary a little further so this is the distinction I was making We could decide to say well the protocol should guarantee some kind of Market structure for the proposals because that makes them safe and it backstops certain bad cases for instance relay failure but it doesn't have to determine all the mechanisms so my Pepsi proposal is in that direction and then we could also decide that well all the markets that the protocol requires for these third-party relationships they should be determined at protocol level and we should be able to find the best way for these markets to to organize I at the moment I'm I think I'm still exploring all options and I think we all are but as a protocol oc5s it might be more and more difficult to say for sure but we got it right the first time around and that it's still right uh 50 years later so I'm in complete ways to think about it I think these are really the criteria that help us decide between these questions and the first is what is the risk of a protocol so if there is a very systemic dependency on this third party relationship does that put the protocol safety liveness or throughput properties in jeopardy when we do things at protocol level does it maximize welfare for instance increasing capacity serving more user transaction that's a no-brainer for sure this gets us more value into the system as long as of course safety and liveness are preserved so so these things are good this is maybe a hot take but I've been seeing well nav boost you are selling off your whole rights maybe we should go back to a world where proposals have to make the block themselves but I'm not making this argument entirely either I think sometimes Outsourcing things to third parties it might be good there might be much more incentive alignment when the third party really wants something to go into the into the protocol so there's also that to weigh in the scale the final thing that we might consider is the risk for the proposal themselves so should the through the protocol backstop possibly risky behavior that the proposal engages in so yeah I'm asking more questions when I have answers for but this is also what's I think interesting in the in the research I'm not alone in asking these questions there's going to be much more talks about PBS at Defcon and I definitely encourage you to to check some of these out and if you think these are interesting questions I would also like to invite you to apply to our research team as we are currently looking for someone with a strong research background who knows mechanism design and really loves it and wants to help us make sense of all of it thank you for your time [Applause] okay I think I'm supposed to go off stage thank you [Music] thank you [Music] [Music] foreign [Music] thank you [Music] thank you foreign [Music] foreign [Music] [Music] [Music] foreign [Music] foreign foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] welcome back uh we had a little break there finishing early keeping on time uh that's great from Barnaby uh definitely you know hardening the economic aspects of of the protocol layer is super important he's done great work all of his simulations agent-based simulations of uh of 1559 were pretty fundamental um and now we are fortunate to have uh one of the true unsung heroes of the merge uh a guy who spun up testnet after test net after testnet literally dozens of test Nets kept them all alive um I certainly like remember talking to people in the early days of spinning up these test Nets and it was like Wow Perry is really doing an amazing job it like you know taking all this devops work and and crushing it so let's give a warm welcome to Perry [Applause] ah hey thank you so much for that introduction oh nice that's how I sound um so hey I'm going to be talking about the Quest for the best tests today we're going to look at all the different testing tools that we used and I'm going to be talking about the bugs that we didn't find on mainnet if you were here for two talks before mine um Mario spoke about the bugs that we did find so I'm gonna do the contra um the first part let's talk about what we're actually doing with testing why is the merge complicated to begin with well we have roughly 20 different client combinations and regressions sneak in very easily you might see a regression in one of the client combinations but none of the other ones and that's very tricky to pinpoint the specs for an active development there were quite a few of the early test Nets where we kind of didn't pin the spec version so someone was implementing something on a different commit so of course the test net broke so we had to actually figure out how to treat modifying specs along with modifying test Nets along with 20 different combinations all changing at the same time um communicating and debugging it's great that we have a decentralized environment it's horrible if I have to wait for the Australians to wake up for anything um it does take quite a bit of effort and quite a bit of planning on our side we had to kind of schedule around people picking up their kids from school we had to schedule around people waking up in Australia we had to schedule around Americans a lot of different things and figuring out how to do all of this in a reliable Manner and on a timeline was crazy um the last one was debug knowledge we were really surprised the type of debugging you need to do for CLS and years are totally different we had to see how to bring all of that competence in one place and how to actually figure out when something goes wrong and they did go wrong a lot in the beginning um and the nice part is if you figure this out once we figure it out for future test Nets so happy that that worked out what could possibly go wrong so the merge has two parts the consensus layer and the execution layer and they communicate via this thing called the engine API so if you mess up the consensus layer you're gonna have a network that can't agree on anything if you mess up the execution layer you have a network that can't do anything so those are the two high level problems that we're in trying to ensure that never happen um just to enumerate a bit from the regular testing world what sort of tests even exist so we have unit tests and at least in our decentralized uh world with all the client teams the client teams take care of this themselves we don't have to do anything no coordination work from our side uh this makes sure that there's no regression but these are localized regression something that they might have seen on their client based on how they've built their client we have integration tests part of them are done by client teams so for example the Nimbus team spins up a local Nimbus Network to make sure that their stuff can always talk to each other then on a high level we do some interop tests so these might be devnets or whatever they are then we have system tests and this is where external coordinators come in so I'm going to say the EF was part of the external coordinator for the testing efforts so these tests end-to-end functionality we spin up a test net we run transactions we withdraw we set up faucets we look at explorers work and so on and then we have production tests this is something you guys might have seen with shadowfox so production tests sort of work on a prod like environment and I'll go into what shadow Fox are later on but on a high level we inherit all the complexity of mainnet and this also includes public test Nets so if you guys remember Kiln or kinsuki that falls under this bucket so you have everyone all over the place testing their things layer tools are deploying over there we have random D5 protocols deploying over there and these find issues that only happen on real world workloads you probably can't simulate them any other way so the second part I'm going to talk about what different tools we had and just give you a brief overview and just to tell you how this is going to go once you have an overview of what sort of testing tools we have I'm going to talk about what we actually did with them and what we didn't find so the first one uh starting at a high level we have spec tests it's the great thing about the consensus layer they have an executable spec they have specifications with a ton of tests client times can then import these specs and make sure that they can test them in their local CI this means whenever they're making a release at least you know that they're coherent to the spec and this is largely a sanity check it's not meant to find any massive bump but it ensures that there's no regressions happening we currently have the spec test setting running every night on on a new CI machine the second one is hype tests you might have seen this being referenced a couple of times um so Hive tests run with the simulator so and they essentially start up the clients and then run the tests against a predefined interface these are a couple hundred tests these take anywhere between I think a day or two days to run everything and a brief example of how this is is it starts up a tiny instance of another mine node it sends it two terminal blocks and asserts how the transition happens this is a lot of awesome work by Mario he should be somewhere in the crowd shout out to him and follow him on Twitter we found a lot of edge cases in this and once we do find an edge case it's always in this so that we make sure in in future updates whatever it doesn't happen if people check the website of course then we have this thing called kurtosis it's an external tool that we're working with and kurtosis obfuscates all the complexity with setting up a test line you don't have to worry about how Genesis works you don't have to worry what format that never mind needs its Genesis file in nothing you just Define it in a yaml file you say I want a five node network with this Docker image and that's what happens for you um we time this actually nightly and they think we've gone through the merge at least a couple hundred times this year um a lot of them with issues but a lot of them without which is great to see we use this also to rapidly iterate ideas so once there's a new spec version or if you want to try out a new testing tool we throw it in there first we also had map boost integrated into kurtosis so we could test it out and do a lot of cool things there the general view of kurtosis is it it checks the happy case if you can't figure out the happy case there's no point checking the rest of it so it just starts up a test net make sure everything is fine if it's fine it shows you green on your CI the next one is sync tests there's no point on a network if you have nodes that can't sync up to the network so what we do is we spin up nodes I think at a week's notice right now um they sync up to the head of the chain and then they assert whatever we specify over there so if you notice over here you can say is execution a healthy is consensus healthy are both synced are they both reaching head so you can kind of Define what side a type of syncing you want to do here um and as you can see on the right there are a ton of different options you can do and a ton of Networks and the cool thing is you can also assert bad cases you can say start your El stop once it reaches head then start your CL and then build weird scenarios there um shout out to Sam for building this he was also running it and sending a summary I think he even presented it once on Alka devs um so we could make sure that at least when we're making releases and when we merge that we can sync the network and this is the meaty one we had test Nets and shadowfox so a shadow fork and testnet help us coordinate all client teams in one place and we check compatibility largely we take whatever assumptions we have in the spec and we assert if those assumptions are true on a large level what we're doing is we're taking the Genesis configuration of any one network and then we modify a couple of values here and there and what happens when those modified values are hit is we split away from the main network but we continue staying synced connected on the gossip Network so we're importing all the transactions and we have the old load but it's on a side we it's it's just a side Fork it runs parallel to the main Network and no one cares about it except for us because we can find dozens and dozens of bugs there this allows us to stress all of our assumptions and we've done a lot of them I have a summary on how many we actually did in the end um I sort of look at this as a release test so it's kind of one of the last things we would do on any of the future Forks that we have it's kind of when we're almost figuring out are we ready to go ahead with this are we ready to move forward with with committing to this Fork is there any unknowns that we don't know yet and then we have fuzzers and in external organization called antithesis so antithesis is a deterministic hypervisor that allows us to perform Network splits packet loss all sorts of really weird edge cases we don't necessarily expect the network to be put in these edge cases but if they are we know that the clients can handle it on the right side you could you can't even actually see it but each of those is a 256 thread machine we have three of them all running fuzzles it was insane we had way more uh I've never seen that much compute in my life we actually had the IBM data center go out and buy more CPUs because we bought up all of them um yeah various fuzzers various teams running out all of them uh super cool we found a ton of bugs referred to marius's talk if you want to know what we actually found there and we hope that some of those bugs change the spec to make it a lot more stable or sometimes than implementation issue so to give you a brief idea on the testing life cycle let me tell you it's never that clean but that's what we want to hope to achieve so you have the client releases happening and once the client releases happen they go into the integration test so we make sure that test Nets can be run that integration tests work fine and once that's done we move on to test Nets and then we move on to stress tests and we push whatever we find on these stress tests onto specifications we do regression tests and then we do fuzzing and hopefully whatever we find in the last couple of stages go back into client releases so that's a kind of a nice way to look at a full life cycle of how testing would work we're hoping to adopt the same life cycle for future test Nets maybe we moved around a tool here or there but that's the general idea and the end game what did we actually do um it was really hard to find a graph that actually fit all the test Nets we had that's how many um so we had we started off in April of 2021 with realism and since then we've had four public test Nets that anyone could permissionlessly join into we had six devnets meant for all the client teams we had um five Gully Shadow Fox and in the end 13 midnight Shadow Fox and after all of this we had three test net Fox and only then we hit mainnet so the whole number of just testing hours in the merge is insane I'm quite sure if we added it all up it would be at least a couple ten thousand hours put into this um so what didn't we find this is a really interesting part because even though we have all of these Cool Tools there's still always going to be something we didn't find this 99 participation 98 participation or great blocks being produced awesome but I want to know what we still didn't find so first one um we had in-memory databases that were too low to process main net blocks it just so happened that we did too good a job of deciding which machines run our test Nets which means we didn't have any resource constraints and we kind of missed the people running nodes on 8 gig ram machines or people running on 16 gig ram machines we didn't account for that or we didn't account for older versions of ram being used whatever it is um another one that we missed is non-optimal block production um we were super focused on making sure that we didn't see any zero transaction blocks on the network we didn't compare that to what the optimal blocks on the network could be so it is an optimization problem of course and it is an awful that on mainnet we have some reduced load but it is something we missed and something we probably should look into in the future um the next one there was a really specific way in which the terminal blocks could arrive that broke nethermind and it broke Netherland by causing missing receipts and we only noticed that issue when there are deposits being made so we completely missed this and for what we still yet to figure out why but this is mainly an issue for lodestar Netherland and no other combination or at least we didn't get the uh Memo from other breaking combinations so lots of another mind figured that out on day one of the merge and it I think it was passed like a day later um another one that we didn't think of all of the Shadow Fox didn't have any nodes syncing up to the network after the shadowfuck was done which means they weren't serving sync data and all they were doing were keeping up with the chain which is great but constantly thinking on minet also adds load on the machine so we weren't accurately simulating that so potentially on future shadowfox we're gonna have to add a bunch of syncing nodes that start up later on to see what could happen there and the last one that we didn't find was a failover beacon note scenario a lot of people are really obsessed with making sure they don't miss a single attestation which means they have multiple Beacon notes set up and that's something we just never did so a lot of the requests were just being sent to the primary Beacon node and not the backup so when the failover happens the backup wasn't ready um I think this has also been patched right now but it was a really tricky thing and we should try more failover backup scenarios in the future I guess um one cool thing about why all of this wasn't found most of them are optimization bugs um as you can see merge still went fine but we could there's still some room for improvement and it's a really hard trade-off to make between do we want to spend more depth time in fixing these optimizations or did we want an earlier merch and that's kind of the tricky thing do we want earlier fox or do we want completely buckless free free um free Fox no idea but we're definitely going to be adding resource constraint make machines to the mix next time we're thinking of just getting a bunch of Raspberry Pi's and doing some Shadow Fox on there see what happens there and another reason some of the bugs appeared but they didn't appear on the shadow Fox is last minute commits um The Last Shadow folk was I think a week before the March and the last releases also happened a few days before the March so yeah it's a hard trade-off um if you want to join the testing efforts please join Mario Vega his email address is here send in your information there and I think I supposed to okay I was supposed to have one more slide but I will just talk about that other slide over here um so we have a bunch of testing tools that we've completely open sourced if you're someone who wants to run testnets and kubernetes if you're someone who wants to just run kubernetes nodes if you want to set up your own networks we have easy ways to set up Genesis if you want to um yeah use the same stuff we use for shadowfox all of it is completely open source quite a few organizations are actually reusing are our stuff so shout out to them contribute back whenever you can you can find most of the tools on either on the ethereum GitHub repo or on the eat Panda Ops GitHub repo one of the two and yeah that's about it that's most of what we did and did not find on the merge does anyone have some additional questions or something can we do questions I don't know okay that's a no I think so I will yield the rest of my time um thank you [Applause] [Music] all right great uh thank you Perry thank you for your amazing work uh testing the merge uh it's so good that you know we went off spotless um we have a little down time here um before our next panel I know you're going to want to come stick around for the next panel uh on zero knowledge it's the future of you know this crypto space uh so um we will be back in uh the top of the hour honestly [Music] foreign information [Music] [Applause] [Music] foreign [Music] thank you [Music] [Applause] foreign [Music] [Applause] [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] [Music] foreign [Music] well howdy we are working off our our post lunch uh you know digestion I think we have one of the best panels of the day if not the conference I think you know for a long time in ethereum we've been talking about zero knowledge is the future and when we have zero knowledge everything is going to change and you know zero knowledge proofs are really the future of this space so we have a great panel we have Albert who uh helped Shepherd ethereum Foundation through some hard years in the fair market uh gub sheep of the sheep Clan uh the founder of Xerox Park doing some really interesting experimental work with with uh knowledge proofs we have Barry of the white hat Clan who's been around the the from the very early stuff I remember even at Defcon 3 and then we have vitalik who uh named gave labeled non-cra advice sharding plan as dunk sharding so uh let's give them a warm welcome thank you awesome thanks so much Evan and uh good afternoon everyone as Evan said my name is Albert and I am delighted and honored to host this panel which is ambitiously titled what to know about zero knowledge but first I need to apologize to all the cryptographers out there oops we did it again we took a turn from cryptography and how should I say it expanded what it means and I'm very sorry even though it wasn't my fault not even one bit it's actually more of these guys's fault but I apologize nonetheless you see as cryptographers so often remind me this already happened with the word crypto a long time ago like six whole years ago crypto used to mean cryptography but now it generally refers to a much broader set of things such as cryptocurrency or just this kind of circularly defined quote-unquote crypto space and here in a case of History if not repeating then at least rhyming something similar has happened with the term zero knowledge or ZK when I thought about this I was like it's almost like someone somewhere went through an escalating series of dares like I dare you to hijack the meaning of the word crypto oh you did it well that was too easy because you know the word cryptocurrency even has crypto in it how about you do something really ridiculous like take an objectively defined terms such as zero knowledge and repurpose it to include stuff that is literally not at all zero knowledge and so that is the first thing to know about zero knowledge it no longer means zero knowledge in a technical sense only rather zero knowledge or ZK has morphed into referring to just about anything that utilizes certain proof techniques proof techniques that give you actual zero knowledge in some but definitely not all cases so to summarize ZK used to mean zero knowledge as in I am able to prove that I know something without revealing anything beyond that fact but in practice ZK now tends to refer to a broader usage of proof techniques that have some important properties now what are these properties a very incomplete list includes Precision correctness and succinctness for example when ZK is used for privacy that's an example of high Precision because you can provide better privacy when you are more precise about what information is exchanged and succinctness is another way of saying that in some instances ZK is used as this compression super weapon now compression is super important especially in a blockchain context because as we know the cost of storing data can be quite high and so that's why for example a ZK roll-up doesn't actually provide privacy rather it provides a more succinct guarantee of correctness but anyway enough about how I think about ZK my thoughts are both surely flawed and incomplete which is why I have these three fine gentlemen up here with me today gup sheep Barry vitalik thank you so much for joining every time we chat I learn a ton and have a lot of fun so I'm excited to have another conversation I hope everyone here enjoys it as much as I will so let's start with some introductions specifically dub sheep and Barry since I figure people are a little bit familiar with italic um Gob sheep Barry can you share a bit more about what you do on a day-to-day basis so with you gupsheep cool hey everyone I'm gup sheep I work with the Xerox Park Foundation along with Justin glibert and a handful of other folks on the day-to-day most of our projects are focused on some combination of what we call application Level r d and what this roughly means is trying to skate to where the puck is going on you know if ethereum public blockchain slash New Primitives from applied photography get let's say 100x better over the next two to five years what is that really going to unlock so we help support this you know relatively tightly knit but uh you know loosely associated group of teams working on anything from applications of zero knowledge cryptography to crypto native gaming or what we're currently calling autonomous worlds yeah so I'm Barry I work with the PSE team at the ethereum foundation and basically we work on applying zero knowledge proofs to achieve both private private and scaling applications so some of our projects include like ckvm we also have some like private voting some private coercion resistant voting stuff um uh yeah that's that's mostly what we work on I also work with other people in the ecosystem to to build these tools out I'm in fact having a lot of fun working with some of the people in Xerox Park on several different things at the moment yeah speaking of which one of the things I really love about both PSE and Xerox Park is and you both have a desire to solve what I would characterize as the actual problems you know as opposed to settling for these like superficial or defensible Solutions and I've seen both of the the groups are really the collections of people demonstrate this deep sense of responsibility for how to go about doing things and a willingness to prioritize this like Collective good so just want to say on behalf of the broader ZK ecosystem which as I noted we kind of repurpose to mean something bigger now uh we're really lucky to have all these groups and thank you very much for that um and so on that note let's dive in on on the core topics here today one way that I like to learn about a topic is to ask people who know more about that topic than me which definitely includes all three of these folks here I like to ask people what has been surprising to them what has surprised them and so when it comes to ZK what has been surprising over let's say the last three years you know it's been three whole years since the last Devcon that's a long time anywhere but especially in this space um and so again I'll kick things off with gupsheet but we'll kind of have an open conversation from here yeah this is super interesting to me because actually it was around the time of the last Devcon in 2019. that was first getting involved in the space to begin with uh and when my like zero knowledge Journey was first starting and at the time the thing that Drew me in was basically a set of tools uh built by the folks at ioden III uh sir comments and arcgs which enabled for the first time browser-based proving and in browser ZK applications that were if not developer friendly at least like developer possible um you know you didn't have to like roll your own cryptography for the first time and the thing that's just been continually shocking to me is and I mean it was true at the time and it continues to be true today is I think that a lot of people find zero knowledge to be a very scary term uh it seems like oh you know this is Moon math this is something you need like you know specialization and number Theory to understand but really there's just so many ways to get started with zero knowledge and so many things that you can build and contribute to depending on whatever level of the stack it is that you have expertise on um and you know the space has just been surprisingly accessible for both math and CS technical generalists overall I'd say the second thing that kind of you know is very complementary to that is that uh as a result the space has been moving much more quickly than we originally or at least I initially would have expected I mean I know Barry has a lot to say about like ZK evm with respect to this but you know I look at my old notes from like 2020 or 2021 when I'm trying to flesh out what are some of the open like application Level r d directions and I remember like last year I wrote something like we had a student pay Ren who built out linear regression inside of a smart work and we were thinking oh you know maybe like five years in the future it'll be possible to put a neural network in the snark and you know lo and behold actually this past Sunday which was like not even a year from when I'd written that we had two teams that presented on their work on building like mnist and you know various classifiers inside of the Halo 2 proving system so this stuff just keeps accelerating and accelerating and accelerating yeah so thank you Brian um like just to build on what you said I think that like on your first point about like getting into the space I think one of the like most powerful ways you can get in now because we have all of these high-level tools you can black box out a lot of the crypto components it makes a lot more accessible um okay but to answer the original question the thing that most surprised me was uh yeah so for three years ago I didn't really think that ckvm was possible I felt that it was like just going to be prohibitively expensive and like over the last three years I've sort of learned that like oh well actually we there's a whole bunch of extra scope to kind of optimize and improve the way that we can arithmetize things so that makes me like very optimistic for the future when like Okay we okay I I think that we can do ZK AVM now and I I like the next set of things that are going to be difficult like neural networks and like private social social graph proofs and things like that are going to be super exciting to explore speaking of zkavms you know metallic you wrote and classified them in a fairly recent post of yours and and I've got a lot of thoughts how are you thinking about ZKA EVMS and how they're going to intersect with the future of ethereum well actually so before I answer I should mention there's uh one really important word that the crypto space has butchered that you forgot to mention which is inflation like remember how in you know good old traditional lands inflation actually refers to like changes in the price level of Commodities in terms of an asset and we just like totally portraited to change it to refer to the total quantity of it asset yeah that's us we're great so but anyway on the ckvm question I think it's uh fascinating uh because uh like if we step back and just think about you know like what is the ideal the kind of technical vision of eblock chain like what would I yeah you know love to see ethereum look more like 10 years from now right like the uh kind of vision that I think I gave a couple of days ago is uh imagine a world where everyone you know it whether they're a validator or there's someone else they run a node and they just run a node on their phone so you know if you want you can even stake a million bucks a piece on your phone and every 12 seconds a job what comes in and that block contains 3.6 megabytes of data and you know you download 3.6 megabytes of data because these days a plant phone planes are getting faster and faster and and you hash it and then you check it against one snark you know it checks like like three or four polynomial equations and then that's it you just know that the block is correct all you have to do is just take 3.6 a mix of data downloaded you know do a few hash it do a couple of polynomial checks and you know you magically know that this is the correct block right so in that kind of future you know running a node becomes vastly easy or ethereum becomes much more decentralized it becomes like this very theoretically nice and clean system in a lot of ways but in order to get there like we would basically have to take the entire ethereum Machinery both the consensus layer and the execution layer and stick it inside of a snark and this is always something that we've like known as theoretically possible because ultimately everything is a polynomial um you know I'm a polynomial you're a polynomial but it's uh well polynomial is the next term we're going to repurpose that's what you're saying so [Music] the challenge in practice has always been like oh you know how many constraints is it going to take how much inefficiency are we going to eat is this actually viable but you know since we saw polanky in 2019 and we saw the uh I think like unlocked a huge number of things because uh plunk was like it wasn't just a protocol it was like this medic conceptual weep when you could start separately thinking about which polynomial commitments do you use to enforce your polynomial equations and how do you convert what you wanted what you want to check into polynomial equations right and like you can do answer those two questions completely separately and so you know you can have you know traditional plunk with a kcg traditional Planck with uh you know fry and Starks you could have you know pluck up with Casey Jeep look up with Starks and like basically just research those two directions separately and um and then we're just seeing all of these amazing improvements you know if it's we've seen pluck up which is uh amazing for solving like pretty much all or make pretty much all kind of all traditionally snark unfriendly computation into something that's like maybe only medium Stark unfriendly and then a couple of other improvements and then you know we've been seeing all this amazing work on ZK VMS at the same time all this amazing work on compilers to try to make it easy to compile things and then at the same time there's a whole bunch of companies that are quietly working on ZK evm Asics I'm you know kind of hoping that now that mining has gone the you know the miners are going to retrain and become developers like literally you know you know we're going to have a amazing companies that are going to create like you know super fast DK proving hardware and like maybe in five to ten years we'll actually get there and you know you'll be able to like you know run a phone node on your phone and like you know stake as much um eat as you want and just like download 3.6 megabytes hash it and like check a couple polynomials and you know it got a good block we will have some time for predictions so I'm excited to hear what you actually want to put your foot on the ground for when it comes to what miners will do in the future that's an area that I don't think I've heard much from before and I guess building on this uh a natural question for myself and I'm sure many people in the audience like how do you all see ZK complementing the future of ethereum that can mean a lot of different things so I'm just gonna throw this out there and whoever wants to kind of run with it please do one so what about for why ZK is a natural compliment to blockchains is that blockchains give you censorship resistance and you know trans guaranteed execution and a couple you know a couple of other guarantees but at the cost of two really important things one is scalability the other is privacy well what what two properties are in our zika Snorks um exactly tailored for scalability and privacy right so it's like the two almost fit together perfectly like you know these pieces of a puzzle and you know one just like completely solves the weaknesses of the other so I think you know they're a perfect fit and like there's a lot of applications where if you just uh if you only have one they don't make sense but if you have both they just suddenly start fitting together like the way that I think about this is that like blockchains are creating these massive data sets and these data sets are available and public and there's so much Rich information that's going to be there it's going to be very like in in order for in order to allow people to make like proofs about this information you need privacy and you also need succinctness so like there's some things that we can do already like we can use tools like semaphore and hanon to to make proofs about like that that you you're part of a group but like this data is so rich and and and the the way that it's rich is it has social connections and interactions and like what I want to see us do in the future is to start to explore ways to make to make proofs about this kind of like shared network data that I don't know all the private information about but I can work with a group of other people in order to make a proof for example that oh I am two steps away from a certain person in a social graph that's like that's where I see some really exciting things coming in the future and a neat thing that I'll say real quick about that is the the transparent the basically fully transparent nature of a blockchain in its history this has been one of those classic examples of something that in some contexts is a feature and in some contexts it's a bug but it's neat that in this context we're looking at ways to make it a bit more of a feature because like you said it's an incredibly rich and verified data set arguably the richest most verified data set ever produced and the ability to kind of work with that using proofs in various ways is just something that is going to be really interesting and I think something that you've thought a lot about so yeah maybe I'll give two framings for I think the equivalent concept but from a slightly different angle because I think that these are useful when thinking about like what kinds of applications might be powerful in the future uh the first is you know to to dig into that complementary uh framing of what ZK uh and ethereum have as a relationship um one thing that is interesting about ZK taken you know just alone is that in some sense DK proofs are stateless so I can prove for example that I know the pre-image of a hash that is contained in a Merkle root but uh you know why would someone care about that particular Merkle root right like a common question actually that we get when we're introducing new developers into ZK is like well can I use the ZK proof to prove that I like know some private key of an account at this block hash or like that I know some sort of fact about a smart contract on ethereum and the answer is well like you can't do that directly because ZK proofs are just like mathematical equation math is not aware of the ethereum blockchain however what the ethereum blockchain does is it allows us to come to consensus on what's important which I think is kind of like a little bit of the flip side of um some of berries and Barry and vitalik's reigning so we imbue a certain Merkle root or a certain block hash or cryptographic accumulator with meaning and that's what gives ZK proofs their power that's what gives EK proofs like their semantic meaning and then the second kind of framing that I would think about is you know this is to go off of Albert's comment blockchains are it's almost kind of like an accident that in order to build something uh like basically a consensus engine that we can all agree basically on a certain state route or something like that all the data has to be transparent um and I think that that's not necessarily like that's not intrinsic you know we can use these new tools like ZK proofs or witness encryption or whatever else to build systems where we can still come to consensus but we don't have to make like every single thing public which is actually like a really limiting thing in the design space of coordination mechanisms that you can build yeah can you expand on that a little bit because one conversation that we've had with for example various more traditional tech companies is this idea of making the data that they have you know private in literally their databases available but not available in the conventional well we just reveal all of it because they're obviously not going to do that but available in the sense of being amenable to proofs and other things that people can then use outside of those systems can you explain a little bit about how that might work either at a high level low level really whatever it's a big top of mind for you there oh yeah one one thing that I think could be really interesting is like what if we took I mean this is super blue sky far out but knowing how fast DK's going maybe it's not actually as far out as we think imagine we took some traditional web to social company that's got an account model whether that's like Facebook or Twitter or Reddit or something like that and on these Services maybe what we could imagine is like the service provider would produce a state route for everyone's account now it's not going to necessarily show all of the underlying data that is underneath the state route because that might include like your password your password hash but at the very least what they might publish is like a Merkle tree of a bunch of accounts eight Roots now what you the user can do is your personal data is still private to you and the service provider like whether that's Twitter or Facebook or Reddit the actual data only a hash commitment to that data is being shared but you can start making ZK proofs that everyone knows uh are actually valid and are using an attested to data set you're not making something up so you can prove for example that like I am in this Facebook group I'm in this subreddit I have this reputation maybe I can carry that reputation from one platform to another platform and that I think is a really interesting like interoperability mechanism between the web 2 world and the web 3 world yeah and one thing I want to note about that is sometimes people hear this idea and they're like yeah but the company they can just change their database however they want so why is this useful well if they publish a state route they at least can't change things after that and by the way a very natural place to put that state route would be on a decentralized blockchain so I think even though it isn't anywhere near the same as like the ethereum blockchain's history we still get something there that is I think quite interesting and the ramifications of which we really haven't even scratched the surface so um I'm kind of moving forward here building on this whole like let's just talk about different topics build up different Vantage points to try to learn more about it one game I like to play is what I call the underrated overrated game which is simply to say what do you think is underrated in the space right now and what do you think is overrated uh in the space so maybe let's start with with underrated and again I'll kind of throw it out there for anyone to pick up so I think that when we think about this question we need to think about it in like different contexts I think that like if we're asking this question in the context of like the Western world that uh I think that in the Western World We tend to over as overweight the value of financial privacy um whereas like all right so our societies are like we're the most part free and the the most important thing about our societies tends to be like who speaks and who gets to be part of discussions and how decisions are made and how we decide what to do so I feel like that's much more important so than than the kind of financial privacy applications so in the Western World I think that like social private social media and things like that are much more interesting in the developing world it's completely different right in the developing world it's just so so important to have Financial privacy uh that it's like yeah like one thing that I kind of was really surprised about was we're running like a quadratic funding around at Devcon and like a lot of the people have have like just serious problems with like private information and they're just really really reluctant to share their that information so yeah that's that's what I think that's really interesting also because and I think really fitting when you consider even this Devcon where it's located and a lot of the themes that have gone into it which is when you try to say whether something is underrated or overrated it's also by definition a matter of perspective where we're looking at things really affects things a lot of times something is underrated or overrated because it's relative to you know something else that might be drawing more attention or not getting enough attention continue to love to hear other thoughts of what's underrated or overrated uh when it comes to CK underrated is probably applications of ZK proofs in areas that have nothing to do with what we consider to be the traditional crypto space so you know government records of various kinds I mean the example of like proving things inside of social media applications I mean even I mean even games I mean like possibly supply chain stuff um like there's just a whole bunch of areas where like maybe it also makes sense to put a blockchain in sometimes it does sometimes it doesn't but like even if it doesn't it often makes a lot of sense to stick as your knowledge groups in as well yeah absolutely I think that's super underrated at least from my personal perspective which is a lot of what we're calling ZK uh doesn't require a blockchain as we've noted it's very complementary but there's a lot of situations where you straight up are no longer constrained by operating on top of a blockchain and as many people here are very familiar uh I love the blockchain but it can be quite constraining to work with at times so that's something I think will also unlock Innovation uh in new ways yeah I was actually going to jump off that as well I think that a lot of times when we categorize DK use cases today well first of all there's a huge bias towards use cases that are related to the blockchain somehow these things have become you know almost synonymous like uses of ZK and usage of ZK on a blockchain but the second thing is then when you dig into the categorization we often break down apps into their scalability applications and there's privacy applications but I think that we're going to see a third category of thing that is like not quite either of those emerge in the near future which is this idea of like uh ZK snarks's interoperability technology and this might sound a little bit weird because interoperability is typically a word that we use more for you know when we talk about smart smart contracts talking to each other but there exists you know a rich set of basically cryptographic claims that actually you know as a matter of fact exists in the world outside of blockchains as well whether that's uh you know the signatures in your uh like GitHub commitment history or like the signatures that you know various like Communication service providers whether that's like messaging services email Services Etc use to authenticate your messages or signatures on blockchains themselves and one of the crazy things about snarks is that they turn these signatures into things that can talk to each other so we moved from this world where like the RSA signature algorithm can only be understood by other parties that are running you know the RSA signature algorithm to being being able to put the RSA signature algorithm inside of a snark which is sort of this like general purpose programmable cryptography construct and you can do things like I either contain this RSA private key to this GitHub account or I possess this ecdsa private key to an ethereum account and you can start making these like cross-platform claims and I think that that's something that's underrated and hasn't been thought about enough and you know I know there's there's a number of like PSE and Xerox Park teams that are thinking about these things that are actually going to demo this week so if you want to check out ayusha's ZK email project I think this is a really really awesome one in particular yeah just to build on what Brian has said so Brian was so one thing I think that is underrated in the space is that that we are exp we're having a lot of social media experiments happening and like I think that social media will will make internet discourse become more collectivist and less individualistic and like the the reason that I think this is is that because when you're part of a group when you're when you're making like private claims when you're making proofs that you're that you're part of a set when you make a post um you need to you need to consider about the rest of the group right that like you you tend to become more like protective of that group because you need to be careful about its perception and reputation like a representative of it yeah exactly yeah so you speak you speak more as part of the group as opposed to as part of from your own perspective so that's super interesting what you're saying is because these technologies will enable us for instance to form these groups where we simultaneously kind of get to draft off of the reputation of the group but then we also impact the reputation of that group uh you think or you can see how it will for instance make thinking more collectivist in in certain situations is that about right yeah right because like I see today that like a lot of social media is is very individualistic right A lot of people are focused on like more likes on Instagram or or retweets on Twitter and things like that and like that leads to these kind of incentives that are inherently about like performance but when you switch the Paradigm and instead of trying to get things for yourself you're trying to gather things for your like group the people that you're you're speaking as part of a set of uh that changes that changes the game completely I'm really excited to see how that will develop yeah that's super fascinating um one other thing that always jumps to mind for me right now is being underrated and I think you guys have a lot of thoughts on this is just the kind of community and ecosystem that exists in ZK right now what have you observed and maybe even compare and contrast a little bit with let's say the more conventional crypto ecosystem if it can even be called such a thing um so a couple of things that I've observed it tends to be that like people who are drawn to the ZK space tend to be like really Technical and really just excited to learn things and do things and that's just that's really really fun the other thing that I've observed is that like I've seen like companies who are like competitors with each other like working together so much to like train people and audit each other's code and things like that and I think that that's just really really great yeah maybe one thing also to jump off that last point that I see is like a difference between uh I think this is like representative actually of Applied crypto broadly not just ZK crypto and it's true of you know the best parts of blockchain as well versus other Industries is like there are natural I I don't want to say like decentralizing forces but maybe forces that encourage or incentivize like the free sharing of knowledge and information because if you're trying to get everyone on board with your protocol whether that's a cryptographic protocol or a roll-up what you really need is for other people to understand and trust your system so you need to be permissively licensing your code or at least you know I mean permissively licensing is going to be sort of the gold standard because then you're going to get people digging into the actual intricacies and understanding you know all of the subtleties and edge cases but I think that's something that's a really powerful effect yeah one thing I was actually reminded of this morning when Danny Ryan gave his talk was he said that I had said and I honestly didn't remember saying this but I believe him he said that I'd said that you know crypto is this intellectual gravity well that's something I've absolutely felt for many years right down to the part where I literally again repurposed the word crypto there um and I the only other thing I've really seen in recent years that gives me that same feeling is what we are now calling ZK it has a lot of these similar intellectual gravity well effects and uh I think for better for worse like blockchains are inherently financialized like the very invention of a blockchain is kind of introducing this incentive Dimension uh that's orthogonal it's a more conventional consensus Theory and other things much of the core consensus Theory actually existed well before blockchains did so you can't get away from this financialized aspect of blockchains um and and that's been great in many ways I think that's actually really been a positive for a lot of the development interest in the space but it also causes the attraction of like other forces and factors that knock on wood I think are a little bit harder to do in a ZK context though I would never bet against the broader crypto spaces ability to figure out how to financialize the hell out of something but right now we are in I think a bit of an oasis when it comes to just being able to intellectually pursue really interesting problems that are also very practically valuable and hopefully we can preserve that for a long time and and hopefully it's something that other folks in the audience can kind of get a taste of in the future as well um I guess now that we've sort of we've scanned the space and where it is right now in a bunch of ways so the natural thing that I want to hear about is something I alluded to earlier which is just uh predictions predictions could be about something that will happen tomorrow a year from now decades from now um but yeah what are some predictions hopefully not putting you on the spot too much here so my prediction is that by 2040 someone would have won a Nobel Peace Prize for using zero knowledge proofs well that escalated quickly how maybe say a little bit more about how that might work so basically the way I think about this is that zero knowledge proofs can be allow you to have like private interactions with people and that means that you're able to build trust in in an environment where there is no trust and it turns out that this is really important for like the negotiations between people so like kind of like the the easy pass to this that I see is that um the the the possession of software bugs will become so serious that there will be this crisis and in order to overcome the crisis we'll need to prove to each other how many software bugs each like nation-state holds so they can use a zero knowledge proof to prove that they know a software bug for ethereum or for a Firefox and this will be the first step in decommissioning the the software bug arsenals that people have accumulated that's super super interesting uh remind me in 18 years to check back on that but that definitely got us off on a bang other predictions that come to mind from any of you guys yeah I have a few maybe that are less like specific and precise than berries and hopefully and unfortunately less like inspiring and galvanizing but I think you know in terms of like really large scale Trends um I think that right now and you can even see this reflected in the programming of this Devcon uh this idea of ZK applications is being seen as almost like a product or application category and my belief is that like these new cryptographic creatives are going to be so ubiquitous that in you know say 20 years uh it's like it's going to be the case that ZK and similar Primitives are just happening in the background like we're not going to call things ZK apps in the same way that we don't call websites https apps I think it's like an incoherent product category you know similarly to how uh we had a lot of folks calling websites.coms or this idea of like the.com industry we're going to move instead to this world where you have this like massive space of applications and coordination mechanisms that require info information asymmetry which turns out to be a really really fundamental primitive and how that information asymmetry is created is not going to be the focus it's more going to be like you know much like today we have e-commerce sites or like storefronts or landing pages or browser-based games these things rely on the existence of DNS or https but we don't call them again.coms or or https apps today um one kind of medium inspiring one I guess that's a little bit less intense to someone winning a Nobel Prize but I think is still important to recalibrate our thoughts around is that I think over the next 10 years it will become recognized at ZK snarks are at least as important as technology as blockchains are well that's very that I think that is depending on your point of view perhaps as exciting as the Nobel Peace Prize like I I think the Nobel Peace Prize is an amazing thing but I'm also kind of curious to see if we can you know build up even Alternatives or other you know other sort of recognition emergently so it you sort of alluded this earlier with some of the complementary stuff like how ZK complements blockchains when you say as important that also implies like how do you think blockchains are important you also talked about that so maybe can you tie that together to help us understand it a bit more sure and so I think like you can look at at ZK both as uh massively enhancing what blockchains could you and possibly even being unnecessary ingredients in getting blockchains be getting to like the real high scalable levels of high scalability that a lot of applications require and you could also think of monozike applications uh beyond the blockchain space right so for the first one like you know we talked a lot about Roll-Ups we talked about ZK VMS we talked about um you know my dream for the look and feel of running an ethereum validator in 2032 and uh you know prototype some of this may even come much much faster than 2032 I don't know you know these people are insane um but the and you know without this kind of Technology like it would actually take a lot more sacrifices to get blockchains to you know hundreds of thousands of transactions a second right so that's the first part and then the second part is um just uh you know the the kinds of things that ZK Snorks would enable like even if we just imagine a world where like blockchains as a technology don't exist and are turned off and you just ask the question of like okay you know the world is uh dominated by um you know Facebook and uh Google and uh you know whatever stuff the Chinese government supports and you know we're stuck with that but uh you know how do we make at least some of these better right and it's uh these well you know giving people privacy guarantee is a while at the same time being able to compute over information is huge right uh being able to have Financial systems that prove solvency to people is a huge um having a social media systems where you can vote um anonymously and actually have a credible guarantee that your vote is being is being included or even just like a guarantee that like let's say yeah you know instead of Twitter having some opaque proprietary algorithms Twitter has an algorithm that's actually open source and uh that but then also Twitter actually being able to prove that it's following its algorithm like that's huge right so even if we kind of you know turn off blockchains and just like you know imagine like what's the difference between a world with no ZK and a world with CK like it's really kind of epocal gains in um you know things uh like uh privacy and just being able to have a more you know free and open and Cooperative world to just so many ways right and then once you add blockchains on top then you know the gains are obviously compounding yeah one thing I think is really cool is I think we're past the point where we're worried about whether blockchains are going to continue to be a thing so to speak but I remember even several years ago telling people look no matter what happens with blockchains part of its positive Legacy on the world is going to be they're really complemented and accelerated research and development in just cryptography more advanced cryptography which is really what ZK is kind of becoming this like again like I keep saying catch-all term for um because we have a bit of time to like dig in a little bit more in the future I don't know how far we can get in the Weeds on this what are some of these other sort of ZK adjacent future technologies that might be interesting you know like homomorphic encryption or indistinguishability obfuscation or just other stuff in that category anything that like jumps to mind is just like keep an eye out maybe not too much of an eye out because we are pretty far from some of this stuff but yeah anything that hops to mind for you guys yeah so the way that I think about this is that uh yeah so my answer is NPC and why I think it's so important is that can you say what MPC is uh multi-party computation and the reason why I think this is important is that ckp is that you make proofs about secrets that you know and like it turns out that there's a whole bunch of things in our world with secrets that only I know like I know my private key for my GitHub commit Keys um but our world has much more private information than that right there's all like the richest information is is to do with like social networks and social interactions and if we want to make proofs about that we'll need to be able to make proofs about shared secrets and that's what multi-party computation lets you do it allows you to make proofs about about shared secrets so I think that we can leverage these kind of things to make this kind of like proofs of connection and social graphs where you don't know anyone's connections other than yourselves your own hmm well I think these are big kind of price of prizes in cryptography that it's worth talking about is obfuscation right because obfuscation basically lets you turn a program into an encrypted program but where you can run that encrypted program and it has the same outputs on the same inputs but if that program the original program source code had Secrets inside of it the encrypted program would not let you extract those Secrets it would only let you just run the exact code on this um on the AI secrets and the inputs and give you the outputs right so the reason what one way to see how obfuscation is so powerful is like pretty much any other cryptographic primitive can be done with um with obfuscation right so um you know if you want to let's say yeah turn like make signatures out of obfuscation right then the way that you would do it is you would you know say take any symmetric signature scheme so like you know take something where you just like generate a big hash and you'll you know add the data to the hash just like some really simple thing then you would take the the private key just like is the encryption key of that and then the public Key Well you would stick the encryption your key into the obfuscated program and then you would set it to decrypt and you just publish the office or so you decided to encrypt and you'd publish an obfuscated encryptor another one is just is zero knowledge proofs themselves ironically right you basically just uh you know literally create an obfuscated program where you'd be able to just like stick in a piece of code and it would run that piece of code and sign it with a key that it has internally and give you the output right and that gives you possibly the best possible zika snark because to verifying it is super simple to verify you'll literally just verify one signature right and then you could do really fancy stuff on top like you know you could make a encrypt data in such a way that that data can only be encrypted if someone gives you a proof that something happened on a blockchain right so the the applications of that like you know just multiply really massively the the problem with um this kind of obfuscation unfortunately is that like we've only had the first formally proven candidates for this like literally two years ago and they're just insanely high in their complexity at the moments right like it takes a it's there's like six levels of amino protocols inside of protocols inside of protocols and there's this big tower and like actually running it would take you know like a billion years or something and you know the question is you know are the very smart people going to be able to like bring that down to the point where it's something viable 10 or 20 years from now I'm like we'll see I think if we get to the like something viable then you know the results of that could be amazing yeah and what's going to be really interesting is to see like you said the the rate of progress here I remember myself I think it was back in 2012 or 2013. before I was even interested in blockchains I first got exposed to the concept of fully homomorphic encryption I was visiting former intern of mine who also went to the same University and she described it as like for example say you have a keyboard but it's built in a way where you press a key and the keyboard doesn't know what key you pressed and yet like the right kind of keystroke registers and then she was like oh by the way we're only 11 orders of magnitude away from this actually being viable I was like hold on did you say 11 orders of magnitude she's like yeah yeah 11 orders of magnitude um but you know in the years that have passed I mean we've chopped that number down quite a bit depending on the context we're anywhere from even one order magnitude but probably more like two or three orders of magnitude away um that's a lot of progress and it's going to be like I said really exciting to just keep working on this and seeing what uh we can unlock and we've even seen some of that I think like with your experience is building uh in in the browser today compared to three years ago what are some like the numbers or rough ballpark oh yeah I mean I think it's something like it depends on how exactly you interpret all the different computational resources but since 2018 we might say that we've seen like three orders of magnitude Improvement in how large of ZK snarks you can prove in the browser so yeah it's only it to make that more concrete some of the things I've seen out of Xerox Park involve waiting for you know 45 seconds maybe 90 seconds not perfect but viable right like you can see situations where someone would be willing to wait you know one to two minutes for something and that exact same thing two and a half three years ago literally would have involved maybe two hours or just actually would not have been uh computationally or feasible for other reasons in terms of like memory or things of that sort so that's to give everyone a bit of a taste of kind of the direction uh we've been going in at least in some subsets of this space and uh you know hopefully it'll continue it hopefully uh some of the folks in the audience can also get involved and help us with that and on that note a quick question just like are there good places to quote get started it's always like a very tricky thing even for crypto more broadly but I know that you guys have worked on various uh resources so are there any like just quick things we can mention here and of course if you really want to get more involved you'll want to follow up more afterward yeah so on our end one of our focuses is like education and Community Development um so we run these applied ZK learning groups and we're doing our best right now to get all those materials online at learn.0xpark.org so that's you know an effort by various like community members and volunteers I think like Michael Chu and John Grievous are probably around here right now um so that's a collection of videos articles various documents um that have exercises on how to just get started with like writing your first circuits cool so that's a learn.0xparc.org yeah um yeah so the first thing I would recommend is to don't get intimidated by all of the Moon mats to Black Box things out and to figure out what something does not how it does it and you can use that to build a whole bunch of things and as you're building those bunch of things you can figure out how the thing does what it does and like that's that's how I learned and it was it was really enjoyable the other thing that I would suggest people to check out is you can check out the privacy and scaling exploration teams website it's appliedzkp.org and we have a Discord there you can join and chat and ask questions so that's appliedzkp.org yes yeah I mean there's I think a lot of different resources and like for people with um you know different uh like skill levels and like and different interests like there's a there's environments now where that are literally online like you know ZK repo.dev I think was one right and where you can just uh you know literally go and like start writing the code for a yes circuit and like compile it and it just outputs to you a piece of solidity code that you can then you know stick on well these days not mean yet because it would be a bit too expensive but um you know some uh the layer two or test out of your choice and you know you can actually kind of play around and see if you can make some simple uh some simple application so that's a one way to learn for some people if you want to get into the math then you know in the applied zkp.org page has I think a lot of good resources um zkp dot science has a bunch um I mean I have a bunch that I've uh you know that I've written there's a bunch that the starkware team has written there's there's quite a lot these days like just uh sometimes it even makes sense to read like multiple explainers on the same topic so you can see how they fit together um yeah so you know depending on like which side of things that you want to learn there's like you know there's plenty of different resources for you um yeah there's one other thing I wanted to add that like we've given examples of how you can join if you want to be a developer but as we talked about earlier like there's a whole bunch of like community and ecosystem and cultural things that are also super important and like I'm not sure how to get involved in doing that like maybe you could join some of our like uh private social media experiments there's skitter and hey Anon and yeah you can find it on apply dqp.org or zero expires website um or you could you could explore running a quadratic running round or things like that yeah yeah there are definitely ways to get involved that don't imply you have to get into programming or math side of things because the goal of all this is to touch so much more than just you know those areas and a really neat thing that's emerged literally since the last Devcon is some of these experiments that among other things just need and want more people to to get involved and to participate in the networks that are being built um so I guess to kind of wrap things up here we've talked a lot about a lot of stuff here today we've talked about Big Stuff future stuff some deeply technical stuff but one of the things that I personally love the most about ethereum is it is that ethereum has this quote unquote soul and so I'd like to close with a bit more of a personal touch uh you know we all started somewhere we were all noobs and frankly continue to be noobs to this very day any like just stories or even fun anecdotes from listen when you first got interested in ethereum when you first got interested in ZK or anything else any anything you guys could share sure so I first yeah so in 2017 I think I deleted my Facebook and I deleted it because I was getting worried about like the the kind of surveillance date and the ability not really surveillance day but the ability of like Facebook to manipulate me with like ads and showing me happy memories and things like that and like when I deleted my head when I deleted my Facebook I I didn't realize that I like kind of realized at the time but afterwards I felt this loss like I mean I lost connection to like so many people I lost like a social network that I'd been building for years and that was like it I still feel that loss today like I don't know who I went to school with like how many kids they have and things like that and like I didn't realize that it was connected at the time but soon afterwards I I got really interested in ethereum and I tried to build like a t-shirt Cooperative I wanted I wanted to build a way for people to to pull their money together so they could get a bulk discount on purchasing like cool and fun t-shirts that there would be like designers and then they would get like a bulk discount so I'm like I didn't realize that at the time again but like now when I look back I feel like when I lost Facebook I sort of lost this community and since then I've been sort of searching for one and that's what kind of brought me to ethereum thank you for sharing that it I first heard the story very recently from you and I was like wow I didn't realize kind of how deep and it explains a lot of why you've had all these really fascinating and wonderful experiments in the social media Direction and it's also just a great reminder that again the goal at least my goal and our goal here is to utilize these Technologies in a way where we can more precisely get what we want out of technology and social systems and things of that sort yeah I can give a story about how I first got involved in ethereum Albert was actually the one who brought me into the space back in like 2018 and I remember I spent like two months over the summer of 2018 just like trying to go through and just understand like what ethereum was and I just remember having so much trouble and I was so frustrated and you know perhaps this is like this is either an indictment of the quality of educational resources at the time but I think it's more an indictment of myself and my my ability to onboard so ever since then education has been a really big Focus for a lot of the communities I would say in the Xerox Park ecosystem um and that's why you know I mean even just last year how learn.0xpark.org got started uh was I was talking with Jeff Lau from ens who had done one of our applied CK learning groups and he had also expressed like you know the similar sentiments about coming into ZK and the both of us were obviously really glad that we'd like pushed through that initial uh like you know hump on the learning curve um and you know in no small part due to the fact that people in this community are so welcoming and so willing to share a knowledge and that's uh you know Jeff ended up playing a huge part in putting together a bunch of different educational resources so I would say that like you know if you're like coming up to a new topic even if you're scared or intimidated um like I myself literally took like three months to just get a picture of what ethereum even was like eventually I was like I can't understand any of these blog posts let me just go to the yellow paper and like try to read it like line by line and eventually we actually did end up putting together a series of resources to summarize all of that stuff that made its way up to like ethereum.org among other places so you know one don't be afraid but also two uh right after you have learned a thing is also I think the best time to to give back and really uh solidify those learnings by sharing them with other people cool and I'll I guess I'll close this out with a much smaller sort of just a cute story when when I first started following ethereum I mainly followed it through Reddit and I remember you know seeing this user you slash V Booter in on Reddit and it it was really interesting I was like oh this this V buterin fella he seems really smart but also kind and wise and for I think like three or four months I literally was just like oh V booterin's probably some like 60 year old like Soviet era programmer um and uh I was genuinely shocked when I discovered um how old or how young vitalik was at the time but yeah it's just really funny and interesting to reflect back on and in some ways it ties into some of these other things which is because in my case I hadn't really bothered to go and learn more about the the person underneath it um but it was it's a neat little snapshot of like hey you have this sort of idea identifier and then they're just commenting they're sharing information they're sharing their thoughts and I was like evaluating that and only that and drawing my own conclusions and I think there are positive aspects of that that we can pull into some of these like social systems and other things um that we're we're trying to build so on that note just want to once again thank you vitalik Barry gub sheep and all of you for joining us here today I hope you learned something hope you enjoyed the conversation and hope you enjoy the rest of Defcon thank you [Applause] all right y'all great panel thank you very much give another warm warm thank you to our panel um and in a few minutes we will be hearing more about zero knowledge and how it can be applied in gaming and uh we will be hearing from gup sheep again so stick around see you soon [Music] is is [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] [Music] foreign foreign [Music] oh I Rise [Music] [Music] thank you foreign [Music] foreign [Music] gum sheep talking about Lessons Learned From a few years of on ZK gaming with dark Forest foreign [Applause] hey everyone and thanks for the intro Evan I'm gub sheep and today I'm going to be talking about Dark Forest lessons from Three Years of on-chain Gaming um so first real brief introduction I'm gupsheep I've been working with the ethereum foundation since about 2018 on various education community and applied ZK research and development projects I co-created Dark Forest and spent a lot of 2019 to 2021 building the game out with various friends including Ivan Chubb Alan law Bryce Huang Robert Cunningham and more and currently I'm working on applied ZK research and development and other applied crypto experiments with Xerox Park so to give a little bit of context Xerox Park is a research focused organization that supports a network of teams that are all aiming to push the envelope on what is possible to build on blockchains or with New cryptographic Primitives and a lot of these experiments started with dark Forest which is a part of the Xerox Park Community so today's talk is nominally about Dark Forest but uh you know the subject or the question that I'd really like to answer looking back on three years of running this game is what can projects like Dark Forest teach us about innovation in crypto more broadly and to answer that first we have to talk a little bit about what Dark Forest actually is so summed up in a sentence Dark Forest is a decentralized MMO RTS game built with ZK snarks on ethereum now that's kind of a mouthful so let's take a look at a few screenshots to understand what this really means so first off Dark Forest is a massively multiplayer strategy game that takes place on an infinitely on an infinite procedurally generated Universe of all sorts of different types of planets and space entities the most popular dark force game mode is a week-long battle royale contest where thousands of players Bots AIS and even smart contracts compete head-to-head for Galactic Supremacy players are dropped into the universe at a tiny home planet and they must Harvest resources conquer nearby planets and interact with their neighbors either through alliances or trade or negotiation or even war in order to expand their Empires it's a hardcore free-for-all space-themed strategy game and rounds can get pretty intense the thing though that makes Dark Forest different from your typical strategy game is that it's entirely run on an evm compatible blockchain this means that all of the gain State and all of the game rules are actually stored in smart contracts rather than a traditional backend server and every single move that any player makes is in fact an on-chain transaction because the game is so complex in comparison to a lot of modern uh ethereum applications in production each move can take up to millions of gas and players over the course of a single round can end up making thousands or even tens of thousands of moves per game the other key mechanic of Dark Forest that is shared with a lot of other strategy games is that much of the Intrigue in the game comes from the concept of hidden information or information asymmetry the overall Dark Forest universe is practically infinite and it's teeming with thousands of adversarial players Bots scripts smart contract players etc etc however individual players upon joining the universe only have access to a very small slice of the total Universe map and this is exactly what gives Dark Forest its characteristic or namesake sort of Dark Forest feeling so at first it might seem kind of paradoxical that we can have this on-chain application where there's so much complex private State being mutually moved around by different parties especially because blockchains are systems where all information is public and transparent in other words any data that's stored inside of a smart contract is something that anyone can access so how can we put a game where different players know different parts of the map on the blockchain well the answer is that this is exactly what ZK snarks enable and thanks to the work of the Iden 3 team with circom and snark JS back in 2019 these kinds of applications or incomplete information Games first became possible to build on chain okay so hopefully that gives a little bit more color into what Dark Forest actually is um next I want to take a step back and just talk a little bit about how our thinking about the game has evolved over time so we started working on Dark Forest back in 2019 and it started off as just a pie in the sky experiment you know let's build a ZK game where every single wasd move is in fact a blockchain transaction uh triggering a ZK snark proof verification on chain now at the time this seemed pretty ridiculous blockchains are super slow and super expensive databases that of course could only be used for critical Financial applications or transfers and games require pretty much the opposite we did some benchmarking and we estimated that on ethereum mainnet a move on Dark Forest could cost anywhere from 10 to 100 US dollars and players might need to make up to thousands of Moves In order to meaningfully interact with the game so we originally built a game not because it was necessarily like possible or feasible but it was an intellectual experiment to learn more about the tech and obviously from a cynical or skeptical point of view it would have seemed like pretty much a useless thing to do but if you fast forward three years A lot has happened since over ten thousand players from around the world have participated in dark forced rounds running entirely on chain they've collectively spent trillions of gas on Robson xdi and gnosis chain and a rich developer ecosystem has emerged for player-built third-party plug-ins alternate clients GPU miners player corporations data marketplaces chain analysis tools and more and we've seen some epic on-chain dramas featuring deception betrayal universe-wide alliances one of my favorite examples of this is this long-running rivalry between these two player alliances Orden Gigi a group of Ukrainian and Eastern European players uh and DF Dao which is uh both of these are basically player groups that have teamed up using various crypto native governance mechanisms in order to play the game and one of my favorite sort of you know summaries of this story is this thread by Will Chang on Twitter uh where he basically if you find this thread you can read about the story of bitter Rivals a dream of Glory betrayal Redemption it's kind of Awesome and Beyond Dark Forest we've seen this entire ecosystem of Next Generation application Level r d uh in the broader Xerox Park ecosystem and Beyond sort of emerge uh oftentimes taking some degree of inspiration from Dark Forest as key ideas from the game have clarified and been built on top of and extended so the first question that we're often asked is why build games on the blockchain to begin with um and I think the answer to this question is pretty revealing about what crypto games can teach us about uh Innovation at the application Level more broadly so there's been a lot of talk in the last couple of years about things like GameFly or play to earn or how crypto can help to financialize games but to be quite honest for me personally these ideas are pretty much the least interesting parts of the possibilities of crypto gaming um I think that there's a kernel of some interesting stuff there however I think also 90 of it is a lot of times inflated by hype and speculation and instead I think that crypto native games are powerful because they have this property which you know I sort of in my own head label as permissionless interoperability dark force is an ethereum smart contract which means that anyone player bot script or smart contract can interact with the game programmatically this has led to some really interesting emergent Behavior which I'll show in the next couple of slides so the first thing to note about any crypto native game is that it is pretty much necessarily client agnostic because the source of Truth for the game rules and state is the blockchain itself the game doesn't care about what client you use to read its data or interact with its API in the first releases we provided an out of the box web client for players to use and we noticed that players quickly got to work hacking the client to build automations different kinds of data visualizations or new skins so Ivan and a number of other contributors released a plugins tool chain that allowed people to build and share Snippets of JavaScript code that would allow them to customize or modify their front-end gameplay experience and today there's nearly 100 open source plugins that players can use to remotely generate snark proofs outline enemy territory or even wage automated war and all sorts of different functions so this has been fascinating to see over time one step further than that you have the idea of third-party client implementations so again Dark Forest or any crypto native game starts to look more closely uh like resembling a protocol or a set of you know rules digital physics that uh various people will subscribe to Via whatever client they want and this is an example of a client that Georgios and Kobe Gerkin built for Dark Forest originally built in Rust now the advantage of this is that it allows you to play Dark Forest in your terminal and it offers better performance perhaps than the typical uh the you know vanilla JavaScript web client in that you can generate snark proofs and explore the universe faster however this comes at the cost of having a nice visual UI finally one more thing on the client side that I want to explicitly point out is the level of complexity that we began to see in automations and Bots programmed by players to play the game again all of that kind of activity is fair game on Dark Forest Dark forests smart contracts simply specify the rules or almost the physics of the universe and subject to following those rules you can do almost anything you want by 2022 some top players had built tools that allowed them to almost entirely abstract away the base level gameplay mechanics of Dark Forest rather than making individual moves players were instead operating these more complex dashboards of higher level heuristics and strategies things like press a button to distribute silver to all upgraded planets in this region these scripts would then translate these higher level strategies into base their moves and at this point players were basically programming their own gameplay experiences you had players building third-party tools that became a part of their first party player gameplay experience okay so so far we've only talked about client-side programmability and we've seen plugins third-party clients automations Etc but I think that the true promise of crypto native games comes even one step further while all of those previous things are kind of reminiscent of things you might see in the modding ecosystem of games like Minecraft Etc um crypto native games do allow you to do something that is fundamentally different and that fundamentally was not possible in the same way as before so to illustrate exactly what's going on here I want to bring up a hypothetical example say you're playing a traditional multiplayer RPG game and you want to see a new feature added to the game so this might be a game like Runescape or World of Warcraft or you might imagine like a multiplayer version of Pokemon or something and let's say that you have a new feature that you'd like to see implemented of the game like player to player trading so in the traditional Paradigm here's what has to happen first I'd have to go to the core developers of the game and make my feature requests and maybe they decide to accept it or maybe they don't then after that the core devs have to introduce a new data transformation on their proprietary back end and API routes on their web server that trigger these data Transformations and finally they have to go to their canonical game client implementation that's distributed to everybody and add in a new UI component like a button or something that when clicked triggers this new or hits this new API route contrast that with dark Forest where in Dark Forest any player can develop an escrow or Marketplace contract that talks to the core Dark Forest contract they can then deploy this contract to the blockchain and maybe it says something like all right if anyone deposits one eth into this escrow contract it will programmatically talk to the dark force contract and trigger a release of like 100 silver from my planet to yours afterwards they can write a JavaScript plugin that allows a web client to interact with this Marketplace contract and distribute this to any player who wants to opt into this new core gameplay feature in this way players can add entirely new features to the game without having to go through specially permissioned Developers so the broadcast Market which you can see on screen right here was the first example actually of a feature developed in this way it was built by Blaine bubblets and Jacob Rosenthal and what it allows you to do is it allows you to ask for someone to broadcast or share with you a certain set of map information for a fee now this was extended earlier this year with Night Market built by Xerox sage and prxyz which is a trustless ZK enabled Marketplace for you to exchange encrypted data with other players uh on the map again for a fee and we've also seen several groups build out Marketplace contracts for in-game items as well as some interesting experiments into player corporations or other coordination constructs so on the screen here you can see a contract called astral Colossus built by DF Dow Dark Forest Dow so this was really cool essentially the dark force contract does not distinguish between players as eoas externally owned accounts or smart contracts so a smart contract can play the game just as much as a regular player can play the game and the astral Colossus was essentially a smart contract player that anyone could contribute to our pilot and in just 48 Hours of its operation it reached you know among the top 50 places on the leaderboard with contributions from dozens of players so I just want to imagine like you know you're playing Dark Forest and you run into this growing amoeba that's this like crazy headless organism amalgamation of dozens of individuals it's super interesting to speculate on on how these kinds of things might evolve going forwards and finally new tools like those being built by teams like lattice will make it easy for players to even add in new rules or resource types to the games so this is a screenshot from a mock-up of what it might look like for players to introduce plugins and third-party contracts that add in their own game modes side objectives or even resource types so to sum it all up what is permissionless interoperability mean permissionless interoperability means that players can build the game experience not just the core developers and this unlocks a massive range of new kinds of affordances in Games built in this fashion okay so I think uh that's mostly my answer to question one why build games on the blockchain in other words what can blockchain do for games the second question that I think is also very instructive to ask is why build games on the blockchain in other words of all the things that you could build on the blockchain why bother with a use case why bother with an application that doesn't have any obvious practical use case and you know the text and the purple sort of my like broader interpretation of uh what I want to answer this question for and I think it's a big question to ask any r d facing org which is working on things that don't have a concrete practical use case so I've got three reasons um the first is that games and other experimental applications of this nature are a technically demanding yet low stakes environment uh for us to rapidly push forward infrastructure without putting massive amounts of capital or social stake at risk in the process of building crypto native games and game infrastructure the Dark Forest and Xerox Park communities have uncovered bugs and core infrastructure and motivated significant optimizations uh to you know things like nethermind or optimism Canon or akula or Aragon etc etc um this progress can happen rapidly and iteratively without putting hundreds of millions of dollars at stake as in D5 so we can move forward the ecosystem very quickly we can move fast and break things again without suffering enormous consequences where people's real livelihoods are at stake um this is very reminiscent of I would say Gaming's impacts on the early days of personal Computing and of the internet games like Wolfenstein 3D and doom massively Advanced the graphics industry and stretched networking infrastructure to its limits back in the 90s and devs were forced to invent new techniques and optimizations many of which we still use today so the second reason is that games are a leading indicator in technology and player behavior in today's games can help us predict user behavior on tomorrow's digital systems to draw a parallel back to the early days of mobile Computing another recent platform that you know has been hugely impactful for all of our Lives interactions such as swiping and rotating were initially popularized and you know someone would even say invented by games like Cut the Rope or Angry Birds and while these apps were just games these interaction patterns that they pioneered have become ubiquitous across everything that we do on mobile apps today so we've seen a few examples of this a few early examples in crypto gaming thanks to the Community Management efforts of folks like Jordan Spence classic Jay and Ivan we've seen various crypto native player cooperatives emerge uh using new crypto enabled mechanisms for governance voting and value distribution the lead of DF Dao Tony Goss sums us up quite nicely in an article uh the crypto gaming governance thesis in which he argues for the values of the value of games as a Sandbox for Innovation inside digital governance and then the final reason that I would say that games are good for blockchain is that games are inherently playful the crypto space currently is dominated I would say by technologists and financiers and a thriving indie game Community can potentially help to bridge the gap between crypto and uh more creatively leaning folks such as artists writers thinkers Etc introducing critical dimensions of intellectual diversity that crypto doesn't currently have and I think that this kind of diversity is crucial for any intellectual movement or counterculture historically many creatives have been extremely turned off or outright hostile to crypto due to the hyper financialization of things like nfts um but by really showing what the technology makes possible and what permissionless interoperability makes possible we've been finally getting some indie game devs to come around so for example the lattice team out at the autonomous world's residency has been pulling together a community of artists and creatives in London to introduce proper game devs and creators to blockchain technology so now I want to zoom out even a bit more um what are some of the lessons that we can learn from Dark Forest and crypto gaming which we've talked a lot about in this talk that are even more broadly applicable to Innovation on blockchain technology in my head three things really stick out the first is to put it bluntly the importance of around and finding out so much Innovation is the result of people being willing to work on seemingly blue sky moonshots that seem impractical at the time that they're conceived and for which we can't really predict what the outcome is going to be so to give a historical example that I think sums up this principle very nicely I want to take us back to the 1970s so up until the 1970s computers themselves were commonly conceived of as these like monolithic room-sized beasts only accessible to a select few organizations like government agencies and University Labs simply because they were so expensive the idea of the personal computer as a tool for personal expression and Liberation was something that was not on the map at all until researchers at Xerox Park basically put together these Xerox Alto which was the first personal computer somewhat resembling what we think of as a PC today at the time the alto seemed like a colossal waste of resources and money it was one of the first devices to have a graphical display like a monitor and that took up two-thirds of the memory of the entire unit and in a world where memory is really scarce and really expensive this seems extremely frivolous um also it cost like twenty thousand dollars per unit in nineteen seventy dollars which is pretty terrible but Xerox Park what they were doing was they were looking at Moore's Law at the time and they correctly predicted that all of these resources would become more accessible over time and they decided to skate to where the puck was going and in doing so they quite likely either altered or accelerated the trajectory of computing technology by potentially even decades Steve Jobs and Bill Gates in later decades cited Xerox Park as the inspiration for so much of their own commercial Visions for personal Computing technology now on a much smaller scale again we mentioned how three years ago Dark Forest and various other experiments started as pie in the pie in the sky experiments and we've seen firsthand how  around and then finding out has been so valuable to us in enabling us to uncover new research directions or New Dimensions for crypto applications to really take the stage in the coming years another interesting that I've taken away from watching Dark Forest evolve is a mental model which I think of in my head as a dichotomy between systems and tools so to give an example of what I mean or to explain what I mean by systems versus tools and the particular usage here I'll give a few examples so this is a screenshot from battle.net which is Blizzard's launcher for a number of very popular AAA games such as Warcraft uh or sorry World of Warcraft Starcraft Etc each of these games has a clearly defined canonical game mode set of rules ranking system you know methods of interacting with the game it's a pretty prescriptive thing that tells you exactly how you can and can't interact with Battle.net and it's a very well engineered very large monolithic system similarly this is a screenshot from the Facebook homepage Facebook itself is also a monolithic system and they've specifically engineered ways that you are permitted to interact with other participants and components of the system how you can log in and authenticate uh how you can message other people and even what API routes you're permitted to access and how frequently you're permitted to access them in both of these examples Battle.net and Facebook we see monolithic systems that are disproportionately engineered to serve the goals and visions of a particular group on the other hand dark force has found many of its coolest and most unexpected outcomes as a result of building tools for users tools as opposed to systems are small modular and accessible things that aren't overtly prescriptive in their use a tool invites a user to uncover their own visions and use cases and in our case the dark force plugins tool chain and many of the other developer tools that we built enabled people to do all sorts of those crazy crazy creative experiments that we saw earlier in this presentation this also means that tool Builders have an enormous leverage in these kinds of early technology ecosystems for example Blaine bubblets built the Dark Forest plug and Dev server which again enabled a ton of innovation and the folks at DF Dow have been building out custom infrastructure that allows anyone to modify and run their own Dark Forest rounds with custom rule sets leading to things like the dark force Arena Grand Prix and more now I don't think systems at least as I'm referring to them are necessarily better or worse than tools they're quite necessary for the world to function but there's a time and a place where you either want to be Building Systems or building tools and early on in a Technology's life cycle before you can predict all of the serendipitous Innovations or second order effects of the technology I think it's important to focus on tools because tools Empower people future generators of innovators to express their own visions that are unpredictable to us today with crypto native gaming I think we're also just getting started and I want to shout out again one particular team that will be releasing and demoing a lot of really cool stuff this week so the lattice team has been building out a tool stack for various crypto native games and crypto native applications uh and if you're curious uh their sessions are on the Devcon schedule so the final note that I want to end on uh is the importance of playing what some people call the infinite game so this is a term coined by James P carce a religious scholar in his book finite and infinite games which I highly recommend to anyone who's never heard of it in this book cars basically puts forward the idea that there are two kinds of games finite games and infinite games a finite game is played for the purpose of winning think of a sports match or a political election or an Mev arbitrager conversely infinite games are games that are played for the purpose of continuing the play to me this means engendering Innovation experimenting with new rule sets and ways of collaborating and developing new tools for continued creative expression I think that dark Forest has done a good job of representing what it might look like to participate in the infinite game that is ethereum and I'll wrap this up with a quote from Tony Goss at DF Dell where he outlines the philosophy of the dfl player Group which is to play Dark Forest is to build is to build on Dark Forest so thank you everyone and if you're curious about any of the other work that we're doing to build on top of these communities you can check out these sessions um but otherwise yeah I think that's all I've got for today thank you [Applause] foreign great thank you Brian we will be continuing uh we're sticking very closely to the schedule so we will be continuing at the half hour um with our next talk from Rachel about public goods and zero knowledge proofs we'll see you in a couple minutes when you can check Twitter and whatnot I always thought foreign my life welcome back everyone um I'm Althea some of you probably saw me earlier today but I asked to come back just to introduce our next speaker because I have gained so much from working with her Rachel uh does design strategy for the privacy and scaling Explorations team at the ethereum foundation she is incredibly insightful and a deep thinker and a gentle but persistent asker of the kinds of questions that you can't help but think about for days after and she's going to talk about how she's applied all of that to designing for zero knowledge proofs and public goods on the PSE team come on up Rachel thank you hi everyone like Althea said I work on the privacy and scaling Explorations team our team is about as a growing team a bit over 60 people now and there are six of us who make up the design and Communications team we all work really closely with our devs and have weekly meetings to facilitate remote collaboration on CK apps and protocols and we use design to align teammates from various technical backgrounds creating this common understanding internally allows us to communicate the value of our open source protocols and apps to the ecosystem so that you our community Can Dream up and build your own ZK products when I started working with PSE designing public goods it took me some time to wrap my head around the idea of not designing for profit because almost all of my previous design experience involved aligning ux strategy with business goals it was a big mental shift to move from designing to increased sales or sign ups to designing to attract participants who can use what we have built to build their own thing on my team designers developers writers product owners we're all using design as a tool to make the unfamiliar familiar in this presentation I'll start by addressing the value of Designing for privacy share some design challenges highlight a few ZK apps discuss the ways design can be used to facilitate conversation and touch on mental models the PSE we're building privacy and anonymity infrastructure using zero knowledge proofs so that you can choose how much of your identity you want to expose when going about interacting with others on the ethereum blockchain but simply a zero knowledge or ZK proof is a method by which one party can prove to another party that something is true without revealing anything besides the fact that it is true we call our zero knowledge protocols and apps public goods because they're open source and free for anyone to build with or use I believe that we need to design for privacy so that we can evolve beyond our current challenges understand our material more deeply involve more people as collaborative co-creative participants and in turn fortify privacy Solutions with greater anonymity sets so yes privacy resources are difficult to opt into true user experience for these apps has a lot of room for improvement sure the material is abstract and complex and to some of us zero knowledge feels like incomprehensible witchcraft but design can help people from any technical background make sense of the things that they don't understand the only way to create better more usable interfaces is by exploring and iterating our work we're only at the very beginning there are many design Cycles in our future which to me is super exciting the design process is a Hands-On way for anyone to learn on my team contributors from all kinds of backgrounds are finding alignment by cycling through phases of Discovery problem definition prototyping and testing together when the abstract can become something physical Concepts can sink in and Inspire the next cycle the more that we understand the protocols that we're working with the easier time we will have communicating their value more and more people are understanding how our information is collected and how our data is used to influence our thoughts and actions but they're apathetic imagine if by default we had privacy and anonymity online If people could make an informed decision to opt out they wouldn't be saying well they have all my data anyway what can I do instead of creating extractive applications that use users we can choose to design participatory environments where people consent to how much personal information they reveal about themselves and although there may not be a high demand for zero knowledge public goods or products yet I believe the more that we design the more people will come to understand the magic of ZK and when to use it we're still in really early stages of research and Design the experiences we create will become more usable more accessible the more cycles that we go through and the more people that we can talk to about their experiences and this part's really cool to me the better the experiences are the more participants there will be which will result in larger sets of anonymous participants and increase privacy for everyone if this material still feels conceptual and you're wondering what an experience with zero knowledge would be like here's a relevant example say you want to anonymously share feedback about this event with the event organizers but in order to do so you have to prove that you attended the event an app built with ZK could allow you to prove that you did in fact attend the event without revealing Who You Are giving you the opportunity to truly share feedback anonymously can you think of other instances where you might want to prove that something is true without revealing additional personal information voting I didn't hear that one going to a bar a few other ones I've also heard are speaking out against systems of power and engaging in conversation and discourse so a lot of our protocols have the potential to structure or manage Anonymous or private environments for these purposes there are plenty of challenges that arise when designing ZK apps we like to use hell might we questions to help us explore problem spaces without immediately jumping to Solutions so I'd like to share some of those with you some of our challenges reframed us how might weigh statements how might we balance approachability and transparency an ever-present challenge that we're facing is deciding how much information to share in our apps and other resources we want to be true transparent and help curious individuals learn more about CK products while they're using them but we also want to avoid overwhelm and cognitive overload here's some screenshots from our zko Prue a private wallet this is a browser extension my teammate bionder came up with these designs and I included them because I think they're really nice example of progressive disclosure where users land on the primary screen that's on the left and they just see the tokens in their wallet when they want to get more information about a specific token they can click the Chevron to open up this secondary window where you see more information about the track transactions and also like the full functions of that app how might we give users the freedom to choose how much they reveal about themselves because ZK apps give us Anonymous identities it's up to us to preserve or break the level of anonymity that we start with when we're Anonymous our identity is unknown but our actions are public Trails of actions we have taken can be Clues to our real identities ZK apps can expose you to the idea of controlling how much you reveal or when you reveal it in one of our applications uni rep social um this user in this screenshot the user is about to post um to the feed of an anonymous social app you can see that they have 30 rep and you can see that before they post um five points are required to post and they can choose from three different personas and they can also choose on a sliding scale how much of their rep they want to display so my teammate chiali created this sliding scale model for giving people that opportunity to decide how much to reveal about the reputation they have and that's like a cool way to show people making a decision about how they want to appear in this group how might we craft environments for anonymous users to build trust with one another a lot of people ask me why I would ever design apps where people can be anonymous online because they feel that a non-environments are often hostile um and I would argue that anonymity can also create places where everyone has an equal voice and they're not limited by potential uh judgments that they might experience if their identity was revealed however an interesting way to create trust is by creating groups where everyone has to prove that they belong and if they qualify to join a group they can trust that everyone else who qualified um also had to go through the same qualification process this per um project that we've worked on interrep is a good example of bridging reputation from centralized applications um to your on-chain identity to be able to prove that you qualify for a certain group with other people so in this example the person qualifies to be a Twitter Gold Member because they have a certain number of followers um and they can join how might we represent identity in communities of anonymous individuals if a non-environments are not all going to necessarily have like profile pics and user bios uh what will the identities look like it's fun to think of the different ways things could be represented like will handles always be the same will they change if they change how often could handles instead be tied to reputation my teammate sukino created skitter this is a social app where people have the option to decide how they want to be displayed by username by their ens address or saying that they're a member of a group so you can see at the top of the screenshot like a Tas member posted that's someone who signed up for our temporary Anonymous Zone downstairs so you guys should all check it out um and then they were able to take their identity from that app and use it in skitter and say like yeah I'm a non but I'm also associated with this group and another clever thing I think tsukino came up with was um saying a Twitter user with 500 plus followers said XYZ but what gets us to the point of creating designs that address these hell might way statements I believe it's environments that Foster collaboration and discovery and processes that facilitate conversation as much as design is about creating objects or interfaces that people can interact with it's also about creating containers where people from different technical backgrounds can explore ideas and find alignment we create containers for conversation by frequently hosting workshops in digital whiteboards it's in these workshops that people from different technical backgrounds can develop common language and create Bridges between their domains of understanding here's an example from like one of our fig Jam files I am obsessed with the digital whiteboards I feel like it's so cool to allow people to support their words with you know markers sticky notes shapes cursor gestures or chat bubbles it's way more comfy spending time with unknowns when everyone can visualize the discussion and I've noticed that when a group of people are all looking at the same thing on you know their different screens and wherever they are in the world it's easier to identify misunderstandings with the visual aids in this created environment there's less room to miss what someone said or to not understand what they mean uh we've been hosting a bunch of workshops and so I wanted to share with you some principles that have helped us lead successful ones we're opening our workshops to teammates from various uh backgrounds uh different technical backgrounds and experience levels we offer people multiple ways to contribute because you need to think about different personality types different technical circumstances not every Workshop should just be people verbally uh exchanging ideas with each other there needs to be times set aside for writing or drawing as well we also make sure we always have a dedicated notes Taker and before we synthesize results at the end of the workshop we preserve what we had like the workshop results because you don't want to have one or two people synthesize and be left with the bias of their synthesis for workshops that involve a lot of people and have a tight time limit I highly suggest collaborating with someone else as like a co-host um and like time box yourselves and have a dress rehearsal um I encourage anyone to explore using digital whiteboards in this way and watch how it gets people thinking and talking through challenges for us we've learned a lot about some of our protocols like zko Peru semaphore and unirup through these digital whiteboard sessions no matter how Lo-Fi visuals help us move from abstraction to something concrete translating a protocol into an approachable user interface takes time it takes time because our initial means to understanding what a protocol can do usually starts with documentation this kind of writing reflects an implementation model necessary for development because it reflects the technology back to the use the reader when we begin designing we can create other kinds of models to better understand protocols that instead reflect familiarity back to us represented models reflect the designer's vision because they know some stuff about the protocol and mental models reflect the user's understanding they know nothing about the protocol most likely um I really like this chart for visualizing the difference it's adapted from the book about face there's five shapes on this scale can you identify any of the shapes I heard potato I heard Circle so while we might um some of us might be able to identify the potato most of us are going to identify the circle and it's a representation of how users mental models take recognizable shapes however the closer we get to the other side of that scale the the model that reflects technology it's a less recognizable form or at least one that we are probably not going to agree on what is called and a really interesting aspect of this is that developers on my team encounter a similar Journey when they create programmable cryptography they start with mathematical proofs which they abstract into simple and familiar code so both developers and designers on our team are on this similar Journey transforming abstraction into something familiar and usable let me give you an example of how this plays out back to some screenshots of uni rep social I could describe this with an implementation model and say that uni rep social was built with two ZK protocols uni rep and semaphore and when you register and a tester will give you three Epoch keys and a set number of reputation points every Epoch to interact with other users positive reputation points are used to post and comment you can give positive reputation points to content that you like and give negative reputation points to content that you don't like at the end of every Epoch a user State transition occurs where the positive and negative reputation points are recalculated and your epoc keys are swapped for three new ones that might have made sense to some of you but for me when I first heard this it made literally no sense at all the language is Niche and uncommon but I I do understand it now but it's only because we created mental models to understand it we could have trained ourselves to learn the system vocabulary but instead we came up with a new way to describe the app by asking ourselves questions like what does this remind me of what do I know that is similar to this if we want to create usable ZK products we cannot ask people to just get used to a machine's language we have to put time into deepening our understanding so that we can create approachable applications that mirror the familiar so let's try this again what if I said unirup social is a place to build communities based on ideas rather than identities if you sign up for the app you get three personas and 30 rep to interact with other users rep is like points or currency it's needed to post in comment it's also used to boost the content that you like and squash the content that you don't like every cycle about one week you receive three new personas and your rep total is calculated based on what you have used and what you received from other members you must have a positive amount of rep to interact with the system I think that that was probably more except accessible but the thing to point out is that it's not a user's mental model we're still not at that stage it's a design team's represented model and this just goes back to iterating the point of like we need to keep cycling through uh and iterating on the work putting the work in front of people and getting feedback this is true for any of the designs in the space so although I could only share a few of our challenges there are many um but that means there's lots of opportunity for design with more people designing CK public goods I believe that we can Empower more Builders and product teams reduce friction when onboarding to privacy apps help developers create protocol resources that are informed by user research educate users by providing transparent information that evolves with them as they learn and reduce the stigma and normalize online privacy and anonymity if we want to see privacy normalized and made accessible to everyone we must continue to collaboratively design people from all kinds of technical backgrounds design by approaching challenges with curiosity getting comfortable spending time with the unknown aligning strategy to audience objectives testing potential Solutions and iterating their work I want to thank my team members who helped me collaboratively uh with this presentation we worked really similarly to the way we work on other things um our the QR code goes to our PSE Discord where you can find all of us um my handle's in the top left and we started a designing for public goods channel so if this content resonates with you please um join our Channel and start a conversation if you want to get involved this week like I mentioned earlier the temporary Anonymous Zone Community Hub is downstairs on the first floor and then on Thursday from 10 to 6 there's the adoption day ux unconference where we'll do some ZK design lightning talks and then have discussion groups later in the day we also want to start some learning groups for people who are designing in this space and we'll keep you updated in our designing public goods channel on the PSC Discord thank you so much [Applause] [Music] great thank you Rachel we again will have a few minutes of uh time so you can get up stretch go to the bathroom come back um for in five minutes at the top of the hour for akil's talk which is can't someone else do it shifting behaviors in ethereum network participation [Music] foreign that time of day I can't even get on stage uh right but um you know let's welcome Akil to the stage to talk about decentralization and why we're all here to make sure that we keep ethereum decentralized all right thanks to Rachel for that great talk and that Insight uh so just wanted to say it's great to be back at Defcon after such a tumultuous time over the past few years a lot of us have gone through a lot of personal and societal issues and to come together to celebrate and to look at all the changes that have happened over the past few years in the ecosystem and the things that didn't really change over the past few years as well so Defcon is actually a perfect example of what's trying to expose the community and the culture to the needs in different regions of the world and it's quite clear by the different feedback that we've been getting that their reactions that people are really not truly close to empathizing or understanding the needs of others when it comes to really benefiting the individuals that would be able to make the use of the technology to the most of their benefit so I believe that many of you that are sitting in this room have truly made this your life's works for the past few years and will be the individuals that kind of look at how we can look at ethereum as an ecosystem and what needs to be done to maintain the decentralization so I wanted to kind of take this opportunity to step back and really examine from a pragmatic approach maybe somewhat of a therapy session with these individuals in the room and look at like what has been really exact what has been happening in the ecosystem and how can we look at uh what's been going wrong and why are we really here and where do we need to focus our energies and what are we hoping to create as an impact from a Global Perspective for participants that come from very disparate and unique backgrounds and lived experiences so let's face it we have a problem all of us have this notion and mental model of can someone else do it when it comes to maintaining and running Services uh when we have to participate within this network and in the Rondo about way we've kind of just adopted this same mentality that we had coming into web 3 from the web through ecosystem as a whole so I wasn't kidding when I said this would be somewhat of a therapy session and we'd look at what is happening as far as Behavior change so in order to do that I wanted to look at the trans theoretical model of behavior change so there are five stages of change that have been conceptualized for a variety of problems and behaviors so the first stage is basically pre-contemplation so these are individuals that are not really ready to make any change they might be underwear or under aware of the issues that are happening uh so maybe there's a few individuals in this room that don't really that aren't really aware of the issues that we are facing when it comes to decentralization in the ecosystem then there's individuals that are kind of in this contemplation stage where they're aware of the problems but they're not really mindful or seriously thinking about overcoming them in any meaningful Manner and then there's no commitment to take any action so I think that's kind of the space a lot of us kind of occupy at this point is we're aware of the problems but we really haven't done any preparation or are ready to do any action to change those things so the next stage is basically preparation and that combines like the intention of wanting to create some change and then looking at some of the behavioral criteria to make that change in the first place and then intending to take some action in the first place so from there we go to the action stage and this is I think where the biggest issue happens within the ecosystem is that we get prepared but we just don't have the tools or the resources to take any action to create that change um so this is the stage where individuals actually have to modify the behavior they have to change their experiences environment and have in order to overcome their problems and this requires uh quite the overt behavioral changes and considerable considerable amount of commitment and energy and resources then from that we go to the maintenance so basically people work to prevent relapse and the work that had been done in the action phase and then obviously there's real apps and I think this is the point of place where we are in the ecosystem where we've kind of rewarded to making decisions in the hopes of mass adoption that kind of compromise the decisions when it comes to decentralization and we'll kind of get into that a little bit so we postulate that quite a bit on Twitter and other social media channels around like what are the issues but there's really no action or Force put behind them so my objective today or is to kind of like help some of the individuals that are in the room to move from this pre-contemplation phase to something that is a little bit more actionable or at least prepared for them to do so so decentralization has kind of been touted as this core to the ethereum of web3 ecosystem yet we continue to operate in a world where the end users have been trained and programmed to not think about any of the infrastructure that they need to run to utilize some of the services or the technologies that we utilized so it means that they're not really aware of how these things operate how secure they are how they're managed and what are the trade-offs when you actually get to making those trade us when you actually start to rely on these intermediaries to come and facilitate some of this technology and the community just continues to operate with the same Mantra of can someone else do it that we have been programmed to do so within the web 2 ecosystem but it's kind of interesting to also look at the different cohorts of people that come into the ecosystem so throughout the years these individuals hold very different values and their motive operation is quite distinct as well so if you really wanted to examine the people that are giving talks at Defcon you'll be able to kind of get estimate where and when in the ecosystem they kind of entered so from like 2010 to 2012 onwards these were individuals that were kind of Cypher punks they were crypto punks and they were crypto anarchists they wanted to take control back from the state as you go towards the 2014s 2016s these are individuals that are more game theorists these are system design thinkers these are individuals that are thinking about more mechanism designs and so forth and then as you go into the later years these are individuals that are more aligned with business cases and user adoption so the place that I kind of came into the ecosystem was around 2016 where I was sold this vision of web3 being my portal into anything that I wanted to do with privacy user interactions and so forth so the first thing that I as a PC user wanting to interact with ethereum was there's no Ico boom there's no rises in token prices at this point so all I could do was to interact with ethereum was try to run a node and the first thing I tried to do was uh look at the Miss browser and I was able to get it running but the issue was it wasn't able to sync so the next option was the period UI ran it was able to get it to sync but there was no features or anything functional that would kind of keep me utilizing that service and kind of interact with the ethereum network in any meaningful manner so then at the same time status and Jared were kind of like evangelizing this uh ethereum for mobile Vision where you could have no infrastructure on a mobile device you can interact with these Vector Technologies to whisper et cetera and this was around 2016 and we're in 2022 and I want to interact with ethereum what do I have command line interfaces it's unfortunate but there's a lot of infrastructure work that needs to be done a lot of resources and issues that have come up that has still led us to a position where normal users that want to interact with the network State can do that in a meaningful manner they can't run nodes they can't run infrastructure because there's just no easy way for them to do so so one thing that we come to realize time and time again is that users will always give up their Liberties for convenience and this happens within social media networks where the users give up their data privacy just for the sake of quick access and the ability to interact with certain use cases that are not available and that doesn't require them to actually run any infrastructure or node Services Etc and they really don't have that bandwidth or the time or the allocation to actually worry about some of this stuff when it comes to running infrastructure so we get into this situation where we're kind of like the the citizens of Springfield and we just want someone else to take care of all our problems and we just kind of operate within that mental framework um and I think it's it's really a disservice to the ecosystem and the the intended purpose of why we are here in the first place because we want control over our data we want control over our uh privacy and that we're in just a position where we're relying on intermediaries and putting a lot of trust in them to give us what we should be optimizing for so when we look at who is there to blame it it is the the ecosystem as a whole and the key decisions that we have made when it comes to trying to optimize for whether it's adoption or other consequences of Technology limitations that have been there so what does decentralization currently look like in the ethereum ecosystem it's it's it's you have to be kind of mindful and kind of step back and actually evaluate that most of the key ownership or individuals that actually invest in crypto tokens Etc hold their keys on centralized exchanges so there's there's a centralized party taking control of this stuff in the first place when it comes to normal infrastructure majority of nodes are actually running on Amazon AWS and cloud services so you're kind of back at Ground Zero again similarly when it comes to data availability or getting access to the transactions and so forth you're relying on inferior when it comes to staking a lot of the staking is actually Consolidated on staking pools or centralized exchanges at this point which is a huge problem uh when you do get into censorship and those organizations having to kind of function within certain jurisdictions and laws that they must abide by additionally when it comes to network security we have issues with client diversity so like the major execution client is get which occupies close to 80 which is a huge issue when it comes to network security additionally we did have issues with prism being a majority client but the community did a lot of energy and focus on that we're at a good position there but still there is a lot of work that needs to be done there and when it comes to dapps or other resources you know you're basically reliant on things like openc which are not very decentralized in any manner as well so unless you really run in ethereum nodes you're not you're like trusting third parties to provide you access to the blockchain and which is not really the the core value of what we were trying to achieve so you're not really truly participating in this P2P Network you're not properly propagating your own transactions through the network you're dependent on things like metamask to connect to inferior and then you're looking at etherscan and just giving this inherent trust to these organizations and these services to provide you the information that you're looking for and for it to be accurate in the first place so when you look at like the the participation of the current POS validator nodes within the context of the world you can see that majority of individuals that are participating are within the North America and Europe regions and this is a concern as far as diversity is concerned as well you can see there's a bit of action within the East Asian communities but that is still very limited and it's quite interesting to kind of like map this to the participation from ethereum Global online hackers it kind of maps quite nicely aside from the fact that there's a lot of developer activity happening in India but there isn't too much staking happening there so I think it's good to know that there is a lot of work that needs to be done as far as making sure that we've created the ecosystem and the resources for these Network participants to come in from these locations that might not have the resources to do so so 32 ether is a lot of money for individuals in Latin America or Africa or Asia so how do we get resources and technologies that kind of help them participate in the network and staking is not the only way for them to participate in the network so they can run nodes they can learn run like clients they can run other services and really think about how they can get some sort of participation within the network that doesn't rely them investing money and perhaps we can even look at how can incentivize those individuals and monetize or compensate those individuals to be participants in the first place as well which we can talk about a little bit later so it's clear that this these things don't seem like an issue until they become an issue and that at that point it's just too late for you to do anything so we've seen a little bit of a glimpse of this um when it comes to web 2 hacks Etc but most recently when it comes to tornado cash so I said one of the biggest issues or the blames was on us but there's other factors and other forces kind of functioning towards making some of this a little bit more difficult for us to decentralize and not be functioning within the current systems that do exist and that's one of those things is like adversarial estate actors so as we saw with tornado cash I'm not a legal expert or anything but so I won't speak too heavily on this and I think there's probably other talks with in-depth conduct kind of go into this route but they were basically put on the ofax sanction list and then the developers were added to this sdn list which doesn't doesn't make sense from uh perspective of the law at that point and then on top of that crypto projects are abandoned countries like China and India where there's a lot of developer activity but they just don't have the opportunity to work on these Technologies in the first place in addition the third forcing factor is that there's individuals which are kind of classifies mad adoption vultures these are individuals that come in take the narrative that you've been working on for the past x amount of years and then co-opted for their own benefit so these are the Elon musks these are the uh Jack dorsey's these are the mark zuckerbergs who are just waiting by the side that once they see their opportunity they're going to jump on the narrative and take it for their own benefits so when you see Elon Musk tweeting these dot coins and making people those coins kind of jump up in value a lot of people invest in them kind of Follow That Trend and when they lose money that reflects adversely on the ecosystem as a whole so all the work that you've done now gets smart by this rub pull that was kind of like facilitated by this individual that was having fun creating memes on the internet similarly we've seen what these social media companies do when it comes to feature releases one social media company releases a feature two weeks later everyone has the same features within their applications similarly these individuals are just waiting for their opportunity to kind of co-opt what you're doing and then utilize their it for their benefit you've seen this with Zuckerberg kind of reframing this his whole organization around meta worse and whatnot similarly with Jack Dorsey he's always pushing for Bitcoin and decentralization but we haven't seen too much come out of that so one thing that I wanted to kind of get into was addressing users needs so if you were thinking about what needs to be done moving forward is that we need to meet the users halfway or where they are that means that if people or majority of the world is using PCS and we want individuals to stake or participate in managing nodes or creating validators Etc maybe we create interfaces or documentation that's a little bit easier for those individuals to understand so this is the ease of access and then as I was mentioning earlier there's this part about incentive alignment so what does it look like for people to participate in the ethereum network we kind of confused it with just staking at this point but there's other opportunities for individuals to actually a communicate and get participation participation within the network uh through running nodes running like clients and other services that can be of a meaningful manner but like how do you incentivize them how do you create resources or infrastructure for them to even do that in the first place uh Additionally you have to kind of like take them through this Progressive disclosure phase where you can't just check them in the deep end of uh decentralization as they start to make those uh movements towards action you kind of help them and guide them towards that this movement as far as decentralization in the first place and that kind of leads into the guided education encouragement of those individuals so as you start moving up the the use cases you should make sure that those individuals are provided the sufficient guidance and the encouragement to continue and maintain the changes and the behaviors that they have implemented additionally we need to make sure that there's relevant context and narrative framing for the individuals that we're speaking to so the framing that you have around web3 and the challenges that you face with the financial uh restrictions or censorship Etc is not the same that the individuals in Bogota face or the people that in Africa face or the people that face in India and this this is the context that we need to be aware of to make sure that the framing is uh maneuvered in the way that they understand why they should be decentralizing in the first place and what does that mean for them and how does that benefit them in their long run so I think one thing that I would encourage for everyone to start doing on their own to if they really value privacy or security and want to like reduce Reliance on third-party servers and improve sensitive resistance or improve health and do your centralization of the network is to take ownership and participate in the network themselves and this means running a node or whatever it may be ethereum.org has been doing a great job of creating these resources that easily that are easy to understand and that have a lot of translations for different regions and I would encourage everyone to kind of start digging into some of these more resources online and try to understand where we kind of started as an ecosystem and where we have kind of ended up in the past few years additionally if there's individuals in this room that are quite passionate about creating this change for the ecosystem I would encourage them to come to adoption day it's the uxn conference where we have uh quite a few interesting lightning talks from individuals from optimism um from status from uh different client teams to kind of really dig into these different issues and think about what we need to be thinking about in the short term and to the long term when it comes to the ux challenges when it comes to adoption and make sure that decentralized is at the core decentralization is at the core of any of the issues that we focus towards so please be sure to add this to your schedule so we know how to plan for the room accordingly and make sure that we set it up since it is a small Workshop room additionally we'll have working groups focus on ux challenges between 1 pm and 6 pm and then after that we'll go to the chiva Lounge hopefully where Tomo will do a DJ set so looking forward to that myself uh additionally at Defcon this year we really made a point to highlight teams and projects that are working on some of this stuff so be sure to go to the client team uh impact boots I know for a fact that Nimbus is working on user interfaces to make some of this stuff easier um Lighthouse is working on some of this stuff I know prism and lodestar have done some research and development in this regard as well do check out ethereum on arm which is a small device that you can actually start running a node on an ARM device dab nodes provide services along this this regard as well same ethereum so they're all in the impact boot area so be sure to go check them out as well additionally I think we just need to kind of go back to this diagram around why we were looking at the transtheor article model of change and what we need to be mindful of so it's always an upward spiral and we're always going to relapse and I think over the past few years we've unfortunately relapsed point where we just don't want to take ownership of the managing our services or infrastructure at all and we're going to have to start looking at what infrastructure what resources which education needs to be put in place where people can now start actually preparing and putting things into action so hopefully there's individuals in this room that can guide us that can lead us move into more action-oriented mind frame rather than where we just contemplate and think about the issues that we are facing but once we actually get to the point that it's too late there's nothing that we can do so I would like to thank everyone for coming today and hopefully you get an opportunity to engage with the thousands of individuals that are coming to Defcon from disparate backgrounds and communicate with them and really learn about the challenges that they face when it comes to some of this stuff why are they here why did they want to participate in the ethereum whether it was creating resources whether it's developing protocols what really drives them and how do you take that context into the work that you're doing I think it's quite imperative and Community efforts like Defcon are amazing to see the the consequence of what happens at these events so you might see an idea spark at one of these talks that leads to a huge impact not only monetarily but just from an ecosystem-wide perspective uh in the next few years so be mindful of those conversations take the opportunity to really dig deep and think about the the reason why we were here in the first place and how we can kind of continue moving towards that decentralized ecosystem thank you very much [Applause] [Music] how long are you gonna hide away [Music] thank you Akil we will be back at the uh guess half of the hour for Connor is going to give us a talk about where we're going with quadratic funding so stick around we'll see you then [Music] right we're here for our last but certainly not least to conclude day one on the main stage we have Conor O'Day to come talk to us about quadratic funding he's certainly seen it from git coin welcome Conor all right is this thing on awesome so first off thanks for having me I'm super excited to be here uh I I'm Conor O'Day I work for Bitcoin or I am a member of the Bitcoin Dow and we're going to be talking about a Nifty thing called quadratic funding so first off I just want to take a quick poll uh who here has heard of quadratic funding okay I see a lot of hands that's good that's good who actually understands it okay okay maybe half as much I'll take it uh I also you know I'm still learning so uh who has actually funded a project in a quadratic funding program a lot of hands that's good and who only did it because you thought you'd get an airdrop in the future I see one two three okay I like the honesty I like the honesty so the too long didn't watch uh for the people that are heading out to happy hour right now uh quadratic funding has proven to be a powerful Tool uh but primarily in Niche communities like web3 and with few new advancements over the past few years uh which is basically qf is good as adoption has grown problems are becoming more apparent scale is hard and things like decentralized identity Community curation tools will boost scalability and then tweaks to the mechanism design can help Drive adoption as communities tailor qf to fit their specific needs and we're going to call that Innovation and experimentation equals Transcendence so that's kind of the the high level overview if you need to go you can go but I think it'll be pretty interesting diving into the details here so first WTF is qf spoiler alert for the whole presentation that is qf basically what it means is funding for any given project is calculated by taking the square root of each donation adding these values together and then taking the square of that result we'll get into that a little bit further on the technical side but basically the widely accepted definition of quadratic funding is it is the mathematically optimal way to fund public goods in a democratic Community there's always kind of been this emphasis on public goods and Democratic communities which covers many of the use cases but perhaps not all which I'll get into later and qf was kind of first proposed by uh Zoe hitzig vitalik buterin and Glenn whale in the paper you see on the screen right now and what it really does is it let us harness the collective intelligence of a community helps ecosystems signal and fund their shared needs and what it looks like in practice is your donations are Multiplied on this logarithmic curve and I really like this about a lot of implementations is you can actually see the impact of your donation as you do it and you can kind of see how you know a small donation can get a large match a bigger donation can get a bigger match but it really tapers off because the higher value is in the number of unique contributors rather than the total amount contributed by any one person so quadratic funding came from this idea of quadratic voting which basically allows you to Signal preferences but most importantly the strength of those preferences quadratic voting as a concept existed before crypto but was popularized by Glenn whale which is also kind of independent of crypto but kind of at the same time the eth ecosystem was maturing but compared to you know one dollar one vote or one person one vote systems it really it really allows you to Signal preference in a much better way and so qf and public goods this is kind of the common theme you hear everything here is about funding public goods everything quadratic funding is usually in relation to public goods and so what even is a public good uh it is a non-rival non-rival risk non-excludable good uh for example you know clean air or open source software which is one that we focused on a lot these are often discussed as a pair but I don't think that will always be the case we're kind of starting to stray from this public good Goods pigeonhole where the types of goods is more of a gradient that people are understanding and there are things like Network Goods Community Goods plural Goods even private Goods that could benefit from qf and it doesn't mean we are funding public bads but it means we just have to kind of rethink the the framing that we're using for uh for you know what we're funding with this mechanism so where are we today uh git coin in our history since we started in 2017 has funded 69 million dollars uh worth of Open Source software and public goods which is a pretty nice number to Round out for this presentation that just kind of worked out nicely and this includes grants bounties hackathons tips a bunch of different things that can happen on the getcoin platform not specifically just grants and for the get coin grants program we've seen kind of round over round growth now for over three years we started in 2019 with the first round had a 25 000 matching pool I think it got like thirteen thousand dollars of community contributions uh and two 200 contributions total so not a whole lot fast forward to Grants around 14 in June uh 600 000 contributions and over five million dollars raised for these projects these public goods these open source software projects uh which is really cool to see and these visualization graphs you see are kind of the the network 3D visualized of all these donations and all of these connections between users and projects and the most recent round grants around 15 just ran in December or September sorry and what I really want to call out here is that this wouldn't be possible without the the matching pool funders so these are you know Dows organizations you know private companies individuals that want to donate large amounts to the matching pool in order to incentivize the community to also donate to public goods and that last round had over 450 000 contributions over four million dollars raised and almost 40 000 unique donors but yeah so this wouldn't be possible without all these logos you see up there right now and so just want to give them a quick shout out because it's super important to what we're doing [Applause] and so we're you know experimenting with all different kind of types of quadratic funding rounds we kind of started with one main pool we broke it into categories and now we're doing what we call ecosystem rounds so we've done I think 20 plus unique ecosystem rounds in the last year or so and over 40 total a lot of those are recurring and some of them are kind of crowdfunded and more focused on a theme like the open gaming round or the ZK Tech round versus many others are kind of a single funder trying to grow their own Community their own protocol uh for example you know ens polygon and some of the others you see up there and the way I view it is this could eventually be part of the Dow tooling stack where it's better than like a yes no governance vote it's faster more democratic than traditional Grant programs so you know you can imagine a dow that needs to decide what work streams what hubs whatever they call their projects within their data what they need to fund they could use a qf tool or QV tool and with quadratic funding it has the added benefit of raising additional funds for those projects and then cause rounds I think are what are really interesting as well where we're kind of trying to break out of this web 3 bubble and you know make an impact in meat space in the real world and we've done rounds for climate diversity uh crypto advocacy DSi longevity we did around for Ukraine and there's still a lot of overlap between the web three communities and these communities you know for example in climate like a lot of the climate projects we see are kind of crypto focused climate initiatives which isn't a bad thing but what we're trying to do is really onboard you know non-cryptonatives to the the blockchain the web3 ecosystem which is difficult for everyone but I think we've been making good progress there and here's some examples just from the climate round I think these are really interesting because it really has like a global widespread impact and it's very cool to see in this case we are kind of onboarding new users to web3 which you know comes with a lot of manual hand-holding and and onboarding but uh it's really cool to see the the progress that's been made in in these areas and the last one I want to mention is these uh kind of geographic UF rounds so the regional and local rounds I want to call out specifically the the Devcon uh Latin America focused CLR fund round so that's happening now uh Bitcoin is not involved but you know we work with CLR fund we like them a lot and everyone should go check it out because they're also utilizing some of the mechanisms that I'll mention later in this presentation uh but yeah so that's that's happening now uh and as get coin we've done a few rounds like we did a an Oakland Youth charity focused round we did a China crypto ecosystem focused round and the downtown stimulus one was actually during covid and it was focused on Boulder Colorado and Reviving the local businesses there and I I think the thing what I want to say on this is just like we're all experts at what's right in front of us in our communities you know it can be difficult to fund projects that are across the world from you but this this mechanism can really help in in kind of you know shared shared public goods or localized public goods that maybe don't have an impact around the world but have an impact in in your neighborhood or your town so Growing Pains um civil attacks are the single greatest threat to quadratic funding if you haven't heard a civil attack is basically one human making you know many accounts with quadratic funding you can imagine if I can make a grant I can donate it to my donate to myself from 100 different accounts that totally excuse the mechanism steals funds uh and it's not good and so it's a constant kind of battle uh between you know mitigating civil attacks but also you know trying to respect you know personal privacy and identity systems uh and it's this game of kind of Red Team Versus Blue Team that's constantly evolving so we've seen civil attacks really increase as of late I'm not sure if it's like more awareness you know the bigger matching pools or just the bear Market people are running out of things to do to make money so they decide they're going to civil attack grants but it's an issue and we see you know we see the self donors who are trying to cheat by donating to themselves we see airdrop Farmers which you know are are typically not they're not trying to do bad necessarily they're just trying to get as many accounts as they can you know eligible for possible air drops which is also not good because it skews the mechanism and I think that's partly in due to a lot of the airdrops we've seen that have went to public goods funders in the past so we're working on mitigating that and then just general collusion between different real humans it's really hard to tell what's collusion between legitimate people when you don't know their full Identity or you know what is actually a simple attack but in both cases they're trying to mitigate that and then we see fraudulent grants so you know impersonations Grant emulations which is what we call making up a project and making it look like it's real but you know the GitHub is empty the Twitter has five followers but they really write it up to make it look real so we're dealing with a lot of that and the solution to all of this is identity so how can we Channel this airdrop farmer energy into raising more funds for good causes while not compromising the mechanism's Integrity um it's it's inevitable that people are going to donate to things because they think they'll get something out of it eventually and as long as we can kind of channel that energy in such a way that it doesn't you know hurt the mechanism and other grants then I think we're kind of secretly converting these uh these degens into regions without them even knowing it so get coin grants right now the one the platform that most of you know or some of you may know it's still fairly centralized but but that's okay you know we can't go to governance for every single Grant decision so governance helps direct eligibility requirements and then we have a centralized team that must be trusted to act on those decisions but you know this is a high bandwidth task for our team humans are prone to error it's centralized and you know at the end of the day it's not what we want to be doing with with our time and so as we kind of move towards a path to decentralization which I'll get to more later we're thinking about launching this permissionless protocol we have resilient identity systems in the works uh community curation and really self-serve product features so people can kind of choose how they run their own rounds uh and one of the one of The Primitives I'm most excited about is around decentralized identity and that is get coin passport um so this is an open source uh dap uh preserves your privacy uh it's fully decentralized the data is on ceramic Network um gitcoin uses it as you know to prevent sybils and provide trust bonuses to donors and it's all open source and anyone can integrate it with their own dap so we already have actually 60 000 passports created on on git coin which is really exciting and some of the Integrations that we've seen are uh beef Staker bankless Academy Rabbit Hole snapshot Guild are already using passport uh you know mainly for civil protection or quadratic voting or similar use cases like that and once we kind of nail this Sybil resistance with passport or you know through many combined means it unlocks this spectrum of possibilities of quadratic funding quadratic voting Fair launches uh Universal basic income one person one vote Dows data collectives and plural funding but we're not there yet uh and then the other the other mechanism that I'm I'm getting more excited about is you know different uh different ways to incentivize community curation so you know curation is creation and we're experimenting with things like Grant and identity staking where you know you actually put value on your Grant or on your identity and personally I think the the Revival of token curated Registries is going to happen so if you're not familiar super bullish on this but tcrs were kind of popularized you know a long long time ago in crypto land in 2017 but it's an incentivized voting game that helps create trusted lists that are maintained by the very people that use them so essentially using the wisdom of the crowd principles people collectively vote on what submissions are valid what should be removed and they're rewarded in tokens for doing so uh this is this during the 2017-2018 cycle there is a lot of hype around this and I think it kind of died out but I'm slowly starting to see it kind of come back into the the main web 3 discussion so even if it's not tcrs themselves some type of community community curation is is uh absolutely needed for you know a decentralized grants program all right so we're going to go into some of the new flavors of quadratic funding um lots of people are doing really dope stuff with uh public goods funding quadratic funding and we're excited to work with all of them to do so you'll see some of the logos there on that unnamed bag of candy but you know these new flavors we're really going to try to Taste the rainbow here so I first want to establish that almost all qf implementations kind of stray from the math when proposing you know adjustments or new experiments like we often get the reply like oh well that's not real qf um hence kind of the the meme I dropped in there but it took me a while to kind of fully grasp like what the image you see on the side there means basically the green is donations the yellow is matching and as we said before the matching is calculated by taking the square root of each contribution so those those blue lines you see there adding it up and then taking that square which is the full the full square of yellow and green that you see there and so that would be like pure qf right and that would happen if we well so so it doesn't happen in this case because what gitcoin does is we have a fixed matching pool and a fixed time limit uh which means matches will scale up or down based on the saturation so if a round is oversaturated or under saturated that means all the matching is allocated or all the matching is not allocated then you don't have this perfect square that you see here and most of our rounds end up getting saturated and what you see after that point is it's kind of a zero-sum game which means you know there's no additional matching to provide but as more donations come in it just shuffles around where that matching goes so you know some people have argued that it should kind of end after it's saturated and that would make that would be what's kind of like a fixed pool only where as soon as the round is fully saturated it's over which I don't think would be a good user experience because people want to know how long they have to donate and when it's going to end but it's one thing we could experiment with uh the other thing is that there's a fixed time limit but a variable pool um you could run it that way but you essentially need infinite money uh to make sure that you're not going to run out and that's not really feasible either so we kind of have this Middle Ground here and then there's other things too the trust verification bonuses uh we have matching caps on certain rounds where there's a certain percentage of the total pool that you can take pairwise bounding which I'll talk about in a second and many other mechanisms that kind of take the initial qf you know math formula and then add some tweaks to it to to kind of help the the experience so paralyzed bounding I'll talk about first this is a mechanism designed to proactively prevent collusion muting the impact of groups groups of contributors who contribute to the same grants as each other so if you look at the image behind me here you see those big clusters those are all donors that are donating to similar grants and that are you know have connections on their network path and so those donations are going to be are going to earn less of a match because of that kind of assumed collusion so less correlated pool of donors is more matching more correlated is less matching and then we could also experiment with like plural pairwise qf which which would you know with new identity systems like VCS dids sbts we can sort of better figure out how close or far a single individual is to your network and you know kind of take the the pairwise bounding a step further uh Macy's and other really popular mechanism this one's actually used by CLR fund and it's all about privacy so you know privacy is a public good privacy is a human right and Macy voting or funding is private helping to avoid collusion and vote buying so in quadratic funding users could not cryptographically prove uh to others how much they've donated or who they've donated to some of the caveats there I think is that it relies heavily on civil resistance assumptions as everything kind of does you can only make donations on one chain you can only contribute once to around and you know if there are trusted parties you know each other in person like they could still potentially include but in any case I think you know privacy is really important and this is a good thing that we'll be trying to experiment with soon um retroactive public goods funding is another concept that's not necessarily qf it's more quadratic voting but the core idea is that it's easier to agree on what was useful than what will be useful so optimism is not trying to be a grants program they don't want to fund what they want to see built in the future they want to reward what was already built so it's more export expert driven and proportional to kind of the past value generated from a project in their iteration they've kind of went for a whitelisting approach which reduces civil attacks and fraud but is less inclusive as a whole and the benefit of this is it can kind of incentivize the initial seed funding of a project so you know right now it's very hard to get initial seed funding for an open source project or a public good but if retropgf kind of gains traction and uh you know part of that retroactive funding goes to the initial funders then you might see you know private investors investing in open source with the idea that there's going to be an exit eventually so a kind of working backwards it could sort of help fund the initial stage of many open source projects and I want to call out we we're working on something very exciting with optimism for retro pgf using the new grants protocol that I think I think we've sort of announced but uh you'll be hearing more about that soon uh it's super exciting and the other thing I kind of wanted to mention is just that like when I donate to normal quadratic funding rounds I'm often donating to projects that I think have done really good work like I'm also donating projects that I want to do good work but but I certainly think qf in general it's a good mix between retro funding and you know future funding but it's a lot easier to donate to a project that you know the name you know they're doing good work versus someone who's brand new um so all funding is sort of retro in some capacity uh but you know that's kind of a personal preference thing that we haven't fully explored uh okay we're running low on time but dominance Assurance contracts are another mechanism that we could potentially use uh it's a product of a game theory meant to incentivize everybody in the community to contribute to funding the public good and avoid the free rider problem which essentially offers a refund to your donation if a threshold is not met whether that's the amount raised or the number of donors and with dominance the dominance part of it the the person offering the public good could actually would actually have to pay you some bonus on top of that so it kind of turns into a win-win for donors you know your public good either gets funded and everyone's happy it's what they wanted or you earn a profit and it doesn't get funded and ideally in game theory that might be the dominant strategy for Free Riders that don't want to fund public goods uh and then back to quadratic voting so you know do we really need the F and qf um there's plenty of great quadratic voting experiments happening and it might better serve the needs of some communities uh you really need strong civil protections or you know a whitelist system and I find it kind of more useful for single Choice decisions like a verse B versus deciding you know on what scale to fund something and of course it lacks the benefit of raising additional funds via user contributions so what is next so git coin as I kind of alluded to we're launching a new grants protocol that's going to be fully decentralized and we're kind of at a Crossroads because we want to you know decentralize qf uh using the latest and greatest web3 tooling but we also want to drive adoption of qf in new new areas in the real world which means making web 3 more accessible to the average non-cryptonative person so you know make an impact in meat space uh you know onboard normies and be grammar friendly so you know anyone can use it and we're kind of bouncing the scales here it's a bit difficult to do both at one time and this is a problem for uh you know the entire web3 ecosystem is is usability and user experience but I think we'll be doing some experiments both on the the new protocol and you know in maybe a non-block chain you know qf based system so that's actually what the downtown stimulus project that I mentioned for the local rounds section um that was totally done in Fiat uh in the boulder local community and we might do more of those more social network qf experiments but finally what we wanted to get to is the get coin grants protocol so this consists of a suite of overlapping products passport round manager Grant Hub it's going to be permissionless modular and decentralized so anyone can try to anyone can try different public goods funding mechanisms to kind of find what fits best for their community and this this really differs from our centralized programming platform now because we we have to manually kind of help run people's programs it's not self-serve you can't just spin one up by yourself and a lot of the a lot of the work uh is kind of you know based on our centralized team doing this this manual uh grinding to to get it done um and so this is going to be open to anyone and what we envision here is that you know project owners will use the grants Hub to kick-start their project uh use it as a vehicle for growth and then you know at a point far in the future there could be hundreds or thousands of programs running at any time all kind of design and operated in a self-sovereign way specifically to serve their communities all right and this is the last slide I promise um so get coin grants 1.0 was a monolith it's on this centralized stack super outdated we're excited to move on uh the grants protocol is really going to take the power of Bitcoin grants and quadratic funding and make it available for any evm-based chain and community so this is going to be permissionless open decentralized you can take any of those mechanisms that I mentioned earlier or new mechanisms that haven't been thought of and Implement those into your program you can kind of self-serve and Choose Your Own Adventure so we're really excited to launch this we have a few test rounds that are going to be going live in the next few months and I think in q1 of 2023 we'll be moving the entire git coin grants program over to this new protocol which again will be modular decentralized and hopefully civil resistant so that's I think the talk that's the talk thank you guys for having me I know uh there's a lot of happy hours and parties to get to so it means a lot that you're still here and uh yeah thank you Columbia and Bogota this is beautiful [Music] another 