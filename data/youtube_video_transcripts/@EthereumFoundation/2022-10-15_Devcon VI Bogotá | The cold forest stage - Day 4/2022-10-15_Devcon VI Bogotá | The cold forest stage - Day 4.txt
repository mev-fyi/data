foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign everything [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] thank you strawberries foreign [Music] [Music] thank you foreign [Music] thank you [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] [Music] [Music] foreign [Music] strawberries foreign [Music] [Music] thank you [Music] [Music] foreign foreign [Music] we are very exciting for this for for the last day in depcon uh talk we have a Skyline privacy with Nightfall and a Starlight we are having two speakers the first one is chaitana goinda okay I'm Paul Brody please come [Applause] and introduce yourself I'm Paul Brody I'm the global blockchain leader at ey I'm delighted to be here this is my third Devcon and it's very nice to be here on the last day without like a little typhoon bearing down on us as well so um I only have a few sessions I want to give uh all the time to my co-star chitanya as much as possible I want to take just a couple minutes to talk about a little set this up right and uh you know it's good to see the Hardy crowd here 10 a.m on a Friday morning right that's um that's not when you expect most people to be fully awake so what is the point of privacy right financial and Industrial use cases privacy is fundamentally essential right I think you know we talk a lot about the value privacy in the world of blockchain we don't actually do a lot about it but if you serve large companies we do a few Enterprises what you'll discover pretty quickly is that most of the things that enterprises do aren't uh suitable for fully public consumption right they don't publish their contracts they don't tell people how much they're buying they do in the in the aftermath right they publish their financial statements but they won't tell you in advance uh exactly what's going on at the time and they don't want to disclose what they're buying how much they're paying for it uh so privacy is really essential and one of the things that a lot of people don't realize is that you really need actually two kinds of privacy uh um you need one kind of privacy which is to represent digital assets or physical assets to tokens right but then you need a second kind of privacy to represent the business agreements that move tokens between Enterprise is right at the end of the day every business agreement boils down to one party has money the other party has stuff and they're exchanging them under the terms of some kind of agreement right so in theory if you can represent the money and the stuff as tokens and you can move them around with privacy and you can represent the business Logic the rules of that exchange with privacy then you can pretty much manage and operate any kind of business process on a public blockchain and for those of you who don't know at ey we are fanatically committed to public blockchains right that's really not just public blockchain but very specifically to ethereum we only build on ethereum right we only build on ethereum we only build on public blockchains that's been our policy for many years now um so uh we've got one piece of this puzzle it's called Nightfall Nightfall allows you to move tokens around it's currently in in beta on the test net we will be in production one way or another uh at some point in the very near future and uh that allows you to put things into a shield contract in the sense it's it's a little bit like Z cash but for any kind of fungible or non-fungible asset the second thing that we're building on and the thing that my colleague shitanya is going to talk a lot about today is how uh is both the combination of Nightfall and starlight and you're mostly going to talk about Starlight right right so Starlight allows us to do something pretty useful and clever which is to make business logic private on the public blockchain and this is the really hard thing we we spent a lot of time thinking about this right it it's really hard to teach developers to use Socrates how many of you use Socrates it's hard right it's really hard um but there's an easier way which is what if we could make a compiler so you could just mark up a standard solidity smart contract and then recompile it as a zero knowledge circuit and then you could run it on the main net or on a layer two then you would have a really simple straightforward way and a scalable way to have secure Private Business Logic on the public ethereum ecosystem so that is our strategic goal it's nothing short in my opinion than trying to completely transform how the entire world does business by moving uh Enterprise transactions from private blockchains or private systems onto public ethereum but with the kind of privacy that enterprises need uh I just want to close out by saying that both Nightfall and starlight are in the public domain right we're a large company so people are sometimes a little suspicious of what it is we're doing right everything that we have done is in the public domain we have relinquished our ownership rights to it it's not just open source it is fully public domain right and so there's a lot of stuff that still needs to be done we are always looking for help in this we are trying to build a true open source ecosystem around industrializing and scaling privacy with that I am going to hand over to the true star of this presentation which is chitanya Kanda she is one of the heads of our research organization and has been working on both Starlight and Nightfall for six years now I think yeah six years like that's real real effort please thank you Paul um I'm Titania and I work in ui's R D team as an applied cryptographer before we begin I'd like to mention Miranda Wood and swathi Ravel both of whom are not here today to present this but have been putting immense work and effort to bring it to where it is today now moving on to dilate the topic of a conversation what starlight is is it was born out of frustration out of six years of research with an ey we've been working on General Knowledge proofs for quite some time and we've learned quite a few lessons from it right trying to build private applications for businesses is not an easy task because what you have to do is come up with protocols that turn your business logic into private logic and then turn them into circuits now in order to do that writing circuits has a very steep learning curve and an everyday developer to be able to do that it takes quite a lot of time for them to learn it to begin writing the circuits to begin with that is just not practical because as ey we need to be able to churn out private applications at a much quicker rate than the developers can actually learn and that's pretty much one of the reasons why Starlight was born but in order to do that you now need people who are experienced in writing xenology proof circuits that itself is another problem because the number of people who can do that today is very very few that was literally how Styler was born we thought okay we're going to solve this problem because we need to scale much faster to create private applications and starlight lets you exactly do that first thing we've only realized after actually building this application is that it did something a lot more crucial in order to build private applications now it's pretty much instantaneous in the fact that the amount of time it takes you to create private applications is the amount of time it would take you to write a solidity smart contract and modify it a bit and that's it instantaneously you have private applications ready most importantly what we've also realized with an r d is that as a bunch of people who were hired to be smart and to do smart work we've not done very smart choices because essentially what we've done is we automated our jobs what do we do now well sadly I think Paul had that today so he might or might not have realized that until now but there's no going around it anymore very smart again now how does Starlight work you take a solidity smart contract and we pick solidity because it's the most popular programming language that blockchain developers know today you take a solid easy smart contract and then you mark certain parts of the smart contract private and then you create this other contract called smart contract or zero knowledge proof compatible with smart contract and you take that decorated small contract and when you call zapify zapify stands for zero knowledge apify private app if I is pretty much what it can raise so when you run zapify command the transpilar which Starlight is Will churn out a fully working private application now just to dig a dip more deeper into what that private application looks like essentially what you have are contracts contracts that hold the private business logic in terms of proof verifications and then you have circuits which have a bunch of statements that you then have to generate a proof with and then you have what we called Timber now Timber is another ey product that is actually one of our best work in fact what Timber is is it a Markle tree that holds as Leaf commitment Leaf nodes commitments to values that you would like to have private and the best part of it is that on Smart Con on on chain all you store is the root of this Markle tree you're not storing any of the leaf nodes none of the commitments but you also store what we call a frontier the front here is a bunch of nerds at various Heights of this tree which is used to compute the root in a much more efficient way than you can traditionally compute today in a Markle tree and the leaf nodes which hold the commitments the intermediate nodes of the Markle tree and the root itself are held inside a local database which is listening to the blockchain events from Timber so that's what Timba does timber has a list of private States essentially and then you have a blockchain client which will be used to do transactions um of Starlight you you use a blockchain client to send those transactions and then you have Socrates now Socrates is a tool that lets you create right circuits compile them create trusted setup of these circuits if you're using a trusted setup related stuff and then you can generate proofs with it as well as do off-chain verification which is not too relevant for us because we do on-chain verification and then finally we also create test end-to-end tests that show the entire application or private application working so it has to call the contracts generate the proofs from the circuit and then give you the final end state now what it is that we do by taking a plain vanilla solidity smart contract you need to use certain keywords to specify what parts of logic needs to be private and what kind of lot business logic do you actually want to hide and in order to do that we have three keywords that we use the first one is Secret is used on any state variable that is meant to be private or the value of which has to be confidential you can apply secret to State variables to function parameters to functions also it's a work in progress as we speak as a future enhancement but you can't apply to local stack variables inside functions themselves just because that comes on a business logic and not really any state that you're storing the way it works is that we use this cryptographic parameter called commitment which is both hiding and binding so any value that is held inside a commitment is not visible to the outside world only visible to the people who can open the commitment and it's bound to that value too so you have to create a commitment of whichever it is that the state variable that is declared as secret now to take a quick look at the example here you have a very basic example you have a state variable called X you declare that to be a secret so which means any value that is held inside X has to be secret to the outside world can only be visible to the owners of that commitment and then you have a function called add which takes in as its parameter a variable called Y which is also meant to be secret so what ad does it it increments the value of x by an amount of Y and both X and Y have to be private so nobody should know what x holds and nobody should know how much it was increment did by that's pretty much what it does will come to known in just a moment so the next keyword that we have is is called known this secret State variables are useless if all they do is hold the variable and do nothing what you need to be able to do is to actually make changes to these variables you need to be able to update them but the question becomes who can update them should it be the owners of these commitments or should it be other people too and there are instances where you need both of those situations so you need to be able to differentiate between the two and that's where none comes in so what known does is it takes the state variable and it will only let the person that can update this variable to be the owner of that state variable so nobody else can make changes to that variable so the kind of changes you'd make is essentially incrementation statements and the way it works is also very important what you would need to do as the owner of a commitment is that show a proof of knowledge that you own this commitment by opening the commitment using the secret values to the commitments that only you would know and then you would have to show the existence of that commitment in a Markle tree not by pointing to it but by actually not pointing to it by CR using a sibling path from the position of the leaf node and calculated Merkel root from it so that just does not reveal which commitment you're actually using then you'd actually have to show that you can change that commitment by proving that you know the secret key of the public key that is used within the commitment and that public key essentially refers to the owner of the commitment right then you will have to nullify the old commitment by creating a nullifier and then you would have to create a new commitment which holds the updated stage which is X Plus Y in in place of X so that's the entire logic that's happening when you declare something as a known and on the right you see the exact same example as before the only difference is you would see that X Plus Y and X is equal to X Plus Y is defined as known essentially what you're doing is you're creating all of these statements which will then be generated as proof and the only person who can create that would be the owner of the commitment to begin with and then you have unknown now unknown is the opposite of exactly what known is so known was someone who owns it making changes to it unknown is someone who does not own this commitment should also be able to contribute to the value of that state the way you would do that is we have this concept called part commitments essentially what part commitments are there are part of the entire state of the secret variable so if you want to know the exact value of that secret variable that does not come from one commitment but it comes from the summation of all of the part commitments and these part commitments themselves can be seen as utxo like nodes that can then be individually used to move around so that's what part commitment does and to take a quick look at how that will work we have an example again here a slightly different example you have a secret variable which is called balances which is a mapping it's a mapping from addresses to the balance amount you have two functions one is deposit whoever calls deposit is going to be able to increment their balance by the set amount and then you have transfer and whoever calls transfer will transfer a certain amount from their balance to somebody else what I want you to notice here is that just the yellow bits of the code so you're declaring balances to be secret which means you want no one to understand whose balance is how much and then you have the function parameters amount and recipient to be secret so if you want to do a transfer to a certain user a recipient and it's by a certain amount we want both of those to be secret too so those will become private inputs to your proofs finally the last table where you see unknown balances that's the other bit so the way our known works is by creating part commitments and that particular statement you will notice that you're incrementing the balance of somebody else not your own balance that's why you need to frame it as unknown instead of calling it known and the compiler will be able to create part commitments instead of throwing an error at you very quickly um I keep talking about commitments just want to talk about what commitment actually holds for your normal variables commitment holds four things it holds the state variable ID every contract has a list of state variables and then each of them have an ID and then you have the value of the state variable and then the publicly of the owner of the commitment and the random salt which is required for the hashes now well you can't see what's happening there but I will tell you it's about it's this mapping kind of state variable which holds balances that are mapped from address to the balance amount it's essentially in that situation there's a slight change where the first part of that hash has the state variable ID and the mapping key which in this case will be the address of who's ever balance it is and you hash them together and that becomes the first part of the commitment structure and that is literally how the commitment structures work now in terms of the various steps that we go through to actually have the completed private application these are the steps first you will take the solidity smart contract which is the solidity smart contract with the keywords added to it by the developers you then syntax verify it there will be various cases where developers would not use the keywords the right way and you'd have to be able to throw errors and warnings at it and install it is smart enough to be able to show that then the first step is to actually remove the keywords that you added these three keywords and you will have a plain vanilla looking solidity smart contract you take that contract run it through solidity compiler and it output an api.json file which essentially is the syntax with the various State variables and functions that this contract holds now it's a Json object of the nested type but essentially you can parse it as what we as what we know as abstract abstract syntax tree and AST so what abstract syntax tree is it lets you take a new program and split the syntax of this program into a tree and in the case of facility smart contract you would have your contract at the very top which will then be split into State variable declarations and function definitions State variables will then be split up into the type of the variable and the value of the variable and the function definitions will be split up into the type of the you know the function parameters the return parameters and the body the function parameters and the return parameters will be split up pretty similar to the state variables between the type and the value they hold and then the body which is the important bit is going to be split up into the kinds of statements that can exist expression statements assignment statements so you'll have the operation on on one end with its children node being the left hand and the right hand operands of this operation that's that's how your abstract syntax tree would normally look like so you take that tree now once it's generated from the abi.json and then you put back the keywords that you used originally in the solidity into this tree so if a variable was Secret into its type you will now say secret type variable now from this modified abstract syntax tree you will have to generate four different output files the files being circuits contract the orchestrator code and the test code for generating that you will actually have to create four different kinds of abstract syntax trees which will represent what the code should look like in files from these original abstract syntax tree and from those abstracts and tax trees you will then generate the code files that's pretty much how it works sounds simple and the code is painful I tell you now just to give a quick idea of what the architecture looks like um you would have your Zol contract which has three functions all of which you need to have all of which have secret variables that it manipulates then you will have the orchestrator the orchestrator holds the API essentially a user will call the API and the API will have an API endpoint for each of those functions so once you call the API the API will then orchestrate by interacting with the proof generation or the contracts accordingly now you also Orchestra can also do setup for your circuit which generates the private and proving keys and the verification keys for these circuits and then it will also deploy the required smart contracts onto the whichever blockchain you're using but in this case we always use ethereum pretty much and it will also deploy the verification key into the verify your smart contract and then it also holds the database of the commitments that pertains to the user who's using this orchestrator as well as the secret information that is required to open the commitments it will also hold Keys which suggest about the ownership of the of a commitment and all of this of course can be rear architected a bit more for production scenario while you're storing this information much more securely in a HSM wherever you'd like and then you will have the smart contract and you have the shield contract which is the con the function which is the contract that gets called when somebody wants to do one of these functions which will in turn call the verify your smart contract to verify the proof that you've just submitted to it using the verification key that is relevant to that verification and then you will have the timber tree that we just spoke about earlier all it holds is just the root that's why you see it in yellow the rest of it it's not really held inside the smart contract cost purposes and then you'll have the Socrates which holds the proving Keys the circuit files which will help in the generation of the proof for each of these different um circuits and then you would have the timber Markle tree which holds all of the nodes of the Timber Markle tree itself now taking grommos the final bits so giving a quick example and here we have an invoice smart contract and the secret variable in this case is in Wise which is a mapping it holds against an address how much invoice is owed by that address now you have two different functions add invoice paying wise the way adding Voice works is that somebody who wants to invoice a party a that wants in what invoice party B will add to party B's invoice pinning invoice amount they demand they should be invoiced by and so that's why you will see that I am invoicing somebody else so I'm setting their stage so I'll have to specify unknown and that's pretty much what's happening here and then when pain was called what it essentially does is I will pay my pending invoice to whoever I'm supposed to pay and while doing that I have to reduce the amount owed in my invoice amount of depth statement State variable by the amount I paid by so that's what pain wise does now just tracking through the various steps that's going to happen is you know you have on absolutely smart contract which will spit out all of these different bits of logic a user will first call add invoice API because they just want to add an invoice when that happens immediately the orchestrator will look oh should I fetch a commitment from inside my DB or not in this case because I'm adding an invoice with somebody else I I don't have any of my commitments that I'm spending I'm just creating a new commitment for somebody else with their publicly as the ownership so I'll just be creating a commitment from scratch once that is done I will then have the orchestra will then have to speak to the Socrates asking you to generate a proof with the private inputs and the public inputs required for this function using the private proving key of the ad invoice once that is done we get back the proof to the orchestrator to the orchestrator and the orchestrator will then speak to Shield contract by calling the ad invoice function The Shield contract which in turn will receive this proof from orchestrator will have to call verify your contract to verify that bit of proof using the relevant verification key of adding wise and unsuccessful verification we update the state by adding the commitments to this Markle tree and the route is updated at which point the timber tree which is a Timber container which is listening to the timber events of chain will receive the latest commitment and The Roots and then it will store that within itself so that's pretty much how a private application would work and in order to build this entire application all the developer has to do is to write a solidity contract and add some keywords and then call A transpiler and that is pretty much it thank you Titania and I will just add one final message which is if you want to play with this stuff it's out there on GitHub it's github.com eyblockchain it is free it's open source it's maturing quickly I think we're in a pretty good beta now and it's getting better by the day so please go try it make zaps uh and please use our our phrase Zapped do we have any questions or just gratuitous flattery yes you sir I just want to say this project is super awesome one of the most exciting things I've seen here at Devcon now I did notice on the GitHub there's a lot of disclaimers everywhere basically saying please please please don't use this in production um I just was curious what do you guys have a road map or what are your thoughts around when uh you think it'll eventually be a little bit more mature and ready for uh production applications these are disclaimers that we are required to put there based on the advice of our attorneys um uh I mean I think we are I mean we will say when we think we're sort of at version 1.0 right and we encourage people to test and play with it but um and and we will probably get some third-party verification as well but you know fundamentally we do like we can't tell other companies what to do and we certainly don't want to be responsible if things go wrong which they always do in software so thank you for the talk so one question uh is there a way that two private keys can really reach the information not approve so in that sense you always have been figure out that the balances for example the only one looking at this imbalance was the address who owns the balance so is there a way for example is there a regulator or somebody who needs to have all the access at all the proof to be included in the information you mean to say if a commitment can be owed by more than just one key um well ownership is just always with the one key and ownership is defined as not whose key there is inside but also actually the knowledge of the commitment if you wish to share the knowledge with more than just one person either of them can now you know spend that commitment so if you'd like multiple parties to be able to spend a commitment you just share the secret information with them that that's what makes them the owner the other sense about events so now we are saying state but it doesn't make sense to to include the events in this uh no known Etc so as part of events you're not actually revealing these secret variables at all all that get sent out as part of the events is commitment which is hiding such that no one can actually see what's in inside it anyway and then nullifiers those are really what will be the variables that events transmit think of time for like one more quick question and then then we're going to be yanked off stage this is definitely great um so nothing binds it to just ethereum it is any evm compatible blockchain this this should work right well um it spits out solidity smart contracts obviously it's within in the byte code that is required for solidity so in that sense if that yes but if you want to hack it to something else you literally have to change the code such that it spits out the bytecode that's relevant to whichever blockchain you'd like to use it for okay um so that's well that's one and the second thing is like if we want to optimize for like let's say proof size or verification time or whatever yeah 16 versus block or what how where do we set that up so the proof itself is generated by Socrates as long as the proving system that you want is supported by Socrates you can actually have it generate the proof in exactly The Proven system that you want don't think Planck is currently supported by Socrates so you wouldn't be able to do that but I'm sure they're looking to add it thanks awesome thank you everybody have a great day [Applause] [Music] thank you Paul thank you to Donna um well our next talk is CK budgets and our next speaker is Adrian the founder of tismo next is here please Adrian hi everyone I'm pleased around of applause thank you [Applause] hi my name is Adrian I'm the founder of cismo and I'm excited to speak today about GK buddies that are a new primitive for you to leverage fully your own chain data you also run data so this talk will cover the notion of sovereign identities but but before getting into that I'd just like to spend a few words about sismo we started this move because we are concerned about the centralization and lack of privacy of our recurrent social tools and digital identities we think that there's too much power in the hands of big companies holding our personal data and in governments that can access it at will and so what we want to do is really to add a privacy and the centralization layer in identity systems so that will remain Sovereign we want to predict Humane Society meaning that we want to be sure that individuals remain in control of their societies and that we keep unchecked the central entities that are public or private institutions so what we do is build Primitives to empower our self-solving identities so the first primitive that we built are GK badges they allow you to leverage your Sovereign data we'll see that later but they are soluble tokens they are non-trustworld tokens that are attestation meaning that when you have SDK badge it means something about your identity your data your reputation your history they allow to you to do three things first they allow you to import reputation from an account to another let's say I have a address and I want to prove that on another address have an attestation I get to ZK batch on the new address and I have the proof that I have a book it also allows me to selectively reveal what I want from my account so granularly reveal some personality let's say that I have an account with a lot of data I'm able to pick one piece of data let's say the crypto plank ownership and I'll be able to reveal that to someone I own that without giving my address or anything else the the last thing is it allows you to aggregate your data let's say that you have a punk on an address and a bank on another one and you'd like to prove that you have two points without creating a link between your accounts that's what DK badges allow you to do so it allows you to do to control your identities and without creating links between them so now I think that before getting into the the technical part of the SDK badges I'll I'd like to spend some time on self-serving identities and because that's what budgets for we built that it's it's our goal is really to with DK Badges and generally with cismo is to make our Sovereign identities more powerful better than web 2 identities so better than your Google account so the web to identities a web to energy in the work to world the ITT is stored in an account let's say your Twitter account you choose your username your password and they give you an account actually they don't really give you the accounts it's still theirs but you can access it if they are willing to and you start doing things on Twitter you interact with others and you are starting to build your identity so here you have an identity in a webto account that is not yours it's your identity you have the same with Facebook with Instagram with LinkedIn you have your identities that are on rented accounts an interesting thing about this identities is that you still have some control over them you can use them to connect to other services that's the singer sign-on for instance I can connect to type fully with my Twitter account and it allows me to um I can bring some part of my identity that is on on Twitter totally so there is some sort of portability but of course it's super restricted at any point if Twitter thinks that type release is competing with Twitter they will remove the access of these accounts so we see that that yeah web 2 identities are not yours it's super restricted what you can do with your identities of course there's no possibility to link your identities together meaning that it's impossible to create an event where you you invite your Facebook friends your Twitter friends your LinkedIn friends because they are actually competing on your accounts like it's not your accounts it's theirs it's their asset that's how they make money they want you to put as much data on it as possible and so that's not two islands you cannot fully leverage it and on the other side we have the sales serving accounts data for instance uh ethern wallet it's owned by a private key meaning that the private key is the thing that you must have the private key to do anything with these accounts what's amazing too is that it's permissionless anyone can create self surrender accounts without asking permission to anyone so okay that's great what I can do with it of course I can start adding some ether to it for instance and I can trade off uni swap it starts also to build my density now I have some financial data on my account that is mine I can buy a ens name I can buy a nft and I interact on social on social medias on chain so by doing this a bit like on Twitter I built my identity but this time this identity is mine the data I need is mine and it's controlled by my private Key by the way by by using ens I also create this as a public accountant numbers so very interesting so that's one part but actually steps around accounts are more interesting than blockchain they are bigger than that because okay you can use the private key to send transaction to to use decentralized applications but you can you also use them to log in on into your app I think you know using snapshot or other applications that now you have login system stems based on wallets that's called sign in with ethereum and you can log into an app traditional app but instead of an email and password you log in with your wallet so they also are awareness and identities accounts are better than than traditional accounts even at web 2 stuff so okay I can connect to snapshot with my ethereum wallet I send a message they say okay you're logged in and what's great is that you bring your whole identity to the app so what does Snapshot is okay you're logged in as data notice or you have some other or you have some uni swap tokens you can vote on my governance with it so that's where you cannot you you start to see the sovereignty that we have over our identities with wallets that I can bring my identity to the app but there's something that is less cool because it's the beginning we immature is the fact that when I do this I actually share everything all my identity let's say that I have An Occurrence my menu account that is private with a lot of data my erc20 is my assets my nfcs so many things and that I want to access an app to let's say that are created by crypto pen Corners because I just want to be part of a cool community and access the chat app using sign in with ethereum I would have to connect with my main wallet and give so much data about myself here what we saw is that at every time that I connect to an app with signing with them I bring all my data but again the sales training accounts are amazing they're controlled by a private key and you can do even more you can do zero knowledge proofs and with this account you can basically select a piece of data that you want to share and and that's it so again it's super powerful and that's everything that's that's what badges are about it allows you to selectively reveal some part of your Sovereign data so again what they are they are tokenized at attestation meaning that when a wallet has this SBT this non-traceable token it means that it means something about the identity it's an attestation like they have a crypto pen the voted on the governance they have a certain number of Twitter followers stuff like that it's DK because it's it's minted by a ZK attester this is a smart contract that accepts zero knowledge proofs and okay you brought me the knowledge proof that you have a crypto bank now I give you the badge that you have a crypto pack and it's on evm chance uh it's uh deployed on currently on polygon but we plan to go everywhere especially on on layer 2 of course now a small thing about badges that a small Nuance that's not very important but still these are ERC 1155 each badge has a token ID in this contract and that means that each bus each badge is a sort of erc20 it's not really a NFC so erc20 and for the same batch you can have different balances so we'll see that later why is interesting but you have a value of the attestation corresponding to the balance of your batch and the higher balance maybe it means that you have more followers or your batch means more we'll see that later so the process of meeting aziki badge is pretty simple I have a source account here is the adrian.eth I have data I need my serving data one piece of data is that I have a crypto bank I want to prove it I'll generate a GK proof and send this easy key proof to the Tester the accessor validates that okay has a punk uh high value that I mean the badge but the SD card tester at no point will know about my address last thing he does is that it stores only fires we'll see that later so to to really understand better GK badges I like to use two identities let's say that I have my public wallet again did you not eat I have my ens names I donated a Bitcoin I'm a verified human meaning that I docs myself I uploaded a video with my name raster name and it's linked to my address so this address is completely docked like everybody can know everything about it I have some nfts I introduce two conferences so I have some pop-ups and actually I have another wallet this is this mine is my private wallet that's where I do my DJ and stuff I have a lot of transaction I maybe have a lot of assets hopefully that's the dream I don't have this but that will be cool to be a dealer a lot of assets a lot of nfts a lot of things I don't quite sure that I never want to connect them together let's I want to use them together because both have valuable data and I want to use them together so that's what rck badge is about so the first thing that it allows you to do I'm a verified human and they do not eat I'm doxed but now let's say that I want to access my private wallet an application that requires you to prove that you are human of course I don't want to link them together so what I'll do is that I will have the proof of humanity the key batch online wallet and it will just reveal what I need that is I'm a human I have somewhere a slow circum that is doxed and I was able to do this badge only once okay so now we'll get into the technicalities how everything is done the zkr tester I told you about the one we currently use is the Hydra s1z cat tester Hydro S1 is for the proving scheme because we this statistor accept a certain type of GK proofs and I'll explain what those UK proofs are so behind the hydrox20 care tester there's always a group of eligible accounts that's how it works so for instance behind the ZK the proof of humanity is the cable there is the list of all the registrants that are on the poh registry so of course there is my address we see this that there is a value to each address to each account this value will be the balance of the batch and with this you can um you you can use it to to code some sort of tiers so let's say imagine that in V2 poh have a super verified user like it's verified but very well with kyc or I don't know what you could have maybe there will not use with the value 2 and it will give the badge with the balance too and everyone that has two badges like that has balance two of these batch means they are super verified so again yes here is just you have pH UI in the group with one you are not you're not in the group so you have the group of eligible accounts these are the accounts that will be able to meet the badge and we put them in a Merkel tree it's a position Markle tree so that it's not friendly which is that but in the leaves you have all the eligible accounts we have the route we publish the root and chain and we'll see what we do use everything so the the the the way the the badge is minted is first you go to your front end so I'm on sismo I'm connected with the arduino.if the four seconds I first I upload the miracle tree now I have in my front end everything happens on the front end that's what guarantees the Privacy so on in my front end I have the miracle tree I have my account and what I will do I will do three things first I will prove that I'm the owner of the internet.e and these three things will be done in the Ezekiel circuit so first thing I'm the owner of the adrian.t second the engineers.e is in the Mercury Beyond local proof and the third thing is I actually own the destination account let's make sure that I cannot give budgets to others or that I cannot spam another account so these three things I I'm daniel.is Source account destination accounts I'm part of the tree I do that in the GK snack I get the ZK proof the executive proof reveals nothing but there is an address that like this users has proved to have an address that is part of the tree I give that to the zika tester and the decal to sell does two things first it verifies the proof okay it's valid ZK magic and then it register a nullifier I think that there was some presentation uh Defcon about this but it's a way to make sure that from One Source I can do only one batch and for this I register on unifier it's the anonymized version of my address basically so that's great and now I have my badge on my destination account and there's no leak nobody can know from this destination account what account was used to generate it um so again we saw that this DKR tester um allows you to prove from a group to create from a group SDK badge and actually this is anyone here in the in the room can create its own the keyboard that's what we build system we don't build this mode to do some Partnerships or something like that it's a primitive everything is open source of course and very easily in 15 minutes if you are developers we have a tutorial that helps you with that you can fetch from your subgraph from a bigquery from anything you can fetch your group choose the metadata for your badge choose the visual and that's done so again anybody can create this DK badge can create a group as a keyboard and we just released today the factory of sismore it allows for even people that are neither color or designers to build a GK badge it works that way you you add metadata we have a SVGA Editor to create your CK badge and then you have just to copy past the list of address you push the button and done you have your SDK badge available so that's I think that's super great so I invite you to try that um and before that I'd like to before getting yeah now I want to speak about the protocol so we saw that sismo is open anybody can add its group it will have your their own GK badge for their user Community but even better actually so that's what I told you about anybody can add this group you get the batch now which is even greater for more advanced developers is to create your own accessor instead of you using the rules of Hydra S1 I told you verify membership verify ownership you can create your own new rules to verify the user request so for instance you can use smr4 it's another SDK scheme that will be a GK tester but you can also use a public accessor like the proof that you would require from user is not a secret proof but a market proof and the signature is recover or you could even create a centralized tester meaning that the proof that you have to send to get your badge is a signature of the third party so again that's that's what we're trying to do is really primitive we're not here to yeah we want you to have fun with this so that you can really control the data of your users and and that you can build weird stuff like if I did in 2020 it did real stuff with composability between all the financial applications here what we want to do is we'll stuff about the social capital that you have so that's it again all these open source invite you to read the docs and I'll get a so now we get back a bit uh to recap a bit so what it allows you to do I told you that it allows you to import reputation from the public to an unknown wallet but you can do the reverse again if I was a degener in my and on wallet I could import this reputation to my public wallet have ethernet power users only top 0.1 percent ethereum users can means and so that's why I approved as they generated that I'm a Degen but I never revealed my wallet so that's yeah one big thing the other thing if you think about it what happens if I mint the badge on a one-time address fresh new address What I've Done by doing this is that I'm able to reveal just exactly what I need it's not about building an identity is to I need to prove to someone that I meet some criteria I create a new address I'm in the batch there and I will also prove exactly what I need so here on the adrian.e again I have a lot of data one of the data that is mine sorry is that I have a lot I have the HTC prep thanks to this I can get I'm eligible to the proof of attendance behind SDK badge the group of eligible users is people that went to either a Defcon or HTC or eat Berlin very legit physical events and so I'm able to mean that to a fresh new address and then I can use this address to for instance get private merchandising or access air jobs to get into events and with this what I was able to do is prove that I went into one of the top conferences that I'm a human and not that I went with no time the Adrian that is that's that's leveraging your data that's what we call it so it's super excited about this the last thing that we intend to do that is not life is the way to aggregate your reputation in cismo our governance is not token based or it is token basement but not Financial token based it's been is based on contributions meaning that the more contributions you did for sismo the higher voting power you have again it reuses the things that I told you about the balance of the token basically the more contributions you did you the higher you will be in the tier of contributor and the higher voting power so here with ZK badges you will be able to aggregate your reputation from your private wallet that maybe you held by using a lot sismo and from your public wallet that maybe you held by doing some threads some communication about this more so yeah again I think for governance power this is very very interesting to have reputation based governance instead of just uh like who has been like instead of erc20 is only that is financial capital or communities that are ruled by your nft that you just have to first come first serve and it's like a airdrop Farmers this kind of stuff here these tokens means a lot and it's private so you can really speak your mind there's no risk at knowing that you're a team member or I don't know so we are super excited about this new primitive so now uh I I'd like to speak about the long-term vision of system again I'm able to aggregate view I I'm able to aggregate data the way it works is that basically anytime I want to use an account to prove themself about it I will send a message with it and it gives this account the ability to be in the ZK world like from now on I can prove everything about my data so the way it works that I will import into the system of world that's your encrypted data volt that is only accessible to yours I will store the signatures that I'll tell you about so I signed with digital.is now I'm in the world with the unknown I'm in the world and now as a user I'm the only one that has access to all my data and now it doesn't matter whether it comes from an address to address or I don't know what I'm the user I have yeah access to everything and I can use it as I want so for instance let's say that I want to access an airdrop and they require me to prove that I'm assuming that it's a civil resistant airdrop that would be great to have that so they require me to prove and that I'm a human and that I don't know that I traded a lot on their platforms or that I am a big user so that's what allows me the world to do I can generate the ZK proof let's say on the one-time address on the go and I can give I can connect with any resistance to this service and review just what I want the the other thing that is interesting is that you can in the long run we are using Badges and sbts because we think that there are tremendously great at standardizing things because everybody knows how to fetch a token how to read your token and that's why I think that they have an advantage over pieces actually because the standardization is is better and you can do crypto native stuff you can what we did with DK is the ability to programmatically code reputation in in in some sort so we are very bullish and this is nsbc's but but we are mainly using tokens it's a big question why we're using tokens because they are great at standardizing once you have reputation as a token it's super easy for anyone to fetch it to know that we have designing with the term tools and all these things but on the long-term vision do we really need to send those UK proof to a Smart contract to mean the badge if what we want to prove is to a third party let's say that I want to prove to a merch store that I have crypto Bank do I really need to send a badge on an address maybe not I can directly send the ZK badge to this third party so that's the the big big vision of system is ready to be to be a Google connect on top of your server and identities you add your all your accounts your Twitter account your GitHub account you also learn the address your Bitcoin whether it's your ethereum wallet you upgrade all of that and then when you want to send to an app they say Okay I want a bit like when you connect to with Google connect they say okay they will access your email your contacts your all these things what we don't hear is that okay I I connect with this more this app want to see your amount of I don't know nfts your total net worth all these things and you choose you choose what you want and if you choose your food to bring your full reputation maybe maybe we'll you'll have access to the best services but you can also choose to just reveal what you want because if you don't want to give to this application everything so yeah that's that's uh really about system is trying to we have more and more engine data we have more and more great projects that are bringing of chain data to Unchained data but today we cannot really leverage it we the Privacy is a real issue about identity because we are used to web to Identity that are private because they are closed it's closed Gates they don't want to see anything so of course it's private by Design but on web3 with public by Design but this also caused some issues so I hope that uh that I share my excitement about what we can do with serving identities and we're hiring by the way so if the mission is exciting to you we are very small team we are just seven but we are very passionate about what we do so feel free to reach out and again everything is open source we spent a lot of of energy to the documentation to the quality of our code so yeah we're here for the long term we'd like to have many contributors and yeah Richard thank you guys do we have time for our questions or I don't okay so if if you guys have questions happy to um hi thank you for the talk that was super interesting so my question was about um updating of ZK badges so for example in the example you gave you said you own the punk and then you create the zika badge that you're on the punk what happens to that batch when you transfer the punk and don't own it anymore yeah so actually for the hydras when that is there the badge is a snapshot meaning that it doesn't update but that's where actually the protocol is interesting that you can create another adjuster that could be updatable and like I don't know every like some you could code that like the way to for a central party to update the route and make sure that the badges that were issued are no longer issued but I think that it's still a bit complex and the best way is really to think about DK badges as a snapshot attestation and it's up to the application to ask for users to renew so yeah that's really the way we think about it now thank you very much really cool stuff uh lack of privacy is of course one of the barriers uh in this ecosystem so thank you for addressing that uh have a general question about how do you collaborate with individuals and and projects within the space because at the end of the day it's about going to Market and it's it's promoting it all to yeah individuals and teams that are building could you explain what kind of projects um any projects yeah yeah just more generally what's your strategy to to proliferate yourself okay so I think we are a project that that should be used by many applications first I think that we are one of the first teams that are using ZK for a very concrete case and as I told you about we can have multiple zkr testers so if we have a zika team that has created a musical scheme we are using row 16 uh Hydra as well that is very specific but if another team has another way to create attestations we can think about change links GCO for instance they are able to do zika attestation from web to data they will come to visitor here and that's why we beat it for other teams it's if you want to do repetition within your governance you can create your CK badge or even better you can create your own zkr tester and build logic in it and so whenever somebody let's say Minto ZK badge that I played on on a certain game it updates the metadata of of their nft or you can do so much things it's really big to have fun as developers but it's going to gain time for it to educate everybody that generally happy to speak with everyone I have a question here uh really fascinating talk super amazing and one of the things that popped into my mind when you said that this is comparable to the D5 movement of the D5 summer D5 came with a lot of hacks and a lot of blood by fire so how do you protect the Privacy say we put all our addresses have this like great identity and you know how yeah some of the risk of that and what do you see for that yeah when I was doing that is that D5 was raw it was the first time we discovered like before Banks and insurance and all like all the financial services were provided by webto applications that didn't talk together and we discovered what I can deposit in a landing tool and then use that to bring liquidity to an exchange and then use that to take somewhere and it's huge but we could do the same with social Capital like today it's impossible to use your let's say you are Uber driver 2000 drives five stars you cannot use it to get a good loan that's what we want to do like we want to have credit score based on reputation and you can access a better interest rate so so again we are new primitive that should allow new stuff in a privacy preserving way so yeah that's a I think it yeah I think that time's up for now maybe you're really happy to stay there for more questions okay thank you thank you very much can I um and now we are going to present our next speaker he's going to talk about towards a fitter completely completely a bug um background compatible privacy layer for ethereum is please give a round of applause to why die why don't we yes um thank you very much for the intro so more privacy times coming up um of course we're here to talk about privacy layers um in particular what are privacy layers why do we need privacy layers and how are we going to get a private layers that people need so first let me State the why for privacy layers um obviously the reason why we need privacy because we don't have it right now you know um if you go to Easter skin every single transaction is public right you're able to see the entire history of all the wallets so the second reason why we need privacy is that if we want mainstream adoption or plastic Technologies we really need privacy right it's one of the main hurdles alongside scalability and um you know identity and other issues and finally I would like to just quickly address on uh you know privacy and regulation issues and there's effectively a spectral Solutions right when you build a privacy technology we're on one side you build fully self-sovereign Solutions where only the individual control their information and assets and the other side you could give you know a lot of control to The Entity actually controlling this ecosystem uh while preserving privacy between individuals and so on the right side you have something like cptcs and the livestock has something like Toyota cache right and perhaps actually in the middle we'll have something that's more or less maybe you know Best of Both Worlds where we could have a privacy preserving system yet give some limited form of control to you know some set of authorities okay so enough enough on the Y uh let's talk about what I mean by privacy layers um so uh just reiterate everything on ethereums is public so you're able to see everything on users again and first uh what I want to find is the notion called anonymity so anonymity is the inability to tell who is doing a transaction right so if somehow you're going to etherscan and you look at transaction and you can't really tell who the address you know who's the engineering address then we say that this system that's the anonymity and second is the notion of confidentiality if you're going to use here and you cannot see exactly what the trades are then we say this system is confidential and it turns out confidentiality is really really hard on ethereum it's pretty much impossible until unless you want to redesign entirety of etherea right so on the other hand anonymity is actually quite easy right we can use any mixer to mix the funds and every single time we want to do an operation however this is very very unusable right to the extent that only you know we only we very much need this would you do such a thing right normal users would not uh do this for every single operation that would do um D5 protocols um so the goal is really to make this very usable right how do we get usable anonymity for ethereum so um so what do I mean by again so just reiterate the system will have anonymity if you go to etherscan and you cannot see uh you know who's already using all these contract calls right so the question is can we get something like this with ethereum right um so and you know we don't we don't want uh privacy an enemy just for payments we want list of identity for any type of smart plug so you can see you know on ethereum you can do many many different things um you know it's an ecosystem of the apps not just payments not just you know peer-to-peer swapping of asset not just in empties it's whatever you can imagine on top of token standards right we want to have an enemy by default for all the apps so that's the question um and that's also what I mean by a privacy layer apparently for ethereum should have the following um you know set of features but let us look at um what are the current solutions for privacy layers um if you look at the entire ecosystem we have many many different UVM chains that's you know more or less uh you know you could run a d app and typically you know any any of them and we'll have many many applications sometimes on one popular chain sometimes on many chains and what are the Privacy Solutions well we have some mixers and we have uh you know some solutions that offer some type of D5 compatibility and we have solutions that more or less act as a layer two and with privacy so for instance Aztec and zika Opera are great examples of this um and then on the other hand we have also about privacy old ones and the examples are like friends for example allele uh and Manta where uh you know it's a separate chain uh it might be a different ecosystem and you have a bootstrap although liquidity and so it turns out you know there's no single solution that works with all the D apps so if you look at what these Solutions do uh so real guide and zinc copper actually only to support some limits in the form of swaps and uh project as I connect uh allow you know actually pretty good differential probability but it's not completely compatible with every single D app right so for as that connects you need to write this custom Bridge contract and in fact you know that's basically if you go to every single Aztec hackathon like that's what people do is you know they build Bridge contract for every single the app uh you know and that's not scalable if you want to want this to support every single dfat projects out there so uh you know this is observation we don't have a private solution that um you know it's default and really usable right so um so yeah so let's look at um what I mean by privacy layer and what we should get in this previous layer so first of all it should be feature complete okay so uh so what I mean by that you should have two features you should be able to use this you know privacy layer exactly the same way you would use you know ethereum right so you should be able to use a processor solution or Ned app that you want um any and ideally you know with basically the same interface right you go to you go into a Dr front end you click some buttons uh and you you know you do a swap and second um you should be able to disclose what you have done okay so if you look at you know existing privacy Solutions it's actually really hard to tell someone else that you did something um you know the interface is not intuitive whereas right now for the transparent solution if you give someone your address they know you know because your entire history right so we want some type of form of information disclosure right so if you own set of nfts and you want to prove to your friends that you know I own this at nfts and I authorize a message uh you can do that you should be able to do that really really easily right um okay and the second thing you should you should do is be backwards compatible right because we'll have all this amazing ecosystem out there obviously apps that people use um we don't want to you know throw it out to waste and build something completely brand new like we want to reduce existing ecosystem so vehicle system should be to support erc20 721 1155 standards um and you know you should more or less work with existing applications right and finally most importantly you should actually offer some from a privacy which in this case anonymity right so recall back to the previous slides um you will be the form you know use this thing and everybody will use this privacy layer and you're going to easily scan no one can figure out who did what action right so the question for my talk is you know can we build such a thing and actually the goal of my talks to convince you that we could build such a privacy layer for ethereum today and we're building one okay so so let's look at how we're going to do this right so um so let's look at this you know set of three things that we want for our privacy layer and it you know if you kind of categorize them the first uh two your two features are basically what the smart contract wallet gives you right so if you're familiar with their kind of abstraction or you know any type of smart contract wallet this is the two things that this should offer you right you should you should be able to use it on Instagram application and it's Backward Compatible and the second thing second feature that's you know is really what a mixer offers you right what a sort of pool gives you so um so I realized you know some of you might not know what to show the pool or you know mixer is so let me just reintroduce the two two concepts so first of all what is show the pool a show that pool allows you to unlink deposits withdrawals right so this is the most basic form of private solution that you know we've had since the Bitcoin days right so it allows you any user to deposit and later on you should be the withdrawal but by the time that you withdraw nobody else should know uh who's actually withdrawing right so you withdraw to a fresh UA address so that's the no geometry pool or mixer and second uh let's recall Notions uh actually this should say wallet uh let's recall those on the contract what is your contract wallet well for a contract wallet the users actually do not own a uoa anymore right so for for instance for account abstraction uh you will have different uh address that we use um and you know but basically you know for your for your smart contract wallet you should be able to do the exact same things that you would do with you know your meta mask right you should be able to submit it arbitrary smart contract calls and get executed right and this is done in the form of uh intermediary uh contract wallet that verify some signature and carry out the calls for you okay so that's not contract wallet and recall we want to do before we know we said that you know the thing we want to build is basically a show that plus a Smart Control wallet so so here's what we're actually going to do we're going to take the two and just put them together okay um so it seems to be a shielded contract wallet right so what can I do you should be able to use anything uh that's on ethereum and every single time you use the wallet nobody should actually know who's to actually use a wallet right so there's one single shielded contract wallet that's shared by all the users in the ecosystem um okay so so you know that's on a very high level but how does this actually work um right so for sure the pools like like we said before it supports deposits and withdrawals and for contract wallets you'll support arbitrary calls and we'll put them together you will support again deposits and withdrawals but but also crucially something that you you can use to to call any you know the app all right so so here's the picture here's how it's gonna work um it's going to be a smart contract in ethereum where you allows any any user to you know enter this ecosystem and once they enter they're able to use it as if it's you know a metamask wallet and when different users submit application transactions they will you know they'll be reflected on chain so if you want to call unit swap you want to call openc um you should just work and furthermore on etherscan you have no idea of who's actually behind the scene during this operation right um so and as a bonus actually we can make this smart contract contract wallet compatible with account abstraction or eip4337 Okay so as it turns out like there's two problems you know if you want to build this if we want to build this you know just combine and show the pool with the smart contract wallet the first problem is that when user submits a transaction that you know contains arbitrary calls you can actually just steal the funds of the entire contract right so here if the user only owns supposed to own one ethereum in the pool but it constructs a call you know that consumes 20 ethereum um you know this is we should let this happen right because you know um people would be able to still the entirety of the funds of the entire protocol so uh what's the solution well the solution for this problem is as we actually just separate out of two contracts uh into a contract that actually holds the the auto funds what we call a vault contract and the wallet contract which I will actually carry out the calls um so in this way users will unwrap the tokens that they have and only the tokens that they have is uh inside the wallet when they're actually going to call this is actually kind of equivalent to the other way of doing it which is you also have a router and have the wallet holding all the funds and putting the things into the router so there's kind of two equivalent solutions to solve the same problem and the second problem that if you know if you were to do this which I think is the main reason why we don't have these things before you know is that for this type of privacy preserving show the pools you need to know the exact amount of tokens uh what is called you know that's included in the nodes before um you insert it into the protocol right so so everything has to be known in advance whereas in D5 protocols you have no idea how much tokens you're getting back right so there's this uncertainty of the smart contract decides how much you get back but traditionally for children pools uh you know everything has been doing in advance this is like uh you know one feature that we you know didn't really know how to do before um and there's a solution for this which is that um we have this notion of refunding to Anonymous address so we have to be able to randomize addresses and respond to them okay so uh I realized I actually you know basically spread through my uh entire deck and this well and the end of the talk um so let's recap what have we learned in this talk so first of all privacy is really important we do not have privacy on ethereum we need some type of privacy solution for ethereum that's really usable before ethereum can go mainstream and a shielded contract wallet combining a shielded pool and a contract wallet is our bad shots at this backwards compatible feature complete privacy layer and finally we're building this out um we you know hope to put something on the public and uh and the hope is that you know long term for this ecosystem most people will actually be inside you know a privacy layer instead of the standard uoa layer and if you're interested in contributing to this effort uh please come talk to me and I realized I didn't do a self-introduction at the beginning my name is way Dai a research partner at Ben caprico and um come ask me if you found more questions about this project but I'll take any questions from here [Applause] I uh congrats for the work I think privacy is very important I've worked for a few years on having trying to make users have like smart contract wallets by default and the big problem is the gas cost of of just having to onboard someone and already having to spend like ten dollars five dollars sometimes a hundred dollars how do you think that that can be solved um yeah very good question I think two things uh one is the you know actual cost of gas over time as we build these scalability layers should go down right as we build more Roll-Ups um and the second is uh we could use batching to um amortize the gas cost so usually you know actually in 437 there's notion of uh bundlers and aggregators where you know you compress authentication information uh you know from multiple transaction from multiple transactions into into a single authorization for for all the transactions and you know there's different tricks to kind of further optimize the gas cost uh so over time through these you know two Avenues the hope is that the the additional cost incurred to to get a contract wallet with privacy uh it's not prohibitive for for users for you know for vast majority of users uh great talk I'm interested how you figure out uh ofac and tornado cash um because if this is like an opt-in coming from over here oh yeah hi no how you think about uh because if you look at tornado cache and the ofax sanctions how do you think about sort of avoiding that kind of thing with because my understanding is that this would be like an opt-in smart counter wallet so how can you avoid that and kind of adverse selection and these types of things yeah so um so referring back to my slides where I show the special Solutions you you know I think as a builder we should be flexible in kind of so good what is privacy right privacy is appropriate for all of information I don't think privacy is as absolute notion where everything should be private to you uh you know there's there's some societal like consensus on what is appropriate for a lot of information right and everybody can have their own interpretation of that you know um government agencies have their own interpretation individuals in ethereum community can have you know you know our interpretation uh and they might be incompatible but I think as Builders we should be open to different versions of you know what is appropriate for all of information uh because technology is really flexible um and you know over time there should there will be communities that might be incompatible but like you know we should work towards the solution uh that's more toward the center I would say where we include as many users in our ecosystem as possible yet give some sort of control perhaps uh maybe to some set of people to be able to prevent illicit activities So when you say you're we're building this already how far have you got uh we have prototype contracts you know it's very early stage um uh yeah so the idea has been been there for you know a while but um the building is just just speaking of traction and you know we'll have basically two people full-time on this but why not embed these Innovations into an existing contract wallet like margin or something so there's well there's many many different contract wires out there with different Focus it's this is a contract with privacy um you know I think it doesn't make sense to well I mean we could take existing you know we'll take the existing 437 um you know standards uh reference code base and just you know fit this into there um the main difficulty is actually not being a contract wallet it's really like how to add privacy I think because when you also change the front-end apis so I mean every single smart contract all in have to do this but like I think for for privacy is more important because the a lot of schematics need to change right so if you think about how currently you pull balances ready accounts you first connect your wallet you pull like you know what is the connected wallet address and you like go to the contract and pull okay what is your action that balance that cannot be made privacy preserving right because you get who it is so you have to change that into something like you know connect to wallet can I get the usdc balance um you know so so a lot of things to change uh when something needs to be you know it's you want to imagine a privacy preserving system so I would love to collaborate with you know uh contract wallet projects uh and that's how also another reason why we're trying to stay compatible with 437 because we can reuse uh or you know have the same bundler infrastructure and this you know kind of abstraction man pool so we will be part of the ecosystem and contribute to the efforts as well great Doug thanks uh what kind of uh what kind of zero knowledge protocol you decided to use um yeah so so you know as it turns out the easiest way to prototype something like this is circle still like there's nothing better out there that you can you know rather zero dollar shortcut and have like solidly verifier and like up you know approver that's rather than like a browser circle is the only ecosystem so this is like another ranks I would use you know the like most efficient proof system out there like it probably more like plunk but that tooling is not there um and also like over time it sounds like you're familiar with the subsystems but like over time uh there'll be like kind of two separate proof systems right so one is on the user side where you essentially want zero zero knowledge property only for privacy uh so you know what is this thing there is it's a the overall design is very similar to like any other shooter pool you have a Merkle tree of notes right uh you're referring to a note and spinning it without revealing which no you're you're referring to right um and that for that you needs your knowledge to preserve your privacy and you actually don't really need to explain this and we're not going to have this like aggregation layer that roll up these user spending proofs and for that you really want to synchronous right you want to be able to verify on the contract side really efficiently right and so uh you know I think this this is something that has been discussed a lot in Defcon uh in the past couple days which is you have the notion of inner proof and Order proof right so for us this inner proof will basically be the user proof that have zero knowledge right we can use I think over time you know which we'll probably evaluate things that's really fast in the browser adds to your knowledge and maybe some type of compression you know it's like maybe Spartan or something and then on the outer proof we'll have you know probably gross tasting or Planck that really compresses the other proofs right yeah so one approach to solving this problem would be to make backwards compatible contracts on ethereum other approaches might be to wait until there's an L2 that has more Primitives built in that support this and I'm just curious to learn more about your thinking of if it ever makes sense that privacy will be in one place and non-private things can exist in another I think yeah so yeah the question is you know do we build privacy Solutions on top of existing things where do we build a new ecosystem to build privacy presenting Solutions and I think the key question is what are the Privacy supporters and what is the features of those applications and um so I so it turns out that the short answer is there's no privacy preserving ecosystem right now out there that actually support more features the anonymity okay so if you look at like a Leo uh or like Mina it's really just a solution to build roll ups like you know with with zero knowledge you cannot get privacy for share States so I actually discussed this in another talk of mine so if you think about the features we can support I think unless you have vastly more capabilities to support privacy presumable Solutions which I think is actually in the privacy of shared States um it doesn't make sense to have a complete brand new ecosystem because the Privacy that we that's achievable is the same um so there's no benefit to building a new ecosystem that do the same thing right so therefore so if that's the case we should build on top of existing ecosystems because everyone is there we're desperately need privacy Solutions and it's possible to build it so you know let's not reinvent the wheel is it working yep so it sounds like you need a sequence of maintaining the medical tree have you got thoughts on how you're going to decentralize that or whether you will yeah so there's actually kind of two two different things right so four four three three seven you have the notion of bundlers um and we could basically use that so we could actually so bundlers um so I think it's yet to determine exactly what's in the standards but uh isn't that for every single contract wallet bundler needs to run custom code to be able to compress different user operations to one uh so we could you know when it's more finalized to be able you know to to to have essentially to plug into that ecosystem right so it could be like different 437 bundles that's supporting different smart contract wallets and will be one of them and in that in that way we can decentralize uh bundling and the second is yeah so exactly so there might be this management of Merkel trees that's separate to many you know compressing multiple user operation proofs into one and we can make that permissionless yeah I think it's a current thinking right so um so it's okay what is the overall story is that so because we support backwards and particle I will support the exact same set of operations we that users need to pay more gas right it's like that's the you're paying the same amount of gas by default um and the additional things that's you know the overhead to like maintain everything and the idea is to like make it as small as possible and the only way to do that is to Outsource this aggregated work into some sequence or bundler so so it's basically necessary if you want to make this usually usable and so yeah so you know to decentralize I think you know make it permissionless and some really design incentives around this right that's because these are bundlers sequencer providing a service um behavior and make it provincialized and design kind of this ecosystem that's so self-sustainable right uh because because I think that users will pay for privacy if it's cheap enough and you can get this network effect right thank you so much that was fantastic [Applause] and now we are going to present our next speaker he's going to talk about ckp's um programmable cryptography in Espanol cryptography programmable um capshit is the creator of that that Forest and run supplies CK research and development at Xerox Park please people around of a blouse deep shot [Applause] welcome cool um hey everyone I'm kabsheep and I work with the research focused organization called Xerox Park today I will be talking about this idea of zkps and programmable cryptography which is a phrase that we use to describe a lot of what we focused on at Xerox Park I'll describe what programmable cryptography means and why we think it's important for anyone who is interested in the future of Next Generation blockchain and decentralized applications um so first off I'll give a little bit of context into what Xerox Park is for folks who have not uh heard about this organization Xerox Park is a relatively new research focused org which supports what we call application Level r d on ethereum and other decentralized platforms so this means trying to better understand what is possible to do on these kinds of uh you know smart contract platforms or with new decentralized application technologies that isn't necessarily currently possible today but might be on the horizon um projects that we support include things like Dark Forest as well as Persona Labs building things like hey Anon or if folks were around the applied ZK showcase yesterday you might have seen proof of email or various ZK machine learning experiments we also build circuit Primitives for ZK snarks and focus a lot on infrastructure and maintenance and third-party development of tool Stacks like snark.js sir com Halo 2 and more and we also do a lot of community building efforts and we work on Cross team and ecosystem-wide projects as well cool so one of our largest areas of focus at Xerox Park is applied ZK cryptography um which means that a big Focus for us is understanding what is possible to do with DK crypto what you know theoretically should be possible to do uh with DK crypto and decentralized apps and what we need to do to to get there to eventually bring those kinds of tools to production and apply ZK is one of a category of relatively newer cryptographic Primitives that we categorized under this term programmable cryptography um and in order to describe or you know give a feeling for why uh programmable cryptography is important first I want to go into a little bit about the a couple of the reasons that we think that applied ZK is especially as uh important so um there's two concrete reasons that I think are especially compelling in terms of why ZK is going to be powerful for unlocking the next generation of decentralized applications um and I'll just go through those real quick so the first thing is that zero knowledge cryptography gives us what I think of as an expressive language for claims so what does that mean we'll go through an example to to get a sense for what an expressive language for claims looks like let's take the example of um ZK snarks and group membership proofs in the context of claims about digital identity so um the uh simplest kind of identity claim that we have from cryptography and something that we've known how to do for many decades is prove a statement like I know a private key corresponding to someone say like Alice's public key which implicitly identifies me as Alice so this is something that I can do with a digital signature something like you know RSA or ecdsa the invention of public key cryptography made uh proof like this possible or made provable statements like this possible and this is infrastructure that underlies so many of the digital systems that we know and rely on today including you know secure traffic on the internet as well as blockchain systems like ethereum or Bitcoin so going up one level uh in complexity from the previous slide uh we have claims like I know a private key corresponding to one of the public keys in a group so for example I know a private key corresponding to one of Alice Bob or Charlie's public Keys um this kind of claim is commonly referred to in the literature as a group signature or a ring signature we do have cryptographic protocols that are purpose built to enable people to generate you know group signatures or ring signatures um but they are again special purpose built for this kind of claim and the math or like the cryptographic protocols that make these sorts of claims possible are oftentimes incompatible with the math used for ordinary signature schemes so you know we figured out how to do these group signature schemes a few years after we figured out how to do digital signatures in general however it is the case that in order to make claims like these or in order to build up a system or a network in which people can make these claims you have to build uh you have to bootstrap like an entirely new um you know key registry you have to build a different uh key generation algorithm and you have to popularize that so you know the math involved in making a claim like this can be can be incompatible and require you to sort of move to an entirely different system than if you want to uh you know uh use systems that allow you to make claims like this so one thing that I want to note is that today um however we have uh another much easier way of uh enabling these kinds of claims and a manner which a way which is you know actually compatible with systems for proving the first kind of claim so with CK snarks the problem of building a system that allows you to make these kinds of claims from A system that allows you to make these kinds of claims is actually a really simple essentially two-line code change in a ZK circuit so rather than having to invent an entirely new mathematical protocol or new key generation algorithm if I have a primitive that allows me to prove in a ZK circuit that I possess a public key corresponding to some private secret then what I can do is I can construct a ZK circuit that says I know some public key corresponding to some secret private key um I'm going to keep that public key Secret and uh that public key minus hash one times public key minus hash two times that public key minus hash three equals zero so if I can prove all of this in zero knowledge what I'm effectively proving is that I know a private key corresponding to one of these three you know public commitments hash one hash two or hash three so um this way I now have this system which uses the exact same key generation algorithm or key generation strategy as a system that allows me to you know simply prove that I know the private key corresponding to Alice's public key and we've turned essentially this problem of Building Group signatures from a math problem where we have to go to a cryptographer they have to write us a paper or do all this stuff bootstrap a new key registry into essentially a programming task that um you know any developer familiar would say Circle can carry out okay so slightly more complicated than this we can go a level even further up and consider augmentations to this protocol uh such as I know a private key corresponding to one of Alice bobbert Charlie's public keys and the other two either can or cannot prove that they did not generate this message so sometimes this is this property is called by various different names um some call it like disavowel so as an example like suppose I'm Bob and I generate a signature that is uh either coming from you know you can see is coming from one of Alice Bob or Charlie um Alice or Charlie might be able to generate a proof that uh they did not create that signature so um yeah there's cryptographic systems that allow you to toggle this property on or off but again these use new math are incompatible with previous systems and are generally fairly difficult to engineer again however with DK snarks this is a pretty trivial like two line circuit code change so again we're sort of seeing this idea of this language that allows us to build these expressive claims that are compatible with uh you know previous claims that other cryptographic systems will allow us to generate and finally we can get to claims you know of this level of complexity something like I know a private key corresponding to one of Alice Bob or Charlie's public Keys um and I either possess the signed attestation from one of David Eve or Fred one of these trusted you know attestation service providers or during a block with header X I knew the private key corresponding to an account with at least 32 eth and you know dot dot you can kind of compose a bunch of arbitrary uh you know predicates on this identity claim and I think it's pretty fair to say that there's like no cryptographer in the world who you could go to and ask them to build a special purpose new cryptographic tool that would allow you to prove this specific kind of claim nor would it even make sense to but again with DK snarks this actually becomes fairly trivial you have your building blocks in ZK circuits for each of these things you know uh key pre-image signature recovery um proof of inclusion in the ethereum Merkel Patricia try and then you can just put all these together essentially calling all these like different functions in your ZK circuit code to start building out these claims so another framing of this idea of the expressive language for claims is that ZK Starks turn math problems into programming tasks rather than having to go to a cryptographer to write you a new paper every single time you want a new kind of digital identity claim to exist in the world and be provable you can just have a ZK circuit developer compose the right Primitives inside ZK circuit code okay so cool thing number two which is closely related to cool thing number one is that ZK adds interoperability to cryptographic systems so what does this mean well to explain this first I just wanted to do a quick breakdown between two terms snark friendly versus snark compatible cryptographic Primitives Stark friendly cryptographic Primitives are um you know Primitives like hashing algorithms or digital signature schemes or encryption algorithms that are specifically purpose built for um to be efficiently provable inside of ZK snark proving systems so for example the Mims here Poseidon hash functions or eddsa signatures um these uh cryptographic Primitives uh oftentimes have been invented in the last couple of years and you know the hope is that with these Primitives we can move towards a world where we can do more and more inside of snarks um however most of the cryptographic systems that exist in the world use cryptography that was invented before we knew about CK snarks so for example a lot of hash functions use a lot of bitwise operations which are very costly to do inside of ZK snarks um and so these these systems are not snark friendly but they are what we have to work with so for example all the signatures on uh you know emails signed by mail servers that are being sent out are not going to be snark friendly um signatures however we can start to at least connect all of these different snark compatible systems together by embedding these different signature algorithms hash functions encryption teams Etc inside of snarks even if it is costly so as an example of a few crypto systems that exist out in the wild we've got key distribution and identity Registries such as like you know you can build a an identity registry of like gpg keys um GitHub allows you to generate locally a key pair and upload it and make it publicly accessible to anyone so that anyone can verify you know your commit history or things like that repos you've contributed to so for example if you go to github.com you'll see like my RSA Keys um ethereum and Bitcoin rely on the ecdsa signature scheme so addresses are going to be you know a hash of an ecbsa public key in ethereum and I think mail servers use the dkim protocol to sign and authenticate messages which under the hood relies on RSA so one of the things that's going on with all these different signature schemes is that they kind of can't really talk to each other you know if you're running on the RSA protocol you can't really understand an ecdsa signature um however by making all of these Primitives snark compatible by implementing RSA signature verification ecdsa signature verification etc etc inside of snarks what we can start to do is we can start to build adapters between all these different systems um so again if I have an RSA primitive and an ecdsa primitive inside of a snark then I can start to make claims like either I have a GitHub account that's contributed to the you know ethereum GitHub org or I possess at least 100 East and again by making existing cryptography uh snark compatible and combining that with this expressive language for claims we can start to make statements about all sorts of digital or online activity so both of these features are examples of the power of programmable cryptography which probably is you've grok from now um you know both of these features are giving us these tools to much more flexibly manipulate digital objects so now I'm going to kind of give my description of programmable cryptography which is that it is cryptography that can be layered on top of arbitrary computations to contrast this with a cryptography that we've been using for the last couple of decades well for more most of cryptography's Short History the set of mechanisms that we've been able to instantiate with our tools has been you know quite narrow so we can say things like this message originated with Alice as we've seen or this message can only be read by Bob but every single new mechanism that we want to build whether it's like you know arbitrary identity predicates or read permissions or things like that would require us to build a new special purpose cryptographic system however now we're seeing tools like you know ZK snarks as we've discussed that allow us to move from this message originated from Alice to I know a private key corresponding to one of these people I have an attestation from one of these service providers etc etc um to things like witness encryption witness encryption is a primitive that essentially allows you to encrypt data not with like a key pair where someone has to know a certain secret to decrypt the message but it allows you to decrypt messages with or sorry encrypt messages with a program so for example I can encrypt a message with a Sudoku puzzle and anyone who solves the Sudoku puzzle will be able to generate a key to decrypt the message that I've encrypted with witness encryption and this allows us to move from systems where we can do things like Charlie has published some secret vote that only a coordinator can read with the coordinator's private key to Charlie has committed to some secret vote that only a testers with a certain permission level can decrypt today but which a class of Auditors with a lower permission level can at least partially decrypt in exactly you know one week uh I would say that smart contracts Also spiritually uh kind of fall in the same category as a lot of these other programmable cryptography Primitives so um you know imagine very early on in the history of uh this idea of blockchains uh we would have these consensus engines where people could come to consensus on only very simple or specific data Transformations data Transformations like you know Bob can decrement his balance by 100 ether to increment Alice's balance by 100 ether nowadays with smart contracts and programmable blockchains we can sort of execute arbitrary predicates you know at Block B 100. ether will be available for withdrawal by Bob so long as Bob has closed his position in some smart contract and no one's submitted a fraud challenge though an early withdrawal may be initiated if two of the following three solvency conditions are met etc etc so in each of these examples there's this common thing theme of moving from the specific to the general with ZK snarks I can move from proofs of specific claims to a general purpose language of claims smart contracts allow us to move from coming to consensus on canonical data that can be modified in only very specific or narrow ways to a general purpose language for modifying or executing code on this canonical data witness encryption moves us from a world where we can permission data to only be read by a specific person or specific set of people to having a language for specifying arbitrary predicates for read permissions so I kind of imagine this as like you know decentralized oauth tokens where anyone can plug into this like Global authentication system and specify who can read what and when um and there's all these New Primitives that are continually getting better and better and more and more feasible things like fully homomorphic encryption multi-party computation even really far out things like indistinguishability obfuscation uh and more um oh and you know I there's a couple of folks who have sort of independently come up with this categorization or framework I believe this Thursday team calls these computational crypto systems um so you know very similar in general Spirit to what we're calling programmable cryptography okay so um the second part of this uh basically thesis is that programmable cryptography uh itself seems like a very powerful tool blockchains are also a very powerful a powerful tool but it's not sort of a priori obvious uh like why these two things are related to each other except that they both sort of derive from similar mathematical principles but I claim that there's actually a very deep and complementary uh marriage between these two powerful things and to explain why I think that is first I want to give my kind of mental image of what ethereum as a data availability layer looks like say like five or ten years out from now so in my head the way that I kind of conceptualize the idea of you know ethereum the global data availability layer is I think of ethereum almost as this like you know giant super thick coaxial cable um that basically streams Humanities like Global stream of Consciousness um so Humanities you know promises bets Secrets debts dreams etc etc and this coaxial cable is uh you know made available to any person or Computing device in the world so um you know any phone any computer that like lives on some you know like institutional server anything like that can hook into the one gigabyte per second canonical data stream look up data and know that they're seeing exactly the same thing as someone across the world is seeing now right now this data stream is completely transparent and that has been a design decision that has been necessary in order to gain acceptance of this particular um data stream that we're wanting to claim is the canonical data stream or the legitimate data stream so in order to build acceptance we have this principle of don't trust verify and in order to verify you need to be able to see all of the data but I claim that this is actually extremely limiting there is a wide class of applications that you might care about to build where you don't want every piece of data to be completely public and I think that when a lot of people talk about this idea of privacy or information asymmetry you know people have various different beliefs on uh like various ideological nuances around privacy but I want to go even a level lower to explain why I think this is important privacy is important not just as a matter of ideology but simply as a matter of mechanics there's certain coordination systems that just don't work unless you have information asymmetry and in fact most of the complex systems that we see in the world today and most of the organizations we have in the world rely on the idea that different people know different stuff and can do different stuff so the way that I think about this is that what we would really like to do is we'd like to be able to enforce read write execute permissions on this canonical data stream that is uh the blockchain and the way that we do this is you know in fact programmable cryptography programmable cryptography gives us these expressive tools and languages for enforcing read permissions like we mentioned with things like witness encryption or write or execute permissions which we're seeing with things like you know ZK snarks and smart contracts and more so to give just the toy example of uh why this kind of permissioning or access control is really important I want to consider the example of games so for example let's let's consider poker in poker a lot of the depth of the game relies on the fact that I know my cards but I don't know your cards and you know your cards but you don't know my cards poker as a game would simply not work if we knew each other's cards it would be completely degenerate right like it wouldn't really make sense it wouldn't be any fun um and uh you know a slightly more complex example of this might be uh strategy game so a couple of days ago we had a talk on Dark Forest which is a fully on on chain strategy game you can kind of imagine it as something like Starcraft on the blockchain and one really key mechanic of Dark Forest is that in Dark Forest um players respective locations are all hidden which gave which gives the game a lot of its um you know relative strategic depth so the general pattern here with games is that uh oftentimes what we're going to do is we're going to have players commit to a state that they keep private and whenever they want to make a state transition they're going to provide a zero knowledge proof that they are making a valid update on uh their private State and committing you know a valid State commitment to the network so this proof might prove something like I'm moving my you know secret night from secret location a to secret location B I'm not going to tell you what a or b are but this zero knowledge proof proves that you know there's an L shape between them or zero knowledge proof might prove something like drawing some card I'm drawing it validly according to the rules I'm drawing it out of a randomly shuffled deck I'm not cheating and just like continually drawing a bunch of aces so you know there's a bunch of uh game examples which we can kind of Imagine where the game just simply does not work if all of the information is transparent and while those are kind of toy examples I think they allow us to start to hint at this more complex future where we're using blockchains for a much wider range of use cases so you know I think one completely digital uh completely reasonable digital interaction we might expect to see something like in the future is you know imagine like I walk into a store and perform a cryptographic handshake with the merchant and perform like a multi-party computation with some identity provider after verifying the Merchant's identity I give the merchant one token that permissions them to access some specific data uh on my preferences for an hour and another token that allows them to transfer a limited amount from my balance after that transaction completes I update my transaction history that's private to me and committed on chain uh but only visible to myself so you know each of the components of this interaction today are not possible due to the fact that there's so many things there's so many constraints on what we can keep private but again with things like fully homomorphic encryption witness encryption ZK snarks etc etc these kinds of interactions may start to be unlocked uh while still preserving the neutrality uh where all this data is living on some like globally verifiable blockchain or data availability system so um the last kind of like analogy that I want to make here to kind of create an image of what this future might look like is you know I want to kind of uh describe the concept of an Ender Chest from the game Minecraft so Minecraft is a uh you know sandbox game in which you can Harvest resources and build stuff and in Minecraft is this concept of chests so with a wooden chest if I build a wooden chest I can like place it down here I can put items in into the chest if I leave and come back the items are still going to be there um the chest is a very important like primitive in Minecraft if anyone else goes to the chest and they open it they're going to be able to see all the items that I've placed in there um in Minecraft there's also a very powerful uh tool called the Ender Chest which is sort of similar to a chest but has these kind of this kind of magical property where ender chests inventories are marked as like per player inventories and are sort of shared across every Ender Chest that exists in the world so if I put an ender chest down here and put down like you know five stone or something and then I put an under chest down over there and like I walk over there and open it I'm going to see that same five Stone um and if someone else walks into the uh walks over to the under chest they're not going to see that same inventory that I have they're only going to see um you know what they've put into the under chest the ender chest is an incredibly powerful tool for Minecraft players that allows them to execute on these larger scale strategies build these much more complex constructions just makes it easier for you to do a lot of things and I think as more of our social and economic activities Move online we're going to need Primitives like these these digital ender chests that allow us to carry things like our reputation our financial history our social context across different platforms and in order to do that we're going to need these new privacy preserving mechanisms uh that fall under this category of programmable cryptography so that's all I've got for today if you're interested in any of the work that we're currently working on around programmable cryptography or anything else you can check us out at xeroxpark.org or you can find us on Twitter at Xerox Park but thank you foreign thank you for the talk um as we went through a lot of the slides there were examples of ZK things where you have a claim and it's true or false and you prove it but I guess the bigger picture of all programmable cryptography could have other sorts of statements like I summed all these numbers and this is the true sum and so I guess those are other flavors and maybe that's homomorphic encryption I'm not sure how friendly are those with each other right now like proving things and doing math and getting continuous results yeah this is a great question so um right now you know as you've probably noticed like we are specifically very focused on zero knowledge cryptography which is you know one of one piece of this like much broader category but it seems like disproportionately represented um so why is that the case well uh one reason is that zero knowledge crypto systems are simply much more mature today than a lot of these other systems where there's there only exists theoretical constructions or academic implementations um we expect things like witness encryption for example to be much further out and we're still even trying to like describe the landscape of what is possible to do with multi-party computation um so unfortunately none of these systems are super compatible because a lot of them don't yet like exist in a form where you can meaningfully start playing around with them but we hope that that is going to be evolving rapidly over the next say like you know a couple of years hello thank you very much by the your talk haven't made any kind of research around Quantum cryptography DK yeah so um I think Quantum cryptography is a slightly like orthogonal direction to what a lot of these tools um are going to enable uh specifically for example like one way that we think about the interaction of quantum cryptography with these tools is considering which of these tools Quantum or like which you know for example ZK algorithms uh or like fhe algorithms we have are quantum resistance in other words once we have quantum computers uh which of these algorithms might we be able to break now that's kind of a different thing however from necessarily um you know the affordances of these tools so for example like um you know it's when I think about programmable cryptography I usually think about it from the perspective of like what these things can do for us rather than necessarily like what's the underlying algorithms and what are the computational models in which they might you know broken by or enabled by whether that's Quantum or elliptic curves or you know large Prime fields or things like that thank you for talk you can ask you if I understand it correctly the state currently in Dark Forest uh you keep it locally and you just put the proofs on chain um that may not be ideal for the future if you lose the state you kind of lose the game uh like what are your thoughts on how to keep the state safe in in other ways either using a homo marketing prescription or your general thoughts around it yeah this is a great question and I think like you know as an extension of the debate that people have around the viability of uh you know everyone custodying their own keys for example on a blockchain um I think that there are uh a couple of things here that might be possible one is like you mentioned fully homomorphic encryption might allow us to store private State on uh that is encrypted on you know cloud services uh but still be able to like retrieve that data and perform operations on it just like we would if it was local while still preserving the privacy of that data that's pretty far out though and in the meantime I think the most immediate thing that we can focus on doing is like building more user-friendly solutions that allow you to keep critical or sensitive data on your own machine I mean everybody already does keep critical and sensitive data uh so it's a question of like as the volume of that data or has the sensitivity of that data grows then how can we make those systems even more and more ergonomic and more and more secure hi thanks for the talk um what do you think about the fundamental bottleneck of like zkp's um being quite slow and you have this trade-off between like proof generation and verification do you think we will have sort of more like external offram Solutions maybe like layer 2 is very full ZK or like do you see the most promising Solutions being in like fundamental zkp research like what do you think of that whole I've fallen straight off yeah so personally um I think that there's still a ton of low-hanging fruit uh in terms of performance optimization for these currently very expensive crypto systems um for example with ZK by some metrics over the last three years these or like over the last four years the size of circuit or like the size of computation that you can ZK prove in browser efficiently uh has you know expanded by like three orders of magnitude and we're still seeing like rapid improvements via new protocols new better engineered libraries for proving Stacks more efficient circuit implementations and things like you know ZK friendly Hardware are just getting started so I think that like well eventually uh there may be some industry of services that arises around you know offloading computation or things like that at the moment there are still a lot of optimizations that have not yet been fully you know explored um that I think can enable some really really complex proofs even on like small client devices like mobile phones is there any other questions thank you so for now we are going to have a one hour break and we are very excited exciting to meet you again in this stage at one o'clock with our next speaker Juan David Perez with the ethereum event showcase please ensure your break and see you at one thank you very much and see you then [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Applause] [Music] foreign [Music] [Music] [Applause] [Music] [Applause] foreign [Music] [Applause] [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Applause] [Music] foreign [Music] thank you [Music] thank you [Music] [Applause] [Music] [Applause] foreign [Music] [Music] foreign [Music] foreign [Music] [Applause] [Music] [Music] [Applause] [Music] [Applause] [Music] thank you [Applause] [Music] foreign [Music] foreign [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Applause] [Music] [Music] [Applause] [Music] [Applause] foreign [Music] foreign [Music] [Applause] [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] [Applause] [Music] [Applause] [Music] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Music] [Applause] foreign [Music] [Applause] [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] thank you [Music] foreign [Music] [Applause] [Music] foreign [Music] [Applause] [Music] foreign [Applause] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] foreign [Music] [Applause] [Applause] [Music] foreign [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] [Applause] [Music] [Applause] [Music] foreign [Music] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Applause] [Music] foreign [Music] [Music] [Applause] foreign [Music] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Music] [Applause] foreign [Applause] [Music] thank you [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] thank you [Music] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] [Music] thank you [Music] foreign [Music] [Music] foreign foreign [Music] foreign [Music] [Music] [Music] every day [Music] [Music] foreign [Music] [Music] foreign [Applause] [Music] thank you [Music] foreign [Music] [Applause] foreign [Applause] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] foreign yesterday uh so good afternoon everybody I hope you enjoyed your lunch um I'm going to be your MC for for this afternoon my name is Joseph um and it's my Pleasant duty to introduce Juan David the community supporter um in the ethereum space and he's going to introduce more ethereum community events yeah there's going to be some sort of like a panel so we have with some event organizers we just like have a group where a lot of amazing and talented organizers have been doing great stuff so we're going to have two minutes per presenter and they're going to tell us why they created this an invitation to join and basically that's it so first I don't see Carol Carol where are you Carol Carol donde estas Carol is not coming but we are going to start maybe with Eleanor from eat them this is alphabetical order first Brazil then is damn come on to the stage Earl big round of applause [Applause] thank you hi everyone my name is Eleanor blank I'm a crypto educator first and the founder of cryptic canal and this year it had the honor of organizing each day and defy day during devconnect and it just makes absolute sense for me to just keep the flame alive and burning in Amsterdam and to create a conference hackathon um dedicated to privacy we have a situation right now in the Netherlands with Alex of tornado cash being in jail and I want to dedicate this event in the spirit of The Cypher Point movement and make this a very special event for the Amsterdam community as mentioned by Tim Baker on the first day we need to know integrate these developers that have a difficulty attending conferences so I would like to extend the invitation to all core devs who have worked on the merge to join me in Amsterdam May 2023 for eat them thank you thank you so much now we have Carl from Brazil she's going to speak in Portuguese so let's try to do some live translation I am buenos dias good morning GM um foreign [Music] because I speak Spanish but we can understand a bit Portuguese so she has been leading this first ethereum Rio and now they're thinking country-wise after if Rio they want to grow the community in Brazil foreign after Rio it came so Pablo and is to keep building the community next steps is decentralized ethereum Brazil and create collapse between different groups with different States cities and universities Brazil is huge and they need to go local to the Grassroots communities they want to do a tour so they're going to move to different Six States and they're going to be doing some like education days in March uh I think we want to go to Rio one of the most beautiful city so thank you so much Carol thanks next we have East Denver disguise we are super excited to be here to have con spend an amazing week and it's just such a pleasure for us to see more community of communities because Ethan Bear's been around since 2018 we're one of the longest running events in the space and we are super excited to come back for another year for those of you who joined us last year uh we had a lot we had a couple of hiccups it was a little bit trickier than normal We Grew From about 2500 to about 12 000 this year which was pretty crazy for us thank you all for those of you who had to wait in line who dealt with some of the restroom situations but this year we're super excited we've got a new venue we're all going to fit under one big canvas we're gonna be uh on site together and I'm dumber than the clicker thank you so again like big activations we're going to have like 200 cots on site this year so we're gonna have more emphasis on scholarships obviously the event is going to be free as it always is so people can just come attend the focus is on really contributing to web3 we want to make sure that we're adding that we're building so we onboard newbies it's free for everyone to attend we feed everybody three meals a day we've got bodegas like they have here and big activations again please tell your friends who like need scholarships and support we're really excited to bring people together and focus on the biddle-a-thon which is going to be longer and more in person this year but please come and join us Network create we're so excited to see you back again thank you so much Shannon now we have Eve Gathering how they was coming hello okay I think you're gonna do the green one hey everyone nice to see you all thank you uh you came to present eat Gathering uh Barcelona 2022 um there we go okay so it's actually next month so it's very soon uh we basically want to do something uh specifically for what three teams I think I've been working at maker for about a year and the biggest benefit that we get from here is actually getting all together meeting each other and collaborating in person so we kind of want to craft that experience uh we have in two let's say two sides of it one is the Gathering week we invite everyone to come work from lovely Barcelona and collaborate with other teams and then in the conference weekend we're going to be doing panel discussions workshops and working sessions apart from having uh some technical talks let me talk about working sessions uh these are uh probably meetings I can have with people across the industry you close the door and you really talk about what's really important um so because I think we all have the same issues with all trainers have the same challenges um yeah we actually have the main themes which are D5 security dials and data but we also have other subtopics such as staking and wallet ux and security so very welcome to everyone and please join us tickets are available also still have some sponsorship spots and workshop spots that would love to have you and then if anyone is here the organizers uh if anyone has a tool to do show the scheduling on the website please please talk to me thank you thank you hello next we have India big round of applause hey folks uh I'm divyanshu I work at the folio and I would like to invite you all to eat India which is an event we are co-organizing with each Global and yeah so this is the event it's going to be Asia's biggest ethereum hackathon and the focus is on Asia not just India and one core reason why partner with these Global is a lot of each Global events are in the west we would want that same experience in Asia and this will be easier for a lot of folks to attend right so that's what we want to do it's happening in December second to Fourth uh and yeah so like kind of just going through the planning phase right now uh I just wanted to share this artwork we're really proud of it but yeah [Applause] it's going to be big uh it's the third iteration we started in 2018 uh we did it in 2019 then the pandemic happened which was a blessing in disguise because the ecosystem has really really grown now uh in 18 and 2019 we had around 200 folks show up but now in our programs we see thousands of folks applying and trying to get in so this one we are trying to invite as many people as you can uh we have capacity for over 1500 folks so anyone who's looking to get in uh I'm happy to host you in India it's going to be fun it's going to be at 48 hours long hackathon 36 hours long hackathon with workshops so we are onboarding Partners if you're interested in being a partner we are doing that if you're interested in just hacking just want to welcome you all it's happening in Bangalore December 2nd to 4th thank you [Applause] now we have eth Malaysia Jason hi everyone my name is Jason I'm from Malaysia and next year uh eight months from now we are organizing Malaysia's first ethereum event it's called Eve Malaysia how do I do this the green one right so if Malaysia is inspired actually by Shannon and Joshua Lupitas will organize Eve Denver so if Malaysia is going to be a fork of Eve Denver it's going to consist of a hackathon which we are in talks right now with social house to run the hackathon and so that we can they have very interesting ideas to basically increase the KD quality of the submissions of the hackathon also it will have a conference and you'll have fun activities as well the location we is going to be held at the Petronas Twin Towers which we took six months to secure it's going to be surrounded with a lot of greenery and we want to really make a big statement okay uh to in in Asia for this event so um the goal is to basically onboard new people okay in Southeast Asia and to show them and put a focus onto public goods that web tree is more than just about you know just price action and uh we only have one ask okay one asked just one ask which is that um my teammate one of my teammates is here this is uh her name is Bowie right and this is her first Defcon that she's ever attended after attending the opening ceremony she felt immediately in love with ayam miyaguchi right with her speech okay about subtraction philosophy and I think okay that I know it's only eight months I know it's eight months away but I think it would really mean a lot okay if we could if the Italian Foundation is here and can show us how we can invite her and confirm her as a speaker on our main stage all right that would make Bowie really happy thank you very much everyone see you in Malaysia next year [Applause] well hey everybody this is not end of the segment I have another thing to show uh so obviously as I said I just woke up so I didn't prepare slides but we are again organizing eat proc um this year was the first time we organized heat practice as one of the kind of major gatherings in Prague or Central Central Europe after Defcon 4. um the the event is focused on sustainability and um it's solar Punk theme so we're focusing on urbanism and overall sustainability not only um like the material one but also just the systemic sustainability of how you build social systems uh that can last uh next year um the event is happening in June I think the dates are set to June uh 9 to 11. um and it's also going to be last time we as parlonopolis or The Institute of crypto energy crew are going to organize eat Prague afterwards it will be free for like any member of the community to take it over but the reason for that is that um with you and we don't only want to gather the ethereum community but we want to bring new people who are coming from the sustainability background Let It Be academics Let It Be sci-fi writers Let It Be practitioners uh to come and teach the ethereum community what's actually what are the code Rod codes causes of the issues that we are facing um and um next year uh there will be there'll be the last time that we focus on the ethereum community specifics and we'll be labeling the event as eat Prague and the year after we actually want to invite all of the members of the ethereum community to come to a new event which will be solely focused on the solar Punk values uh and on sustainability as such so so if that's of your interest please show up uh to Prague in June thank you thank you Joseph now it comes a spaghetti big green big button there you go turning on one two check so yeah so spaghett teeth was born last year and we had the first event what is spaghetti spaghetti is basically an umbrella for and uh like a an accelerator for the Italian communities in general and we will we started the last year in Milan but we are planning to do each event in a different uh city in Italy to include all of the Italian communities and so it is an event but it is also an educational Network these are some pictures of last year we had 400 parties participants so it was not super big and it was both Builders and none and it was um good because we started actually two new communities in Milan that probably will organize also it Milan but for us is something bigger so something that we just released is a new website so also thanks to Marco and Simone it's a sort of interactive map where you can choose and find your own Regional communities and also by doing a pull request on a GitHub you can merge new communities if you want please click and yeah what's next we will have a midterm event in January in Rome a one-day educational thing for University students of computer science economics political sciences Etc run by the spaghetti Community spaghettis number two will be very likely happening in southern Italy there's a few candidates that we will spoil in a few weeks May 23 one week of events and yeah we will also reach out to the EF to run a quadratic funding round for local implementation of public goods using web free thank you very much compliment the Ragazzi Marco we would like to learn more about how this map works this will be open source I guess for every I imagine that Colombia having there so we have so big round of applause we for Keen from Vietnam so I I hope I'm pronouncing your name properly hi everyone my name is Queen so I'm present for eat Vietnam so I'm even I'm here alone but I present for the whole community so maybe we are the youngest Community uh this is the first time we do eat Vietnam but who are we we have 100 million population we top three like you know market for crypto user about eight to ten million crypto user in Vietnam we have the very young debt committee who are you know like even the young deaf like Wu he born in 2001 also like study English by himself live in the rural area because he wants to study zkp and now he also like working for EF and another guy also like he also like working for AI also boy in like 2003 and now also like building the AI machine learning applies dkp and also mentored by Barry Whitehead also we have many top depth also from great projects like RC infinity or kyber Network Cipher and we all hunger you know to view the great projects so that's why we want to do eat Vietnam and this is the first time that we built and also for in Vietnam we're gonna do you know like building in the um independent Palace which is one of the most like historical building for all the government also have the you know meetings with the important like diplomatic and other government and we're gonna do it in November from 25 to 27. this year the first time and we have the hackathon we right now have about like 70 team joins register for the hackathon already we also have the demo day we also like you know do a lot of prevent Workshop more than 40 Workshop focus on layer 2 and Dev committee hope to see all of you guys there and also we gonna do it like next year uh for eat Vietnam and you know what like you know right now we also the strong candidate for depcon next year and we hope that all of you guys will vote for depcon Vietnam Next Year thank you thanks so much we had next for Warsaw we have ant here there you go guys wow the whole team yeah go for the photo oh did you add the slides guys but do you have the slides there I would love to you guys my name is Antoni I'm with the e4sto team and we're here to tell you about yeah well it should be there yeah here we go yeah so the story of V4 so begins um almost exactly one year ago in Lisbon out of all the places uh we went to East Lisbon with this great group of people mostly web free engineers and um we were surprised about how many Engineers we polish Engineers we met in Lisbon turns out that there is a huge community of web free builders in Poland but we didn't have a chance to read them so we decided to build a community for the web free builders in in Warsaw the community was really fragmented and I think Warsaw really deserves a place on the global map on the global web free map so that's why we're doing eforso and Martin will tell you more yeah hello everyone my name is Marcin and yeah we are after the first edition of iforso which happened this September some of you have been over there I heard couple of good uh feedback even during Defcon which is extremely rewarding you can see like our team is super engaged in the web free community even over here in Bogota which is like 14 hours away flight from from Poland we get over here like with big team huge shout out to Shannon and the whole Eve Denver team and Eve Lisbon team for huge help like their support was extremely valuable for us but okay we don't stop over here so what's going to happen next we are going to have like in real life monthly meetups every month a meet up mostly like with a dedicated topic let's call it ZK Singh ZK Roll-Ups dowels and so on workshops for students but not only like mainly technical ones you know like polish developers are Top Notch and yeah like next year 2023 we are also going to have our main event which is if Warsaw or maybe even Warsaw blockchain week this time we have a huge interest so might extend it even more it's going to be second or the third week of September 2023 and yeah as I said like monthly meetups ID student workshops online oh yeah and on top of that we are going to have like an online hackathon and one day Summit in Spring 2023 to warm up the community a little bit more so if you're interested you can scan the QR code over here there is a forum to sign up for news about the next Edition and you can follow us on Twitter at if Warsaw um yeah thank you and hope to see you in Warsaw like thanks guys you have still one minute more if you want to Shield something else because we still have like eight minutes to get the time but uh yeah I mean pull out your smartphone and scan this QR code uh if you want to be part of V4 so if you want to attend any of the events if you want to be as become a sponsor or speak at some of our events um a little insight from the sponsorship side our sponsors were really happy with the hackathon submissions quality so that speaks a lot to the skills of uh polish web free Engineers um Martin would you like to add anything we have good swag yo yeah I wanted to say that I went to one of those hoodies oh yeah and we have like oh forgot we have three t-shirts like if we're so t-shirts that we can distribute so if where were the guy who is with orange T-shirt ah do you have that no do you just want that ah okay I thought you were one the one who was going to okay so we are going to distribute the t-shirts I can't think it's going to be the one for everyone who is like willing to get one there are L size Show Your Enthusiasm let's use this two minutes to take a photo together ah for sure you can take a ah yeah all of the organizers yeah yeah the whole community that brings Eve events globally yeah I didn't introduce myself I'm Juan David and I'm well I didn't have the time to add the Eid latam so this is something quite interesting that's going in the region so I would love also to chat with all of you later uh of all the things that we can learn Marco no we want the open source map people are already asking for that each country should have one of those ah quite sure the GitHub order thank you so much ah Eleanor has something to add I forgot I forgot that um well it's a bit different we're trying to so it's going to be a conference hackathon and we want to invite all previous winners of ethereum hackathons to compete and they All-Stars Champions League model we're still brainstorming on the format but I'm very tempted to make them start one month earlier and then present in a special track for the All-Stars hackathon winners thank you how can they find you is done Dot cryptocanal could you spell that crypto with Y canal c-a-n-a-l canal there you go thank you so much that was our ethereum event showcase thank you Joseph thank you Juan David so um in the next five minutes uh we are going to start a lay one uh protocol track uh and the next talk is going to be uh on light clients after the merch so in five minutes if you're interested in that please stay in the room uh if you want to talk to the the event organizers I'm sure they will be around you can meet them outside of the room uh or catch them after they leave the room thanks everybody foreign [Music] [Music] foreign [Music] [Music] [Music] foreign foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] yeah hey everybody uh welcome to the cold Forest stage for one of the later one protocol talks the talk is going to be about light clients after merch presented by Eden kisslink a client engineer from Nimbus so please welcome on stage Ethan hello hello to my presentation about light clients after the merge so many of us are asking ourselves what is a like client and to answer that first let's look at what you actually need for a full node at the very least it's a Raspberry Pi eight gigabytes of RAM two terabytes of storage one terabyte A month's internet and a live client is basically anything that doesn't support those specs like a browser wallet to the left side metamask or in the center the status mobile or on the right Hardware wallet so let's look at what those like clients can actually do let's assume that you own one of those this metamask wallet with the 4.75 Heath and you are doing great work at this conference and your work is so great at your approached by investors here someone approaches you he wants to donate 0.5 East to you so sounds good 0.5 is a lot of money you give them the QR code they send the money and they send you the transaction and seems good but when you check it you see ah they accidentally sent five E's so we need to refund 4.5 of those and luckily we brought our Hardware wallet but as you know the Wi-Fi is not too great here so let's just ask can use their laptop and they agree we connect the letter to their laptop and we see here the 9.75 eth so the plus five and we signed the transaction for 4.5 the letter protects our keys so they cannot be extracted we see here the amount is correct the address is correct and we confirm and we thank them for the donation so like clients very powerful that there is a problem when you go back to the hotel you actually realize that this transaction of the five is missing so what went wrong we confirmed that everything is correct but uh one key piece is missing there the actual balance was 4.75 East so they lied to us with the 975 this is actually the same problem with traditional banking when I create a transaction to an unknown destination they only ask me HTML correct and the address but they don't verify that the intent why I am sending the transaction is really why yeah so where is metamask putting this data from the answer is there is a setting in there and you just put it to a server by default that's infuro but in this case the scammer just put a custom URL there that lies about the balance so how is that possible isn't that more secure actually it's just this is the call that metamask is doing is get balanced you posit the address the block number and the response you just get the raw balance no security whatsoever just trust me bro so in this case the attacker simply added the five E's if it's our address this is the complete attack code this thing I tried with a real metamask so now the question is how can we make this more secure to understand that we need to understand we need to see what are what is actually stored in ethereum and all of these things any one of you probably interacted with at least one of them nft ownership game characters tokenized assets exchange rates or even just the plain East balance that we have seen before all of that is just data stored as part of the ethereum state and because it's data it's just a bunch of bytes and we can arrange it as we want for example here we can order it and then what we can do is we can compute the hash function on pairs of each of them so a hash function is just a one-way function it's a cryptographic checksum the idea is that if any of these change for example if someone modifies the B then the hash also changes and we can apply this to the entire data and as you can see here we now have only four of them then we do it again we only have two of them until we have a single state root hash so how is this useful if we have our balance down here the 4.75 we can see the root touch contains information about all of it so whenever someone changes that for example to 9.75 to lie to us Everything Changes up to the true test so if we know the correct routes we can know that whether something was tampered with or not so how do we actually send a proof that the 4.75 East was used as part of this hash and for this we need to work this entire path to the top let's start with this node here to compute that we also need this one and then we go to the next node here and for that one we need the A and B and then from there we go all the way to the top what is missing is EFG and age so with just sending those three additional values we can prove that the 4.75 is part of the root hash we can cut away all of the rest so those proofs are really tiny of course in reality it's not just a binary Merkel tree it's a bit more complex but the general principle is the same so how do we obtain those proofs the answer is is get proof the interface looks surprisingly similar to the get balance but instead of just a balance in the response we also receive the Merkel proof and this marker proof can be used to verify that the balance that we get is indeed part of that root hash so now the question is how do we obtain the root test this is where the lifeline protocol comes in if we look at the Beacon chain it's a series of blocks that point to the parent block with a address that's part of the block it forms a chain and since the merge actually the root hash is just part of those blocks so the question now is how do we obtain that latest block with the correct true test and a full node does this by just following all the signatures and verifying them we have the proposer of each block and then all the attestations but to verify that it's like nearly half a million of validator keys and it takes multiple gigabytes to verify what is the latest block so that is not very practical for like clients but a year ago Altair launched and it added this notion of a sync committee the student committee has a set of just 512 validators that the like client can keep track of and they also sign each block they sign whatever is the latest block and if you know those keys you verify the signature and more than two-thirds of it agreed on the same block you can trust that is the same that is correct so how do you get these link committees and the answer here is it's from the previous student committee every day the student committee changes and the previous student committee signs a message that passes on this power of signing the latest block to the next student committee and the previous student committee how do you get that one is from the previous previous student Committee of course but at some point you just need to agree on a trusted block route for example the merge transition block and if you start from there with the initial Zoom committee you can get that with a Merkel proof as a bootstrap object and from there you can continue and continue one day at a time to the next train committee and download those public Keys verify the message that signs the next single committee until you are at the present one and then you obtain the latest block check the signature and you know the root hash this data is really small it's just about 25 kilobytes each and to obtain the final root hash it's just about 300 bytes um one thing for certain applications that can be done if you are really offline for a long time those committee messages can be combined into a CK proof and then you can essentially jump from any point in time to the present in constant time with a very small proof those apis are available to download the data it's on rest andly P2P it's already standardized part of the official specs on the portal Network there is a PR and load star and Nimbus are currently implementing the lip p2pn rest apis so if you want to try those feel free to do so then security how secure is it there is some research that shows that with a few minor modifications to the protocol it can be made so that you can actually only stream every four months so this really opens up a lot of applications such as iot devices where you are not connected to the internet so as long as you student once every four months should be secure then let's bring it together this was where we started we had our wallet just get balance to infurum and it returned us to 4.75 eth not very secure but uh it's it's the best that could be done before the merge now we can obtain the latest root hash from the beacon API and then use the get proof endpoint to actually get the 4.75 plus a proof that it is actually part of the root hash that we obtained and this essentially means that if you think that the beacon API provider could be the same as the web3 API provider why not infuro could essentially just provide that data and you no longer have to trust them for the correctness of the data but just for the availability of the data that is quite huge like if you don't want to modify metamask you can also put a proxy in between that does this translation so metamask is unmodified it still does this old get balance call but the verifying proxy it keeps track of the latest root hash using the light client data and it translates the get balanced call to the get proof and verifies that the return data is correct it can alert you if it was tampered with like in our original case this verifying proxy is available today from Nimbus it's it's a part of the Nimbus eth1 repo in the LC underscore proxy subfolder and yesterday someone announced on this port is r d in the light clients Channel a product called keflar that also does this including proof verification for nft ownership and token balances so one piece is still missing for the letter device how can we get it to show us the current balance of course that needs a modification to the letter software but it could be done in a way where we just dump all of this data to The Ledger and it can actually just verify that it's correct it uses the live client data to update to the latest public keys then obtains the latest true touch then verifies that the balance that we give it is correct using the Merkel proof and then it can show this it can show the balance with the timestamp and you can verify that this transaction is really something you want to do so what else can we do with this protocol for full nodes right now it's always a bit tricky where do you obtain that initial State from usually you just go to infuro and scrap States finalized and then maybe you go to Beacon chain and check that it's the correct one but with this protocol you can just hard code the merge transition block for example into the client and then use the lifeline protocol to jump to the latest State download that state and then use that as your bootstrap checkpoint without having to validate it against Beacon chain or another use case a decentralized wallet that doesn't need to talk to any server Geth has a Mode called Les currently it's sort of a thing that you have to enable but the key point is that it doesn't require a huge database so what a live client protocol gives you is access to the block headers and inside of the execution payload header there is a field called logs bloom and with that field you can filter all the incoming transactions and see whether a block contains a transaction that is interesting for your wallet so you just need like the little like client on the consensus side 25 kilobytes a day about 20 bytes per second to follow the blocks continuously and then you can pass the headers over to guess Les and it can then filter for the blocks that contain interesting transactions and just download those few blocks it's not every block for sure so if we go a bit further to the Future layer twos are getting more important and for them the problem right now is they get attacked all the time like they usually get operated by Oracle nodes that are trusted there is a multi-seek maybe five out of nine four out of seven but it turns out that one party owns four of those when they get compromised everything gets hacked and if you add this like client protocol there um it can sort of act as an additional safety net so that the Oracle notes cannot just um send the bogus information so for example when you make a deposit into a bridge you can create a miracle proof that you made that deposit in the ethereum state and if there is a light client deployed to that layer 2 you can then use this as a as an endpoint like if you if you submit a Merkel proof to that bridge um it can verify using that light client that it's a valid deposit and can transfer that tokens to the layer 2. and also Internet of Things devices you can put a rental pass for bicycles in your wallet on chain like a weekly pass and you can just send this data to the bicycle lock like we have seen with the letter device before and it can actually verify that you own that rental pass and are allowed to open that lock or for example when you have like an electric car charger at home and you want your friends to be able to use it but not anyone to be able to use it just put a live client on there it doesn't need to be connected to the internet so yeah that's uh all from my side this is the latest updates about the lifeline protocols feel free to contribute to this Discord channel from ESR D this is where we discuss the like clients thank you we also have time for questions if anyone has a question there is one in the back hello uh thank you for the great talk I see a lot of deformed Bitcoin Maxes who say that it's putting too much pressure on the nodes while you're part of the sync committee um so I just wanted to ask what do the resources of the machine look like while you're part of a sync committee CPU RAM and bandwidth so as part of the same committee you are already doing extra work so doing this extra lag client work is actually not that much extra basically what you need to do is you need to Hash the state and you need to grab a bit of static data out of it because you already loaded the state I'm getting those hashes is basically instantaneous so this really just doesn't add that much for nimbos we collect the like client data by default and no one has ever complained about any CPU Spike or bandwidth Spike due to that thanks uh do we have any any more questions from the audience uh there's one here um the second row can you please elaborate on what this means for wallets uh like metamask or coinbase or Ledger like what does this actually what's the future opportunity of using like clients and how does that change um how wallets actually operate in the future um I'm not sure if I got the question but uh metamask right now it has to use the get balance endpoint because that's just what was available before the merge with this it can actually provide a secure verified display so to say so that this so that the balance that it shows is actually correct um also for your nft balances nft ownership anything can be verified okay is there anything the protocol can do to be even friendlier to like clients or are we pretty much as good as it will get we are still call for example right now getting access to the execution payload header is not that easy you need you still need to download the full block for that but we are targeting a couple improvements there for Capilla that further reduce the amount of information that needs to be exchanged to be fully synced to the latest head front row or back there oh hey uh thanks for the talk I just have a question about the attack that you showed at the beginning with metamask and the solution that you uh came up with at Nimbus as how to mitigate that attack I'm just curious um if you use my excuse my ignorance uh here on this question but like why doesn't metamask or these like client wallet providers just build the solution um and instantiate it themselves like what does um Nimbus why does nimbus need to be brought in to mitigate this attack well the reason there is that actually those protocols just are getting standardized right now for example the rest protocol was standardized on Monday so that's when it got merged so there was just not enough time yet and we hope for sure that metamask and Ledger will integrate those security enhancements directly into their products or you could also Imagine a scenario where Apple and Google put it into the Android and iOS operating systems as a background service so you can just ask that one give me a secure balance and as long as you trust that background process that's fine but yeah the answer is just there was not enough time yet to implement those changes because the protocols are really brand new was a question in a front row hey John what are the um sort of assumptions that are being made or the security implications of just trusting the data that comes into the like client headers and how do we mitigate this so all of the security Implement implications the student committee is sampled by random from the full validator set so the full Beacon chain currently operates under an honest majority assumption so as long as a majority is honest the beacon chain works so if we sample randomly 512 validators from that set that is considered to be honest maturity then the same can be assumed for the smaller set and there is also this additional safety that's why it's more than the weak subjectivity period um where because like it has to be exactly those 512 validators that are only assigned for that particular day that you need to compromise if you look at it how long does it take for validators to exit it takes about four months until enough validators are exceeded so that they can then sign conflicting histories to compromise this so as long as you stay within the four months and as long as we improve the protocol with those flashing methods then I think it's quite a secure way what you have to keep in mind though is that the student commit is 512 validators and each of them has 32 E's so if you combine all of these balances it's about 2 million dollars so that's about the highest cost you can get even if everyone would be fully slashed down to zero any attacker who can offer the student committee a higher amount than that can compromise this um so right now for highly secure applications such as layer 2 Bridges I would recommend it as an additional safety net so in case the Oracle nodes get compromised that you can still verify that they are compromised um but I would not trust this solely for high security for the wallet use cases it's already an improvement compared to just trusting infuro one last question hey so on the beginning of the thought you mentioned this Raspberry Pi 4 with a gigs and two terabytes of disk so is that still as the same for like a running like client could be a bit lower to smaller devices or in Linux in constrained like a hardware resources and like client doesn't need a database you just have to track those 512 validator public keys and the latest headers so you don't need eight gigabytes of RAM you don't need two terabytes of storage because there is no database and you only need 20 bytes a second over one terabyte a month so yeah awesome so please one more round of applause for instance foreign catch eaten outside of the room um and in the next five minutes we are going to have Daniel Faron on stage talking about compatibility of ethereum tooling and um with other blockchains alternative blockchains and what it can teach us about ethereum's future starting in five minutes foreign [Music] [Music] foreign [Music] [Music] [Music] foreign foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign tooling can teach us about ethereum's future by also one of the one of the cool people in the space thanopharyn the principal software engineer oh please yeah yeah one round of applause for Dino is a principal software engineer from hederer hashgraph he's also the maintainer of the hyperologic base 2 so please without further Ado uh that don't come on stage foreign these are my slides so the title this is what happens when you forget to name your talk five minutes before the finale so it's probably just a look at the future by looking elsewhere but that's pretty much the point of my talk um I thought you know other chains have gone before ethereum and they've done different things in ethereum and we've adapted things and so as ethereum is moving forward we should look and see what's worked with them and what hasn't worked with them so the thought I had is some of these changes are Trailblazers and some of them are shipwrecks as warnings to don't go there so I thought I'd ask Dolly to the AI generation program to create an image of me of a covered wagon on a Seaside looking out over a shipwreck and what I got instead was something more awesome I got this over here you see a broken down wagon it's broken this is the real wreck and this isn't a ship this is a wagon that's converted its cover into a sail so this isn't the East Coast if you're heading west this is the West Coast they made it to their destination but this wagon is learning from other systems it is adapting it is getting ready to set sail and head even further west so um how do we this presentation most of these slides are going to be in two columns on the left is going to be what other chains do in some of the details that are relevant and on the right is what ethereum could learn from it sometimes we learn good things sometimes we learn things not to do and sometimes that's that's just a neat thing to know but it really won't work for ethereum and um I kind of live in both worlds on this the reason I I came up with the idea for this talk was I work at uh hedera hashgraph I was one of the maintainers of hyperledger Basu and they wanted to improve their ethereum compatibility game so the idea was well hedera's Java based basis Java based let's just complementize out their evm and bring it into hedera and bring that software over and suddenly boom 100 evium compatible it's not that simple there's a lot more to it than just reading byte code and executing programs so I'm going to talk about three separate areas the first area is going to be accounts of cryptography then I'm going to spend a little bit of time on the evm itself and then I'm going to talk about transactions and and transacting with ethereum which is is kind of an important thing if you can't put your transaction on a chain the chain may as well not exist so the first thing to talk about on on crypto on the accounts is the cryptography accounts for in ethereum are intrinsically tied to your public key and a lot of other operations are intrinsically tied to hashing operations nearly every different chain out there has a different setup for the encryption that it uses um ethereum uses ecdsa on secp 256k1 hedera uses Edwards as does near polka dot uses a combination of schnor and curve 25519 which is pretty unique and insensible and the consensus layer uses bls-12381 and there's a lot of variation in there and then you look at the hashing algorithms there's an older draft of of shot three culture contract that ethereum uses then there's actual shot 3 which hedera uses but they use more bits near uses shot 256 as as the consensus layer and polka dot uses Blake 2. um so one of the things looking at this is you might think we can just pick one and go with it the problem is need cryptography needs change over time attacks against cryptography don't get worse they only get better new ideas get found one of the big things on the horizon is quantum resistance if we want ethereum to last 10 20 50 years at some point we're going to have to change some of these algorithms and at some points we're going to have to do significant changes so we should continue to build with this in mind that we're going to want to change it I mean as it is right now we may want to change it to use the wrong button this is the laser we may want to use BLS 12 381 for some of our accounts it's not just useful on ethereum mainnet on ethereum on the consensus layer for aggregating signatures but it's useful on layer Twos for aggregating all of their transactions into one signed transaction now that comes along with some problems um BLS and Edwards require you to bring the public key along with you and I think that's covered by the next slide um I'll talk about on this slide so the the BLS and um Edwards require you to bring your public key ecdsa doesn't so we need to put more space in some of these transactions and normalize the practice of setting your public key or your ethereum and you can't send your ethereum address you actually need the public key for the cryptography so for some of these signatures we would need to socialize that so the next interesting issue comes along with the account addresses hedera uses a sequential system counting up from a thousand um hedera is interesting an alias system into some of its accounts to support some of the needs of of ethereum mainnet create two you have to use the ethereum equivalent address or things like uniswap just won't work we're also considering multiple accounts per model but some of the interesting things here is that um by disconnecting the public key from the address you can do things such as key rotation which is critical to some Enterprise applications but right now your key is tied to your address so account abstraction is a way to solve this I think would be a great way um but another problem with compatibility is if we're going to use a different Key address do we do address translations to ethereum do we have definitions for these we'll probably need some sort of a definition for how you would take a BLS 12 signature into an ethereum address if we're going to adapt that for various uses um and the biggest problem is that ethers.js and some of the other tooling when you create a contract from an account they don't check the return value they assume that you're following proper yellow paper definitions which for an ethereum tool makes sense but with it with the possibility on the horizon that some of these signature algorithms might be changing that's not an assumption that is safe anymore for these tools to make they should believe what the what the RPC tells them is the new address when it comes back to them another problem is authorization EC recover is used by a lot of contracts to authorize messages like 0x to authorize the trades some other uh out some other Dows use it to validate votes and everything like that but this again ties the account to the key and also includes key rotation um hedera we use this clinch law accounts which doesn't work well to EC recover we have to map in it addressed to that near uses usernames that you have to register ahead of time quite different and so we need to have a different approach to this and we probably need some sort of a an account authorized pre-compile to be brought into ethereum when we do account abstractions so you can ask a question of here's a address here's the signature and here's the here's what they signed um is it authorized and then just return yes or no so I think you know that would help us continue to keep easy recover as a primitive and move the questions about am I authorized into a pre-compile that has deep integration with the system and finally account abstraction [Music] um one thing I we should learn from hedera on this is hedera counts that used to have to create them before you could send crypto to them which presented lots of problems for exchanges creating new accounts for customers or for somebody saying hey send it to this send it to this public key you'd have to have the account created before anybody could send you your nfts or your crypto or anything so hedera introduced a system where you could have an aliasp account and we would create the account under the covers for you late the moment we need it um and the lesson here is from the account abstraction this was a bad experience which is why we had to add the aliases if we're going to have account abstractions we need to have a mechanism that you could that you can't convert an existing end user account to an account abstraction account so people can still send you stuff ahead of time before you create your contract um hedera's got a unique process called Hollow accounts that we're implementing here shortly where you can just set it with partial information and then fill it out later and that's kind of what would need to happen in account abstraction so I'm a draft some drafts have this feature some drafts don't have that feature of account abstractions so whatever approach we take I would really want to be able to convert an end user account into an existing externally owned account into an account abstraction account rather than requiring them always to start from a contract deploy so that covers it mostly for accounts the next area is the ethereum virtual machine even though you bring in the same Library there's always rough edges and Corners that you need to deal with one is the issue of ergonomics um and pre-compile contracts is the way that most change saw this issue what if you need to do stuff that you can't do inside the evm what if you need to queue up a layer 2 withdrawal what if you need to interact with your native token system what if you need to change your account information from a smart contract um lots of lots of smart contracts lots of uh different blockchains have different addresses for a lot of their pre-compiles an interesting one down here is stello this is actually the pre-compile that was the BLS signatures that was in Berlin before it was removed before we shipped it to test Nets they just the difference is there they put it at a different address which I think underscores what the what my main ask here is that we probably need to organize a registry of pre-compiled contracts that all chains and layer 2 is used for one to make sure there's no collisions and for two to give proper documentation and utility for smart contract writers so they know how to call these contracts within it in kind of a centralized place but I also want to pitch a language change as for these contracts that there's going to be a difference between a pre-compiled contract which is a contract that you could do everything within the evm most crypto Primitives would cover into this you just can't do it efficiently you can't do it speed wise it costs too much so you pre-compile it into a library you need to do it cheaper and faster the other type of contract would be a system contract where you're breaking the layers of the of the ethereum virtual machine and going and doing things into different parts of the system that you can't do in the evm so most of these contracts up here I would call system contracts and only the the BLS signatures I would really call a pre-compiled contract on this list um a little bit here we had to do something different instead of random we used a different hash um and hedera has a very complex fee system it works um you just librarize it gets lots of tests and the takeaway from that is that multi-dimensional 1559 much simpler than what hedera has and what hedera does isn't too scary if you know what's going into it but you know some end users it's not quite as simple as here's one price and here's one meter numbers go up as you do more so I think the the multi-dimensional 1559 would be a good value and I don't think we're going to be charging too much for a lot of our gas features but if we do we should consider letting some operations be charged with ether rather than charging gas because if you're just going to store its store uh take up a lot of memory space that you're not doing a lot of compute from there's no reason to keep the the whole blockchain shut down just do one large operation that takes no compute um not too big of an issue um off and off call I don't know that anybody that does this so this isn't a fair take but it would be evidence we shouldn't do it I'll come back to this later don't worry the next thing though I'd like to use this as a little example I'll tell a little parable about this um and a lot of things that you're interacting with in smart contracts and in in uh blockchain sometimes you don't know if it's really going on anywhere so if it's going on under the system inside inside of it so here's here's a little scene from Westworld season one where Billy is going in and says like are you real and the Very pivot comment that comes out that kind of shapes the rest of the series is well if you can't tell does it matter substance that you're interacting with doesn't matter nearly as much is the surface you're interacting on so this is something that we did in this in hedera hedera has a very rich token system that has zero connection to the smart contract system um this is how they get their 10 000 TPS number on token trades is they just completely bypass the evm but there's a lot of use cases where you may want to interact with your smart contracts to interact with your native hedera tokens so what we did at hedera is we took the addresses of the tokens and we made a little jumper contract you call into it it'll immediately jump you into the HTS system contract and do whatever you would need to do and from this we could make our HTS tokens look like you had deployed an open Zeppelin erc20 or crc721 contract and it worked great we plugged in some some unicorn some uniswap derivatives we plugged in 0x protocol in some of our metamask testing it just magically worked and none of this was running evm code um so the takeaway from this is it's only the effects of what happens in a lot of these systems that matters clients can do things if they really wanted to they could pre-compile the open Zeppelin contracts if speed is the issue um this has very and this is honestly what zkevm uh proving is is using in the system and you know it's it's uh it's the side effects that matter and I don't understand the math but the math checks out and so you can take that same approach to the evm I don't understand the evm but the side effects check out so you can pull this in later on all sorts of other systems finally transactions and transacting this is probably the last hurdle that we had to overcome to really up our game at hedera for ethereum compatibility um we had to adapt the ethereum transactions into hedera transactions I'll go through this in some of the slides um but first I want to talk about before I get too deep into the transactions a little bit about hedera's consensus mechanism that really drives a lot of its features hedera uses a consensus mechanism that fully separates ordering from execution and the way they do this is because of the nature of the asynchronous bft hashgraph algorithm algorithm the algorithm works by all the nodes gossiping together about what transactions they've seen and they include a link to another transaction to another to another node's previous hash in Gossip eventually you can get to the point where you know what all the other nodes have seen and what they've signed and attested to and you can come to a conclusion about when transactions reached the the majority of the other nodes and you can take an average of when it came and that's your timestamp and that's your Absolute Total ordering so we can order these transactions without even seeing what's on the inside of them now one of the great things about this is there is no leader that comes out of this process so so when people say hedera is not a blockchain it's probably better to say that there's no block producers in hedera we don't go into a memory pool and pick and choose our favorite out our favorite transactions and put them in there you get the order that you get and this allows us to and this is kind of the trick behind how we get our amazingly High TPS numbers is we're running the evm full time you know the base of evm is not the fastest that would be evm1 but what we're running is if we run it all the time we can overcome a lot of those barriers and we can get that transaction and that's even 15 Mega gas per second is even us holding back and having some safety features in there in case we get overloaded in other parts of the system now um the problem is this really doesn't apply to ethereum blockchain has never changed their consensus algorithm well almost never and consent and uh and um ethereum mainnet just changed there is over to proof of stake and a lot of things about the culture are falling out from this Mev is accepted and endorsed um they're talking there's talkative and shrining proposer Builder separation into the protocol so some of these base level decisions come up and they affect the nature of the ecosystem so there's you know not much to be concerned about this is kind of neat to look at but it's not something that ethereum is going to be able to change the next thing I ran into was an issue with transaction announces hedera doesn't use transaction nonsense they use timestamps and you can do neat little tricks with your valid start time and valid duration down to the nanoseconds to ensure uniqueness for your transactions um but this is a problem that ethereum very strictly uses their notes and they really use their notes as sequence numbers I really wish that when they started this spec instead of calling it a notes we call it a sequence number but unfortunately that ship has sailed and nearly every blockchain out there when you see notes in a transaction you know it seeks its sequence number except for one I really had to dig deep in my memory for this one this is a blockchain out of China that's very ethereum-like um but it doesn't um it doesn't do the transaction sequence numbers and the notes it actually treats them as a true nouns great for performance and throughput horrible for memory so not everyone does this but we had to adapt announces the next issue was meta transactions we took a process where we wrapped the transactions of the ethereum rlp inside of a hedera transaction and we started the hedera transaction with one account and the inner account was responsible for it this is you know plastic protocol level meta transactions there's not too much fancy stuff going on with it and it just transparently works the Relay can agree to pay for none of the gas some of the gas or all of the gas and the transaction on the inside is responsible for the rest of it once we map that transaction to a user and if the relayer sends garbage into the into hedera we throw it away and we just charge the relayer for the garbage that they brought into the system and it works really well and it balances great then spins like a top um so so if we need to get um meta transactions into into ethereum mainnet the way to do it would be through uh in shredding in the protocol would be the best way um what we have right now with the Cooperative impersonation going on is is a good enough way for people that want to participate but account abstraction also has the potential to solve this problem of allowing people to to pay in one account and act in another now I promised I'd come back to this off and off call um so it's not just that other people don't do it it's that other people solve the problems directly in the protocol so I think that the people don't use off and off call is their solution I think is is stronger evidence and I think on balance is going to come by even if you take these evidences out that it's not worth the risk um maybe we should examine payer executor splits to solve some of these off and off call problems and finally there's Json RPC this is truly the last mile of ethereum compatibility if you don't speak Json RPC all the masses of retail tools and developer tools will not talk to your blockchain so we had to write up a relay server that would stand up in the middle take those RPC calls send it out to consensus layer send it to our mirror node and this looks a lot like the portal Network so the portal Network's idea of having a proxy that's going to go through and talk to systems that aren't necessarily live but have verifiable information it's going to work great it works great for us um so this is something this is um something that I have a lot of Hope for I've been following Piper's work for quite a while I think it's great um and again I think that covers most oh yeah one last ax ask this is this is my uh last point can we get an RPC system that doesn't put everything in the post body can we please get arrest like Jason RPC that is this has huge impacts on load balancers huge impacts on caching and all sorts of other items we have to put this into the application we can't put good front ends on it and split the balance easier it's just as simple as putting the method name in the URL but have huge impact um and so that's one of the issues because hedera uses grpc and it's got amazing load balancing implications um but we can't quite do the same tricks that we do with uh with Json RPC so in the 25 minutes that I had to talk or the 20 minutes I was allocated um those are my conclusions of of what we could really learn from from ethereum um from from other networks and what ethereum could apply I think account abstraction has great future potential to solve a lot of these problems um the evm um if if a chain wants to really run the evm they will do the changes they need to there's not too much changes the evm needs to do it's the user tooling that might need to change to deal with potential changes in cryptography that comes ahead and um not every chain is going to be a theory mean that there's going to be other changes that do cool things that aren't compatible with ethereum mainnet that's fine let them do their cool things let a theory be ethereum and if you have any questions or comments my DMs are open um just don't offer me a pump and dump I will delete you thank you Daniel we also have time for questions from the audience we have any at least one more round of applause for the diamond s thank you you can also catch him outside uh and chase him later at the conference um in about 10 minutes uh 2 30 uh we are going to uh welcome on stage uh kelsus to talk about rotkey and its Mission um on running an open source project so if you're interested in that please come back in about nine minutes now foreign [Music] thank you [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] next up we have a project that many of you will know the talk is going to be about rotkey and why it's open source and local first and why should you care so please welcome on stage uh kelsos with next stop [Applause] [Music] [Applause] ah okay hello everybody thank you for coming [Music] so today we will talk about uh open source and local first and why it matters for the ownership and privacy these are driving principles behind development so let's start so who am I I have been doing uh application development uh local mobile and web since 2010 most of the time of the most the time of this was doing open source and have I have been a lot of contributors since 2018 uh handling parts of the front-end infrastructure packaging so what you're doing startup pretty much attaching all over the code base so let's start with the problem today the problem today is that we don't have enough decentralization a lot of the software we use daily is uh closers it runs from data centers and there you don't have ownership or control of your data they can use it to train muscle learning algorithms use it for whatever reason there is no transparency and you have to trust that they use it as they claim they might claim that they have encryption but you don't have any way to verify that there is no master key and there is no way to be sure that all the claims are true then your data can only this can happen with different ways like for example accidents [Music] didn't know what they were doing and all your private information is public or hacks uh or some companies just outright sell data uh there was a nice John Oliver episode about data Brokers that was really scary on how much information they could get about people even sensitive information like healthcare and uh the exact point where people were living then other problems are the companies can go out of business and then basically you lose access to all your data another problem can be that they can be platform you something happens your account is locked and then put for your data is gone we can see some examples so for example uh deeper started blocking all the Russian users so basically they lost access to their funds and then we had the case of Snapchat where employees were abusing uh that access to justify on users and as we saw like uber was hacked recently by a teenager so it's easy you know if your public information goes out then there is no way back then we had the leather hack like people were receiving mail after their homes which can be really scary because their public addresses their private addresses the home addresses were outside in public [Music] uh so let's talk about open source uh what these officers like there are 10 criteria that are defined open source uh the main idea is that the open source software is freely distributed along with the source code and it doesn't limit the users there is no discrimination against people and guess against the use of this everyone can use up into software uh we also have cases of uh software that has public available code but it is endometriosis some examples uh include you know the delayed open source lines license that uh units of another have uh maybe mongodb server-side public license and uh in a lot of cases I can understand the reason behind that because it's really hard for open source projects to fight against big companies you know like uh the reason for the server-side public license is that AWS was taking all of um mongodb selling it as a service and then the developers didn't have the funds and they had to maintain and fix the issues um so why open source but there are some strong benefits Building open source you can have a strong Community involvement you can have transparency reliability security and it also makes it attracting Talent easier and it avoids also a vendor looking so like Community involvement uh there are people around like uh someone needs a feature we might be over one and someone with technical knowledge can come and contribute to the code base and not the future but they want to use so other people can also use it uh the non-technical people are going to contribute with translations uh making the app available to a bigger amount of people or documentation or other issues [Music] like you don't have to draft what the developer claims and software does you can easily read the code or other people can read the code and verify that these claims are actually true [Music] [Music] [Music] because it's always easier to hire someone that I have previously worked with you had the good interaction so then maybe you also take your code and you can see in an easier way that someone is a good fit for your culture and which is not always the case uh when doing some small interviews and uh you know like giving some kind of task [Music] and then uh like I said you can avoid better but uh you always have access to the source code you know always have access to the application you can take the data you can access the data so uh in case you want to move and migrate from the platform it becomes really easy because you can access everything so the biggest problem with open sources funding because it's hard to monetize we had like some major incidents for example where it was the look for they had order of interested [Music] software developers maintaining infrastructure critical software and everyone using it but they were always underfunded no one was paying for that and these [Music] [Music] [Music] [Music] there are [Music] [Music] centralized exchanges what this means is that all the processing of this data happens locally on your machine data is not used to a remote server it's not used to the remote API everything happens transparently in your machine so uh your local data is primary unlike uh you know all these Cloud stuff is like using Google Drive the primary source of data is Google Drive any copies if you have are usually some kind of cars secondary copy and while it's unlocking in the case of Google Drive if your cloud provider goes out of business then you might lose everything then because everything is stored locally on your machine it's more secure and it's harder to lead than if you had everything on a data center because you are the owner you control the machine and you can actually better protect them so let's talk about the last game it's a nice project we are building Rocky is a portfolio tracker and accounting tool that is open source local first and it's focused on privacy and unlike what some people believe the rapid team is not only the series but we know he's kind of superhumor but he cannot do everything on his own uh currently team consists of seven people uh six developers and one person handling operations uh developers uh we have the series with most of you if not everyone knows then I'm uh you know Business Development it does a lot of stuff then I'm doing mostly fronted the back end intersection like I said then we have zapil that can also back in uh looking is working with me on trumpet and case has been a really great help and then we have Isaac and Alexis with our newest members that are also plugins I think finally the seminar the first wife that really helps us with uh you know the non-technical stuff that the company needs and we are really glad to have here so we are really Roti across some like three basic principles is open source it's local first and it uses to store the data with this we can guarantee that the functionality is like you don't have to actually trust us you can verify on how we handle your data and how they approach because it's a local lab don't need data we don't have access to your data we don't know anything about different data any address any account anything you put on dropkick stays locally encrypted in the database in your machine we don't have access to anything and also you have access to the code if anything happens to us hope we do not but defect together so let's talk about another subtractions one is the python button and the other is a problem and it's what you see the backend does all the data processes it goes open apis open nodes or maybe you can also know add your local news so if you run in your own museum [Music] [Music] and then you have a global degree that usually information uh is available for Mac OS and windows and we now support it also um um and then we have uh [Music] although you should be careful design I said look at that so it would be better if you have a proxy in the front for security reasons uh and then there is another way if you own the governor there is enough packets and we are in close collaboration with Dublin we makes things really easier and we want to improve our experience there so for example we are working to make a automotive automatic Bitcoin along with a number of centralized expenses and defy protocols uh in the next release uh in this we are doing work so that it makes it easier for us to support multiple events so slowly we will start adding support for MultiLing change starting with optimism [Music] so in directly you can see your account history if there is hard to talk in uh Tuesday talking about how we do transaction decoding here you can see how this looks inside the app uh in this example you can stream it basically migrating 400 side to die and then selling them for 1.7 meat from kyber uh then we have a camping job Accounting in rock Keys customizable we try to be as general as we can so that we can support us in many jurisdictions you can parameterize how to generate your pin and report and then you can export CSP that you can pass to your accountant and do your tax report another great feature we have is uh ethereum plating as you can see your stickers performance you can see your daily stocks you can see aggregated information about everything [Music] although they are a bit problematic because they have to open the apps every day so that we don't rely at the moment on the same history because that's quite hard although we want to do that in the future but at the moment we depend on snapshots so you have to open me up every day [Music] if you value your privacy please an easy way would be to you know get your top node have your full not like a running GIF or rare gold or Mastermind and then you can use true blocks as an indexer because I mean rock at the moment do we have a problem uh because there is no easy way to get an account transaction we have to rely on either scan this can be problematic from a Brother's driver's perspective because it is you basically connect all your information like your email address your IP address your account and probably they they have to prescribe as a policy but you have to trust them for that because they are closer so the best idea was happy to have something like two blocks running and toolbox can index transactions which can benefit this way you could do a really privacy portfolio tracking and accounting you [Music] locally in your mobile device so that's uh you know like we met the user using uh because we don't actually have any documentation [Music] foreign [Music] [Music] [Music] [Music] [Music] thank you very much [Applause] do we have questions [Music] hello um I'm liking a lot of these small projects and I'm making a lot of a lot I find them I have I how do you finance Rodney that's my question the funding yeah the funding how is your are you are doing for freedom to release a business model because at the end of the day you all have to eat I know you have to eat yeah exactly exactly so funding is really hard like I said we currently have uh funding from Bitcoin grants which is I think one of the our biggest source of support and then uh that there is I'm trying to find the ways so that we can get grants or integrating with different protocols so these I think are the main ways of planting and paying salaries of course you know it's not as an open source uh project between our fashion so our salaries are not the best like we are below market rate but you know it's something we love to do so yeah it's hard it's hard and then we have the premium subscription but uh at the moment in a few subscription is 10 euros per month you can imagine how many users you should want to be able to sustain projects out of these subscription [Music] more questions [Music] because [Music] you know like there is a no unified model of the subgraphs so for every product we support we have to add a new subgraph and this actually gives us a huge maintenance cost because we have to go and you know like Implement on our side the schema handle every substance in a different way and then like as soon as the subgraph breaks we have to fix it but communicate with people that are armiting the suburbs and then we have to release the path at least to fix that for our users because the app is working and this is why we're trying to find the way that is more identified and more generic and that doesn't need the examination so you know like the way the enable system works pop up and we have to support them machine [Music] right thank you again kills us thank you and also he tells us outside of the roof if you want to ask uh in about five minutes so [Music] here foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] thank you [Music] [Applause] baby [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] foreign foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] folks asked we are still waiting for a speaker um so please uh you know stay in the room if he shows up the talk is going to continue within the allocated slot and afterwards we have the closing ceremony but so far I don't have any info about the arrival time so sorry about that foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Applause] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Applause] [Music] [Music] foreign [Music] foreign [Music] [Applause] [Music] [Music] foreign [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Music] foreign [Applause] the elephant [Music] [Music] hello everybody so we are back with our segment the speaker has arrived so next up we are going to hear a talk on taxation of crypto in Colombia by the head of the Colombian tax Authority uh Luis Carlos Regis so please everybody uh run of Applause for the speaker thank you uh hi everyone I'm here to remind you that even though uh crypto isn't in no type of crypto is currently a form of money in Colombia that doesn't mean you don't have to pay taxes on it um that's a joke um yeah no but even even you know because of this we want to make sure that the rules for paying taxes on crypto and crypto related activities are are clear uh we're taking steps to make that uh make things even clearer than they currently are uh a few of you may have wondered especially if you um even if you have just uh used a crypto platform if you are if you have to pay any taxes on the gains that you make from your Investments or if you run a platform I don't know if representatives of the the exchanges uh in the country are are here uh we would like to make sure that you know exactly what rules you have to to follow um briefly speaking even though crypto is no it's not legal tender in Colombia uh it is considered for tax purposes uh and intangible asset which which basically follows the the the treatment that other jurisdictions give to to crypto and in general to many digital assets um so um in Colombia you have to um you know you you have to uh fill out a tax return as just a uh you know uh a natural uh person you uh you have to declare uh your net worth which is uh a very particular thing to the Colombian tax system uh many of you guys probably have heard the debate in Congress about a taxation of your net worth how it's calculated uh and so just you know just like if you're curious about this you you would basically have to to tell uh us to tell the the tax administration the the value of the crypto at the the passive value that you acquired it on on the day when you acquired it you just have to tell us there's currently no taxes on on your net worth uh there have been in the past but this is only for informational purposes um and everything else is essentially a capital gains taxation if you so if you if you buy crypto um or other assets right uh if you buy nnft and it increases in value um you don't have to pay any taxes until the moment when you sell it so if you sell it you make money on it the difference between the price which you bought it and the price that that you got for it uh is the uh is the basis on which you have to pay a rate that rate will depend on whether you have held the the assets for uh two years uh or or more if you have held them for more than two years this is the this is the roughly speaking the capital gains tax it's called Uh in in Colombia um it's currently a 10 tax rate if the tax reform bill that we're working on goes through it will be at 15 of the the appreciation uh if you sell the asset before uh two years then you just have to pay the the ordinary rate which is a progressive uh taxation scheme it starts at 19 percent and uh at very high levels of income it goes all the way up to uh 39 percent uh which is much like what you would pay in in the United States for uh ordinary income as well um you may have wondered uh I know because I have uh if uh if you're in an exchange and you buy and sell crypto right maybe you're just playing around with uh um any type of cryptocurrency you've made uh and you sell it to someone right and if you if you like to think about tax issues which some people do you may Wonder does this pay vat though the value added tax uh Eva in Spanish um well uh there are activities such as exchanges that are that do not pay uh vat uh it so when it comes to intangible assets uh like uh like crypto then uh as long as they don't have uh an intellectual commercial industrial value so this is more like patents right like if they don't have that that added value then you're not responsible for paying vat the uh however if you're selling say uh at least some sort of of nfts there may be vat to be be paid so especially if you're thinking of running a business that uh operates buying and selling uh crypto nfts other types of uh digital assets these are things that you may want to take into account and we want to make this easy for those paying taxes right you have to pay them the least we can do is make it easy for you so uh we are here to to help uh I have uh I've given instructions to uh the the the subdirectorate in charge of uh Norms you know interpreting the the tax norms for specific cases in specific Industries to compile all the concepts we have we have issued about crypto in a single document um and uh but also we are here to uh collect the questions that you may have and we want to issue an official concept uh about this uh we want to do this uh both in Spanish and in English we want to have a clear rules for those coming from abroad to to invest and um even though uh I think we're all excited for the uh for the closing event at 3 30. uh we are here to to take questions uh uh yeah sure foreign so you were mentioning that we would have to pay um taxes if I you know purchase a Bitcoin let's say it goes up in price and then sell it for fiat currency uh but if I were to buy a Bitcoin and then swap it to another currency another digital currency let's say ethereum um and the price was well technically created a taxable game how would I pay that tax would I pay it um in the value of the local fiat currency what I pay it in one or the other intangible ads assets how how would you do that that's a great question um because currently uh ether and then that Bitcoin are not currently considered uh currency in Colombia uh and you're just swapping assets um uh it may depend but you would probably just have to pay uh the time you sold the uh in your example the ethereum for Fiat um and then I I think that also reason the question of what do you do if you if you buy something in crypto right like if you if you buy a house in crypto like what would you do how does it work uh and then in in that case you would have to take into account the the value at which uh that that house uh is fairly valued and the value of uh of your asset and then that difference would be the basis for for taxation um you never specified whether for whether it was first in first out which is if I had bought Bitcoin and maybe I put it off to the side for long-term storage or ethereum whichever asset and then later I start trading with other assets over here so first in first out would say that the very first purchase of the asset ethereum let's say was at a hundred dollars and now it's at fifteen hundred dollars it doesn't matter my trades over here it's first in first out do you understand the first day and first right right right yeah so you never specified whether there's a first and first out rule that you have or not so we um in uh I think the what's really helpful for uh for thinking always is that for all practical effects and purposes in Colombia uh crypto assets are intangible assets so you would handle uh State inventories uh in the same you would follow the the current accounting rules right um uh in in Colombia uh this uh I don't know what uh accounting rules you're most familiar with but we wouldn't be using a US U.S Gap but we would be using IFRS rules for for accounting uh so so that's what would apply it would apply in in this case uh I I I think we proudly in the concept and then the document that uh we will uh post uh I will post it on on my Twitter account uh uh to to start clarifying some of those things but mostly to invite questions like this so that we can we can give you specific detailed answers um yeah okay um hi uh what about the crypto you gain like paying some services so for example I have a income right on crypto how should we tax that yeah uh currently we so uh you you can be paid in uh in in in and things other than Fiat in in Colombia and that's uh that's already regulated right you could be paid uh uh so some people are paid in uh or at least partly in education for their children right like their uh their firm pays their children's tuition or they give them uh access to uh country clubs uh which have a certain value and all those payments in basically and stuff uh the same rules uh as for payments and income and then and excuse me and Fiat apply so you would basically have to uh tell the the government what the uh so what's the the fair uh Market Fiat value of the crypto and that would be the the basis of the tax you pay but you would pay exactly the same as if you were paying um as if you were paying uh if you were being paid in uh in in Fiat so suppose yeah suppose you um so so you work for a company that's paying you in in crypto then um they pay you uh in the Italian government this is how many pesos this was worth then you pay taxes on the basis of that but then your crypto continues to gain in value um if you if you sell it to buy something something else then at the moment of selling it you would pay uh an additional tax on on those capital gains basically yeah and if you you know if you found someone who was willing to to sell you stuff directly uh for for crypto then uh this this follows the same There are rules and regulations in Colombia that apply to uh exchanges of stuff right like if you if you trade uh I don't know if you trade uh a house for uh five cars which is something that people sometimes do you would you would apply the same rules in the tax code yeah um some wallets have uh debit cards if you can buy this or Mastercard so how do you make a chain of taxes whenever you have a wallet that lets you save in usdc or whatever and then expand it in retail let's say in a cafe I think there will be taxes along the way but who is paying what in that change so um I'm sorry the question is you have uh uh I don't have one just okay okay hypothetically there is a wallet with debit cards so how do they pay taxes along the way when you have debit cards uh the payment processors and there is a crypto wallet involved right um yeah currently uh none of that so uh those are things that would have to be regulated by the uh by the financial Authority uh the the Colombian SCC the superintendency of financiera uh because uh the regulation is still to come uh you would basically not pay a lot of things that you pay in the current Financial system there's uh you may be aware that that in Colombia there's the the cuatro per meal which is like a 0.4 percent tax on financial transactions uh that would apply only when you convert that into uh uh you know into into Fiat and into the traditional Financial system uh but that's that's a great idea to raise your Revenue I'll take that one with me um yeah I'm just kidding uh but not entirely yeah what's your position about using any cryptocurrency as a collateral to have a pesos or use dollars as a collateral uh like for uh getting a loan or yes exactly yeah uh this is uh this is uh still something that has to be regulated by the financial uh Authority uh so uh uh I suppose you could sign a private contract uh and then you give this as a collateral as long as someone else accepts it uh you you could sign you could sign a contract that that specifies it right yeah right okay so in the case of uh of D5 yeah uh we're actually this is one of the questions that that we currently want to to address in detail uh because it's a question that we've been uh uh yeah we're being asked a lot so so we're working on on issues related to to D5 for sure yeah hi um your office here yeah your offer your office published a document like four months ago the former director regarding this uh taxes on crypto that that document is still running we have to apply that it's it's still in force uh there were roughly 25 uh documents that we had published uh answering various questions so what we're doing is we're compiling all of them in a single document so that uh you have everything in One Source but nothing has has changed we just want to make this more accessible and uh like I said uh some of these uh you know these questions and more if you guys want to uh you know talk to to the the two uh uh lawyers from from the end that that came here uh with me um we will make sure to address them we want to give the to have a comprehensive treatment of of how to handle these tax issues to give you know to give everyone more more certainty and instability and then hopefully not have to pay like very expensive Consultants when we can do it for free for you the context of of my question is because the the former director yeah said in inkara called noticias that people that is that needs to declare their crypto they have to do it from 2017 and they have to pay the multas from those years 17 18 19 20. and what do you think about that because the incentives are maybe not aligned and people don't want to declare something to be a bad person and paying those multas you know right um as part of the uh the the tax reform bill that uh we are um you know uh uh shepherding through Congress uh we are trying to make a lot of those fines uh not just for crypto specifically but for a lot of uh different businesses and also just regular people a lot more uh understanding of when people are not really at fault and we want to focus on actual tax evaders uh the process is still ongoing so uh as I said we we welcome all feedback that that you may have about the permissions that we have already included in the bill and what else could be could be useful uh one thing that uh we uh we have gotten a lot of questions about has to do with whether we will accept taxes uh in crypto uh it's it's something that we as of as a tax administration can can do if given legal Authority by Congress we can we can handle it uh we think it's actually very interesting if uh you know if a firm or if a person wants to be associated with a specific wallet or sets of wallets because that actually as you guys know a lot of people still think that that crypto is cryptic and that you can't trace stuff we're actually interested in the traceability of a lot of uh of the cryptocurrencies and that it that can only be uh good for us as a tax administration so we're very open to all of these proposals uh talk to your Congressman or congresswoman there's still time to introduce some Provisions here here so two two questions uh the first one is we've talked about a lot of taxes right but what's your truly Vision about crypto like uh would you would you be considered as a pro crypto uh person or what are you are you at the tractor um that's one and the other one which more question that I always ask do you hold any crypto do I what do you hold any crypto I've I've held it yes yeah oh no for sure I um I mean look I think it's a technology that's here to stay uh I think it's promising I think the uh uh I think there's a lot of misconceptions out crypto I think we should help everyone understand that this is a promising technology I I look forward to the forthcoming regulation that various other government agencies or which I have no control I should say that uh will will issue at some point I think it should be sooner rather than later I think there's uh one of the developments that that I find most exciting is uh uh Central Bank issued you know digital currencies I uh I I was excited like I suppose many of you were when the Central Bank announced that they are studying the the issue I think uh I think I think only good things can come from uh from from this industry yeah okay I have another question so it's more about stable coins and usdt usdc so if I get my pesos and always convert them into US dollars or well in this case USD or usdt and then I when I need the money back in Colombia I transfer them back to my account what would be that tax incentive like implications there because you said like it's like buying dollars you know Cameo and then just like either spending in abroad or just having them in your house or whatever so what would be the implications there yeah so uh something like like usdt or uh other stable currencies uh stable coins are they are not legal tender uh here or anywhere so they are uh under Colombian legislation and and then rules uh they are considered uh just intangible assets so the way it would work is say you so suppose you you buy I don't know you uh like you go through a whole process right you deposit some Pesos into a local platform you use it to buy uh Bitcoin which then you in a local platform then you transfer to a platform abroad and you use it there to buy some usdt and then you do some more stuff with it and then you bring it back the way it would work in terms of uh of it being taxed is you there's a certain amount of in pesos that you paid uh at the the exchange rate the official exchange rate of that day uh uh um and then when you transform it back into Pesos at the very end it's the difference between the pesos you got at the very end and the passive value of the original asset that's that would be the the the capital gains so to speak hello hi here uh you've stated your position very clearly about the the crypto coins and all these coins that are native natively digital but there are also other type of tokens that represent for example real life assets such as houses and other kind of things uh is your take the same for those types of assets that have a real asset like as an underlying value an underlying value I'm sorry in real life but they're just represented digitally I like the technology uh look I just run the tax administration like those are issues for the uh for for various government entities right like uh I think it's exciting to uh to see how uh you know ownership Registries uh would work uh how the financial regulation really is what uh as we all know uh is necessary for uh for this industry to to have a more solid footing uh I and I do hope and then I know that that the people involved in this uh understand the the issue and they're working towards uh making things like that possible uh I think I think in general it's an exciting technology and I I also think that uh we we still we're still trying to figure out uh all the possible ways in which uh the technology can be used so I I'm sure there's more to come and those are good examples of what we could see oh the taxation okay so when you have underlying assets um well um in in in that case yeah basically the difference between the peso price when you invested in the peso price when you finally sold it that's that's what will be taxed and it will be taxed as uh uh either capital gains or ordinary income meaningless [Music] Yeah you mentioned the cvdc and there is a incentive for the tax authority to look everything that the citizens do uh for tax purposes in in that sense what do you think what is your position about the privacy of of the citizens what is the balance between knowing and taxing what they do and knowing a lot more that would you need to to know I think that's uh that's a question for uh for Colombian Society to answer as a whole uh I'm going to be performed uh from the point of view of the tax administration we're interested in in the traceability of transactions especially given that the Colombian economy uh is so informal and so many people use cash I think for instance uh uh we you know if we could if we could offer uh people a digital currency that is more convenient than cash even safer than cash right like if you're like if someone steals cash from you there's no way of getting it back if it's if it's highly traceable you you may be able to know what happened to it afterwards right uh so those I I think I think there are trade-offs in life uh and and I think it would be particularly interesting for everyone involved to have a digital currency that is not 100 Anonymous that can be traced but that also offers extra safety beyond the the safety that that cash can give you yeah I think my time is up and uh we probably want to go out there but uh thank you for your questions um uh Alfredo and Stefania are here to take to collect some more of those if you uh and uh yeah we will be collecting them and Publishing an official document uh answering them so make sure to ask absolutely everything that you want to ask and this is not the only yeah like um they will be happy to share uh contact information with you so that we can maybe set up a round table between Diane and the industry and and start clarifying some of these questions thank you very much [Applause] hey guys I think this is gonna be at the end of this room please feel welcome to go to the main stage we're going to have so I'm very cool closing event for you thank you very much goodbye [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] thank you [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] foreign [Music] [Music] thank you foreign [Music] [Music] [Music] [Music] [Music] [Music] [Music] thank you thank you [Music] [Music] thank you [Music] foreign [Music] 