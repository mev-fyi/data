so it said post light but yeah first it's really nice to be here and then thankful to be invited to speak here today so why am i speaking about smart contract security could busyness but I won't expose them but actually I worked for a theorem turns out to over two years now and actually my job was to prevent hard folks also to say because I was working on consensus tests and working on getting all the clients to sink in both thousands of tests and good piece of all to say I prevented a lot of hard folks in terms of client consensus and there are through recent experiences I learned the hard way and how important smart conduct smart conduct security is and that's why I wanted to talk about it today see so you know about the Dow and I was mainly responsible for writing down smart contract so on 7th of June there was an attack robbing 3.5 million ISA out of this smart contract by using the reentry exploit we have heard about this before this conference i will not go into details how this works but those were the lines of code in the dow itself basically there was this one function was 12 yacht with tois we wore 4 which was vulnerable to this exploit so what can we learn from all of this there's a lot of things have been said yesterday I mean I will repeat some of them of course but give my personal perspective on some of those things first of all cap smart contracts it's very early days and B lack experience meaning we just need to learn some lessons before to know which kind of bucks we can do if you just look at version numbers of the current software you can get a feeling of how early it is some solidity actually has not been released yet as a 1.0 version Vanja has been launched for about a year ago so it's all very early days we have a the number of operating decent lines application is also still very low realloc suggested in a blog post that for example right now a cap of about ten million dollars seems about right it's an it it's an individual decision but of course would have been nice if the Dow would have had such a cap but of course nobody didn't know that it would rise to such an ass eyes so next one formal proof verification I will not go into this we have heard about a lot of this yesterday but yes a very important topic I hope we make two could make continuous progress on this topic invariant checks so basically you can write see that your smart contact has certain invariants such as for a doubt as would have been that a total supply is smaller than the balance plus reward Hung's and then after every function you can check if the invariant still hold its reduces of course the risk then this is an interesting topic centralization of course we want to build decentralized application that's all main goal and one of the weaknesses so to say of the dowel boss that it was we D decentralized is that we had no control nobody had any control over it and this was the problem and in the end because nobody could save the doubt only the community by doing a hard fall which of course is a horrible option to do so we need to go stepwise from centralization to decentralization if you think about a theorem we had Olympic tests in a time you had the franchise net that we had those canneries I had one of those keys where basically two out of four key holders could more or less switch of the - if they would listen to the canneries we had have homestead that we have this difficulty increase which means we need to have a hard fork in about a year or so and that's only a couple of people able to code up the next version of etherium so it's also kind of centralized so and we will go step to step to more decentralization for a doubt I have been curators they have been given a lot of power except of the function split doubt because this was a function meant to as a fail-safe or malicious creators so that's why I didn't have control over this function couldn't do anything there's all the other Taoist it should I Omega down after thousand workers which start centralized and we'll go into decentralization then equations because who can control for a doubt what some token holders it could be central transit authorities and there's more but a slight stone showed up here right now it could be assumption area community multi-sig it could be a something like a stake vote that you build in some senior smart contract when a certain amount of ether holders vote for its top something so there's certain ways of controlling this but I think we need to go step by step but also I think it's important that we really want to build decentralized application and do not use the towers and excuse to only build centralized applications although it's good to start like this I don't think it should end like this we should move forward to fool decentralization one day establish security patterns meaning learning we didn't know about the call stack that to that call stack dams attack we know about the plot gas limit don't have a battery links loops we know about we only exploit now we know about that either sent the contractors out it's possible to send either to a contract without any contract invitation so even if you use this modifier payable or you don't use it on any function you try to avoid getting either as a contract you cannot avoid it because you can use the suicide opcode to set transfer either to a contract without executing any code for example specify the right amount of gas send roses call depending on what your exact you want to do you have to be careful with the block time stamp because it can be manipulated transaction versus message sender for example can be used for phishing attacks and much more she's better the slides are not really working Bruce there are links coming up it's just there are some very good resources one is from the consensus website best smart contractors let's correct best practice of small contracts or something like this you find out a consensus website it's a really nice overview of all the things we can get me to learn and what we have learned up to now also the solidity documentation has a section about security consideration which is very good and very helpful and these should as a community learn and put all those things together so we can teach other developers what to look out for let's see if you can get to the next slide yes updatable contracts so the dow had a possibility of updating the contract through a vote it did take two weeks debating time and now one point wanted to say was walking progress but it was too late so it is I would advise you in your smile when you write smart contracts to have an option to update them the question is only who can update them in the beginning it can be you of course centralized it can be the token holders if you have some in your application depending on what you are building and again could be a multi-sig may be a community motor sector different ways of doing this but it's important to have at least this option of being able to update contracts time delays also something important when you whispering someone can restore ether or to take ether out of a small contract if you have a time delay this gives an option if you implement at some authority to do something to act in case of the doubt there was no such authority in the least resort was this haha misters awful hard fork so therefore if you have time delays and this Authority implemented then this can work nicely together to reduce the risk of a smart contract of course minimal complexity there are statistics out there which saying there are 15 up to 50 bucks per thousand lines of code for website it's okay you can fix it but for smart contract that's really bad so of course we need a much much more security for smart contracts and we need for normal stuff so this also means not everything needs to centralization and needs to be in a smart contract only put in what you really need the core elements of a decent last application everything else can be maybe in swarm whisper or even other techniques yeah and the other thing is to reuse trusted proofing code can you also be dangerous at for example the standard token contract which was also used in the Dow which worked just nice you have the foundation moody SiC which seems to hold up to now so means also looks safe and maybe it will be even a Taoist and a framework one day just to reuse a little safe code this also come as a danger because if then you someone finds it back in this kind of code if it affect a lot of applications so therefore you also need to be careful with those things but I think we as a community need to build trusted libraries which are reviewed by many of us too for other developers to use let's see if you can get better tools I heard about from proof a vacation we need better compiler warnings I think this is all work in progress we need improved IDs we have seen we mixed us yesterday which looks really nice and promising via trusted libraries we need best practices literature which is also working progress and we also may need some yeah centralization which can be done by master keys or maybe if we came to decent license escape hatches or other things which we can use in smart contracts for now as a trusted source of information who can update contracts or do certain things or stop a contract from working so as a conclusion I would say it is very early days and we all need to be very very careful but I think there is of course a lot of lessons to be learned from this but being here the last couple of days got me really excited to see what came out of this we have a lot of security experts from academics to have a lot of media attention lot of people looking at this looking at the right things developers being much more careful now and I also also nice to see a lot of developers coming up to me and say you basically saved my project because I had to sign back in there but I could fix it now and so I think a lot of future applications these in those applications and small contracts will avoid all of these issues and we can really move into a bright future although being careful in the beginning and it was really astonishing for me to see how this community is moving on I think this was a really nice experience to talk to many of you last couple of days and I also want to say a personal thank you I mean the last couple of month thank you thank you very much you can only really say thank you the last couple of months have been as opposed as a person for me my personal life also as a company horrible of course but it's only because of the people sitting here because of the lot of the ìiî and community that I can stand here today and give this talk and I just want to say thank you very much 