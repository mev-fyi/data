[Music] okay I believe the stream is transferring over to YouTube they'll let us know in the chat soon we have quite the quorum today 45 of us thank you everyone for showing up I believe that you have the agenda I will share it in the chat cool we are going to go ahead and get started we'll start with testing updates I'm gonna give a brief on what I've been up to and fro to lamda will give a brief on what he stood up to continuing to add just on the PI tests of the executable spec we've been as we've been adding features of even updating every been modifying and fixing bugs I've just been kind of adding testing that passed through the general flows the X the general expected expectations and kind of like sanity check passes and through that we've been finding a number of small bugs which most will just make it into the next release probably in the on the order of week week and a half from now okay cool it looks like proto will not be here for the next maybe ten minutes or so and we can come back to him further lambdas now at least for the next chunk of time univ working full-time on testing testing infrastructure and towards fuzzing and more randomized inputs and we expect a whole host of awesome little bugs to fall out in the next few weeks because of that there's a few modifications to some of the structures of stuff and I'll wait till proto gets here and you can give us an update about that so we'll slot him in right after client updates someone remind me if I forget okay so let's go to client updates how about we start with parody today so we passed all the escape hatch further from the repo and right now we are mostly it is trying to do the factory and trying to integrate got a new runtime back to our old our existing runtime to do the integration so so that's for us awesome and are those the oh five one tests it was it passed several days ago so I think the old five zero test okay and yeah cool that's very exciting I think maybe you're the first to integrate those tests successfully Congrats okay and proto we're gonna do your testing update right after the client updates see you joined so we've been thinking blocks across the network using Russ loop in P which is pretty cool around spec zero point five point zero we're doing what propagation by gossip sub we're using a slightly modified version of mat slippers protocol we need some oyster Network deserialization up in the stack so you had to make a couple of those shortcuts to make it work but we'll be trying to get a bit closer to that actual spec and the wife protocol that is Nevada clients coming along well we're using a testing tool to produce box at the moment but we'll switch over to the proper validated client later this week so that means we should be running a short-lived private single client test that in the next couple of days which is pretty cool we're also working the past state transition vectors and we've found that slow tree hashes has been really inhibiting us from operating smoothly so for a couple of days into a case tree - implementation and we should have something in the coming couple of days it's pretty close and finally we're looking to swap from GPL two to Apache - yeah for us great thank you how about lodestar a second finds him we've also had a pretty big week we were about to PRN like our first kind of rough plumbing about a to client and we're really close to being able to actually just kind of spin up what we hope would be a similar to like a single client situation processing blocks and whatnot and then we're gonna move to try and get that spun up and multiple load cycle lines but other than that pretty much we're at great thank you how about Pegasus hey everyone sorry my laptop froze I'm on mobile so our beacon chain visualization visual sorry visualizer bacon chain is talking live to the Artemis client we are processing added stations correctly during both block and epoch processing and thus finalizing blocks and epochs Artemis is up to date with version 0.4 of the spec in version 0.2 of the hobbits fire protocol we're currently working on implementing RPC methods for request block routes request block headers and request block bodies block bodies and we're hoping to be running on a white block test net within the next week or so okay very exciting Spivey infinity hi so last two weeks basically the general no more spacing of version oh five one and also some big content test net on the deftly 2p network there is capable progress and also with the research team we the past encounter of the o5 one as well so yeah that's the update thank you great thanks and just a quick update on that the deposit convict repo from now on we'll have releases cut simultaneously with the main release so if the API or anything changes on that in you can more say in the version those together great thank you let's see Nimbus hi so it was a very big past two weeks lots of work was done on the crypto front we updated to the latest BLS and the test vectors from last week on the spectrums we implemented zero point five point one I did more logging to help for debugging we have stayed pending pending we also optimized a lots of low-hanging fruit because processing was so slow that he didn't fit into a slot and for test night we even switched to 42nd slots 4/4 time and we also started to integrate new state tests so first step was loading the llam√≥ validator and deposit coffee to be able to generate genesee state state state from it so that's done and then the next step is loading the become the beacon state from the ml file and compare the hashes of both regarding bugfixes we had some networking and underflow bug fixes and we erased the potential speck back during search in ASIS epoch processing just this morning also we implemented we change all timers implementation you know I think framework because we had some clock drift during simulation and regarding the p2p we did some architectural research but for now a fascination we will stay on our P X because it's more solid and the big news is that we started a development private test net on AWS this week with instruction in a blog post and in our repo we reached out to non-members steps colleagues and a couple of people in the you know jitter channel - and we managed to install run the client connect and sync - or private test net successfully so right now we're just are running out on boring and we have a couple of issues to solve regarding that traversals and pure connectivity like low ID hi heidi if people remember from email and candy mia times and we should have something to show at larger scales but if you interested please contact us great about harmony we need some consensus layer optimizations like question of keys of world leaders and cash in shuffle in some other of our essence of ice cash were added also did a slight refactor and improvements in the simulator so now a transit faster finished work on the Bo SSD and shufflin best suits and now working on consensus tests already fascinate a few of them there is also a work in progress on assets array design actually it was originated by by incremental Hessian implementation so I'm gonna factor it and that incremental Hessian also aligned with the latest SS yields a cup base also been working on updating back to version 0:05 one this work is almost done encounter the several issues with cross link processing I'm trying to make some rework of that part of the spec actually I did some but not sure that this is the best way of doing that actually going to open a pull request and maybe discuss it there so that's it on our side great thank you how about prismatic on public sort of test net we have the pol cluster running it's able to like survive restarts we constantly restarted though as we're upgrading in a team or bug fixes a bunch of like strong monitoring and spanning tools to check out what's going on people can join in from the outside and sync up with the network and we use curly for the deposit contract and for incoming validator deposits pretty much yeah we're using only ghosts and there's only a few more bugs to fix and like post changed our validator activation we get some like weird base conditions or requesting assignments but aside from that like yeah we just want to leave this running for we make sure they can run for many days do a little bit more stress testing and then have some more people try it out before we go out into the wild but yeah things are getting pretty close we've just been in like debugging Hill we were like at a bug for like two weeks we didn't know what's going on and it was because we were passing India we were not passing in the justified state to L&D ghost but Terence here from our team was able to figure that out and now things are getting things are pretty good so far so yeah hopefully very soon great thank you yeess has anybody here from East cool like I said we're gonna go back to testing we finished clients proto I gave a brief on what I've been working on and that you're gonna be spending a lot of time on update on what's going on your drive tests from the spec itself it's like a huge great thank you and Yannick I believe you were gonna do you're looking into doing some work on getting the SSC and hash treat vectors up is that on your radar that's know you were here yes just this morning with an update for the SSE tests and they should be up to date now and should also be more useful than the previous version because it's just more complete than our test for all types not only integers but unfortunately will take a while to get this match because yeah first the migration to the spec repo and also it depends on some stuff in the Python SSC library that hasn't been washed yet and therefore the auto test generation doesn't work but you can try it out I put them I uploaded them or generate them manually and put them into a github gist I'm posting the link in the chat so yeah you can try them if you want and you are now working on triaging great that's it so just to be clear so if a young test generators repo will be removed and everything will be generated from the Ephraim to speck triples so spec updates will also be tested and we'll have a test generate kids automatically yes yes the CI for the testing of the spec and the test generation are going to live much more closely to each other now that the spec is executable to kind of keep that flow simple great that's pure 8.51 cool anything else on testing before you move on specifically consensus testing okay next up research updates keep this relatively brief a bunch of them in zero I think latest one is regarding the withdrawal process which is both kind of a better design and simpler and I think we also have a better design and a simpler design by removing the exponential back-off mechanism zero the other good news is that we're making progress on phase one so phase one as a spec will be split into three parts part number one will basically specify the shot blocks and the structure of the blocks and the structure of the attestations in the shot and the focus rule and then in a separate document that will basically be updates to the beacon chain regarding the custody game and it's very nice and simple and readable and so we're kind of going through all the edge cases and trying to make it super solid and my guess is that we'll be able to finalize the phase one spec not too far after finalizing the Phase II respect excellent any other research updates will do we have networking slotted right after this so you can start that one off Appletree thermoses yeah I mean I think on my side it's basically the simplifications that Justin just mentioned so I just recently put up a PR for replacing the withdrawal queue with an exit Q search team will be in ed con and it's probably that we have a draft ready of handle protocol data okay thank you okay let's move on to networking and Felix you can start us off yeah sorry I have to catch a train so I have to pop out right after this so the yeah so the en our spec is through the process so it was accepted when the last orders meeting so we're able and I'll try to get some people to actually implement it now that we've sort of formally accepted it and on the disk e5 side what we've done is we kind of solved this packet signature problem was talking about last time so just briefly capsule there is this issue where basically if you have multiple notes using different sort of crypto systems for their node identity then the big question was how they could authenticate each other's packets and in the github issue there's now looks like we have a pretty good solution using H Mac to verify authenticity of the packets and right now I am implementing that so I I don't have any code to share you know yet for the implementation but it is progressing and we've also updated the specs quite a bit and on the eighth one side we've actually sort of moved all the related specs to the Deaf PD repo so they're really all in one place now and on the side I've also been working on and Eve to get Ian our support into the ROP expects so that that will be an e for our case version 6 but it's not super high priority so it might actually take like a month or more to finalise that one ok awesome thank you any questions on that before Felix has to go ok next up we'll talk about the network spec that lives in the repo there was obviously a ton of discussion and likely to be a ton more discussion but given that we kind of at least have the general framework I merge it last night and from now on we'll address things via issues and subsequent PRS that are smaller more digestible Matt do you have any specific update you want to give on that you know just that the first thing I'll do to update that particular PR is split it apart and add some description around the broadcast side so we've got our PC I still write about the broadcast side and then I'll move on to a couple other specs - great Thank You Zack and anyone that's been doing some work with white block you have any updates for us we've been working with Artemis and we're also working with lodestar I agree with what you're kind of said in what we said in the in on github about a you know single client essence getting the clients to talk to one another before working on any interoperability type of tests so that's kind of what we're focusing on and after we get load start talking loads miss Hawking Artemis then we'll get them to talk to each other there's no particular timeline on that Matt elder doesn't even say feel free to chiming yeah so we finalized the me and Antoine finalized the Hobbit 0.2 spec we just stripped down to basically some envelope formats so it's agnostic to anything else that's going on the community it's just sort of like a scaffold until the p2p is there sort of thing and that's why I really got to say so anyone wants to use up at zero points here it's not changing anymore so yeah great thank you and Raoul from protocol labs is here today or all do you have any updates for us so not really not really a swap day just business as usual on our side working today to finalize a word does cos don't let me to be dot io for us we are creating an area for implementers and contributors so that we can you know we can we can better serve any questions and engage discussions and so on right now those discussions are kind of split across many venues and I think that putting them on there will help the rest of them to be to be team to participate and in general the p2p community so I'll be once this is set up I hope to finish with us today make an announcement on you or it gets a chow great thank you anything other on the networking side I have slotted to talk about just test nets and progress in that a couple of budget items later okay Piper is here today to update us on his work with regard to doing some modifications to simple serialize to make it more friendly to indexing Piper well this is one request seven eight seven innate to from specs repo anybody wants to look at it well I talked about it so this is updating the SSD serialization spec to include an offset based mechanism that was originally proposed by Peter with your iam team this makes essentially dynamically looking up data within a stereo eyes objects have it's constantly fast it's I believe o log in or something along those lines for for index lookups um it also actually reduces the overall serialize size of SSD objects by a small amounts essentially just by touching delete lengthy fix and in general seems like a better format for serializing and makes this formats more useful for being able to reason about objects within context like bbm or other resource constrained areas and I am NOT a hundred percent sure on this last one but my intuition says that this also works as a viable ABI encoding or smart contracts which would give us essentially a unified and coding format or how we send objects across the network how we encode objects for consensus data and how we communicate objects into things like smart contracts so we in general there seems to be some like consensus around adopting this as the update to what SSD cereals looks like be interested to get other people's feedback for or against in that porta quest or heater if you have questions that you'd like to ask me and I think the plan would be for this to take effect in one or two releases of the 2.0 spec so not something that would be dropped in immediately but that once we have general you know unless anybody object strongly that sort of thing to include this as part of a spec update within the next I would say one or two releases but that's that's a very fuzzy number one thing that was proposed and that we generally I think I have rejected is including a length prefix and the intent behind that was to have some sort of forwards compatibility and the ability to have extra fields be added to objects and still have them be somewhat backwards compatible and this was rejected essentially just because it adds ambiguity to the serialized representation of these things and that ambiguity can have a number of like unknown consequences down the road so we opted or leaning towards a very strict set of rules for for serializing objects so that there is exactly one way to serialize any given object great thank you Piper are there questions about this proposal and for any context it took me about a day at the upper end to update the Python implementation of SSC to this spec so well it's not well it changes the layout and format of serialization the actual updates to changing the code that does this was we're relatively straightforward I like it and I think it's cool I like it also I just wanted to ask about alignment are we going to do something about that or are we going to let it be packed I am Not sure that I understand your question so basically a lot of these fixed length formats they tend to align fields to to their own sized such that when you read it say using m map or or from flash memory you don't have to worry about insulin issues when so basically what you do is that you've had things like onions to a slightly larger size just make it easier to use or certain kinds of hardware this is something that's outside of my expertise and so I don't think I'm qualified to comment on it but I'd be happy to to look into this maybe you could open up an issue or something kind of discussing this my initial reflex is that adding things out further decreases or just essentially bloats object sizes and that I have some resistance that initially but also I'm not working on extremely resource constrained devices so I don't have you know this isn't the problem that I'm familiar with all right I'll give it some more thought and then I can take it doing Jenny she certainly not a blocker it's a very nice proposal great thank you anything else related to this really a distillation etc before we left okay thank you the next thing I have in there is test net progress roadmap project management etc McAra brought up propose bringing in the cat herders to potentially help us as we are moving towards more public test nuts I did leave my at least opinion and the current time in github which is there's three things before anyone should be dealing with multi client test nuts one do you have a long-standing client test net of your own I can it withstand itself - is it targeting if it's gonna be speaking to another client is it targeting the same exact version of the spec and three if targeting that version is it passing set of consensus tests and then the asterisks on three is actually that even if you're targeting 105 one right now those consensus tests are very much sandy tests they're very much they passed through a handful of common flows they don't handle very exceptional or interesting cases so even if you're passing oh five one and you're both passing oh five one you're ready to talk to each other cool get ready for some issues because those test vectors are not super robust and we expect to find a number of bugs in the next couple of weeks I'm resist - I know people are very excited I want to have multi-client test nuts I don't want this to be a big an accidental waste of time where we you know a week from now try to get a bunch of clients talking to each other and burn a week or two in this effort because the specs the testing etc are not quite ready as the scaffolding to support this that said we do have some of the cat herders here today and I'm excited have you all and excited hopefully you all can kind of continue to be here and continue to embed in our processes but welcome I'll give you a chance to speak at you and Makara and anyone else wants to speak now well I'm not a cat herder I just asked for any of the interested carers to come to the call just see how they are since they have some learning to do a disfigured vitamin C and again I'm excited to have feel cat herders I know you've begun to do some work on the 100 chained stuff can you just give us a briefing on what your mo is and yells processes we are not actually working on someone it's one stuff I joined a call today to just to understand a requirement for x2 p.m. work over here we are helping mostly with the heartful thinged upcoming Istanbul heartful and would be happy to help if we can do anything about the PM stuff which is required here in multi-client as night stuff so it's just the introductory one and trying to understand the requirement okay so the requirements from my perspective are so and the way I see things progressing at this point are for people to I know there are a number of simulations and private nuts that are being worked on right now private as in a single client and internal not exposed to outside users as these mature over the coming months to two months I do expect clients that are targeting the same version and do have breast implementations to begin to may be communicating one-on-one and being aware beginning to be aware of those processes and kind of figuring out what's going on that well and and figuring out the pain points on these 101 client tests net so maybe will help us help inform us on how best we structure a larger scale of multi client tests net the require I mean ultimately the idea is to have a multi-client test net long long-lived that targets a single specific version that we invite people from the community to participate in I imagine will go through a number of these I've also if you're if you haven't checked out cosmo stood of handful of experiments called game of stakes where they had people join and try to kind of break some of the economic considerations of the tests nets and gamify the test nuts and game fights participation so maybe doing some of that down the line it's also something we're interested in so I think at this point just kind of beginning to maybe have some conversations they may be embedded in the process will allow us to make a a plan over the coming months hey this is late I agree with everything we just said I just wanted to jump in and out one quick thaw which is you know the the catheters was set up as sort of a community resource right so it's a group of about 10 experienced project managers we're very kindly volunteered their time to help out with whatever needs needs help right so I just wanted to say as well but if any team feels that even internally they could use a hand with project management organized tasks or any of that stuff they should feel free to reach out to any of the herders at any time cool yeah absolutely so we have these I guess kind of larger group goals but individually out there thank you I had a question is it meaningful to have a Testament before Lupita Pia I personally want to see with ttv on a Testament I think that you're gonna run into some issues with respect to gossiping large amounts of data especially when you hit a reasonable amount of validators you know there's there's probably a number of processes a number of paths and if people are eager to have things indicate I don't know I lean in the I lean in the direction of getting loopy to be ready before we have multi-client Testaments I'm sure that's debatable yeah I mean after you disagree I think it's really important that we you know weather or whatever use whether it's hobbits or something like that just to like kind of get some float whatever the two multiple nodes together multiple different clients I think it's super important like if Lupita Pisa blocker right now for instance for us it's a huge blocker because the JI side is just not there and we're working on it you know switching to something like hobbits just to get like some clients testing together is like very important because then we can figure out where the issues are and if there are any issues when down the road here any other thoughts comments questions with respect to test nets project management and the general flow over the coming months again my expectation is in terms of like something more orchestrated amongst all clients that were that is not something in the next month or two but that these one-on-one experiments will potentially be valuable and that you should coordinate amongst yourselves this doesn't mean just had a question the PDP is only a blocker for the clients implementing in the languages that don't already have good libraries for it right yes and there's also a daemon available that a couple of clients are beginning to use and so between either getting that the PDP implicative implementation up to stuff or getting kind of the daemon integrated into their flows that's that's the blocker I believe on the NGO side and Russ side things are stable and currently being used internally and then on the Python side we have some bindings that we've put in place embedded and there's also I think all the p2p native implementation being worked on right now J aside there is some work looks like Raul said there's some work being done on the gossip sub side which is kind of this complex complicated component apparently they a dream was telling me it's kind of a beast code up and Java side is there an update is there any native Java implementation right now I know has been working on working on the Java implementation but I don't any progress as may not been a right he actually provided an update so it it sounded like they're able to spit up a basic post or peer and get it to communicate you know with some I guess with some JavaScript examples so I guess he was communicating Java to JavaScript he says that uh he'll provide kind of more of an update I guess at the end of this week which I guess would be today or tomorrow but he says they're pretty close to having a some basic functionality going so I think that um that applies to Artemis and in harmony and um so if the harmony guys know anything else they might be a good would be good to us as well Oh looks like a bellows mic is out but yeah he agrees with the look p2p Java sequel have there been any experimentation with integrating the daemon in Java or y'all bypassing that and just going for the native optimization and the a little bit later in the time horizon yeah we're just gonna go with the native Java implementation we're fairly confident that you know we could do the testing we need with the basic hobbits implementation and then when it's time to you know we'll just establish just kind of like an interface to abstract that away and and when it's time to switch to lid p2p mm-hm it should be fairly easy nothing's ever easy but you [Laughter] learned that every day yeah regarding regarding Lib PGP unrest I just had a quick question so has anyone considered wrapping that in a c c FF i so that way it could be bindings can be created for the rest version yeah i actually kind of supported that you know that methodology because it would be kind of cool you know to have bindings for whatever language wants to use Lupita be not the wait for that native implementation however you know the web 3j guys graciously jumped in and you know said that they were already planning on doing a job on plantation so it kind of removed the necessity for us to do that at least from a Java side but honestly like I think that would be a cool thing going forward just so you mean that would help like I guess some of the other long just thinking of all the scripting languages like Ruby yeah yeah like whatever dude it's like how long it's gonna take them to your native implication but if they can just do some C bindings to the web imitation you know it talked to RO quite a bit and by the way I completely agree with you guys there is experimentation on this ground that has been some previous experimentation as well I know that that peer from Russ the p2p has been also experimenting with combining down to Waddle and running in a browser so different runtime modes and different runtime the program motors coordinates is something that I mean I would personally be very keen to explore with you guys from the embassy in general we also had this question about how to move on with Lea p2p which was first to use the go demon so now that's working and we also have on the side early p2p in pure name implementation that is going on though for testing right now we are using our px and regarding wrapping rust into with a C interface that's something that we ask ourselves a lot of time for first BLS because Zika is done in rust as well and there is no and desai as a see library for BLS well there was a Milagro and stuff but that was the question and there is also the p2p so at one point we fall yeah so how well about having some kind of automatic wrapper for rest library to see so that we can use them in name or directress to name but it's always fruity but still nothing so when I would when I would suggest is if somebody can spearhead this and open an issue and rustler b2b and The Wrestler p2p github and I would get the discussion flowing cool someone do that also one thing that we've been struggling with for the p2p implementation is that regarding the spec basically it's implemented that his suspect right now well we have to follow go potentially Goldbergs [Music] compared to having a proper spec but the p2p team is working on that I'm not sure about the state of the rest implementation we forgot to the go if it's in sync or not yeah so the rust and the go implementations interoperate wealth and in fact we have had past successes in this regard so so that is that is that's complete and then regarding the specs we definitely are aware of this we aim to be aspects first project we have made progress in some critical specs like prit since a long word a few elements that were small warrants in the in the specs have showed up and we try to iron those up and as we go forward we will we will continue building out or Rito actively specking parts of the system to make them to make them available to you guys so that you don't have to always refer to a specific implementation in parallel we're also writing or if you check out dr. Pete Pete Ohio that is already taking form and there sections that are already fluid content this has been done progressively so it's more user facing documentation so to speak but I think that would be useful for for some people in this code as well to get you can't acquaint it and get familiar with some of the concepts and there's one a third track that we are working on is an it's an implemented guide so basically a 1:1 manual for people who are spearheading an implementation of canopy to be to have a single reference about you know from the viewpoint of an implementer what exactly you need to know what are the ongoing discussions for each for each particular element for example multi-stream or tea stream 2.0 what we expect to change in the future where it's happening with cross references to to github issues or requests and so on so that you have kind of like one canonical walkthrough that you can use to thread everything together that's where I mean estate is taking a while because the daily hustle and bustle consumes us in this project but and particularly me but hopefully it would be ready pretty soon and I've been saying this for a few weeks already thank you regarding the p2p Chow option we are still considering as a temporal option making a Java binding or repeatedly daemon this this would work in a case if we would be a broker for us I mean the pure Java implementation of lipid B and this is something that could be crafted in a reasonable amount of time I just want to say agree with held that if it's a temporary solution for the very first course coitus net so let's use call it a demon and that would probably solve a lot of our time in the context of thinking the native implementation box in my opinion okay so it sounds like everyone at least has one or two potential paths forward depending on how native implementations and other things shake out I see I feel like we jump back to the p2p anything else related to the PDP obviously raul is an awesome resource Thank You Raoul for being here again anything else on this before I move on okay general spec discussion I have something so I found I think a bug related to some Genesis stuff the way we're doing it and I think maybe another bug was reported yesterday related to this I over the past week have been leaning back in the direction of moving towards Genesis slot 0 and putting an explicit boundary conditions this became a little bit more appealing to me now that we have testing and now that we have an executable specs so these become a little bit simpler to integrate into the spec so I'm gonna do an exploratory PR to see just the change and complexity for moving back to Genesis slot 0 if we do I'm sure all of you can say told you so so anyway expect at least either a PR on that or an explanation on why I think the PR wasn't worth it in the next couple of days and I see in the chat everyone's very excited that's what I have on the Specht stuff there have been at least the stuff that's going to come out in 206 there are a few decent changes that are like radically simplifying which is super exciting I'm thinking probably in the week week-and-a-half that we will get that out Greg a Suzuki drop you in 64 no anyway sorry you need to sterilize this you got 64 that's all Greg it's all I need from you I know [Laughter] okay cool other just spec related stuff cool I'm generally kind of keeping my head and all of y'all's progress as looking at repos and following conversations it's super exciting to see stuff come together so one thing on the spec is them we might slash probably will split off the full twist rule for phase zero in a separate document and we'll still want to make the focus rule executable yeah yeah and that the idea that there's a lot of reasons to make it executable but we can generate test effect yourself that which is pretty cool in doing that how we would really really appreciate what we talked about a little bit earlier which was basically invariance there are upheld yeah throughout this thing like in our testing we have a pretty short in network setup which is good because we get apart this is important we have a lot of the reorg switch and and then it's fairly expensive to switch switch forks unless you can make some assumptions about things being you know stable in mistakes so it would be very nice to make those kind of demands will literally help yeah I guess ghost is part of that I'm I just made a note stock for these invariants and I'm going to request that people on the research inspect team when they think of them to write them there and then once we compile them we'll get them into the refill nice I can actually uh I'm gonna segment the dock into invariance that we explicitly writing and then the second section is if you think you know in a variant and have a question you can drop it in there and looking for that's fine so I numbers are gonna be meeting in person and Sydney on the 9th and the general topics and I wanted to put these out here in case I've missed something glaringly obvious that we should be getting together is we're gonna have three breakouts in the morning I have to breakouts in the afternoon right now but I'd like to make it three so face two slash walls and slash data execution networking testing like clients and test nets is there anything immediately that comes to mind that I'm missing that it would be worthwhile to select some time for a breakout for and if not if you can't think of saying ran out message me if went for fools that cannot go to kaalia would it be possible to film as yes and we are attempting right now to figure out a good remote participation strategy where these breakouts will have some sort of callin capability still to be determined to beat oh yeah yeah I'm not expecting mass participation but this if we do provide this then we'll obviously be recording these breakouts as well I suppose networking maybe in the morning could be focused on more of the networking protocols and things we need to work through there whereas maybe in the afternoon we could if there's maybe some value and extending that and talking about network aggregation strategies and things like that I know the handle guess we'll be there we'll feel it up okay we're at an hour pretty quick meeting today just general open discussion anything on people's minds things that we need to work through a chat about just want to give us notification you processing it goes over wise it's just constants gotcha I'm writing I'm gonna split that back up into some logical sections well add forked race suit okay anything else guys I guess it's a short meeting cuz everyone has so much  to work on cool thank you everyone good beating productive again super exciting to see all the progress I've people have been kind of I've definitely continued to be a resource like if you run into some weird bugs or like some weird spec stuff like please just hit me up because I can probably save you some time or sometimes I could save some time cool thanks guys I are we in Sydney in two weeks maybe probably meeting in two weeks I'll Yoda thank you take care see a bunch of elves in the group right thanks everybody thank you hey guys thank you [Music] [Music] [Music] [Music] [Music] you [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] you [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] you [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] 