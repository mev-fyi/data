foreign [Music] [Applause] [Music] foreign [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] foreign foreign [Music] foreign [Music] foreign [Music] [Music] foreign thank you foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Applause] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] thank you [Music] [Music] [Music] foreign foreign [Applause] [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] [Music] thank you [Music] [Applause] thank you [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] hello [Music] guys [Music] [Applause] [Music] [Applause] [Music] welcome [Music] [Music] back [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] foreign [Music] [Applause] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Applause] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] okay everyone is still sleeping I think uh but just this is the last day so let's keep the energy up we'll start with um with a panel uh we'll start only with Pavel avilica if I'm pronouncing it correctly um so yeah we'll just start with him and then uh his partner Alex will come as well so we have this for 50 minutes and then you a few speed sessions so hope you enjoy it Paul all yours okay uh good morning everyone uh it's apparently very early for some people but uh um we kind of imagined it to be uh con continuation of the Ethereal magician session uh we had I think on the first day but the focus for for today would be eaps related to evm um so uh yeah this this possibility to take a mic and and describe or pitch for AIP you are interested in and we can discuss and maybe ask questions from the audience um so if anyone wants to start if not I can take like five minutes 10 minutes to to talk about eof that like three five EIP proposals we have uh drafted so far okay so again it's me um so this is a this is a slide for my lightning talk about eof uh but mostly uh what I wanted to to have on the screen is the five five VIPs we have two first are to first uh potentially scheduled for for Shanghai which means the next execution layer upgrade and I defined the kind of the basic of the UF structure so EOS eof stands for evm object format and is and is uh kind of on our idea to structure the the evm programs in the way that the kind of behave more predictable way so that we know where the data is in the program we know the code is and we conversion programs so that also gives us some additional backwards compatibility features um and on top of that we can build additional features and these three additional features are the the next three IPS on the list so firstly um eof allows us to to Define uh instructions and in a bit different way so we can have some immediate values means the op code can be followed by additional numbers that means something to the instruction that will interpret it that will interpret the the uh the values following that wasn't possible before because of their backwards compatibility of existing evm so you can in the current VM you can craft a program that um that will break if you interpret into uh values following up codes in a different way so this static jumps are more efficient that's current ones and also there's also is it easier to analyze from from external tools and also from the code validation in the evm itself and additionally um uh the the next one is eof functions which means we can additionally partition the the evm code into separate separate sections with meaning uh individual native functions in the evm and the additional instructions that allows you to go between these two between these partitions and all combined with the starting jumps and the functions we can get rid of existing Dynamic jumps in the VM which it should improve efficiency and most importantly we can get rid of jump this analysis um so this the job this analysis uh it's a process that has to be performed before we can start even executing evm programs currently and uh it's prop like the the cost of doing that is proportional to the to the to the size of the code and none of the cost of evm execution actually reflects this uh this analysis and and lastly uh we can also put additional uh verification uh in the eof format that will allows you to to check statically before deploying the code if if a function performs stack Overflow or possibly stack underflow and we can reject such programs such programs would be by definition a bit more restrictive than the current ones [Music] so this there are some tricks you can do in current VM that would not be possible anymore but I think most of the compilers that Target CVM doesn't really exploit this uh this exploit this properties so that also brings some additional efficiencies because you can kind of check for correctness in at least in the terms of Stack Behavior during deploy time and you don't have to repeat these checks [Music] right later during execution okay so that's that's all I can say in five minutes about that um so yeah I'm open to answer some questions and also if someone wants to join on stage and talk about some interesting evm stuff uh yeah please welcome and come just bear with me will I just okay okay I have been spending the week trying to better understand the eof and one question I have is um so I understand you know you have different versions of eof that you can implement but you can also add there are there are additions to the to an eof version that can be done without a version bump um can you like walk through what are like the proposals of you know of those fives and maybe others that you have like which one required version bump which one don't and how how would you think about like deploying the whole thing over time uh okay so um so the the first two kind of the basics of eof uh will be introduced with version one and and reminding like three additionals uh will require the the version bump um and um this is kind of the question how many features we want to pack into single version um so like has originally we we kind of wanted to split that and that's what also reason we have like five VIP it's not like single one because people freak out if the EP is big enough so we'll kind of splitted that um into like multiple pieces which also brings some inefficiency in there like in the design all of that because we need to update multiple documents um so just to be clear so like each so like a 35 40 3670 they require obviously you're introducing uof requires if you want but then there's none in the list of like 4200 4750 and uh the last one I can't see but anyways uh yeah okay and then in like the last three yeah uh can be added so you could add all three together and make eof V2 yes exactly you can you can like combine how many features you want it's like up to kind of our yeah what what do you yeah what do you do what you define as a version I mean like multiple versions bring some like like new kind of complexity to the system we don't have so far right so currently when we change something to evm it's mostly time based like to some point evm works this way and from some point it it works differently so um I think all the codes still like have all of the versions historic versions and because people care about executing every instruction from the beginning but you can imagine you can design a client that only kind of has like the recent two or something like that so you can kind of scrap the code that is and like do the the full thing which means doesn't execute the the transactions just collects the state and goes on from that uh I think nobody did so far this way but uh it's possible and like this kof itself will like introduce kind of the new evm that will run next to the Legacy one and they will be able to communicate within the single transaction right so you can have like Legacy contract that calls the new one and the new one called the old one and like nothing breaks on this level but it will have kind of two parallel events and yeah just to follow up so like of the say like the the last three are there any say we were to split that in like two in one or like three hard Forks uh like are there any that don't require a version bump or do they each as long as they're not shipped together all the time require a version bump um I think that the static relative jump doesn't require version bomb at all so um like kind of the forward forward what is that forward backward no the forward compatibility of eof is that you can always drop new instruction into it without version bomb so whatever without instruction can be like whatever of any complexity you can always do that because we make sure the op codes that are undefined currently are not used in the programs so like we can yeah we can drop the static relative jumps uh like without version bump um but I'm kind of I don't know I like my feeling is like it's probably like better to pack as many features I as we have capacity for so we don't have multiple eof versions later right uh what about the backwards compatibility of packing in um new optional eof format sections like if eof functions were separate from the code section and provided data on top of it same with the stack validation information it was it had a separate section number that would go on top of it I mean could those be done in a forward compatible way with it doesn't break things um let me think uh so so far we didn't actually like think about this way but uh maybe that would be the way to to design it in the way we can actually drop this feature later without the version bump uh other functions requires a separate code block right yeah yeah but you can kind of uh so the thing is you can like when you have something commandatory you can make it optional later right so uh because kind of the the previous deployed contracts will all we will have this thing there but if it's optional it's still fine so maybe there's a way to have like single code section with the information that maybe later will enable like more code sections so like single code section contracts from before will still work we'll just have single function there so maybe this way to design it in the like forward compatibility way so we don't have to version bump uh that's I think nice idea I haven't really thought about before would adding a minor version in the eof header be useful to indicate that I'm I require these uh forward compatible changes but I'm compatible with a Backward Compatible interpreter kind of like HDMI 1.1 and 2.1 uh I'm not sure I mean it's like still like system like all the all the contracts have to like do exactly uh like the same things and like this not really like optional think you can perform uh in the sense that all the clients have to behave the same way so I'm not sure like they're actually that having like minor version will make any change make any difference so either it behaves differently or not so if it's like two versions numbers I don't think that makes any difference okay I mean I guess I just thought this could always just packs so like yeah maybe like the functions there's a way to do it I think we will need to like take a look into this and the last one probably not because it just adds additional requirements of the code structure so the previous programs probably will not follow these do I understand correctly that the last tip doesn't require the version bomb because it's just the change on the EDM side so it's uh not e in the bytecode and and you can do it uh whenever you want no that's actually the one the last one actually requires the version bump because it puts additional restriction rules on the code that means we want to make sure like when you load the the evm program from database and you see the version number you know exactly what you can expect from the code so if you like if if some rules are not there at the deploy time it means that the program you load from that era will like have different uh it will have different structure and you can't rely on it anymore yeah I got it thanks so unfortunately I've been just come across the eof but um so I'm guessing um that the intention of these changes is to make it easier to do static analysis on the evm code particularly repeating predecessors to basic blocks which is always a challenge with evm at the moment and doing static translation will become a lot easier um you like you mean like external tools like all of the well that's right I've got sort of three main use cases um so one is stat Statics and a symbolic execution for example um another is translation translated to x86 um um and that another is um uh you know doing static analysis of contracts to see if they're valid um so imagine that all these things are going to help out with that so like I think our main goal about control flow changes is to just get rid of jump this analysis and make it more efficient but we kind of expect to be also like dof programs to be much easier to be analyzed but external tools but I think we just need like actually inputs from you like like you probably should like take a look and see like if it helps or not like how much it helps because that's not really like area of our expertise but yeah we kind of expect it to be much easier to do it analysis externally yes certainly it's the static static jumps will help enormously um but because of the practice has a problem essentially oh no we need to talk about you know distribution of this beautiful so arm has the zero register there's a lot of registered machines out there push zero will also be quite convenient um fuel also has taken the zero register from arm in their virtual machine the ABM currently has the gas counter and the program counter and I think they're registers when registers oh this way uh I thought you'll start talking about pool zero EIP because this one on the list uh so maybe you want to talk about it no okay I have uh so okay like let me start like from the from the back uh there's like one AP that introduces like pool zero instructions I think this is what this kind of analogous to arm and all of that so the it's just to like make sure like people don't use like kind of exotic way of like M size of that to put zero on the stack so we just will delegate one instruction to do exactly this with the same gas cost of the kind of the hacks we currently have and that's also scheduled for Shanghai if you remember right can anyone confirm that okay what I think it is and um so that's one thing I registers in the VM probably never so this like eof stuff looks already complex enough that uh I don't know like what is the time scale we can deploy it or maybe it's it's it will never be deployed on the minute um but the thing is like it has kind of different structure so we kind of design the evm loop interpret a little differently but the instructions they operate on a kind of share between Legacy and new one and I think that's the current current direction we're going with nobody proposed like radical changes I think like radical change would be just to take some other VM like I don't know we try to webassembly maybe the fuel VM and I'd put it somewhere on L2 or whatever what uh I don't expect to see so drastic changes to evm it's kind of the same it's kind of the same of as the question like why do we have 256 bit size words right and we I probably there's also not like a not really option to shorten it to something smaller okay so like any okay one more question hey um so Greg colvin's got his simple subroutines EIP as well could you explain how that is different than these yeah I I would sit down because um I so those some um I'm sure I can I can give a full picture so maybe someone will jump and help me but I can start with that it kind of wanted to introduce this subroutines which are kind of analogous to what our functions are um to existing evm so there are some technical issues like one is about having these immediate values uh in the instruction which are not like fully backwards compatible and secondly um it kind of doesn't really help with this analysis so this was one one because for the simplicity the jumps will still work the same and they can cross the subroutines easily so you can use the new instructions to kind of form kind of the sub codes in the code but jumps will like go whatever they want and it doesn't really help with analysis outside of that and it doesn't really help to do kind of fancy compilation by fancy compilation I mean you can take like subroutine and compile it to like native code or something and then use the the system call stack to to implement subroutine calls but because there is possibility to like jump through over like jump out of the subroutine and go somewhere else that's really that doesn't fit into this model so but I'm not sure that's where the reason that the the chain didn't went through maybe there were some other reasons um yeah I mean he's updated that proposal again since it was last rejected I don't know if you've seen those up yeah yeah I kind of noticed but uh yeah I I'm not sure this is like the I mean the the AP is kind of being updated and I'm I'm I have little trouble to keep track like which version we're talking about right now uh but I know there's some changes but this is like still kind of something we should consider for future upgrades or or not because I'm not sure like if that's candidate for for anything oh yeah hi so I just have one question are there any uh technical barriers for implementing 3074 I'm really bad at numbers can you tell like which VIP it is oh this one I have no idea honestly maybe someone can help okay no you're not helping um no I text I don't know really uh so I think like on the technical level probably not so many I think it's mostly like social level which is problematic or like this like some way you can trick people to do something and there is no way back or uh but I I am not an expert on this one actually so I don't think I can answer this yeah go ahead you get to be a dictator here if you had to dream up in the store too what would it be or say like you're not changing the existing memory you just get to do memory from scratch how would you go about it but you you mentioned a store right or M store like oh yeah just like oh we're doing memory differently here yeah um and that that's that's good question um so like we didn't put anything like any kind of draft but we we have some thought about that and there was some some input from vitalik as well recently about how to kind of model that um I think this like multiple Dimensions you can try to kind of describe it like one is that current memory allows you to just just use whatever index you want you will just pay more gas for it and that looks kind of calculated and so kind of the memory automatically expands to the to the use and uh that's a kind of different way of doing that so you kind of have to explicitly inform the evm up front like okay please allocate moment more memory for me and and if you use something that is outside of the allocation it will just terminate execution right and the second one is this is the model that webassembly uses right so like you there you need to kind of allocate memory up front and you can't use it if it's not allocated and so this is like one way you can select from I think at least solidity was happy with this automatic allocation but I'm I'm not sure I can confirm that is anyone from solidity here okay I mean so it is kind of happy that memory automatically expands to new indexes and you don't have to maintain the like know how much you did allocated or so it would be fine to have the the evm when you have to kind of declare to evm that you need more memory are we good or not okay okay maybe yeah maybe wait for Mark sorry uh yeah so uh no static and statically analyzing the maximum memory size is a challenging problem at the moment and uh you know if there was something in the eof to specify the maximum memory size so probably quite useful so uh okay yeah so if I get it right it would prefer the system when you have to kind of explicitly say how many how much memory you would use or something like that it's not absolutely necessary because in for instance solidity is extremely facile and very easy to analyze but there are okay okay got it yeah so this is one aspect and I kind of we don't have a winner here so far and like from evm implementation I would prefer to somehow lower the the housekeeping of memory so whenever you execute one of the memory instructions like this like M load and store like most of the time evm is spending just to calculating the cost like if it's like new instruction like if the index index is not like absolutely huge or something like that and just like accessing the memories like this is this is nowhere in the on the profile right so uh I think like to to keeping the housekeeping lower uh maybe combining the explicit allocation and do the like cost by memory Pages or something like that would just help but we didn't prototype any of that so far so like kind of rough ideas what you can do quite interesting stuff if you have memory pages and in VM implementation this is a very similar problem to the sbus on the PlayStation 3 for example you you have sort of the minimum emergency 28 bits um so so the evm is extremely similar to the to the spu on the PlayStation and that was a that was interesting challenge as well but okay that means like PlayStation 1 CVM now places a bit quicker definitely I think everything is quicker than NVM right also just declaring all my questions are the lowest like they're the fallback ones anyone can interrupt and take priority um well there's someone beautiful um are there any um Hardware implementation of evm or maybe fpga Asic that you know of and if there is what were their biggest hurdle asides from M store I'm guessing because that's a pain but otherwise I mean async on like memory access level or the storage access level um yeah I'm not sure I can help here but uh I I know like some people try we're trying ex we're experimenting with having like async way of accessing storage oh Asic okay okay uh wow uh so we had a pro we had a project called evm jet which just was compiling evm byte code into let's say x86 like native code and the performance was great but the cost of compiling that was also big so that's kind of the trade-off and at some point we just scrap it it's somewhere around but uh I think you have difficult time to decide like which contract you want to compile to native code if you don't have to I I you might have misunderstood my question sorry uh let me restate it so has there been anyone implementing a physical Hardware machine that executes EV yeah so that's got nothing to do with jet so okay sorry just yeah you get an OP code it decodes it okay okay yeah what I wanted to do okay yeah I kind of wanted to put it in perspective in the sense like that seems at least to my opinion that seems like more advanced because I don't know about this stuff at all that like doing even jet compilation which is already hard it's like compilation is not hard but it's like time consuming so you have to just squeeze this if you if you have Hardware yeah uh I think even if you had a hardware like that the gas costs nowhere reflects like the performance of it right so I'm sure how much you will say you'll save like you're like machine computational time but it would not I think it would not improve the network unless this like like most of the people use it but I don't know if anyone tried that I'll be definitely interesting project to see how it works Greg Colvin has infamously said that the AVM is a gas counting machine that does computation as a side effect do you think there could be any benefits to reducing the Precision or the Fidelity in terms of actually how gradual you're doing your gas accounting and so like paying for more gas things up front or even say like the memory case would be one case where you pay for expansion or the escalation like the curve that it follows isn't actually like a smooth perfectly smooth curve naturally it sort of like has a flat region or like a sort of linear region then it goes like jumps up and then jumps up again uh do you think more things like that could be fine in the long run or do you think we should be really good at counting really small units of gas um I think depends a bit like what kind of instruction subsets you mean I think for memory we should take take a look like yeah how to improve golf Gus housekeeping for these for like like purely computational ones um I think it's not so big deal right now so um the one thing is that the instructions actually do quite a lot because they are like two 56-bit precision so let's like this is not like single CPA instruction you're doing right it's like just like like four plus loading so it's like 20 instructions you do like your your CPU will be doing for the single instruction it depends what distraction it is but uh it's actually quite a lot so you kind of can hide the latency of gas computation there so kind of the CPU is doing the the computation itself and also calculates gas so the overhead of disabled gas calculation it's not I mean if you have really efficient evm implementation it's it can be like seven percent maybe ten percent so this is not like huge amount and the same for the stack checks and all of that but yeah so uh I I don't know what like for evm I would keep it as this I think it's not so bad definitely the simple simple gas tools will have but I wouldn't change like to be some kind of different Precision or whatever uh but we also don't want like complicated gas rules that doesn't bring anything so the memory is unfortunately like another this like example one once more which means you just compute this like 32-bit chunks of memory which like you need to do some additional computation to to calculate the gas cost if that would would be per byte it would be simpler and the effect would be the same right so you don't want to over design it definitely but I think like in general it kind of it's okay so now for most most basic blocks you can calculate the gas cost up front um and just just calculated with the whole basic block and obviously things like s store and so on the variable but um but um for you know for many many basic blocks you can you can as this can I properly tell you you can you can pre-compute it yeah you can do that uh like with one like like comment that it's like for the basic grass ghost some instructions have like basic cost and then like like variabic variatic gas goes depending on the arguments and something like that yeah we did try that like even the VM implementation and it it brings I think some performance but uh I think we kind of scrapped the idea because because you need like additional analysis phase to like she pre-calculate that and you have to and uh so a quick quick like description how it was done in evm1 there was like the old interpreter that was doing this and the analysis cost was really big and we kind of transitioned to like simple design but efficient design of evm which doesn't do that anymore and the new one is actually faster than an old one but to be fair the old one didn't get so much attention recently so maybe there's some like performance you can gain from it but it won't be really big one if you have efficient evm so like Simplicity wins so far at this in like the client client perspective right yes certainly my experience is the evm is a tiny part of the cost of the whole system anyway so which possibly answers the sort of why I don't really have a um an fpga evm which would obviously be trivial to do so maybe some other aips someone wants to talk about 1153 Otherwise Known t-store T load uh one by let's see years ago do you have any thoughts on that and it's specifically to the memory problem would that reduce some of these pressures on reforming memory because you know you've got this transient storage it's not hitting disk it's pretty cheap how do you feel about 1153 so um I'm not sure if I'm on the same page with this one but does it like have the same kind of like map map structure that this storage has right so uh yeah like for me the the issue is that you have this like map structure there so it's like it's like this is like chunk of memory you actually have like hash map or like whatever the implementation is because as I remember it was like doing the same you have like unlimited number of 256 bit slots you can assign to so the the evm has to kind of have a map of that which it can scrap at the end of the transaction right if yeah but yeah yeah but you can't really simulate that with memory right so it would rather affect storage right super cheap and it's it's kind of like memory and sensitive yeah yeah what I meant just like it's not going to affect your memory usage right it's going to affect your storage usage and then getting rid of that and clients have to deal with that yeah sorry but yeah um do you want it in Shanghai it's like me personally I I don't know it's like I'm kind of kind of been affected by that um so like how how actually I Vision a VM is like this kind of below that so I kind of mostly focus on that like single call so that this Transit storage it's it's like problematic in the way that I have to kind of Outsource it somewhere else so like the client of like client has to provide some way some API to actually access it because like for for my VM at least it's that I just start the AVM context on the when you enter the call and I end it there so I don't have anything that lasts above that so but yeah I'm kind of transitioning to like this the transaction level evm execution um I think like the the ultimate question is like usability of that and like if there's like strong enough number of use cases that will just make it uh like desired right and I think that some people really push hard for it um I have a follow-up question on that do you think the the cost of a TS office they want to okay anyway yeah go ahead do you think the cost of all the potential cost of it Tea Store would be that much lower than the Astor I mean the basic one is kind of like 100 right for the currently for the extra like the minimum we can get if this is like accessed slot and something I don't know yeah maybe what are the numbers in the principles like the number is sure but like do you think like in the machine would it really be that different like from my perspective it's not any different to access a store uh because I'm kind of have a buffer of like this cache of this s store and I'd like for like Yeah from like the like the Corey VM site it's not much different uh but I think it's like so the difference is when you have to actually go to the database on disk or not and like this is guaranteed not to be the case so right but so you don't have to do any database lookup at all so so yeah probably should be cheaper but I know how much yeah do you think another alternative solution would be to just fix the pricing of a store I think historically we did fix the pricing of Esther in every heart for crying if you see the like asteroid implementation that's like like this is multiple lines of like different revisions of evm so I don't know maybe we can't get it right so we need we need a replacement for it yeah uh I don't know how to fix it like more uh it's already super complicated so it doesn't maybe that's an argument Pro um well I yeah I can't be sure I mean I would be sure if like there was a group that actually tried to fix the store so it's it's competitive feature than the the transit storage but I think this not such group so far so maybe we just have to pick one option off of one so I don't know foreign still like 10 minutes but uh any more questions no what else how much easier would life be if the evm was 64-bit or does it not really make much of a difference to your work um maybe my colleagues can help me with that we did experiment with flip assembly and uh for some use case that evm is used for it's it really helps when it's this this this big word size so all these like balance calculations all of this like fixed Point are automatic it's really hard if you so if you need to emulate like bigger numbers in the smaller like this like more like smaller like 64-bit word size it's just it's really horrible and when when you have like simple design like interpreter and stuff so you need like to drop a lot of instructions to emulate that and it was really bad on some more clothes so I I we can't confirm it's like the based the the best word size but for some use case it really helps any follow-up questions everyone just still sleepy okay yes they were I guess uh well thank you for this thank you [Applause] go there so we will follow up with uh with Leo alt um from ethereum Foundation uh he will be talking about building an end-to-end evm symbolic I'm sorry I'm from marketing I'm the one that actually sells these things so if I say something that is technically not correct please bear with me um but yeah building an end-to-end AVM symbolic execution and she delivered from decision Foundation um I will give him this [Music] don't know [Music] yeah okay we'll be starting at 11 to 10 minutes [Music] [Applause] [Music] [Applause] foreign [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Music] [Applause] [Music] foreign [Music] oh my God [Applause] [Music] foreign foreign [Music] foreign [Music] foreign [Music] [Applause] [Music] foreign [Music] [Music] thank you [Music] [Music] [Music] [Music] thank you [Music] thank you [Music] foreign [Applause] [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] end-to-end AVM symbolic execution engine in solidity so Leo can you yeah no um yeah so this came out of like a fun project um I wanted to write like a full like an end-to-end um symbolic execution engine in solidity with including the the solver that we usually use in the in the background and this is actually pretty fun so I want to share with you what this does um so a few questions for like audience adjustment who yes who here was at Harry's talk yesterday about symbolic computation in your okay who knows what symbolic execution is okay nice I am prepared to tell you what it is though for the ones who don't know so I'm quickly going to go over some slides and then we're going to move to code so this word or these expressions are thrown around a lot like what symbol execution what's constraints what's sm2 solver what's all that stuff and a lot of people know what it is but if you don't know what it is they kind of like you feel left out and these words are used very um trivially even though they're not really they're simple but not trivial um so first I want to tell you what's not symbolic execution and that's concrete execution so let's say you have oh yeah last question who can read assembly like this nice okay that's very good so let's say we have this assembly here from evm and we want to run the concrete execution over it so let's say we have this call data it's 12 in hacks I don't know what that is and what is that in decimal like 20 no 18 yeah it makes sense so if you run this program without call data what do we get um what's like there's no return here is let's just consider the top of the stack as sort of a return um in this case we get a 12 we're going to push zero um and the stock would call data load that position we got the 12 push three multiply that's going to give us 36 in HEX we add one so we got this number on top of the stack right so this concrete execution you have a program you have a concrete input and then you execute the program that input you get an output so now what is symbolic location we just said what's not so t11 actually has a pretty good explanation of what it is so it turns the program into math and then solves math formulas that's actually a very precise although very vague um description of what it does so um we have the same program here but now instead of a concrete called Data we're going to have a symbolic called Data what does that mean to be symbolic is that you just use a variable instead of concrete number that's really all you do you look you keep looking at variables so our entire call data is going to be CD now it's just a variable and the top of our stack is going to be a variable called top that's all we're doing and so here we're going to collect constraints which are things that must be true when we run the program so when we run call data load of zero we're basically doing CD of zero right and then we can also call it X we can call it Z we can call it whatever it's just a symbol and it happens that that thing must be greater or equal to zero because we're trading we're dealing with evm words and they're unsigned right the second part is that we are assigning that to X we just make a variable out of out of that when we do the call data load next thing we have this multiplication we can make another variable for it called Y which is now x times three finally for this ad we can make another variable for it called top and then which we just did the previous top of the stack which is y plus one um so you see that for every operation we add a new variable we add a new symbol that represents that expression and we collect all these Expressions so we end up with what we call these constraints and this is what is our symbolic encoding so we take the program in evm bytecode and assembly here we transform it into a set of constraints and that's our symbolic encoding they're different there are many many different ways to write these constraints from a program which means we have different ways to symbolically encode your program why do we want to do this so we obviously walking code is going to turn into a system of linear inequalities so this was our set of constraints that's going to turn into the system of linear inequalities there are equalities here but they can be very quickly translated into inequalities um so we just keep them as a college for Simplicity and why do we do this the reason why we do this because we know how to solve these things with algorithms that you might have seen in high school or University or you still will see it when you finish High School um and what can we do with it we can for example do the same thing we did before we can give a concrete call data in this case the same call data as we we had before and run it symbolically what does that mean we're gonna in this case a simple substitution does it we can substitute CD by this entire call data which then substitute CD of 0 by 12 and so on and we get that the top is going to be this number when we solve that with gal Jordan elimination or Gauss elimination or there's tons of ways of solving it a simple substitution here will do it not only gives us the value for top it gives us values for every single variable in the system but we could have read it that before with the concrete execution so the cool things we can do with this we can ask many many things so you can ask for example can top be greater than 10 000. um how do we ask that we simply add a constraint that represents that statement in this language so can top be greater than 10 000 basically gives us this constraint here and then oh yeah I was actually going to ask you but here's the answer it is possible in which case such a solver such a math solver will tell us that this system is satisfiable meaning that there is evaluation for every single variable in the system that makes this the the the set of constraints satisfiable it is possible that all the constraints are true at the same time and it also gives us what we call a model which is the actual values that make the whole the whole set of constraints valid and similarity before we have a value for top and we also have values for every single variable that appears in the in the system we can also ask and type b0 what do you think so we can represent it for this constraints pretty simple um anyone sorry uh by the way where all these variables are on the integers there's no reals or rationals here everything's integers cannot sorry Kurt in this case the silver says the system is unsatisfiable it's inconsistent there's there's no way all these constraints can be true at the same time they may be true in separation but they will never be true at the same time so what we want to do is basically do exactly that in solidity um so but what exactly do we want to do you can do several things you can try to prove that a certain assertion is true you can prove that a certain thing always happens or never happens kind of things for our use case we're going to try to find unreachable branches so here's a piece of solidity we're going to analyze the VM byte code but this is just to show an example so I have this functional X and integer X and first we require that X has to be last or equal 10. um then we have the branches as if x slash or equal 50 does something and then the rest does return is false so this Branch here basically the false branch of the if it's unreachable right because um X we know that X is less or equal 10 from the beginning of the function which means it's always less or equal 50. meaning that it will always enter the if and it will never come to this part of the of the code and well basically this if you take the true Branch this is reachable because these constraints are available together but these are not right so if x has to be less or equal 10 it cannot be greater than 50. so this branch is unreachable we can remove the whole thing well not the whole thing just the the bottom um the cool thing about trying to do that stuff is that we need very little support um from the evm of course if you want to write if you want to write a symbolic execution engineer to write an interpreter in the first place right you need an NVM interpreter but we don't want to deal with every object because it gets really big really complicated and we don't want to do things like call create and storage and all this complicated stuff which of course you could and a lot of tools do that we don't want to do that in solidity um the cool thing again about this encoding we we only have to care about the stack operations control flow so it jumps and um opcodes that stop the execution and relation upgrades and so basically we're going to Care mostly about as you saw before ifs with relation operators inside so less than greater than and the negation of these so that you can get less than or equal and greater than or equal the symbolic encoding we're going to use is also pretty simple so for every evm expression that we saw before we're going to transform it into math constraint of the form a minus B less or equal K where A and B are going to be variables and K is going to be a constant so this is also what Harry was talking about yesterday in in his talk and we get things like like this for example um so whoever was in Harris logic together is this system satisfiable why not nice exactly so if you perfect that was um yeah so if you sum everything on both sides then you get basically zero last Oracle minus two which is a contradiction so this system is impossible to be satisfiable um the reason why we like this encoding is because we can use a difference logic solver and again it's hard to explain yesterday a difference logic solver is very simple to write what does it do it basically takes these constraints these math constraints and it tells you whether it's possible or not that these things are satisfiable at the same time and if it is possible it's going to give you values for the variables that make it satisfiable otherwise it just says it's not possible at all for these things to be satisfiable together um the solver is much simpler than the things you need like ILP or smt when you need to solve with linear combinations or even non-linear expressions and the sorts of things that you end up with when you start encoding arithmetic expressions and other things and as also Howard explained yesterday this runs in employ normal time on the graph generated from the constraints using the volume four graph algorithm not going to go much into that if you want to learn more about that please re-watch um Harris talk and this algorithm is super simple this is basically almost the whole thing and most of it is comments um so now all we need to do is put it all together let me see um yeah it's going to be hard at the same time um Okay so can you read this yeah okay so what we want to do first so this is the whole project um so these are two tests files one for the solver itself just like unit test for the solver and one for the symbol execution engine and then you have all those files for the um for the whole engine so what we want to do is like write an interpreter how do we write The Interpreter we need so by the way please if you have questions just like try to you can ask questions right now just to make sure we we're going um in a good flow um actually it's not here maybe here yeah so usually when you write this interpreter for evm you have this context what is the context you have the code that are executing you have the program counter like what which upgrade are you executing right now we have a stack in our case it's going to be a symbolic stack um don't worry about that now we have a path which basically it's a it's a path of all the program like of the program counters that were visited in the in the jumps and we're going to use this to detect loops and exit because we don't want to encode loops we have an array of constraints this is what I showed before like when you see the require it says require act less or equal 10 we go into that Branch so we keep that constraint because that thing needs to be true for the rest of the execution um and this counter variable is just a counter to help create new variables so when we were creating new variables for the Expressions X Y and Z and so on here are going to be expression one expression two expression three and so on and they need to be different in the branches that we execute so that's it we have the context um ignore the rest for now let's jump right into the execution engine so we have this recursive function called run from which takes our context so so here you see it's basically gonna Traverse all the up codes select the opcode this is just a check that we just exit earlier in Loops we it becomes an under proximation but we don't want to do loops we extend the path with the Disney op code and here is the part that the first part of the what I mentioned with The Interpreter we need to care about Stack Up codes because they're going to add some numbers and a bunch of different things jump locations jump destinations that we will need when when building our constraints so this just does the usual stock handling so if it's a swap you're gonna go into the stack and swap the numbers if it's a dupe you're going to duplicate whatever it needs to duplicate it if it's a push you just push that number into the stack [Music] um here the only thing we do is apply a function on the stack arguments which is so for example if you have an ad we're not going to encode the ad precisely here but we do need to consume the stack slots and put a new return value there right so this basically just uses these handlers we have internally it's like a bunch of function pointers um to if you have an ad so this is generic for like all the all the up girls we don't care about it takes the number of arguments this op code takes pops all of them from the stack creates a new work what we call symbolic variable so like a new expression 13 or whatever here and puts that expression on the stack um and we don't really have we don't really care what it looks um what it looks like right now we don't really care what kind of constraints we have over it and here's a part of the that we actually care about the where we do the check so if we have a jump every time we see a conditional jump we take the the argument of that jump we take the condition that makes it jump and we ask the solver is it possible that we can't jump to that location because it saw before we had this this required an if right so we have require access or uh X less than or equal to 10. so we have that saved X must be less or equal to 10 and then we see if x greater than 50 and then we ask is it possible though that is that X is greater than 50. so at this point that's when we um we have all the math things encoded already in here as you'll see this make symbol this is like internal helpers not really important right now so here's what we do the check so we check if the op code is relational so if you have a less than or greater than or if it's an e0 because if if you need to do greater or equal we don't have greater or equal in the VM so we need to do is zero um less than right so and similarly for um less than or equal so if it's one of these we basically take the the condition which is here we transform it into an DL expression difference logic expression um and basically call this over so we have this check here which will take all the constraints and we'll call this little DL solver that I mentioned um which and this is the check we call this over and if the server says unsucked then we say this branch is unreachable why on Sat because if the branches if the branch conditions are unsatisfiable together it means that um the solver will say unsatisfiable right and this means that that part is not reachable because there's something in in the middle that is not allowing that will not make the code the code the code path is basically going to be inconsistent um and what the silver looks like is where am I here yeah this is the entire solver so you take the constraints so here just build the graph so this is built in the graph you just need to know how many variables you have um this is still building the graph and then Here We Run The the single the single Source where this path algorithm which is the first part of the solver which is basically yeah it's a very basic graph algorithm then we did a negative cycle detection and that's really all the solver does this is and 20 lines of code it's really simple and um yeah it's a it's a logic that I really like because it can do a lot of things while being very very simple the last thing that I want to show is how to use this so here I have this contract unreachable that has a bunch of functions and that is like some unreachable branches in each of these functions all we need to do to test that is really just this we call the same run function from the library from the symbolic symbolic execution Library with the runtime code from the contract that's really all and here's a simpler thing just like manually just a simple test with somebody code that I know what it does and if you run this oh oh yeah I removed the comment here somewhere yeah wait yeah so here you'll see that um this is the complicated case with all the solidity high level functions and it's not the best way to report the things but it reports it emits an event that says unreachable Branch with the pc255 I don't really know why it's repeated maybe there's a bug but um it's gonna do for now um yeah so the last thing that I want to show is this tiny example so it's this is the same as I showed in solidity just like in written quickly in yule and this is the bytecode that it generates um well that I wrote manually and um so we can quickly compute This Together keeping track of the stack and then you'll see what it what it actually does in execution so push zero we're going to push zero then we just called it a load of zero it's going to give us some X then we push 10. we duplicate the X we do less than so this is going to turn into this this is the stack by the way and the top is the higher position so now we push tag 0b and we do the like a conditional jump where the false Branch stops so we don't care about the first Branch all we do is just so we're going to pop um we're gonna pop this first two arguments right because of the jump but because we go into a branch this condition must be true for the rest of execution right so X lesson 10 will stay in our um set of constraints so we keep going in tag one jump Dash dupe we duplicate X again we push 50. um we do an LT now and which consumes the ax and this becomes top of the stack just a symbolic expression like y equals excellent less than uh fifth lesson X um we push 14 and then we jump two and then at this point when we see the jump we're going to ask the solver is it possible that this new condition 50 as an X is consistent with what we already have access in 10 and it's always going to say that's not possible and at this point here precisely at this jump I that's where we basically stop and say this Branch here is is the true Branch like where you're jumping next is um unsatisfiable so you can actually remove that entire Branch right [Music] um but yeah so there's a lot of code behind that there's a lot of helpers the main intuition was basically this algorithm of just like run an interpreter carrying about a few kills not caring about other up codes and yeah I'm happy to take questions [Applause] uh super cool talk this is wild you can do this in solidity I'm wondering about overflow though uh because your researching at the beginning was that that one example you showed was impossible but it is very possible in the presence of overflow no that one wasn't because you need the answer to be minus one-third so it's not going to be possible um okay sure yeah but it doesn't look like you handle overflow anymore yeah no right yeah exactly so that means that your results are not correct yeah exactly there's a bunch of soundness stuff you have to add to this okay all right thank you uh sorry I didn't see but see but is this code somewhere available to um yeah it's on my GitHub if you could change the channel back I can move the slides yeah it's over here yeah this repo github.com that thing and there's probably bugs in there though so feel free to fix them um so since you wrote this in solidity I do you have any thoughts on why you would want this to be executed on chain not at all okay should not run this on chain yeah well actually so if I wait let me quickly just look how much gas this takes for this tiny program just one more question because we have to move forward sorry about that you said that for a given program there's a lot of different encodings you could have can you give a few other ideas of Auto encodings and what would be the trade-offs yeah so this encoding uses um this encoding basically chooses we chose a difference logic because the solver is very simple so we could write in solidity right so the link coding is tailored to become systems of inequalities that look like the constraints that a DL server would take but where is it now [Music] um in Harry's talk actually which I have here there are different so if you wanna if you actually want to encode add mold div all these kind of things you will need more complicated constraints like linear combinations where is it Harry yeah you'll need linear combinations like this for example and more complicated constraints and you'll need like a Simplex or integer linear programming thing or even in no linear and silver defending and these things are a lot more complicated so Simplex is well it's it's an exponential algorithm that kinda happens to run mostly in polynomial time these days um but in the linear nonlinear if you're trying to solve nonlinear constraints that's an undecithable problem and you're going to have a hard time solving it so okay thank you so yeah let's just go ahead we will continue with on the feature of web free Paving the way we chase out um two minutes [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] well go ahead if you you this this is your mic there you go so we start with the with the first of the lightning talks um will introduce us on the feature of web free hello yeah hello everybody my name is Chicho I'm the founder of Easter storage today we're going to present our talk on the future of Lottery Paving the way to the fully Android and fully decentral as well so what is the current status of the central as well so we have a decentralized access protocol like ipfs and we also have a mature P2P Network layer and which we are able to retrieve the data and we also have the incentivized storage layer that helps to keep the data consistency however there are still great limitation of current uh decentralized Storage Solutions first those storage solution has a great limits on the semantics in many Workforce static files which means that it's very inefficient to update and delete those existing files even just a single bias that is changed and further there's no way to compose this data in a centralized a decentralized way so sometimes we have to rely on centralized server second is that all these projects they have their ecosystem which means that users has to use their wallets tokens and addresses in order to be able to upload those files to their systems oops oops it's not working uh oops so um so with these problems we are projecting what the features that we need in the future about three first we need a Rich Storage semantics in a decentralized storage which can support great update deletes blobs for very large large amount potentially petabytes further it can be programmable by smart conscious so that can easily compose us data with the logic on of the smart contract running on ethereum and second is that we want to simplify the user or body which means that the user just using the user wallet pay ethereum and is able to upload and basically store a large amount of data on top of the who is your network and lastly we need to have a nil access port code that is able to render those Dynamic data from uh front end to the blockchain and storage without any centralized identity so what's the solution um thanks to the latest development of the ethernet Technologies we believe that we are now at a position that we can achieve these goals in the near future first of all we have data availability disability thanks to Thanksgiving which greatly increased the data upload speed using Advanced cryptography Primitives and second is that we are able to build external data retention Network so that we only store corresponding metadata on ethereum and be able to store large amount of data in this layer 2 Network and we just periodically submit the proof of storage into the ethernet so it tells that everybody can check the actual data the latest data is keep in the network with high replication and lastly we also developed a website access protocol which is able to decentralizedly access those web objects caused by smart contracts so this is a website access protocol which is defined by erc4804 which is a way to render rapid objects hosted by smart Contra is very similar to http so that you can inherit all the good benefits of HTTP while we are able to identify a resource that hosts by smart culture and further access the underlying storage layer that we built and the user storage is a layer 2 solutions that aims to scale ethereum storage rather than computation and so here is a quick comparison of what is storage can do versus biocoin already and the default storage solutions of ethereum and with this infrastructure we believe that we are able to enable a lot of new applications for example just the website hosting like uni swap curve or dynamic nft which we are able to change the presentation of image dynamically and we'll also be able to build decentralized social networks such as essential Twitter Media or even decentralized Dropbox so here I will give a demo um let me see okay this is my Firefox browser that supports the 3vml so now let's have a battery URL uh that we register a UNS standpoint channel uh the smart contract that holds our front end so all the images HTML CSS JavaScript now hosting by the smart contract returned by this website access protocol so there are also a couple of interesting examples for example decisions Dropbox so this is also a whole digital return on a smart contract another small culture and we can see I can see them all the list like all the print files have been uploaded before and in order to upload a new file what I should do is just check the file and then it will ask me to sign a transaction via metamask so during the whole procedure you don't need to require any additional tube such as CLI and once the transaction is confirmed the network I can access the file also via web3 access particle um has been uploaded so we are able to access so still Gateway but we can still using website access protocol and of course bonding balance is also updated according to it thanks to Smart contract so this is the example for this centralized Dropbox there are also a couple of other examples like web streaming deception blog Dynamic nft Etc so welcome to play this is my Firefox browser the simple device yeah um so there are a lot of more details of our technology that are built so we have after party in this afternoon and in nearby Hilton Hotel and 350 Camp um I'm happy to answer any questions sure yes you you listed four you've made comparison with four systems but you forgot to mention swarm yeah actually I talked to Swan people a few days ago um so Swan actually has a similar architecture as ffs which is using uh content addressing to uh basically a locating a file and also it has a way to basically call Dynamic hash to able to locate the latest version of file but at the same time right now I don't think it has the programmability with the Smart Launcher which is able to modify and able to compose all the data purely on chain and there's something we really want to enable and second is that or who the design is using easier so basically the data providers will be paid by the user and also the users will pay the user to storage those content so it's a highly coupled with the ethereum with the basically native support yeah thank you very much because we don't have more time for any more further questions but if you want you can go to the the side of it so yeah thank you very much [Applause] okay so we will continue with oh Millions who will talk about how to stay up to say with the different movements of the web because you will have 10 minutes there you go let's [Applause] is it working okay it is uh so let's wait for the slides okay let's start uh so hi everyone my name is milosh and this is my friend cookie uh we are both part of pretty to seven uh that's an r d Collective and our goal is to stay up to date with web3 Technologies So today we're going to talk about that and to go there we can start with the challenges that we ran into during the last couple of years while researching and building in web tree um just a second okay so the first one um many times we would go deep into specific ecosystems so that we would miss all the innovations that would happen in the other ecosystems secondly even though when we would like to enter new ecosystems we didn't know where to start we didn't know what is the current state of the tech or there or where to watch where to find useful informations and finally um somewhat different situation is when we would go deep into specific technology we would research it build trying to build something with it and then we would realize it's too early for it it's too early for its adoption and we would move to something else however in the meantime the initial technology would experience some changes and it would become somewhat revolutionary but we weren't watching at it anymore and we would miss the opportunity to innovate and to utilize the fact that they were over there before it was popular together I'll just add one more thing that you can go on the link on the Twitter you can check over there the current Alpha version and in two weeks we're gonna come up with a new one yes thanks so much if we have time for questions yes okay I don't pick them no it's just he's nearer so I'm sorry how often you plan to update it is it a quarterly released yes because we want to be thorough with each one we want to really assess each technology we want to do it quarterly that's the general idea really just really great app You're Building here Dapper I'm curious how do you how do you measure what is valuable on how do you measure that value and what is gets closer to this another Circle so we measure like how how well adopted it is like if you think about stuff oh we have a huge team of developers inside our team so we see out their experience it's our subjective opinion but that's why we want the community to come in and a challenge those opinions and to see like really okay if we all band together okay let's really see what is good there and what's something that we might want to skip we're still on schedule so we have time for more questions okay so we'll go there any more questions no I'd like to have that kind of certainties in lives but okay well thank you very much for your talk it's amazing app thank you thank you guys and we have like four minutes till the next talk so you have time to go get some snacks and stuff yes [Music] [Music] thank you [Music] [Music] thank you foreign [Music] [Applause] [Music] [Applause] [Music] foreign [Music] foreign [Music] that's all I get to do you know it's just like [Music] foreign thanks for coming my name is Vincent I'm going to talk about standardized subgraphs today or how we can make it so much easier for you to build your adapts oops okay if you ever built a dab or have ever considered building a Dev one of the first questions that comes to mind is probably where do you find the data and let me show you an example that component Finance has been working on so they're trying to build this uh predicted model uh to for people to look at different assets like if in this case and how the yield will be in the future and in order to do that they need a lot of historical data historical data on interest rate on total deposit from different lending protocols across different Networks and this is a small example to illustrate where you might go to find all these data today as you can see there are many different data sources that you need to hit to depending on which lending protocol you you want to pull data from if you're lucky there's a subgraph that you can already use that has all that data if not you might have to like work with Json RPC API and kind of transform and aggregate all of that data yourself and for each of that data you probably also need a data adapter to normalize so that your application can use it so the point I wanted to make here is that web3 data space is very fragmented uh there are dozens and dozens of different data source that focus on different parts uh of data or different kind of data if you're working with raw data it takes a lot of effort to aggregate transform them into something that you can use for example TBR Revenue those all require a lot of work uh historical data is often difficult to find you probably need an archive node and those are often difficult to access so this is actually a problem that mazari has run into when we first got into the unchain space where a big data provider we're trying to get a lot of data and it was difficult for us to find those so we decided to collaborate with the graph to work on standardizing subgraphs so that we solve this problem for everyone in the space um sorry okay specifically the way that we we standardize these subgraphs is that we would look at all of the protocols in a specific category say lending protocols and we pick out all of the commonalities and differences among these protocols and see and come up with the unified data model that would apply to all of these and then we transformed that into a common uh subgraph schema in which we built all of our subgraphs against so for each of the lending protocols we integrate we use that standardized schema so that you can use the same query you can use the same data adapter to fetch all of that data and now instead of going to all of these different data sources to fetch that that data you just need to hit one single decentralized data source that's the graph and you'll be able to find all of the data you need including the historical ones so uh here's an example uh product or here's actually a product that mazari has built on top of all of the standardized subgraph that we have built as you can see here we're showing there's a lot more metrics that we're showing uh that we are we have integrated is it's not in this in this slide but you can check it out using the URL there so to give you a sense of where we are today on on the subgraph standardization work we have index data from 60 different protocols across 20 different networks surfacing over 500 unique metrics across all of the different protocol types and we have indexed over a billion data points that you can use in your Dev directly so that you don't have to do that work and the way that we are seeing kind of how the future will evolve is that today you're spending a lot of effort on kind of the data Plumbing on the data aggregation part and very little uh on the application logic but with the subgraph that we have built um you know it's already done for you you can just use that so you can focus more on your application logic as adaptive developer um yeah so all of the work we do is uh open source it's public uh here's the GitHub repo for all of our standardized subgraphs if you're a Dap Builder or data scientist data analyst we highly encourage you to check out our data uh see you know how you can use them and provide us with feedback if you work with a protocol team uh where are we're more than happy to integrate your protocol uh into our standard so feel free to reach out to me after the talk and if you're a subgraph developer or a Ras developer that's uh that interested in in this data space uh feel free to scan that QR code there that will take you to our careers page and we are always hiring so yeah this is my talk and thank you for coming yeah one minute for one question if anyone has one question yes go ahead sorry [Music] is aggregated subgraph is more is there assumptions of trust when you use the aggregated as a graph compared to this I have a sub graphical compound sub graph yeah so uh all of our subgraph source code is uh open source uh There Was You know the GitHub repo we showed so we we uh describe all of the methodology of our kind of you know the computation for for Matrix in detail in the repo and of course you can go into the the source code to look at exactly how different numbers are integrated and the graph is also working on uh something called verifiable queries that will put that trust into the data that it indexes what's the approximate delay before the data is available I mean if we want to do something real time it's in real time yeah so it's block by block okay but on the order there's got to be some dollars like 15 seconds to like two minutes okay depending on the Chain perfect thank you thanks Vincent uh thank you very much [Applause] [Music] okay our next lightning truck uh will be with Evan Sopo about a headline a contract API an arrow API library for GBM so go ahead [Music] [Music] hello I'm Evan Salpa independent software developer I've been working on this Java Library for ABI and uh yeah here's the URL um it's called headlong so um it's just an encoding Library it uh it doesn't do anything else really it's just hyper focused it's used by Dune Unstoppable domains um so I figured that uh I wanted to make a general Solution that's like low level high performance that people can just build stuff on so um here's some just rough benchmarks for my laptop um it can do like partial decoding of uh call data for ABI so that's like the measured nanoseconds over there so it works with bytes instead of strings so it's a lot faster than uh some other tools so yeah just very few dependencies supposed to be lightweight um and this is just sort of uh the general design philosophy around it and um let's see and yeah Java so it is compatible with Android and kotlin and um it's like if you're using it on like a web server using decoding large amounts of data this is useful for something like that the other type of user I have is um like people are trying to work with like an array of structs inside a struct and like other tools aren't working for them so uh like mine can decode any arbitrary function signature or data that matches any function signature um let's see so here's the API for like the rlp stuff this is um different because uses an iterator pattern and it decodes on demand instead of uh eagerly and then yeah all these objects just sort of point at uh at a byte buffer and uh you can decode directly from the byte buffer on demand and so it saves some time there and then here's like the ABI stuff so all the objects are meant to be reused many times like the function object and they're stateless so you can share them across threads or between code um here's some decoding it also deals with Json so you can like parse Json and create a function from Json it also does event decoding it was added recently um so just here's some details on you know how I got the performance benefits from you know using byte buffer and pre-calculating things and holding on to them for like multiple encodings and decodings um yeah and there's some denial of service protection for if you're decoding like untrusted data that wants to allocate like a huge array it'll throw an exception instead of like allocating a gigabyte of uh memory and um it's just some implementation details we could probably skip that [Music] um and yeah future work might involve um doing like more partial decodes like querying like nested tuples so like going to a specific index and then if that's a tuple go ahead and index and that and just pick out the thing you want to decode and just ignore everything else um but it requires like jumping around um the index and stuff and then yeah I've been talking to some people recently about a possible ABI V3 so um like I wrote a command line interface that can encode arguments as rlp and uses a lot less uh bytes because you don't have an offset and all this zero padding and stuff like that so and then you can try that out if you want headlong CLI is like the command line interface and uh see what else yeah faster simpler software Legos I kind of just want people to uh you know be able to build um modular stuff just so that you're not like weighted down by all these dependencies and like complex Frameworks where you have to read all this documentation and um just build something to last um and then special thanks to Victor dylapine because uh he added some code that now I can decode events with headlong and thanks any questions or if you have any questions do you have any plans for SSD support uh not right now I thought about maybe implementing something separate for SSD but uh I don't know if I'm gonna so maybe anything else [Music] can you go back one side I think it's uh uh no I don't know it won't let you go back okay no what does the good use cases for this Library I'll do an analytics uh start using it for like ingesting large amounts of data so they can put it into databases and like query it so like if you have a lot of historical data lying around do you want to decode like huge amounts of it and gain insights from data and stuff otherwise it's just designed to work in every possible case nested arrays nested tuples tubular arrays drugs and stuff okay any other questions oh and there's no code generation so it's all just very uh traditional that way okay uh anymore [Applause] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] foreign [Music] and during the last two years I've been contributing to the Sunderland uh so foreign engineer in the platform team and today I'm going to talk about using ipvs to create the metaverse so let's first talk about what the meters is and well it's a social network where you interact with friends people that you meet there in a three-dimensional way and also there you have a digital identity which is customers custom is custom for you and it's your the way that people recognize is you um what distinguished the central from other metaverses is that the users are the ones who owns the platform right so how do we do that well the world is divided into parcels and each parcel has an owner and is the owner who decides what to show on on the world they could chose to set up anything for example for a casino for a bar or even a music festival and how we do that we have deployed um Contracting in ethereum to check the ownership of those lands on the worlds and to check the ownership we use the graph in the back-end services so we have the the contract for lands which where you can own a Land and then let others have permissions to deploy some scene on the world we also have nft collections as well where the wearables creators can mint a collection and then sell them in the marketplace uh and then you as a user you can choose those wearables buy them and then set up your your avatar and that's where we store them in the user's profiles and we you can also have a name in the Sandra and that's like the identity that you own right so um what happened with that there are a lot of files and it's a it's too many assets to store scenes and free models and well some pictures so we need to store them in in somewhere and we have to do that the centralized right so what we have are the centralized servers which store all the data that the client needs to to run right um the community owns the the servers which means that there is a the decent run Dio which is the responsible of approving the list of servers that that are in the Dao so they they have to synchronize between them because we have all the content replicated on each of them so the client can connect to any of them and we'll get the same information right um the way we do that is every every server which we name catalyst is doing a polling mechanism to all the others to retrieve the files and the entities um this works okay but we wanted to go a little bit further and test two things the first thing is that as you may assume we have lots of data and we have like the only historical data like all the changes that have happened on a scene and also the way that the files are regulated together well let's first talk about the historical data what happens for example this is the Genesis Plaza for the sundran which was away in 2020 and there was a change in 2021 so the servers need to retrieve the content the latest content they don't need to serve the how was the central two years before right but we want to store that data as a backup and for for example if you want to run the world how it looked a year before um so if you run a full node which means that you have all the historical data all you need to do is enlarge your disk and everything will work okay the only thing is that you will need two terabytes of of disk but if you want to run a light note then we you can enable the garage collection which is a mechanism that deletes all the all the files from the entities that were written by new ones right okay but what happens if all servers then enable garage collection then we may lose those data and we don't want that so our idea was to set up a node an ebfs node connected to a server who which listens all the network and listens all the changes and stores well pins to ibps all the files that are synchronized so first we uploaded all the all the files and now and then um we set up the server to listen all the changes and automatically pins the new files um the other thing is the files replication which we what is that well the way that we share those files between the servers we are doing it by HTTP request and it's a full match topology right because every node is talking to every other node and our idea was well what what happens if we use ipvs and we leverage that so we don't have to care about synchronizing files we only have to care about the evaluations that we need to do to the blockchain and the entities and the way that we need to retrieve those files but we con we only would need to know the hashes that we need to pin and then all of that part themselves so that's our idea um on on a trial to to make this something different and test if we can Leverage The ipvs to work that um that's all thank you [Applause] um I was just wondering could you speak a little bit about your decision to use ipfs instead of RV for storing historical data instead of are we for like permanent data to store like historical data um we we currently have the the data stored locally like in the file system and we have the the way to configure that and store if you run an hour I want to store them on S3 you can and we we have we have been thinking a lot about the way that the catalysts sing each other and we've been assigned a lot how ipvs does that so that's why I think we chose ibps to test this um but we have done so far it's only the historical data right we haven't done used the ipvs to run the sync any other questions okay how do you handle content moderation or cases where like certain content or files might be illegal in certain countries but would be valid in other ones well the way that now is each of the servers has an owner um it's their responsibility to deny list some entities or files or the thing that they need to moderate so we I we are we are not taking care of the moderation ourselves we're letting the owners of the Catalyst do themselves we we only provide the mechanisms for them to to remove to remove those files and don't serve them thank you um any more questions nope okay that's it [Music] foreign [Music] [Laughter] thank you period okay everyone now you can hear me perfect uh all right so uh I'm evil and I'm the founder and CEO of Empire wallet uh and I'm going to tell you about the future of ethereum wallets and ethereum ux and two technologies are at the core of this and that's a smart contract wallets um kind of also known as account obstructions and MPC otherwise known as smooth patch computation and sometimes referred to as threshold signatures in this case um so um the question is can self-custody be the future for the next billion users how can we onboard the next billion users and there is a big myth in the space that most people are not ready for self-custody uh but the actual reality is that most self-custodial wallets are not ready for the users not the other way around uh and uh I'm guessing uh can I get a show of hands who saw the account obstruction panel yesterday with uh vitalik cool yeah so you all know that seat phrases are absolutely terrible and they're an absolutely terrible way of backing up your private key and we have so many problems in the industry with compromised Keys software wallets being vulnerable to malware and to come to supply chain attacks which is quite scary like a single npm Library can like completely wreck your wallet security and of course you know we have social engineering attacks like for example with board Daves and generally all of those things can be solved by multi-factor authentication and on on the Chain we call this multisigs and wire multi-6 kind of a silver bullet uh so first of all by having multiple Keys uh or you you can think of it as multiple shards of a single private key but it's actually multiple Keys um you can actually onboard users without making them write down a seed and without worrying that they would lose access to their account so basically a simple example would be uh to have a key on your laptop or and on your phone you can also recover your account with methods like social recovery not Argent pioneered but there's also other ways of recovery you can also generally do multi-factor authentication which is way more secure and prevents you from malware and of course you have resistance to hacks and compromised keys for example we have malware on one of the devices you will not be that vulnerable so um there are two ways to achieve a multicycle on an evm chain uh one of them is smart contract wallets and a lot of you have heard about account obstructions and account obstructions are basically a way uh to pave the way forward for smart contract wallets but I prefer to call this like smart smart contract wallets I prefer to call all these Technologies smart contract wallets or smart wallets for short and this is basically where each account is a smart contract which allows for any custom execution logic including multi-6 of course and then MPC refers to multi-party computation and in the context of wallets it means that it allows you to have like threshold signatures so you can sign by the signature could be by multiple parties or you can do N Out of them so like two out of three and let's start by boosting some myths about smart wallets so one of them is that smart wallets cannot sign messages and I'm sure that many of you have heard that but the reality is that smartwatch can sign messages are just fine you just need a bit of custom Logic for verification which is the ip1271 then another one is that smart wallets and I've heard that in the past that they produce different address for each chain so it's kind of tough to use but that's not really true because you have create two now and you can create account counter factually at the same address on all evm chains again it was mentioned in the panel and then the other one is the gas overhead gas overhead still exists but it's got on a lot less in the last years again thanks to thanks to proxies minimal proxies and thanks to counter factual deployment so um unlike NPC smart worlds can do many more things than just multi-6 they can do time logs they can do spending limits uh again something that was fantastically covered on the panel and this also allows for Recovery mechanisms like social recovery um and for example seedless onboarding like we have on our buyer wallet just with an email and a password while not compromising the non-custodial nature of the wallet uh it's also mutable which means that you can change the authentication scheme like you can start with with sealless onboarding account where you have an email and a password and then also become more versed in crypto you can upgrade this to a dresser or a ledger and you can you can set the Tracer and The Ledger to be like the sole owner of the account without changing the address without having to move funds which is amazing then you have gas obstructions which allows which allow you to pay for transactions and stable coins so like if you're a new user on boarding on crypto to crypto you can sign up with Cinema on a password then fund your account with an on-ramp and then you would receive usdt and you would be able to swap that for example for later without having either for gas and of course you can batch transactions so do multiple things in in one transaction again a fantastic example from Argent was the nft shopping cart but a simple example would be on uni swap when you have an approval the approval would get batched together with with the transaction so I wouldn't have to do it separately and there are more exotic use cases like for example a custom cryptography like enabling the nist curve which would allow using iOS Biometrics and web authentication and there are there are of course some drawbacks of smart wallets and some adoption challenges like we have gas overhead um as mentioned as mentioned previously it's not so much as people think uh you just have around one to two thousand gas per transaction uh and around 40 000 gas for deployment which is added to your first transaction uh but the main challenge is uh dub adoption so a lot of Dubs either block smart contracts intentionally because they believe that that's not a wallet and it's some sort of automation uh that's basically what nft means and the other thing is many dabs just don't Implement smart contract signing but this is quite easy to fix so when would you want to use MPC wallets so one of the benefits of MPC wallets is off chain recovery which is cheaper and easier but not as flexible then the other thing is they're truly cross chains so there's no dependence on Smart contracts so for example you can support Bitcoin or you can support basically any chain that uses elliptical signatures there's no gas overhead and there's no kind of drama with the signatures like signatures just work with any dab but there are some problems with MPC and one of those is that they require custom cryptography and there are not that many libraries so far and they're not that well battle tested as normal electric curve signature libraries and it's kind of an experimental technology but then the main problem I think is the immutable authentication rules which basically means that when you create like for example two out of three multisig you cannot just swap out one of the signers you cannot make it like two out of four or you cannot make it like a three out of four it's just immutable once you create it that's it which also creates some problems with recovery right so you can recover the account once but then you can change one of the keys so like if you lost the key then it's kind of bad and it's also limited to multi-6 you don't have time logs so that a lot that limits you a lot as well there's no gas obstructions but that's not in the slide because it's more of a benefit of smart contract wallets and finally the also a very big thing you cannot use it with a hardware wallet at least not before those Hardware wallets element that of course you can argue that you can pull requests to those Hardware wallets but at the moment you can't and as a conclusion I would say that smart contracts and account obstructions are the way to go uh does the future proof way of doing accounts on ethereum and on other evm chains on layer tools and Etc but mood Parts computation can be fantastic for like some temporary use cases before dubs kind of get their stuff together um but yeah definitely smart contract wallets are way better for the future so that's it I would encourage you I guess we don't have time for questions right do we we have time for questions amazing um any questions yep yep so we have time for one question sorry about that sorry so uh one of the critiques for the smart contract wallets right now is that in the end you still need a wallet with a private key to manage it yeah yeah both in towels and multi-6 so how do I mean any any ideas of how of how to overcome it well that's completely true but like on a fundamental level you cannot get away from the secret right in any form of authentication you have some sort of a secret just the great thing about smart contract wallets is that you can manage it and you can make it work not like as a single private queue which is like the source of our authentication and like the one true point of authentication but you can have multiple of those Secrets like a regular uh like like you have one for example on Google or on Facebook or on regular like human friendly authentication scheme so it is a private key but you shouldn't think of it as a private key because eoa wallets in there the private Keys King is like the single secret number where everything comes from unlike smart contract wallets thank you we've run out of time for questions [Applause] foreign [Music] [Applause] [Music] laughs [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] all right [Music] thank you [Music] foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Applause] [Music] foreign [Music] [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] hahaha [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] [Music] no no no no no no no no no no [Music] [Applause] no no no foreign [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] foreign [Music] [Applause] [Music] [Applause] thank you [Music] [Applause] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] [Music] thank you [Music] [Music] foreign [Music] fellow go first we have to it works hi everyone welcome to the next talk I'd like to welcome to the chain to the stage and join us let's talk [Applause] um no no okay hold on um good afternoon um and thank you for coming to uh this talk uh I'm Chang from I'm talking labs and I'm talking is an uncaster one based in Singapore and today I'm gonna talk about the topic which is called Postman Diwali foreign so before the talk I would like to ask you guys a question what is your ideal wallet I think many of you may like use metal mask maybe I'm talking or others audits so what is your idea what it looks like you don't need to have a answer a question now but it's a worthy to think about it so let's take some time to look at where we are now and look back at the past in the past I would like to go through some number and some observation uh from what we have right now so here is the adoption map of the Eastern uh of the ethereum users so we can see uh many users are distributed in North America Europe Asia and everywhere but and this user are reading are crypto users so how do I Define crypto users um naturally because not everyone use the crypto body but I think most of the people right now they just use the decentralized exchange like Finance like FTS is changed so how do we I mean uh turn this kind of situation so make more people to get into the crypto Valley that is the the core idea of this topic so for now there are over 221 million people uh have quick cryptocurrency right now uh this number might not be accurate just for reference if we assume the number is correct then 97 of people don't know crypto or don't have any kind of crypto assets so one day if you want to introduce the crypto wallet to your parents your friend or even your teacher how do you do that can you help them to say a crypto worry in two minutes five minutes or even in 10 minutes I think the answer for now property is no it's really hard for them to know what is crypto because the learning curve is pretty high foreign so here are the challenges um we are facing every day if you are working as well what is company then you you will receive uh the feedbacks like this every day so people don't know what is the crypto what is the the sea phrase and also they don't know how to speed up the transition when their transaction is get stuck so for those questions so we need to come up with some solution for the future what is how do we fix it foreign is a important entry point of our website users yeah so we need to fix it so how to fix it so let's recap it again so if you want to rebuild a wallet then we need when we need to know what the future what it looks like so uh this is a very I mean very good question because if you think about a smart contract developer in 2018 or 2019 at that moment because they didn't sense or they didn't know there is a kind of attack called ndv attack so when you uh when you design a smart contract at late time um eventually you will you're really hard to defend uh MVD anyv attack so that's why we need to know what is the future and we need to know how to design the world and so this is a reason this topic called possible merge wallet so let's uh look at the future uh yeah end game uh the concept of the endgame is proposed by vitalica in 2021 actually it's a the goal is to scale in the ethereum for many users so we can come uh we can unbox more users to the ethereum ecosystem for the ink and uh is in in the article that with Harker mentioned it is private into a lower solution uh Centric low map what does that mean it means we can we uh today we have already seen lots of their two solutions coming up just like star net Aztec uptron or optimism so since uh if the layer 2 is the future that means we need to have more data space for the lower up so how do we have more data on the raw up so here are two ways we can do that so first we need to have more a lot get more larger block and the block need to be verified very easily for the line client if we can do so then we can have a large block and that is what then charting uh doing and another approach to to do this is how do we make the data smaller if we can make each load of transition smaller then it could fit uh we Intuit a bigger block then that means we can get a lot of I mean transaction get into the block so in the future ideally we think that there might be a high TPS with a low fees transaction fee into the blockchain system this is important because if we look back at the history of the internet then we will find this is a kind of similar so when the internet was formed the bandwidth is a synchronized resource and it is very expensive not and everyone can afford to the internet with the cost decreasing then we can see many of many applications start to going on the internet so if you if it was in 1998 you probably don't think about what is YouTube what is Netflix but if you are in uh 2020 or into 2020-22 then you uh you won't you might think Netflix it makes sense we can have more uh uh online video so with cheaper transaction fee we can do Morphine not just Define not just nft we can do lots of potential application in the market so yeah let's let's think about how do we make the world better so we can have more application uh on board into the ethereum ecosystem so yeah we need to have a wallet which fits layer 2 door mat and that is user is friendly here I want to give you a very brief short summary so first it's really hard for the general users to know what is crypto what is easier and think about it if you want to teach your parents to self-aware it the first thing the first thing is they need to write up the difference so what is difference yeah it's difficult to understand and then next they need to uh if they want to send some token then they need to have some easily so this is another thing that uh quite quite challenging for them because they they said um what this cannot change uh make a trans transfer if unless I got some easers and the second thing is the user experience is pretty uh bad now um because I think because the learning curve is is pretty high so most of the users don't know how to I mean run the body like how do I interact with the device if there is a new application how do I access the application they need to learn it from the video or some kind or they really uh or it's really hard for them to know how to do that and third uh just like I mentioned uh for now we have already have some users but most of the user not crypto user they are just general users and because all of these challenges um they are they are just uh stayed with the centralized exchange how do we I mean try to try to get them into the ecosystem so we need to have a layer 2 ready Wally which is designed for the future I think this is a very big fin because in Defcon we see the merge is already finished so the layer 2 is if the layer 2 is the feature so we need to start thinking about what is the future what it look like so finally it's a requirement we think uh ideal what it should have yeah um again if you are working at the water company this is really overwhelming every day you always uh receive a user's feedback uh complaining uh their token was stolen or they just make uh they just approved to some fake contract so how do we avoid that avoid it and even though they are more uh important important question is how do we make sure the user's assets is safe and how do we have learned to manage their key so today I'm not go off this topic but I will just focus on the key management and the how do we make their account could be recoverable here are two solutions uh one one is MVC any other is a a uh abstract account I think the abstract account is a very popular topic during the the account talk every day so you might probably might heard about it but for MPC who is NPC MPC actually is a multi-party computation so think about this example if you want to generate a random number you can ask um if you want to channel random some versus three people you can ask each one to to uh for a lumber and then we can sum it up to get the result so actually the MPC is a way for jointing Computing a function over the input let's take another example uh if we can take the signature as a result we can ask each party to contribute part of its secret numbers as the input and then we can get the signature so this is a kind of some more mass or match Magic uh we do we do not need to have a private key but we can generate the validate signature so the input is not related to the private key so you don't need to worry about once your device got lost because there is no privacy store in the device but but eventually the signature will be generated the way it operates is pretty similar to multi-seek uh think about that if a user needs to uh request a transaction you need to have another another party to come to co-work to generate the signature so this is uh really like the artistic Majestic Way to uh to send a transaction so this is a very uh important feature for the NPC wallet and the mpc1 looks like an eoa with an invisible private key besides it could be designed with the threshold settings for example like two of three so for example if we uh if this is a threshold signature then we can uh if we want to send the transaction then the device need to co-work with another device which is online together to generate the signature but also this is the uh the weakness of the MPC it needs it needs the help of another online devices to working together but if you think about that um for this secret which uh distribute to different devices it could be stored in some it could uh dedicate to some decentralized centralized service so for example if we uh if the if the service helps to store this secret then the service could help the user to identify the the transaction is valid or not because one day if the user wants to interact with the app or some device application once this party finds the device is fake or it's a scam then it can it can stop to help to generate the signature so it's it's more like this is a kind of like a risk Control Function and another part for the NPC is um it could support multi-chan because as I mentioned the mpc1 it looks like an eoa with a invisible body key so all of the if this uh this is a wallet and they are all go with this invisible type of key for so for mpc1 it could support BTC Bitcoin it often can support the E7 and all of the public chain is uh layer if layer signature is NPC friendly so this is a source perfect but for the mpcc solution just uh just like what I mentioned it requires having an online Computing unit to code work with okay so yeah uh these are accounts in Instagram we have these two two types of account one is eoa and the other is a small country account so I just uh talked about the eoa over the NPC solution so how about we talk about the control account yeah so this is the uh abstract account wallet so it's a kind of a smart contract volume so the nice thing lets the smart contract is it is a festival you can call anything into a smart contract so you can have a customized lure so you can Define your dual into this smart contract with the AAA wallet there is a entry entry point with two faces verification and execution because in current issue and transactions are verified by ecda signature with balance and the nunch check and then execute the transfer of all the core function so we need to have we need to divide this verification and the execution so this is a pretty easy for the wallet so what does is important if we can customize uh each kind of verification dual so that means we can Define any kind of signature that in the smart contract like POS like as you know or like eddsa so we can have all kinds of signal signature verification rule are building into the smart contract and also if we think this is not safe we can make it uh as a multi-signature wallet so that means you can control uh that what it could be controlled by five people but only three people uh approved then the transaction can be execute and then the other uh Advantage is it could be designed to verify of trend signing messages so this is pretty important because if you think about the Meta Meta transaction um or yeah if you think about a meta transaction or some gaming app because the users don't know how to get the easers so if you can have some relay to help them to relate to the level transaction that would be useful because they don't need to buy the user when they want to send a transaction and the last is I think that is more important is we can change the sign okay to me the most important and interesting thing for abstract account is we can abstract account from the signer a Founder eoa so that means we can have a signer and we can have an account uh but the account doesn't equal to sign so this is a very important feature because one day if we want to design a kind of application like did or so Bank token the account could be fixed and uh it could we can have the same address but we can have a different signer to control this account so uh here is a summarize uh of the some part of features of the NPC world and the abstract a wallet so for MPC uh it's developing in 2018 and then for now there are many Protocols are used so you can use any kind of this to design your NPC body for AAA recently there are some EIP like 2938 and the 23 30 statement yeah so if you if you are interested in then you can uh try to read it and the address Alice is actually is a hierarchical threshold signatures uh protocol which is designed by me and my colleague uh uh this is a different social signature because we can have a different asset structure trying to make a share with a hierarchical level okay so this uh compare some of the important feature with the NPC and the a wallet so for NPC and and a both of them are could run in multi-stick way so that means we can have automatic multi-signature uh operation to but for AA because the account and the sign up could be different so that means the account could be changed in the future so this is pre uh uh not account the designer could be changed uh this this is a typo okay but for MPC because the private key is equal to account and the signer so yeah this is not possible but for MPC and the AA Wireless because they they all could be designed uh with a social recovery so yeah so both of them work with that and for NPC and the air Wireless all of them can support risk control uh just like what I mentioned NPC one is you can if you dedicate your sequencia to another centralized service then this centralized service could help you to filter those malicious operations from your users but for AA because this is a smart control wireless so you can Define any kind of lure into the smart contract like you can set the daily withdrawal limit or you can have some Wireless edges but for NPC because this is a it's more like a private key solution so it could support multi-chan but for the A1 it's because it runs on the smart contract so that means if the public chain does not have a smart contract or things or or it's not even comfortable then it cannot be support multichat and for MPC uh because this is not the smart contract so it could not doing some meta transaction so yeah for AAA it can take advantage of the meta transaction but for D5 friendly I think this is a very very important Point here so a sounds like a pretty cool thing but uh if you try to look at all of the smart contract uh developed right now not every smart contract supports Smart Control body so let's mean only the eoa can control or can interact with the smart contract and also another thing is uh most people do not support EIP 2071 it's an interface for the Smart Control Wally yeah so this is uh um I think this is the advantage of MPC Wally so from this table we can see the pro the post and the cons of this kind of these two uh Solutions shoot so the the next question can we do better I just follow the mean from the is too much yeah Hey where's the shower I just so Xiao is here yeah we can combine NPC and the air wallet so we can design a future wallet so you can have a wallet like that uh if you consider this is the future value then we can have a have a signer here and we can have account into the Smart Control body and also because of the feature of NPC and the AAA for MPC it could be long in of chain but for AAA it could be it or because all of the operations are on a smart contract so it should be Unchained so there are two different features but I think you can take a advantage of this kind of two solutions and third because uh just like I mentioned NPC need another party to be online to help to co-work to generate a signature so it should be synchronized but for it but for AAA it could be a synchronized but this is not really friendly for multi-6 what is signature Wally because for money signology when you send a request you need to have another party to sign a transaction so there is a lot of delay so at the last I think uh if we can combine these two kind of solution this is a benefit we can design a future world for this kind of application like for payment because for payment you need to have a very user-friendly wallet so and for did you need to have a account uh have a address which is a sent as an account yeah so we can do a lot of things if we can combine these two kinds of solution so thank you this is my talk thank you Cheng Wu next up is our caddy King please welcome into the stage thank you thank you foreign [Music] thank you [Music] thank you [Music] [Applause] [Music] foreign [Music] foreign [Music] [Music] foreign [Music] hi everyone thank you so much very crowded this time please welcome makaidi for his nest net for our next talk hand of applause thank you hello my name is arcader kukarkin and welcome to my very humbly named talk about decentralization at the internet archive so a couple quick caveats this is not strictly official use of the archive it's sort of my own accessories uh this was submitted as a 30-minute talk turned into lightning talk and now is 25 minutes somehow so it's going to be a little weird but that's okay uh and thirdly it does not contain ethereum currently this may change uh hopefully as an outcome of this session we'll see okay let's get started so why decentralize the archive from a spiritual or ideological perspective so since you hear your property know what the archive is but just as a quick recap uh probably best known feature is a Wayback machine which has been archiving The known web since 1996. it has trillions of captures any given URL you can punch in and travel back in time uh quite far of course that's not all oops okay so we have uh thousands and thousands of other collections everything from books uh to film to wax cylinders and vinyl we digitize it ourselves we partner with other institutions to preserve their Collections and so on uh it's a lot of stuff yeah okay uh and we are also perhaps known for our beautiful headquarters which is here seen in its previous Incarnation as a literal Church and inside uh is our own Terracotta Army which by the way is uh I think the best employee perk ever after three years you get a half size statue of yourself made uh and it's placed uh somewhat creepily on the side of the the Great Hall and within the ver the very same room is uh actually some of our servers we also have you know more conventional data centers but I think for the purposes of this metaphor this is a very good image it's these are uh Peta boxes at one point they paled about a petabyte of data each now it's much more so yeah so uh you know we've got four walls we've got a riff we've got our Hardware serving you uh you know your Grateful Dead uh live set from 1972 or the White House homepage from the 90s and that is how we accomplish our mission of universal access to all knowledge right well I think actually for a long time this has been true it might be somewhat true today but before I try to answer this question I just want to play this clip off our founder from the very very beginning you may have seen him earlier in the week and here's a much younger version and there's no audio but there there are subtitles and he's basically talking about um his thinking in starting the archive uh which at that time uh was just a web uh repository and I want you to take two things away from this clip first is that this is really a web native organization we do have all this other content uh and we value it very much but the web has largely eaten the world at this point so it is in our DNA to essentially be a the missing memory layer of the web and up to this point the best way to accomplish that was put a bunch of stuff in servers in a you know box and the second thing is that underlying our Top Line Mission off universal access to all knowledge is this technological imperative to periodically assess the tools that are now newly available whether they can help us further that Top Line and apply them accordingly so I think for the first time since our founding we actually have something that's not just you know better servers bigger hard drives better scanning equipment we have a possibility of potentially fixing this problem in a way that is universal and not just embodied in our service okay so to zoom back in a little bit um why decentralizer archive from a practical perspective well one is physical location risk so this is a map of seismic risk zones in the Bay Area and the little logos there uh correspond to our facilities and that's not great we're actually building a new data center in British Columbia currently unfortunately that's also on a fault Zone and you might say well why don't you stop building your data centers in seismically active regions and for reasons that are outside the script of this talk this is actually surprisingly difficult uh secondly political location risk so uh we're addressing this a little bit with uh the Canadian expansion but uh as you can see on this map this is essentially a sort of a weighted index of the democratic quality of various countries and we're not doing great at it and it's really trending downward so um this is a real problem for us because we have a lot of stuff that people want silenced um and clearly we have pretty significant Network bottlenecks so this is the user sign ups uh over time uh you can see there was 16 in 1996 that's very cute and during the pandemic it just went crazy and has never let really let up so in practice this means our bandwidth is just totally cooked we're putting fiber in as fast as you know the city authorities will allow us and it's really just not enough so you might ask why not just put all your stuff on S3 and use cloudfronts and you know not worry about any of this stuff so there are multiple reasons some of them are also ideological but they're also practical ones like cost so um our modeled cost and actually kind of real cost is around 650 bucks per terabyte to store forever which in the model means 100 plus years on S3 that's about 160 bucks per year so that multiplied by forever that's not a very nice number um with filecoin which is sort of pre-saging but we'll get into a little bit later uh the costs are vanishingly low uh and might in fact be negative for us because there's a network subsidy for culturally valuable data uh how sustainable that is we'll we'll find out uh storage is another decentralized storage network uh they're sort of a little bit more here and now thinking so they're competing with S3 and they have a slightly better cost uh there's also our weave which you might be familiar with as the forever storage solution and it is expensive it is quite pricey compared to our model and I'm a little bit unconvinced about their data availability model for stuff that's unimportant until it is right so things that are sitting idle for a very long time and then because of a political moment or something like that they suddenly become relevant so if you have azer thoughts please talk to me and convince me I'd love that and there are others I haven't mentioned here I'd love to talk to swarm folks for example I don't know what their pricing model is so please if you're with that team find me later uh and they're aside from all the you know dealing with negatives they're also positive new opportunities with decentralized storage and decentralized networks in general like content addressing which a lot of them support which for example can allow for transparent link preservation right now when a link breaks we may have a backup copy if it's on Wikipedia we have a bot that will go in and edit the broken links and the citations with our backups or maybe if you're an Enthusiast you'll be using our extension but for the most part an HTTP link when it breaks it it just breaks uh and of course there is uh web 3 forward compatibility as a nice bonus when the stuff is in a decentralized network and it's content addressable you can reference it uh using you know standard ipfs libraries that I'm sure you're uh familiar with and so on and so on so I'm going to quickly jump into a couple of things that we've we have working today uh as steps in this direction and then maybe come back to the musings uh about uh how a actual decentralized internet archive might look like okay so the first one is the simpler one uh and this mostly addresses uh the bandwidth concerns um and it's streaming media from Storage uh and if you'd like to try this yourself you can do it uh we don't currently have a real front end so you'll need to grab this little bookmarklet from the presentation and just add it to your toolbar and you will be able to follow my example all right so here we have a video from uh from NASA and we have a whole collection of their their videos and in the metadata here you see some uh you know internal identifiers this archival identifier Ark and uh then this storage string so any archive item that you see this uh string on is actually mirrored on storage so you can just hit this bookmarklet and hopefully we do not get demo fail here due to network issues no it's working great so here is a pretty big video you know full resolution MP4 four gigs to do and so as as oh actually yeah that loaded that's that's fantastic so here we have some wacky astronaut things and it's uh as you see on the right here uh it's being served from uh almost uh 3000 nodes worldwide the way storage works is uh sort of like an incentivized uh Victorian swarm uh it's not quite the same but it's the the basic principle applies uh the use uh Erasure coding uh and basically pick 88 of the fastest nodes to give you a nice robust stream without relying on something like cloudfront or expensive Edge caching so let's close that all right so so what do we need for this to actually be useful uh to y'all is well one is obviously an actual front end and that's uh that's assigned to me um we need browser support because in this case it was sort of cheating a little bit because I was actually using an HTTP Terminator where my browser was talking to a storage uh service that was then talking to all these thousands of nodes uh it's actually an https uh connection to the nodes so uh all you need to make this work in the browser uh in a truly peer-to-peer fashion is uh self-signed certificate support in a particular context so if you're was Brave or opera or in other browser that wants to make a play in the space please talk to me and lastly as with many decentralized systems their systems today there is actually centralized point of failure which is the metadata uh that essentially uh tells you where to find all the pieces of the file so we're currently using a storage hosted uh what they call satellite metadata Service uh we'll probably be running one of our own soon but the real solution is of course not to have the single point of failure so that is on the to-do list okay so the second demo is a little bit more complicated and for it you might need to have a crash course in web archiving uh so the canonical format for web archives is called work and it's in uh IRB uh standard uh that uh the the archive has developed back in the 2000s and it's basically just a dump off web uh of HTTP traffic between your browser and a given server and uh the uh the actual file structure is basically a tarball or concatenated dumps all these different crawls and this is how the entirety of the Wayback machine works it's just a bunch of these giant files that are HTTP dumps and uh some index data that tells you uh what offset in the file to read and uh out comes the web page so let's see all right so I'm going to go back to the demo here so here's an example of such a work file and it doesn't look like much here because this is sort of internal use if you open this up in a different front end you'll actually see the web pages but this is kind of what's you know how the sausage is made internally uh just these files and we have again in the metadata fields we have these identifiers uh I did very CID and com p and these are identifiers within the file coin Network so we've been storing a lot of these web crawls this particular data set is our uh inauguration uh pre-integration crawl so every U.S presidential election we capture the entirety of the dot gov domain and Associated things uh before and after the administration change to see you know how uh how the politics reflect uh in the reality of the government web so uh we're using these data sets as uh as a test bed because it is in public interest and it is also not copyright encumbered uh as a U.S government data generally is so we can pull up oops actually this one just grab this identifier here and uh go to a filecoin network indexer So to avoid demo fail I've actually pre-filled this so I'm not going to breathe on it so it doesn't fall over uh so here's here's that content ID and it's founded a couple of Piers where we stored it so we can map this peer ID to a minor ID here and let's see so we'll grab it from that provider and we'll grab it by oops another one by the identifier and for demo purposes I'm just going to discard it but all right fantastic so here we are retrieving the kind of bulk uh package from the bioco network so so at the moment we're sort of treating this as just a dumb blob so it's it's being stored on file coin as essentially another copy we have a couple of internal copies and this is a a third sort of Cold Storage thing but things can get a lot more interesting so uh we can take a look at some other tools in this space okay it looks a little weird of this resolution but here we have a capture of the Defcon dot org site uh and uh this Tool uh it's it's not an uh internet archive tool but it's it's sort of Affiliated uh and uh here we have made a capture of the site and we can store it on ipfs and filecoin through web3 storage all right and now this bundle is a static um self-hosted application that provides a view into this web archive the same way that you would get on the Wayback Mission but there's no server right this is just loaded for my ipfs and it has all the nice archiving stuff built right in you have this time stamp you could travel back in time if I had earlier copies uh you can have the links reference and so on so uh the the next steps in the file coin work for us are to try to make our captures uh structured and compatible with something like this so you don't actually need our servers to interact with this data ah so all right and beyond that step there are a few things we need to actually make this work for real so one is actually encryption and ACLS uh you might think of uh sort of public uh good information sets uh such as our collections as being essentially open and that's generally true but uh because we capture from the open web and some of our collections do come from sources where just so much stuff goes in that it's very hard to do diligence at ingestion time uh there are opportunities when where things do require a certain degree of Access Control uh in in case of legal action or something like that uh and uh there's also kind of a broad concern about data mining uh of these sets so we we seek to primarily support users and good faith researchers but there is a broad spectrum of use cases that go from kind of white to gray to Black and the most important okay two most important things is indexing and metadata so right now we're able to store this bulk data fairly well we've spent about a year on this and it seems like kind of a simple thing but at the end of the day it it it it turns out not to be um but uh the thing that we don't have a solution for right now is the index because we have as I mentioned trillions of captures in the Wayback machine we have billions of uh other objects and you can't put that stuff on chain right and you it has to be discoverable somehow so I'm very open to suggestions from the audience after my talk on how we can attack this and the second most important thing is scale so we have hundreds of petabytes in our collections at the moment and that's a lot of data I think uh most folks here who are work in on chain things you're probably dealing with things that are at most a few megabytes right it's it's really not that much data uh that we're used to dealing with uh in the uh the blockchain world and we've got tons and tons and tons so that's something that the file coin team has been very supportive of but we are just getting started all right and I think that's it um I guess the question I leave you with that goes back to the beginning is can can the web have a memory not just web 3 which is already somewhat set up for that but all the web content because we we value culture that is not just this narrow domain that we inhabit we value all culture right so how do we preserve that for forever thank you I have a couple minutes if people have questions are there any questions right here [Music] so when you're archiving the web uh very often web servers differentiate what content they serve depending on the IP address from which you ask and it seems to me that there's an opportunity for decentralization here as well so that your crawlers actually you know pick from which region they download the who I've already how are you dealing with this problem now yeah that that's a great point so we we definitely run into these issues as you're just being straight up blocked or a page that has meaningfully different appearance depending on uh the requesting region right now we have a few semi-decentralized tools for this uh there is a organization called archive team which is basically a volunteer uh group uh that runs crawlers that receive these tasks uh and there is also academic research in this where different archiving organizations would enter into uh sort of Consortium where they would synchronize their crawls from different regions but I agree that those are not uh super scalable Solutions so uh I think that my short answer is yes thanks for the talk how do you deal with takedown requests like dmca takedowns so unfortunately we are required to comply with that to continue existing as an organization uh so we have a legal team that processes them and if they are uh they have merits and are made in good faith uh we will generally block the item from being served so unfortunately time is up okay um thank you so much akadi and I'm pretty sure they can find you afterwards right okay fantastic thank you very much thank you thank you [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] when you just know that it's right [Music] on the edge [Music] [Applause] [Music] for you [Music] hi everyone so next up is Denise with a stock on belcanized Learn to Earn good luck thank you um oh hello everyone hello welcome to my talk thanks to come thanks for coming uh welcome to my talk balkanize Learn to Earn okay so let's start with some Universal truths that we can hopefully all agree on um number one some countries are poorer than others and uh frankly some countries are probably just poor uh often we call them developing countries number two although markets have been doing not that great lately I think some of you might still have made some money number three some people or if we're being honest actually most people especially in these developing countries they're lacking awareness of this whole uh web free space but at the same time we need more web free literacy and we actually need more web free Developers so now let me actually introduce myself hello GM buenos dias um this is me hello uh my name is uh Dennis or Dennis which God I was born in 1998 in former Yugoslavia today's Bosnia I moved to Germany in 92. at the beginning of the war lived there most of my life and then uh 2014 I actually moved to Switzerland for a PhD I studied industrial engineering had like a focus on energy economics worked a bit and then did this PhD uh at eth uh Zurich we have a focus on machine learning eth Zurich is like the Technical University in Switzerland it's not affiliated with ethereum or the ethereum foundation uh I then worked as a data scientist last stop was at eBay left that position at the end of last year and um yeah I'm now with this little project that goes under the name enot.io and I'm also a partner at very early Ventures like an early stage Venture fund um I've been involved in this crypto space for a few years now this is my second def con first one was in Prague um I did this weird thing in 2018 where we built like a Bitcoin client in Python from scratch and I'm a quite regular user of Dune analytics for all sorts of like on-chain data analytics these things together with my background will become somewhat relevant to the actual design or architecture of the program okay now let's dive into some local truths um Bosnia the place that I'm from it's probably safe to say uh that it was hardest hit during the wars in the 90s it's still ethnically quite divided uh youth unemployment rates are quite High think until recently the numbers were around like 60 65 percent they claim they're lower now if the numbers are true then I think it's mostly because people are emigrating to the West and at the same time the GDP per capita is around 5K US Dollars like 400 USD per month would that would translate into 400 USD per month average salary uh which is not that much interestingly if you look at it on like purchasing power parity basis it's a factor 3x higher that basically just means that life there is quite cheap students there usually have a strong theoretical basis they often lack opportunities for a practical experience and when they get practical experience they often end up choosing like a weird text deck or some outdated Technologies that's kind of a little bit of my opinion though okay now let's look into some hopefully generalizable Solutions uh I am of the opinion that with guidance uh incentives and arbitraging this purchasing power parity uh you can achieve quite a big impact both for these people but also for our whole industry what does that mean guiding basically um telling people what they need to learn and how they acquire these skills then incentivizing by mapping this learning this is the Learn to Earn component mapping the learning to some monthly income and then the purchasing power parity Arbitrage which basically means funneling money from a place where a beer costs seven euros to a place where a beer is one Euro doesn't mean the people have to spend it on beer but it's just my personal Big Mac index um and I think through that you can achieve quite quite High leverage good type of Leverage so that's the theory what does it look like in practice I currently have eight students in this first batch in Bosnia and Serbia they're aged 20 to 25 years they have a background in computer science or physics either final year students or graduates they receive 150 Euros per US dollar per month per student they're supposed to learn like a machine learning track blockchain training as well the learning is outsourced I'm not doing that myself I think I'm lacking the patience for that but the projects are in-house I'm making sure that they learned what they were supposed to learn the expected duration is like 9 to 12 months currently they're about to enter the third month for more information you can see inart.io scholarship with a few funny pictures and only quickly let's look into the curriculum or the timeline what are the students actually learning I mentioned they usually have a computer science background they did some Java maybe some JavaScript some front-end development that then transition into python mastering the libraries that are essential for data science and machine learning numpy pandas then first level we're actually doing machine learning and because every data scientists or machine learning engineer ends up spending quite a lot of time with SQL I make them use Dune analytics to actually work with real-world data which is quite useful for me as well because I don't have to yeah host any fake data and then eventually in the next uh modules or levels the students will be interacting with the web free python Library I'll make them do what I had to do like re-implement uh Bitcoin from scratch uh in Python and then eventually we'll be going into smart contract development um okay um what's next cover this well uh a minor point it would be nice if we got like some more crypto native remittance currently it's still revolute transferwise but there's just no local economy for the students to to do anything with usdc AFR or whatever big question is what is this becoming will this be an education Point C or will there be like income sharing agreements at some point to to fund next Generations all open questions but the most important thing and that's kind of why I'm here is to spread the word and make people that are interested are in a similar position uh copy pasta uh not just code but uh maybe even this type of setup where you can guide and incentivize and support people in other places and hopefully push them into uh yeah this web free space big Vision it's written here it's years decades centuries maybe a way who knows maybe not um yeah that's it thank you thank you Dennis so I think we have time for one question are you okay with that sure anyone wants to ask dannyson question okay hello a really good talk I I would like to ask you how or yeah how do you think you can incentivize investors integrating into the Dow to have more scholarships um yeah that's a good question I my deliberate Choice was initially to just do it myself don't do any outside funding next steps might be to talk with some of the organizations that are here you know give it for talent protocol I've already spoken with a few of them maybe that's like the leanest or easiest way uh I guess any investor funded approach yeah might be related to just investing in in talent that eventually would work for you uh Germany Switzerland they both have like this apprenticeship culture which essentially is like uh you you got young people and you're um paying them to to become actually productive uh workers so I could imagine something like this working now this would be very tight to a company if we get this income sharing thing I mean I like to think about these ideas but I think that's still a philosophical conversations but thank you [Applause] [Music] foreign [Music] [Music] thank you [Music] great sorry are you ready yes but it works yeah oh my God it does hi everyone so welcome to our next talk please give an Applause for soy Vera so first Welcome to My Country I'm the first female nft artist from Colombia so ah I'm super happy seeing you here drinking water you know dancing a lot I know there are like a few girls but if you want I can introduce it to my friends and today is Friday I know many people like are hungover like me but let's get it started so since I was a little child I have been like super super curious about life about everything and and like my Manifesto talked about it when you are connected to your soul you can shine brighter and we are all we are all connected by one single trace so that's my uh that's my Manifesto and that's me and when you paint in one single trace it's because life is a funeral and you don't know like how much time you will be here uh on Earth and when I painted one blind single trace just like start drawing and then you just finish and you are like ah this is horrible this is amazing I like it or I love it so for me that's live you know you need to be passionate about what you do and just Express all yourself you know of course I'm a bit terrible with guys because I express all my feelings are there first time and they feel afraid but it's okay man if they will likely they will like how I am you know so I started painting in my in my in el paper and I studied civil engineering because my dad has a company but guess what happened I didn't continue with the company and I started just like yeah with my dream so at that time I didn't have money for buying an iPad so I just started painting on a paper I scan it I use an app that is called in my phone that is called Pig collage and then I just send them in a jpd and guess what like when I I started selling for 15 when I arrived like 100 people were asking me like hey give me a certificate of authenticity like this is really expensive just you send me a JPG I was like wearing pandemic like it's more expensive like sending you my yeah like the artwork then like the shipping was more expensive than the than the artwork but in paper and the 15th of March my life changed forever when I became the first female nftr is from Colombia people sold this nft they 11 of March of 2021 so I'm like in the in the way the wave of people you know but the funny thing at that time like you know I'm Colombian like I speak Spanish I love salsa and they were not like they was not information in Spanish like like nothing and like few information in English so my when I speak and I gave this conference to people like be curious you know like life is that so this is me and like one week ago Bloomberg I appear in the Bloomberg list of the 500 more influential people in Latin America and I love that not because oh I'm in Bloomberg list no because I say people look at me I'm an artist I don't I don't use like you know like formal clothes to be here I'm just like connected to your soul I inspire people and that's why I'm in that list also one of my nfts went with Jeff Bezos to the space I make the nft of the woman football championship I'm a global Ambassador I wasn't Times Square and I'm going to be in nft London speaking if you are going there I will be there I've been in 40 countries thanks for blockchain technology like I love you know vitalik he changed my life so like even he dressed like that fashion I don't care like it's like I love you thanks for changing my life and changing live on many of digital artists so again my Manifesto if you are connected to your soul you can shine brighter and my invitation to you is just be you just shine with your soul just know who you are and that's the path that's the way again my first please again take a picture that's the the message I want to spread um in the world and also also loved blockchain technology you know so how is like what is the difference between this and this it's art it's just a medium so when I give the conference to not not crypto people I'm like this is Art what is happening right now I reflects what happened in society so how I can change this can you help me bye can you change it no so I enter into this world because I realized that art reflects what happened in society that's the phrase you need to say to the people when they ask you why the is an nft I don't understand that and you say I reflect what happened in society babies so then I start telling about the um like the history of Art and in this period of time in the Middle Ages uh they like if you see they there's like a lot of religious like religious religious yeah religious art and it's because at that time the church want money and you know how they ask people to get them money with paints it's if you don't do this you you will go to um you won't go to heaven so give me money give me money and voila they use art to teach people then in the Renaissance you know why the Mona Lisa is so amazing because Leonardo da Vinci was well super intelligent now because at that time starting Anatomy was like it was was a must at that time why because in my face again I reflect what happened in society um I'm inspired sorry uh like now the center of the universe wasn't God was a human being so they start studying Anatomy you know then at this period of time impressionism they created tube of oil so now the artists have their tube of oils they can go like like out of their like houses and they can paint so if you go to Music Museum in Paris what you will see a lot of Landscapes again my face I reflects what's happening in society and then under our whole Country Museum and in the 50s USA you know so he was like okay I want to be a billionaire you know how he was on the world and you have two options to sell one art piece for like millions of dollars or sell this the like copies of the same like like super cheap so he did that like once you miss him art reflects what happened in society and then voila and nft what is happening now technology and you know that you're a crypto people like most of you so when you mix art and Technology what do you have digital art you know but when you make little art and blockchain Technology what you have nfts voila that's what's happening right now so that you my like my invite for you the crypto people is please teach nfts in like in the history of Art and people will like oh my gosh yeah like now I understand this because many crypto people explain like it's a non-fungible token who's like what is that like even I don't understand that you know it's always as you know like color kinds and then what happened like pandemic has started everyone lived pandemic so so what happened everyone made like some parties so everyone live like like the necessity of Technology before technology was only like a tool so what's the difference between this and this this wasn't Chris is in Dubai nothing just a way to show the art and what is happening again I reflects what's happening in society technology we're using TVs voila and hockney hockney is a really famous digital artist he needs to print their like his digital artwork in order his artwork had a value now look at me I have a screens I don't print anything like my certificate about authenticity is is on the blockchain and that's amazing that's like you know people tell me hey Peter give me physical and things like no baby RV Flex will happen in society I won't pinch you anything really like I don't like it to do it and like social networks are anything but social nfts allow us to unite and bring our community closer together through everything so it's like you never think that you will like be friends of these kind of people you know but you have a broad day of these monkeys and now you're like I have a poor name I have a poor nap so that happened so anonymity is not a JPG it's not even a work of art is a key that opens a door it's a key that opens like anything you want and like really like social media is not so like it's not social you know but nfds give you that you can like communicate you can connect with anyone if you write to I don't know you're I don't know Richard Branson and Richard Branson would like will never answer to you but you have an NFD that which are like the same Community you have more like possibilities he will answer you so this is an example this is one of my art collectors who was like super happy with the Steve Aoki oh my gosh my time is over I I need to finish okay so my my friends and I met a friend because I have an nft and what you're waiting for to teach and I really like funny and good way because we need to teach babies and again we're all connected by one single threesome thank you I think yeah thank you wow this energy thank you so much soy and I'm hungover you know like imagine me with a hangover unfortunately we don't have time for a q a but they will find you outside yeah I'm here thank you gracias [Applause] [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign [Music] foreign [Music] so thank you all for joining the next talk this is Xiao Yang from Singapore and he's very excited to be here oh sorry now I'm living in Singapore but I am a Chinese oh you are Chinese I'm sorry have fun oh good afternoon everyone is my great honor to be here to introduce uh building either in community together in China my partner Holly for some reason he can't be here also and we'll play his video hey I am going from oh sorry I am having from this planet we are a member of together I'm glad to hear to share some updates about ethereum community in China at Defcon at the first I'd like to interviews together together you say inference forced Community correlation together have been running by weekly meeting for years and also coordinator online offline events together [Music] let's take a look each member from together it's no particular order [Music] a parent translation group who did a meeting work that they took mostly every updates from ethereum.org and many important announcements report from ethereum Foundation Primitives learn then a lot of interesting and indeed research workshop and seminars for Tech night the issues and discuss the topic of blockchain on Twitter space ECM the Rich they have Rich products like website podcast newsletter and they also have many education products they will launch new websites down named is gift get point china they are mainly promote Bitcoin events and updates newsletters for community and have more people to get into the interviewing rebase then there is take the blockchain topic events and the technical workshops those query is a platform of Dao incubator the universities students to help them study blockchain and um this planet this planet we are mainly organized um offline events and I'm also leading a supporting from this planet this protein will give help and guidance to help more people and Community to participants in building ethereum this includes mentoring operation designing organizing events and so on foreign which I think daily one of the best ethereum community in China Ian will introduce more information to you thank you yeah please thanks a wonderful speech now let me introduce deep learning yeah isn't my great honor to be here to introduce the learning we are a developer community in China build a May 201 uh we are designed for developers to use web into blockchain Dev development where they can learn Define projects our version is that we hope we could not only give Junior developers feasible and easy to use blockchain type learning roadmap but also present Advanced developer with the planned 4 to communicate to communication and cooperation organization our core members are driving by entries and paging yeah you can see we have gained more more than three thousand stars in our GitHub and two thousand subscribers in our YouTube yeah welcome follow our Twitter too yeah our community has three parents yeah that's the most important part is our GitHub yeah we have a basic tasks and project task basic text is tell you how to use the website a web 3.js users.js hard ahead like chain link graph ipfs and other layer 2 Solutions we will do some code analysis on classical Define projects like Unison curve IV yeah and the second part is our online Journey meeting yeah we called it a deep learning open source University we encourage our developers to do a technology Journey every weekend yeah the last one is our translation chain we have translated MIT open course blockchain and money ordered by transluc chairman yeah it's a very valuable material for newcomers to learn blockchain and plug a 10 season mentionedly okay and this is our githahub task you can see yes we have done the basic text yeah we also translated the first 19 tasks there are many tests waiting for for you to finish what can't you join us yeah this is our defined learning roadmap yeah we follow the finance logic trending low derivative yeah to help a new developer to learn and Define yeah trading we have a dong song called analysis and white paper analysis on uni so I have rewind V2 V3 curve we we want V2 and load like every compound liquidity ola derivative like synthetical wide earn Perpetual protocol yeah uh uh another interesting feature of our community is that our dog governments yeah who wanted to join us Masters submit a PR yeah in the early times one time and then now it's three times now yeah or give a shiny meeting technology meeting in our community yeah then you can join our developer group yeah with more and more developers join we add a limit with the selling of 120 people developer developer group has the limit but we also build a communication group well welcome our developers who want to learn blockchain yeah and the last one is that with more and more excel in the developers in our community and many people want to send a advertisement in our community so we added the rule you must give generation then you can post the right advertisement yeah our founder are stored on the Genesis safely to controlled by five current contributors of our community yeah as a core contributor Master proposed to distribute the fund the record is in the dlip project uh yeah this is our sponsor yeah we are not perfect organization so our founder are from either in Foundation Grant and the critical Grant uh also there are many Chinese famous organizations donate donated us yeah and thanks again here so if you are interested in our project uh feel free to join us this is a QR code yeah uh yeah you can connect me and how you and that's all right thank you [Applause] are there any questions any questions for you nope nope okay thank you so much okay thank you [Applause] [Music] I know [Music] [Applause] [Music] yeah so hi everyone next talks in Spanish so if you're not able to understand Spanish you should get a translator outside [Music] [Applause] foreign [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] so hi everyone hola I'm not able to speak Spanish I'm very sorry but I'll do this in English so we're very happy to have Eduardo here with his talk on the past the present and the future of web3 in Latin America let's go [Applause] you know is notes El is seminar s builders Bitcoin and latam hombres Japanese yesterday de la this place is a La Gente in spices Argentino is solution is almost a crystal that is foreign foreign [Applause] do we have time for questions one minute one minute so does anyone have a question for Eduardo there you go in the back um that's yes gracias [Applause] thank you Eduardo that was great thank you that's good what sorry Camila yeah Camila are you ready yeah yeah yes will you be doing this in Spanish or in uh no in English in English Okay I don't know if my mic is on I don't think it's can you guys hear me on the mic okay oh no so everybody this is Camilla let's go okay wait don't start the timer yet so my slides are up how do I make it start okay while it loads up hey everybody my name is Camila Ramos this talk is super important and amazing to me because one I'm Colombian um I was born in Bogota my family is Colombian we can go through a whole journey of what this means to me to be back in my home country talking to you guys but the one request I have is can someone take cute pictures of me so I can send it to my mom and tell her that I spoke in Colombia thank you okay cool so today we're gonna speedrun this because there's so much to talk about and I only have 11 minutes so we're gonna talk about machismo inflation remittance scaling ethereum for widespread adoption in Latin America what does it mean from a technical level what does it mean on a cultural level and how do we get there so let's start with where we are today um I had to pull this out from back when I worked in product at Sony we had this grid that helped us understand a product that we were building you can build a product that solves a big problem for a lot of people a big problem for a small amount of people a small problem Etc and where we are right now is we're in this quadrant where we're solving a small problem for a very small group of people right the amount of people that are using crypto today and that are actually getting something useful out of it is actually quite small and and this is what we end up with when we are in this situation right it's why we've kind of devolved to crypto dick Buds and a thousand percent apis because like we're trying really hard to find a use case for it and we just can't seem to find something that we can solve and this doesn't go without saying like obviously I deeply respect everyone working in the space I I know we're all working towards getting to this point but this is just the reality of where we are now how do we get to this quadrant where we're solving a big problem for a lot of people my answer is super simple and I actually wrote a blog post about this that I'll link at the end where you can see all of the sources cited but solve real problems and that sounds very like straightforward and duh but how do we actually get there like how do we find communities that have problems that we can solve and we can take crypto for what it is at the very base level which is new infrastructure for a payment system and enable Innovative use case that will actually drive adoption and the place that I'm going with this is we have to go where there's necessity in the global West in Europe and North America we don't have much of a necessity we're relatively doing pretty well right we all have access to Banks we all can get you know access to all the different financial services that we want and even for those who might not necessarily have access we have a wide breadth of different Neo bank and non-bank applications that let people still access these Financial Services now besides going to where there's a problem we also need to address on the technical level what needs to be solved which is scalability and more secure applications in the last what six months a year there's been like billions of dollars worth of hacks and the truth is that when you're dealing with a community like Latin America which I'm going to make the case for for why we should turn our attention and capital to Latin America specifically you're dealing with a community that's a lot more price sensitive than the West right they have an average monthly income of 500 a month you can't afford to lose even a hundred dollars in a hack you can't even afford at this point to spend ten dollars on a gas transaction it's just not realistic that's like two lunches right so I'm gonna make the case for Latin America real quick so consumers in Latin America actually I think are the best place to start because they already exhibit behaviors that make them really ripe for adoption of crypto and those are mobile first digital payments if you guys live in Latin America if you live in Colombia you know that a lot of financial services are mobile first everyone pays from their phone adoption of Neo Bank we'll talk about more what this means but basically a lot of people are already operating outside of the traditional Banking and finance system they're using Neo Bank applications AKA financial services that are not necessarily from a proper bank there's heavy Reliance on remittance payments which is basically cross-border payments if you guys are from Latin America and you live in the United States or Europe you know it's not uncommon for you to send money back home and it's done via remittance um growing political and socioeconomic instability and social pressure so we're going to talk about all of these in the next seven minutes so I'm not going to read all these but just so you guys can kind of maybe take a picture take a mental screenshot this is what the numbers looks like for adoption of online Neo bank and non-bank so basically a vast majority of people in this survey that was created by rapid which is all linked at the end Source decided a lot of people are already operating outside of the bounce 90 plus percent of Mexicans Brazilians 87 of Colombians 84 of argentinians regularly use applications such as PayPal molo and medical Bible heavy Reliance on remittance so again this is back to the cross-border thing and according to data from the World Bank remittance flows to Latin America and the Caribbean reached 131 billion dollars this is something that crypto is such a good use case for right like there's lower fees there's higher security it's faster operational speed so this is just a perfect example where it's like how do we build a system for people who are already transacting and already exhibiting this Behavior but can use what is offered by crypto to kind of unseat the kings that have of like remittance for example where you're standing in a long line you're paying 10 for a transaction you're paying five percent it takes like seven business days for the money to get there and then a really interesting thing that I found in this world Bank data is that romance flows actually account for more than a quarter of GDP in Honduras and El Salvador so a quarter of the whole country's GDP comes from cross-border payments okay and then let's talk about social pressures and the first one in this term which is machismo now I didn't have time to go into a full analysis about this because this presentation is so short but if you look at these countries and you take a look at Colombia all the Latin American countries up here you see oh man the key got cut out but green means women and and blue means men so if you compare it to European countries women are actually holding and transacting in crypto at a much higher rate than women in Europe and in some cases they're really close to the rate of men in Europe so what does this mean what does this tell me crypto in Latin America you know if you guys are Latin American there's this culture of machismo which is like super rampant and for maybe Americans who don't know what it means it's basically patriarchy but with like a Latin America Flair to it where it's like you're not allowed to work you need to ask me for money you need to stay home um you know you need to like be subject to what I want and that takes form in a lot of different ways which we won't get into but I encourage you guys to look at research but what is the signal to me it signals that crypto is offering a new way for women to transact and and operate within Financial Freedom while still operating within the bounds of what's socially acceptable so what does that mean so what that means is you can say oh well why don't they just go open a bank account they're going to get mailed to their house oh why don't they just go like sign up for PayPal they're gonna get mailed to their house like these are all things that they could run a risk if they try to you know break out of whatever kind of like limits are set on them okay now let's talk about how do we actually innovate and what are some examples of companies who have focused on solving hyperlocal problems and have seen crazy growth come of it and how we can model this in crypto so Mercado Mercado Libre is like an online marketplace where people can buy anything beds clothes tools anything and they started this platform over a decade ago in Colombia and they created this financial platform called medical Pago so that people could transact on it and it started out as just for this just for this payment platform and now it's grown to be a whole financial service provider and they offer Gateway Services mobile payments and credit cards so what does this mean right like this means when you go to a place that has region specific problems and you solve hyper local you can actually drive use and Innovation and grow into like this this is a great example so like an entire financial service and then we'll talk about one more pix pay in Brazil is Brazil's dominant digital payments up with over 60 million users and they transact over a million dollars no that's a billion dollars in monthly transactions pigspace started not too long ago it's the number one payment system in Brazil right now another example of like when you solve hyper local when you go to where the problems are when you solve solutions for people who actually are facing real problems you can actually see exponential growth rather than kind of focusing on this like place where we are in that weird quadrant that I posted earlier now scalability now let's get into the what technically needs to change so that we can actually get there so this is an introduction to fuel Labs I'm the head of developer relations there and why I'm really excited about Fuel and one of the main reasons why I joined fuels for my specific Mission and Ethos of scaling ethereum and Latin America so what needs to change scalability right right now we just can't handle the throughput if we wanted to do something like Mercado Pago or pixelate it's just ethereum cannot handle it at this point so we need to scale that how do we address that so fuel Labs is building fuel it's like a layer two but better on ethereum and we have parallel transaction execution because of our a different execution model so we have our own VM called the fuel VM that allows us to do a lot of cool things like uh paralyzed transactions which just automatically gives you more throughput because instead of having to do one transaction at a time you can do many transactions at a time and right away you're already getting hired through but right off the bat without sacrificing without sacrificing decentralization so a lot of chains like Solana and stuff they can do really high throughput but they're sacrificing decentralization what does that mean exactly you can't run a full node at home you on consumer Hardware can go spin up a full note and validate the chain yourself that is the core ethos of blockchain if you can't run a full note and have control over your money then we might as well just like all go back to using PayPal or the bank we talked about this okay more secure applications so again when we're talking about a price sensitive population with an average income we can't risk hacks we can't risk this type of level security if we actually want these people to use it now another cool thing about fuel is we have our own programming language called sway which is a rest based DSL which means it's a programming language created specifically for blockchain development now what does that mean that you can create a compiler that is very tailored to very specific needs and one of them is have you who's heard of a re-entrant debug re-entricity hacks right it's like we're in a very simple case it's kind of where there's like a line to release some funds and then after you like flip a Boolean to say true Money's been released so that you don't do it again some programmers in some instances there has been a bug here where someone can go into your contract and basically drain it and get the money over and over and over before reaching that line in the execution of the code where it flips some flag to to stop doing it so now fuel sway our compiler has built into the compiler to say hey on line 47 you have a re-entracy vulnerability and it will not allow you to build and deploy the contract until you address it another thing this way compiler forces developers to handle all possible cases using enum variants basically what that means is if you've ever written a program to say you know let's just say if the number is above zero do something if it's you know below zero do something this way compiler will tell you hey you've only written code to handle the true case or you've only written code to handle this case you forgot to write code for this case and again it won't let you build the contract it won't let you deploy the contract until you address that so the powerful thing about this is like you can never have kind of an accidental like oops forgot to handle that edge case okay we're almost done finally namespace storage so if you've ever been in contracts and solidity you know you might have accidentally touched storage without knowing it and that could have some unintended consequences so developers in Sway have to Define what the storage access is for each function and this is what it looks like you do these annotations that say Hey this function can read storage and write storage or maybe it can only read or maybe it can only write and what that does is that it's first of all it's very clear to developers who are writing the program it's very clear to developers who are using a library but at the end of the day it's very clear to users who actually don't have to know what's going on it's abstracted out obviously but they'll never accidentally access storage and never accidentally cause unintended consequences in your program and here's a link to the blog post that I wrote where you can see all of the sources cited read everything in long form and yeah leave that up for a second thank you okay someone take a picture right here ready no what's a good pose I'm not good at posing maybe like this more relaxed thank you thank you Camilla thank you well done thank you [Music] foreign [Music] foreign [Music] thank you for staying here last but not least today here we have undressed let's go [Applause] [Music] and we're gonna start this is [Music] [Music] foreign [Music] [Music] um [Music] um more jokes yes um Argentina foreign [Music] population foreign associated [Music] foreign territory International um [Music] corruption yes [Music] [Music] um foreign [Music] um foreign Anton says amigo [Music] Del Mar yes foreign [Applause] um wow undressed well done so this was our last talk of today does anyone have a question for Andres [Laughter] [Applause] don't no no no no no America is foreign [Applause] cheapest gracious [Music] do we have time for one last question is demos [Music] blockchain foreign [Applause] okay guys enjoy the rest of your day bye-bye [Laughter] foreign 