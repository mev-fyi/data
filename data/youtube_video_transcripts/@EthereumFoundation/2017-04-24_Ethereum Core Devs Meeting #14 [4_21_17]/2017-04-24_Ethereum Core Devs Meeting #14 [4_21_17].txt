today's mostly going to be about Metro but there's some other stuff too and yo eg had some questions that kind of dive into how we're implementing some of the e IPS in Metro so that's the main stuff today let's start with agenda item one so that's going to be e IP 186 the last call we had talked about discussing it a little bit further between before this call to see if there was any other opinions and also to get some of the opinions of the researchers who were in Malta last time so just a quick overview of what's happened since then I there hasn't I was going to put a reddit post out about it but then I kind of saw you know people and the thread about the last discussion notes from the last all core dev meeting talking about it and you know there were there wasn't in my opinion a bunch of people who were looking to make that change there was still to me kind of a consensus around the people who would implement the code that it would be better to be risk averse in this case for metropolis coming up so let's start out with yo Ichi and anybody in the eft as the the Berlin office do y'all have any opinions on it anybody who wasn't here last time or any new opinions I know any one of you maybe nothing oh one more time I couldn't hear maybe nothing nobody's saying that in okay cool the talent did you have anything I think he discussed a little bit on reddit but what do you put your view on it yeah I mean I think both of you I gave in one of our Skype chats a while back is that anything like anything at least in my intuition anything over two and a half is like safe enough but going beyond that well I kind of introduced at least some risks for just from a safety standpoint okay and so what would you say about the need to put it in the metropolis is there is there really one at this point or is this something that should be addressed for a different hard fork or not at all and the reward is going to come down anyway once we start start the group of states which so it's like it's not the sort of thing that country how should I say this like perhaps I mean practically speaking like the difference between cutting it down to like even to take the bottom in two and a half and fought and so just pushing it all the way back up to five inside of metropolis is only going to be something like a couple Mille maybe two or three million ether so so it sounds like it's not really something that's happened that important or applicable for Metro I mean it's not it's not that important to our people either way so on the other hand given that we're going to be mucking around with mining rewards anyway in the because we're doing delaying the Ice Age like it's I don't you know like I don't see you in extremely strong Kiev in either direction I guess yeah I'm kind of taking the same way and in most cases I feel like the status quo for when that happens within hard Forks that I've seen is that when it's kind of not that strong in either direction and there's no one really and then that I don't there's no people who are going to implement it really championing the idea that it probably should just kind of remain in discussion overall or be delayed for a different thing does anyone else in the room have a different perspective or any other opinions nods and just keep keep an uncomfortable or hard work as uncomfortable as possible yeah I would tend to agree with that so yes I think that's the end of that discussion point then let me see real quick something I just lost my agenda here cool all right so the next agenda item so this one yuuichi brought up eeew 86 which is talking about the create instruction he was saying that there were some discrepancies between the EIP pull request as written and the implementations across clients yuuichi do one expand on that a little bit yes so dcpip is about account of struction and us out of that specification point three talks about changing the way it calculates the address of new contracts but interesting did it only talks about create transactions but not about create instructions so when the EVM hits the create instruction it does create something but if not a created transaction so it decimal Det is this CP changes both create transaction and create instruction or it does just change the create transaction and we click the create instruction as it is it seems like well digitally the eat text books well looks like it changes only the create transactions not in actions but all implementations I saw kind of agreed on changing both especially the create instruction so I need some clarification which way we are following due to the fact that we also add a new creation of code in this proposal than the this means that the old creation of code retains its medics so yes Christian made an argument for one option and that's why I chose the same in the yellow paper request but that X has a different argument maybe it could it's better to keep create instructional it is because when we change that we might break some existing contract so I kind of need a clarification here to do the external to the create transaction is an external interface material okay and back to life great contract I mean I don't think this one is looking very low but what about the new create opcode ah yes so if this same it talks about creating a new kind of create instruction where different sources can deploy the same code on the branch different addresses it's called create psh or something so yes this we have internet leads and new instructions so the International the it seems to be that the creates States before correct but and over well someone would champion the case why create would change so basically the idea in general is that we wanted to be possible to what we're in like as possible and very easy to have create they have as addresses that are very specifically down to one particular piece of code and so that people can either like send money or sends tokens or do other things for those addresses before the accounts are created and the problem with the current creation contract creation approaches is that because the address only depends on the sender and the nonce there's like basically it's the actual contents of all the addresses are under the full control of the sender because the sender gets to put whatever they want into the creation code isn't a contract code and it's still the clean address either way so this would so this EAP would be M addresses code dependent and this actually would allow you to create contracts where the addresses for those contracts do depend just on that on what the code is so what one is one user story for this for example is let's say I have no money and I want to start receiving money but I also do not like I do not want to have an account that uses regular ECDSA I might want to directly have a multi-sig or I might want to directly have something based on Lamport signatures or whatever else so what I would do is I would privately kind of simulate the creation of the contract privately like figure out what the address would be with that piece of code and it would give people that address and people could send money to that address and then when there's enough money in the address then you could create the contract and basically unpaired out of that money out of you as a fee going to the minor and that story can go with the external accounts and contract boots so so the owner doesn't answer this specific question if that creates instruction with paint so okay so first of all there's there's two ways to create contracts right so one of them is externally and one of them is through the creative code so part of a part of that EIP is accounts that the the scheme for addresses that get created externally gets changed but as far as the creative code I think the main reason to change that is well there's two main reasons one of them is consistency and the other is so that the scheme the scheme works even if it's contracts that are creating other contracts and not just like mechanisms from the outside okay so actually I don't need really strong argument for changing that creating instruction I just needed a clarification and I go to the clarification now and I think this really quick text can be improved but I don't think that the already done implementations need to change that so I'm happy about this so I'm fine with this point again the number three so Lydia champion take this take over yeah I'll just just clarify Jewish a you know as I really the comments that they put on the agenda [Music] so do these implementations is to request change the create instruction would do the add a new of new create instruction they add a new creation in the audio book yes yes so the old one is retained yes the old one is there but the older one Queen the old one creates account in and different opposition of the metropolis yeah not at the over the old create opcode should still create accounts in the same position right on the same position okay then okay I misunderstood you in this case the CPP etherium request should be updated on the policy implementation shift change get a new name the same number didn't sound correctly no that's not correct the old create is still the old phrase okay you create psh psh different creation address and let me come down with so on the behavior of the old of the old create opcode is unchanged and a new Creed of code is created with equivalent functionality except Japan addressed it as right yeah so now I hear the older create instruction will not change its behavior I see okay then with this I will poke implementers on the say that and I'd wave Sue's and comments on main digitarium and by P I have a related question though to this proposal what happens if a X address contract somewhere and I later on self-destruct that contract then you can create yet another contract at the same address you can do that you can always with no with this opcode yes so alright so you don't actually know that and I mean it can vary from transaction to transaction whether that add this actually holds some code or not theoretically yes right just curious I can carry on okay I'd like to clarify a few things so after metropolis there will be free ways an address for a new contract is generated cursed with the create transaction and that generates an address from the cortege ii tizzy create opcode generated by ROP concatenate concatenate in sender longhand whatnot and the third way is create a new great instruction that generates it from yeah white can calculate and fendron okay that's clear and the second question I get that if you mentioned a use case when we account we see it's unbalanced and only after that the contract is created for that was at address yeah so how would is that possible that we create instruction can create well basically doesn't check and click account exists just check for the code well that's great yeah it's clear Thanks okay awesome so the next item is so that clears up what is number two on the agenda change the address Institute create okay so you know she also had another comment in here about the some of the accepted a IPS are not yet specific enough to form a protocol consensus so what's the next action he gives three examples you choose you want to do gutted us as well oh um certain accepted a Yeats and I assume we are seeking to implement those for metropolis but some of these have some missing numbers and so on so the first thing is for the elliptic curve related stuff some we don't have the gas prices yet and another thing is for the Rockhead the obstruction thing we don't still have the Jericho is ice-cold okay so regarding the gas costs preparing the stakes the reason why that hasn't been specified yet is because much Christian has come up with some possibilities for the gas price but the reason we haven't set things in stone yet is because we wanted to see how would we wanted to get benchmarks on the go over on the parity version and the go version and see like see how long it takes in before we make a final decision or even boom okay so that so that's that's kind of solved by just as things go on like it's accepted but then we're going to just tweak that at the end once we get the yeah that's going okay yeah I mean like if we need if we need to do it for testing purposes then we could just agree on some temporary gas price now but then if it's just for testing then we might as well make it zero so I'm no problem really I I just saw that that we should have the stick maybe and pretty before we actually perform stuff so that was my assumption I kind of tried to find me okay cool so it sounds like I'm just looking over the list I'm the pairing check and the group addition on elliptic curve are things that sound like it's going to come with time but that we can put kind of a tent value in the thing with the Gator code on VIP 96 is that something that's the same case or something that can be answered I'm for 1896 it's um I can provide a idea Elias set one version of the getter code on it should be up here somewhere I don't I don't see it right now buddy but I can provide that that's fine okay so he's right okay yes damned these points let me go all right it's great so the next thing would be removing med state from receipts so that is e IP 98 which yeah the AP 98 it looks like there's a difference in implementation between go and CPP or go and see people 8p do it one way and parity does it another so the IP 98 is the one that makes that remove the intermediate paper s that's correct so looking at this there let me see if there's any indication or Andre you're in the room would you be able to talk about what the differences do him in hello yeah can you hear the applicant eerie so there are two options in the IP specification one is removing the route - all together from the old LP structure another one is replacing it with zero - so looking at the code I'll notice that every key seems to modify the LP structure and we and go just replace it with zero - so we should come to some agreement here yeah so to remove it completely because it seemed more cleaner and we already deployed it on : network so we prefer to keep it that way well I agree that removing is better it's nice to have smaller receipts I mean it will be kind of pointless to like put 32 bytes of zeros into every single receipt just because you know it used to be there so I agree with removing oh cool the CPP have any comments okay I think it's not going to be a big problem for us to remove it also so yeah I agree all right cool great so that part's covered so yeah that's pretty much all of the questions other there is one on the blockchain and state route changes so e IP 96 I think it might be numbered 86 Pavel asked about keeping the addresses of pre-compiled contracts continuous why are we jumping from contract 10 to contract 20 I can post the link to the comment that I was kind of curious about that is there a reason yeah right look my reason my reasoning for making them separated because these like the exam addresses for a a 296 liquor no it's not actually a real pre-compile it's just a plain old regular contract with a piece of clean over to give or code that happens to have a privileged status in the protocol like I'd be happy having the address be pretty much anywhere but it's still a kind of different kind of thing ok got it sounds good CFO a related question to the VAP so the contract is inserted into the state when the transition happens and it changes is scheduled is that correct or until repeat that so the for cash managing contracts when the Necropolis transition happens well it is inserted into the state and changes correct it's inserted into the state in the exact same way as the Delft worker moved either around so again that again the exact same out of position yeah okay great so the next item and the last official item are the metropolis updates so I think the best way to do this is to start with Dimitri what we're going to get with this update is figure out where each client is at and get an update on the test and we've already kind of another note I put in there was that some VIPs are accepted but not specific enough to form protocol consensus each you've made that comment earlier so what's the next action and it sounds like just cleaning them up so just being more vigilant and the EIP is to make sure that they are they are matching implementation and the actual AIP spec so for this oh then I'm comments on that cool okay so on the testing update Dimitri you're at the Berlin office right we have the sides I'm here in rhythm perfect okay so I just if you give us an update on the testing anything change from last time and kind of the progress and where we're at yes most attention caught me to update the format of follow the test so yeah so the test fields will be prefixed by and 0x all of the X fills all the hashes and so on so I was voting on drugs and mostly all of the tests now you'll be in this format and some I will change about and making all fields prefix busy X and then you could see that and the young even the main things we change us to create instruction and yeah next thing I want to do is to make test coverage for this you yet be a different regulation of point three and four okay great and then is there anything that we want to or is there anything that you need from the other core developers is there any other comments you have about this that can kind of help you and it's there a I don't know if this is really applicable because I'm not as familiar with how the testing infrastructure works but is there a like percentage done for testing for a lot of these metropolis II IPS that are completed spec wise yeah the file on Google Docs that that both to the last time the keeping updates to read file and we could check these test cases they're all intimately marketing and then those that I write I still not done and should be done as soon as possible also we get to do released and then look so the task that I'm working on right now on the future okay great I'm going to go ahead and copy and paste that document in here alright great so let me just make sure I can get out of this oh and I just broke my thing just a second okay fixed it now okay cool Nick just join Nick if you go into the agenda we just went over a pretty much items one and two and then any of the comments that yuuichi and Andre had so if you have any questions about any of those let us know kind of at the end of the call but all of them are resolved pretty much all right thanks sorry for Mike redness and a problem so post on metropolis test so it looks like we have an update on that if there aren't any more general comments or things about that we'll move on to the clients so let's see let's start with go so the go client what is the update on implementing Metro I think there's still that PR with a checklist for what's been implemented but are there any comments or questions or any showstoppers for implementing at the amount of discuss oh actually I'm looking now do we have anyone from the go team I think Felix left say Oh Nick yeah so yeah Nick what's the other idea of the update form Metro implementation for go and - last I heard from Jeff he was who most more or less done he's got to PR there once was marrying one to the internal stuff I don't have a more detailed insight into whether they've found of the seam to adjust magazine okay great yeah that's that's that's fine enough approximation for this call and looking at the PRS I eyebrows them I think a few days ago it's it seemed like it was more or less done so let's go now we'll do parity yeah so where most of them there's just one repeating that needs to be implemented is returned data so I said liver Thanks yeah what's it like great and then wait a second the Berlin team is got dropped off the call and then they're going to be added back on Jan D have updates for the clients II work on oh well there's there's no active development on Ruby seven now and I am I and my team is working on i7i Sam has a I have merged sky event based TV 62 branch and this running well only server now there is a panel which is currently at about 2.7 million logs enemies continue a processing block and L and we are also working on a p2p we are adding an eighty function to that p2p so so you can run a panel from a from your home from your home local network and we are adding concurrent sync synchronizing to WPF - of high note so basically we are trying to we are trying to fix my notes so it can keep up with other implementations I guess and then I think we can start to implement metropolis features from I started implementing at least from metropolis features so the revert opcode is passing all the tests molecular is an implementation of year of 86 although it is a bit old so much so may not be fully compliant with all the latest stuff that we've agreed on but that will be very easy to change once the tests are there but there's AIT in 90 96 and 98 or theoretically implemented back from about a year ago when I was doing some some tests for some experimentation for Casper but it just needs to be like a parameterised a bit but the yes the pairing stuff is like it's done as a piece of as a piece of code but it still needs to be you kind of what be animated to a proper free compile but then on and there are a couple of yet there is still a couple of the ideas that aren't done as well or that aren't done so static call is not done a couple of others aren't done either okay sounds great thanks for the update on that and then we have the bart berlin team back so if I could get updates on C++ and then Martin busy if you want to give an update for Jas I didn't know if the priority was more on the II was inside or implementing Metro and that kind of stuff so we'll start with the C++ team the parolee has some connection issues students that are in the room you know here's a fellow compiled alistel for progress if you are sent a link so yeah in general kind of stew halfway through all them three IP the still not started three already method emerged several and Bacchus okay great yeah this is this is a good list cool so they're mostly all in progress and there's just a couple not started more than likely pending some of the final specs great and then if Berlin if you get back online just get off mute and let it let me know that you're on and then I can see about the javis man you know you're back great yeah my Wi-Fi cool hey it's mostly me as Martin there are Martin be easy specifically you can update about Sanjay as he hated activity very active heading I was getting the lot of backing this Lizzie Jubilee corporate function okay Jeff in and adding we have done any metropolis related work so far except the hope did it with a stacking out how the crap restoration areas would it be great but that's the only you know a faith from a chocolates made last two weeks did you hear these yes yes I heard the whole thing thanks thanks so much Martin all right so we have I think that's I'm listening clients I hope I didn't yeah I think that's everybody and Vitalik you were the one who specifically raised the point of bringing up testing and specific implementations was this sense Factory or was there any other outstanding questions I don't think there were any other okay any questions no okay so looking at the date by the way once we wrap up the metropolis stuff there's an EIP $5.99 that Nick wanted to bring up and discuss so we'll get to that but um as far as having enough time to throw this into the test net and test on stuff should we what's the opinion of us starting to set some more more strict timelines but right now what we have is a kind of a tacit goal of end of June so what what are the thoughts on setting up either block numbers or getting some either dates or something together for implementing stuff on Testament hmm I personally feel like there's still like there's still a bit too much uncertainty it to get this to agree on hard dates right now I mean I'd prefer that we make that we make a commitment to just get stuff running and running in pass and a passing test so to within with like medium high priority and once it's looking like we're either kind of all clear quotes do it then we can then we can agree on a date right sounds good to me um I'm from a front just for me kind of see an ice age standpoint and difficulties continuing to go up in that instant and that is continuing to make the data a later launch of metropolis much more and more tolerable by at least a couple of weeks so okay yeah and then there's and what you're talking about I guess is the block time changing yeah okay so right right now if we get the fork out by a June 20 June 25th then Amba difficulty sees of it or the hash powers me as Amit is now then the block plan will actually not go above around ethic in 19 seconds okay cool sounds good see after that that this will be a will just kind of bring this up again next call and just recalibrate to see if there's any changes for specification needed well good great all right so Nick you want to bring up EAP 599 it's in the all core devs Gator channel and I can I think I'll open it and paste it on the Google link as well but a go go ahead Nick and so this is a proposal to add a sort of a transaction time to live field to transaction RLP and the goal here is the currently managing transaction pools as the chef show there's no good way to expire out old transactions and that means that attackers can potentially cause a lot more trouble in a deer from a tereus point of view than they should be able to they can span our transactions and as long as the transaction remains valid and listen balance on the account there's no way to exceed spam transactions other than executing them if you attempt to of it for yourself then chapters I will just be relayed back to you from another node that doesn't treat it as an old transaction so what I'm suggesting is adding a field an optional final field to a transaction which specifies the transaction must be mined before the stated blocks and any transactions whose block number is before the current block number is immediately discarded and may not be related and any transaction whose include before block number is too far in the future should be treated as sort of style and generally not relate and so the idea is that the physician to making dearest X harder by limiting the next time of the transaction also allows people to publish transactions that they know will either be executed quickly or not at all which is good for time-sensitive operations and that's the I've tried to strike the proposal for the existing transactions it'll be fine so nodes have to accept accept blocks that contain transactions with future time stamps or with full you know block numbers or with no block number but they will generally avoid relaying them okay so and this is I I think that where this was brought up last meeting right when we were talking about handling transaction propagation issues is this in that same category yes perfect okay so in the CIP is this something that you were thinking of having this in like metropolis or there's something to kind of work on between now and when we would want to implement it I mean I think it's reasonably straightforward so optimistically has been iced included in metropolis but I think that depends on what fruity native well you know how can our potential for those and what implements as linkages have had hard will be okay so um I think that yeah I think that this can be brought up in more detail next meeting as far as this thing goes does anyone have any initial reactions for thoughts on it whether it's a good idea in complexity for implementation um yes so as far as implementation complexity John I'd have a preference that if we're going to start marking around what transaction formats to a greater extent than the x86 does then which we may as well do it properly and what I mean is that we may like I have as one example of a first thing that I would like if I just said entity a draft me IP or we're kind of change around transaction by transaction formats and the idea is that we append that we have a more kind of regular way hang on transaction version numbers and a transaction network ideas okay yes fair enough I'm ed you've written up a draft tonight already over yeah what's its number 232 okay great is there any other comments from any of the other deaths yeah I want to add a comment that I I think it's change is also good for that developer for collapse because and there's a problem for for the system house like ala khayril now is that when when you say a transaction we're not sure when when will your transaction we be included into the blockchain and and until you see your transaction on the chain you if you don't know if you should send another transaction or or just wait so with such a change I think you can you only need to wait for a certain amount of time and and that's very useful okay cool yeah good comment I agree with that I think it would be very useful so just for the implementation stuff on this that this would require a hard fork right yes yeah okay anybody any other dev comments on this I feel we should do the the transaction feel simplification thing and so I feel like I mean it was it was proposed by vetoing I can't I don't have the link right now I feel that you know this would be more appropriate feels the transactions is one you know I mean special-purpose feels any special purpose field systems actually is kind of yeah weird I guess feminine phone case perspective I mean I wouldn't cause up the tackle a special Christmas feel but I agree that if we have an idea for a more general abstraction and a bigger idea nope okay so that would be just instead of having like adding a new field every time you want to add functionality but they're just doing a kind of field you can put whatever you want and then have some standards around that yeah I mean there's still there's two ways of kind of abstracting this right so one of them is that we like do basically Nick sputnik's proposal but we do it in do it inside of my suggestion for changing transaction formats and the benefits they're adjustment basically makes it easier for us as protocol developers to change transaction formats in the future I mean the other proposal is that we don't bother for now but instead we make a media like maximum block people of walk number field part of Eid eighty-six transactions that we would get and just like recommend people to a data checker for the max walk number in the validation code okay interesting so I generalize I support the proposal so this is maybe three or four but in do support this proposal as an implementer because there is really no way like Nick has it right there is really no way to like put a limit on transactions at the moment and so this helps yeah well I will so I'll wait the Telex to t32 and reread to a toroid session 86 and take my proposal accordingly for the exhumation okay great because yeah if we if we start consolidating the other AIPS that were kind of trying to tackle similar problems I think that would be make it make it a better case to include in Metro potentially yeah all right great I'm also one other thing that we get though is that there is another given that we and if we do have a bit of time I can go there like that really necessary in one way that we could be with more but the other approach we could take us to see a bit more conservative and like taking a taken extra blood security audits of everything you know I'm generally on board with feeds a more cautious approach on the other hand and I do think we do have a real potential DRS issue here but we are fortunate of these exploiting so I think we're - with the balance like if we can do it simply and in the way that we've gone for them does not add lots of experience probably worth doing right ok ok great yeah so I think when we have more information next meeting about the changes you've made that'll that'll help a lot and we can start making some firmer decisions on a timing of implementation since it seems like it's been acceptable so far Oh sounds good right were there any other non agenda topics or comments or anything anyone have not right now ok great so I think that's it thanks everybody for coming and keep up with the e IPS as especially keeping them updated and getting the specs validated so that we can start showing us the implementation and the testing on them so yeah thanks everybody have a great weekend and see you next meeting next meeting I thank you [Music] 