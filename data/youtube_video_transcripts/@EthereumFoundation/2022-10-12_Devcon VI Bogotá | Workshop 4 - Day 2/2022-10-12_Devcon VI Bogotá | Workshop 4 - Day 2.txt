foreign [Music] [Music] foreign foreign [Music] foreign that's it okay [Music] okay perfect Bueno ah nothing to know okay okay hello okay bueno um on ethereum nft okay um and optimism yes um foreign momentum is AWS like foreign support inventory Elementary is um Bitcoin [Music] applications oh yeah okay um there's uh I don't know since their Wi-Fi problem um um okay applications um user interface contract [Music] um database questions smart contract okay I don't know I don't understand um um USA [Music] um cuando see foreign [Music] [Music] foreign preguntas see [Music] [Music] foreign [Music] okay um functions what is that yeah foreign MD um [Music] foreign rapido okay so because capitulos well see SOS LA Remix idea um [Music] don't necessarily home I defend these plugins yes tutorials [Music] entrances um syntaxis [Music] um okay so yeah buddy see I can get a problem okay okay um learners essay okay what's up okay um okay I spoke oh yeah okay is a problem see okay um [Music] Isla red okay Bueno [Music] okay okay Defcon okay [Music] [Music] okay um [Music] um foreign okay foreign okay Bueno you see no um foreign um [Music] beautiful also um [Music] [Music] okay okay yeah see a car bitly remix Defcon links where quote hack MD it's links is foreign foreign [Music] Okay so is a link is foreign the learners foreign foreign loser foreign [Music] [Music] [Music] um Amos hello world because it is a [Music] foreign foreign [Music] foreign contractor and me blockchain yeah um State variables um automatically as a functions foreign continue okay um status is minutos it's a lot see um solidity documentation [Music] latest foreign foreign okay minutos um okay our that's very good part was thank you okay okay [Music] um foreign foreign address in solidity by example guess the the best practices they're the contractors is a primitive data types no and that was um false foreign [Music] it is going as an unsigned integer a U.N um specifications says um negative Direction the address is bytes is the address it is um [Music] Travis [Music] uh um address is variable is um it is minutos and Pokemons see I know foreign okay how's it going you want more time was all good I mean I think let's move forward also if you don't have the solution you can also just do it later and maybe I will not even look into it I mean you can also just show the answer as you see here and um then then you will get it oh sorry English um foreign [Music] um huh that was available then check answer directions [Applause] um as you can see Sicilian La solution is like um is state of the blockchain our contractor foreign um special variables or variables [Music] um yamamos a global variable um see the address of the caller is um um the solidity um okay is is [Music] foreign foreign foreign [Music] foreign hmm Okay so I hope this was uh sorry I spoke as a sufficient and see yeah yeah I'm gonna take a look foreign capitulo and Ultimo capital oh yeah okay simple storage is part of the solidity by example um our principio is um as a new end as public State variable various is functions um Valor [Music] This was um foreign almost as AP um State variable and um um [Music] View until total the internet blockchain is yesterday foreign hello facilities [Music] true it is [Music] foreign foreign foreign foreign [Music] Osaka this place is complicated visibility um control flow um foreign [Music] almost um see when was uh solo Solutions um um Bueno Nevada um so I I dos um it is on Montana icos initial coin offerings is nft contractors um standard the tokens yes foreign directions important the Transformers functions um standard um interface is foreign contractor [Music] is complications [Music] remix Rewards okay Bueno que is foreign okay File Explorer um Repository foreign foreign [Music] huh Dondo lowada SI esta um contracts yaka telemos umix reward upgradable ESO es un contractors foreign okay bien is thank you um Amazon dial file explorer Travis e got the name of scripts yeah cut the name was a remixer mint yes typescript okay I mean typescript it is the uh the ethereum and optimism is foreign is connected to optimism optimism e aura foreign optimism is Easter foreign [Music] the akka the name is a remix Rewards those Rewards aware ah capacity foreign [Music] provide um Peoria is an okay foreign [Music] remix foreign optimism [Music] DS Network is function now not Genesis insufficient is uh um it out ah um contractor que compile is a contractors optimism we will come here foreign camera foreign Workshop official terminal the Western Pokemon problems I.E um [Applause] all right [Music] thank you [Music] foreign to different chains so um it was actually quite quite hard and and for us [Music] let me go back several years [Music] experience [Music] say so foreign [Music] all right SpongeBob what does it really needed to be able to maintain all these other chains so these are actually with us [Music] [Music] thank you [Music] foreign [Music] the roll-ups now it was time for our team and how we publish this information like I said before Bridges [Music] [Music] [Music] sees yesterday and I'm gonna [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] security assumptions we should constantly monitor infrastructure for upgrades and we should really monitor the other security parameters and this is thought [Music] [Music] from [Music] [Music] um [Music] so let's start [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] [Music] to provide liquidity to any tokens on a lot of different chains I'm sure that this is exactly what happened you would have to like go to all the other chains and check it out but you know my question to uh to the multi-chain team is uh what's this part uses aware and what is the consequence can actually use them to draw online funds and more importantly what is this additional trust assumption because validators [Music] so this one then you have something called plasma Bridge some of you again might be aware of because this is one of the two Bridges that you normally use the most important and this particular one has a very interesting documentation it says in the documentation that it provides increased security guarantees because there's a seven-day control period and during that periods you can challenge [Music] um mechanism [Music] but it wasn't foreign [Music] [Music] and the last one that I wanted to mention uh which in the documentation the risks were properly disclosed but again I think that the user should be aware of that if you use the Omni bridge to move your funds to the extra e chain they might invest some of these funds they might actually put the funds that you normally expect to be in the escrow the other intercom whatever they like actually right so normally it's called Greek hypertification this is the practice where you know banks are using your funds to actually invest them and you're running into liquidity based eventually if you were to control it's uh they may not be available they might be like locked somewhere or whatnot right so the whole process is very transparent but the power [Music] thank you [Music] summarize [Music] so first of all differentiates and that's the bridge that means [Music] however a lot of places [Music] [Music] information Networks and I think what is the most confusing for end users is that if you go to a UI of almost any Bridge or a liquidity Network in fact uh some of the bridges are a hybrid sometimes for some tokens they may actually mint you tokens sometimes they may use uh liquidity poles and it like I see the case for the multi-chain you can have like some mixed results some of the tokens might be minted for you as some of the tokens may be actually uh so these types of bridges we will call a hybrid and again if you compare token Bridges to liquidity [Music] uh [Music] [Applause] keep the token information we will face the risk of validators of that bridge and generally those bridges can be quite slow and expensive Networks [Music] end up [Music] [Music] thank you [Music] thank you [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] let's see before those girls [Music] thank you finally [Music] um [Music] [Music] [Music] difference [Music] [Music] [Music] uh [Music] [Music] place questions and as I said before I guess you know the the end game for all of us should be to build trustless Bridges because everything else need to put our trust on some some other parties and these bridges are very very hard to build foreign Bridge there was a bug it was essentially fortunately uncovered and the bridge wasn't hacked but as you can see you know the roller Bridges [Music] right [Music] next episode thousand ether from one version of the bridge to another version of a bridge and that power has arbitrary multi seat right so even though you may think that arbitrary is fraud proofs and whatnot they still have a multi-stick that can move all the funds from the bridge and they did in this area it's actually moving myself [Music] [Music] [Music] in the long term in the short term they might be quite useful because we need that functionality but in long term eventually we need to find a way to actually make sure that the code behind all these roll-ups [Music] I guess for a while [Music] between um [Music] [Music] [Music] oh yeah no one wants really in the bridge to be to be trained by uh by malicious actor however right now it just seems that the best we can do is stations of SMS [Music] [Music] so much [Music] [Music] foreign [Music] [Music] thank you for other mechanisms or things go very wrong okay so I'm going to give another kind of uh thing to worry about um that I hope is going to be at least useful uh uh to you on the going forward basis and it revolves around the term digital ownership of what is digital ownership how is being manipulated [Music] movie theater [Music] thank you [Music] um [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] render of the blockchain was to have an artificial scarcity [Music] I should say a little bit of numbers [Music] that's a bunch of other things [Music] [Music] audio recordings [Music] [Music] we have about two million hours of television news [Music] are getting fed by uh the large media companies um and we have about six million books that are available [Music] [Music] [Music] [Music] [Music] [Music] so they get to basically device and pull it back I guess [Music] they bundle more onto it and distributed it well the family of George Orwell objected and everybody's Kindles and took it off I mean 1984 happened to 1984. um so it is happening time [Music] issues [Music] [Music] [Music] [Music] history [Music] [Music] magic or changes to copyright law will stop this magic of licenses it over steps Publishers have manipulated copyright law it had last way too long and cover all sorts of things but at least it was under rule of law but when you're under a rule of contract they can go and set whatever terms they want and there will be fewer and fewer publishers [Music] [Applause] [Music] foreign [Music] foreign [Music] [Applause] [Music] awesome [Music] [Applause] [Music] foreign yes at scale I mean there seems to be a competition in the United States [Music] what libraries [Music] tonight [Music] foreign [Music] told them [Music] stories [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] thank you [Music] that's the uh um [Music] please engineer some of your systems into building a better web thank you very much [Music] I think we have time for a few questions if at all otherwise you get some more time back [Applause] [Music] [Applause] [Music] [Applause] [Music] [Applause] foreign [Music] foreign [Music] [Music] [Music] thank you they're recruit recruiting of uh adherence and having close-up violence soldiers copies of the SE of the publishing platforms there's also some [Music] of them [Music] [Music] let's see something [Music] [Music] [Music] foreign [Music] [Music] [Applause] [Music] decisions [Music] [Music] I suppose I'm having a little hard time understanding of course so I suppose everyone here has restaurants before right [Music] [Music] thank you [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Applause] [Music] foreign [Music] not every time [Music] [Music] we see you can have a reportable system [Music] um [Music] let's go and spend that money as well as we can to build a system that works [Music] in the digital world no not yet [Music] thanks very much [Music] [Music] I hope you have a great rest of your afternoon again my name is Gloria I'm with little box if you have any questions [Music] foreign [Music] foreign [Music] [Music] thank you [Music] [Music] thank you [Music] [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] foreign hey everybody um wait sorry um hey thanks everybody for being here I see that we have currently some people standing does anybody who has an empty chair at their table want to raise your hand right now the chair is taken it's okay we won't judge um all right so this is kind of a weird setup so we're going to keep this a little bit informal um we have an empty chair here as you can see and we're doing a little bit of a mini Fishbowl um we have a lot of people in here who've probably thought a lot about the topics that we're about to discuss so we want to invite you if there's a question or a topic that you feel like you have something to add come sit with us for a minute and join in um if you decide to do that give us a quick like 15 to 30 second introduction of who you are where you're coming from and then just join the conversation but also leave space for others to do the same when you kind of said your piece go home um so I wanted to open this before we introduce ourselves with a quote from one of my favorite essays of all time um the optimal user is someone who does not want the burden of choice or feels they do not have the time to make their own decisions it is for this person that the modern web is designed and it is this type of person the modern web encourages all of us to be so this is from Zach mandeville's essay the future will be technical it's at coolguide.website it's a really excellent piece of writing about sort of our relationship to modern technology and The Way We Exist online and the ways that it damages us so starting from there sorry I'm gonna pull up my notes again I'm going to have our panelists introduce themselves in a second but um just to kind of set the stage for our topic here um in the modern web and what we think of as web 2 everything has kind of these guardrails on it right everything is simplified our paths are clear you have only so many options and this makes things easier but it's also really disempowering um so I think that we all in this room probably agree that things like can and should be different um but what that means is still a little bit fuzzy right like it's still left to be defined and there's even an argument to be made I think that it shouldn't be defined so much as discovered like in cooperation with the people that we're designing for so with that I'm going to invite the panelists to introduce themselves um let us know less interested in affiliation and More in sort of what you do what your background is um and the kinds of people that you design for who you think of as your users awesome hello I am Scott I co-founded gitcoin back in 2017 I think I'm trying to remember it seems like a while ago now um I think for me you know I actually don't uh come from which is I'm on the outlier on this panel like a design background but I do a lot of community design and think about the role of the community in participatory decision making both in the context of the data that we we run but also in the process of um you know things like quadratic funding which are more about local first sort of community-led decisions for funding and I think um you know that the quote that you mentioned is actually like very resonant to me because the experience telling I had growing up in the web I think reflects that um and certainly was I think like a you know I was at this era I grew up in this era where I think it was just on the precipice of things like Facebook and all these big platforms which I think I don't need to dive into the details on like that we all know kind of have created this attention um and I sort of saw that magic of the internet uh disappear a little bit and so I'm very hopeful that with the tools we're building here we think about bringing that magic back and like kind of think about you know the weirdness of the internet as it used to be as something that we can actually like use in an empowering way within our own communities um so that's just what came to mind but I'll leave it there that's perfect take over um so guys I'm Hester I work as an independent ux researcher I have a background in Psychology and interaction design and yeah kind of do what is necessary at any given time so I I yeah I don't like sticking to a particular function or role too much my kind of fuse I think have been mostly influenced by my last five years or so at status for those of you who are not familiar it's one of the I'd say one of the the older older projects in this space but also an incredibly principle one on bringing privacy and security and participation to everyone by putting access to ethereum onto a mobile phone among other things so that's kind of like what has in a way re-educated me um were educated me in the first place about the uh kind of the ignorance I had around like privacy and data I'd be giving up and um kind of the trade-off that I was making for convenience um for context I also spent a very short stint at um the ads Department of what is now meta um and so I I have a bit of a nuanced view on kind of the big bad wolf of um social media companies uh as well uh seeing problems as very systematic so that's that's another lens I try to look at things from so um I guess that's me uh Rachel thank you um yeah my name is Rachel I'm on uh I work at the ethereum foundation on the privacy and scaling Explorations team with Althea um my background is in Fine Arts I went to school for sculpture and I was doing a lot of work related to um you know how do people interact with um objects and spaces and how can those interactions uh create conversation and communication and um it was also I think a time where I was exploring a lot of like how can you um find metaphor to explain things in new ways and that's what I relate to the work I do on the PSE team we're working with um developers who are creating zero knowledge protocols and apps the content is really abstract and complex so um a lot of my role is like spending time with developers or in conversations with Althea and other designers other communicators and saying like how can we um find ways to make this understandable or familiar so that more people can be involved in conversations around designing for ZK um and the users that we're focused on right now are a lot of other app developers and designers who want to be making their own products with the zero knowledge protocols that our team is creating thank you and I will also introduce myself but I wanted to lead with you guys um so my name is Althea as Rachel said I also work on the privacy and scaling Explorations team at the EF but I lead Communications there um I actually also have a fine arts background but as a fine arts major I really gravitated toward what most people would call crafts so I was a ceramicist I was really a Potter because I I just could never really enjoy or get my head around the idea of creating things for people to just consume I wanted to create things that people would like use and have as a part of their lives and eventually destroy probably or give away or whatever that things that are not sort of there for money or to like you know accumulate value or to just be pretty to look at but things that really are part of your life that you can build experiences around um so Rachel's kind of explained what poc's like user base is but um in terms of communicating with that user base I have a similar kind of approach of wanting to put out things that people um we don't just want to Market ourselves right we've like that's not even a little bit what we do but we want to educate people and like invite people to be a part of this to create stuff with us to give us feedback to help us iterate um and to like just themselves become Builders of the worlds that they want to live in um so this panel is ostensibly about user experience but I think it has to start with kind of redefining what a user even is and maybe just throwing out the word user entirely because it kind of sucks for the way that we want to think about the people that are interacting with the things that we create right like user implies this very passive thing um we make you use it's this sort of client server model of like human interaction and we expect as users to have our platforms sort of consume and parse and spit back out little package things that we can like then process in this very simple and very sort of deadening way a little bit biased on all of this obviously but to think about users in a different way as being sort of more human having like uh you know entire lives Minds responsibilities um like capabilities um really requires a huge mental shift it it means thinking in a very different way about sort of who's on the other end of whatever it is that you're working on um so I wanted to ask you guys like you've all come from more kind of traditional backgrounds right you didn't all start in web three um which is a term I hope to never use again in this conversation and I'm sorry I hate it um because it defines itself against the thing that it's trying not to be right and we want web3 to be something a lot better than like web 2 with a blockchain on it like those foundations are just broken we don't want to build on them we want to rebuild them so coming from the backgrounds that you did what have been some of the challenges or like the things that you've had to really unlearn or rethink or reimagine as you've been coming into this new space and like coming with this new approach I think for me the biggest learning has probably been that so I before I even did anything in in I'll say crypto I love three like the um my work was actually in more machine learning which is very like much removed from the person because I mean you have sort of this notion in machine learning of like working with people but only in the sense that like people at some point made like training data that you're then kind of applying like at a much later point so like people in the past like often like the far past did something now you're kind of drawing on that I think with something like quadratic funding and what we're doing with Git coin it's much more about like kind of even the word the word agent isn't great but like I'll use agent as compared to like algorithm and I think um you know what we're trying to do is like have people form kind of collective intelligence like you know at a given point in time where they're actually present and they're actually participating and they're actually making a decision you know for now for the future um versus kind of using this previous past like training data and I think that's you know one shift that's been really interesting for me to explore and I think it's been kind of exciting to see that like web you know crypto uh tends to be a lot more about like the idea of people being participants in a system even when um you know they're just kind of providing signal or providing some kind of like aggregate information but I think there's something deeper to that which is just like um Simone pop talks about this a lot too also in the Bitcoin Community uh the idea of like kind of human thriving or like bringing your like whole self to something that you're doing I think there's definitely even Beyond just like I think the user experience kind of concept is a symptom of a broader way of framing like the interaction we have with institutions organizations in which we sort of talk about like oh like I guess we're sort of like a customer or we're like um you know one we have one facet of ourselves in the in the conversation but I think it's actually much more important for us to think about like how do we start to bring more of ourselves to the institutions that we're building and then how the institutions change as a result of that so I I'm kind of partly thinking of this in the context of like this shift from algorithm to to agent which isn't entirely correct but is is one thing I'm interested in and then I'm also thinking of it in terms of like kind of bringing like one part of the elephant and that's sort of like blind man and the element analogy uh to like actually trying to look at the whole elephant and look at the whole picture of each person that's in the community to better kind of serve them in in the institution thanks for mentioning the word future because that was my cue to my notes it was like oh yes future that's what I wanted to say um now I always have this um because we were talking about like users what defines users and in in um ux and design like this is like always Eternal ongoing debate right users versus human centered versus um like the creators there's a lot of different labels that you can give and all different views on it um yeah I I have my own but um I think my most uh critical Insight relates more to how we Define ux which like traditionally coming from a psychology cognitive psychology background was always focused on the usability side like how efficient can we get people through flows are we providing the right information but it was never focused around the future context and to me that's that's been pretty eye-opening um to the extent that I actually looked looked up the official kind of ISO definition of ux which actually does include like context and long-term impact of what your experience is when you're using something um and yeah to me it's been most um yeah most interesting to see how the systems that we're building require us to think Beyond these basic flows to talk in design language to what is it is going to be going to do for people in the future be it the like the initial users or indirectly their their context their environment um yeah I'll leave it at that but radio oh right no there was one thing I wanted to say I just it occurred to me just now how interesting it is that we are sitting here talking about participation design and like reminder open tier really just wanted the water didn't you we have to share a mic if somebody comes up that's okay uh Hey guys and actually uh one of the I've been with my team we have some people here we've been labeling uh Building Products since uh 2013 and we got into web 3 in 2017 probably and uh one of the huge issues that we always had with products it's a user experience right and the thing that we have with right now is that it's very hard to get those webto people into web trips so what do you use you use the the tools that we have already like email and password right and we're trying to like to make it really really secure to get those people in a secure in a secure and known for them uh manner to get into our products so [Music] so uh we have we have created the model where you can create an account with username and password and we are smart wallets which means we're built on top of smart smart contracts and we're able to to get the private keys and put them on the browser and put it on the back and we have like two different private keys and this way we are able to uh to get something they already know and to put it in our product we don't want to change like we're not able to come with something like very different it doesn't make any sense to come with something very different and educate people how to use it we're using things that they already know and the other point is that uh basically uh with three and blockchain is not uh it's complex and one of the things that we've been working on is explaining transactions in a human friendly way so you're selling something and we're explaining you exactly what you're assigning so there is no bothering right and basically this is the two keys of our product of course we have very smart people and they've been working on their interesting things and the wallet itself works with abstractions when we're taking advantage of all those beautiful things that we have from the smart contracts in general but this is why I actually attended this talk because that's that's the most important part like to get the web through web 2 users and bring it on web3 that's that's the whole thing in here so we have created a product that my mom can use easily so she has an email right and our our point here is to to create it securely like to to create an account securely into web tree so yeah awesome well do you see like so like I mean you're talking about like kind of privacy security like and I think that like ties in to actually your work like Rachel like pretty deeply like how do you think about like explaining that stuff to users like that just seems very difficult especially with ZK especially it's like even on its own complicated but if you want to respond to that first um so when I joined the team that's where my head was like wow this stuff is so weird how do I explain it to my parents um How can I how can we make these apps that um my friends and family can use and I was very stuck in that like headspace and it took me like a little while before I realized that that was like a misdirection for us and our team specifically because we're making public goods what we want to do is we want to make protocols that other people can build with we want to create proof of concept applications that people can use that Inspire them to build and to make so I really liked also the and thank you for being the first to join us by the way you're very brave I'm not kicking you out but if anybody else does want to come up you know that wasn't so bad right um yeah come on um but I wanted to just like come back to a point that you made about using kind of well now we've got another volunteer um the more the better right but about using kind of human readable language to describe these kind of complex processes is this is something that Rachel talked about in her presentation yesterday also um that yes the stuff that's going on is complicated but a lot of the times where you lose people is actually just in literally the language that you use to describe it that people are not stupid and they're not like incapable but they don't know what a zero knowledge proof is they don't know what a polynomial is whatever it is that like putting that stuff into just more common language can go a long way and it's something that I think we kind of forget that people do like to understand things people like to explore people are curious um so like to kind of Empower people by helping them to understand what's going on and helping them to see the tools that are actually in front of them um so I think that that was a really like a powerful point for thanks for that and do you want to yeah yeah sorry Scott did you have something okay yeah so just to build on what you were saying about complexity so well hi I'm Nelly uh head of adoption at ixek one of the OG's projects in uh in France and well I want to share my experience um because I'm I love Mass adoption and inclusion and diversity in the space and when I joined this project this project was launched by researchers we're doing blockchain confidential Computing and one of our first audiences was people looking for computing Powers data sets applications and it's a very technical um the an equal audience and then my job is going to bring like our technology to masses but when you're doing with oracles confidential Computing you know it's not a cc so we came up with this thing uh it's a new product and uh it's about using confidential Computing to protect our uh personal data so the idea behind this is like hey our protocol is complex and how can we make people identify with our product with our features so trying to sell oracles and you know uh trusted security execution environments is hard but we realize that the thing that was linking us to uh the audience is like nobody identifies with computing power to articles it's really hard but we all have an identity we all have personal data and what we're trying to do is like create you create an avatar and then you put all your um personal data email address age uh everything you transform it using confidential Computing using confidential nfts and this is this the way that now you're going to connect and access products and services in web 3 and then everybody can uh can identify it with hologram hologram is me it's my personal data I transform it and then I connect so one of uh things I learned like try to find that feature that narrative that really connects you uh with your audience even if your project or your protocol is complex yeah I think that's really important like finding something that people can connect to or like see themselves in or that like Rachel said again in your presentation was just really good I'm gonna like reference it probably a few times but something that feels familiar like you know something that um is like something that you know um did you have something you wanted to add there's well just that one common theme I think and it probably will come up like as other people come up as well which I'll like say anyone else wants to come up should um I think it's really actually interesting to think about like education because we don't really like we don't actually educate users in a lot of we kind of do it implicitly in existing design paradigms where we're just kind of like here's the flow and like then you walk through and by definition you've now understood what you're supposed to do there's a lot of like pre-work that's I think required with like a lot of these products that like we're sort of touching on and like I think there's the option of trying to reduce that there's the option of trying to like have people better identify with that and so like just going back to like your your like sort of first question like how are we redefining what a user is like that part of participation is like being involved in kind of learning and growing and like educating and that's actually something that people I think are like often uh in the context of like using a product or being part of a community like sometimes I'm comfortable with um but it's really important to be able to do that so yeah definitely so and that kind of leads me to this one will also be um like another thing that I wanted to bring up um and I think education is like a big piece of this but it's also much deeper um how you inspire people to like to take responsibility for the the actions that they take um responsibility for um you know giving the feedback that helps to shape a platform just responsibility for kind of curating the spaces that we create together um what are some of the other things that we think about when we're trying to like give that power to people and like Inspire and expect them to make that contribution back I can give you a quick response to that no I was thinking along um the lines of the the first two people that joined us up here um that we were talking about language right and how do you um use language to help people understand what's going on and if we want to talk about participation design that's that to me is where the pivot is what between users and participants you need to know like what's going on you need transparency on the system in order to participate um so yeah just like my line of thinking of the distinction between designing for users designing for participants we need a lot more system transparency which also means we need to understand how these things work and especially designers need to understand how to bring a dent to the surface and communicate it but I'm very curious how to or you're going to bring up so hi my name is Germany I like the country um so I'm co-founder of a hyper local Dow in Tampa Florida called Tampa Bay Down TBD for short because we're always figuring out but yeah so one thing we really like to do is like how about the local community and like kind of comes back down to education onboarding because in Tampa we have a diverse group of people old young and one thing that kept coming up for us was before we started getting to like ZK Roll-Ups or different like networks in the uh crypto ecosystem in web3 I realize as we're like doing these like really like um educational like classes is we kept missing the initial principles in which I governed crypto and so what I did was I created this um Visual Web and it has starting in the middle which is the part that people forget is self-sovereignty so people ask me well why are you here and I'm like whatever you read the Bible wipe it like what does it really mean so that's in the middle and then it kind of breaks out into the trifecta and it goes into like trustlessness consensus proof of work proof of stake ethereum so then people start to understand like a ravel of oh now I understand the gray to hold now I see why we need DK Roll-Ups to get for that and I think that really helps in terms of what you were saying as well which is like education is key but education forms of like the principles versus really getting into like the buyer code of like well here's how we got to do this we got to start it like no we don't and so yeah that's all I just like wanted to say with that I thought was interesting because education really is important for that I really want to see that um closed captioning not available yeah I guess it's just so interesting to think about like we all everyone who's talking right now is designing for different audience members um but we're all thinking about education on different levels so um I just I get stuck on this idea that I hear people you know say like well this has to be usable like this stuff is not approachable yet and for me it's like that's okay that's where we are right now but like if we don't spend time like really educating ourselves like the people who are making it and documenting our process and documenting our learnings then like we're not going to get to that like end point that everyone's visualizing where like everything is really easy for anyone to use um so uh like Germany was saying about like creating these visual Maps um creating these resources for people from different learning levels to onboard into the space I think that's just really important I really like that and I think this is something that we forget a lot that like we are also users and participants in this like all of these things were sort of the first participants we are hopefully building in the way that we hope other people will continue to build um and so to kind of build for ourselves I think is not selfish it's practice it's like that's the first iteration and we learn what that learning process is like by having to muddle through it as we go um so yeah I think to sort of just um as Rachel was saying like document those processes and really pay attention to what it's like for us to learn and for us to find that inspiration is really important and and like really valuable and we have a new friend yeah um super grateful to be here in the presence of everyone my name's Sean I'm working on a community owned and operated proactive Healthcare System um so it's a Dao and this seemed super aligned because um in healthcare we think a lot about how we can co-create Health experiences for people especially people combating stuff like chronic diseases have to have some sort of lifestyle change and it's quite interesting the parallels between web 3 web we have to basically design for a participatory experience because if the people involved in the experience are not playing an active part in designing what they want to do and in a sense autonomy in healthcare that helps people stick to whatever they're committing to do um and in web 3 I think what we want to design and what we want is to let people come into a product or a community and then figure out how they intentionally with their own values missions fit in the community unity and we spend a lot of time like figuring out how that looks like for a healthcare doll and I'm curious to hear what your guys thoughts are on that kind of intentionality in community onboarding um I'll I'll just quickly say I think there's definitely thank you yeah there's there's a huge challenge with anything to do with Community which is you know what what is the what is the boundary of of community like what is the community what is the goal of the community what's the purpose why are people there you know what what is their like kind of um how to start what were the principles behind that I think um one of the challenges is always I think actually it's easier in some ways with a defined Mission like you're talking about to Rally people around something that in this case if if it's a you know group of people that all have sort of like some amount of like chronic illness like I think there's a shared sort of Kernel of of um similarity and like a feeling of kind of congeniality between people by definition um whereas you know with something like crypto I think like maybe just not to go too off track we mean many different things by it like lots of people in this room probably mean different things by it and so figuring out like what those uh like kernels are with those like core uh like principles are like like Germany said I think is like really important um as we think about like you know not necessarily even like I think boundaries maybe the wrong word but like what is the sort of like um inclusion criteria in the community and and that's important because you need to make sure that um you know if someone is participating that they're doing to you to your point like they're taking the responsibility doing the relevant work so it's a little bit of a tangent like it's not directly answering the question but like I think that's a really important like just Discovery process for any new community yeah yeah I I this is a conversation right so I don't think you missed any questions um no thank you Sean we're Sean Sean left no you're right there no it gave me um uh it added a DOT for me and like the the framework of going from like user to participation which is ownership uh that's in between and getting this sense of ownership um where and I don't know too much about like the healthcare industry and how that's like transitioning into um letter based um applications not sure what else to uh whatever whatever it's fine um yeah Healthcare seems like a an interesting case because that's where ownership ties to like this very um intrinsic you need ownership over your own body like it makes it very tangible um and if we want to expend ownership to communities you first need that sense of ownership over the community that you are impacted by decisions that are made the same as you're impacted by decisions that doctors would make over your own health care um so yeah just added that question in my mind at least on how do you first create ownership over the community before you um ask or try and incentivize people to participate in it um yeah starting to draw framework here awesome I just want to add a quick point that um with designing ZK stuff um I feel strongly that I don't want people to feel polarized from being participants in creating the like products that use zero knowledge like it sounds sciency or mathy and um I think we have this like obligation to make it approachable so that people like people know what they want why do we have to only follow former models of saying like we'll figure out what they need and design for them when we could try something different where people can like co-create the experiences that they want hi um my name is Manu and I'm one of the founders of doing good also found the member of API 3 Dao and a couple of other dials that I participate um I really like the conversation however I have a couple of things that is bothering me uh quite a lot um yeah most of us are here building tools as you said for ourselves but most of the people that are building the space are actually from very privileged countries and yeah basically those tools are being built are not being built for the people that actually need it um and that bothers me a lot uh also another thing that bothers me is that we are using a lot of terms or we're creating these new terms like um let's say stable coins which are not really stable we know that they're not stable or we call them soulbound tokens what the is that you know um and yeah it's it's used very confusing for people that are outside of the space um it's not really inclusive when we are creating these new terms that cannot even be translated when we talk about staking I don't even know how to say that in Spanish um I don't even I need to explain it all the their time to people so I think that we are getting to a trap um when we are creating all of these new terms and so on um we're trying to onboard people and we're trying to import masses as we say but in reality we're just on boarding other gigs um and yeah it's to me it's it's really bad and we say that also we're creating a more decentralized space more inclusive space with reality is just a bunch of white people just doing that just talking between them um so you know are we really doing what we say that we're doing um are we really using their language and the tools that we have for inviting new people to join us or I would just you know trying to be cool thank you for okay um really thank you for like bringing up some really challenging and like really important points um and there were a couple of different things there that I don't know maybe we can get to all of them but maybe let's start with the first one which was um yeah that we tend to be sort of insular like we're sort of Designing for the people that we see and um this community is you know we would like to think that it's Global but it's really difficult to figure out how to reach people and we end up designing in ways that like make sense in my brain but uh in a place that I've never been in a culture that I've never experienced in a language that I don't speak it can be really difficult to predict which also comes back to kind of what Rachel was saying that um there's a difference between trying to figure out what people want and then make it and then like this sort of hopefully interactive process of inviting people in to like figure out what it is they need and help them help themselves build it um and there's this problem like literally knowing how to find those people um is is really challenging like I don't necessarily know where to look into um try to come with like prescriptive Solutions or like you know go out with my binoculars looking for the person in the third world country that I'm supposed to design for um it's really difficult to um to kind of know where to start with that sometimes so I did want to ask like panelists and and our new friend um kind of how do you think about like we tend to when we do you know user research or um try to like measure the impact of the things that we make um we rely on kind of simplified like easy things like analytics um and like metrics that they're satisfying because you can count a number and think it's the right number and check a box but they're actually limiting and kind of useless and opaque and don't really particularly connect to reality um and they end up also like leading you to design for the people that are already there and certainly not like leading you into new new areas or like inviting new people in so wondering how you think about like how to measure success or how to like get richer better feedback and have that be a more interactive process and just sort of open the borders of it so that more people are able to participate um and more people are able to kind of create hey guys I'm raghav I'm building a community-led fundraising platform I'll be not quadratic um but just to like on what you said I often think and something I was thinking earlier like for quadratic funding right mathematically speaking is not the most straightforward thing but you know like let's say in the third world today like in India I'm from India a lot of people don't have bank accounts right the goal is not to teach them how a bank works the goal is perhaps first let's get them bank account let's tell them okay this is why it's good for you you don't need to know the economics of it yet so I think a similar thing can happen here where like our first goal is as long as you can get the service that we need let's get that to them and over time as that leads to whatever Prosperity we hope for then we can reach a point where we can have education around those things if we just keep waiting for education and just for that we don't provide them what we can provide them today I think that would be a misstep also just to yeah but yeah no I think that's like my biggest um you know I think learning from the last few years is um that like you need politics to be like um what's the word it's like pre-figurative like they need to like basically like you need to like take action towards the thing that you want to see in the world in some way I think crypto does that by definition like we just build things we like they sometimes don't work you know at all um sometimes they work kind of okay but they're kind of janky and then hopefully sometimes they work really well and like are sustainable for like the long term I think the biggest challenge I see aside from dropping my phone apparently is that we really don't have a you know we talk we're talking here about like participants but we don't have a really good way to do that globally as althier mentioned and I think that's still a missing Point here we're still doing better than like you know meta or something like that where like you're literally just in a room and like Silicon Valley like designing for a community that's Global like as if that's going to just magically work for everyone um I think there's more like local first principles in thinking here um but we still don't have that really broad Global participation I think it's one of the reasons that like you know we sort of like as a community need to be having more conferences in places like Bogota to like participate more with local communities um we probably are not doing that enough but I'm hopeful that we're like getting you know in the right direction there quick response to that because honestly I I do think there's a lot that we can learn from traditional companies um in this area of how do you design for local communities um even being at a conference I'm not sure how many people actually go outside of the venue to explore um personally big proponent of field field research a trip to Venezuela was most insightful in my last five years in crypto um yeah just to kind of make the point I think there's a lot that we can learn from traditional companies in how do we um how do we study and work with local communities there is a reason that some of these companies are so successful to the extent that we believe it's detrimental because there are some things that I managed to do really well and understanding uh needs on the ground in local communities is is definitely one of those things dream job um maybe to Riff on that a little bit one of the challenges I found in trying to get more on the ground experiences and insights and connecting to communities to work and design alongside has been that it requires a certain degree of openness in what we're building because you go on like you land you put your feet on the ground and you're like oh my God this is never going to work but you've already spent six months like developing for something that's then not going to work um and so that that open mindset plus the funding um to that like uncertainty of what the outcome will be um is I think something that as a community we can all contribute to um how not sure maybe there's someone here as a better answer the question that I actually came to ask so we speak about obviously ownership and self-solverinity and stuff and that obviously comes at a cost of like fine there's a lot more finality of action in the blockchain right once you sign something you sign it so do you think the future of these apps or anything that we build in this new internet is more about communicating to people that your mistakes or your mistakes and that's okay or is it more about making sure systems are sort of they have the scope for mistakes which can write be from simple steps like and are you sure pop-up box all the way to maybe some kind of like magical reversible transactions on chain I don't know does anyone have a response to that I mean it's it's a great question right and it's sort of the opposite of um or it could be the opposite of the thing that I said at the very beginning about sort of putting like bumpers on everything so that you just can't screw up even if you wanted to um and there is this really interesting dynamic between trying to give people choices and then not sort of putting people in danger by um just like throwing them into a snake pit without even telling them what a snake is first like that you have to give people the tools to not make those horrific mistakes um but also um not do that in a way that limits them from making like all of the choices that you would want them to have um I know you hello I didn't know when the session was ending so I was going to chill at the end but I just wanted I just wanted to thank you guys for the conversation but I think and in that regard as far as like how do we create ecosystems where people are more able to make mistakes Etc I think a lot of it has to do with Progressive disclosure people getting used to some of this technology as they get aware of what's really happening on the front end on the back end and on the actual protocol level uh so just kind of walking them through that focus of like okay this is this is some sort of hand-holded guided functionalities of how you actually get into this ecosystem I think there's a lot of Education communication around language all those things that you guys have already kind of highlighted that will lead us to that but it is a long journey like people need to come and play with this some of this stuff and we don't have the opportunity or test Nets or all these resources where people can experiment with some of this stuff and not have that risk factor associated with it so I think gaming and all these other mechanisms of like pull apps Etc provides you that opportunity to interface with this technology and then learn a little bit more but we need more use cases we need more creative thinking on some of this functionality for people to actually start using it for that we do kind of have to wrap up now but yeah I want to thank all of you and also also was brave enough to come up here and join us you guys brought a lot of really good points and good questions um so yeah thank you for that and I wanted to end on another exact Mandeville quote if I could just there we go um so and I think Achilles actually wrapped this up rather nicely for me to build whatever you're building for everyone we must expect and empower the best from anyone so thank you everybody let's go out and do do that where everyone kind of leaves the room we have this whole room tomorrow as a ux workshop so if you guys are excited and kind of continuing these conversations we're going to have some great speakers from optimism status all the client teams to kind of really discuss adoption and the issues that we kind of face so Alex vandesan like all the design thinking individuals are kind of coming tomorrow giving lightning talks and then at after lunch we'll have workshops uh going on all day long thank you [Music] [Music] [Music] thank you thank you [Music] [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Laughter] [Music] [Music] foreign [Music] [Applause] [Music] foreign [Music] [Applause] thank you [Music] foreign [Music] [Applause] [Music] all right [Music] the temperature [Music] all about [Music] it thank you [Music] guys [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] thanks for coming uh all right so I'm going to talk about uh why and how to run a node and no you don't need any eth so first I want to start off if everyone could help please raise your hand if you've ever wanted to run a node okay pretty good uh and then keep them up if you know how to run a full note okay and then keep them up if you are currently running a node about like maybe six seven here so okay first we'll start off like what is a node well a node is uh software that downloads a copy of the blockchain all the history all the state all the accounts transactions and it keeps that up to date as blocks and transactions take place and it also helps others run a node so when you start up a node you ask all the others for the history of the blockchain um and this is really important because the foundation of ethereum is really like a network of decentralized nodes and without those you know it um you know why are we here I guess we could just build a centralized solution and um have something quicker and yeah so we'll go over four four of like the main reasons why I tell people like hey you should run a node so again supporting the network it's each additional node that joins is additional capacity to the network it makes the network more robust more secure again more note like easier for a new node to start up has more nodes to to get the history from also it's really important that we have people running nodes that are from different clients meaning different node teams different client teams right now it's kind of a big problem um if you've heard of Geth or Goa Theory go ethereum right now about 80 of nodes are Geth and if there were to be a bug in Geth that would cause quite a problem for the network um so we'd much like to have users run like Basu or another mind um and uh yeah this makes ethereum much more resistant and I'm sure it helps the Geth developers sleep at night as well okay another big reason is to avoid lock-in um this has to do with like the problems of kind of the web 2 that we talk about a lot centralization um so uh having a decentralized network of nodes both helps ethereum from being uh kind of like uh locked into maybe a small group of developers or teams and it also it enables like additional systems to be built on top of ethereum and have these properties so uh if you you can build a system on top of ethereum and uh if designed in the right way a property can only really be changed if all the all the users and participants want that property to be changed when we talk about forkability this is what we mean uh one other cool thing is kind of relates to the last slide is you get to vote on changes to ethereum if you run a node so let's say vitalik and some of his friends create an update to Geth and say we want one to eat every block and we're going to send it to devs.the devs.eth and they'll update their nodes you can choose to support them by taking that update essentially voting with their change or you can decide not to and you can not take that update and just run the current version that you're running um so if a lot of users don't update their nodes if uh your the like centralized exchanges and your wallet providers like they don't update their update their nodes then this update doesn't take place but let's say like all of those actors do update um then it's most likely that this update goes through and if you don't have a node then you don't really have a choice you don't have a vote you don't have a voice okay and uh this is a picture from one of italics blogs uh again talking about uh yeah so um if there were to be some sort of attack on on the uh ethereum through this uh like a new update comes in and it's does something bad it takes funds um that would be considered uh like the attack we're talking about here and uh all the users all the node operators that decide to take that uh contentious update there they may end up on one fork and all the other um users and node operators might end up on another Fork and he talks about uh these are kind of like the three scenarios that would happen in this case and uh so we prefer the options like toward the left so we would want something like this to fail obviously and uh however even if it just ends up in chaos meaning like uh you know maybe half the exchanges show one state of the ethereum and maybe half the you know exchanges and wallets show another state of ethereum that's still like much better than uh the attackers becoming Victorious it kind of makes the attack like extremely expensive even if the attack doesn't uh you know isn't Victorious or it doesn't fail I should say it's still extremely costly and then an important question everyone wants to know is can I run a full node um a lot of people I I talk to they want to run a node but they don't know if they can so here are some of the requirements um your computer needs 8 to 16 gigabytes of memory two terabytes of fast SSD storage that's this is kind of the biggest problem for people is is this fast SSD storage even some of like what you might think is like a really fast external storage drive like uh you know it's super highly rated for like moving videos and in photos it might not be fast enough for syncing a node um uh right now only one terabyte is used by nodes to store the state um this is growing about 10 gigabytes per week some nodes have options to use less uh they're kind of they're just beyond like the experimental phase they're like they're solid options but they have their limitations um and don't quite maybe meet all of the uh use cases that people need and then the CPU is not usually a bottleneck so um most laptops that are within like five years old should should do fine internet can be a little bit of an issue so you need about 10 megabits upload download and it needs to be lower latency connection um the data cap is can be a problem in the U.S a lot of Internet providers have a one terabyte per month cap I've talked to some people uh here in South America and they don't seem to have that problem or at least they're not aware of it and then definitely can't really run it on like a slow cellular or Wi-Fi connection okay I'm gonna quickly talk about like the SSD types um kind of the number that you want to know is this like 10 10K input output operations per second um so yeah nodes they are essentially writing like tons of like small files back and forth reading and writing to HUB SSD and um this is kind of like not really a common rating that uh SSD companies tell consumers because it's not quite applicable to what most consumers are doing with their SSD most consumers are just yeah like moving a large video files storing photos okay internal ssds M2 and vme uh that's like very popular now um within the like 200 range you can get for this um and then yeah you probably just want to stick with that the other options if you have them like lying around those might work that's not going to work external ssds uh the reason why like I I want to emphasize this is because I think there's a lot of people out there with laptops and don't have like a dedicated desktop or a computer just for running a full note and so um I want people to be able to run a full node on their laptop maybe like while they're not using it or if they have an extra one um so check to see if your laptop has like one of these connections either Thunderbolt 403 or USB 3.2 okay now this is the interesting part because these are some of the upgrades or potential upgrades coming to ethereum in the near future here so when you hear Pro dang sharding that's eip4488 and actually in the worst case scenario this would add two and a half gigabyte terabytes per year for node operators which is just not really an option for at home node operators so in one of italics write-ups he said that like uh when like if Proto dang sharding goes through like we also need EIP all the fours and uh what that does is eliminate historical data requirement from the nodes which would save like 500 gigabytes and um um and kind of like cut down the requirement on nodes having a store like all of this data State expiry is one that is is contentious again what it does is essentially eliminates the requirement for nodes to like uh keep on to certain to store certain transactions um let's say like before a year or so and um unless that state is updated so I I have a feeling this probably won't go through um so don't count on that stateless ethereum is is a really cool change and no storage would be required for the node so it would pretty much eliminate that two terabyte SSD requirement um it would still be good for no for like some nodes some users to have that block that history but it wouldn't be a requirement so you could run a node and still validate all the blocks and transactions and and really um participate in all those benefits I mentioned earlier without the storage but again this requires like vertical trees and it's a pretty difficult upgrade so don't quite count on that uh ethereum portal network is a really cool uh actually like separate Network separate Network built on top of ethereum or to the side of ethereum it leverages like BitTorrent architecture and would kind of enable everyone to run a light node actually like embedded in their wallet um so like most of our wallets right now they talk to like infuria or Alchemy to get transit to get transactions and send a transaction this would essentially eliminate that point of centralization and uh your light node would actually talk to other light nodes which would uh talk to full nodes whenever you send a transaction so we really promising but uh quite a bit of work there I think they want to have just for a Time reference I think they want to have something out by like the end of next year um all right the fun part how to run node okay uh could I get a quick hands like if you've heard of dap node or ethereum on arm I guess maybe a quarter of the people in here okay so yeah they're great the only um difficulty with running a node with dab node is you pretty much need a separate computer um it installs an entire new operating system which is also can be a hurdle for people that haven't installed a new new operating system on a computer um but they're great they've been around been around for a while and um I would say like are pretty battle tested option two is the command line which is for you know super technical users uh and yeah technical users who are familiar with the command line and um yeah don't mind monitoring their node from a flurry of like command logs um and then this is this is actually from ethereum.org's website um and actually photoshopped nice node here not photoshopped but like edited the HTML so this was kind of like uh the vision for nice node um was like hey we I think we need a third option one that is uh for like the non-technical user there's tons of people passionate in the ethereum community uh who want to run a full node but don't want to hit the command line don't want to buy another computer technically it's possible to just download an app on your laptop and run a full node so why don't we have it so I'm hoping someday uh when this gets to a more stable version that they'll include me on on ethereum.org but uh we gotta approve it until then so I'm going to talk about a nice node which I am working on and so this is what the current version looks like this is our Alpha release version zero and you can see this is just like an app running on I think this is Windows um and you've got both your execution consensus clients here super simple stop start remove you can kind of see like what is it doing here at the top like okay awesome I know how much storage it's taking up I can see like what's the latest Block it's at at it's at how many peers is my node connected to and then kind of in line with this idea that like I want everyone to be able to run a node I also want everyone to be able to like you know no matter what language you speak we'll have a translation for that language um in all of these languages uh were translated by contributors just people with a good heart who came out and said yeah I'll be glad to translate like whatever we can and into another language so a nice note actually Sports translations we just need people who speak all of the other languages to help out hopefully this loads so this is a design for our next version much like cleaner UI at first only the ethereum node will be available but I'm designing it to be General so that you can run other nodes I'll talk more on that so you pick ethereum node then you pick which client you want to run we conveniently show you which clients are minority clients you can select a few options select where you want to store the data at again these are all things you'd have to do from the command line and then this will actually take the screen I think I'll show it to you later um and then we have to install some dependencies here and we just hit start and uh our node is syncing and running and we have this beautiful UI to see our node in everything is great okay so this was this is kind of a key um piece of information for a lot of people is like can my computer run this node um no you don't have to go to like guides or websites to read through things it's in the app uh the app yeah we can see like hey is your CPU fast enough how much memory do you have do you have an SSD does it have enough space all that stuff um we can do so we do it for you and this may differ by client and in the future this may differ by node type meaning the hardware requirements May differ some nodes maybe use a small amount of RAM others you might use more storage so we'll give you that green check mark if you're good to go based on the Note type okay a few more screenshots here um yeah just wanted to leave these up here so you could see them without the video um this is this is really like important to me um being able to change the settings on your node through the UI again to do this now you have to go to the docs of the client team uh try to find like the right flag with like the dash dash uh whatever and hopefully you format it rightly I don't know if it needs quotes uh it doesn't need a comma in between our space you don't have to do that with nice node it's here okay nice node is cross-platform meaning it works with Windows Mac Linux um this is screenshot of windows looks like it's not going to play um so yeah again I designed nice node to be as general as possible meaning as l2s start to decentralize and provide nodes um maybe sync with sequencers nice node uh there should be very minimal changes to support those new node types and uh and actually like users could open a pull request to nice nodes GitHub and and those new nodes would be in in nice node in the next release um so for the technical folks nice note is sort of a UI wrapper around like Docker containers um so any any node type that has a Docker image will be like really quick really easy to add to nice node um and uh yeah eventually we want to add things like staking as well um so this is a UI screenshot of like what it would look like if you were to add validators and then you can just kind of see like yeah uh arbitrum does have a have a no doubt I don't know if um I don't know how involved it is in their their Layer Two yet I think it might kind of just be like a replica node and not quite uh the same priority as as um they're kind of like their own and then The Ant and Beyond here is okay if our if our like web three dreams take off and web 3 infrastructure is really where we go to and the users control we control the platform and control the data then we're going to want users to run uh some of these web3 infrastructure nodes so for example like this video is being live streamed over live peer and uh they have a network of video trans transcoders um and then so they transcode this video and that's that any any one of us if you have a graphics card can join that live peer Network and um we can use our graphics card to right transcode that video um so this is just one example of yeah like a web three infrastructure that users can participate in and uh and have more of a say in and it's something that uh I think we can support and uh so we show it here okay and this I think this might be the same video okay and that looks like the same screenshot maybe I hit it back last time okay a little bit for our road map um so we're really close to releasing uh the redesigned UI ux uh and the super simple onboarding walking you through like the hardware requirements other things like that um I want to get more translations um we're um we're gonna work on that hard push on that hard hopefully by the end of October here um after that there's some internal changes that we need to make to support more node types for the future for the technical folks that's uh Docker compose that means kind of like there are nodes that have contained multiple Services um and so that that will help those node types um and then additional features I think I can show you these after um so yeah no notifications if your node has an error log like we'll we'll show you a notification that error log won't get like lost in your terminal and you'll never know about it um and then you can like search logs maybe if your internet goes down we'll notify you that your internet was down for a brief time and then after that yeah by February of next year we'd like to add Layer Two nodes and more web 3 infrastructure nodes all right so it's it is critical to ethereum's Mission of decentralization censorship resistance and resiliency for users to be able to run nodes and um this is this is extremely important to me because like all of the other good things we talk about here um you know will only last will only exist will only really be possible if uh we have a truly like user-led um a culture of like running nodes and um if the core devs continue to make it possible for users to run nodes so yeah for like if we want this dream of like open Global infrastructure super low transaction fees for the world like open Financial system um ethereum for everyone we need users to continue to run nodes and nice to know the mission is to simplify node running and thank you gracias artoros so yeah I want to open it for questions and um uh let's see I just want to move it to this slide uh so yeah real quick if you want to help uh we need everybody um join our Discord reach out on Twitter um there's a website here you can translate on uh which I'll get notified as soon as someone translates um so that's cool too and yeah question time so why does it really matter that they're more and more non-validating notes in the network why does it matter so much and isn't it easy for some big entity or to just deploy thousands of full non-validating nodes which don't need to stake teeth to overpower recycle attack okay so um tell me if I understood your question right so your question is what's the importance of uh non-valid non-staking non-validator nodes like without eth um what's their importance um yeah yeah so uh it's a great question and um what it does is uh the non-eth non-staking nodes actually keep the validators it keeps the e-stick nodes honest so yeah if let's say um some centralized staking service gets yeah 75 of the validators and they want to push through a block that sends all the youth to them uh the non-eth uh nodes will say hey that's like that's a funky block that doesn't apply that doesn't follow the rules of ethereum that's you're trying to steal someone's money reject that block I'm not like I'm not gonna I'm not gonna take that transaction and share it with anyone else I'm going to drop it and say that's invalid so it essentially keeps them honest foreign [Music] premium on cycle attacking Networks like if right now you have ten thousand push another 10 000 into the network is very easy to know so how how strong really is the defense mechanism yeah that's that's a good question so like if someone were to on a some cloud service just spin up like a ton of non-eth nodes um I think it would be I think it would probably be more costly than um it would be I think it still would be pretty costly um and I think even if let's say they have triple quadruple the number of like honest nice nodes uh then I think the attack would still fail or it may in this case uh default to chaos so I think it um I'm probably not the best person to speak in terms of like hey we need X number of honest nodes but I think um a sufficiently so so right now I think it's it's at about like 8 000 and um yeah I don't know what that right number is I I was reading one of italics blog and I think he even said I'm not sure how many it is it's probably more than like a few hundred but I don't know yeah yeah I I yeah I'm not the best person I hope the court devs thought about that okay um my father could run it my mother could run it in her home to Tech um so if they get all this set up and I show them what ethereum is and they put all this money into it now they have this money running on this Windows computer there and it has no battery backup it has no they just shut it down because they they don't want it running all night well obviously now they're getting slashed and so you have a lot of these people who don't know about these things you know how Hardware aren't you kind of concerned about that or maybe they think I want to set up two they use the same contract addresses a set of two and boom boom boom they start getting slapped as you can too have you thought of uh like four people get into this like yeah yeah that's a good question is like if we do make it easy to use like we need to um also make make it very clear like what they need to do and um and then probably also make it very easy for them to uh like stop it or withdraw or um note of notify them um so yeah if we're gonna make it easy for people to onboard we also need it that's a great point we need to make it easy for them to kind of get off or help them get off website later there I mean that would be one of the vendors how responsible nice nerves responsibility to do that for like a 10 minutes yeah I think the quick answer is I would um in the app we're going to just make it like super obvious like lots of warnings like hey this need you need to have your internet on you need to have this computer up um and yeah hopefully it's our solution's a lot better than the Alternatives like hopefully we're way better at notifying people um when their node does go down things like that yeah no no win symptoms right now for for a non-eth non-validator note yeah so and that's a great Point like if um if you're someone who um like the SSD is like a big uh commitment for you or purchase like maybe running a full node I don't want to discourage you but maybe it's not the best use of of like your money or resources like that there are there is no like direct incentive at the moment other than obviously like making sure ethereum um works and stays up so um it is yeah that's a that's a great point yep just launched it was also also the first possible I think he's more of a challenge yeah I mean certainly we want to make it as user friendly as possible and we know one thing we have thought about is like letting users opt into automatic updates for their nodes so um wherever possible they don't need to need to do anything um and I think that yeah that's that's probably a big part of of running your node is yeah just doing those updates and then having some sort of like alerting um in terms of like if some some other problem were to happen like we would try to diagnose it as best we can but um I suppose they're like for an issue we can't diagnose I yeah I don't have an answer but it's it's something I'll definitely um uh keep in mind okay yeah yeah the other thing I do want to have is like if uh I'll like show the command that nice node used to start the node so you can just copy and paste that command and like leave the app if you want and then you can just go to the command line and yeah that's that's something I want to do too right here thank you so much so I really like you to see this kind of UI this guy continued you trying to get in this with a basically to say like how to do a one click application and my question is um when when your team like a build is is based on like uh there is a research behind like uh for what kind of age or or what what is the um this kind of people that can afford like even in this easy to us maybe that kind of a stance and it selects off it's like optional and stuff it'll be Elite top for uh an album so even our God like uh this is like accurate for this um age people or non-tennical people okay so um just to repeat uh for the the stream um it sounds like there's concerns that uh we need to make sure that uh if it is super easy to get in to get started that uh we make either some guide rails or some some um just make it the user aware that what they're getting into and um so yeah I mean what I'd have to say those concerns is um I think we we could do something where um instead of letting like the user it's just something I thought of now like click like yes yes yes yes yes and then they're good to go like deposit maybe having some kind of like um speed bump kind of thing where like they have to either like demonstrate some technical uh um knowledge of like what they're getting and then getting into just sort of sort of like maybe basic quiz or something like that um but other than that I mean um yeah did I did I um address your concerns was there anything else or um okay yeah I think maybe some sort of speed bump just so they can't click through like super fast and get themselves into something they didn't uh know and now this program is taking up all their SSD space in the background um yeah absolutely right there in the White uh sweater or yeah I think you were first but blue shirt um so if um if you don't have any and you're not staking no slashing um if if you're staking with nice node and uh your node were to go down it would be slash just like any other note that's that's a great question um his question was could this be a web app and um and I I don't think so as of now I think uh uh I think there are limitations on the browser which you can't basically run a command a web page can't just like run an arbitrary command on your your computer but like an installed application can um so um now the front end part of a nice node we could separate that out and put that as a web page um it's actually uh it's actually like mostly the front end is basically a web page it's basically running in um chromium there's the underlying architecture for a nice node is called electron and it basically downloads chromium and so it's it's like its own little web browser there with extra permissions to interface with operating system yeah any other questions here again uh right now uh no plans I want to stay open sources as long as possible we have been supported by first e-staker in a Sierra CLR fund and then get coin two rounds of Bitcoin and then we we recently got a grant from City Dao which funded the like improved onboarding experience that I showed you all today um and then hopefully we'll get more grants and stay open source yep I've seen people ask that um I think if there there could be in the future and I I think absolutely I think there are lots of um groups or foundations um maybe like eat steak or the ethereum foundation who would provide some incentive I think the limitation here is probably like you need to prove that the person running the node is a human or that perfect Humanity civil resistance problem so um I haven't thought through the whole like consequences of tying your perfect Humanity ID to your node but I think with that people would give out incentives um other than that I don't know uh I don't know how they would do it without civil resistance yeah uh if you're not staking or not validating there are no no incentives no yeah no monetary Rewards yeah yeah I mean that's something I've thought about uh I haven't like quite worked on now but uh the operating like the app can know whether you're on battery whether you're on power whether you're on Wi-Fi ethernet um uh right now we don't have like any internet speed check but that's something we could definitely add so I wanna I I do in the long term I do want to make it so that yeah you can close your laptop a bit the node stops peacefully wherever you go next you open your laptop maybe just plug it in you eat dinner and it's it's sinking like while you're uh yeah and then while also potentially like you get we could have a setting like while you're while I'm working don't use resources like just run in the background or like just pause while I'm working maybe from my typical work hours um yeah okay all right anyone else okay I think that's it I posted the slides on the nice node Twitter um there's tons of links in here um so you can check out the slides there awesome thanks everyone thank you and uh gracias is okay that's it [Applause] we're already starting some discussions with l2s about how they can directly fund um [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] it's important to have also a variety of approaches different curators different uh mechanisms so that we can make sure that the incentives to contributing back to the internet [Music] no it's not mine sorry my Spanish [Applause] almost almost [Music] okay yeah yeah [Music] how does the protocol guilt so one thing maybe I am already on the speaker so one thing maybe I will share my connection for internet but if something goes wrong maybe you could also share yours so that like um if they start doing some weird stuff you know there's other options for people clients and obviously more clients their influenced have an influence but nevertheless you know they have the tokens I know these kind of questions yeah you definitely uh picked the hardest question it's given they announced yesterday so yeah this is this is really interesting and digs into it touches a lot of different areas about protocol governance incentivization funding the core protocol work and like you said I don't I know them all personally um so I do have a bias here but I do expect that they will make mentality I can't comment stupidity [Music] undue influence [Music] [Music] thank you [Music] foreign [Music] leaving or joining leaving um if they're leaving so they can they can claim any assets for investing at any point but there are windows in the contract so once they leave the contributing core protocol work they can they won't receive future vesting but they they can claim at any time it's permissionless like that does that answer yes anybody else I have one sure how do you think about deciding what should be funded and how do you sort of in a way to waiver get ahead of not having favoritism kind of come into play yeah this this is something that we've been trying to iterate on through the pilot and one of the reasons we wanted to start really small I mean 10 million is it may seem like a large number but split between 120 different core contributors it's not not that massive but eligibility [Music] [Music] [Music] foreign [Music] [Music] the pros and console so resurrected funding is great that plug into that however [Music] because protocol is biased towards the individuals on these programs rather than possibly missing somebody for the past few years but yeah I'm super excited to plug into retroactive money through that are a good fit for these types of things do many of their last questions great well please give Trent a big round of applause thank you [Applause] we'll take a one two minute break before we get ready with the next talk so uh you can stretch a little bit and we'll be resuming in two minutes ah foreign [Music] [Applause] [Music] [Applause] [Music] [Music] thank you [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] thank you [Music] [Music] all right we are ready for our third talk for the afternoon and for this talk I'd like to invite Alex to Stage to talk about building blocks as it emerge so without further Ado please give a big round of applause for Alex steps [Music] okay hello great hi everyone good afternoon thank you [Music] besides things the landscape around this topic um [Music] [Music] I kind of always said that putting currency it's like this double-edged sword because you think we got started [Music] foreign okay hello um can you hear me oh perfect thank you so hello everyone welcome here in Bogota and thank you for coming I'm Attila and I'm From The Storm foundation and today I'm going to talk about the swarm the where the project is at the moment how you can run a light node how you can run full node and talk a bit about future plans as well so I don't know how many of you are familiar with swarm but basically swarm is decentralized data storage and distribution technology so also I'm not sure how much of your family are with this original idea of ethereum being the word CPU but at that the Swarm origin is coming from the same time and then at that time there was this idea of this Holy Trinity where ethereum is the word CPU swarm would be the the words hard drive and then whisper would have been the messaging system and like things turned out to be differently but still the the idea and the roots of storm is coming from that so you can think of swarm as being the a huge hard drive based on peer-to-peer technology and then when I'm talking about swarm people usually ask me okay so how is it different from ipfs like this is the question that everyone is interested in and then um it's quite different but since the the goals of the projects are similar then I think it's worth mentioning like what are the there's some kind of core ideas that are built into swarm and maybe differentiating with different uh or alternative decentralized storage system so one thing is that uh swarm has a very strong focus on privacy preserving and being permissionless so it means that you in order to upload to the Swarm to the this world hard disk you don't have to have a node so that's a different from ipfs you have to have your node and I will talk about later like a bit more the the differences in like how the data is handled but then again going forward on this list like uh swarming interim native which means that it uses a lot of Primitives like crypto Primitives that are used in each room and also the smart contracts it uses are running on evm so it doesn't invent its own blockchain and it does not try to create that problem because that is solved by others and it's the area of focus it has robo's defenses against blocking or changing access so that this is kind of the thing that we call censorship resistance so once data is uploaded to the network as long as there is someone who wants to keep it on the network then nobody else can take it down from the network or that's the idea and then I will talk about later where we are with that there is also a feature which is like Auto scaling so the the because this is a country this is a distribution Network as well the data is uh you know when the data is downloaded then the copies are stored on nodes and therefore uh it's it's available on more nodes so that it has this other this property that like more people you sharing the same kind of data sets the more it copies there are on the network and that can help with like CDN type of functionalities there is integrity protection with content addressing but also there is mutable updates with sign chunks so you can have both of these things together and with that you can think of also like as a not only just storing like static data sets but like have data structures that can be updated and can be used for application layers and eventually it forgets data or content that is no longer relevant to preserve so as I will explain like you have to pay in order to get the data on the network and if nobody is paying for the data then it means that it's no longer relevant so it will be deleted so these are like from this you may get an initial impression and I will go to some details but not in a very deep level because that's not the focus of this Workshop it's more it's going to be Hands-On so don't worry just I just give a small introduction so that everyone is on the same page so basically when you upload data to the Swarm what happens is that swarm takes the data splits it into 4K chunks and then assigns the the I am done optionally currently it's optional and encrypt the chunks and then based on the chunks content address finds the nodes that should be storing it on the network and that means that the data is spread on the network so then you want to upload uh a data any data onto the network then when you have a node then it will find the nearest nodes that matches the content address of the of the data of the data chunk and send it there and then when you try to download the data the same logic happens so then basically you access any nodes and then it will find the route on the network and then get back the chunks from the the nodes that has the address closest to the chunks address and so that's the basics of like the storing data on Swarm and the main Concepts and uh also there are different kind of nodes so as as Farm evolved we realized that one size does not fit all yeah and then at the beginning we only had this full node functionality where like the nodes were storing data it was also used for accessing the network and uh like basically all the functionality were in the full nodes but eventually we realized that most people won't necessarily need a full node functionality so we separated like into different ways how you can access the the data on the Swarm Network there is a gateway that we provide as a as a free trial version so to speak there is a neutral light node which you can install on your laptop and then it doesn't use too much resources but then with that you cannot upload to the network because in order to upload to the network you will have to pay for the data for someone to store it for you and that's something that you can do with a light node and I will I will install this on my computer like we will see like how the internet works so far it was not always great but let's uh I hope someone like sacrificed some goals to the demo Gods today so that we can have some luck with that um and yeah so we we basically realized that if you want to see like a web 2 kind of view of like this uh different products packaging then I can show you this that basically there is a free trial on the Gateway that you can access from the browser you don't need to install anything you can just go to this website you can upload it or download it but it's limited to certain size and then also that is the nature of the gateways is the Gateway operators must uh you know comply with the low and then remove some data and then at that point like censorship resistance cannot be maintained organized if you want to access directly the network then the the recommended way to do that is by using either the Swarm desktop app which is like easy to install and you can install it on your laptop or desktop computers and then most we recommend this to most people that want to create data and store Network or just want to Simply access the data on the network and it comes into varieties like this ultra light node which does not require you to do any kind of transactions on the blockchain but that's limited so then you can only access data but not upload if you want to upload you will have to buy the the Swarm native token which is called Bzz and then with that you can buy capacity on the network so that you can store your data and with the full node you can it has the full functionality but it also means that you need to run this on a Model more slightly on a separate server because like if you run the full node on your laptop machine for example it uses it it may use your network connection in times that you don't want to it has to be around 24 7 because then that provides the availability for the data for others on the network so if you close your laptop then I will talk about later like you wouldn't be able to participate in the in the earning part of the thing so like how you can earn money by by storing data for other people and um so yeah like we realized that the the full node is not a very good choice for most people having running it on their laptops and stuff so for that we recommend the desktop app and the full node we recommend people who are more seriously want to store data for other people and then so maybe to recap like this like the light node considerations is lightweight use only in resources if you request them on demand so it doesn't have to be running 24 7 and you can start without a penny so that means that you don't need to make any transactions to start using it but um later you can unlock it with more functionality and the full node has different Hardware requirements so like currently we recommend that you can start running on Raspberry Pi with like 4G Ram 70 gigs of disk space it has to be an SSD so most likely if you want to use a Raspberry Pi you have to connect your external SSD to that because it's quite demanding on the disk storage system should be it's always on so it's supposed to be run 24 7 and you have to do one transaction in order to participate in the uh in being a full node basically you have to deploy a checkbook contract so that you can participate in something that we call the bandwidth incentives so let me just talk a bit about that so basically there are two kind of incentives there is bandwidth incentives that is like incentives like money that you can earn for sharing data on the network and then there's storage incentives that is like you can earn by storing data for other people and so like everyone maybe I don't have to explain here the importance of instances incentives here but like maybe what's relevant here is that like these two things are separate and currently um only the the bandwidth incentives are uh running on the on the main net So currently you cannot really earn by storing data for other people this is something that we are working on currently and this is on testnet so we are planning to Rolling it out like soon once the testing is done [Music] um and yeah so maybe just to show you like the the data economy in the network is that what we see is that what is interesting in swarm is that consumers who are downloading data from the network are actually paying for uh downloading data so there is a way to to use it without paying but that means that your uh your speed is limited so that you don't basically the the nodes are prioritizing paying nodes who are paying for downloading content and so the the interesting thing here is that uh this enables a new kind of economy so um like the currently the internet has this problem that by storing data can be quite cheap but the problem is that if you try to store a large amount of data and it gets your project yet successful and people start downloading data from you then suddenly your costs are not on the storage side but actually on the bandwidth side so if you're using Amazon or something like that then you will have to pay a lot for the the bandwidth and that can be for small project that can be like prohibitively expensive so um like storing like I know I had this example that's storing like 40 gigabytes for a year is like a few dollars maximum but like if there are like 10 000 people downloading that from you you can start paying like money in the ten thousand dollars range and then small projects may not be able to afford that and by changing this kind of Dynamics and making the downloaders pay can enable new kind of applications where even like small projects can afford to to host big data sets and also this enables hosting public data sets or common good data sets that we consider like for example Wikipedia data or or open street maps data or like it would be good to see like blockchain data it doesn't really make sense to blockchain database stored on what the the nodes it would make sense to have like one common good space where everyone could finance and and maintain as a common goods and there are many other use cases that this can enable and what I see here is that this can create this kind of new kind of applications where business opportunities can rise when data creators can create they can create something that is stored on Swarm and then that can be shared with consumers and then here you can figure out like you upload data you get back the reference and then giving access to that data can be turned into business opportunities so that is also something that we we considered solved problem and now I'm going to the the more Hands-On part of the the workshop so I will go to the terminal and do some stuff that people does usually in the terminal and so the first thing I would like to talk about is that uh so the the Swarm currently has an implementation called B and you can download B from the website and you can install it on your computer and then you can configure it and start interacting with that and uh so there is a Dev mode for this like I wanted to show this to you because that's quite easy to use and it's quite handy when you when you are not sure if you want to be invested in this and you don't want to spend too much time on that so basically once you have the B binary installed on your machine which is called be done this Dev mode can be just invoked with this B Dev it starts up and then it's ready to serve requests so you can access the the B API on the port 1633 and it also has some other functionality Imports 1635 like it's currently that like data related functionality can be accessed on the 33 port and then administrative functions can be accessed on the 35 and maybe I can show you like the um the documentation for this so like we have a quite complete documentation so how the API works and then maybe I will do this at the end like once I went through all the things so I just wanted to show you that basically like trying it in Dev mode can be quite easy and it does not take you a lot of time if you just want to try to um upload data download it check out filter API then and I this is the recommended way to do and then there is a desktop app so for that I will need to I forgot to do this but I will do some quick uh housekeeping so application support so I already have it installed on my machine so I need to basically uh uh sorry about this so I just moved the folder so it forgets everything so you have you can go to the website and then on the website you can yeah it's later this is going to be handy so on the website you can download it and I already downloaded it so that it's on my machine and I don't have to rely on the network however like installing this like this is a completely networked software so um in order to demonstrate this I I will need also network connection to be working but the point is that um so there's a desktop app it's an electron app so it's available on all major platforms Mac Linux windows and uh it has different versions that you can download so if you this is the GitHub page but you can also download it from the website and once you have this file on your machine okay wait let me just find this like here download swarm desktop me sorry about this um zero okay so now let's do like how would you do it so I download the x64 DMG version because I have the okay maybe I don't do that okay sorry uh I will just open the downloaded version work so you yeah okay I already installed it so I just need to start it like you install it as a Mac app you put this in the application folder and then you start it and uh it starts with downloading B So currently it's a it just uh yeah it's again I didn't think of this because on a normal Network this doesn't take too long and this is only needed because we support M1 Max so it has a different version and it has different B version so it downloads the M1 Mac V version if you have an M1 Mac or M like apple silicone version and then it for me it's an old Intel Mac so it downloads that one and yeah after that so as you can see like this is a desktop app you have to go through the installer let me check like where it is so so it already created the things but downloading B um [Music] so you don't have to wait for this normally it's like this if if this doesn't work out then I can I can show you the an already downloaded version and installed the only problem with that is that there is a step like when you download the app first it starts in a mode where um like it's a it's a this like ultra light mode so it's it's a limited version you can only access data but you cannot upload and in order to unlock this upload functionality you have to do the thing what we call the cryptoboarding and that is basically you have to fund your node so swarm the swarming that uses the diagnosis blockchain and that means that you will need to have some X die so that it can make the transactions for you and also for uploading data to the network you will need the BCC token so my I will cancel this because like it's not not working very well and that's not good but I will show you the the network anyhow or the the version that I installed that I had on my machine installed already so I will just need to put this thing back the library application support form and if you have that then when you start the app like that no foreign yeah okay me that's the demo effect and then the network um yeah maybe uh so I'm yeah so I did some testing and they did not really work well so this is I might try to do my network connection and yeah I managed to override this for some reason that's not good but we will oh yeah that's true okay thanks for like in the in the when you're sharing a screen it's not necessarily the you see these things I put it inside okay so that's good so we will need to do some okay and we'll just put back the here remove the application supports from desktop so it means someone is listening to the while I'm attacking and that's good news um [Music] all right okay let me check yeah so now you have all the files downloaded and it's already set up and for running and we just need to start it so in this case it just starts up as this one small icon and then it opens the UI in the browser oh and something is happening but this is not what I expected but anyhow the the point is that like if you have a working internet connection like then this is this is working so and then you can do this so yes I can use your computer you have HDMI Defcon Workshop Wi-Fi all right oops not that one that one so wait um something is working actually so we sorry about this the password okay okay thanks thanks everyone all right let me see if it works better or not okay so it's somewhat working like it's I can show you the the most functionality of this thing so so yeah there is one warning which might just go away once the network is in a condition where it should work so yeah like you can see that I have connected 214 other nodes it won't wait yeah okay it's jumping around so this is not what usually happens [Music] but yeah it's like you connect around 100 nodes and 100 Pairs and then you can use that to uh to to upload and download data you can go here absolute download so the only difference is that in the when you install it in the first time you don't have the wallet set up and you don't have this checkbook which is also not working at this moment but the the point is that at that point you have to do this crypto wording and for that we actually have a way to like different ways to do like you can use either a gift code which we have here so if you are curious and want to try out and you don't want to buy busy easy then look for gas pair here and then he has a bunch of codes already printed and then like give it a good internet connection so that to to have a good experience on that you can also set up its uh with X die and we also provided some guides how you can do it with with a bank card but like maybe a crypto so don't do that uh use the codes and then so with this app then you can hear like you can upload and download content I'm a bit like now scared to try it because this might give you the impression is not working but it is so like I will upload my presentation in this format I need to add the positive stamp okay I have one so there is this concept of postage stamps so when you have uh the money for for uploading basically the this postage stamp is something that you need to attach to your content and basically it's two things like you buy a capacit certain capacity for a certain amount of time so this is like the post we call it postage stamp and then you attach it I mean format it's easy to all your data that you uploaded and this is how the the node the store nodes know how how long they should be preserved and then this is also used later for uh the redistribution of the value of the posit slam so the node operators uh when they have the data stored uh in the storage incentives game but I will talk a bit about later uh they they participate in that and then they get they can get the value of these postage stamps so here I chose the postage slump and then I will upload it and then we will see all right so something worked uh I mean I this is a cheating a bit because I managed to upload the data to the my locally running swarm node so it doesn't mean necessarily that it's probably propagated to the network but um yeah it's like it would be good to share with someone and download that but like this is how it works like it generates this hash and you can just copy this hash and then share it with someone else and they can access the data with this hash from the network and yeah it has some functionality where you can manage your wallet and then your balance and your checkbook so the checkbook is the thing that is used for the the bandwidth incentives so if you if you are running a full node then this checkbook is uh you that you don't necessarily have to put money in it but if you want to download big amount of data then you can basically make it faster by by putting money in the checkbook and then how it works is that when your node is requesting data from another node then they create a balance between them and if your node is only downloading then your balance will be negative so then eventually you have to have to settle that balance and then you can do this with the checkbook and if you have a full node you don't necessarily have to do this because the full nodes are participating in in sharing the data and and then basically your overtime your balance will even out so you can also do that if you want to use your phone Note for uploading data as well but it's not necessarily to do that and then we have these postage stamps and then here you can see the statistics of Frosty sample manage post distance like this is a the idea for this is that you can like basically create different kind of content but you want to to share and for how long and then for those like different kind of categories you can create different kind of postage stamps and upload the data uh according to this category and there are also a feature called feeds so this is the the thing that I talked about this mutable chunks or mutable data with sign chunks it enables you to to create like um a version that can be updated over time and then with that you can hear in this in this UI you can even use that as a for example if you upload your website then the basic model where you upload it will be like you can you will graduate the content hash of the data that you uploaded but that will change over time as you as you change your website so if you want to avoid the paying the cost for like updating your website every time in in ens and then point it to a different DNS record and pay the transaction cost for that you can this you can use this feeds functionality and then basically update you can you can update your feed and then your feed will also have uh fixed it's like not changing hash that you can put in ens and with that you can update your website through the feeds and that for that you don't need to change the the cost on the blockchain and we have some settings here so this is the desktop app basically just a UI and it looks like it stabilized a bit so now we have all everything working seemingly and then we have like a normal number of Piers uh and yeah this population is not very correct so we we have some analytical tools and it shows that there are about 2 000 nodes in the network currently so it's like not 80 not 3 800 and most of the nodes are actually like run by organizations that support swarm so there are individual nodes as well and you can also start your node and I will talk about that in a minute so I will just stop this down because like this is the so this is the desktop element if you want to try out look for that guy um okay so then there is another mode which like the full node um so in order to do that uh you need to read a bit about like the the documentation and we just realized that it seems like most people recently doesn't really like reading or like reading documentation or it seems like the the way how to do this better it would be video maybe but so we have documentation about this but we often get questions from people like how to do that but actually the the documentation has this um like it describes the the necessary steps and then I'm going to go through this and explain this maybe it's it's complicated how it's written but this is what you need to do basically you need to create a config file add six or seven things to it and then you are good to go so let's start I will start from an existing config file because I already created this and I will go through that line by line so that I can explain like how it works so this is an existing working full node setup maybe I can make it bigger oops I mean I made molar so um so yeah like first of all like you need to say tell me that it's your support you want to run it in full node so you have to do this phone or true you have to specify a data there so like this is where your files live and then this is you have to make sure that on that disk where it points to you have enough space for that and it's also you have to make sure that it's an SSD so that it's fast enough there is a password don't use one but uh I mean that works for demo purposes and that protects your your wallet but like what we do what and what we say here and maybe what's important to mention is that um so when when you start B the first time it creates its own wallet and the reason for that is that we don't want people to accidentally you know import their their wallet with their funds in it and then you know like you it's much better just to start your your node without uh with having an empty wallet and then fund it and then let it run uh because uh currently there are there are ways to to secure your wallet so swarm also uses a thing that may be familiar from running gets this clef so there is there is a version of clef which works with swarm which is called B clef but we found actually that's that was one of the source of the problems of installing your swarm nodes so that made it quite complicated and because of that we no longer recommend by default to to run it with clef also we recommend people that don't put a lot of money in their full notes or be in the in the storage incentives I will talk about like if you want to participate in the in earning BCC you will have to stake some money in it but the the car current stake is like 10 bcz which worth like five dollars so it's I think it's like five dollars is not really worth the hassle of setting up a b clef and just you can secure your thing with a reasonable strong password then there are two other config options that it's also documented but um I will just tell so the swap endpoint is maybe it's a it has this historical context so initially we had this the swap is called the bandwidth incentives internally in swarm lingo and for that you need an RPC endpoint and I just added one it's a public endpoint but obviously you can use like on uh on diagnosis chain it's like you can use get block or or whatever provider you want to use or you run your own uh no bars but so this is an RPC endpoint to access the blockchain and you also need an initial deposit uh config variable so by default it's not zero because as a historically we we recommended people to put some money in their check this is for the checkbook so in order to have some balance but we found out that in order to start you don't really need this and if you don't want to use your full node for uploading or downloading data then you can leave it to the initial deposit to zero in order to do that though like there is a an initial transaction if you want to run uh uh a full node it deploys uh checkbook contract and for that you will need some X die in order to make the transaction but that's the only initial cost that you will need and there is this thing which is documented also that you can fine tune your your B nodes to increase the default number of open files which is something that Unix system have like basically the open files can be open files but also the the network connections in Unix are represented as files and then we use quite a few network connections so it's better to increase the default values and then one more option is this resolvable options which is only necessary if you want to use ens so there's ens integration of swarm that if you have an eth domain registered then basically you can you can set it in DNS record you can set it to your uh to your swarm address and then it it will work with swarm but it only works with swarm if you set up a resolver for that and since this is happening on ethereum mainnet this requires a different RPC endpoint that the swap endpoint so this is a kind of a trade-off and this is also optional and this this one this last option is only needed if you want to enable the debug API so we want to have access from the HTTP API to the internal administrative functionality of your node most likely you want it so I have for the sake of completeness I added it to the to the default configuration and I will just try to run this so let's see I will skip the step of like doing the running it one by one like so starting it and following the documentation step by step and then if that fails then adding the new one the new config line I just just I will just use the prepared config that I just explained okay um why there is no B here I will just use I have one I usually build from source so okay address already news okay so there is something running here already it's not the ah sorry no I am wrong wrong tab it was the the dev mode so full node B so this is how you start it you specify the config file and then you start it and then it runs I will make it a bit smaller so that maybe you can see more at the same time so what you can see here is that like you have a node running and then it connects to all these other nodes and then it sometimes locks things like this like you know you have to be familiar with these things I can show you how it looks like from the beginning so you start it it prints this B and then some things it prints out some public keys and addresses version the chain backend and Wordly address so there is it uses a a different address than your than your ethereum address that it uses so that basically something that is it's a bit harder to just you know run a lot of random nodes and then this overlay address provides some kind of protection against running a lot of nodes and trying to take over some part of the network so yeah and then at this point we have a full node running and maybe if the network is working maybe we can even try to uh okay I close no no sorry here I closed it all right I don't no longer have the the hash that I uploaded previously I just wanted to try maybe it's downloads so the the thing is that now it's if you start a full note from scratch it at the beginning it will start synchronizing data so the current full node capacity is around 20 Gigabytes but it also has some caching and some other overhead so it uses more data than that but it tries to like synchronize 20 Gigabytes of of data and that is one B nodes capacity this is something that we consider increasing in the future but for now it's like seems a reasonable default and then basically when you start an empty node then it will try to fetch as much as it fills up this internal uh storage space and so that it can serve other nodes from that so it may happen that if you run a full node then it might not be uh it might not be able to um or it may slow down your computer at the beginning or or you know it might not be able to access all the data immediately uh interestingly if you run a light node that is not doing any kind of synchronization it just asks the data from other peers and then it works as long as soon as you you install it so it does not have this synchronization period like if you use ipfs uninstall that you know that it also have to wait you have to wait a few minutes until it becomes usable this is not the case with the Swarm light node but this is also the case with the Swarm full node and so like this is how you can set it up so um maybe yeah we have like two um 12 minutes left so maybe I can just I will just talk a bit more about like the the storage incentives part uh where it is currently so yeah the there is currently a test nut and the main nut for the Swarm Network and the test net is used is the the girly blockchain and then in order to participate in testing you will need some girly businessy we can provide that if you need if you want to try out in the Discord we have a Discord channel so if you join there and if you ask me want to participate in testing then we can give you girly business for trying it out these codes are like actually like if you want to a private key so like if you want to try it on mainnet you can also do and then you can use these codes as a as a wallet private key and then from that you can figure out the rest you can import it to metamask and then transfer the money to that and so what's maybe interesting is like the current status of the project and where what are the next plans so uh currently the the storage incentives are on the test snap so that means that we are testing out this functions it's quite interesting actually and I suggest you to read about it that basically there is a a lottery game kind of thing that so the nodes that have like the the chair the same partition of the network they collaborate on the blockchain in a in a game that like they have to uh commit the approve of the data that they are storing and they have to create the consensus on that and then based on that they select a winner that takes the the Pod but over time it's statistically everyone can win and that's how the the the the the distribution the redistribution of the funds are solved and uh yeah this happens through smart contracts so we will post um a lot about this because this is our current Focus area that we want to get done and once that's working that we are enable of like that will finally enable this uh data economy that I just showed you previously where like people can actually buy capacity on the network and the node operators are compensated for their efforts and so that's one thing that is the current effort that we are doing and after that we we will work on making the like be more uh stable for like handling bigger data sets and um have enabling it for for uh use cases which uses like it requires on bigger data sets like for example like video and stuff like that and once that's in place then there that can open the the uh swarm as a application platform for application and then storing data on that and that can generate like the the activities on the network and we are also going to upload some initial like public good data sets that we talked about like so that do bootstrap the network and make it useful from the get-go but also to compensate early adopters who participate in the in the mainnet and then eventually we expect that like others will follow and therefore like uh we can bootstrap this data economy and then this can be a self-sustaining system so this is the the what I wanted to tell and we have some time left for questions so yeah so it it has a limited capacity so it's 20 Gigabytes currently what it uses and like it uses existing data in the sense that like it it's it will populate it with data that is already uploaded to the peers so that it will connect their peers which has similar address space and then fetch the data from that so that they basically share uh the data in a partition of the network for that the capacity currently is this 20 Gigabytes you can also pin data on on your node and that's an extra space that is used but also pinning is a bit different in this context than ipfs so because like if you pin data on your node it doesn't necessarily mean that it's available on the network because your node will be only contacted by other nodes if you are if if the data hash matches your node and then if you upload your data it's not guaranteed so then it only means that you from your node it will be available that can be useful for some use case if you want to make a Gateway for a web to kind of like so as a Gateway like for for like compatibility or for applications or websites that does not have like built-in integration with swarm so like basically providing a transitioning phase uh but yeah so that's that's an extra capacity and that's not counted in the in this uh what we called is called the slanted geobots it's called the resource space and this is what you need to prove actually when you participate in the storage incentives that you are storing that data yes uh yeah so there's a lot of other decentralized storage networks yes if so what uh for synergies does it have point ethereum that other network s so yeah I didn't really want to go into this part because like this was meant to be a workshop and not necessarily a marketing talk but yeah so this is what I wanted to talk a bit about in the beginning so yes so for example like the the thing that for example the the built-in incentivization is something that differentiates from from others so like with ipfs there is no incentivization you can have incentivization with Phi coin but Phi coin is actually not the same thing as ipfs so it requires to run a different demon and then it's different tooling and the different trade-offs so what we feel is that like this is an integrated solution that seems to be easier to set up and may serve some use cases better and then we can discuss like what are those use cases so I mean what we feel is that with ipfs you store files and folders and that's useful for many things but we feel that for example swarm you can store like data structures that can point to to things and then application basically you can create like databases and applications that store those form and use this form as a backend so it's like not only not only for storage but also for like messaging and and there's a decentralized cloud not only just the storage part here sorry um um two questions quickly uh number one uh as I understand uh you have to that you have to pay to download and pay to upload right yes uh okay second question um you said something about clef using clef in the install Instagram for example when you're using multiple Hive clients in this as a single cluster but uh the the documentation says he recommends it using clef but you right now you said a few minutes ago that it that probably that you're having a little bit of problems with the clef swarm so how how does that work so what I recommend here is that if you want to try out running your own node start without clef if you have multiple nodes and you want to manage the keys for them and you want to basically have an operation running multiple nodes then consider running it with clef but by default I think it's easier to start without clef and what was the first question so three uh yeah they upload them though yeah yeah pay to upload paid to download yes we have three minutes left any other questions yeah so it's uh regarding the download and upload payment so what let's say we have this app YouTube or Netflix running fully on Swarm and there's content that's very viral and everybody's watching it and of course you as a provider don't want to pay for the bandwidth so in terms of a user experience that means that every user of this app will have to have a some sort of a wallet that will have to pay for that content to consume it so yeah that's a good question so what I imagine this is that basically this depends on the application layer and how the application layer manages this so like in this regard like swarm is the if we talk about like it's a decentralized cloud then it's again like somehow applications can abstract this away so also on YouTube you don't pay for like Google Cloud but like you pay for the YouTube and then how it handles this problem in the background it's a different story so we don't have all the answers to that but like one way to do that is or one way how imagine this is that this post system mechanism currently it's tied to your node but it's it doesn't have to be that way so it can be actually portable and then basically you can you can you can make your application handout postage stamps and then with that it can enable app loading even in the browser without having to connect to a full node or like having to have capacity for for things so that's we have ideas about that but this is something that is still needs to come and applications are built all right and I have a question here you show us that in this one you take an R shift and divide it in small blocks and while sharing the network what happened if for example for example my note is corrupted after this project and what happened if I'm user want to make modification to the fire so the so all the all the data on Swarm is is stored by this content hash so basically you can with that you can detect if the data has been tampered with or like changed or corrupted and like all the data has is replicated on the network so like if only one node is changing the data then actually it can be caught and actually it will be called once it's uh participating in the storage Lottery and make a claim for storing data that they have they actually need to make a uh they they have to create a cryptographic proof and when doing that it can it it will reveal that like if they tampered with the data or changed or corrupted then they cannot really uh so at that point they might lose their stake and stuff so in this regard like the system has Integrity production built in and uh and yeah so how to put it like yeah so the the content hashing makes a lot of things very easy in this regards like the content address hashed but yeah we also have a grants program if someone is interested in in developing apps on Swarm then we are looking for ideas also and we the thing is that we don't want to build everything like actually we want to build as little as possible and then create this ecosystem where people participate and create their own stuff and by that contribute to the to the network and the common goods you have a question yeah yeah yeah so it's written in go and go provides like easy way to compile it to any platforms Mac Windows Linux you have Farm version everything so I I managed to even run it on my phone so on Android so yeah all right if there are no more questions then thank you [Applause] [Music] thank you [Music] all right yeah yeah okay sorry I'm leaving yeah like I will be around I just expect my stuff yeah thank you [Music] foreign [Music] [Music] about it underneath your Tech switch um [Music] [Music] [Music] foreign [Music] 's future place in the world basically [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] ability in which case 51 of the network can always rewrite all the rules take away your money everything right all the other the other thing you can of course do is Halt and recover via the social layer but that's um [Music] um however [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] yeah and and with that basically once you have you have like an explicit settlement system and you have an explicit data available as a system now basically you you can break out of this of this kind of graph of um of this uh full node uh versus throughput uh and uh like how can you actually use this now to kind of to build cool blockchain systems um into something useful um and this is going to be very picture heavy because I kind of I don't know for me it's mostly about giving good intuitions here um for like I don't know my mental models around this basically there was um so again this is like an excuse chain I do a little box around it it's 15 minutes of box there it has its own security um and that's that's the world as it used to be in the boxing world we had a lot of these boxes like a couple years ago right and now we're adding these exciting new tools uh to the picture we have we're adding settlement and we're adding data availability um and how do they basically change the picture well first of them [Music] security and it's not the only way to do uh to do this [Music] [Music] actually make use of them while the way to do this is by and that's what the arrows are for by basically having turning the execution chain into a roll up um it kind of functions as it did before but now it uses this the settlement chain for for data hey everybody how are you thanks for coming today we're talking about starting a little bits the slides sound in Spanish where you can see that we have like more of a multicultural audience so no problem we're gonna be talking in English and if you don't understand anything on the slides please let me know no problem but just focus on me so on the layer one we had amazing applications we got a lot of applications very very interesting for example amms that could let you transact with different tokens but these were very very very expensive right we also had oracles that allow us to introduce that out chain into on chain right but it was all super expensive moving data on chain is expensive we also have gaming where you can have nfts very cute nfts you can have your sword for your game you're gone and so on you can maybe move it to another game but still the game was was lit was directed by a single entity that had the control over the game so the game Logistics the game logic was not on chain it was not how to regulate it yes because it's very expensive right also we had both in apps but also again writing in storage right into the blockchain is very expensive so voting was also real expensive on layer one so this is very interesting applications that we have in the layer one both that introduces problems when we are talking out costs so we know the states the current state of things is either we have a huge machine that is processing everything we know this for example Banks Acorn apis companies startups and so on very huge machines they can process a lot of transactions very quickly and now we're looking at the blue part where we are trying to create a centralized system which is when a lot of persons can verify the Integrity of the system right this is what we're trying to do the problem is that this is very slow and this is very expensive and the computation repeated itself various times at different points so it's not optimal for scalability of course this was a choice when we decided to create theorem we wanted this centralization we wanted security it was a choice to sacrifice at that moment scalability but now we know better and we can do better stuff so the question is can we hit can we get the centralization security and also scaling yes we can do with your knowledge robots and we are here today to talk about stagnets so we're talking about platformer layer 2 that is secure by ethereum it allows you to create smart contracts General smart contracts it's too incomplete the cost of execution is much lower and you can create amazing things that are not possible even imaginable in the layer one so we can get much more for each piece of gas so this is a quote from Albion session our founder at Bangladeshi in the 29th of July he's talking about the objective of starnet which is creating a solution for scaling that is focus focus only on scaling theorem and this is called Cairo so our Star Wars are experts on both the three Mutual machine and also ingraining stock systems and there was a a conscious choice not to use the evm to scale we created a new virtual machine called Cairo this is this was a conscious choice because we believe this is a way to achieve the biggest scale and this scaling is going to it's going to come from Smart contrast within in Cairo in Cairo is a virtual machine but also the language we have so what is Cairo keros are doing complete language uh primary language that allows you to create probable problems in this case in Spanish you can execute your Cairo program and then you can prove a smart contract on the layer 1 on ethereum that this a transaction was correct this allows us to have much more much cheaper transactions cost and because Pro when the smart contract on the layer one validates that this proof is correct it's much cheaper than running the transaction itself so this allows us to create more to get much more scalable Solutions uh using the layer 2 in this case with cat with Chiron starts so this is our Solution that's your knowledge Roll-Ups specifically talking about Chiron starnet you can get extremely extremely cheap computation thanks to Cairo and we can create and this is key we can create interesting applications that are only be that could only be made using the layer two it's impossible practically impossible to do on layer one and this is an interesting data that we got during the last week a standard plus start Stark X blocks stagnant so Star War the company has different solutions one of them is star trekx and the other one is started that we're talking about right now and both together had more transactions since July than Bitcoin lining and or layer tools this is something that is not very well known but as you can see coming from July the blue line is the starcakes Plus stagnets down is Bitcoin in Orange and under that are other layer 2 Solutions so as you can see Stark is an external it's currently been very very used and we have been live in Maine since June yes June 2020. so we are not new at this we know how to do it the Star Solutions is very good and as you can see it's very very it's been very used and very interestingly also is that 70 percent of that comes from nfts it's very interesting for example with immutable with Ferrari interesting so now thank you very much for coming now we know that Stan has a lot of potential you can create needs whenever you want you can deploy it currently and actually today we'll be creating a boating application that we're going to be trying on starnet you can use it Cairo is a different language we know it but it's also a language that everybody can use it's not hard at all so my name is Mars pihil I'm a developer Advocate server and thank you very much for coming today the golf today is for you to get the resources to start to start studying Cairo if you want to go into starnet and also make a small example of a bowling application so now we talk a little bit about what is being done in layer one that is very costly and we can improve what now let's talk about what can we do with all this power that chip computation can provide us for example we have a solution called ckex it's a company that is offering high frequency trading this of course is impossible in layer one imagine having micro positions and trading with them I don't know it would be impossible because of the course in the year one makes no sense we talked before about voting voting is very expensive too so there are also solutions for example snapshot X that allow us to vote much more cheaply yes so there are a lot of applications that have been already developed since I started that reducing all this power another one for example is the government of Buenos Aires create an application that allow you to have an identity on the blockchain as a user as a citizen they show they chose starnet because it's very secure it's highly secure and also it's very scalable and very quick so these are only some examples where the custom is growing by the day for example we have tools amazing tooling for example coming from hard hat open sapling um chain link soon Alchemy those are well-known companies but we also and maybe more interesting we have different applications on the top as you can see they are being created originally on the layer too so this is very interesting because it's at least my opinion it's not for the company overall but it is interesting when a company comes from Lane one and then puts its applications layer to it's great they are using the the lower fees and that kind of stuff however I believe that the real power is being used but those that are created natively on Cairo in the layer two yes it's a little bit like for example when you have Windows in your computer Windows 98 for example and you had this nice and cute games and then comes for example Windows XP right it's more powerful you can do much more stuff and these games can be can be passed into XP okay so these old games can be passed into the new software and they run well it's okay they maybe could leverage some of the power of the new operating system but the real power comes from that that is being built on top of XP that could not be done in the previous operating system right that's what we're talking about here something that is completely different and out of the leak of the layer one we can create something very very interesting that is impossible to create for example we were talking about the games that they didn't have the logic on chain is now possible so imagine that you can do operations summations multiplications divisions whatever you can do that because the gas is much much cheaper so a company I don't remember I know the number what's the name of the project that was creating this on chain reality topology so topology created a game on chain and it auto regulated okay so do you need a central limited to the sides if you're allowed to play it or not so it will stay forever as long as ethereum exists this is something that is again impossible layer one and for me those the powers is going to come from that part so now the question is um what can you create that is completely different from what has been created in the layer one using all these new power all these new potential that you can find in the layer two that is so completely different never done before imagine you can do for example machine learning on chain you can print models on chain you can create any kind of mathematical operations on chain it's completely different and what we need is people I start building these applications that are eye-opening so uh for the beginning you would need to start installing Cairo starnet of course I don't expect to expect you to do it right now but you can follow these QR codes for some instructions on how to install Cairo and starnet so you can get going it's not difficult at all and say while you scan it we also have a report that is called started edu where you can find a lot of educational material I will show you the link with in a couple moments and inside story ddu you can find a lot of tutorials on different stuff for example you can know how to how the cowboy syntax look we're going to look at it in a moment you can for example create a token an erc20 you can create your nft your c721 tutorials for even more interesting how you can create your own Bridge from layer 1 and layer 2. Bridge and for example how can you create your own wallets so you can if you can scan this QR code you will find all that material inside and you can get going by yourself without without any problem those tutorials are amazing and they have onboarded a lot of people into the ecosystem also we have a newsletter that is very nice and you will have a lot of educational material there too and also some interesting projects happening on the on the on the ecosystem is also there you can subscribe it's a soft stack newsletter and finally what we're going to be doing today is a voting application they will allow a person to either vote for one or zero one for this for example zero for no and deploy it on the test Nets if you have any question until now you can tell me this is the repo that we're gonna be using so if you want to have the repo you want to clone it you want to copy the codes or just look at it feel free to scan these QR codes any questions comments well we'll start with the coding parts oh okay I have a question actually how many of you know how to code in solidity can you raise your hand how many of you have ever coded in Cairo you'll be cool ating to Cairo is very simple and really really simple and this way that you're already working with solid perfect you want to go to Tesla and see away and interact with with this contract feel free also to scan these QR codes the test Nets already working with this both team contracts a couple minutes ago so in this in this table is the Star Wars team we have some swagging here if you want to come also and I don't know guys do you want to add something else before we start going oh perfect okay do you need another QR codes uh do you have already the the one with the contract will win we're going to use is this one remember please so let's go to the counts so this is our boating contract again the goal is to create a contract that allows certain predefined addresses for example me as the admin of the of the of the boat I can tell okay this address can vote this or others can vote this address can votes because we don't want everybody to be able to post only certain participants of of a project I don't know and they will be able to vote Yes or no just with one no with zero and yes that will be all so for this let's review the structure and health Cairo looks very important our packages very similar to how it looks in python as you can see it then we Define structs as you would for example in Rust first the grain are both counting structs where you will be able to store the bolts with yes or no so for example we'll have 10 volts with yes zero bolts with null something like that the counting of the boat secondly we have border info where we store information about the Border in this case I only very simply allowed I simply added an allowed member that it will have a one if it's allowed to vote or zero if not if if this person has already vote it will have a few now coming to the storage the storage variables uh allow you to know if you know solid already these are very similar to you they allow you to map from when um from one expression to the other in this case for example the first one now let's go to the third one here I am able to map an address to to a is registered variable that in this case is a felt so Cairo is type it's a type language now you you might ask yourself what is a felt everything is a fell inside Cairo conversion to felds and basically for our purpose right now if you want we can get a little bit deeper in a moment both for now in order to to get to make the most of the time I felt it's like a big interior number a huge interior number okay so in this case as you can see that dress has not address type as in solidity it's a field okay so we're mapping another way there is a failed to a field called is register that will have a one or zero or whatever we haven't defined it yet and on the other ones we are mapping other information and interestingly in the first one we are mapping nothing yes nothing to a structure the boat Counting so this allows us to read or write into the memory that's as simple as that I can read this or I can write into the memory using these ones so using the storage variable boat in status and if we read it and if I I will go right now to the deploy contracts so this is the deploy contract I'm using right now boilinger which is a Blog Explorer for starnet if I go to the read part of the contract I can see what voting status is doing uh using a getter function that we will see in a moment you can see the status of the voting right now because nobody has both Jets we have zero codes with this zero boats would know so that is the storage we are reading right now this storage variable will I get our function that we'll get to that in a moment and also we have the boring info and it's the same everyone goes into this but basically we're storing information into the uh in this into the storage of the of the blockchain now let's go to the Constructor looks very similar you know we're doing initialize your your contact when you deploy it you have to Define certain inputs as insulating exactly the same name so this Constructor will ask for three different input Bibles as you can see now we can we can view how the function looks into Cairo it's very simple very similar also to the python and what is important here is this part these are the inputs the explicit inputs to this function in this case the inputs for the Constructor that we have to provide it when we deploy this contract so I'm asking for an admin address the person that is going to be able to to manage this contracts with a felt again then the number of addresses that will be able to vote and finally the disappointed so it's important to know that Cairo is a low level language so here we can manage the memory we have to manage it so the restart addresses is basically a vector with the different addresses that are able to vote I can add five six seven eight whatever and this pointer felt points to the start of that Vector but you won't even notice that this the logic behind it is that this is pointing to the start of this array different addresses but you won't you won't notice this do as you will see and we're basically using a contract because we have open simply on top also of starnet so you are able to use a very secure contracts thanks to open Zeppelin and here we're using the ownable contract from our principaline before I import them here so I imported the ownable contract and the possible contract libraries from open sapling owner will basically defines who the owner is of something and possible it allows you to post a contract in case of an emergency say that for example my application is being hacked so I can pause it as simple as that but also we have erc721 Logix and erc's 20 so you can use it with open supplement that's very very useful very very useful any question until now we have seen the Constructor we can see in the storage variables Strokes how to import how are you finding Cairo too difficult or is nice any questions yes have you sorry what was the question yes for example we have in this case we will be using a addresses that are in an Excel in hexadecimal format right it will simply be converted to a field behind it will be we will actually deploy right now our control using hex hexadecimal values and you won't have to convert to a field but you also could compare it to a field and also you play with that no problem right now we can think of it like big integers and we can get deeper into that any other question right now we have seen Constructors torch variables Strokes well perfect okay so here our Constructor and with this we can deploy our contracts also this um as you can see the structure of the contract is very similar to solidity we're trying to follow the guidelines of smart Contracting solidity you have Getters you have the Constructor and the format is very similar also if you go to this contract is very well commented so you can know what is happening which is okay so the question is if we have inheritance in Cairo I think you guys can narrate your contract what you do is you import your function so if you're looking at the bot the top of the uh of the contract up there uh here is importing a template developed by openshaped so he's importing the full contract which is called honorable so it means that he Imports all the functions that are inside of this contract and inside of this contract you know it creates it creates a few variables that can be initialized and um one of them is called the initializer which is supposed to be called during this Constructor does that make sense I was just usually that's so it's not explicitly it's not automatically initialized because um because it's not like the contract is not ownable it Imports some function and it has no way to know that this is the specific context of the Constructor so you need to initialize it explicitly regarding the question on felt earlier I'm not sure what confuses you but when you're looking at variables in solidity you know at the bottom of it at the end of the day it's a number and Cairo is a fairly new language it will get better in the next few months but right now it treats everything as a number so if you want to perform actions when you need strings you basically need to assume that you receive them as numbers you convert them you do your operations and you do all this kind of stuff make sense sort of yep yeah so I felt is as you mentioned earlier I think I heard you say it it's a field element so Cairo is like the effect you can't think of it as a big end but it's basically a number over a big film The Field that is a prime that does indeed uh um field integral of mathematics and arithmetics that makes sense so it's really like you can treat it as modulo operations the only time where it gets weird is for divisions division sucks I don't like them no problem with that so for example we were talking about the owner will contract this is the one that were important so we have it here locally and we're importing from it this is the owner one which comes in a namespace so we're importing these functions yes no problem this there are no inheritance in Cairo perfect so going back to our contract go to so uh we import these functions honorable and possible from functions inside the ownable namespace and inside the possible namespace you can yeah and there's a question number one the solidity no no you cannot import it right now in solidity with this controls the event showing from open sibling are written in Cairo or native income I think there are plans to have more contracts from opportunities yes open the plane is working to create the standard implementation so any kind of contract you have on solidity you're used to have uh that is done by open zeppen we're walking towards having that that being said I mean it takes time to develop contracts that are secure and everything so if you want to develop them you should it's worth it it's fun and you know you may develop stuff that gets used by other people which is great Yes actually the principally the contracts incredible principling they have a lot of contributions from people outside the community so that will be great also if somebody manages to write a Cairo contract that is the equivalent to this taking contract in synthetics which is used by everyone I'll buy you a beer more than a view [Music] [Laughter] it will eventually happen it's very it's one of you okay so we got our Constructor and then we can get to the here we're using the initializer function inside the owner will name space and then we go to the Getters is very simple functions by definition in Cairo are private not like solidity so here if we want to have Getters functions to read information we have to explicitly tell that they are getters so um something that I forgot to mention before but this is the way like very similar to how you do it in Python how you define that this has a particular set of properties this function that that is coming in this case with view we're defining get our functions functions where you can read from so right now we're creating this admin function that as you can see is exactly the same format as it comes in open sapling for example in erc20 or erc721 simply reading who the owner of the contract is so for example if I go again back to the contract deploy control here I can read who the admin is as you can see this is a felt but if I convert it to hex this is the owner of the contract that is myself is this same direction so talking about wallets it's a good opportunity right now you can use right now Argin X which is this one and also Bravos that is this other one very recommended you can use the Standard faucets you can simply put in Google started faucet and you will be able to send yourself some fake it so you can start making some interesting things using girly or more interestingly you can also Bridge your own it from the girl Disney's in the little one into the layer to the star net for example here we're using program I can I can ask for some fake it sent to my metamask for example and then using the bridge I can connect my meta mask which is currently my my wallet in layer one and connect for example are you next here as my wallet layer 2 and I can reach this fake it from girly layer 1 to layer 2. so this is also very interesting it's the same thing as asking for it in the faucets so going back to the contracts we have an order gear function here it's also a very typical open settings style function where you what we are posting we're asking when we think if this contract is currently post very simple and then monetizingly here we have a view function to know the boring status is the one that I showed you before it will let us know how many people voted yes how many people bought it now simple as that again you can see in this function that we have an explicit argument and by now you are already asking yourself what is this what is this inside these keys these are implicit arguments this is something that is different from other languages you might not seen that before but basically uh these repeat themselves all the time Cisco pointer person pointer and Rich check Pointer while interacting with the memory here so we are talking that these are Pointers actually to a felt and to a structure called hash building no problem no we will need to get that that is something that we're repeating in each function it doesn't matter the real use is here so we're asking here for an explicit argument that is about Counting sorry sorry we're asking for nothing here it's empty the inputs and the output is this I start to survival called status that is about counting structure that we saw before again Kyrie's type is a type language this helps for security any question until now for this function for example yes yes again you can read it you can read from the gets volume status this is the one that I was showing before and currently the boats are yes or no this is practically in the structure we have and Define here this one both yes both no it's exactly the same here Okay so yeah sure using Cisco you can call of course these functions from another contract does you can call them and we'll go to the external functions that also allow you to write perfect okay yes yes that's what I was telling for that is the implicit arguments these are arguments that are passed Without You explicitly telling these functions that you have passed them so they for example when we are reading from the from the storage you have to provide these functions that the sorry the pencil pointer and the Cisco pointer you have to provide them and they go into the read function so inside here are the implicit function implicit arguments you don't see it because they are implicit but yes exactly the simplest functions if I take them off they will have an error no problem it's it's not hard to to to get used to them and also you can see each function that I adding here has them repeated so no problem with that okay also we have an overview function where we are getting the status of a motor and just if you were simply reading into the voter info a storage variable that we have before using the argument reads so now going deeper into this we can read and write from this storage function in this case we are reading and as you remember this search function asks us for our user address and it was precisely failed so if we provided a field then it will return us let's see once does it return yes if we provide an risk it will return us about our info structure okay so here I'm reading from it and then we're returning it simply as that status equals status because the name of the variable here is a status and to see an example of how to write exactly the same the same storage variable that we saw before motor info we were able to read from it if we are imputing with the address and we know we now know that it returns an instructs okay so now we can write using the argument right we can write on it so we're writing on the storage of our contract and right now this is basically an RS we will go deeper in the moon over it but this is an address telling it for this address please map this instructs okay very similar to how you look at it in solid yes dot sender is a I think we have it here get code address with this you're getting the address of the of the contract that is calling this this contract so for example in this case this is the most important function is the both function so what it does is simply is getting the address of the color is storing it and then we'll review in the information of this person to see if this person has already bought or not because we can only allow them if they have bought it and just in a moment we'll go into that oh could you repeat the question a little bit louder please how do you handle a cable a variable like an address there's no notion of msg.value in starknet because there's no native currency everything's in near C20 so there's no value attached to a call there's no um and there's no payable function did that answer your question Okay so so yes [Music] um so let's go quickly into the most important function the two most important functions the register voters and this will help me to talk a little bit more about recursion that we use in Cairo so again as you can see we have the implicit arguments as always and then we are asking for two expressed arguments the register address Lane this this is the the length of an array and the second value is the array itself so first argument is the length of the length of this array the second argument is the the array by itself then what we're doing here is and again you can see all this contracts in the Ripple I showed you before it's in the start video in case you are you want to follow it closer in your houses and then what we're doing here is simply and this is a at least a classic function of Cairo that is using recursion so right now we don't have Force in Cairo you have to use precaution and this is a classic function for it when we review here is that it is the end of the recursion so if we have already passed to every each of these different members of the array that is if the length is zero then we can return and the recursion is finished then here we create a small a small struct the motor info do you remember we defined the stroke called motor info here we are creating this butante info where we have this new voter info so empty anything here that allow is equal one it could be zero for example so this function what it's doing is that each of the address that I'm providing it will register them as voters and we tell we tell us that they are allowed to vote okay and then continue a little bit with the recursion what we're doing here is write it into storage into the storage variable register motor yes this one we're mapping as you remember before we're mapping an address to a number so this is an address what we have here is this is the array very similar as you would do it in Python for example and all languages you have the array and you can index to it using the square brackets okay so I am indexing in the inside this array for this could be a number like one or two or five depends on the number of others that we are adding and then will we say that the value for that address is one we are simply mapping it here and then we become the recursion part here we are reading again the same function and providing the link but this is a lower length as you can see if we have for example five different voters now we are providing it with four okay and we are sending it with the register address and then it will repeat it will repeat until it passes through each of the different addresses and it is starting for from the last one up to the first ones I know what this looks a little bit crazy using caution Bots it's no problem you you can get used to it and I think that this will improve in the near future right yes well that's a good question the question is that what happens if you get into an infinite recursion um you okay so there's there is the there's an answer for today and an answer for tomorrow but basically there's a form of gas metering in starknot just like in ethereum and if we reach a match maximum number of steps the sequencer will recheck your transaction today you're not you don't pay for these kind of transactions they're just rejected tomorrow um you will be it will be like a failed transactional interior you will pay fees for the execution that led nowhere click perfect any other questions for a moment okay so simply we have a recursion function here again it's not that hard and it will improve we're talking that Cairo is a low level language and we have to be very honest and conscious about that and finally let's go to the last function that is the Boating function this will allow us to call a function as you can see here it's an external function external function simply means that we can write on the storage using it okay not only reads but we can hear right into the storage again we have our implicit arguments we have an explicit argument called both and here don't mind this part simply telling the memory that we will be using the compiler that will be using local variables we don't need to go through that we're called the possible function from from open sampling contracts specifically a function called assert not pause it checks that if if this control is false or not if it pause this person cannot vote as simple as that then it get the caller address this was a question from before with this function we can get the address of this color we're storing it inside the color function then we can read the information of this color of this address using the rates argument from this touch variable it's already the info and then we are simply reviewing is this person can vote or not if they have a low zero then they cannot vote then we're creating a new bullet border info extract that it says that this person has already bought because we wanted to vote again we are writing on the storage here everything here we already know that and finally we are updating the status of the boats with the vote of this person if this person voted yes or zero in this case then it will update that with zero the count with zero and if they bought it yes in this case one for example then it will be updated the count will be updated with a sum that we have here and finally we are updating the final status of our update the story of our boating and storing it into the storage as you can see this function is scheme and if we go to the deploy contract we go to the right contract and then I can vote in this case this is the function I don't remember where address I and I think so I will go to my Bravos wallet in here I was in my area before and let's see if it allows me to vote so I will vote with that one and I will be able to sign this transaction because this address is registered to vote I did when I deploy it and right now what it this is the transaction cache and we have to wait for it to process this and we will have our boat now how can you deploy these contracts you can deploy it using the command line tools by its targets or also and my preferred ways to use protostar protostar is a tool created in the image of Foundry it has the best practices from Foundry and also some from hardcat sorry from truffle so it's very interesting it help us to to test but also to deploy so if I go right now to my command line [Music] this is so deploying this contract looks like so basically entering protostar deploy this a contract that is already compiled by this moment and what I want you to notice here is the part of the inputs we talked before about the Constructor accepting three different inputs first one is the owner the admin of this voting second is the number of persons of register addresses that can vote and finally the actual addresses so this is how they look this one as you can see is a hexa a hexa value and this is the address that is the owner of this contract then only one person or one address can vote this one and we can simply deploy it run it like like this photostar is very good so it's very usable it has amazing testing functionalities but you can also deploy your contracts and that is simply the content that we deploy here and as we as we can see we already bought it if I go to read contracts we should get a boat in status where we had a boat with yes we're number one it updated and zero is still no I could not vote again because historically theoretically I should not be able to vote again let's see what happens oh it should be it should it shouldn't pass right now but let's wait for it so that would be the the main part of the workshop you we have three minutes two more questions yes [Music] the implicit right now here I don't have any but they can change depending on what you're revealing can you think of a scenario and when do implicit arguments change every time they're used basically um it's a it's a bit of a deep question the workshop is about to finish so if you want let's meet outside and we'll we'll give you a more definitive answer yes I think I have another message here hey will I look for it any other question in the meantime I have a question for the audience before we wrap the the workshop up can we get just get a quick show of hand who learned something during the workshop cool who thought this was too difficult who thought this was too easy okay fine so it's great this means this was spot on those of you still are hungry don't estate ask us question come on our Discord go on our resources look at what we do as also as Omar mentioned like most of these things the Paradigm you're used to that you're used to how you write smart contracts how you deal with Scholars and stuff like that this syntax is a bit different the tooling is a bit different but you can and will Master Cairo it's just a matter of just like trying and this will give this tool will give you extreme power in your blockchain applications so if you're looking to go more to do more and go beyond what you can do with the evm I invite you like do take a look it really is powerful and will let you build super cool stuff and again this is the QR to the educational resources you want to go look at them we will have a boots on Thursday and Friday you can ask ask any question come with us and finally regarding the question the the error messages this is how they look so if this assertion true or false fails then it will print this mistake motor info as well thank you thank you very much well it depends on the on the wallets uh let's see for example this case assert allowance and so what your question is what does a narrower message look like from the browser perspective essentially you'll get a failed transaction like you do on ethereum and the trace like the way it shows up is kind of ugly to be honest it's still very rough around the edges there's a lot of info that is not necessarily relevant to you but the message the error message will appear somewhere and you'll be you know able to know where the error is from in general this thing works and this fill scale this thing scales ethereum right now it's a bit rough around the edges meaning that it's not all pretty there's a lot of info or not enough but uh but it works that's cool that's cool little error looks like as you can see that's the message that we saw before in there the explore info your address is not allowed boat then we will have a boot please feel free to ask any questions and thank you very much for coming and we get t-shirts we're not taking them back so please pick them [Music] foreign [Music] foreign [Music] [Music] these are all of the best web free words all of the most amazing things that we can do with the technology and our products and most importantly like I think you know at the end there we have the inclusive community and we have the genius people and the Good Vibes and that's what I'm here for um and that's kind of what I like to focus on most right like when I get on stage I like to talk about people because if we only think about the technology and the products that we're building well you're going to end up in this situation quite a bit because the second that you sort of um I don't know the second year dreams start to come to fruition the second that everything starts to line up and you feel like you might have a grasp on it it really does seem that then out of nowhere everything keeps crossing Crashing Down this building should be really really hard especially when your wallet and uh you're the product to access and manage all of their digital assets be harder things come crashing down a lot and the worst part of daily like building a good product is actually like the failing right we're feeling the newcomers that enter the space they're getting scammed they're optimistic one day and then they have their homes [Music] right like trying every single trying to help people understand the technology [Music] that we are building a better world it also means that sometimes [Music] children's and this ecosystem [Music] s and that private key is just like a single string of characters [Music] now we call it covered Rays so that we can like hopefully earlier um [Music] we build are gonna be responsible for to wrap your brain around it's not super Pleasant uh I would say it's pretty  up it's been pretty for a while actually this is a comment I made in 2018. um one of the earliest mistakes I've ever made was when we created my other wallet we didn't really understand why you shouldn't let people enter their private keys in the browser exactly that you would generate your private key you would enter it on the website and that's how you access to all of your money um that was a terrible idea don't do that seriously don't do that uh uh this is Dad down [Music] oh that is time my life [Music] cause I'm gonna leave [Music] me [Music] foreign [Music] because [Music] [Applause] it's their tokens is there enough cheese it's their collectibles [Music] three days [Music] [Music] [Music] [Music] [Music] foreign [Music] [Music] thank you all right hello everyone uh thank you so much for joining we have a very packed agenda this is technically a workshop room but these are extremely meaty topics if you have a burning question you can feel free to raise your hand I'll call on you you can ask it otherwise wait until the end we're gonna be outside and these guys are extremely online uh until you can find them on Twitter um so today we're going to be talking about uh the safety economy and how it's moving from monolithic to modularity uh we're going to introduce our uh speakers here I'm the host Victor Bunyan [Applause] [Music] [Laughter] the big supporters over there um I got a taste for Colombia and anyway [Laughter] so um we have I mean an amazing panel before us um introduce myself on protocol specialist at coinbase cloud coinbase cloud is an infrastructure provider uh we run validators and nodes across something like 30 or 40 different blockchains at this point uh we run a good number of uh eth validators um and so we're extremely invested in the success of ethereum ecosystem we're paying a lot of attention to this transition from the um you know what is currently a validator which is a you know it's a box somewhere that has some software on it the keys are either there or in some other box and it's pretty vanilla and it goes and it does its work and it you know performs the consensus duties uh but the trend that we're seeing right now is that there's a whole host of essentially middleware solutions that are changing uh and modularizing the validator experience and so they're almost kind of like plugins or extensions you can think of it as it's a very crude uh example um this is a fairly recent phenomenon um you know flashbots and Mev boost was you know the first and primary example of it you know reaching an enormous scale within the ethereum ecosystem but with the advancements coming from you know the teams up up here and also other teams working the space we expect for this to be an extremely exciting uh and pivotal moment in the development of blockchain infrastructure on ethereum and so with that I'm going to pass it over to the panelists to each introduce themselves and their projects we're going to give them a little bit of time to not go super technical but like it's important to understand what like each project is because it's really going to inform the rest of the conversation and these are nuanced uh meaty topics and so the directive we gave them as a VC pitch but a VC that knows what's going on you know that's how [Music] that's all with that Stefan please go ahead all right hello hello all right this works hey everyone I'm Stefan um until recently was at flashbots um one of the big things I've been working on there over the last year has been developing and shipping my Boost which uh is often talked about these days so I'm happy to uh get into it get into like discussing what it means to develop this kind of software for validators um you know Mev Booth was developed to help solve two very specific problems with regards to um to validator deployments and Mev one was allowing access to solo validators to participate in the Mev market and the other one was to protect client diversity and sort of avoid a future where um you know Valdez would try to Fork their own code and create some some technical debt in integrating new uh new upgrades so the way that it's architected and the way that it works today is anyone running a validator whether it's at home or a massive node operator like coinbase Cloud can can play again Booth into their system do some minor configuration and essentially running out of the box and and get uh better rewards um so yeah that's that's the intro there good evening everybody I'm sriram uh I'm founder of this project called eigenlayer and also run the University of Washington blockchain research lab what we're doing at eigenlayer is essentially enabling the sharing of decentralized trust from ethereum is taking to anybody who wants to build a new system on top so the core idea here is staking is the root of trust so when you're you know after the merge you know we are in a proof of stake world where no uh use the uh stakers basically put down a stake and commit to Black Block validation and if they make a error or if they behave maliciously they can lose the stick so this underwrites a certain Economic Security into the blockchain what we are doing is enabling it to be flexibly shared so for example you put down your stake and re-stake so restake is a New Concept we came up with restake is the idea that you're using the same stake putting it at additional risk and committing to doing additional things maybe running a new chain running a new service like data availability running other middlewares on top of this common stake so the exchange here is takers are taking on additional responsibilities and additional risk and in exchange they are compensated with some fees or other tokens which are paid for those stickers imagine you want to build a new distributed system you have to go around and try to create a whole new validation Network which is decentralized fund Economic Security to it which is actually very very expensive for example just to get a sense of numbers here ethereum has like you know 20 billion dollar worth of economic stake at risk if you wanted to build a platform which has similar Economic Security you're talking about like you have to pay the stakers an annual APR like 10 right that's like two billion dollar worth of fees just for your other system to be as secure as ethereum it's virtually impossible so what you can do is you can borrow this massive Economic Security because you're restaking it you're using it for additional Services anybody can come and build new services on top thus augmenting the feature set of the ethereum ecosystem we think of this as a permissionless way to do feature addition to ethereum so in you're borrowing the ethereum trust and now running new services it is probably opt-in from the Staker side it's not forced on anybody but the stakers that do opt-in are actually able to earn this additional risk reward Dynamic so that's what we do at eigen layer hey everyone uh Colin Myers uh co-founder of opal we are focused on building what's called distributed validators um easiest way to describe what a distributed validator is is today all validators are seen as one key one entity one individual and it's very singular in nature our primary goal with DBT is to enable and change everyone's Minds that validators can become communities so with DBT what you can do you can take a regular validator you can use a dkg divide up its key into different shares and the four of us today can share a validator together and if Victor's house burns down all things are fine because we use threshold signing and applied cryptography so our node will keep going it'll keep validating the network will not halt um and yeah that's what we're focused on it takes on the form of a middleware and it sits on the East to side awesome and uh I know you folks are all starting out on ethereum and you'll talk a lot about ethereum but obviously it's not the only proof of stake Network that's out there um there's a proliferation of them and most networks these days are proof of mistake um how do you think about the trade-offs of sticking to ethereum versus also starting to work on other layer ones or you know layer twos and other ecosystems I think right now there's a huge Narrative of like the bazaar versus the app chain uh I think they can both live and survive I'm an American that spends half my time in Europe and it's actually almost culturally how the world is divided like Europe is kind of a bizarre uh all their cities are meant to be lived in everything is close to each other America is like app chains suburbs houses everything's real structured and together um so the way that we look at that is ethereum is the bizarre and then who's the app chain so for us as we look at where to take DVT it needs to fit technically within that Network and what's favorable for us are not too fast to block times because there's rounds of communication that need to go between the individuals that are inside of a cluster um so for us Cosmos is like another chain that where that could work and is kind of the app train model they have five to seven second block times for us to work on other chains DDT works best with BLS signatures they're homomorphically additive which enables you to switch them up and then re-aggregate them and broadcast in a very efficient manner Cosmos does not have that maybe they will adopt it or maybe DDT can be fit into another chain in that sense but today we are most focused on ethereum however DBT is something that all public blockchains should use in my opinion to add like more resiliency and add fault tolerance to the network so it comes down to demand it comes down to like where the economic value is it comes down to like where the smartest minds are and I do believe that outside of the bazaar the app chain model is probably the only other layer one that would compete with ethereum and that's how we currently look at the option set very cool um we are primarily ethereum Centric and the reason is when you want to build a layer like this you are basically looking for where is the maximum pool of decentralized trust because we have basically a decentralized trust marketplace where do you have maximum Economic Security where do you have maximum decentralization how can we leverage this and build a whole bunch of new technologies on top of it so our attention is actually an onboarding newer and newer modules and Technologies and one interesting thing that you know if you look at ethereum versus the other blockchains ethereum has committed itself to the modular blockchain world and I think very few people understand the kind of scope of what a modular blockchain world is uh the way to think about it is one thing we all love you know across all these ecosystems about blockchain is permissionless composibility right you can build an app and I can build something on top of it and somebody else can build something on top of it together they stand much stronger than any one person could have ever built and permissionless composability is at the app layer and that's how all smart contract systems work but we want to bring permissionless composability at the distributed system level you build a new system I build a data availability layer you build a broadcast layer somebody else builds uh some other thing on top you know an authentication layer you just pack all of these together and then create a new service so ethereum having committed to this modular Paradigm where you know there is going to be different things done at different modules rather than all bundled together we're all about unbundling trust right so we are actually taking the trust Network and letting people innovate on the different modules so for us it is a natural fit that ethereum is the right place to build something like this for Mev okay um deciding where to build Mev Solutions sort of comes from the starting point of where is the biggest problem and the biggest problem is where you know the most usage is so it sort of makes sense to start from that perspective with ethereum um and it turns out that building Mev Solutions is kind of hard so you kind of solve it you build something on one layer and then you say well it would be nice to go build it on everywhere else but there's only so much time in uh and resources to be able to do it so the other thing is it's not a one-size-fits-all solution so I think there's some principles there's some abstractions there's some research some ideas that can be reused across multiple different places but you can't just reuse the model that you deploy for a a certain um a certain node architecture for a certain client architecture and copy paste it into other Chains It's been really cool to see other teams emerge in other ecosystems that try to solve similar Med problems at the middleware layer at the node customization layer I know on the Solana side right the GTO team has been working on it for for a little while and it's fascinating to see how different the solution space is right so sort of the solution that they are coming up with to be able to Outsource the um the Mev extraction is actually to slow down block times so um because Solana has this main difference of being so much faster at block production than than ethereum to do any meaningful Outsourcing you need to have slower time block time so that you can add the network latency that's required and so it sort of highlights that even though the principle is the same the idea of being able to Outsource Mev extraction from the validator level the implementation ends up looking completely different um you know the other thing I'll note is like boost is surprisingly simple software you know like running a consensus client uh doing all the peering and the networking is really difficult my Boost is just like a plug-in that is a sidecar through the system and allows it to connect to a bunch of other uh resources for receiving blocks um it's just a multiplexer of like an RPC call um yeah it's so hard to get adopted right like such a finite such a small change which you'd say like okay like anyone could implement this in like a day and ship it is not that trivial when you're like deploying it to a network with four you know 430 000 or so nodes there's so many different stakeholders involved so many different interests and the hardest part of developing this kind of software is not the technology itself it's also being embedded into the ecosystem understanding what are the goals that are being achieved by the development of this software what are both a technical but social goals as well as well as economic interests of all the parties involved and that's where you know 90 of the work of developing these kinds of uh Solutions lies it's not necessarily just the technical side yeah I I think I think it's such a good point and um I think that's something that unless you spend time in multiple ecosystems it's very easy to take it for granted that people you know outside of your ecosystem have the same worldview about what's fair and like what should happen and who should benefit or not benefit from certain activities and what we find is that you know you can't copy paste boost because you know other ecosystems don't want necessarily these kind characteristics right and so software just doesn't make sense as it is um but there you know I think sure I'm especially you know talked about some of the some of the use cases kind of like off the cuff but um something that I would like to do is just make this a little bit more real of like what can all of this look like longer term and so what I'd love it is if you could if you guys could like talk about like what are the most ambitious use cases that you're thinking about um that you could potentially solve or or address like what does that look like um so on our side any type of validator can use DVT um you can be big you can be small you know whatever it doesn't matter what we find most interesting is that using its cryptographic properties to partner professionals with non-professionals so when it comes to like how do you decentralize a liquid staking pool today most of the pools are run by professional validators or they are run by the pool themselves and over time what you must do is uh include other people into that validator set and with DVT um you can get the consistent uptime rewards and performance by pairing someone up with a professional in that capacity so today like let's say there's a four node cluster it can be a figment it can be a coinbase cloud and it could be two at-home validators and if applied cryptography works the way that it should that validator should have just as much performance and it enables the small person to come in with the big person and then maybe become the big person eventually so taking a node and mixing its constituents between professional and at home is kind of the not the tail end of what we're going for but right now it sits at the most Innovative spectrum of how we're testing with people and how we're looking to push it forward um from our end uh the the main thing we are quite uh fascinated about is the ability for the ethereum ecosystem to become much richer we can start listing out like the top five problems in the ethereum ecosystem and then like start ticking off how we can solve all of them just by using Michael layer we'll give some examples number one the data availability bandwidth on ethereum so in the role of centric roadmap computation is offloaded but data availability still happens on ethereum so the data availability bandwidth of ethereum even with upcoming upgrades will be in say 80 90 kilobytes per second so when you have a bandwidth like this the Roll-Ups are of course extremely optimized to actually take advantage of this and still pump in like tens of thousands of transactions per second so that is awesome but in a world where we are imagining a lot of the uh digital intermediation fundamentally happens through things like blockchains we want to make sure that there is abundant bandwidth you know 80 kilobytes per second is not enough ethereum itself has a roadmap for with some really interesting ideas called dunk sharding where you can increase this up to like 1.3 megabytes per second but even that we feel and that's a few years out and we feel this is not enough there are applications which will need much much more and we are provisioning uh the first service we're building on top is a data availability Solution on top of eigen layer which can actually scale the throughput of data availability quite significantly we are in our internal devnet at 15 megabytes per second already and I think we can scale this another 100x in the coming years this is one example of taking one pain point in ethereum and then figuring out how new distributed systems methods can actually come in and solve these things we build we stand on the shoulder of giants we build on top of dunk sharding some of the best ideas out there just good engineering and open permissionless competition this has done a lot of good to the layer 2 world you know compared to what sharding was where one solution has to be enshrined and there's a lot of internal contesting on which is the right solution whereas a permissionless competition for each of these different features actually leads to a very very powerful world so another example um people think a lot about whether we'll be in a single chain world or a multi-chain world and I think this is not a very relevant discussion for what we are doing why because it even in a multi-chained world it's very clear to us that ethereum will be at the center of this multi-chain world and why is that what is the center of a multi-chain world is a no the if you think of each blockchain as like a node and it's like a graph you see that the Hub node of this network is ethereum it is the most connected it is the most liquid and the most secure these are the three properties you need for a hub node of a multi-chain world and we feel ethereums is the right hub node and so in in this Paradigm there are some lacking things you know we see a lot of bridge hacks for example and can we think about how we can build like very powerful bridges on top of the ethereum landscape so that's another thing you can do is you once you restrict you can opt in and start running like client bridges for all other chains and start bringing in very powerful inputs into ethereum another example you can think of other things like Mev management right like you you want to do Mev manage and when you're when uh when a block proposer is making a claim that I'm going to follow this ordering rule what makes them hold to that rule if they can rest take on eigen layer and then opt-in to new slashing conditions for what they have particularly agreed into like I'm following this threshold encryption I'm following this auction model whatever the new rules are that you opt into you can hold by it because you can make credible commitments on eigen layer some examples of what I think we can yeah I also think we can just cancel the rest of Defcon he got it I can later resolve everything I have a question about eigenlayer um [Music] how should like validators think about the risks so like intuitively to me there's like okay I have my steak I we're gonna get to that oh I'm saving the spiciest ones for the end you want to know what you want to do it now look at the spicy ones now all right I'll do spicy ones now we can do spicy ones now yeah let's do it but but but but here's the here's the condition the spiciness actually applies to each of you not just eigen layer and I want to hear about the risks associated with each project and the failure cases that are possible have you changed your mind where do we start well I think um you know maybe I'll I'll give like a little bit of background in that you know when you think about a middleware solution that does one thing right so today a lot of people run flashbots right they run meth boost um as part of their validators and they're able to participate in the flashbots um software and ecosystem and and all that and the nice thing is that because it's like relatively simple software that doesn't make like tremendous changes from otherwise expected death Behavior it's fairly well understood and we understand the risk parameters we understand how it interacts with relays and the failure cases there uh but you know we don't understand it's like if you're running flashbots and you're running eigen layer and you're staking there and also you're part of opal right and so your validator key is split into four for example and so that that actually creates a very powerful situation where you can have these like incredibly robust and performant and like do everything type validators but at the same time it's also a very scary situation because of the risks involved of like okay now you have you know nine client teams that are doing different things and you have three middleware solutions and you have upgrades across all of them happening all the time um and so the risk there starts to compound and so that's from the background that we're thinking about and so maybe there's going to be two questions here one I'd love to hear about you know what are the risks and failure cases associated with what you guys are building like what's the you know worst case scenarios that could happen and how are you trying to prevent it and then second thing I'd love for us to talk about as a group is like okay you know we are um you know all marching and all kind of like making upgrades and doing all the things if I'm a validator that is going to be using all of your softwares right and also something else right how do we make sure I don't get slashed how do I make sure that the ethereum network remains performed how do we make sure that your development processes or testing or whatnot are you know in sync between all of you and also the other clients they're using such as the execution or consensus clients so it's a big meaty topic who wants to go first um I'll start with uh block times we talked about this earlier so first and foremost like Long blog times in ethereum are super important for all this entire middleware Renaissance is what we're calling it internally you have these core client teams they've been built up over time um they're funded by the EF it's free software it's the MVP viable way that you access the network and now it's time to like build enhanced functionality on top of that those middlewares must be designed and a credibly neutral manner they must be designed with like simple modes of failure for us on our side of the equation you know the biggest mode of failure well first of all like what is the number one reason why everyone's been slashed to date in the network uh it's because everyone's been running a configuration called active passive redundancy it means to get more Effectiveness or more uptime you run the same key in two places one is online one is offline this can result in like lots of false positives so you can't have a highly available validator without DVT basically so first and foremost DBT addresses the number one slashable event in the network to date by being able to give you more availability so when designing the middleware modes of failure for us today are missing you know just miss your duties and then you take your time and you bring your machine back online and that really only happens if if you leave if you lose more than 33 percent of the nodes in your cluster right so we're talking seven of ten uh we're talking three of four uh in different combinations like this um we'll be getting a talk tomorrow ocean and I um around how to design DVT at scale while not increasing correlation so today now where we're at with DVT is like correlated slashing is one of the worst things that can happen in the network we try to like avoid that at all costs we believe that um liquid staking pools in DVT will like rain predominant inside of these so it's our duty and responsibility to make sure that it's designed in a manner that doesn't increase correlation because the worst thing that can happen is a correlated slashing event takes place across 80 of the network who's running the same middleware opal is a security middleware right it's it's different than Mev boost where you use Mev boost to get more with Obel you use it to protect yourself which in theory will probably earn you more as well um so today when it comes to correlation that's our biggest focus on testing uh we think it's probably the biggest risk of the whole future of staking is making sure that correlated slashing events don't take place um and yeah that's where we're at awesome what's the biggest risk of using eigenert there are many risks but as many as things that fixes there we've tried um so there are really two kinds of major failure modes one is you know you get a whole bunch of uh stakers collude and they're not only attacking the core protocol but also attacking all these other services so the potential profit from actually your attack has increased because you have a much higher exposure that's number one I think this is uh even though this is somewhat significant I think it can be addressed uh quite uh quite well and the basic uh Paradigm for why this can be addressed well is we have to compare existing systems to this new upgrade using eigen layer imagine you're running a uh a whole bunch of dabs and all of them depend not only on ethereum for service but also they depend on some Oracle uh bridging service and a few other things that's exactly how the ecosystem is today and even though ethereum is giving you very strong security guarantees in terms of the economic security you have all these other dependencies which do not have uh you know the same same level of Economic Security or decentralization built in and you're only as safe the dapps are only as safe as the weakest link and by restaking the eats takers for example if you know just to give some numbers if there is 20 billion at stake in e but like there's no there are three middlewares each of them have like one billion at stake you just attack the weakest pool and you can actually potentially completely corrupt all the inputs and the alternative universe is where uh each takers all opt-in to provide these Services especially if these services are lightweight or scaled horizontally then it's possible that a lot of heat sakers will opt in and when you have a lot of heat stakers opting in you are essentially to corrupt any one service to corrupt any one dab you have to corrupt a majority of the each takers and they are putting themselves at slashing risk at some point this becomes infeasible there is a hardening of security you want to take 20 billion of a flash loan and go and you know stake and get burnt for 10 billion dollars and going to extract more than that it's very difficult so then you have a lot of restaking happening actually your system's net security increases significantly related to that where we are today okay the counterpart to this is the other kind of risk which is what happens if there are programming errors okay I have a bunch of these services that are running one of these servers has like a bug or even words it's maliciously designed to break the entire network you know somebody's offering a 20 yield things we have seen before and everybody opts in and at the end of the day there is some you know massive slashing event at the end of this thing all lead stakers are slashed and there is Mayhem this is our worst nightmare okay how do we solve this um I think this is uh this is you know to to get a good analogy at least you know in the ethereum ecosystem there has been a lot of thought in how to create systems that are immutable and ossified and the the right approach to this is to start with training wheels like Layer Two Solutions today and you have these training wheels where you have governance mechanisms which can backstop risks and and that's the same thing we'll do so essentially there are two grades of services on eigen layer one grade of service in which there is what we call a slashing veto there is a committee of ethereum community members this is not a token Dao which you can buy out this is reputed ethereum community members including people building on top in this committee they can veto slashing events which happened illegitimately right so slashing happens it doesn't get actuated there's a gap and in this Gap and actually and I'll clarify there because one thing that I can you know when we say slashing it's not necessarily slashing on the ethereum blockchain itself it's slashing via the eigenlayer protocol and so what it does is that your ether you have staked it essentially gets withdrawn to an eigenlayer smart contract and the eigenlayer smart contract confiscates some or all of that each depending on the slashing condition that you triggered as part of eigenlayer so it's like slashing additions on top of flashing editions depending on like which rules of the protocol you break and so that's that's what he's referring to absolutely um so the governance committee can veto slashing on top of eigen layer and this prevents things like these risk contagions but as these these protocols evolve and they have been well tested in the wild they can ossify themselves to another grade which is not subject to any slashing veto so the the only thing that the governance committee can do is to veto slashing they cannot add on new slashing so the stakers are not taking additional risks but people building on this middleware are taking a governance risks because whatever legitimate slashing gets illegitimately vetoed and so as you grow in trust when you build these new Services you've been tested in the wild you can ossify yourself to another great where you're not subject to the slashing veto and so at that point the stakers have to opt in you have to convince them to opt in because they they are losing one of their core protections either by establishing reputation and you know testing yourself in the wild so that's how we mitigate some of these risks it necessarily requires exerting subjectivity and I think this is one thing that you know the whole blockchain space should take more seriously is how do we combine subjective mechanisms with credibly neutral mechanisms so that we can get the best of both worlds very good all right um back in the house did you go yeah yeah before I started answering actually I want to get a sense of what the room is composed of so um I will ask for show of hands and and uh and please participate um anyone who's running solo validator at home can you put your hand up okay anyone who works for some professional node operator validator company put your hand up all right all right a good chunk of you anyone who's building like validator middleware sort of what we're talking about here you can put your hand up Okay small group what are you guys this is the oboe Crew That's the whole Mobile TV amazing that's a fan over there um anyone who's validating or staying on other networks uh put your hand up okay cool um all right mostly mostly actually professional validators which is which is interesting okay so risks um Mev risk boost risks um and facts I mean at some point risks no longer rests and they become actual um so in developing I think and maybe any software really it's easy to think about the first order risks right like what are the first order you know possible failure modes um and uh and you can sort of create a security model that says okay here are all the different ways in which the software could go wrong or good abuse etc for my Boost this was threefold right so from the validator perspective you are Outsourcing part of your power to these third parties that are called relayers um and there's three ways in which these wheelers could start to misbehave one of them is they produce a block that's just simply invalid right so you believe they're proposing a valid block to the network but the block is invalid the second one is that they can lie about the value of the block so they'll say hey this block is worth 10 each but in fact it's only worth one eat second way that they can misbehave and the third way is that they could withhold the the block so they give you a block you sign it you return it and then the relay just never reveals it to the network and so it causes you to miss the slot um so okay you think about okay these are three different things that the counterparty is trusting um is is trusting what are the impact of that and then how do you like start to mitigate them well the validity one right is if um if a relay continues to produce invalid blocks over time that's publicly known and so you can see like this blog this ballot this relayer is not behaving as it's expected to I can simply disconnect from this um and so the valderram in this case has a power to be able to protect themselves from being uh sort of attacked and they can also critically notice if this happens to other parties so this is sort of a key part of the of the of the security model you don't want a validator who is maybe going to propose like three blocks a year or something right to have to wait until the next block proposal to know that the counterparty that they're interfacing with is is uh is malicious as in some way in some way you need to be able to see it from the state of the entire network for the third one in the block withholding one is the most difficult because there's this problem of attribution like you don't know if the relayer just revealed too slowly if it's because the validator never like submitted their block to the relayer and they only submit it to the you know to the rest of the network there's a lack of attribution as to where the fault lies and these kinds of issues are the most difficult to solve when you're building software for validators if you don't know which actor in the system default originates from you can't mitigate it as effectively and you have to look at these like wider Health metrics for the system the the solution for that specific risk is looking at um is the blockchain continuing to propose blocks um and so you can have this health factor for the blockchain as a whole if there's X percentage of the last you know 100 slots that had a valid block proposal that you can consider it to be good enough if for whatever reason the health Factor Falls below some threshold you have a circuit breaker in which it says it disconnects from all the middleware that could possibly be causing these kinds of faults and you fall back to sort of a tried and trusted uh operation of the system okay these are the first order risks I was the following but wait there's more this way this is making what we do look a lot more simple this is great actually we're the most complex thing on a panel but this is this is awesome all right second order risk so this is like the risks that aren't just directly from the behavior of a single node right but more risks are emergent from when you look at what if the entire blockchain is operating the same software right what are the economics incentives what what are like the marketplaces that get developed on top of this and how does that impact the expected behavior of the software I think this is where censorship is sort of comes into play right so you can solve all of the micro sort of risk at the individual layer while still having some bigger broader risks that are more emergent out of the use of the entire system that can't be necessarily solved just through the the initial design they sort of become second order effects um and some of them are easier to predict than others um and it's sort of a question of iterating on on the ecosystem of the solution both at the technical layer but also at the industry level to try to make an 80s yeah and and I think that you know censorship is a prime concern for uh you know the whole ecosystem right now uh and it's been a prime you know topic of conversation throughout other panels and talks of Defcon um so yeah we're all we're all working on fixing it together that's actually one of the things that eigenlayer is often mentioned in uh each research posts about like how it can support uh potentially solving that problem and so you guys talked about the individual risks uh associated with each project but then I want to go to the next question which is that how do we deal with The Amalgamated risk profile that results from using multiple middleware Solutions why why is that funny Amalgamated that's not his word I don't know if it's right but it's good yeah [Music] this is like a humble to us all English words are nice I like them um so where we're at here like fact of the matter is there's really only one for dominantly used middleware and it's a Navy boost um so there will be many more and we made it we made it we like paved the way for all of us to see that it's actually you know doable um so like today there aren't combinations of middlewares happening we actually recently integrated Caron which is our client into a mini boost uh and now a distributed validator can propose blinded Beacon blocks which is cool um so actually that kind of opens up this new entire landscape where like um a validator looking at the mempool if there's 10 people in a validator all 10 of them have a view on the mempool uh and then that has like and since there's a consensus mechanism built inside of it that opens up like a whole new paradigm of not only what Mev looks like but also like what security looks like so we have validators uh combined with me boost running on testnet today um we don't get to propose very often but going through that process of testing it and figuring it out fortunate for us they came first I like really don't think it would have been smooth if like DVT and Mev boost launched at the same time it was kind of the natural of getting to the merge let's get any view Boost near mainnet let's change it from like a client into a middleware uh it lets merge and then after that now we take on the next middleware which is like DVT or others so I think doing them in phases as a community is like super important I think the EF kind of unknowingly designed it that way and that's kind of how we interact with the client teams for example it's kind of like wait in line you know and your turn will come up so now that we're seeing more middleware's come out and they're getting more use yeah what happens when they sit on top of each other we've been looking at it less from the risk perspective and more from the opportunity perspective but through that finding we'll probably find what what the risks are yeah and I'm glad you mentioned the client Team Angle that's actually the next thing I want to talk about because I think it's super important any any other takers on The Amalgamated risk um on The Amalgamated opportunities yes I already mentioned for example that you know uh you can do Mev type things on top of uh eigenlayer you know that's one one set of opportunities another set of opportunities is can you build distributed validation for some of these other services built on top of Icon layer because again the same set of reasons why you would need DVT on top of a code layer also applies to Services built on eigenridge so that's these are some of the touch points and interfaces I think one nice thing is the core eigen layer design is kind of as a sidecar it's not directly uh touching the client so we are basically add-on right so opt-in add-on that's the two two aspects but there are some touch points between these different uh one of the other interesting things to mention about eigenlayer and opal is for like the long-term goal of this cryptography project is to deal with what's called The Lazy validator problem so today it's not like cryptographically possible to like objectively prove who in a threshold signing scheme was not doing their job um so eigenlayer can't fix that that's more like Moon math that can fix that but then it comes down to how do you solve that once you can identify it and that lazy person in that DVT cluster you can disincentivize you can punish you can do a variety of different things today the only way that the industry has thought about punishing that actor in our sense would be to like create a token make everyone Bond opal token to the node disincentivize slash that token and to your point we would have to create our own trust Network so at the later tale of DBT in its more mature State the goal is to be able to use cryptography so that a group of people can run a validator together and not know each other they don't have to know each other they don't have to trust each other but to get there you you have to deal with the lazy validator problem and today the best way to do that is to create a new trust Network which is just you know 2017-18 all over again so there's like things that we would need for the later tale of what we're doing that eigenlayer is trying to build I have a question yeah please is it better if we like have a world where all the middleware solutions can sort of innovate right and like throw new ideas at the wall figure out what happens and you know what sticks if it gets adopted then you know it's just all Cortez problem now and they like have to deal with it or should it be that each of these new middleware Solutions have to figure out sort of their own governance mechanism over how to continue maintaining these and shipping new features and how does it fit with integrating into the principles of ethereum and to all the other uh middleware solutions that get built is there like one path that's better than the other by the way I I really regret showing Stefan the questions ahead of time so um in our case uh deep into front run [Applause] [Music] so what was the question how do you feel about front earning his question was like you know you guys are all building really cool stuff um but it's you know it's sidecars it's like you know different clients uh and so like as we mentioned earlier there's nine different clients that are you know either execution or consensus that are currently on the ethereum blockchain and now you have this slew of middleware solutions that aren't part of the all core devs aren't part of the EIP process they're not part of any established rails by which the ethereum community you know releases infrastructure software and upgrades and so the question is like how do you deal with that right and like you try to you know do you just ship whatever you want and then just like throw it at the at the core devs and be like it's your problem now so um ours was a reverse problem actually um I was part of a group of people who were focused on pre-genesis for eth2 we spent a lot of time on like enablement uh onboarding education uh then we began to focus on like uh post-genesis problems um and one of the first ones was stake centralization and DBT started off as a research project at the EF and then we worked with them to like build a reference implementation out of it and then we took it on and now it's basically our responsibility as a project to like take that and push it forward that's more in my opinion how the EF is being designed today is like uh if you want to be a real decentralized Foundation you probably can't ship too much code when you get more mature so like their job are to be like Educators and business people uh and reference Implement like you know do all the research do the legal work do the business work enable a community and push out technology that other people can take can run with it also ties to the economic scheme of how things work right the fact of the matter is is that the client teams are funded by the ethereum foundation and or in some cases Joe and now you know middlewares um are not anymore right we have our own private funding we're not relying on the EF our software doesn't need to be it has to be open source obviously but it doesn't need to be free so that fact then creates a whole new world of like yeah the economic schemes of how it works because economics incentives and coordination will deem all relationships um and at the base layer the like the relationships and the client layer are straightforward it's like virally left um everyone can use it it will be forever free the EF has given them good chunks of money to do so and now we're at a new layer and we get to create it economically the way that we want to um yeah from our end I think one of the things that has been lacking I think already Colin alluded to is economic models for people to build these new services and that's something we and the other issue that uh Victor raised is the question of whether these should be governance processes which bring on new things or should we let permissionless open competition I'm very much on the side of like open Innovation we I think if you look at the the rate of innovation on the various layers of the blockchain stack you would see that the rate of innovation we saw in the tap layer is simply amazing you know you can take anybody else's ideas compost things on top and build new things whereas if you are a protocol Dev they have a very minimal opportunities for you to express your like engineering and building skills because the only way you could do it is to go and start a whole new network and what we need is mechanisms by which we can actually massively accelerate the rate of innovation at the core protocol layers because it's entirely log jamming the rest of the applications that can be built on top so we feel like as long as there is an attendant economic model to each of these middleware being built or for example on top of eigen layer that would be collect a fraction of the fees and only the remaining fraction of the fees goes to the stickers it could be hey you have a new token and you have dual staking you you stake your own token as well as you have each state so that could be a variety of different models in which these middlewares can become self-sustaining um but I but I do understand that there are some some examples for example flashbots has done a great job in stewarding Mev towards uh away from things like multi-block Mev where things and reorgs where things can get quite hairy and I think these should the the pressure on these things should be exerted socially rather than in terms of any kind of governance process what about you yeah I I fall on on that side of the camp I think it's really tricky to design good uh standards body governance bodies over you know anything but open source technology in particular um I think we're very lucky that we have sort of an ethereum core development ecosystem that's so committed to transparency and openness and it has allowed for a lot of these social consensus things to get expressed directly into how the protocol gets designed um you know all these wars and these arguments are having being had in the public can go away if there's this like formal process by which things get approved then the question is like you know what's acting and getting these things approved and like how it's it's a completely different game that isn't necessarily about public dialogue and discourse and um and that's a big part of it um I mean you know Victor you you helped out a lot in the development of um of an Mev solution right like the there was this um eth2 working group that essentially got started um maybe this time last year to develop uh the the Mev boost solution and bring all the the stakeholders builders in in-house like what do you think is the role of all these different stakeholders continuing for it is it like you know you vote with your feet you decide which technology that you operate as a node operator which technology that you use or should there be some more active process for involving you know those views and opinions yeah that's a great question um it's hard to know but I think that as infrastructure providers what we want is by and large to be unopinionated and that we want to take open source software we want to run it in the vanilla way in which it is designed and we don't want to ever express opinions over the state of the network and like what is allowed or not allowed or is on the Strip or any other properties and so when we think about the designs of these various softwares something that we think about is you know as infrastructure providers we know how to run infrastructure really well and so the things that we focus on are you know performance our security are like all these components that enable us to run great infrastructure but when it comes to the characteristics of the designer the trade-offs um that the that the design makes I think over there it becomes much more of a of a conversation and a vote with your feed kind of thing and we actually we did have a a different Mev solution come and come and talk to us and they they came to us and they uh you know explain their their design to me and I was like that is come completely uninteresting to me and that's that's something because they were like well I had 100 hit rate before I talked to you and I'm like yeah well here's why your idea is dumb and I'm not gonna do it this is why Victor makes the big bucks brutally honest yeah I'm loving but direct um and so you know I think that we we try to we try to influence as much as we can in a way that still allows us to you know remain incredibly neutral as infrastructure providers but at the end of the day we have to make decisions and I think that the decision that we make as infrastructure providers always have to be aligned with the long-term goals and health of the network and if we're not doing that then our business is dead and nothing matters so okay we're we're very much of time thank you so much uh and thank you so much for the speakers really appreciate you thank you all right uh we'll be here if anybody wants to talk uh and if not we'll be outside and if not you can find us on Twitter and Telegram and all the things thank you guys thanks everyone good job [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] foreign foreign [Music] foreign foreign foreign foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] foreign [Music] 