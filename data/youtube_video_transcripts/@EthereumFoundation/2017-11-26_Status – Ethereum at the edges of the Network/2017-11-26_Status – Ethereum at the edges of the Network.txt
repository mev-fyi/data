[Music] cool yeah hi I'm Jared I am the main organizer and thought leader on open source mobile therem client called status show hands who's actually heard of us amazing whoo cool for those who don't know status is something like a hybrid Instant Messenger and mobile dab browser and really we have one goal and that's to take ethereum technologies and put them in the hands of people what I love about the etheric immunity is we've taken this further for crypto but we've tempered it with pragmatism and this is my book chain technology palatable for organizations banks and governments alike however this pragmatism has been somewhat of a double-edged sword when it comes to taking this technology and putting it in the hands of people and I'd like to start off with a short story that I think illustrates this point so on October 1st an autonomous community of Spain Catalonia held a referendum of independence leading up to the event they used a superb decentralized file storage technology called ipfs to organize their votes however non-technical people were using a centralized HTTP proxy and access this information through the comfort of their own browsers leading up to the events on the September 26 I believe it was Spain issued blockade of 140 domains one of which was this gateway politics aside disrupting a vote shouldn't be that easy at the same time the Tor project saw a surge in the downloads of their messenger this is the Catalans hardening their communications and one of the many things we can applaud the Tor project for is that they understand their need to package and make their sophisticated software easy for the average user to use without compromise on the integrity of that software because when push comes to shove decentralization matters and so how we package disseminate and present these technologies to the end-user enables them in ways that we haven't been able to do before and this is really the core problem that we aim to solve at status so since our last DEFCON we spent a lot of time thinking about the overall user experience and design of the perfect ethereum client and nothing matters more than that first run together with our community we've decel discovered what we think is the typical emotional narrative that's a new person coming into the crypto world is likely to experience and on that first run we want to make sure they feel safe in control not overwhelmed while at the same time connecting them with their goals and allowing them to explore therom how they wish what at the same while at the same time we don't want to overwhelm them or demand information from them unless it's absolutely necessary for example we don't need them to backup their key phrase until they actually have real value in their in their accounts and at which point it backing up their key phrase does become completely vital and they have a reason to do so and so that's when we educate them we're also introducing an omni bar into status which means that you can access anything you want to do with an aetherium within just a few taps whether that's accessing taps finding your friends opening new tabs or signing a transaction we've also worked together with our community to develop what I think is one of the most visually stunning and intuitive wallet experiences that frames your digital assets perfectly we've also wanted to make assigning transactions as less intimidating as possible while at the same time bolstering a protection against phishing attacks with a signing phrase of three words why will building out that that signing phrase we actually found out that many of our users want to store sums of value and control them from their mobile phones which are much larger than what I would fit in their normal analog wallets and we realized that the software key pair it's just not going to cut it so today I'd like to introduce you to a new initiative which is the status hardware wallets this is an open source of Java card that allows you to take the trust safety and security of a hardware wallet but use it on the go it has two modes of operation the first of which you can sign transactions directly on the on the card of arbitrary sizes however this requires the vendor specific hardware namely to support catch act 256 and proper EC point multiplication it is in the 305 spec but finding a vendor that properly supports it is somewhat an interesting problem and also to support Bluetooth as another communications protocol aside from NFC and contact the second mode of operation of which science transactions generated off card ultra all signing is pin bound however we do support key pairs and HD wallets with the HD wallets having two extra features the first of which is to a store and export your whisper identity and the second of which is to actually make one derivation path pinless and therefore this account becomes balance bound but allows you to have frictionless transactions but signing transactions doesn't really mean that much unless you've got someone to send transactions to or something and so with discover we really want to connect you with people and apps and communities so we're solving a research problem in a decentralized manner and this is what we do with the discover discover is basically a naive epidemic protocol in which users publish public statuses with the use of hashtags and this is propagated to their friends every user then collects a case of messages they've seen and periodically they generate a preference list and then share that subset with all of the all of their contacts this preference list is generated by a bunch of different weighting factors for example if they're mutual friends but they're like how recent it is if they're online there's a bunch others oh yeah like if they're been chatting with that person or interacting with that dap for a long period of time and if they trust them and so in status we're actually going to be building multiple layers of trust and this is the only the first layer which is basically automated because when the status is shared I just signed by the propagator this allows us to build chains of propagation to see how far something is propagated I hope by and the same with moderation and reporting so as you may know status was built entirely on ethereum protocols and therefore we use whisper as our messaging transport whisperer has amazing privacy features built into it however it does it isn't without its problems and one of these is essentially both peers need to be online when communicating in normal usage a sender will send their message to a recipient it'll bounce around the network eventually arrive at its destination and this receive as recipient will send an acknowledgement of that that message however if the recipient is offline the messenger the sender will send out a message and periodically resend it but the recipient is both unaware that they've received a message and they need to be needing to come back online and wait for the sender to rebuild their chat history so we are introducing status nodes which act as offline inboxes are four whisper as well as helpers for external services such as push notifications it basically works on a promise challenge deposit and it allows the sender to send these messages out they get collected in these nodes there are sipping that can be then informed come back online and rebuild their history with a note even if the sender is not available well you may be wondering well who is going to run these notes and of course if somebody has a server they can run it in a headless way but really we think it can do a bit better than that and so we actually think you can do it because we're actually expanding our platform reach so we're not targeting Android and iOS anymore but we're also targeting Linux Mac OS and windows and so with this you are we're going to make it dead easy for you to set up a status node and integrate with external services whether there are other chat protocols or push notifications and at the moment we have an in an internal friendly competition we do build status on a single code base and that rests on top of react native so on the the more developed version there is actually using react native web and the others other one is another fork of a conical project where we're actually building react native from the ground up for desktop based on QT and currently we have 60% component coverage on that so exciting times for us in addition to this another problem that we've we really faced in growing our organization is that the talent pool in the crypto community is exceedingly small so we want to take the strengths of being an open source project and help incentivize contributions and this is what we're doing with open bounty this allows you to assay to to take any github issue and create a bounty for it that anyone can then contribute to whether it's earth or any RC 20 tokens but we're actually taking this a step further from just the general mechanism which we've had for a while and we're actually building out our talent scouting and human resources around this so we can help other decentralize organizations build their builder software just like we are and in fact we also have a million-dollar bounty coming up to help other organizations get involved so please come join us at our open bounty door status tour I am if this is interesting to you in terms of our next steps well now we need to focus on optimization we're good preparing our security audits which allow us to move into production we're also supporting identity standards and we're experimenting with the swarm messaging service for more convenience so that's it for me thank you so much and I hope you're all using status [Applause] [Music] 