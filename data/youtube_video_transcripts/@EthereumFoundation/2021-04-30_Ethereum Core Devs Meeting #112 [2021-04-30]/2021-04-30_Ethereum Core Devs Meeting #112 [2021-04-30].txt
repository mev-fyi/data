[Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] okay well hello everyone uh welcome to awkwardev's number one one two um yeah we have a lot of london stuff on the agenda today as well as a few new eips um so yeah let's just get into it um the first thing uh we had is on the last call we spent uh some time discussing eip 3403 and and martin and vitalik said they had a new proposal for it um and given this something we really wanted to do in london uh yeah we we said we wanted to review it prior to this call and hopefully make a decision about it today so the eep has actually been formally proposed it's eip 3529 um martin or i don't think vitalik is also going to call it tweeter if you want to give a quick summary of the eep before we have comments uh sure so the core idea behind the eip is basically that instead of i completely removing uh gas refunds it reduces gas refunds if for in most cases from 15 000 to 4 800 and the two exceptions for that are the self-destruct refunds which are still completely removed and the refund for um a storage slot going to zero when it started when it started at zero and got increased to one before and so that's still kept at i think it's a 19 900. so the core idea behind this is to basically red by the way they're i'm getting echo feedback from someone um the core idea behind this is basically that we reduce refunds to such a you know a level uh that in order to get the refund you have to spend the same amount of gas on that trade on that same slot at some point earlier in the transaction uh and this basically means that like there's no way to get more gas out of a particular storage slot in a transaction than you put in and so gas tokens stop working and also the maximum amount of like extra gas that you can that you can get out of execution is also much lower so it still satisfies uh kind of both of the um original objectives of uh of removing or restricting refunds but it has the benefit that it still maintains a very substantial incentive to actually clear storage and not just like replace values with a one instead of a zero got it thanks um anyone had thoughts comments on the eep they wanted to share so no uh no strong opinions um i guess on the last call it seemed like people were generally favorable towards this idea um and included yet in london is that something that people would still want to do i don't know some of the kind teams have thoughts on this yes team but in favor yes oh sorry i was just saying not a client team but in favor yes um i would try to avoid it for london unless martinez generally suggesting this is needed for security like for the for just for the sake of removing gas token i don't see the need for that for now but uh if that's important for security of the gas gas sorry the blood gas limit elasticity and this unpredictable sizes then then i would go for it so i can't really say how important it is for block electricity and uh how bad denial of service issues could be with the doubled uh capacity uh i don't wanna like cry wolf too much um i do think it's the concern uh i am mainly familiar with death naturally um i i mean i assume that there would be denial of service issues for other clients um i think it's good to do this in like conservative gesture but um yeah i i also want to basically say that my personal main motivation why i see this as important is because i think it's good if we get rid of this gas token um because i believe that gas tokens are used to just mint a little bit instead of picking some cheap transaction and this drives up the transactions prices and um yeah causes bad ux for users and i mean it causes bad ux and it causes problem with state size so that's really my primary motivation uh and yeah and i'm obviously for it um i don't want to speak about the gut team though peter what do you think well if you ask me i i completely believe that oh peter you sound kind of like a robot your audio is choppy i'm still getting echoes from someone in the call by the way it's peter i think i think greg is the only person not muted um is it doesn't gas tokens also contribute to state bloat more so the longer that they're there when we don't need them wouldn't that be adding additional pressure to the state we don't need yes so as well yes that's one of the uh so it's a ux problem i think uh gas driving the gas prices up but it's also a state management problem uh seems like we've got two decent reasons here for going ahead and including it in london [Music] for some reason zoom completely uh maxes out my cpu i don't know why so um anyway another problem with gas tokens is that it's kind of reminders kind of always have an integer robot just instead of instead of just including transactions because there's always you can always sell guest tokens later so that's another problem that you're essentially miners can just decide not to include transactions but mint tokens and this is actually a self-reinforcing problem because then block congestion just goes up and that just drives gas prices up so it's actually it is worthwhile to mint gas tokens because you it you can extract more value from the network and at the same time you're raising the gas prices so your gas tokens become even more valuable so it's kind of a perverted thing to leave that in but uh all in all i think the biggest problem is the deterministic blocks and having the potentially 2x blocks is just i mean it's hard to reason about so for example if somebody were to ask can we raise the estimate and we always have to think about the worst case scenario and since refunds allow us 2x the gas limit it doesn't make i mean we can't raise it to 20 million simply because that would actually mean 40 million so it's much easier to have these conversations about raising the gas limit if you know that gas limit means a certain thing and not potentially 2x and i guess last but not least what i wanted to mention it was traffic at it but i i'll just go one step forward further and and see that uh i think we've hinted at it quite a bit over the past years that ethereum network isn't that particularly safe from [Music] a determined denial of service attack and berlin included eips that made those attacks very unprobable we've got included snapchats which again made those attacks super unprobable we don't want yeah details which we'll hopefully do in about two weeks but in essence we've been trying to push towards making block sizes deterministic and state access more meaningful for a specific reason so it wasn't really just randomly trying to to make things you get it so it's uh but um anyway so if personally i would really really strongly suggest we go towards this but we can get you guys more information in two weeks so there's there's one thing that i wonder if you take into account so currently lots of gas minting happens at zero gas prices as the miners fill the blocks with a cosmetic and also any any gas miners have to have to do that at low gas prices right which means that in the in the times of what after we introduced the ip1559 which is in london anyway we'll have base fee so actually minting gas will be uh possibly no longer viable because you'll be burning the gas so miners will no longer be able to simply fill the blocks with uh with gas minting because they would have to pay the base fee and they would uh generally raise the base fee so that would contribute to them at their the revenue falling probably and also i'm not even sure if there is enough of the gas stored in the gas tokens to provide any substantially long attack on the on the blocks so i think it's it's just may not be necessary at all that it will because of the ip1559 and basically it will simply die out thomas i'm still having trouble understanding the perspective here you're wanting to just do this later is that the intention no if i think that it may not be required if the motivation is that what what about state blood is that stage blood so if gas minting doesn't stop stops being useful sorry stops being viable after eip1559 because of the burning from the base fee then we don't have state blood because it simply doesn't happen anymore i don't right all right what about what about cleaning up the evm in general and just being able to reason about the gas limit better and that gas tokens aren't unfortunate side effects of refunds and that refunds aren't an effective mechanism and that getting rid of them in this context in the evm makes the evm easier to understand and reason about well that was not raised as a motivation so far so obviously for the future implementation that sounds good but i think there'll be lots of other cleaning and changes that will happen as part of the merge that we cannot really predict that this particular change is that it's might be slightly rushed for london that this particular change is the best potential change taking to count all the other work on stateless ethereum all right last question your opposition is it strong enough that you want to change all of our minds or are you voicing your opposition but you're okay with things going whichever way oh no it's it's uh slightly more towards neutral as i said like uh i would listen if if you if you think that this is um for the security reasons that definitely i'll be convinced what i what i'm not convinced by is that it's if it's targeting the gas token then i'm not convinced at all that this is um this is needed also because of uh of the base fee if it's for security purposes and if it's kind of analyzed then we can show like how it leads to that security issues then then definitely i would like to include it i i really think that we should get rid of this the emerge will solve everything attitude the merge won't solve everything we should uh do changes incrementally yeah it sounds like we don't have a strong point of contention here there there is definitely a well understood worst case denial of service scenario here where it is possible for this to muck with the total amount of gas used in a block and i don't think that anybody made this specifically to get rid of gas tokens it's more focused on the effect the gas tokens can have and then there's a bunch of other beneficial side effects so um anyways just contextualizing this discussion it sounds like we don't have a strong disagreement here and that we do have people who are strongly in favor of it uh danny i think you had your mic unmuted at least for a while yeah um so there is a relatively new issue um with the miners minting zero fee gas tokens and yes that would be changed after 1559 because they would have to burn but that's a relatively new exploit and that's actually probably a pretty dangerous exploit but i don't think it actually changes the other mechanics of yes the 1559 would still be potentially profitable for like when the b space feels low for people to meant uh to be sold and uh for high gas right like even even today when miners are making zero few transactions like they're not really zero feet they're paying opportunity cost so if they're willing to pay opportunity costs down they'll be willing to pay the base if you want to slow and that that that line will be will exist somewhere even if it might be less or more than we think it might be when the base b happens so i think that the economic argument against base fee being uh a reason not to make basketball since i don't think that'll hold up very well i'm i'm curious if i don't know anyone on the basi or open ethereum team has an opinion on this i think i like piper's point about just keeping in mind kind of the relative ranking of the um reasons for and against that the primary one is that might eclipse all the others is just to think about the reasoning of the max block size um a block cast limit and then beyond that if you know this descent on that then you can kind of use the others as tie breakers um anyone from open ethereum and if not they'll go to the raised hands um i think uh there's only me from the open ethereum team today if uh it's really that simple of a change we would not need to do it sorry what was the last part i missed the last part of your sentence um if it's really that simple of a change i don't think we need to to uh better it for them and then thomas yeah so um i was basically just curious um if like do we all expect that the um that that the erp would have like a significant impact on the on the safe gas limit or do we or is is it so unset like like naively to me that it seems like at least to the extent that we are limited by peak throughput vip would allow for up to like a 2x increase of the same gas limit because we would only kind of like have peak peaks of 2x and not peaks of 4x potentially of course we might also be limited by other things i'm just wondering because like to me if it really makes like a big difference for for the safe gas limit i i personally would be like strongly in favor of it but if this is more complicated and maybe doesn't have any impact on the guest limit then so i just basically be curious if people generally agree that it has an impact on the on the safe guest limit or if there are like some reasons why it might not uh thomas so just um to come back to some arguments here when we were talking about this sorry when we were talking about the cleaning the evm so this particular eip doesn't clean the evm because it just changes the parameters to reduce it which means that cleaning of the evm doesn't happen at all with this with dcip so a piper maybe it's a precursor to cleaning the reason that this eip was changed to not fully remove them is so that we don't introduce a perverse incentive for smart contractives to set values to one instead of zero the intent is that when we move to state expiry we fully remove refunds um and this was sort of a compromise to make sure that the uh smart contract developer incentives were correctly in line aligned so i think i can really talk about this particular vip and it doesn't clean evm and it's like we had this conversation about this step towards something with the eip2315 where it actually later doesn't really make that much change and that's just two steps and the difficulty they also like they if we assume that it's the miners that meet a lot of gas tokens nowadays then those attacks on the block with the double deck block limit is not only opportunity costs but because of raising the base fee their revenue will fall significantly after such an attack because of the basic growing the their opportunity cost will be huge in the case of such an attack and the attack will should dissipate quite quickly that's my intuition and it's very very constant for the attacker i guess i don't know so one i just one way to just one way to contextualize this discussion i think is that like it feels like okay so there's a cip there's maybe let's say for example a 30 chance that the block size barriers issue is important enough that is like really important and maybe a 70 chance it doesn't matter much there's also a 30 chance that uh getting rid of gas token is something that's going to be really valuable and let's say maybe a 70 yes it doesn't matter much and i have not heard any arguments that it's going to that this could be actively harmful right so two 30 chances of making a significant uh of uh solving significant security issues is still worth like the fair fairly small number of lines of code that the cip contains at least i think uh peter i know you came up you came off mute a minute or two ago did you have something you wanted to add yeah so um this uh i just wanted that that this discussion kind of went tangentially over into management and gas tokens but that's not the priority i'm looking is to keep the size of a block deterministic and not allow doubling it all of a sudden so that's the primary goal here yeah it's worth saying that you can do that without gas tokens i mean you would have to have a significant storage uh to unlock to to execute such an attack for a longer time uh i mean i see clearly there's massive support for this one so it's totally fine totally fine the only okay so just to claim the arguments against uh why why am i even talking about it and potentially of suggesting not including it uh there are two two reasons so i think there will be some additional phasing and testing efforts which may lead to a potential delay of london making it a bit slightly just slightly harder um fork to sorry network upgrade to introduce and the second one was that uh like historically the changes to the uh gas calculations were like potentially risky for the consensus split which uh which i think this is also the kind of risk that we want to avoid uh yeah so these were the only all new arguments that i had against the other ones is just a question whether whether the proposed uh reasoning in favor of uh is correctly calculated to like d in detail calculated but i agree also with the statement that if there is a 30 risk of this like very negative consequences um then yes it should be introduced however this exists now but here is a statement that eap1559 because of block elasticity can cause some damage but it's also it's in the in the case of longer attack it's resolvable by miners um decreasing the boss sizes and so sorry i won't be really making more statements about this one thanks it really makes sense also lots of things that you say here thanks for for sharing um alex is your hand up related to the cip um yes okay go yeah go for it um yeah just a quick question maybe this has been discussed prior um since the refund for cell district is removed um that means at least i believe the chai and the gst 2 gas tokens they would make no sense to be self-distracted anymore and i i wonder if i'm assuming tcip is accepted today between now and the london hard fork itself will uh will the time be enough um for people to actually i guess they still will keep using the gas tokens but at some point maybe they will start to destroy them in order to reclaim the refunds before the hard fork happens and i wonder if this actually going to happen and whether the time is enough or will we end up with having a lot of stuck gas tokens because they are not economical to be redeemed anymore and whether the the goal is that state expiry gonna deal with those remnants i um i don't know the burn rate of these i would like you expect them to be not minted anymore but mainly only burn from when we decide to go with e but i don't know the burn rate and it's not necessarily still what they will stay on forever uh it might be worthwhile for someone to just pay and get rid of them i don't know that depends how many there there are i think marius checked into this couple well there is some public chai token tracker and if i recall correctly it's on the order of i don't know for three or six million such contracts right now and yeah if anyone else has more info about how many they are and what the burn rate is feel free to jump in acts like the other part of your question about like kind of do we expect state expert to clean this up yes in theory state experience makes it not matter at all if they get constructed or not um and it shouldn't shouldn't make a difference either way yeah i don't have anything to say it was really just a question to you to understand this part got it then the other the other argument that you mentioned thomas was around testing um so i guess just two things i would want to check there is you know in terms of implementation um would all client teams feel like this is something we can implement and in terms of testing you know is this something we think we can test properly over the coming weeks uh that you know we feel comfortable including it in london so if i can just speak quickly for testing um we have performed so we have the test cases written for good old 1283 and then for 2200 which did the nether gas changes um so we have quite a lot of reference tests covering uh modifications to those things and the refunds we have particular fosters particularly written to try out various combination of storage changes and doing calls and source changes and yada yada which were written uh or reused when we wanted to floss the 29.99 so i think the from a test coverage i think it's pretty good and pretty easy to just use the ones that we already have with the new rules and done i don't think there are any explicit new testimonies written um got it thanks and does anyone i guess on the client side feel like they could not implement this in time for the london timeline that we had um i don't think it's that hard to implement and then in the chat micah has a comment about like the chi uh maintain uh so it would take yeah 80 to 320 days to get rid of them um is that based on like the the historical how much get burnt per day yeah just looking at that dashboard is one length it looks like on any given day uh the economy burns 5k to 20k okay very rough ballpark yeah it's just so at 20k that's 80 days from now is basically july 19th which is you know five days after when we said we wanted to fork on maintenance so you assume i guess you know if people really wanted to burn them they could probably have the rate go up um yeah so and there are there are days where it is higher than that too that happens or so it it could be like that being the general right the limit that isn't the limit there yeah yes but keep in mind that the people who are burning these are almost exclusively bots and the bots and one inch users and so the one-inch users are kind of fairly stable the bots come and go in terms of their volume based on what opportunities are available and so those days where there's lots of cheaper and is usually because there's some mev opportunity the bots are really trying to leverage heavily and so i don't know that the the broader community actually has much control over the burn rate it's more like when the opportunity presents itself they burn and when it doesn't present itself they don't burn it's not like they're just burning all the time for fun [Music] got it well yeah but i guess opportunity cost will go up as the gas tokens go down in value so eventually it will be worthwhile to always burn uh so i'm not convinced for that because the bots generally will always burn chi because their goal is to get their for their like high value transactions when they're doing gas working with and they're putting a gas price like a thousand um they want that to have the lowest gas possible and they're willing to pay whatever the charge going rate is for cheat tokens for that transaction like the the cost doesn't actually matter to them what matters is getting their gas down oh yeah okay i get it so by opportunity costume and uh if the chain is idle i mean there aren't insane trades to be made then there are essentially the bots will be idle yeah exactly so if the bots aren't doing anything they're not going to be running anything basically uh and sky you have your hand up yeah so i just quickly wanted to ask and this this could be like like naive or anything um basically uh one possible alternative to the ep that i just will like that seminar just thought about were was what if like basically uh after 1559 uh you don't have the refund um like basically the refunded gas still counts against the block limit so basically like refunds can't don't don't have any elasticity kind of properties anymore um so say i don't know you have a transaction with 200k a gas usage but like 100k refunds then instead of like only counting 400k block space it accounts for the full 200k um and it has to pay the the tip like that the tip part of the transaction fee for the full 200k in order to make minus indifferent of including it but it still gets like a discount on the on the base fee so kind of like it would only have to pay like in this case 100k on the base fee that would be like just in case like if people are still kind of like feeling like maybe they want to think about this erp more and only included in the future folk after this might be like a very simple change that would kind of get rid of the elasticity problems while keeping most of the properties of of refund savings intact so i don't know this that i could be kind of missing something here but maybe this would be like a practical kind of interim solution while we discussed like a good long-term one i don't see a problem with nuking out gas token i don't see that as a problem being needing the solution yeah it doesn't seem like we need an alternate solution but if we do we can look at this route i feel like we've been looking at routes for long enough and we need to just decide this is like the fourth iteration of the eip already which has been great the progression has been awesome what is what do we think our timeline on uh state x3 is since that seems to be a interrelated like are we talking like two years six months after the merge what just ballpark one point five to two i don't know yeah okay and it's uh so i guess another thing worth noting is um you know we have this we basically have to make a call i think today otherwise we're going to be pushing back the london timeline um yes there might be another feature fork after london but we also said on the last call if the merge was ready um you know we would do the merge before this feature fork um and given that this is a solution that helps with the block time consistency and this is also something we'll want for e2 it might actually be the last chance we get to make block times a bit more uh predictable uh before we have the merge um yeah so i i guess just to if this is something you know we need and you know like it's like you said that it solves like two or possibly more 30 risks um yeah i would favor including something today um because otherwise we we just might skip the we just might miss the london deadline and if we missed the london deadline then um we might miss the merge also and this is probably not the type of change you want to include right when you're doing the the actual consensus swap so maybe the open question here is would anybody else like to argue against including this in london your hand is still up but i think it's from the previous comment yes all right okay no worries um yeah so if there's no oppositions i guess we include it uh last chance for anybody to step up okay great uh so included um i know yeah this has been like pretty long discussion but yeah i think it was it was well worth having so thanks everybody for for your comments um it was the biggest thing on the agenda other things should be uh should be uh simpler to get through um so moving on at the next one so just the difficulty bomb delay um we agreed on the previous call to have it around december 1st um but uh i asked the e to be modified and and the champion uh i think is on vacation um so i don't know what's the best way to go about this do we can somebody else submit a pr to the eep should we just have a sep different difficulty bomb eep that we use that we just uh that we just uh set the date to december first um i just want to make sure we actually don't like forget about this uh and and yeah come to the come to the the spot where we need to actually set it on mainnet and and we don't have a number is this person permanently on vacation or temporarily on vacation i pinged them uh they didn't answer which is reasonable because on vacation but yeah i don't know um uh just uh just to confirm i i got i was trying to get a hold of him for my beeping session it seems like he's unwell and that may be the reason is unavailable to answer got it yeah yeah i i would expect maybe to not be able to get in touch with them for now and maybe an easy solution is to copy the eip with the new data and actually put him as a co-author on the new one yeah i think that would make sense just have a new eip so we can merge to it uh obviously give credit as an author um and target a december first date um the does anyone want to do that is is the number is the number already been calculated for how you know what we would need to do for that okay so that needs to be done too yeah so you need to calculate basically how do we how by how much do we push back the bomb so that it goes off around december 1st if no one if no one's interested i'm happy to take a stab at it and uh you know work with uh work with uh folks to to get the number and and and at that um the reason uh alex has a comment yeah i i can i can look at it and then i'll ping you if if i start if i have troubles um before next week maybe before so the next week i'll look at it and if i'm having troubles i'll make sure i reach out to someone okay great uh so yeah we do that like like friday so we have the week after to also do if we need to okay sounds good so yeah oh okay let's do that so james uh try trying to get something out by the end of next week um and alex you have a comment in the chat about december not being too ambitious uh we discussed this on the previous call as well the reason was we expect to either have the merge or shanghai ready before december we still don't know which one will come first um and we wanted to keep the bomb as a forcing function to do that um yeah um and basically yeah december 1st was such that we would have the fork before then yeah exactly firmly before then yeah and and we also agreed like nobody wants to have a fork over the holidays so it's like if you put it on january 1st then it's basically the same thing because we're not realistically going to fork on like december 20th or something like that um yeah um okay cool so yeah we'll follow up with a new eep on that that basically supersedes the previous eep um next up was eip 3541 so we were discussing a bit uh on the cordev's chat this morning uh alex do you want to give a quick overview of the eep hi it's pablo here and we agreed i will try to do the overview of that um if that's fine with everyone of course and so so the bigger picture of that is is uh ethereum object format which is proposed as eip 3540 and this introduces some kind of container for evm uh evm code so it adds some structure to the evm code it's not it's not a sequence of bytes anymore and um and important uh things about this one is that it starts with some magic uh sequence of bytes uh which is a prefix of this container and the second second field there is the version number so the first feature it provides is is versioning of the uh of the avm code um so it has some benefits over previous proposals that were getting the same the same thing which doesn't require uh the change to that the stor the the stage uh try because all of the information about the version will be keep inside the bytecode and second most important thing about that uh we together with this uh this object format we also introduce uh validation of the code and all the all the codes deployed on the blockchain starting from from this eip i mean the ap that introduces the object format will be will be validated and and we have some we have will have guarantees that the the objects that is in the state is already valid and one more thing about the the the the ethereum object format uh and uh the version first which also is part of the of the ap is that uh in the first version we want to introduce uh code and data separation so this is kind of alternative to the begin data instruction proposed in other places yeah and that's that's mostly that and i think i i should mention that exactly feature set of the the first version of that is is up to up to discussion and and tuning so that's that's about this uh ethereum object format uh as a as a like the goal we're aiming for um and now what what is proposed for london so for london we propose uh well starting with uh that to to have these guarantees about contract code uh validation and deploy time uh we we we discovered a way of doing that in the like the most uh backward compatible way by doing the deployment of this into hardworks and because we need to come up with this this magic sequence of bytes creating a eof prefix and in the first hard work what we want to do is the freeze the first bite of that so no no longer uh contract starting with this bite are allowed to be deployed after the the first hard work and the first hard work is is this proposed for london which is eip 3541 and after this happen uh we will be able to find the sequence the remaining sequence of the prefix because mostly that the search space is freezed at this point yeah so that's i hopefully i more or less explained uh the situation and the the so that's why kind of we we we want to include this first uh the first change as soon as possible so later uh deploying all the full features that uh it's not blocked by by some other dependencies so the eip f-3541 um we we we think it's it's relatively simple it's mostly at when you create a contract you need to check if the the code to be deployed doesn't start with this special byte this is this is not any any use any used any currently used instruction and if this byte is has this value you you fail the contact creation uh and that's mostly the chain three that has to be implemented lastly uh i did some uh i did gaff like proof of concept implementation and based on that we generated a consensus test in the format of of this official repo uh yeah and that's that's all from me uh in this subject if anyone else from the from the people worked on that want to add something i think that's that's the good moment now uh yeah vitalik yeah just one quick question to or a kind of request for confirmation this eip that you're proposing that you're proposing to do uh fairly soon it does not require any any kind of agreement on what the uh co structure of this structured evm code is actually going to be right uh yes yes okay i think uh martin has has some valuable comment about that uh today on the chat that it doesn't have to be even this uf for much the other options that gonna go uh later on right no my just like strategy like longer term strategic concern is that we are going to uh or at least i think we want to do code fertilization at some point and code verticalization introduces some new criteria in terms of like how we want in what way it's good to uh optimize the structure of evm evm code and that's something that the structure format probably should be designed and so just if even if just for that reason it's probably good to not rush into like design making decisions on the code format that we can't go back on now too quickly yeah so it's a good point and this this first step is a good first step if you want any kind of structure no matter what it will eventually look like in my opinion you got it um i'm definitely in support of this i'm wondering if you guys have given much thought into how this ends up with interplay on test nets and things and whether or not you guys see us ending up with like needing different prefixes for test nets or things like that due to this yeah so um it's just a matter of uh after this has been rolled out on all test nets that we know of we just find the best prefix and at that point we can choose to say well we extend it with three bytes or or even four bytes because someone created four million contracts on robson or we may choose to say let's screw robson over and start a new testament because it's i mean we have we can choose later on if we want to make a longer magic or if we can live with some testament being wonky and we can ask if there are any public or private networks that have any anything um if they have any concerns uh about particular magic values um it's something we need to solve later and i think it's not going cool i i don't see it as a strong concern i was just wondering if there'd been consideration put towards it thanks uh paul you've had your hand up for a while yeah um in general i'm in favor of the big picture uh the code verticalization that vitalik mentioned uh if this brings some global properties then this has to be you know there are some design interactions with these various features that are uh coming up including code verticalization the other one is in particular i want to say there are code vertically virtualization is local it's everything is local and all decisions are made locally but when we have global properties like you know versioning and offsets and things like this then this has to be resolved soon and the other interaction we have with this one is address extension to 32 bytes which gives us versioning for free uh so this could be become redundant uh i don't know but i would like some maybe mentioned somewhere about how this interacts with address extension to 32 bytes that's it alex you also have your hand up yeah i wanted to to respond to the what vitalik said regarding uh localization and mercalization was actually considered um and the the currently proposed format which is not even proposed for london but the currently proposed format has headers in front so that would mean that the first chunk would have the headers and one of the the reasons we prefer deploy time i mean contract creation time validation versus execution time validation is exactly code marketization because if you would have execution time validation you would always need to have all the chunks so that would just render mercurization good morganization mode um regarding the the address extension address extension was actually one of the the motivations to this this whole work with the state expiry proposal an idea is that it would be easy to disallow old legacy code for new addresses all together so i think there's a good inter interaction with these proposals but as it was stated address extension and state expiry might might take upwards of two years and it would be nice to to make some progress on this topic you know before that uh paul your hand is still up oops and it's coming down no worries um i guess i'd be curious to hear from the different client teams like obviously you know we just barely got another eep into london um i understand this is a small change but it feels like we are kind of adding small change after after small changes um yeah i'm curious what did the different client teams feel with regards to including this in london is it small enough and valuable enough and i guess future proof enough that it's it's worth it um yeah so baby uh i can go does anyone like have a strong preference either way or are people mostly neutral so uh i i i've been apart a little bit in defining this so i it's partial but i am a proponent i don't know if peter is as well um can it be a nice to have like is it something that we really need for london or we could at least have it um kind of in the backlog like a signal to the clients client dev teams okay work on these other ones and then if there's time then work on this one i don't think so because assuming we don't want to delay london we basically would need to choose blocks on the next call and ideally we probably want to be pretty finalized in the implementations before then um so i suspect we probably need to tell people either it's in today and you have two weeks to implement it or it's it's not in um unless we delay london but i think we've signaled pretty strongly that we don't want to do that do any clients think that implementing this will be challenging challenging in any way i think it should probably be fine i believe so too because i suppose a lot of other changes there are only very few places where creation actually happens and yeah so this change is really localized yeah i guess um the other thing that in order to continue defining and working on these specs you kind of need this base step to reserve the thing so so i guess that kind of puts some urgency to get it into london and if it's i mean [Music] this one is enabled open this area by the thoughts no comments didn't have enough time to analyze this in details so is it the end of the world if it doesn't go into london i agree that it is a it is a good step and uh it makes sense but could it not just go into the next one i think the nuance there is that for most eaps the next one means like where the features would happen would be oh we're just going to move to the next fork but for to do that for this one we're actually pushing it two forks further because we still have to have these interim steps no yeah i understood my question still stands yeah i think that if it doesn't get into london go ahead oh that was just echoed from you oh okay um the if this doesn't get into london then a case could be made later that this is redundant with address extension because address extension gives us versioning for free um so i vote in favor of getting it in to london otherwise it's gonna sort of there's gonna be interactions i think it's good anyway even if there's redundancy it's good to decouple addresses from the bytecode and then just have a piece of bytecode you know and know how to execute it without having an address so i think it's useful anyway so i vote for yay for london but i know that my opinion doesn't mean anything you can still you can still decide to decouple them down the line you can understand that address extension can get get you it for free and choose not to leverage that uh if you allow comment on the address extension um having it intrinsically i mean it means that you can introduce new versions uh on each epoch and you would tie the allowed version to epochs i guess that's the the way it would would work but the problem as you mentioned is that you need to know the address in order to execute the code you cannot execute the code outside of knowing the address it doesn't have to be tied to ebox address extension leaves some space for bits that are unused or reserved for future use we can use one of those you don't we don't have to pay you back on the epic stuff yeah but i guess it would be less complexity if it's just tied to epochs right uh sure that's definitely an option yeah you're right oh greg you had some comments okay i'm muted uh i haven't had time to follow this one in any detail uh i'm partly concerned because there was a lot of discussion about this and martin probably remembers with the way way back in the vip 615 which required something and all kinds of issues involving uh code that creates other code that needs to go on and that code can't be changed contracts that aren't really code they're actually data just there were a lot of issues that i i don't know for sure whether this one is going to bump in to those sorts of issues and also to remind uh christian's attitude about begin data uh at some point he just said i don't care how you do it but there has to be a way for solidity to hide the data um that it needs to have uh without playing the tricks that it has to play uh to force the date to be uh not accessible as code he has to do ugly things um so i'd be a little happier actually if i was sure that this didn't run into those same problems and could actually get a little bit more fleshed out so that it solved the begin data problem at least yes so you are yeah i also recall all those discussions from way back uh with waitang and a lot of people were trying to devise a scheme to have both this kind of opt-in validation saying hey i want to play by these rules and also these kind of validation or certification rules that meant that an ebm could know that hey if i run this code i don't have to do any any jump test analysis because the it's already been validated uh but we never could get there because um we had to modify the accounts in the state we should modify the state try we run into problems with well how does this kind of change if you have this new kind and you create something else and oh it becomes tainted or does it before the same rules old rules or whatever and yes there were all these problems that's why i'm so optimistic about this first step because it's just um yeah i think it's really clever step just that solves all these issues and um as for christian right visitor and they begin data and also martin luther's proposal about the the format this is kind of um the next step those ideas um implement i mean this stuff makes those things possible uh in a good way that's my opinion about it it makes them possible but the next steps could get so delayed um the way our our forks are getting laid out and the way the merge is interacting and the uncertainties there that we could make this step and then not be able to make the next step for like another year or more that's true of every eep though to be clear so i think we're kind of at this spot where no matter what whatever is not in london yes could be delayed another year and we had a similar conversation on the last call about 30 74 and it seemed like people were comfortable that you know we can aim to have another fork after london if the merge happens first it happens first um but yeah we don't have the certainty and i think that's just like our situation right now but this kind of makes it possible yes yeah yeah yeah yeah uh michael you have your hand up uh so i i think what greg is alluding to is that we can if we we don't yet know what the second half of this looks like and we might not know what the second half this looks like for years and so we could put this in now and then by the time we actually know what second half looks like we realize oh this doesn't actually line up the way we want and so whereas an alternative path would be we don't do the first hard fork until we know what the second hard fork looks like so we can guarantee that they will come one after another like hard fork than hard fork rather than hard fork and then two years and then hard fork um alex um yeah a couple of comments um maybe to to greg if i understand correctly maybe you you're also concerned whether what's christian's opinion on on this and the christian has been actually following and interacting with this proposal so he's fully aware um um of of the proposal and there's an actual implementation in solidity um and by proposal i mean 3540 which is not planned for london um and to a comment to to you micah we do have a good idea what uh would be the next step which is 35.40 but as as martin said on the chat um even if we end up not doing 3540 which i hope we will this first step could be used to to introduce you know something like the begin data or any other proposal and there so there's a comment also in the chat i'll just highlight from asgard that the eep is low risk um because it only reduces functionality um and could always be reverted in the future if we don't want it um so it seems like people are generally in favor like um would anyone have i guess a strong objection to putting it into london um okay well i guess if no one disagrees um yep we included in london last chance to voice your your disagreement when's the last chance for us to actually make the decision last call literally no we've learned that the last chance to make a decision is very much later than that um let's just make the decision yeah but we'll let's skip the comment on previous politics okay so no right this isn't a political thing it's like there's some uncertainty here and can this way to one meeting for people to look at it a little bit more closely to know if there really are objections or not or is waiting one more meeting going to make it too late to make the decision well so uh um sorry if i'm jumping in so i would propose instead if it seems like we are leaning towards it that we decide to include it and then at the next meeting if the opposition has grown stronger let's revisit that decision and potentially put it out again uh but in the meantime i think it's good to signal we're doing that we want to do this um and implementers should implement it etc so maybe one thing we can do um based on that uh yeah so basically thomas has a comment that the next meeting is three days before the client should be locked for london um so maybe what we can do instead is you know make it considered for inclusion for london um we're gonna have a conversation about like the devnets right after this so potentially added to the next devnet and if people feel like in uh you know in the next few weeks we've got it implemented it's on you know a devnet or close to beyond the devnet and there's no objections that come out then we officially move it into the eep at the to the hard fork and otherwise we don't um but at least we can move forward with the implementations and whatnot um and i agree there's some comments in the chats about you know the eep is not even a draft it's the first time it's brought up on core devs and whatnot so there's some easiness about um uneasiness about yeah including it directly so at the very least we can move at the cfi it'll be there we can add it to the devnets and if that's if that's ready by the next call um yeah we can decide to include it in london um but we don't have to make that call right now and it'll be implemented in clients um may i just uh comment something i just joined specifically to to make this comment about the crp is that this specific uh suggestion about banning the the contracts with this particular starting code we could have presented it like maybe a month ago but the reason it wasn't presented a month ago is specifically what people now are criticizing it for is like because we don't know what will come next but actually this whole month has been spent by pavilion and access to try to present in these two pieces there's a lot of text there what will happen next unfortunately it took some time and you know we could have just put in the this very short phrase like after the fork we do this and that it would have been done months ago but you know unfortunately this time has been spent on trying to flesh out what will happen next and you know it unfortunately got us to this very tight spot so i think alex say uh tim asked earlier vertebrates thought about it and you weren't present at the call at that time would you now like to just voice your official opinion as the tour because oh yes i'm pre i'm because i i am uh i am for it i think it's it's a it's a it's a very very useful thing and of course i am i also suggested the idea about the this first step because i know it when it gets through it's basically it's a way to to stop has to stop procrastinating of like what mike is suggesting is that okay let's figure out what happened next and all the details about what happened next this is what we tried to do before for years in fact and it never worked because you know we never made the first step but this first step is basically get rid of all the procrastination because when it's done you can figure out and it's provable that you can figure out the way to to work around of anything that happens before the fork so in terms of like who wants to deploy this and that and we can always choose the magic which will defeat any adversary that will try to stop us from doing what we're doing so i guess based on you know martin alexa's comments and a bunch of comments in the chat about you know the bad process of including it today um does anyone disagree with making it considered for inclusion today uh adding it to the devnets which we need to basically restart anyways because of this other refund eip and making a final call on the next call two weeks from now so that actually leaves times for people to digest it to bring up objections and whatnot and not obviously not just people on this call so like everyone i think uh if we included it today there's probably a lot of people who would be like surprised by it because it just showed up a few days ago and and then it's scheduled for london um yeah so any objections to making it cfi and adding it to the next iteration of the devnets okay i guess we'll go with that then um and that i guess kind of brings us uh yeah to the devnet so um i know there's been a lot of work done on alut in the next sorry in the past two weeks um does anyone want to give like just a quick summary of where things are at with that i know there was a lot of discussion even this morning prior to the call uh yeah yo jim you want to go hi guys i'm joking from the javascript team and i've worked in the past week by sending a lot of transactions to this testnet i noticed that uh when i started syncing this network there were only 20 transactions or something and most of them were just the falsehood transactions or legacy transactions i found some works and uh as some general comments i think the testnet needs a lot more attention because there are only 20 transactions up to the point where i started sending some things in the next testnet we also need to prevent these precompile accounts because that is not the case for the chesnet and i also think that we should if you are going to use a click again then we should use multiple signus because i just noticed this afternoon that i cannot send uh access list transactions for some reason or well i can send them but they do not get mined and that might be because bazel is not including those who does not want to to do these things and that's not very nice because i want to test that this access list also work with the new gas prices and stuff so yeah these are three points which i wanted to raise yeah and i just wanted to say uh i just wanted to say really thank you for for you for for for doing what you've been doing it's great to just you know finding all these issues thank you yeah no problem it's a it is a lot of fun to try to nuke this uh to destroy this testnet uh reach out to me offline and we'll discuss the uh psu issue with access lists okay great um great yeah yeah agreed uh thank you for for doing that like it's really valuable to have people poking at it um so yeah because we have two new eeps that we want to test so the the the refund one and and and 35 41. um i guess we we should restart a new devnet with those um and then yeah ideally uh following kind of the two suggestions here where we pre-fund the pre-compile addresses and we have more than one signer um how do people feel about that yeah i mean that's that definitely needs to be done and then now the essentially do we want to wait till somebody implement these two things or do we just want to do one by one we should probably have both in um i suspect if we can't get both in it's kind of a signal that we probably can't get both into london um so i would favor leaving the current one up waiting until you know someone has the two eips implemented and then starting a new network with all of the eips that were in the previous one and the two we we agreed today but if we need two multiple signers then we will need multiple clients implementing these right well not necessarily we just need to make the make it so that we can have multiple signers and then we can run them with if if get is the first one we can run three guest signers some of them whenever a beast is ready we can just give them one of the keys okay so i guess we can probably coordinate offline for the details of that but at a high level multiple signers pre-funding the pre-compiles having i think it would be [Music] five eeps anyways like whatever was in elude plus the two today uh the only eep that would be in london but not in the devnet is the difficulty bomb one um and um uh yeah i think light giant had proposed a name for it uh on the discord so baikal i think was the second fault line uh that we had uh after elute so we can use that as a name um i'll put together a spec for it today uh and and just share that oh go ahead can i just have another suggestion so because sorry i wasn't yeah i wasn't on a call but for to simplify the this this fork and i just had another thought i know we had this conversation before and we can take it or take it offline but i do believe that we do not need to re-set the difficulty bomb but simply remove it because both of the reasons why we keep resetting it and do not apply right now because first reason was that the miners with the hybrid pos approach would would stole the the the migration which is not the case because the merge will happen regardless of what they want and second reason was to prevent the state stasis for the development which is exactly the opposite what was happening right now so i don't actually see very big reason to keep pushing the fork can we discuss that on the next call because we let's do it offline because because i could see the previously like africa is on holiday like we can't calculate the i mean we can but it's a bit of like why do we create more complexity for ourselves let's just uh remove it so we we we discussed it i think it was two three calls ago and people were strongly in favor of keeping it uh but yeah if i guess definitely we don't have time in the next six minutes to go over this um and i guess if we want to discuss it again in the next call uh it's it's fine because we it's like a small technical change and we don't need it for the devnets um yeah does that make sense yes thank you but i just wanted to bring up that there is from my point of view this needs to be reopened okay and let's try i guess to do as much of that async as possible because this can easily take up 90 minutes uh two weeks from now if we uh yeah if we did it um and yeah i guess just in terms of process if you can if you want to bring this up on the next call just open an issue on the ethereum pm repo and and uh i'll make sure to link that issue in the next call um i guess yeah just back to the devnet so i can put together a spec today um and i guess i'll follow up so i'll post it but clients will need time to implement these two eeps um so i suspect we probably won't get it up next week but uh maybe the week after that um so i'll make sure to follow up like a week from now to see what the status for the different teams are and and and you know what we can do with regards to the uh to starting the the devnet um and i guess two more things we had on the agenda there are kind of more announcements than anything else uh but uh next week at the same time as this meeting starts we plan to have a infrastructure readiness breakout room for london so there's been a lot of talk on the discord about um having infrastructure providers ready to support london and and uh you know having clients kind of enable them with stuff like the json rpc apis and whatnot um so if i guess you are an infrastructure provider that's like affected by london this would be kind of the right place to show up with your concerns or questions um i'll post the link in the chat here it's also on the ethereum pm repo um yeah so just hopefully we can get uh different uh yeah different teams working uh yeah working on infrastructure to to be ready uh we don't need like all of the client devs to be there it's not like a mandatory call or anything but it just wanted to highlight it um yeah so people are at least aware of it uh and i know yeah trent you've been working on that uh a lot to do you have any other thoughts you wanted to share uh no that was the big thing and i guess the other component is that similar to how eips and clients readiness are tracked typically in that same place we'll also be tracking you know libraries tooling and other infrastructure providers leading up to the fork you know for which eips they've implemented and their general readiness um i'll drop the link in the chat that's it cool um and i guess the last quick announcement was uh we discussed on the last call potentially picking blocks for london today that feels still a bit premature i guess given today's discussions um but if we do want to have a client freeze on the next call then we we should pick some blocks by then um so if people want to look at the the dates and and propose some blocks over the next two weeks uh that would be really valuable so we can assuming nothing changes just agree to them on the next call and have clients and add that into their configs and that's all i had any anything else anyone wants to bring up in the last two minutes great well thanks everybody i appreciate you all coming on here thank you thanks thanks bye thanks thanks [Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Applause] [Music] [Music] so [Music] so [Music] so [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] so [Music] [Music] so [Music] [Music] [Applause] [Music] [Applause] so [Music] [Music] [Music] so [Music] so [Music] you 