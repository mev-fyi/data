hi I'm Frankie from the IRD group or Rd group of your friendly extension meta mask today we're going to present to you our vision for a network of a cerium like clients you may know some of us from other projects in the decentralized space we've been involved in in Fira meta mask ipfs live p2p so I'm sure some of you are wondering how long does it take to sink a full a cerium node great question in our experience it takes anywhere from a couple hours to well over a week to sink a full node from scratch aetherium notes are becoming more resource intensive at full node uses gigabytes of storage it uses significant amounts of i/o so much so that it requires an SSD at the very least also synchronizing state takes a long time to network issues and having to process every block to reconstruct the state this and other issues is forcing users to rely on centralized infrastructure what about light clients you must be asking current light client implementations provide solutions to some of these challenges but it's also introduces its own limitations relying on good nodes for most of its data like clients are leechers in a peer-to-peer network sense they don't cede any data the required syncing state before becoming usable this isn't as resource intensive as syncing a full node but it's still an important limitation that regular users aren't necessarily willing to bear imagine a user having to wait minutes before using her favorite def in a time where webpage loads are measured in milliseconds this is not acceptable UX on top of that def beauty relies on UDP and TCP for data transfer and note discovery which makes it inherently incompatible with the browser madam asked is an important part of the ecosystem it's responsible for helping drive the adoption with cerium users rely on meta masks to interact with the etherium blockchain from gaps to tokens to transferring ether directly but meta masks as well other similar tools rely heavily on centralized infrastructure such as things like inferior and other other services this was instrumental for bootstrapping the Assyrian ecosystem but this breaks the premise of decentralization and now we need to do better the problem is building decentralized client that has the same performance characteristics that centralized infrastructure offers so what are our like client requirements we need a light client that is fast ready to use in seconds seeds it's data to other peers so that it's not also relying on centralized infrastructure has native brand has native browser support of course because we're meta masks so now I'd like to bring on Deema to talk about our solution mr. kala thank you most Akali it's a light client for the browser and more it's a way of partitioning the Merkel tree in two convenient units we call slices it's a network of browser-based peer-to-peer nodes that help find industry with slices and it's a network of full nodes that provide the slices to delight client peers right now these are dedicated notes but in the future we're hoping to get this functionality to become part of the full clients stay tuned for any IP so slices what are they they're convenient portions of the GM Merkel cream the compose of the stem which are the nodes traverse to reach the beginning of the slice we call it the head the miracle tree nodes leaf nodes which contain accounts and branch nodes and for convenience we also pack the EVM code and storage route for each smart contract account how do we identify a slice we use the pad which is an offset into the tree the first four nibbles of an address or storage key the depth of the slice which tells us how many levels will descend from the head the state or storage fruits telling us which block the slice belongs to now what's the kitchenette Network kitchenette is a network of peer-to-peer nodes that collaborate in distributing slices we're using Lippe to be a modular peer-to-peer network stack with native browser support it allows using a variety of mechanisms from hybrid to full distribute it to create a peer-to-peer browser-based network and not only that it also enables the diversity of devices to connect to this network from high-performance servers to low resource devices think iot we're also using pops up for new real-time data propagation in the kitchenette Network we've been using Li p2p floods up for internal prototyping but we're exploring more efficient alternatives such as episod gossip table both from Luigi as well epidemic registries and other and orders so how those data propagation works in the kids net network each peer in the network tracks a subset of slices and also seats them to other peers this is crucial to enable data availability across flight nodes and this also reduces reliance on full interim nodes we use a combination of parameters to determine which slice the peer Strachan the users account taps and tokens to the user interacts with and also arbitrary slices the decline gets assigned based on a notion of cryptographic distance of the peers hash and the slice hash so how secure is this when creating the state the key is to know what's the canonical block 3 header it's a critical operation but it's not necessarily a very intensive one resource intense one sir there are several ways to accomplish that we can ask a bootstrap note for a canonical block header for example pica number five five million nine hundred thousand or something and then start sinking from there or just receive the block headers verifying the number and the seal of course and then ask for its parent and a parent of its parent so on and so forth until you reach at frosted point or you can subscribe to some of the network to some network of trust not my favorite one or you can always run your own note and request data over every see that's a job we maintaining the security guarantees provided by Merkle trees slices contain all the required information to perform cryptographic verification so what are the takeaways we have slices which are convenient but conveniently packed Merkle's of trees that contain state we had we have kids Annette which is a peer-to-peer network of flight clients sitting slices and we have full nodes each young clients synchronizing state making slices available for kids Annette thank you you 