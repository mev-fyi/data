so as you all know Microsoft is our premier premier sponsor of DEFCON 2 and marley gray who's of blockchain engineering and the head of blockchain and journeyings is here to both speak and give an introduction and yet come on up marley give a hand for marley gray fleece microsoft thanks man good morning I think I should think Roman forgetting you guys wasted last night so now he's here this morning to see see this so the title of the speech this morning is a lap on 'let's but what I really wanted to do is take a trip down memory lane which was late July 2015 when frontier was released was when we officially started playing with etherium such that we then launched with a theorem together using with our partners consensus and started down the etherium blockchain as a service so I always feel like the journey with a lot of people point to Microsoft being an early adopter of Bitcoin that was a sort of an experiment are learning lesson for us to really embrace athyrium so I don't want to tell you what I had to go through to get the sponsorship for last year's DEFCON it was not pretty this year's devcon sponsorship was quite easy for me to do it's a lot more money as well but you know if your room but just set the stage here for Microsoft's commitment here is you know theorem as a first class citizen will continue to be a first class citizen in our distributed ledger efforts at Microsoft and it is it dominates our marketplace and our customers are using it and asking us and and with that we're gonna I've got some things we're doing I have a lot of partners in the room I think almost everyone should be a partner if you're not please talk to your Microsoft representative if you're a small start-up we have programs called bizspark I know a lot of you have taken advantage of that encourage you to do that and we'll be talking some more about the other things later but this morning I want to announce proud to announce bletchley version 1 so bletchley is our code name for everything watching at Microsoft and let me explain a little bit about that is and I'm going to walk you through what v1 means but let's see the the architectural diagram over here is sort of the big picture and you'll see a theorem is quite prominent here so our distributed ledger stack down at the bottom this is what we call are distributed infrastructure or Bletchley distrib the infrastructure we are shipping version 1 a consortium athyrium private network starter so you can go on a theorem any customer and instead of just spinning up a single node or a single def test lab you can actually spin up a full consortium network out of it through exactly what that means a little bit later on you'll see this in the press we we release these announcements this morning timed with this keynote that's hard to time those things i was up at four o'clock in the morning said i know you were up at like three working on the stuff so we'll walk through this but the etherium is the first class we're going to walk through that I'm going to first walk you through  it's so we introduce 'let's in june as a middleware approach for taking block chains or bringing my chains in the enterprise of our interest from our major enterprises are trying to figure out how consortiums will get together to take advantage of this distributed network promise so crippled atz's is how we sort of get our head around this and we look at it as a new tier so those of you that have some gray hair remember the pain we went through went from client-server to three tier architecture in the web very similar to the pain that we're experiencing in the growing pains within distributed Ledger's or block chains and so there's a lot of missing parts that enterprises want they want things like some people call an ill ADIZ list but it's essentially scalability manageability you know those those types of things so we identified these these key things like identity existing systems integration key management not just storing your keys but managing the entire lifecycle of your keys it's a very difficult thing to do and do correctly security and depth just a number of talks yesterday on security I don't think we had a topic on last year I'm maybe one or two but we're really going to the point where people can start building solutions industry specific solutions financial services that is the largest but we're going to see them in healthcare media supply chains huge all over the place so crippling cesare sort of our catch-all for delivering these capabilities in the cloud so with the introduction of Oracle's you know the how do you get data injected or real world data inject it into a blockchain Oracles came out but it's more than just trusted data it's how do you get trusted execution we need a very flexible and malleable execution platform where you as an architect or a developer can make the right decisions based on what you're trying to do and have clean separation of concerns in your code which is something in the enterprise is paid a lot of tension too so things like doing things at specific times or specific intervals doing things based on triggers you can have market watches you want to be able to also protect IP if you have algorithms that you have you don't want those algorithms you know in the clear on the blockchain you want to protect those you might want to scale an hour let me know want to have better performance in a blockchain can offer you how do you achieve that while it's still getting the benefit of a distributed ledger and then complex interactions when we start getting into enterprise systems you get into complex distributed transaction coordination where you're not just updating of the etherium network you might be updating a CRM system old host mainframe system an Oracle database a CRM system and the etherion block chain system in a single transaction how do you do that well we actually know how to do that and that technology has been around since the turning part of the century because we had to go through those growing pains when we went to the web so we want to be able to use those things and also use libraries like net and Java and pick your your platform toujours not just going to be about single language development we need choice choice and platform of choice and language so I'll put this in here am I going to go to this chart some of the things that crippling I'll go through the key points for this audience getting secure data and Oracle's have been around for some time it's still a new concept for a lot of people how do you get real world data in there Oracle's a little provide a standard way for you to have attestation of that data grip 'let's provides that to you by default but crippled Estelle's more than that it's more than secure data it's also secure execution how can you enlist complex execution tasks off the chain while keeping that integrated developer and business and operational experience and also create a marketplace for developers in this audience you might come up with crippled of ideas to create a crippled library that you can put the marketplace in sell to a specific industry they can be vertical and horizontal in nature so there's a lot of infrastructure here that we're building to wire this up we are making our goal is for the crippling fabric that's what we're calling it or the blockchain crippled fabric to be easily consumed by developers so you'll be simply being able to make or discover it's out in the marketplace references to them declaratively state what you want to do in code with those 'let's and have the infrastructure just work and you be able to focus on getting your code to run and accomplish the business goals that you're trying to build so the goal here and this diagram is oversimplified greatly down the right-hand side we have a node this is the EVM that has this thing called a crypto delegate which handles a delegation of calls up to the  'let's let's manage the entire security envelope so we're essentially extending the trust envelope for not just data but execution which gives you a lots of interesting things that you can do so let's talk about some of the use cases so the most common when people think about our for Oracle's and this is where you're going to want your smart contract to do something based on an event so it's a traditional pub sub type model where you're going to go and say hey I need to I want to have this crypt let do something for me in this case and down here in the code which you can't read but we have a little attribute here where we're subscribing to an event saying wake me up at four o'clock eastern standard time if the markets were open that day and if they were open give me the LIBOR rate and the price of gold and what's going to happen is that subscription goes up the crippling gets the the rules for waking up that smart contract this is ok I will wake you up when it's four o'clock if the markets are open the price of gold and the liable rate so the it sits there and runs and it checks and when the event conditions are correct it fires the event the event payload includes an attested value of the LIBOR rate in the price of gold now you don't just get the values but you also get a three-way attestation you get the signature of the crippling itself you get the signature of the Enclave which I'll talk about here in a moment and also the attested hoster so you have this trust envelope which is actually sealed and you can recall all that smart contract for audit purposes so that was the easiest one to kind of get your head around the second a little bit more advanced and it's really taking this three-tier architecture too and a little bit further extent this is what we call control and this is where you're using your smart contract more is a traditional database so you're smart contract you're placing you're declaring essentially the data that you're keeping track of and then the stored procedures if you will for updating that data so you're not writing crud functions but you're doing the up the insert or the create and the read functions for the data in the smart contract you are then enlisting control Sarah gation so full Sergey shin of your logic out to the  'let itself so the crippling can run off chain and you can scale it vertically so it won't run on every single node you can have it run on at least one or a couple of nodes and this usually becomes attractive to consortium networks where you have for example of a hedge fund and a bank entering into a financial trade that has to have greater performance there might be an algorithm for pricing that easy we kept secret and that can be run in the let itself off the chain but still preserving the goodness of the distributed ledger so when you bring these into practice these two use cases fall into these types of triplets so utility crippled its here's an example again I doubt you can read this code but this is a smart contract here I'm marked in yellow where the event subscription happens this is the exact same description I used for event where you're subscribing to an event for a specific time if the markets open for a certain rate to give you a rate in the price of a commodity in this case and what happens is you simply request that the cryptid delegate wires up the secure connections between the smart contract and the crippled itself so it's just like a secure reference so a developer at design time will reference script what they want to trust the signatures are recorded and it wires up that the crypto delegate can also check and enforce that the messages only come from that it so it wakes up the smart contract to go ahead and execute the code you see the code body itself down here the the solidity code has all the calculations that were performing so that's going to run every single node once that is been ceded the contract triplet is I'm actually deployed in this case we're using the deployment mechanism to actually create the surrogate for the smart contract in the cloud so it goes through the crypto delegate and it goes out and creates the contract crippling the contract it does all the market watching all the logic and execution so it's ready to store it state in which it records a state down to the smart contract itself now here's where the real value is i always like i can write this on my own i don't really need why would i use a shirt to do this well the advances in silicon and the hardware security namely intel's sgx provides the capability for you to create secure enclaves so an enclave if you're not familiar with what sgx does is its area of on the chip itself that's in a complete isolation where you can run code and have data run where it's tamper-resistant in tampa proof so you can't poke into it you can't it step on a memory address space to to go out and corrupt or potentially interrupt the execution of something so this Enclave provides a secure container and then it provides full attestations level at the CPU level that this was actually built in the Enclave and running an enclave now when you're starting to build solutions like this and you want to get scale and you want to have security and attestation you're trying to land that big contract with the bank or some somebody wants to make sure that your security is rock-solid if you can make guarantees your code is running in a secure isolated container in the cloud full attestation on in silicon and recorded into the blockchain it gives that level of security that really you can't get anywhere else at scale because you're going to be able to deploy this an azure and as has been deployed in over 30 some-odd regions around the world there's a several here in China so you'll be able to deploy these across the application fabric with in Azure now we're going to be delivering these enclaves in what we call it crippled a container crippled container is essentially an enclave based container rapper where you inject it's in there the 'let's are written in the language that you want to target so in this case the first one will be the dotnet core clr that's the open-source dotnet version a Crippler container then you get imparted in c-sharp you heard some of you might have read about f star you have lots of language choices there also in the JVM which is also very popular in the enterprise and then you know the evm itself I'm moving into an enclave so this type of scale rolling out this type of innovation in these massive data centers where you have on demand secure execution provide you with this five benefits so hyperscale cloud secure execution in enclaves on demand worldwide same thing for data and data providers so you can start to mix and match you might have a great data provider for some sort of data service and you want to create at libraries that you can put into the marketplace and make discoverable you have scalability and flexibility options now that you don't have and you have them at scale so you'll have the developer tools you have the ecosystem you hit the marketplace and the cloud where you can go out and not only scale your solution but also scale your execution off the block chain if you need to so you have a lot more choices very developer friendly so you'll see lots of tulle integration and I ecosystem for is v's to start building solutions and a standard way we're not you know you get a common way to do something and it becomes fairly readily accessible around the world and something that becomes attractive to larger enterprises so that has if you're curious about that today we released the white paper for cripples in depth to go out this again is thank you it is out it almost didn't get out because of the network here I had to to to push it up to github this morning and I thought it was going to choke on it it is 26 pages long but it has some fairly good detail about 'let's but that is it coming we're building that now so you're not going to be able to go out and start writing crippled it's tomorrow or today the notice of you that i watch presentations you start before the presentation is over i see people downloading code is starting to try things out can't do that yet but you can read the spec so you can start planning for it and thinking about new solutions new business opportunities for you what you can do today and i'm proud to announce is Bletchley v1 and this is our athyrium consortium block chain network athyrium is the first again in the marketplace with a and this is anywhere from two to hundreds of nodes by answering a couple of simple questions so when we went down this and we started to say okay what does the consortium Network look like for etherium so we we do this a lot we have a lot of companies come to us and say hey we want to start a consortium you know how do we set these up it's not a private the private ethereal networks easy install a node and you you stand it up so we had to go through and figure out you know what are the requirements so this list of requirements we saw consistently takes about three weeks to get right that's everything from network configuration isolation ordeal you're minors we're able to put your transaction knows how do you automate this it's very fast and easy to do so we took this three-week process and we got it down we eliminated all but two of the steps okay you still have to read up on how to do the etherium once you deploy an etherium consortium network you still have to understand you know how to write a smart contract but we did all this and we got it down to five minutes answering 8 simple questions and you can deploy again as little as 2 to hundreds of nodes on a private etherium consortium network which is staggering we thought we did a great job going in from two days to 20 minutes for a single etherium mode to this massive network that you can deploy in very little time so thank you thank you thanks SID isaac those guys right here they were up at three o'clock in the morning making sure that this so you can guys can find this the link is idle and asher right now you can find the blog post it will take you right there this is a real quickly what it looks like it creates multiple subnets and it puts each consortium member in its own separate subnet for example the miners are on the role and subnet you can't reach the miners from the internet you can only reach the miners from the transaction nodes and the transaction nodes are on a separate subnet as well so we put quite quite a bit of thought into this it also stands up a portal seeds the network with ether and you can go out immediately go to the portal we are allow you to really quickly get up to speed and show you're now running something our customers have really wanted to see so I want to leave you with a little bit of a road map where we're at so earlier this summer we release def test labs for block chain as a service in general availability so around the world you can go out and create a dev test lab if you haven't done that very easy that's where you can see all the not just etherium but all the other block chain means that you want to build black cv1 is the theory i'm only right now first on a theorem first one as or for consortium network key nikuda is our security work group so you've probably seen that community will be publishing more information about f star the tools for formal verification to the community to help facilitate and move that effort forward through microsoft research and then in sometime in the near near future in a distant galaxy far far away will have releasing up the bletchley sdk actually it shouldn't be that far and it should be in this galaxy so with that I'd like to thank everyone for your time and good luck the shot Thank You Marley grey 