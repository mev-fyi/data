do you change [Music] together [Music] thank you losing control [Music] foreign [Music] thank you [Music] thank you foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] of course [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] thank you [Music] thank you [Music] foreign [Music] foreign [Music] [Music] thank you foreign [Music] foreign [Music] thank you hey hola hola hey [Music] foreign morning hi welcome good morning um we are ethereum and arm first of all thank you all for being here early morning and um uh well we are running a validator from zero we are either on an arm from Spain um uh hope you find this Workshop very useful for you all and we have a little surprise in the end so I truly recommend you and deeply recommend you to stay till the end so Mr Diego and my colleague Fernando they will run this Workshop so let's go for it and work a little bit thanks hello thank you thanks for attending uh before getting started with the with the workshop a little intro of what we do um yeah this is why we are here I mean uh we want people to run notes at home to run to stake at home where it is by running an ethereal and Army in match or or by running an app node or by running a client by yourselves uh whatever it's very very important for for the decentralization of the of the network so this is key and and that's it if I ask uh if I may ask how many of you uh run a uh I know at home well not bad validator wait and with these kinds of devices with low power and and result contrast devices is uh very good very good so what we provide we provide a plug and play image so it is very easy to start it just you just need to flash a Micro SD and and start the device and pretty much it configures everything and you have a valuable all the uh ethereum clients for start and you can run on a full node in a few commands we will see this later okay as I was saying this is what the the image does so uh it's quite quite easy Uh current available for Raspberry Pi and Rock 5. um block 5 is not yet available okay it's been released this month I think um why rank anything node on on these devices what affordable I mean it's cheaper than other other Solutions uh expense little power there are performant these devices are powerful particularly now the the rock 5 is is about super powerful device they are focusing on one task I mean uh no graphical environments no web browsing nothing just it's focused on running on home so you have all the resources available for that uh it's small you can put it in any corner of your of your house next to the router or whatever and uh it's based on on the ERM so it's good for uh from a security perspective uh running several architectures so it's good uh this is what the image does again automatic installation includes all major clients and the client runs through systemd devices so you are pretty much easy to to uh to manage and we include monitoring dashboards based on rafana well what happened yeah uh uh Hardware requirements got a little higher uh so we are getting some issues with the with the Raspberry Pi 4 actually uh we just uh being able to to sync a node with get unstable and nimbus I think this will get better off I mean about several weeks because uh client teams are working on on improving the performance and and doing some optimizations we'll see uh the rock 5 is running great I'll show you later uh our validator at home it's running a Basu in techu and it's doing right so this device can run pretty much every client everything inclined it's it's super powerful yeah uh this is what I was saying uh get unstable plus news this is the only combo that that actually works and uh The Rock five see that uh it's powerful 16 gigabytes of RAM ndme uh eight cores pretty much amazing so uh I'm taking over now to Fernando uh before starting the uh the the node setup because uh we get a lot a question that is important for us why should I trust your image is an image they are boundaries so Fernando will walk you through our report to to do this yourself if you want uh how we package all clients how we make the image so okay let's go I think the first question is should you trust us and the short answer is no you shouldn't you shouldn't trust us we are going to provide you uh all the different clients in a way of uh Debian package and you could ask okay why I should should how do I know that you are not changing anything in the code or you are not changing anything in the package more than trying to tell me something or doing anything back but the sure answer is you could do it at home you shouldn't learning this repository in a very easy way that's our main goal you could do all the same that we do and create your own image we can without need anything from us only ruining these these repo sorry we will document this okay it's it's in our to-do list to uh open a develop section for you to to follow the following and and make all of them okay first time we're trying to do all in a very automatic way very easy and we provide a background image I don't know if you know background vagrantings are approach from hazy Corp open source product who tries to to create a developer environment in a very easy way in a very programmatic way I can show you our here on this not here it is [Music] okay there we go here can you do you see anything okay oh that's that's the we can find that we can find the only thing that's still is prepare an environment in order to create all the packages okay it's a very easy emblematic way to to do so uh do you ask to background to create a Ubuntu machine and install all the software that you need to create the image all the packages are based on the work of this guy from Jordan Caesar I don't know I pronounce okay his surname but this guy creates a very nice way to create to automate the creation of a Debian package or RPM packages or whatever you know so using his work is for us is very very easy to create any any package so if you clone this our repository and do some a very simple command they growing up to create a bigger machine with all the code inside for example you will have to enter in this directory FM package Builder and inside you will be a folder for any client that we support for example if you see they get a folder here it's um pretty small and simple make file and with this make file you will create the same package that we are providing you in our Repository there is a simple idea is equal to GitHub and from the people from go ethereum obtain the version obtain the this version that the package has and Creator RPM the only thing that you are going to do is download the latest binary then let's test binary from the RM for for our arm um with this binary and this folder structure you will create a Debian package the only app for own site is this small system that you need in order to to be more easy to to use the software you could do system start system stop or system restart for the software all the configuration also is included this uh basic configuration [Music] expensive because we use later Prometheus and grafana in order to show you the Geotech statistics and you could see later in your garfana environment it's also included in the image so you could simply go to a rebel and um the simple a simple get if GitHub is not probably the speed of the Wi-Fi is not fast enough to see it but the only thing that is gonna be is opener download the latest binary and create a Debian package these event packages we will provide you in uh in the form of our Debian repository but do if you don't understand you could do it yourself or you could check if the um if the M sync md5 sum is the same from our repository and your your packets and we'll see we're going you know we will not change anything in the in the official binary okay let's start I don't know if it's only 40 seconds you know the the skip will do all for you will create your geography packets and you could use it offline and not trust our Repository it's it's Imperial uh uh official binary with a systemd file assisting the unit also we provide the same for the for the SD image we went to wait these three seconds okay and the end you will be that we are raised on it before train but here you will have your table packets for the guest it's very simple it's pretty easy it's not anything strange here it's only uh Debian package in order to create it more easily so um for the for the for the Ubuntu image that we're using for all of three devices it's almost the same thing a small make packet make file story that here we will download the latest Ubuntu available for for arm and and keep it as one here we'll disable the automatic categories because if we don't do this the first room is very very slow because Montage will try to grade in the first room and probably if the matches are a bit old we will last for very very minutes or even hours and the only art that we do is add this small RC logo in this RC local we saw the metric covers here uh is all the logic we will create a partition for you we will create all the new users and permissions in order to this package room with the configuration that we made um in I think in a very simple way you could do it at home do not need ask for anything you could create your own image you could add your own server if you want you could create your own package if you don't trust uh Repository um that's the thing that okay Judas shouldn't trust us but you can see if we are doing anything wrong or we are cheating doing it at home in a very easy way okay okay thanks Fernando Let's uh fire up a node uh we will follow the official our official documentation as you can see it's a pretty straightforward uh process first you will need to download our image we already did because you know it's here we unzip it uh all instructors are here uh you see unzip we will flash I have a here a microSD so uh what's the what's the flash process end you just need to make sure that uh you uh attach an ethernet cable the the SSD in in the part in the blue part the blue part and uh you put democracy in in the slot and just that uh Power device and the on the first boat our uh put the street will pre-configure everything and install all all the software necessary to run a node and creating the keys for the validator a so once you uh after maybe 10 minutes the the device will restart and you will be uh on a recent uh um online machine that is a pretty much configured for for running a an equivalent mode okay so let's wait for uh for for it to finish or I may be I don't know take this okay so uh we will be connecting to uh an a WS machine because uh we need to to connect remotely and it's more comfortable because it is uh it's more um it's more it's a scooter sorry it's a faster and but it's unbased it's exactly the same that you will uh get with this uh with a Raspberry Pi or or a rock type okay we also provide a AWS image if you want to try uh or imagine in in your account is uh one click away from it's just launching a command I will show you um the config file so you can see all flags that it's needed to run a client again the token and the two points in I was saying is this URL so let's launch the service and let's see what happens so it's going to start you see that already a loaded a block and state from the checkpoint it says that yes there's uh next equation endpoint but it's not single it's not synced so uh it's gonna start telling uh the execution line what to do okay and that's it for fire up a note you have an execution layer a consensus layer you start the both services and Without Limits it's pretty much what you need to do to to launch a node okay is that easy uh again like I said uh uh in the intro uh Raspberry Pi now just thinks with um get unstable and like if sorry and nimbus because yeah uh post marriage uh Hardware requirements went went a little higher so uh we need to wait I think a little optimizations to come from from client teams and I think I it will be able again to think with our clients but we'll see we are not sure of that the rock 5 is running fine I mean post merge premiered it's a very very powerful device and it is a drawing great so um let's go to the validator um as you can see you just need to create the keys and and running a command to to import the the evaluator keys in the in the in in the consensual layer so we can go to the second path from the ATM Foundation you can see here all the steps that you need to follow and pretty much everything that it's here it's already done I mean an execution client is configured you can choose from from all these four again you're good you can choose uh from any any client a as well again you are done uh validators let's try my one by later again this um you now need a a tool for creating the device or Keys it's already installed and actually um is this one pause it so we can launch this command straight forward as ethereum account receivable user okay uh that's a English English password this is a password for uh your key store okay yeah this is these are your keys please don't lose this okay write them down and keep them because without this you will not be able to withdraw and that would be a problem yeah but this is yeah okay let's confirm okay these are as you can see before now you can you have uh two keys here the deposit data that you will upload in the 32 is uh deposit and Keystone where your keys are okay so let's import them anything in laptops account all right so we have the valianto keys arrays tab so we just need to start the service um oh suggested let's see okay okay we need to add here a an address here so one it's ours stopped again [Music] okay here it is and uh one validator variable so you just have to go here and know what you're doing a block here this um this file deposit okay it's this one it's explained here I mean uh so much you know you have two options I can maybe copy and paste here okay for you to see we can upload I'm sorry sorry sorry okay it's fine and now they're more fun uh process that it's sending 32 years and pray for to regards that uh it's gonna be fine because it's a it's a lot of cash I mean and that's all I mean it's as you as you can see it's it's a simple process if you have some linear skills this is fine I mean but you can do it without technical excuse as well if you follow the recommendation and I think uh we are done with this let's see a processor running that's how we have fine so [Music] um the rock 5 yes let's connect five yes we're going to show our validator running uh I think three radiator right now with rock five and with four five right now is cheaper than the Raspberry Pi 4 even and probably twice or three times powerful so yeah our recommendation right now is going to for uh Rock five whenever it's available again you can see here no matter what it's running a rock tip kernel and you can see here um processes that are basically so let's see um this is our value don't you see that it's actually publishing at the stations it's running right now it's running fine and uh the rock 5 is is running both uh both clients in in at the same time and and with no problem at all I mean it's a super powerful device uh you can we can see a big base as well now you see it's in sync it's working perfectly and again this device is not yet available but I think uh we have contact with the manufacturer I actually uh this is a prototype from March I think on March April I don't know and they are already releasing a batch we have five uh on its way I mean uh I think that it will be available pretty soon and super powerful device super uh a useful device for for running a uneven node and Hope they've released it this month okay so uh what's left uh the last thing okay now I will uh post a tweet yeah okay um as I told you at the beginning of this Workshop um there is a raffle right now so if you want to participate uh Diego is going to post uh in Twitter are you ready then okay thanks uh if you follow us in art ethereal and arm um you just need to post something like no there we go okay you have to post I attend to the workshop and I want to win something okay that something is a raspberry uh P4 okay and um from now on put the counter in three minutes uh uh we're going to stop five five minutes probably okay five minutes we're gonna stop and somebody wins something today yes I mean it's it's he told me five minutes so just saw me three yeah five okay comparing five okay uh yeah I was going to Saudia uh does anybody here I'm pretty sure that uh anyone here has any question or yeah okay what were the rock 5 sell for how much would it be uh 189 dollars but you need a an nbme disk so it will be a little higher and you need a power device and the MicroSD I think it should be between 1 750 over 400 I mean because total cost of not uh well I have four questions so yeah probably quick uh do you recommend using a WS instance against running your null okay no no not at all no this this was for for the workshop we don't we don't uh want uh people running notes on AWS because that that's not a decentralized way of of doing this so no no okay and what advantages do you see in running around validators instead of delegating the staking why because it's very important for the network actually uh uh there's a problem with centralization in these large pools I mean it's very important that people stick at home because if one pool or several pools want to take over the network there is uh this uh other Army of nodes that is from the people I mean and it's very very important to fight against this kind of attacks to to stay at home okay and what measures do you take at home to ensure uptime to cheer up time well we have uh s-i-s-a-i I mean one thing that I uh I want to say is that it's okay being offline because the protocol is very generous I mean the the penalties for being online offline sorry are very low so there's no problem for being offline uh you can be uh online 95 for 99 a whole year and you have and you are good so don't do don't Overkill I mean don't do wait I don't don't automate things because you can business so it's okay being offline no no problems no problem thanks sorry uh one thing that I do that I find is quite good is uh do this come with grafana yeah enabled yeah so in grafana you can add the telegram group as a um as a notification point and you can set up an alert on my critical log so it sends you a telegram message I find that's like a really really easy way to just to know when things are up Paul from from Lighthouse Center thanks for your help okay next one I'm just curious what your experience is if you have uh like run on specifically a bit more constrained devices like the Raspberry Pi like which of the implementations are the most efficient in those circumstances on arm devices on there but sorry um like which of the node softwares do you find run the most efficiently yeah uh give a spell performance but it's very optimized and regarding consensus layer uh I would say Nimbus because Nimbus uses a very low from memory it's amazing and but anyway a pretty much a besides everyone that you know that executes very much all the blockchain all blogs uh and basically when they're good at uh our Java based and they are they are a little heavier uh the other client prison Lighthouse numbers get another man we're running fine I mean yeah I uh thank you very much love the talk love the work um do you have any plans for saying like MVP boost or anything like that for integration we are we are uh we already package made boots but um we are a little concerned because they are not every relays but they are already censored in some transactions and uh we prefer to wait and it it works I mean it worked fine and you can even have a raspberry P3 maybe or or this kind of of devices because it's very light but we are a little concerned about centralization and sensory and uh and transaction censorship thank you uh hey uh are you cross-compiling when using the background no just no official binaries um the only accession is everyone because they don't provide the banners yeah and sorry one more or less question so I noticed that you were using swap how is that impacting the io on the on the boards you know um the swap for the raspberry piece uh necessary because you know eight gigabytes are very tight and it's created on the on the USB SSD so yeah it's not the the is not the better solution but it's needed so uh yeah it's something that uh we need to to do yeah right there okay there you go on a device like the Rocks 5 do you have any recommendations about the number of validators that it should should have is there a recommended limit before you see CPU binding I have to say uh we are running three but I think that uh it will be able to run a lot I don't have a figure to to give you but I think that uh a lot I mean yeah hi thanks for presentation I came a little late so I'm not sure if that was discussed um do you know if somebody working on an incentive program or protocol similar to helium where um individuals takers that can you know prove that they're running in a location that doesn't have high density gets a little bit of incentive no not sorry no okay because that would be helpful for the centralization yes I guess so yes but I not have an opinion about us because I don't I don't know so something oh yeah it's you know sometimes you you cannot answer or but always the point to learn is there any other question yeah right there so for the Raspberry Pi 4 You sets you use SATA if I'm not mistaken with the compute module you use like SATA over over USB right that's your setup um excuse me industry USB yeah yeah but for the compute module with the i o board you can actually connect it connect you can use nvme as well I don't know if you've tried it out you can yeah you can do you can do does that help with any of the performance issues or is it like uh it's very similar I mean it doesn't make a difference I think well if the if some of the performance issues are because of i o stuff then it might help yeah but you are um you know the the USB 3 is the butternut here so no but so the compute module has supports nvme sorry sorry I misunderstood and we we didn't try uh the computer model no we'll try it uh but uh I guess it will be will be better yes yes thank you one more there running out of time maybe one or two questions it's really quick a follow-up on the USB 3 thing do you have documented which USB adapters works and also which USB 3 as the modules uh um the best option from our experience is uh and started a bridge which is a little advice that connects this is a SATA to to USB 3 that works very well uh you can use uh use portable USBS such as crucial or or Samsung T5 t67 t7 you know has a little uses but uh yeah you you can I you can actually um the use a lot of a lot of options so it's difficult for us to to test everything but recommendation our recommendation is the static Bridge yes it works right right what's your opinion on shared pools taking uh we are very we are big fans of rockpool uh actually uh we are in contact with uh Joe clappies they are running a rocket pool in the rock 5 as well and yeah this is uh this is a way of lowering the 32 barrier uh in a decentralized way yes it's very nice I am we are big fans of of rocketpool so yeah we will recommend that we have time for one or maybe two questions uh anyone nobody everything is clear um no it's not in the no it's not confused I was asking if you have the grafana it's uh because the part of you know you have to connect to the 50 important weekend okay um okay so as I told you before um we're given a gift this ruffle so someone in here is going with something pretty interesting because the raspberry P4 for free of course so the winner is and just flash prepare for and just flash and prepare something sorry we are going to we can see we are running a a random number don't be tricky we can see it in the screen there are nine participants should all happen and number two participating number two please after he's gone maybe computer is not here okay he went away four okay so the next one is number eight is fingers crossed that he's here Alex Alex Smith whoa winner that's for him so far it's gonna explain you yeah yeah okay congrats so um uh thank you for and and Diego it's been a pleasure to share this uh their knowledge and and all of you this morning I just want to remind you that we'll be uh tomorrow downstairs at the booth uh with our well you'll see perfectly ethereum on arm okay and we're gonna be there if you I don't know if this tonight comes up any further question will be there uh the whole day right yeah so thank you all and I don't know if you want to add some words thank you okay thanks guys thanks a lot thank you [Music] foreign [Music] thank you [Music] oh okay [Music] [Music] [Music] foreign [Music] foreign foreign [Music] great thank you [Music] foreign foreign [Music] thank you [Music] foreign [Music] foreign foreign foreign cool alrighty um hello everyone welcome to my workshop um today we will be building an nft Bridge uh between uh ethereum and arbitrum if you would like to code along you can clone this repo here I don't know if the URL is visible enough but you can get it from the off-chain labs GitHub it's the most recently updated thing um or you can grab it from my Twitter at dezac23 it's the last thing I tweeted um you're welcome to code along you're also welcome to to listen um uh both work most of the coding will be so we kind of have the skeleton of the smart contracts and we'll build out some of the solidity directly um and then at the end maybe we'll uh deploy it live on the go early testnet Wi-Fi is a bit suspicious it seems but uh we'll see um so um let me talk a bit about Arboretum first um so arbitrome is an ethereum layer too uh for our purposes we can think of arbitrum as its own blockchain because it is blockchain um runs on top of ethereum and kind of inherits security from ethereum the uh the important thing for for building this bridge is arbitrum allows sort of arbitrary message passing between layers so we can send um It's Gonna Leave the Twitter there for a bit so people can find the link um um we can send arbitrary messages sort of from L1 from an L1 contract directly to Layer Two uh I shouldn't say directly maybe sort of asynchronously we can send messages to layer two but arbitrarily um and likewise we can send arbitrary make arbitrary contract calls from layer 2 down to layer 1. and just sort of using those tools that Arboretum gives we can build kind of an nft Bridge around them and that's what uh that's what we'll be doing um so the um just to talk a bit about the architecture of the bridge itself there's obviously many ways to build uh an area c721 Bridge or something like it this will be very similar to the architecture we use currently on mainnet speaking of mainnet just to clarify this disclaimer here this is not tested code not audited don't deploy this on mainnet not liable whatever okay um code that actually is on man that um we use similar architecture for what we call our custom mirror C20 Bridge you can read more about that in our docs this will be a similar version of that um by custom what we mean is the token contracts themselves on both L1 and L2 are sort of deployed directly by you know a developer a user so um they'll be an erc7201 contract on L1 another on L2 and as long as they have certain affordances they'll be able to sort of use this bridge uh kind of interact with this bridge um the basic functionality that we want from a bridge we can we should just say clearly in case it's not obvious um is basically we have we're sort of going from L1 so the L1 contract our our 721 will be the source of Truth we want to be able to um essentially use this uh the 721 on L1 and get a representation of a token on L2 that effectively gives us rights to the Token back down on L1 so you can deposit it and you're guaranteed rights to a draw withdraw um the the contracts involved will be uh what we call our Gateway contract so one contract on L1 one contract on L2 these are the sort of bridge contracts that are in charge of managing the mapping between the L1 token address and the L2 token address as well as handling the deposit and withdrawal functionality so I'll just sort of walk through the uh the flow real quick and then we'll get started filling out the code um but um so again the flow is we we have our we have our token contracts deployed on layer one and Layer Two um we'll see what affordances they need as we go um but there's kind of Three cross chain messages that are going to have to happen here so one is we the um the L1 token contract kind of has to register itself to the Gateway which basically just means it it kind of opts in to what its L2 address will be or what its corresponding L2 token address will be uh we'll do that we'll just sort of store a mapping on the L1 side and the L2 aside that Maps L1 token to L2 token so that's this kind of registration so it needs to be able to make that call and that'll be a cross chain messages so both both layers sort of know what token maps to wear uh we need to be able to deposit deposit in this case is going to mean sort of sending the token to L1 and escrows and then cross-train message to L2 so our corresponding contract mints so escrow and mint is a deposit and a withdraw is kind of the opposite um we're gonna burn the token on L2 send a cross chain message down to layer one which will eventually release it for Mysore um that's the flow we need if you're coding along uh yeah you can get clone this and yeah let me get to deploying you can just set these environmental variables um you'll need an L1 go early RPC URL um and some uh private keys undoed with correlates if you want to actually deploy it but um uh yeah for now let's let's let's dive in I'll get rid of my Twitter um okay so um to start we can sort of go so we're going to start with as far as the cross chain messages go we'll start with this registration step um so let me do this um so first of all just looking in our repo real quick um I'm just in the contracts directory here's our contracts that'll be deployed on ethereum here's the ones that will be deployed on arbitrum L2 and basically we have vl1 token itself dl2 token itself the L1 gateway dl2 to Gateway we'll talk about this Alias helper later just ignore that for now yes is that good hey Mark a lot more yeah we can Nimble that um so we'll start with so this is the token contract itself or an example of the token contract itself that we might want to use that we might want to bridge right we can see um this is already filled out there's nothing to do here um we can see this is you know standard opens up linear c721 um we're just giving ourselves the ability to Mint so we can mint stuff and play with it um the important thing here the important affordance that it needs is it has this registration method so this will actually make an external call to our Gateway and again this will update these mappings on L1 and L2 okay so that's already done the token has to be able to register itself um so let's start with that that actual registration um so if you go to L1 nft Gateway so again this is like the Gateway contract the bridge contract um so the key thing that we wanna that we're going to be sort of doing here is updating this mapping on the L1 side and then similarly there's a mapping on the L2 inside a double cache with a cross chain message um while we're here so basically we just have a bunch of functions we need to fill out but we can just look at what we're initializing it with um so this is counterpart L2 Gateway the L2 side of the actual nft Bridge we're storing that and then inbox and Bridge these are both arbitrum core protocol things that we'll use for cross-chain messaging uh that we'll get to in a second um and then yeah this is this is the mapping we're actually updating let's just peek at the L2 side as well so the L2 Gateway um similarly we have an L1 to L2 token mapping that's what we're targeting as we update and uh yeah we'll talk about that other stuff um when it comes up okay so let's um let's start with this registration stuff so the token itself made this call right um to register itself and we want to update the mapping basically so let's um let's go for it do okay um so we are going to kind of assume that the caller is a token if it's not that's fine it won't affect anything else um so we'll call this L1 token then just grab the address because we're going to use this in a few places hopefully my hands get slightly less shaky in a second um so there's the L1 token address I made this call and now we just update our mapping um there'll be a check we want to do but let's just let's just get this code in first L1 to help your token okay the L1 token maps to the L2 address provided cool that was easy um now um one question we should ask here is should you be able should the token be able to sort of re-register to a new address and we can decide you know for the sake of Simplicity let's say no this is kind of by the way this is this whole architecture is meant to be as simple as possible kind of minimum viable token Bridge so we can kind of focus on the cross chain messaging stuff and understand what's going on so if the Gateway you know if the token's allowed to sort of change itself to address that could make our assumptions kind of weird um but another thing we might want to ask is can it re-register itself to the same address and we actually do want that um and I'll explain why but first let me let me write this track so um if the um so we're going to check um um actually let's do this yeah so before we register it let's grab we'll call it like current L2 address and we'll grab it from the mapping so before you register it here's what the address was yes and we're going to say if it's all we're going to check to see if it's already registered um smart contract to um be compatible with your Bridge fundamentally because I need to self-register right yes and if I'm an NFC publisher why do I need a bridge I can just click create a button on my website like burnt okay and then give it to Kent when you buy an opportunity uh you could in that case it'll be trusted right because we want it yeah but nft fundamentally our tokenization of Rights so fundamentally nft are trusted well if we want the bridging process itself to be trustless let's say right so correct let's put it that way right so the bridging so yes whatever trust assumptions are within well that's as trustless as for cross-pressession yes exactly so again we're treating the L1 contract as the source yeah it's a good question so L1 contract is source of truth whatever attract assumptions it has we're sticking with but the bridge itself the bridging processes compatible with Legacy contract it's only for upgradable contract or new contracts specifically beyond for interact with this bridge yeah that's right you have an old NFTA for example what you could do is deploy a new contract that's kind of a wrapper and you have another one yes exactly okay so in in terms of in terms of re-registering so if it's already registered we're going to actually allow it to register again as long as it's registering to the same address um as strange as that might sound um so we're going to require that the current address is equal to the new one and the reason we want to do this as we'll see is we're going to be sending a cross chain message um I'll just keep shouting okay um let me know um the okay so we need to know the address that um at which we want to trigger a message on the L2 side which is going to be our L2 nft Gateway which we have stored as counterpart Gateway and then we also need to encode the actual message we're calling right so on the L2 side just peeking ahead the message that we're going to be calling because we have the name here finalize registration from L2 we need to sort of encode that and specify that that's the that's the method we want to call so let's uh let's do that and encode that data and we're going to actually just do that in a separate method here get register L2 message call data so we're going to encoding the method of the call that's going to be made on L2 um so we'll use um encode with selector right so this is just this is you know um um this is what the origin cross chain protocol expects we encode the actual uh the function name itself we've already imported this thing so it should be yeah L2 then if t Okay um um what was it called finalized registration from the one that's the method we want to call so there's our function um and we pass in its parameters which are just going to be these so basically these are the things that we need at L2 to do the second half of the operation which is updating the mapping at L2 um cool so that gets us the call data there's a reason I'm putting this in its own function um this is going to help us estimate gas later basically but for now if that's not satisfying we can just say it looks nice in its own function easier to read okay um so that'll be the call data for our cross chain message call let's grab that in our registration method um yeah and uh we pass in what did we call it L1 token L2 address uh let's call this something L2 message call data cool um okay let's just like see if this compiles um just to make sure we don't go up there else cool okay um okay so now we have our call data now with that we can actually send a cross chain message so I'll just briefly show you um the interface for sending L1 to L2 messages so this isn't in the in the repo this is um in the arbitrum uh uh the arbiting core protocol Nitro repo but just to show you the interface here in fact let's do this hopefully that's like reasonably visible kind of um um here's all the things we need um create retryable ticket is how we send an l12 message um let's just let's start filling out the fields and then we'll talk about um all these new ones but for now okay so um we have our inbox address saved again this is just core protocol um create ah it's overfilling everything um I don't know why it's doing that okay um okay so two is uh the address at L2 at which we want to execute the L2 call so this is our other Gateway counterpart L2 Gateway maybe I can do something oh whatever we'll just as there's more it should um become horizontal um or vertical rather the okay so we have that um again this key thing down here this is the actual message that we encoded so we have that now everything else has to do with kind of paying for gas at all too so the way these retrieable tickets work is we not only specify a contract call we also fund it so we literally you know we're effectively depositing ether um along with this message we're going to use that ether at L2 to do the execution so a lot of these other basically all these other fields have to do with what's going on in that Ultra execution um so um L2 call Value that's easy because that's just zero in this case we're just updating a mapping we don't need call Value on the L2 side um and now we have all this stuff that has to do with gas um so I've just included those in this L2 gas param struct let's just look up at that but basically L2 execution so max gas and gas price bid this is very similar basically the same idea as gas price and gas limit on L1 right works the same way on arbitrum the one additional thing because this is a cross chain messages there's the special Max submission cost thing an additional fee for processing cross chain messages because there's just a bit it's a bit more resource intensive so that's like proportional to the amount of call data that you use but for intents and purposes here we're just we're asking the client to provide all these values so we don't have to worry about where they came from um but those are the those are the fields we'll need to to create a cross chain message um and I should just do this now as well um like I said we're sort of depositing The Ether along with it um so we're going to send that along um is that right um I look weird to me but I think that's right so we send this along this will pay for the L2 execution but the L2 will sort of automatically try to execute it if it fails the execute on the L2 side it can be retried for a week that's why it's called a retryable ticket and this gives us kind of an atomicity guarantee um anyway let's get filling these out so we have the O2 counter market with no call Value and now we get to these L2 gas params um so that was just passed in connect this uh-huh I hope I feel it's getting weird I'll just type it up um so max submission cost is maxed um okay now we see over here we have these refund addresses and this is basically on the L2 side um if you provide excess gas in your deposit you specify which address you want that gas to end up on and this is necessary basically because it's a cross chain message um we need to sort of do something with this excess gas uh yeah question the L2 call Value yeah yeah so think of L2 quality when this drawstring message we're creating this effect something that's going to look a lot like an L2 transaction it's just going to appear at L2 unsigned basically okay so for that L2 transaction we need to specify kind of all the usual fields okay so but the we'll we'll sort of build out the contract call in a second and we'll see what the L2 transaction is doing but here we're specifying all the necessary things so we have like the contract call the address and then yeah the actual call Value just on the L2 side um yeah hopefully that makes sense if not hopefully it'll become clear in a second let me see the full the full flow um yeah um okay so the refund address um we can just we're asking the client to provide so in this cross chain message sort of where your excess ether gets refunded at L2 um and then there's a second refund address which is if there is call Value you specify if the L2 message never succeeds you specify where that call Value gets refunded at L2 in this case doesn't really matter because there's no call values we'll just use the same the same refund address and now we have L2 gas params uh hard to see what's it called gas Max gas so that's kind of the gas limit and then L2 gasparams um it should be something like what do we call it Max fee for gas I think for gas price there we go gas price bid okay um let's get rid of this hoping this will just horizontally um okay and then finally the last parameter was the actual encoded uh the encoded call data of the L2 message there we go okay um we are complaining yes they did mean that okay looks good um so there's a question message um this gets published and this will sort of automatically execute this method that we encoded at L2 so let's go to that now um which if you remember was this thing finalized registration from L1 so this gets automatically executed now we want to finalize the registration which means basically the same thing it did before we're just updating this other mapping okay so that both sides of our game the L1 address that I got from the cross chain message gets updated with this L2 address um and that's basically all we need to do there um now uh other than one other important thing which is we want to make sure that this method at L2 can only be called as a cross chain message otherwise this whole thing breaks um so we'll add this only counterpart Gateway modifier and now we have to fill that in I think I still have do here no more to do um so only count up our Gateway this is um gonna be a simple required track just with a slight gotcha so here we're going to ensure that the message.cender equals this thing that we're calling counterpart Gateway L1 or counterpart L1 Gateway aliased so notice that we initialize the contract with the L1 Gateway and then we do this thing where we Alias it um I'll just just to peek at this real quick the actual aliasing step you'll see is just like adding to the address itself some constant offset so what's going on here is um when it comes to cross chain messages the way that the sender address appears is not the sender of the L1 contract and this is basically so that on the contract level we can easily differentiate between the con messages coming from L1 versus messages coming directly from L2 we need to do this because arbitrim um contract addresses at Arboretum are computed the same way they are um the same way that are in ethereum so we can and often do have two different contracts you know one at all one one at L2 that's that share the same address so if you can't differentiate between them you could get all sorts of weird spoofing attacks in this case every cross chain message kind of lives in its own address space this Alias space so we know this is definitely coming from the L1 Gateway um cool there's our registration step um yeah any questions there that's that's kind of yeah if you didn't yes if we didn't do the like if aliasing wasn't part of the arbitrary protocol for example if the message of that sender was just the address from L1 then the uh the deployers of this contract let's say if they were malicious they could deploy something else at L2 at the same address that and then you know it becomes very hard to reason about the risks there yeah um so this way it's protecting you from malicious developers basically which is a good thing to protect you from anything else cool okay so there's our first there's our first graph State message just simply doing the registration um let's do the deposit so this will also be an L1 title 2 message um and uh it'll look fairly similar actually let me just make sure this compiles again because I'm not using remix and I'm paranoid okay um I'm just running just compiling with hard hat um cool okay so our L1 token registered so now we're going to assume or we're not going to assume anything but if this token is indeed registered it can do a deposit um let me just make sure I didn't forget anything cool okay so um now we're gonna deposit so you can see it as once again the L1 contract is the source of truth that's what we use so that's what's passed in as a parameter um so we'll use that to look up the L2 address uh first so let's say L2 address equals uh we'll look it up in the mapping that we just saw the registration step go down and yes um and now we're just going to make sure it's actually registered um so just require that this thing is really an address to address um registered okay um so cool everybody talking is registered rln token opt-in we inherit whatever assumptions element token is making again um now we can proceed so we can actually do our our um our deposit so the deposit again and tells these two things we're going to Escrow the token here send the token to this contract um yeah we have our 721 721 interface imported um so we'll uh connect to it at the L1 token address and do save transfer from uh from two token idea yes so from the uh from the sender the caller of deposit to this contract this is the escrow so here here um and uh the token ID yes cool so there's the first half of our deposit um and now very similarly we're going to send a cross train message to L2 um again uh we're going to need so we have similar parameters here the gas params the refund address all the sort of gas specific stuff uh once again we need to encode the call that we're going to make on L2 which we will do in a function here um so this is basically again just think of this as like the information that we need to send to L2 um and the actual function we're going to be triggering on L2 is called finalized deposit and there it is okay so let's encode the call to that now again as a separate function um selector awkward autofill um so just like before awkward autofill um and it's the same parameters in the same order uh so yeah function selector here and it's just yeah all these so this gets encoded um yes now let's grab that um so we have our uh what I call it before a little two message call data or something in fact I want to call it the same thing so I can be lazy later I will do a message called Data yes um and we pass in the parameters so this was L1 token L2 address token ID and two two is the sort of um the address at which we'll be depositing the token the sort of receiver of the token at O2 um okay cool so we have our call data and now um once again we're going to send the sender a tribal ticket cross-chain message in fact in the interest of time and being lazy I'm just going to copy and paste this exact thing because it should be all the same parameters I believe I don't see why not um so we created a travel ticket yeah same parameters we still have the same L2 gas business once again the L2 call Value we're not sending any ether uh or rather we're not you know using any ether in the um in the L2 side of the message we could if we wanted to have the option of like deposit your token and some ether we could add a parameter there but we're not um and then yeah the only difference from before is we just calling a different method um which we did here um cool so now we will finalize our deposit and finalizing deposit means minting at L2 so let's do that um so now we're back on the L2 side um and cool we want to check here that it's properly registered um there is something that looks like an edge case which I can talk about in a second why it's not really a scary Edge case in terms of the timing of registration and things like that um what am I doing um yeah so we're gonna look up in our mapping uh yes and see that that matches with the token provided so this ensures that it's registered on the L2 side yep um and cool that should be it um once again we'll add our only counterpart L1 Gateway it's kind of the important thing so this can only be called via that cross chain message um and okay now we can do the L2 part um BL2 part of a deposit is minting so now we now we want to actually look at our L2 token which we haven't even looked at yet um what is going to be deployed on the L2 side so here I'm this was you know not this was deployed directly and basically this is the Assumption this is the assumed interface it has to have these methods here as I have a method that allows the bridge to Mint and allows the bridge to burn uh and we can just fill that out now um fairly simple mint okay so we expose the ability for only the uh only the Gateway or the L2 of the L2 bridge to Mint um I think it's in that same order I'm not mistaken I think that's how that works um and let's add this only Gateway that should be probably be clear if it was called like if only L2 Gateway or something but when we initialize our L2 token we give it the address of the LG Gateway cool so now that's exposed the L2 gate the L2 Gateway can uh convinced so let's uh let's mention positive yes so let's uh connect to our L2 token um or rather um yes let's connect to the interface but we'll use our assumed interface um L2 rbrc20 which has the bridge mint and Bridge burn functionality uh yes sorry the L1 and L2 Gateway are they depleted it doesn't matter yeah it doesn't matter they don't need to be yeah so just as long as we as basically as long as when we like when we initialize these contracts we know they know each other's addresses we're fine so there's no need for them it's probably better than not at the same address because that tends to confuse people we've had issues actually um um yeah but um so they can be if you're if you if you want to be fancy with how you deploy them but they don't need to be um okay um what are we doing we're minting yes and my editor is smart I think is that the right order yes cool um so there's our actual mint um and that's it right because again this this can only be called as a cross chain message so there's uh there's our deposit yeah any other questions before we move on to the last um time is fine so let me let me slightly speed around this but um um let's um let's do a withdrawal so here we're going to um need a cross chain message this from L2 to L1 I can just show you laughs the average from pre-compile we're going to use which is called our obsessed so every Every arbitrum Chain um gets this pre-compile it lives at um address 100 or that hex um and this just exposes all sorts of system level functionality for our purposes we have this send transaction to L1 very similar idea right we specify the L1 address that we want to make some contract call and we give this this data this call data which is the encoded message that we're actually going to call notice in this case there's none of that gas stuff and this is because there's no such thing as automatic execution on L1 so this has to just happen in two steps right we initiated on L2 and then sometime later the client will sort of finalize it on L1 via its own transaction so perhaps slightly more inconvenient for the user but convenient for us now that we don't have to have those parameters so it's a two-step process um and this is where you have to wait the optimistic roll-up delay period if you're familiar with that stuff um okay cool um so let's do our let's do a withdrawal here um yeah let's go for it so let's see we have like 15 minutes um let's check to see so we're initiating this on the L2 side once again we have we we have our mapping that is the source of Truth or registration so let's uh check to see if that thing is registered and also get the L2 address so again we're specifying our token by the L1 address that's always the source of Truth um and here I think we just need to see that it is registered yes um just like before how to address require that it exists class autofill um okay um so now okay for a withdrawal we want to burn first um so let's fill that in back in the token we want to expose the affordance for the gateway to burn um so let's do that in this case we also need to actually verify that you're uh that you know this owner has the right to burn it which we didn't have to do for mint um basically in order to get to the mint code path you had to transfer a token to begin with so there we were safe that you were the owner in this case you just gave me a token ID who the hell are you um you better be the owner so let's make sure you're the owner um so the Gateway will be responsible for passing in the owner address and now we want to I think it's owner of I'm blanking out I think that's highlighters um I think that's right um what's up is that right yeah thank you um so we want to acquire it require that it's the owner passed in let's call this like whatever it's like potential owner should be owner whatever yes cool so we make sure that this so yeah again the Gateway is responsible for making sure that that owner address is passed in we make sure you're the owner um and then okay once we are we can we can go ahead and burn yes maybe there's a nicer way to do that but that works um I don't think there is um okay so now we've exposed Bridge oh this also has to be on the Gateway of course that would have been critical vulnerability um okay so now we can burn um yeah so we connect to the Token on the L2 side with the address we just got from the registry we call Bridge burn we pass in the owner or claim to owner which will just be the caller of this method um and the token ID does that work yeah yeah okay um cool so we burn on the O2 side now we want to send a graph stream message down to layer one um which once it reaches layer one we'll release the same token from escrow same token we're just notice I didn't say this explicitly but we're just sort of tracking tokens by ideas we're just keeping the same idea two as it has on L1 because why not um okay so we need the destination address which we have the L1 counterpart Gateway um let's do what we did before and encode um a function call here we can we'll just do it in line not as a new method okay so what's our function and what do we need to send is the question in order to sort of release it from escrow on the L1 side um we can pick so our method here is called finalize withdrawal we specify these things um so let's encode that on the L2 side um I forgot them already we specify Ln token token ID in the two address okay and it's called finalize withdrawal um um yeah uh Ellen token e oh and let's call it something so this will be the L1 message call data in this case foreign yes this will be encode it with the function selector will my linter just be nice it will not hold up um okay so this is the message we're encoding to send to L1 and now um there we go is that compiling yes um now we will uh yeah we'll send a message L1 with the ARP says pre-compile yes yes based Yeah so basically that's a good question so the question between here was like how do we ensure that this mapping is legit essentially right like how do we know this isn't the actual mapping and basically that's the registration system shares that so we're we're inheriting that whatever trust we give to the L1 contract only the L1 contract itself can register so the L1 contract the token contract itself is the only thing that can self-register and it specifies the L2 contract so if it lies it lies that that's right then that means that the L1 contract was malicious or if it gives the wrong address that's its fault okay so we're assuming that this L1 contract over here when it makes this registration call picks the right address on the L2 side right I guess yeah I don't know if that really answers your question but I think maybe the key thing is only this register call it can update the mapping and only the token itself can affect it um um I hope that helps um okay where are we here oh yeah now we have to send our send our actual message so let's do that here's our message um we have this ARB system just you know just a time not showing but all this stuff is imported these are some uh this is like our library um where we publish these interfaces but anyway um so again it's just a pre-compile at address 100. and our method that we're using is ntx to layer one um the address is the Gateway contract counterpart Gateway or whatever it's called counterpart L1 Gateway not the earliest version this time we want the actual address um and we'll send the call data um what am I doing oh address sorry there we go address 100. and that looks right to me yes um I think that's all we need to do here I think I missed a return statement or two earlier um cool um okay so let's uh finalize that withdrawal um this part should be fairly simple um so what does it mean to finalize the withdrawal this means just release it from escrow um well okay so the first part will be simple um let's release it from escrow so transfer it out to the uh the destination address or the uh the two address I should say so we connect um and we transfer um from two token ID so from here right it should already be escrowed sorry um too much coffee very jittery two um and token ID so there's the actual um there's the actual method that gets called now uh the last thing to do um is uh uh fix this error oh I did something stupid um there okay um the last thing to do is to make sure that this actually only gets executed as a cross chain message um so this is only counterpart L2 Gateway this is a bit more involved at least to understand the pieces of it and I see there's eight minutes left so maybe I'd rather if there's any other questions feel feel free I feel like maybe that's but I'll if I don't see it just shout yeah education yeah the doodle contract itself would do the registration and it only has to kind of register once is the way to think about it right so that so once the contract itself and it's not it's not necessarily the owner of the contract don't think of it that way it's just however the contract is set up the contract needs to be able to register so in this case it's not the owner um in fact in this case anyone can call register token Dell to which means in this case actually it's probably not the best idea yeah you should like deploy this contract and register right away to the right address um but as long as some as long as the function can make the external call to register they can register and whether that's you know whether that's proper whether that's malicious you should look at the L1 token contract so that's yeah um probably the doodle team right so yeah so like whoever so somebody basically like whoever sets this up right like we're probably the same party that deployed the L1 side um we'll sort of plan this um so they had to play both and you know the reason you want you wanted to play both is so you just know his address to set okay but the other one but the element contract ultimately has has control no so good question in the happy case in the common case no the question was when we when we deposit yeah um does anyone need to call a function on L2 so the way these retryable tickets work these are original cross chain messages is it should it'll execute automatically it'll try to execute automatically so we Supply the gas for the L2 side to execute um and assuming that doesn't revert the user doesn't have to do anything else so from a user perspective they publish an L1 transaction they wait a few minutes and then it just though it'll get minted on L2 now we can't guarantee the execution will succeed at L2 like maybe there's a gas spike in the time between when you deposit it and when there were tribal tickets created at L2 if it fails then someone's gonna have to kind of poke it again to re to re to retry it to re-execute it we have a week to do that but normally yeah in the happy case that shouldn't happen correct correct we Supply it Supply it here so actually so when we do this create retrievable what this is doing great retrievable ticket behind the scenes is it's actually depositing this message.value either okay so this is so that's that's that's happening behind the scenes so this so this this value that we send is actually getting deposited to L2 and that has to cover all of this gas cost that we're supplying so that has to cover you know uh uh you know gas price times gas limit plus Max emission Cost Plus call Value yes correct the L1 yes the L1 call supplies the gas for L2 now by the way as like a side note if you already do have gas at your L2 address there's ways you can you can use that but this is this is the path that we encourage for doing cross-trained messages is just Supply to you through directly for various reasons yeah um um yeah cool then you can if you look at our docs you know I I brushed over some of the details of retrieable tickets because um yeah there's a lot going on there but that's that hopefully gives you the gist um any other questions I'll just start writing out how we do this in the meantime okay I guess we'll just finish this because it's um so here's how we're actually guaranteeing that the finalization of the withdrawal is really a cross-chain message and here this gets a bit into the weeds of how these sort of cross chain messaging contracts work in arbitrum but basically cross chain messages all come from this bridge contract which is a protocol contract um I'd like to show that to you if there's time um maybe I'll just show you the first part um that's that's the ultimate caller let me show you this one so cross chain messages just real quick um if we look at how they're executed so they're initiated on L2 as we saw in the case of you know you're gonna have to wait for the dispute period because it's an Optimus to grow up um and then anyone can call this execute transaction thing so in this case if that's not automatic the way we're travel tickets are there actually is the second L1 step um the thing I want to show you in this execution here here what we do is we um as we're executing this cross chain message we save this context thing so we can expose all sorts of data about this what's happening you know what happened from L2 notably this sender data is what we're going to need so we expose that in something like L1 to L2 sender during execution it's a little hard to show I guess but during execution the point is as we're executing a cross chain message we can access this context so we can do the checks that we need um so that's going to be important that's how we'll ensure that it's really coming from the L2 Gateway and then finally um the thing that actually makes the call is going to be this other contract that's the bridge so that's always how L2 to L1 messages work so we ensure that it's really coming from the bridge and then we would also ensure I'm sure it's really coming from the bridge that's half the step half of the work the other half is making sure that it's uh we grab that context and make sure it's really coming from um the address that we expect um let me just throw that in here I think there's time um so that this is at least complete um so we'll grab that out box contract and this is a uh we can just do this in one line I guess slightly ugly but we can instantiate the bridge and then the bridge gives us access to the activate box this is just so we don't have to start another uh another address um yes um that looks like something might be off I think that's right uh dantia this is hard to do live um oh I didn't call it anything yes thank you and I think that's all messed up um thank you am I missing a oh at the end yeah that should be yeah we're instantiating after we call there we go that's the address okay so we're just grabbing the outbox address which is stored in our protocol contracts um and now uh we can get the L2 sender via this neat little context trick um what is uh L2 L on sender l22 L1 sender so that updates during the context of execution and now we want to make sure that that thing um is the counterpart gateway address basically uh uh from giveaway okay um so because there's no automatic execution because this doesn't work the way you know tribal tickets work checking out the sender is where we expect it to be is slightly different but this tells us yeah it's from the address we expect and it really is a cross-trained message um cool since we're almost out of time you know so there's if you're coding along or if you want to grab the repo there's a branch that has like a completed version I can also push this one but there's um scripts to deploy the contracts I can even just really quickly run that um I don't think there's anything much to show there but then there's another script that will actually do a registration and deposit so you can mess with it I'm gonna wrap it up okay um but uh yeah cool if we have to stop there I guess we'll stop there yeah cool uh thank you all for listening [Applause] foreign hey I think one is good okay all right yeah I guess I'll go I guess I should I should take it probably but yeah I think we can just pass these around we have a third right then your microphone you need another one right okay for you sure for any yeah hello does anyone else hate ear microphones I have to be the one to like take it and I'm like you guys are gonna hear me breathe for the next two hours it might be calming actually so I guess I'll give okay I think this mic is almost ready for me maybe just while I get set up here Lincoln do you want to um start out with this one oh yeah yeah yeah so uh hello everyone uh thanks for joining our Workshop we are people of skilled uh it's real privilege to be able to speak at devcom and share with you what we're all passionate about uh sorry I'm short of breath I was just running from bathroom anyways um I think we will give you a little bit of introduction what this is about but pretty much we're gonna have two hours which are gonna be quite uh quite easy going we thought of four different workstations that we will split into afterwards but um to begin with we'll look into the topic we're actually covering here and we assume all of you are interested in building the talent inside of your organization you're either a Dao operator an educator a leader or someone who's just really passionate about building talent in their Arc so that instead of always looking for talent from outside you can bring in some people who are maybe not as experienced at what three or not at the senior level and you can build them and help them evolve inside of your Arc becoming much stronger and happier and successful and also like contributing to your peer projects overall success yes so to begin with Lloyd do you want to continue yeah yeah I'll give a little bit of like background context too about who we are um so I've been doing people operations in the crypto space for about four and a half years um and I often felt like an island in my project there's like nobody else who is working on people issues um and it can feel like wow these other people have a different mentality and I just wanted peers right so I found out that there were many other little Islands in other crypto orgs turns out we're an archipelago of uh people Ops staff in in various entities people with backgrounds and argon and get coin and giveth and people currently in pocket and giveth and um chainsafe currently in get coin in DX Dao and maker Dao and many more and so we try to bring together the wisdom of what's going on in the realm of like managing people in crypto it's pretty different right whether you're a Dao or you're a crypto company even if you have like a company structure still like half of your people are like crypto anarchists right so they don't really align to traditional structures of management um and what it takes to build a healthy team and maintain a healthy team is pretty different than in the Trad world so that's why we've all come together and we Face our problems uh as they arise we find we're often facing some of the same problems at the same times you know last year we all went through swells and Recruitment and trying to stay balanced and how do you do that ethically we've also gone through a lot of themes of compensation as the bear Market started to hit how do we build you know ways of assessing compensation assessing competency that is crypto native but really helps us budget well um so we've we've faced many of these themes many of these people problems that the space encounters and today we want to talk about building the builders biddling the biddlers um and it's really timely I think because as we settle into a bear Market it's this natural time for professional development and growth within you're not going to be hiring as many people from external to the crypto space we can't just rely on you know yanking experts from web 2 anymore those people are expensive and out of touch sometimes and so there's this natural phase where in crunch mode in Bear Market times contributors who do stay they have to step up to the plate to take on new responsibilities new levels of professionalism and proficiency and it's up to us as org leads Dow operators or even just contributors who care it's up to us to to help our organizations Foster that environment of growth right um so that's why we're here today as Lenka said we've got four different breakout stations that we'll go into um at like 30 minutes after the hour um and we'll get into the description of those in a little bit but I want to take us through the life cycle of people operations do we have a clicker I don't think we do is anyone here helping us with the slides we're not super slides heavy but we got a few we have a few few visuals for you guys some of y'all are even lucky enough to get handouts in your breakout groups too we're real teachery here thank you and we expect you to do your homework well let's see if this works nope so whoever is uh screening the slides can you please move to the next one okay sorry guys I'll plug in mine okay that's cool I can I can I can continue to spiel about it um before we get slides up oh yeah oh what no okay well while we're waiting for technical things I wanna oh is it yes okay while we're waiting for technical things I want to just hear a couple shout outs like what's a big people problem that you notice happening in this space team Health you know rage quiz it could be anything anybody what kind of people problems are you seeing happen in teams anybody has a people problem yeah go ahead um Fife Dums yes yeah cool so power structures anyone else sometimes what people want to do doesn't align with the best interests of the Dao hmm good one anybody else sometimes people come for instant for incentives and when they dry out they can go as well or they come for instance instant pain instead of long-term growth of the doubt hey guys isn't that why we love bear Market building okay cool um I have my slides now so so I think we'll just move to that um yeah so I talked a little bit about um what we do as the people Ops Guild um where we come from um but yeah we we try to educate this space we try to educate ourselves and just be a Learning Hub together we're also available to anyone who needs some help if you have uh like a consult that you want to request um we're happy to share our resources there's a few different educational resources that we have put out um some like worksheets and an article but we're also down to take people's questions and you can reach us um by scanning QR code there will be also more opportunities for that QR code later too okay so um can I'm gonna stand up so I can say this okay so um this to me is the whole life cycle of people operations in the crypto space A lot of people are like what the heck is people Ops I don't know are you HR that sounds stuffy I hate HR what is this [Music] um but it's a little bit different in crypto orgs um so kind of at the at the entry at the 12 o'clock we have like the hiring process we have like the discussion of compensation and benefits which often is left out in crypto jobs um we have onboarding processes can be kind of hard in douse we have um role definition and work contracts work contracts can be super different in like non-legal entities or in very inventive legal entities um then we have uh you know the maintenance of culture once people are really in the org we got team building and and Vibe maintenance we got IRL time with our teams these are all things that people operations do then we come to professional development opportunities for our contributors as they've already settled into their role and they need some time to grow how are they going to know if they need to grow performance review but it doesn't usually work in a typical managerial sense in all crypto orgs so a lot of us have some form of decentralized peer review um we also have conflict resolution as well as like one-on-one contributor support for Hard Times these are things that people operations provides um and some orgs have a code of conduct too and this is something that's tended by people operations staff so when we look at this whole life cycle I see the main things for contributor development being obviously the professional development and the peer review and sometimes actually a lot of the team building and team RL IRL time because you get a lot of educational opportunities in that time we're all here learning at Devcon right we're growing so much just by being here and so education and professional development and peer review are the main things that we're going to talk about today for contributor development and now I want to invite some of our guilds to speak about their experiences with that I got it yeah all right um you want to try this one hi guys uh I'm Lenka uh I'm basically not officially a people Ops person so I always feel like uh like a black sheep in this group but it's kind of fun because it's something I'm passionate about and I got close to this topic uh while I was working on the project together with my teammates we called it X-ray and we were researching the centralized Workforce we were researching uh the ways to best attract onboard and retain talent and the team I'm at in our language core unit it's called SCS sustainable ecosystem scaling at maker Dao and uh yeah the personal story I want to share here with you is actually my uh my time when I learned that the maker Foundation as you probably know is closing down and basically there's this completely new structure uh where people shoot kind of like sell themselves as contributors to the Dao and be voted in so it was like a really big change in transition but we kind of knew this is coming because our organization has always committed to like Progressive decentralization and when the time came I just want to share that the good experience I had from my orc because um on one hand if you are a bit more centralized organization you actually do not want to have um like you don't want to mess with the process of Dao uh contributor onboarding so you actually do not want to influence or weight in when it comes to making this decision but I was super fortunate that we were LED some sort of a wiggle room where we could actually in a bit more peace and less stress figure out whether we want to transition into Dao how do we want to transition and basically we were allowed that space without the foundation kind of like abusing it it could abuse its power uh because they you know they have a lot of influence so basically I was in a situation where I had a bit more time and space to be able to figure this out and get the support from the foundation side but not the support of helping me get there but checking on me and hearing my my plans and figuring out what other work and important things I'm managing I'm leaving behind so that the transition is smooth so I think that's a very really good example to share with you if you are in a situation where you have a bit more startupy traditional organization and you're looking into how you want to decentralize so I think that was a really nice approach to offer that safe space but do not interfere with that and yeah the funny thing is that I used to do I was part of the markham's team and I used to do like events management and community building and when I transitioned to the Dao I just said okay I want to try something new and I kind of had to figure out a way to apply myself and I became a Project Lead so completely different thing you can have some experiences but it's really nice this opportunity so that's what I wanted to share with you this short thing who do we have next [Applause] what so who wants to go next this one this one works um so thanks you for sharing that link uh I didn't prepare a share for you guys but I just want to tell you a little bit about who I am and what I do my name is Melanie I am a contributor to DX Dao I lead the contributor experience there I uh I have a traditional background in HR so pretty much my entire career I've covered all things under the HR Bella like recruiting compliance Performance Management all the way to talent management um and coming into a Dao has been a completely different experience but definitely learning these skills and like gaining that type of knowledge has given me the skill set to really help support my team helped support my squad um and my Dow so today I'm actually going to be at the peer review Workstation and we're going to be talking about building a culture of feedback introducing some mechanisms that you guys can use within your Dao and then applying them to certain cases but that's a little bit about me and who I am and yeah thank you for joining [Applause] awesome um yeah thank you all for being here I'm saf I do people Ops at get coin um Bitcoin is an example of an organization I think we've like gone through all of the things that Louie mentioned earlier where we've grown really quickly we're up to like 45 full-time contributors in the past year um and uh yeah like I you know being the people a people Ops person I have gone through sort of like many of the the different pieces of the um the contributor life cycle um yeah like just doing a lot of hiring and uh when we were still in bulltimes um and then realizing that there's a lot of work debt that we've accumulated um in the bowl times that we now kind of have to um uh yeah like set up uh structure and processes for um so yeah I've been involved with like compensation creation I get coin um and today I'm just uh I'm here with Anna and Melanie at the peer review station yeah thank you hey guys thanks for being here with us I'm Anna um I work at chainsafe and I come from traditional web 2 space and came into web three two years ago with you know a bunch of tools from web2 can be implemented in web3 which is with different different outlooks and basically adjusting making it work as well so happy to be here and talk about that today um I'll keep you brief and short uh yeah the the Perry the peer review station is super robust and it's gonna be a great um breakout group so um Heather I don't know if you want to say just a little bit about um Recruitment and what you guys will talk about there hi um my name is Heather um and I'll be filling in for Francis at the recruitment station and I currently work for giveth um oh I forgot to mention five thankful for showing up I thought we would be speaking to a room of crickets but it's really awesome that there's like so many people in here that are like really passionate about this are at least interested um as we are and um a little bit about myself is I don't come from HR at all um yeah I'm I'm actually trained as a clinical I I also stutter so if I stutter during our breakout session that's just me but I come from a clinical mental health counselor background so I got my Master's in that and I worked in an adult Psychiatric Hospital a locked unit for five years over in Denver and um it sounds like maybe it's not transferable but I think in this like wild there definitely is I'm like all right ah thank you um so I think through that experience um what taught me a lot about that is how important job satisfaction is to be everyone you know it's like you have purpose in life if you have a job that you like you're probably going to be happy overall and I think it's really important that like we try and create like a curated workspace so like people show up excited for their jobs that they're having fun with their teens that they're laughing and if like you have that like good vibe going on in your team chances are you're going to be more productive you're going to have more retention and like people are going to be proud to like work for your org so um and I think the very part of that starts at the recruitment process where like I get to use my like detector and um just really choose like the outstanding candidates that can fit in your teams the best and I'll pass it on to Ben uh hi everyone um so I'm Ben Perez I work at pocket Network um which is protocol for decentralized node infrastructure if you don't know what that is you can come and talk to me and we can talk about together I'm looking forward to meeting lots of you I'm an incredibly awkward person so if I look to hug you and you put a hand out for a handshake just warn you up front that's who I am um uh and yeah I think there's like lots of ways to think about web 3 but um uh one that I think about often is that it might be like the largest human re-education program since like the Industrial Revolution um I think the fact we're here today talking about different ways that we can develop people and upskill them is um it's a really important topic um the really important part I think um is to also not teach them all of the patriarchal power structures that are built into our existing Educational Systems um so I'm really looking forward to talking about that a little bit my station is about tactical development um it's with a bunch of experts who are working on educational programs that you can potentially work with so um yeah looking forward to chatting about that today [Applause] okay so um we were gonna have you guys pepper out questions I think we'll still do just like five minutes of that because we want y'all to have a good idea of what workstations um you should go into um and I might I might just uh make a little a little bit of Distinction kind of between the workstations before I have you guys give questions so um as you know these three folks are are really focusing on peer review I think that one is pretty self-explanatory um recruitment you know for like a life uh recruiting for a lifelong um growth Journey for any contributor um and then the the two that I want to give you a little more Distinction on is um continuing education which is me and Lenka um and tactical development which has been so at our station we're gonna talk a little bit more about um The Learning environment in general we're going to talk about like brain plasticity and how to build like a culture of learning in your workplace we'll talk a little bit more about like the philosophical education around crypto the movement and what's important to know about that and how people can develop kind of as you know thought leaders in web 3 as well as just doing a good job of being in these organizations and what it's like to develop those skills to exist in a Dao or wherever else versus Ben station is more about the technical skills it's going to be about more tactical professional development stages and like he said he's got some visitors from various different developer education and other really tactical web 3 skill education cohorts so just so you know kind of the difference between those two um and before we go into breakouts um I'd love to just open up for a few questions these can be questions about like you know how do I um how do I execute um like a decentralized performance review or um how do I convince people in my org that this thing is important um just I just want to hear a few questions from you guys so so that we can see you melding into these breakouts better you can just raise your hand and I come with the microphone okay hey I'm Alex a question from I said I come from web 2 been in web 3 for one year uh I was fortunate to be in a webtool company that focused a lot on growth and HR and just helping us in in the company we were 200 people there coming in web 3 I see it's very focused on financial and Technical part and missing that Human Side I try to bring that in the company it's not easy how to do that thanks that's a great question um and honestly I think it it steeped in the culture um overall and kind of involves all of these aspects um but I would say if I were you I would go to either like continuing education or to peer review um I think those stations will have some some good answers for you okay do I see another hand okay there thank you uh really fascinating my question is how do you work during this bear Market as a team and avoiding people burning out or not delivering or you know just a number of human issues during this third Market really yeah I think it's very important to talk to your people and like actually hear out what's going on why it's going on and um be it you know in one-on-one setting or through some sort of survey Anonymous or not um and just hear your people and like come up with things that you can do together to you know address some of the issues we're all facing burnout Wellness you know disconnecting from your laptop that's a big one I think for everybody um I'll add to that so I like to call myself an emotional support human um um and I think um in at least in at giveth um what I do if like someone's having a hard time like I come in and like have a checkup call with them I'm like hey what's going on like where your productivity is down like you seem kind of sad on calls like you're not showing up and it's like a private neutral space so we can just talk candidly about what's going on in their personal lives or if it's something internally going on um and then we like don't really dwell on the problem so much it's more like focused on Solutions and like brainstorming how they can like communicate better or um how they can like um propose different ideas they're kind of like struggling with so I I think it's it's especially in like this digital space it's really important to have like that human touch that we lose and when when we start losing that human touch is when people start feeling more isolated disconnected from teams I have one more answer to this question and then we'll pass it um I I think that it's really advantageous to have like connection moments in your team and like uh fun educational moments because sometimes when it's like not that fun to be at work it's more fun to be at school and to remember that like even in the struggle of trying to have a successful business that you're in a place where you're developing yourself so much and you're learning and that's thrilling and you are developing a sense of community um and so that's like something that we're going to talk a lot about how to do at the continuing education station I really think you could take your pick from any station for this question um but yeah Cena okay thank you okay go ahead okay we are a traditional organization and we have recently kick-started our Progressive decentralization process and I can definitely see some resistance internally from some of the some of the colleagues uh from the perspective of being judged and seen by everybody else in the public basically uh because I mean yeah when you're in a traditional organization everything is a pack uh you're like you just work with your colleagues like you have your manager but when you're a contributor when you are working in building in public basically uh anybody can can look at what you're doing everybody can see your performance so there's definitely a mindset that some people do not have uh coming from I don't know 10 years of experience in a traditional organization how can we help them to to kind of be feel safe and and I don't know feel the not judged let's say yeah thank you for your question who wants to take this one hello um the first thing I would try and say to those people is it's okay um one of the things that I find um about the experience of being in web 3 is that it does challenge you but usually it challenges You by allowing you to see things that were sort of kept from you in the past um and I think it's really important that people understand that maybe challenges around their development or their capability are okay and that the conversations were happening before often behind their back um so I think it's like a really good healthy culture to have that transparency and it gives people the opportunity to lean into developing themselves and growing I think the part that you're saying though which is really tricky is them feeling judged and I think often that comes from the way that we communicate with each other so I think communication is a huge part of what we need to do to create safe environments um and I think in this space if anyone's ever heard of non-violent communication by um Dr Marshall Rosenberg Rosenthal um yeah definitely great to pick up that book it will not only change like your how you communicate and like your job and life um but I think when people feel judged they tend to shut down and uh that's really easy to shut down when you're on a screen and like you can literally just close and not engage with their team so I I know we have another question coming too but I was definitely going to second that about clearly communicating I think it's important to communicate some type of road map maybe introduce like some phases into the transition um and transparencies of course really important as well so thank you I'll be really quick um it's mostly just a question that's clarifying I hope um Ben I think this is mostly directed to you um I I noted that Louie mentioned that this was kind of like the Tactical and or more technical skills I I'm curious if that's like really just geared to developers and like those hard skills in in the space or your Workshop will also cover some of the um kind of like Frameworks that are necessary that may be for non-technical contributors um uh so we'll talk about one framework just a way to think about your development and your capability um our experts or our speakers are working on projects which are around technical skill development um but they will talk about two things they'll talk about what their project is and does as something that you can think about the way people are addressing these challenges and then they'll look to share their insights or expertise around what they've learned from that experience which would be generally applicable to any type of skilled development but um yeah they're a little bit more on the technical side so I'm not not sure how that answers your question yeah okay right yeah and so anyone who's like really feeling that they're not technical um like skill Journey you could consider coming to continuing education too so and I think that means it's really time for us to start these uh these breakouts um we have a lot more people in here than we were expecting uh thank you all you guys are great um so we had originally made four different like groups of two tables [Music] um I'm gonna say you guys might need to pull more chairs around or you know if you even want to add a third table if the group is getting big that's permissionless in my opinion um but let's just name these sections so here we'll have peer review So Soft Melanie and Anna will be at this huddle here um in the back we will have recruitment so Heather is going to be there um and then let's see up on this side let's do continuing education so that's me and Lenka and then this group of two tables here will be tactical development and Ben will be anchoring you guys over here um so I'm just going to change these titles here foreign okay so we got a good question actually is like can you rotate between different workstations um most of the workstations are pretty liquid peer review is the one where I think people benefit more if they stick around the entire time that's still not a rule but um yeah the other ones um you will have plenty to go through if you stay the whole hour or you can go back and forth [Music] think we need Mike foreign foreign foreign foreign is I'm sure you're saying um construction but uh foreign thank you this especially foreign is to be more of the uh um hanging up there is I feel like doing um make sure that we're not um yeah but when it comes to like feedback I feel like when people make sure foreign foreign thank you thank you there is foreign thank you um you should because yeah when I leave for my Church which they provide yes I think we need okay perfect hello this one works this one too did you guys have fun in those breakout sessions yeah okay good I'm glad um so we'd love to hear uh just some learnings from you before we go into that I think we're gonna just do the very last portion of continuing education all as one group together um because it's about events it's about the importance of being here at these conferences at off-sites um and Lenka wanted to share a little bit about how being IRL at events really feeds into contributor education and development and then after that we'll uh we'll hear from you guys what you learned in your stations yeah I think thank you guys so uh we also have a couple of handouts so if you didn't get the physical copy you can just get in the QR and then they'll be able to get it the one that is continuing education we've been doing this is the last bit of it and it's basically talking about events because we're here at devcom and we're also learning something new and sharing together there so um it's quite interesting to actually consider like uh in which ways do you think that having people as part of the events is helpful to your organization and then it's also interesting to think like not only one-sided that they're representing your organization but also at the same time that you help them to learn and grow so um I have actually like three examples I would like to share with you uh that might inspire you but I would also like love to hear from you or maybe you can try to fill that uh empty box in the table yourself later on so it kind of can inspire you like how can you actually use events for continuing education to both enable your contributors but also like gain something as a secondary product of that as an organization so of course I have this marketing background so this is very close to me and the first thing I would like to share out of the three takeaways is that I have been uh hired to work for a distributed organization uh to to do community building for Europe and that's quite a large area too called cover I don't know where the noise comes from I think this one's better thank you so basically I was three months into my job and I went to my first in real life event I have barely met anyone from my team or I barely have been to like a real crypto Community event other than like what I knew in my area or something online so my first event was Eid Berlin and I remember that I was in 18 and I just remember I was like really unsure like am I doing the job well am I really building the community am I really connecting to people and by actually being like at the first hackathon I actually understand what does it mean to be part of ethereum community I also understood you know like all these practice rounds you need to to promote your project and like meet people who don't know about your project and you have to as we talked about like learning the basics teaching the basics to the people who never heard of your project that's like a quiet Challenge and it's like exercise you need to do over and over so after I came from East Berlin I felt like okay I have met the people I actually work with I understand the community better I met other people in the same situation and I have the contacts I actually need to actually make some events and initiatives happen and it's so much easier than trying to cold call or cold email someone because you met them at the party and you were sitting on a van together at one of the closing events or something so this is really good for roles that are outwards facing Community roles BD roles marketing roles anyone who really need to connect with the other people other projects in the communities it's really really important so make sure to include this as part of their onboarding or a personal growth professional growth because it really makes an impact after those after that event I felt like a lot of things have changed plus I had a lot of motivation and like the energy to keep going forward because like it really recharged me so I think this works for many people as well that's the first option second thing is I was also managing events and you know I really do not like if people go by title or cxo levels Etc and everyone wanted room to speak but I never wanted to do that I was always looking for what is the opportunity and who would be the best person who could be the most knowledgeable on this and you know not always we had people who joined Arc who are trained speakers but I always try to like combine the two and if they needed some support to be confident and comfortable on the stage I wanted to provide them with so it's a great way for people to like share their learning share their experiences like being with like-minded people and also like overcome this and through this process of starting at a small event coming to another one and another one they can actually become like thought leaders and many of the people as we call them maker Mafia have been starting on that little stage with their nervous City you know so just support people enable them to become speakers give them the courage give them the Press rehearsal help them with slides help them with some practicalities and show them grow on the stage it's really awesome and what was the third example sorry oh yeah um so you probably love to talk about crypto and blockchain so you imagine that many people are in this page then imagine they have like some super Niche area they're nerding in and they're working with where can they talk to like-minded people at the events that focus on that specific Topic at that specific level so if you enabled them to go to these events they're not only are gonna like build a good Network where they can spare with these people but they also get to bounce ideas and maybe get inspired to like come with the next best product so I give you like a three examples of how I think like events were really helpful personally for growth for different types of contributors and how you as a as a person in your Arc who cares about building the talent inside could get inspired um so hopefully this was helpful and it's very very good to consider events being a part of your budget or plan how you actually manage your team or how you grow your team of course there always has to be a good connection why are you sending this person and is this person going to appreciate and be happy for it but it's a really good thing to consider if you want to have a strong team that really enjoys the work that they're doing and is grateful to be in the arc that they are in so it was a quite a long example of why events are important but we're all here at Defcon we're learning together we're sharing together so I just thought to share this with you please don't be shy to ask your team lead or whoever it is whether you can go to the event represent the arc I think most of the time you meet with very positive response and you can always call back on lenka's examples right we have lots of examples of why this is important that's part of what we want to do in this Workshop is give you guys ways to argue for these elements ways to argue for professional development ways to argue for an event's budget ways to argue for time spent connecting um and educating right because sometimes it can be hard to prioritize that to budget in but there is absolutely a business case for it um and y'all whether you are org leaders being convinced yourselves or you have a leader you can go convince now you have some some tools and some some facts to to share there um and just so you know uh that like last prompt that Lenka responded to this is kind of a homework item that we left for you guys it's on the continuing education worksheet um and the prompts are like in what ways have you benefited from going to events and like what roles do you think benefit the most from that um so great Reflections to have especially continuing education folks love for you to reflect on that and any of you can scan the QR codes that we've provided it'll take you to the the notion site for the people Ops Guild and you can see all of the all of the worksheets that we have there um so with that I'd love to just hear from you guys like a little bit of what you learned um what were your takeaways uh from these workstations you were at and I can I can go around and pass Mike so which is the first workstation um we were the continuing education work stream and I guess one of the main takeaways um or one of the things that's going to stick with me is the idea of incorporating some sort of 80 20 rule into how we ask contributors to invest their time to allow them at least 20 percent of their time to go out and actually learn um and contribute to other orgs and bring and actually and bring that learning back also just for their personal growth and development anything else to add oh I I also just want to say continuing education station if any of you guys want to share what game you came up with you're welcome too uh I passed by a couple of stations but my first and main one was the recruitment one it was amazing thank you for that um so I learned how to like search for people with a spark of interest to like start the community from scratch because we can't do this alone we need to build Builders and we learned how to search for these people how to retain them how to keep them engaged and Inspire them to teach more people later which was which is like the seed that you plan to like grow everything after yeah that was amazing thank you well done Heather um thank you so much for the continuing education Workshop I was there to contribute but I think I actually gained so much that I was not expecting really I was just like oh just tune into this but I've been doing this for a couple of years mostly on my own um but I somehow have managed to gather contributors volunteers for now around me that are supporting me and I'm a bit emotional just thinking that I would have wished them to be here um with me at Defcon because they've done so much to support me and I just wish that I can get to that point where I would bring them on and I want to include events for them I'm already like thinking where they should all go and grow in their own respective areas of interest because apparently they like to be around me already without me paying them but I think just you know I'm thinking like bringing merch back for them and stickers just something like just little Snippets but next time I want them at Defcon um with me and the second thing is the social Gathering hour I think that's such a brilliant idea um I think I was doing it sort of in a very loose casual way but to actually make time spend an hour to just connect share books share the latest crypto news together and just have that moment and to make time for that is what I'm going to be implementing moving forward so thank you so much and I might hire you for the social Gathering just to to launch it and do games together well this is why we need to pay Educators like you Ray and we need to put education budgets into our team so that like your project and the contributors who volunteer for you can come to these places and keep doing more of what they're doing um and be funded to do that crypto Canal by the way oh yeah who is are you there you go so he came up with a fun game for uh engaging with people uh and that would be to have their co-workers describe them as a cryptocurrency might be a little shady but uh all in good fun we promise yeah just so thank you for the space thanks Peyton hi everyone I really want to say thank you to the peer review team it was a lot of interesting insights and a lot of interesting discussions the takeaway that I'm going away with is creating that safe space for people that people need to have a safe space just because we're in the web 3 world doesn't mean we're different and from IRL so creating that safe space that one-on-one conversation and building that human connection because that's what's most most fragile and yeah I thank you thank you in the peer review Workshop we introduced a few Frameworks for the participants to use while giving feedback that's one thing that's really difficult to do it's easy to give positive feedback it's definitely difficult to give corrective feedback so we you know provided some Frameworks for them to use and I think it seemed really helpful unfortunately not everybody's here from our Workshop still but um that's just a little bit about what we did there okay one more game that I wanted to suggest is only to have fun it's a usual game but uh in our space like what did you do at Defcon and people who play the game like raising their hands if if they did the same anduin who have less people who did the same that's a cool one thank you um which station did we not hear from or is there anyone else oh yeah Ben what do you hear me so I haven't sort of synthesized all of the answers um partly because um I know being in um my session that I had massive fomo that I wasn't in the other sessions um uh so actually on our board we've got um the websites for the people who presented um I thought they were all fantastic lots of uh lots of great insights there so um we just encourage you on the way out to maybe uh take a screenshot of um of those websites that are uh that are up on the board um they're doing really cool things and if you're looking to develop people or collaborate with uh experts in the space um yeah I think that's really great do we still have any of the Educators here okay yeah I know you guys finished shortly if there's not more takeaways I also have another question for you guys but I'm just gonna scan if anyone else wants to share another takeaway [Music] okay so I have a question for you guys um we would love to know uh for us as a guild what else would you guys want from the people operations Guild we've already put out some stuff on on uh on education and development here um and uh we've put out like a couple of resources online but we'd love to hear from y'all what's needed from a guild of you know decentralized HR Folk this will totally not come as a surprise that I I bring this up um in the sense that you're specializing in Louis and it hadn't hasn't really come up I think yet but um so we all work in remote organizations which um means that you cannot just go to up to like a person's desk for like two minutes and be like hey that thing in that meeting there was like this small disagreement or that misunderstanding I wanted to explain what that was so what happens is that tensions build up and so I think um having um all various forms of of um conflict resolution and Remediation in Dao's is massively important and I was wondering if you could speak a little bit to that so I definitely can I'm very passionate about decentralized conflict resolution um I would love to call out that there is a group dedicated to this gravity down they run a cohort of conflict resolution education called the graviton training I think there's been two or three so far to date um and it's a great like discussion group on on topics of conflict resolution but I also really recommend um just being aware of trained facilitators they exist in the space um I've collected a roster of like 10 of them that are ready to provide this service to various crypto orgs you can always reach out to me um to get in contact with those people um and in general it's worth it to provide some training on um you know reflective listening um and safe communication and conflict resolution to your teammates you know if you're going to have this time for team training or for connection hour you could consider um having a non-violent communication specialist come in you could consider watching some videos on restorative justice together or bringing in a practitioner to talk about this and guide people through some exercises because the whole point of conflict resolution in a decentralized sense is that it belongs to us it belongs to the people who are in Conflict it's not about some external judge or jury um it's about the people who are closest to an issue having the most agency and how to solve it and I know that that will stick well with your teams because most people who work in this space really value that um that self-agency and decentralization I think that's a great point to make um to bring in some type of external facilitation in our peer review Workshop you know we introduce these Frameworks of how to give feedback and but some people are asking what about if the person isn't receptive what if I'm talking to my founder and you know I'm nervous and I don't know how I can give him this feedback but he really needs to know um and that's what we suggested bringing in some type of facilitation some type of mediation to help support you through those difficult conversations because like I said giving any type of corrective feedback is not easy you may also not be fully equipped or have the skill set to do that so leaning on someone else I think is also really really helpful thank you um so we have people all across Europe at the moment um and I would say in terms of diversity we're doing okay there's still some more work to do I don't feel like it's a focus in my organization at the moment um and I don't really know how to bring it up in terms of like Intercultural communication to have it like in a sensitive manner but also just like providing a place to work from people from all types of background um so I'm wondering like do you have any like type of information about that topic we have people Among Us in the guild who work in Dei diversity equity and inclusion and I would definitely defer to them um as far as providing resources on that um I think that you know a lot of times it's about like just advocating to the decision makers that this is important and worthwhile and if you can at least get them to say yes to a consultant then those Consultants are the are the best folks to put it in the right lingo you know they can they can speak to your um to your Founders on like the real business cases of having an inclusive environment they also can speak really sensitively to people that are just experiencing a hard time in the work environment um so like I'm not a specialist in that myself but uh one of our Guild members Sandy has a background in Dei also a personal friend and colleague from git coin Gloria kimbwala um has done a lot of Dei work so I certainly would just like recommend those people and if you want to get in touch feel free to go through me if you need to thank you you okay that's that [Applause] feel free to check out our notion page if you guys want any more info hey okay thank you hello everybody uh thanks for coming to the workshop on hunting and monitoring for on-chain attacks I'm a Christian Seifert I'm a researcher in Residence at the Florida Foundation I primarily work with the Florida Community to analyze attacks um as well as develop strategies to strengthen the detection and protection value of the Florida Network prior to coming to uh the Florida Foundation I worked for many years in the web 2 security space on anti-malware anti-fission and intrusion detection systems both on the breach and the post breach side hey hey and I'm Dimitri I'm from lidar and I'm the leader of the automation team and this weird name is hiding a lot of things we are working on security on monitoring on protection on code analysis that's how what we are doing in Lida and prior to lighter I've been working as the quality automation engineer for a lot of years and got a lot of experience in both security and quality and I will join this Workshop after the part of the Christian so yeah so the the way the workshop is structured there's there's two parts so the first part is really around a more kind of security research focused um on how you can use monitoring to identify attacks on chain and so we'll dive into some attacks and then the second part Dimitri will uh more work look at kind of how protocols can use monitoring to secure that protocol um the Wi-Fi guards were not with us so there's not going to be any kind of like online exercises uh during the workshop but we've set up a GitHub repo with some exercises and what we'll do here is uh kind of work through uh an example that hopefully gives you an idea on how you can put uh monitoring in place so we all know that web free is is getting hacked uh chain analysis last year estimated that it was uh two billion dollars uh this year we already far exceeded that that number now that does not mean that all hope is lost now one thing um that is maybe a little bit of a misconception is that uh on-chain attacks are Atomic and that once the transaction is mined there is nothing you can do about it but that is really not the case with the majority of the attacks that we observed um really what happens is an attacker goes to uh these four attack stages so the first stage um they need to have some funding in order to um you know pay for gas and execute the attack uh then they um often prepare the attack that could include like deployment of a smart contract then they exploit the protocols steal the funds and then once they have the funds they really proceed to money laundering and even in the money laundering stage um as we've seen last week with the binance hack there's still some actions that can be performed in binance usct uh blacklisted the the attacker essentially freezing the funds um so let's look at one particular example of an attack on kind of how these uh stages manifest themselves on change on chain uh so we'll look at the inverse Finance attack that was an attack a little earlier this year uh 1.2 million dollars were lost uh inverts Finance is a a lending protocol a collateralized lending protocol uh and so the attack was essentially a price manipulation attack that allowed the attacker uh to um uh lend uh or a bar essentially in an uncollateralized fashion so let's look at each of the stages so first of all uh tornado cash funding um so what we see here is essentially the first transaction to that the attacker account um so we're looking at ether scan here uh one thing to keep in mind is that tornado cash funding is an internal transaction so you don't see it on the main uh transaction tab so that's kind of the first um First Signal now obviously tornado cash is utilized um you know for privacy reasons um so that in itself is probably not sufficient evidence for an attack but it is a signal so next um a few blocks later uh well actually let me see here time stamps yeah if you a few blocks later um sorry a few blocks later um uh the attacker uh deployed a contract uh that then was utilized to execute uh the attack um of course the contract on etherscan was not verified and so that is again another uh suspicious signal here so this is uh this is essentially the action that they took in the preparation stage again it's it's it's um several blocks before actual funds are getting exploited uh then here what you see is the um the transaction where the uh tokens are actually stolen um and if you look uh in the top left here uh what the attacker uses is flashbots so the transaction was not um in the mempool uh so it was it was directly uh picked up from from the flashbot network by the miners um so it was essentially a private transaction until it was mined and then you also see that flash loan was used uh in in the transaction uh to essentially obtain a large amount of wrapped uh Bitcoin in order to then manipulate the price um that the inverse Finance protocol relied on uh then here you see uh this is the block SEC the new block SEC Explorer I like this very much uh because they really uh nicely visualize the balance changes that are happening with a particular transaction whereas you know on ether scan you kind of have to understand uh the storage slots in order to understand how much is moved where but essentially what you're seeing here is uh um the receiver that the address on the top that's essentially the uh account of the inverse Finance exploiter they're receiving a lot of rap Bitcoin and usdd and additional tokens and then further down you see kind of where those funds are coming from the large large amounts of a token removal uh uh movement as as a result of this particular transaction um and then um lastly in the money laundering stage um what the uh attacker did here again several blocks after the exploitation is to convert essentially all the ERC 20 tokens that they have into native tokens and that is probably a step that is being taken uh because erc20 depending on the implementation can be blocked I've mentioned usdt as an example they have a a block list mechanism uh in in the contract whereas if you have native tokens ether that possibility does not exist and then once uh they have essentially native tokens then they use uh in this particular example tornado cache uh to launder the funds and at that point in time the attack is over um and as I mentioned there's these four stages funding preparation exploitation and money laundering for this particular attack it took about eight minutes end to end now that is very quick so a manual incident response is probably not sufficient but if you think about automated incident response now it comes into um the realm of possibility to mitigate this particular attack yes please they could certainly do that but they often don't now I suppose there's certain certain attacks there may be some gas limitations that they run into and let's please make this interactive so there's there's additional questions please please just shut up yes sir yes so the the smart contract the attacker smart contract was just deployed using you know regular mempool um and then the the exploit transaction where the smart contract was invoked uh was submitted through the flashbot network I think I A lot of times we'll try so a lot of times with the the like exploit transaction itself it opens up like Arbitrage so the um the Mev Bots like pick it up and then back run it as part of a bundle like how is there a way to tell if it's being submitted itself via flashbots I.E like not showing up in the mempool at all or if it's being in the mempool and then a bot picks it up and puts it out I see what you're saying uh well you can you can basically look at the you know the flashbot has kind of like a um a UI that allows you to identify the bundles that are being submitted uh so you're able to monitor it that way yes sir hey um has the tornado caches um gotten so good that attackers are not really using peel chains as much as they used to to launder the funds are they it seems like they're doing it kind of just in one one big go here most of the attacks that I have analyzed it's it's tornado cash Usage Now given that now tornado caches and on the offax sanctioned that sanctions list I don't know whether that's going to change anything it certainly will reduce overall liquidity in in the tornado cash protocol which may make tracing uh a little bit easier so we'll have to see what happens over the next few months thanks thanks so much is it more common patterns Than People deploy these smart contracts and do they use address obsfocating because if we can monitor that someone deploys this contract and this contract was funded from tornado cash and it has our addresses it's a red flag and we should at least be warning about or there are some tactics when they use some application I have not seen obfuscation so they get funded by tornado cash and then they just deploy the contract and and kind of this detection logic that you're just talking about where you're saying oh did the tornado cash funded account deploy a smart contract that is actually uh something that we monitor for but now I seen like for instance uh Ronan attacker um what they did in the in the money laundering stage uh they had you know the exploit account that again was put on the sanctions list so they couldn't go through tornado cash because that honors it they just transferred it to a different account and then laundered the money to tornado cash so there's a little bit of kind of like hopping across accounts that happens at times to kind of break the link yeah but majority use Smart contracts not just direct intervention for eui address say that again so the major cases when people at first deploy a smart contract and then interacts through smart contracts and it's direct interaction with your smart contracts it's a question I have seen that the attackers deploy the smart contract and then directly invoke the smart content okay yeah related questions do uh active actively continuously monitor like for such cases like when uh like new account is just funded to return education deploys deploys uh smart contract right away uh and yeah and again and do you somehow like make it public or like great question I'll talk about that in the next week okay then uh so this might be covering your next two slides on the same realm what is the how much time is passing between this right between the preparation execution then finally laundering is this all done in a couple of hours is this week's what are we looking at period was eight minutes okay in this particular case but you know you you see see a broad range now in yeah so just a second one last question what percent of of solved and solvable because you know it's blockchains can be the worst place to do anything criminal if we're thinking about uh defy protocol attacks about over half are not atomic uh whereas you know about 45 are Atomic I think in the 45 case at this point in time that would be very difficult to solve in terms of being having some time to respond to it but I think there are some things that Protocols are able to do such that the attacker is no longer able to execute an atomic transaction so think of the binance uh hack last week so basically there the attacker was able to Mint uh one one billion tokens or one million tokens right should you be able to Mint 1 million tokens in in one transaction could there be a time lock that kind of delays it where maybe hey you meant 10 000 that goes instantaneous whereas if it's a large amount you time lock it so you're kind of forcing the attacker to span their attack over multiple transactions and then that potentially brings those attacks into scope for mitigation sure sorry no I love the questions that's great um have you seen like an increase in attacks that end up uh in a different type of money laundering schemes like I've seen stuff like since uh what happened with uh tornado cash I've seen some some of the hacks end up in deposit into curve pools and stuff like that yes yes we certainly have observed that there's still some centralized exchanges that are being utilized as well um but tornado cash is still heavily used but again that that's something that we have to kind of see how that develops as kind of liquidity potentially goes down in that protocol all right well let me let me talk a little bit about then uh how we monitor for for these attacks now monitoring we feel like is part of a comprehensive security strategy for protocols um so if you're thinking about a protocol um protocol security strategy there's uh activity that that needs to happen in the pre-deployment stage that many of you uh probably are familiar with like utilizing template contracts like the open settling Library uh conducting smart contract audits but but that is not not enough you also need to think about what happens after you deploy your protocol um and as it attracts more tvl and becomes more attractive for uh attackers to attack uh so in the post-deployment stage uh think about bug bounties uh fortnite network is is uh has their Buck bounty on immunify very effective program um real-time monitoring and alerting and that's really where uh the Ford network uh comes in and then kind of relate it to monitoring of course you also have to think about incident response and Dimitri will will talk about incident response um on the Lido protocol and how they uh managing that because if you are getting alerted uh about an attack and don't take any action well the attack will just proceed so forta is is a decentralized think of it as a security and alarm system for web free so it's a decentralized network um that allows you to monitor on-chain activity in a decentralized way and it consists of of Florida scan nodes and these scan nodes run Community developed detection Bots um and I'll talk about detection Bots here in a second and the scan nodes they are hooked up to a a chain either through a node or infrastructure provider and they forward uh transactions and blocks to these detection Bots these detection Bots Implement um rules heuristics machine learning models where they are analyzing a transaction um and if they identify something suspicious they raise an alert um the nice thing about this this decentralized architecture is that you get a lot of redundancy right like as as I develop a detection bot and deploy that onto the Florida Network it gets automatically deployed on multiple scan nodes at the same time such that if one scan node goes down you still have plenty of coverage and so it creates some redundancy and reliability um so the fortnite network um your anybody can develop a detection bot and we'll go through an example on how that looks like uh we'll also go through some some existing bot examples so you get an idea of kind of the capabilities that you have as a bot developer and as these Bots uh raise uh alerts they can be viewed through the photo Explorer so think of the photo Explorer as a you know block block Explorer for the 4D Network so you're able to explore all the various alerts that are being raised you're able to examine the network um you're able to search for Bots that are already deployed on the network and let me see whether this this works and I can show you some examples foreign so this is the the four let me sit down uh this is the Florida app um app.forter.network and up here you have the link that takes you to the fortnite Explorer uh and this is how the fortnite Explorer looks like so you're basically able to see all the alerts that were raised uh you know in the last hour or so um for that support support um seven evm compatible chains now see my network is not not good um I'm sorry separate Network for oh seven seven Wi-Fi yeah it's okay I have some uh screenshots so I I can show you but thanks for for the tip um so so as you click on an alert you get uh alert details so here we have uh tornado cash withdrawal alert um you're able to um see information like the transaction that is associated with this alert uh the bot that is associated with the alert and then a whole bunch of metadata uh which essentially contains all the addresses that were touched uh in the transaction uh and then down here uh you see all the nodes uh that um run this spot at this time and so as you see here there's currently six scare notes that have that particular bot deployed um on the bot search page you're able to kind of search for the the Bots that are deployed so let's assume you want to create a bot um that monitors a flatbot attacks um well before you dive into the developing a bot take a look at what's already deployed on the network um there's there's hundreds of bots deployed on the network today um then from there you're able to jump into the uh bot stats page again that gives you information around how many nodes is it's deployed um historical information about how many transactions has it processed you see the link to the source code the documentation and then if the the bot generates some log data that's also available on this page and let me see here so here we have another alert flashbot transactions you can then jump directly into etherscan to examine the transaction so here you see that it's a private transactions with flashbots um here's the network activity page so this gives you uh essentially information about all the networks that we the 4D Network supports as well as how many node operators um are tied to that particular chain all right let me jump back any questions do you have any statistics of how many real attacks you you know really captured well um that depends a little bit so so there is there's a concept of precision and recall uh with with Bots right um Precision is essentially of all the alerts that are being raised what is the percentage of of two positives like hey it's identified an attack um and then no that's that's recall sorry and then uh a position is how many of those are are false positives right and so you could have a bot that is extremely noisy but has high recall right and so you could say hey it identify that particular attack but that bot is not really useful because it contains so much noise that um it's very difficult to consume um and so I'll talk a little bit about um a layered approach to a monitoring that builds on top of noisy Bots and then combines the alerts into highly precise alerts uh in terms of statistics I want to say that um that that kind of combiner Bot that I'm mentioning I think it had a Precision of 80 some percent and a recall of maybe 50 but don't quote me on that that's great can I ask one more so are the node operators trusted or just so anybody can can run a node now however the the photo network is secured by the fourth token so as you are um if you want to set up a scan node you have to stake for token and if you misbehave uh then your your fort gets slashed but also keep in mind that there's some redundancy in the network and so you could have let's say six nodes that run your your Bot one behaves maliciously and just outputs garbage you still have kind of five that you're then able to utilize to kind of build consensus in a way yeah and one more question suppose I developed a batch that I really you know put some certain blood into and I don't want to publish it publicly but I want to contribute could either somehow run it here or not so there's a variety of options that you have you can either obfuscate your code and encrypt your alert and deploy it on the for that Network now obfuscation is you know security by obfuscation is is probably not not the best approach um you can also run a private scan node and deploy your Bot just on that note but but then you kind of trading off the redundancy that the network provides uh couples can you hear me through here yes a couple slides back there there was a part of the website that said um something about pausing when an attack is detected and pausing on chain so two related questions um how many roughly people protocols do you have doing that and then also how kind of open to that sort of automated third-party pausing our protocols I don't know of any protocol that uh hooks up to an alerting system and automatically pauses their entire protocol I think there is we need to continue to work on the Precision of the underlying alerts because if if there's a false positive essentially your protocol is is halted and that's not good either um now pausing also I look at pausing as a big hammer are there more nuanced mitigation techniques that you can Implement that again kind of slow down the attacker or mitigates the attack while at the same time leaving your users still being faced with a usable protocol and like time locks could be an Avenue there but I think that is something that that still needs to be better defined and so you know we have a large audience here if you have ideas we'd love to hear hi you have a question is it possible to monitor um governance attacks and like you know voting power that changes uh other Bots for that yes we have we have um on the photo Network there is this concept of threat detection kits which are a combination of bots that detect generic attacks for um a particular protocol type so there's a threat detection kit for D5 for nft for bridges for stablecoin and for governance thanks dimitriat but can you tell me more about timing for example you detect some malicious activity basically we have some developed system monitoring system but we definitely consider that if you find something you should action maybe next block so you should be pretty fast in terms you have a decentralized network it means that you need some consensus between notes and so on so what's your common scenarios of using forta should we manually check what's going on so hire some guys like it exists of monitoring hard technical system like nuclear power stations or a sample check all day is a monitor or we can write Bots but in terms of bots how much blocks it takes to be executed before you found something to really make an action so it takes about 40 seconds from mind block or mind transaction to alert being um consumed uh essentially um so there is some some delay uh in terms of your other part of your question should there be a person that monitors I I believe no uh but because just because the attacks are too fast you need to have some automated uh incident response now does that um make your incident response seem obsolete absolutely not right like even if there is an automated incident response you still need to have a team that then kind of analyzes that and basically it says is was that the appropriate action should we do something else um a counter was another example that I have the Ronin Bridge uh the hack that happened earlier this year that took a week to discover yeah so let me add something on this side uh so first of all uh yeah so speaking about detecting something and reacting on the next block is usually not the case the case is detecting something not in a week like Christian said and the second thing is that we will talk about the how to react on alerts what to do and how to make it really fast and yes you need people here for sure and the details about it will be at the second part of the workshop perfect let um I I plan to Monitor and uh and run photo on mempool level where where are you I'm here us sorry um uh mempo uh currently not however is the bot um um framework that bot development framework is very powerful it's essentially think of it as you know a Docker container that either runs uh a JavaScript typescript or python so there's a lot of things that you are able to do so your Bot is certainly able to inspect the mempool and generate alerts based on the mempool but it is not a native interface um two Bots I have a question about uh configurability uh the Bots are deployed by the bot Builders are there parameters can they accept parameters from the consumer excellent question so some some Bots um yes are are developed by um uh Builders and then deployed on the on the network but you can also create templates that provide uh you know parameters that you can configure and on the Ford app there is a bot wizard that allows you then to essentially instantiate and deploy about with your specific parameters is there a way to specify the bot um so that you don't have to redeploy so say you want to have a signal at 80 threat versus sixty percent absolutely I like you can you can within the bot have different thresholds and emit different types of alerts it's not a one-to-one mapping where one bot is only able to emit one type of alert able it is or after deployment well after deployment no then you kind of have one snapshot of the bot so you would have to you can upgrade your Bot um or deploy a second instance with other parameters yeah so really it's that's not a big deal we've been doing it for a while in Lido so yeah that if you want to update the values the constants you need to do a redeploy but it is done in such a simple way so you don't need to worry about it on one hand and on the other hand you are 100 sure that the bot is running on the actual values and there can be no changes made by either the photo Network or the malicious software or something like that yeah sure uh very fast one maybe and maybe I'm running ahead but do you have uh any examples when when this kind of analysis helped prevent or at least minimize damage um it requires that the the protocol teams consume Zoom the alerts now um and and then kind of take actions uh quick enough and I think that is still still a problem but we certainly have many examples where an attack occurred and the fortnite network emitted a highly confident alert and so I I would uh reference kind of our blog or or uh Twitter handle uh not perfect no okay not yet but hopefully I come back next year and I can talk about some prevention stories okay good thank you yes sir um how is Ford decentralized how do you manage to to have a decentralized because it says there that synchronized but to detect uh attacks the first second is that why is important to take an attack after it happens if it already happened and in blockchain you have a way to revert anything so so first of all it's decentralized because because there's thousands of scale nodes that that run these detection Bots right does that answer your question no um well you you have independent uh node operators right that that set up a scan node right so so some of the security Auditors some of the infrastructure providers are running scan notes and so then your Bot is essentially deployed on multiple scale nodes at the same time so it's decentralized that way who's running those notes well as I said like smart contract Auditors infrastructure providers you can run a scale node if you want to uh and then your second question is like why would you want to monitor uh if you can't prevent the the case that I'm making is that uh attacks are not Atomic and we are able to detect attacks before exploitation occurs and so there is a short time window that allows you to take mitigative action now has that happened yet no I think we we still need to to work on that in terms of identifying what are good mitigative actions and then so that's one part and then the second part is to create alerts that are highly precise so that the number of false positives are low in order to increase the confidence of protocols to then essentially hook up automated actions all right um so I talked about the attack stages and what you see on this slide is essentially a set of generic Bots that are deployed uh to identify activity for each of these stages um so you know tornado cash funding uh Bridge funding um sleep minting attack contract creation um uh also looking at whether the eoa that created the contract was funded by tornado cash uh the fortnite network is not only uh looking at protocol attacks but also looking at end user attacks so there's uh a few Bots that are deployed that identify activity like ice fishing or somebody um deploying a token impersonation contracts then a whole slew of of bots around exploitation uh and then money laundering but as I mentioned earlier if let's say the tornado cash funding bot emits an alert that is not sufficient evidence to call this an attack right and many of the the individual Bots that um I have listed here have the same problem by themselves they nearly give you a signal but it is not sufficient um to then raise essentially saying that that this is an attack and so as I mentioned uh earlier what we do we have kind of like a hierarchical system so think of all these Bots here are kind of Base Bots that uh generate signal that say Hey something suspicious is going on but then what we essentially uh do is we combine the alerts from these base Bots such that they are consistent with attacker Behavior and so essentially uh we will raise there's a bot deploy that will raise a high confidence alert if it sees a baseball uh firing in the funding stage in the preparation stage in the exploitation stage in the money laundering stage so that is one flow and and basically it combines them based on a common eoa or a common eoa cluster so if if the attacker um you know executes an attack from multiple accounts um and we cluster those accounts together then we're still able to to generate that that chain um now obviously if we combine alerts all the way across the chain then it's kind of too late right like then the funds are already laundered and so what we're really uh trying to do is push more and more alerting into the earlier stages of the attack chain and so the community is heavily investing in detection bots in the preparation stage and I'll go through some examples of of those Bots that in combination with funding uh generate essentially a high confidence alert and and in the inverse uh Finance attack that that happened there were essentially two alerts fired uh one after the preparation stage and one after the money laundering stage they were both uh highly confident and so inverse could have if they would have hooked up uh to the Florida system could have taken some mitigative action um so this is kind of encoded in a bot now for security researchers that want to hunt for attacks um there is actually a um discover new attack Explorer um that a Community member has uh created um that is deployed on on this link right here uh that basically allows you to explore um attacks that are happening on chain that may not have resulted in an alert and let me see oh dang it I don't have it oh there it is um so this is how that looks like so basically it says hey give me all the alerts over the last couple of weeks and then it essentially ranks it based on the confidence that we have on on some heuristic or some some anomaly model um that then allows you to explore those so this uh for instance um four stages fired so this was the the winter mute attack and an alert was emitted but as you kind of scroll to the right here then you basically see um attacks where maybe that threshold wasn't met of of four stages being triggered but maybe only three so that bot did not raise an alert but now you have essentially security researchers that are able to analyze that group of alerts and manually determine whether an attack has occurred so that that is available on on that URL and I think it's it's very neat okay it will take some time just leave it as is any questions yeah um it's on the slide uh hi uh is there any metrics for the performance of the scanning node because uh if we're talking about the real times monitoring and we may have a very complicated rules to scan also uh you should email reference the historical data as well so how do we know whether a node is the hardware is compatible for such a complicated task well there's um there's certain so the the scanners they have certain capabilities right and your Bot May kind of have requirements that exceed those capabilities right um and so then as a bot developer you you need to kind of incorporate logging that allows you to identify whether um whether the scandals have issues processing what what you're trying to do so is there any uh Matrix that can be Quantified so there's metrics on the bot uh stats page in terms of kind of transactions that are processed or whether you're falling behind in errors uh that would help you to identify issues like that thanks to betrayed it's going to be questioned there and question there yeah yeah no problem is there a some way uh to acknowledge make a in case bot fires so it will make also transaction and update some smart contract that it fired so I wouldn't so I can create my smart contract which will depend on this on this happening so the photo network does not natively provide that um but as you subscribe to a bot there is a variety of mechanisms that you you can kind of hook up webhook is is one of it uh the open Zeppelin Defender product integrates with photo so kind of the logic that you're describing alert was raised take some action on chain uh it's supported by open Zeppelin's Defender um I was just curious if you're aware of any uh contract reputation systems because we talk about like there's the attack of what's actually happening but also if something's suspicious we've talked about if it's funded by tornado is there anything out there that's actually tracking that that you know of no I mean that block Explorer has some tagging and source code uh verification that's kind of the only mechanism that that I know about now the Florida Community is working on machine learning models to essentially predict whether a contract is malicious or not um so that would be kind of a way of reputation system for contracts but there's probably more you can do if you think about kind of the deployer who was the deployer right you could assign reputation to that and kind of propagate that to the contract yeah so are there any network economics at play here I mean the node operators and bar providers are they paid who pays them how Andy you want to take that question so as as Christian mentioned um to secure the network we have node operators are required to stake do you have to stake uh 2500 for minimum and if you do something bad at the node level you can get slashed um the Florida Foundation is subsidizing node Runner rewards so if you need a certain SOA every week at this point um across the seven networks that we monitor there's different sort of reward allocations for each uh each of the seven networks but if you hit a certain SLA so let's say like you're 95 uptime you're going to earn the maximum rewards that week so those are coming from the Florida Foundation right now um it is free to publish a bot it is free to subscribe to that bot right now as well um we are introducing bot staking as well as a lever to reduce spam um we don't have two we haven't experienced too much spam on the network but it is a it's a risk um so that that will that will happen soon um in terms of paying to actually get the alerts it is something we will Implement uh it'll likely be some sort of subscription model so if you wanna so for example like the the attack detector feed that Christian was talking about right that Aggregates a bunch of these other alerts there's a lot of effort that a lot of people put into that so that one would probably be more expensive to subscribe to than like if you were just monitoring for like high gas transactions right that bot maybe took 30 minutes to build right so uh eventually yes um and uh right now the Florida Foundation is uh sort of coordinating a lot of this what I'll call like more advanced spot development that uses data science and machine learning but there are other like there are other audit teams that have approached us and want to put really valuable IP on the network but they need to be incentivized to do that right um so yes so we need to we need to enable that and we will it's probably more of a q1 2023 thing yep okay let me let me uh talk a little bit about the capabilities that Bots have and then walk you through a bot development real quick um so as I said Bots are essentially he's a typescript JavaScript the python code that runs within a Docker container so they're extremely powerful uh you are able to maintain State you're able to reach out to external uh apis um and so let me let me walk through a few examples so this is The Flash loan uh bot so uh flash loan right you can kind of temporarily get some tokens as long as you pay them back in the same transaction primarily used for Arbitrage but also used for Price manipulation attacks so there is a attack a bot right now that is deployed on the network that monitors for Flash loans but then has some additional heuristics that basically say well how much is the profit of uh of that particular transaction in order to differentiate Arbitrage from from potential attacks so it's a simple heuristic um this one is is a rug pull um a bot that basically monitors uh token prices over time uh and this is actually about that um utilizes uh time series analysis um using uh metas uh profit Library uh where it essentially learns uh based on historical price information to alert on deviations from normal behavior uh the time series essentially is able to take into account volatility as well as seasonality um of um any sort of Time series data so this is an example where you do maintain State and build a model you update the model uh in memory and then able to to alert when when deviations occur uh this one is the exploit simulation and I think this is a really super cool bot uh basically what happens is when a smart contract gets deployed the Bob monitors for that action and then essentially locally at that point in time Forks the chain locally using ganache and then it invokes all the functions that are exposed by that potential attacker smart contract and monitors whether there is large token movements into either the contract or the deployer's wallet and so that essentially allows you at the preparation stage to generate a high confidence alert that an attack is about to occur before even before the attacker uh submits the transaction on chain um now it is utilizing very simple fuzzing it's basically just looking at you know the functions that are exposed and kind of guesses parameters if any of you work on a fast Black Box fuzzer I would love to talk to you after uh this this presentation uh because I think that would be extremely valuable because then you're able to um you know exhibit um the attack behavior um probably with higher recall all right so uh custom bot development so uh down here is essentially the quick start um um URL anybody can develop a bot it is uh extremely easy and I will walk through um using some screenshots to kind of show you uh how that looks like as I said Bots can develop in Python JavaScript and typescript my background is data science so I'm partial to python so all the examples that you see here are python um so you need to set up your Dev environment so obviously not something that we're able to do here right now but if you go to the quick start page uh it gives you instructions on what you need uh so you need node.js uh if you use Python conda and and Python and then docker um once you have uh set up your Dev environment um then you're able to initialize a bot using the the CLI uh the the Ford CLI and basically what that will do is we'll it will generate a stub of a functioning path that at that point in time you could theoretically deploy uh to the fortnite network um and let me kind of outline important files that are being dropped uh into your environment uh when you initialize the bot so there is Agent um dot Pi for python don't get confused by the term agent we used to call Bots agents and so you see the term uh interchangeably so agent uh Pi contains the main bot logic and we'll go into that uh in more detail uh agent test contains the unit tests um Docker file contains the docker build file so when you deploy a bot basically what happens is the bot gets packaged into a Docker container it gets uploaded to ipfs and then it gets registered within 4. Network and then the scan note basically monitor these registration events and then pick up the Bots from ipfest deploy them and environment and so the docker file contains essentially um the build instruction for for your image and so if you need anything in your Bot that is not covered by the Python language you can customize uh the the docker file to pull that into uh bot into your Bot and then that obviously is available um readme contains the documentation this is essentially the documentation that is exposed on the bot stats page um I personally when I develop a bot I start with a documentation um because it creates a lot of clarity for me in terms of what what do I need to do in in the bot code uh what chains are supported uh what sort of alerts am I planning to admit under what condition so I start with the documentation also at the bottom here you see test data what is really neat about the the development framework uh um the SDK is that you're always able to back test your Bot so you may have encountered an attack let's say you know that the binance attack last week you identify a technique that's not covered by a bot you develop the bot and then you can basically just back test and make sure hey it actually detects that particular attack which is super powerful um in the agent uh uh code there is the main function which is essentially the handle transaction function that passes in the transaction event and that is well essentially the transaction object all the the usual properties of a transaction are contained in that object and your job as a bot developer is to essentially analyze the transaction event and then emit a list of findings AKA alerts so basically this function gets invoked and you return a list of alerts based on your logic so the the logic that I quickly walk through is a bot that basically alerts on large ustd usdt transfer events um and this is essentially the the stuff that gets created so in the bot you basically have handled transactions and then you admit an alert so here's the alert it's basically a findings append uh creating a findings object with information about the alert like the name description severity type and any metadata that you want to provide in this case the to and from now of course that does not um have the logic yet so let me go through the logic um so as you um as the handle transaction um function gets invoked uh first what you want to do is filter for events that are of interest to you and so here in this particular example we are interested in the ustt transfer events so you're able to essentially Implement a filter that basically says only uh you know kind of parse the transaction event and only kind of um give me a list of transaction events where kind of your filter logic matches um and so that's kind of the the loop down here that basically then can be assured that you're dealing with ustt transfer events from that event you're able to extract information to from and value you normalize that value and then you essentially um just have a conditional based on on your logic hey if it's over ten thousand dollars now I want to emit another so super simple but I know I've been speeding up a little bit I want to make sure that we're not running out of time for the second part um and then you append the finding now when you develop a bot there is a variety of ways you can test it unit test I love unit tests back tests I love back tests and then live tests you should do just because there's a lot of you know crazy transactions on chain and you want to make sure that your Bot doesn't error out um so best to do a live test locally and then you you deploy um and deploy a deployment of the bot is permissionless so you basically just run in npm run publish um you need to have somatic because basically what you're doing is you're signing a transaction that registers the bot um on the Ford F smart contracts essentially that then the scale notes Monitor and pick up on um it takes a minute or two it basically builds the docker container uploads it to ipfs signs the transaction to register your Bot um and then a minute later then the scale notes that are running on the Florida Network pick up that bot and start sending transactions to it and then within five minutes you see um essentially a new bot on the bot stats page and you see it starting processing transactions you see it uh generating alerts and then at that point in time you can start subscribing uh to your Bot and there's a variety of mechanisms telegram email slack and Discord and webhook um that then get invoked whenever you bought raises in alert and that's how that that looks like um as I said for this Workshop we're not we don't have exercises that we do live here but we have set up a few exercises on on this GitHub right here um that get you familiar with the general bot development um uh process and so one is is kind of similar large USD C transfers uh the other is detecting load balances uh and the last one is is more security focused around flashlight flash loan resulting in losses of the urine die vault uh and then lastly what I want to call out we currently are running a contest uh bot development contest we've been running over the last you know a year and a half um these are contests that we uh put out for the community uh you can develop a bot and uh earn up to uh 3 000 uh US Dollars and this particular bot um is asking to develop logic to identify the attacked protocol let me give you some context here um often the the Bots basically just say hey this transaction is an attack but it does not necessarily give you context around which protocol was attacked it contains all the addresses but it would be nice if it could say hey inverse Finance was attacked and so this particular bot contest is all about uh analyzing the transaction in more detail so we're able to identify what protocol uh specifically got attacked yeah thank you Christian uh folks just let me leave all the questions to the end we will have enough time and we will answer them all so just to make sure that the core features that we want to describe here will be covered so first of all haven't the part that Christian just talked about was really excited are you excited so like you can create a detection bot a decentralized detection bot with a really limited skills in coding and that's great and that's really cool and that's what I like about the Florida and that's what we like in lighter about the Ford and the Christian tell us a lot about generic attacks detection so like with the all the steps this attack oh yeah yeah I guess there you go oh everything was such so fragile so yeah the Christian told us about the generic attacks about steps of the generic attack about the early stages of detection and it is really cool that everything that is developed in forta is available on public so having this bots on Fort each one of you can subscribe select addresses of your protocol and give get the alerts about like some kind of this attacks related to your protocol and that's really cool but what about the protocol alerts so what I mean speaking the protocol alerts let's do a quick comparison so the generic alerting will allow you to detect any attack that will somehow fit into your Bots logic while the protocol alerting wouldn't allow you to do that but it will allow several other features and we'll discuss it next is the confidence of your prodigal security so like let's say you have a number of generic Bots that are precisely tailored for well-known attacks are you sure that your protocol is secured so like let's imagine we have tons of histories about attacks and if we cover them all with the Bots are we sure that our protocol is safe no not at all uh why because new attack can appear and it can be some modifications inside the attack so that we are not 100 secure and actually we cannot be 100 confident about the security but we can increase this level and we can increase this with the protocol Bots and why we will discuss it just a bit later but since the protocol Bots will be tailored around our protocol it will watch over the everything happening with our protocol okay let's move on so what is the main vectors of the attacks that can be detected by the by the generic Bots the generic Bots detect attacks they are tailored to detect while the protocol Bots are not detecting attacks itself they are detecting some strange changes or some critical events inside your protocol so you might not know about the this Vector of attack but you will definitely know that something is going wrong with your protocol and you can react and that's cool about the protocol bus and the last thing is setup so again what is cool about the generic box is that you basically do not need to write them if you are satisfied with the Bots exists that already exist on the for the network while with the protocol Bots unfortunately you should do it by yourself but it's it's very very interesting and you will definitely do it after the workshop I 100 sure so uh we have generic Bots we have product robots do we need to choose between them no we don't we need them all because in combination protocol bars and generic Bots will increase our level of confidence so let's discuss the typical protocol alerts and we will start with the things not related to our Tech to any attacks directly we will start with really boring operational stuff but which is also very useful for us so first of all is the repetitive events what repetitive events do we have in protocols like in light or protocol we have Oracle reports we have rewards distributions we have funds deposits from the let's say the lidar contract to the is 2.0 deposit contract we have Dow votings and some others can you spot some examples from your Protocols of the repetitive events of things that are frequently happening any okay okay checking prices from the oracle okay cool anything else sorry almost is it so it is a now when I speak about uh here about the repetitive events I speak about the things that should definitely happen let's say once a day or once a week okay let's skip this things here so what do we want to know about these repetitive events is it is that if we know that they should happen we should monitor that they are happening and if they are not happening it means that there are some problems or maybe even an attack so we can watch over the Oracle reports and so on and so forth but the one thing that we can do on top of just watching over the events and alerting you oh no there's no Oracle report here that's the problem we can also make a predictions on if there will be a problems with the let's say Oracle reports so we can watch over the Quorum of the oracles and identify which one of the participants are really sloppy and miss the participation or mis participate we can do the same things with the other webs so with the operational stuff we are watching over the repetitive events and trying to predict issues with them but that's not about the attacks yes and our Workshop is about attacks so let's start speaking about the security and from the security point of view uh the first thing that we definitely should watch over is the protocol invariance we will talk about uh executive invariance in details a bit later but what I want to say right now is that there are there can be like multiple invariants in protocol that should be always met and if they are not met it means that something goes wrong and it can indicate that there is an attack so simple examples here is Bridge balance difference so any hack of the bridge will will broke this invariance so some tokens will be minted on one side or too much tokens will be withdrawn on the other side okay we can watch over it uh the issuing of the tokens without actual backup is also the cool example of the invariant also minting nfts unexpected transfers and so on the second thing about the security is first of all the events that should never happened at all yeah so can you spot something except for one on the slide so roles and ownerships transfers to the eoa so you have a huge protocol with a large tvl and then you see that okay the ownership of the main contract was transferred to some unknown eoa don't you think that there's a problem yeah that definitely is and so self-destruct of the protocol contracts also the thing that should never happen and you will see okay so there's there's a really weird things why we do even want to have alerts about it and the cool thing is that on chain you have all the history and you can spot every event but why we want to have alerts here is that because we want to know about such events happening as soon as possible and do not sit here on the ass and after that like okay one week ago one of our main contracts was self-destructed so we want to know about it as soon as possible to have the ability to take some actions can you spot some other events that should definitely never happen with the protocol any token transfers in the functions yeah that should not transfer tokens okay yeah for sure anything else so like let's say yeah yeah and that even can be a protocol invariant you know and yeah changing value from positive to negative where it should never happen also can be the case okay except for the events that should never happen at all there are some events that might happen but should never happen silently let's say yo you have some protocol that that the part of this protocol is depositing funds so folks can deposit funds and withdraw them and again you're a happy guy sitting on a beach and after that you understand that oh my God my prodigal tvl got down by 50 percent and I didn't notice it so that's the example of the huge withdrawals and that's the event that could happen that's not a problem that's probably even not an attack that can happen but it definitely shouldn't happen silently and you can also have the alerting setup for it also a huge balance challenge changes and the other thing is the ACL changes so if we have a truly decentralized protocol and we control it's not by only one person or like even a multi-seek so we have the precisely designed ACL system we also need to know about each change in the ACL let's move on and since we've already already discussed the main ideas and the main types of the protocol orders we can move to the Practical parts and dive into the examples and we start with the idea of overall bot development so since I'm a former quality engineer in traditional software development there is a term called shift left the idea of the term is that you should start testing as soon as possible like on on the stage of the requirements so no actual software is provided and you also already start testing same goes for the alerting so if you are one who's responsible for the alerting in your company in your team or just just want to make cool alerts you should start at the very first stage so they ate the ADR at the architecture description record and first of all do a review of the overall architecture of the of the overall idea and identify like some issues maybe known hacks and so on after that on the development stage you should be also involved to make sure that all the events view functions and other stuff is in the protocol so once you will start building the alerting system you will not get into the situation when okay I got this invariant I get it in mind but I have no way or like a weird way of getting it okay cool after that on the review stage you should confirm that everything described on the previous stages is in the protocol and on the deployment stage it's time for you to either start or even finalize the development of the alerting and once the contracts are deployed on chain the alerting for them should be deployed as soon as possible okay now let's talk about the critical events about the things like we mentioned like the things that should never happen or the things that are really really important for us so the first thing is the ACL changes we've talked about it bit late earlier and the first thing that I want to say is each ACL change should be alerted even though you might think that okay that's not a critical thing or that would that would that ACL would never change you should definitely have alerts for it because you never know the exact Vector of the attack and the ACL changes are usually involved in a text so all all and also granting and revoking permissions for some critical stuff should be alerted with the critical alerts and we will talk about the alert severity in just a few minutes the second thing is ownership transfers and it's basically the simplified version of the ACL when you do not have a separate ACLS you just have the owner and for sure the ownership of your protocol should be never transferred to eoa it should never be transferred to the unknown address and it should be never transferred to the null address and the last thing is this state changes so it is it's a common practice for the protocols to have functions that changes the state and does not emit event but that's a critical change or the changes that just might happen so like let's say you're the commission of your protocol is set on one of the contracts and it somehow gets changed you definitely want to have alert about it so if it is the case when it was done by intent it is your team it is was it was done over the voting that's okay so you just see the alert and say yeah I know that that should happen but if it happens without any contest you you should definitely react on it okay and so some examples of the ACL contracts have no idea why I've put it on the slide so let's speak about the protocol invariance in bit more details I have three basic examples here and I think that we can spot several others so first of all yeah if we speak about the protocols that are about depositing funds then for sure the amount of the tokens of something minted should be equal to the amount of the depth to the amount of the funds deposited for sure the bridge balance the source Bridge balance should be always higher or equal than the target Bridge balance and uh you know the difference here so in the first invariant we have the equality and in the second we have not the not the equality but inequality and invariance of both types why with the bridges we are using not as strict equality because in most cases the funds can move from one part of the bridge to another and it might take time and movement like on one side and on the other side can take different time but you definitely should keep in mind that if you deposit funds on one part of the bridge the amount of the funds here should always be higher than amount of the ones printed on the other side and the third example is the collateral value so collateral always should be larger than law Can you spot any other examples maybe something is in your mind right now so yeah in my protocol that's the thing that should never be changed or like that's the equation that should be always true for my protocol any ideas like you definitely know oh you I I I'm quite sure that you know okay let's leave it as this I think that in course of time you will have some ideas about it and let's say let's speak in the details about the repeated in advance so as we've talked earlier there are several repetitive events and there are ways to their possible issues with this so for the Oracle report it can be Quorum not reached or something like that that's why the Oracle report is not in time and we can predict it by monitoring the Quorum with the rewards distribution again rewards are not distributed in time and how can we predict it we cannot predict it on chain unfortunately but we can predict it with the off chain executor monitoring so let's say we have sum of chain tooling that is calling it function once in 24 hours and over the next 24 hours there were no rewards distribution then we should definitely have the monitoring for the off chain executor here and possibly some other things so they are the examples I think we can skip it for now at the very beginning that we should start uh you working on alerts at the ADR stage so at the architecture decision record at the development stage we should identify that in our protocol there is no things that are well known in the attacks in the hacks or a well-known vulnerabilities where to search for these things so first of all if you are working in the web 3 for a while you like you you live in the space and you you you definitely heard about some hacks but you most likely you heard only about the the hugest text so uh do like to to make a creative database in your mind of the hacks and of the things that you should watch over you should definitely follow Twitter of the main Protocols of the main like folks tweeting about some security issues and you should redirect uh you can do it in the two ways so the first way is on the design steps of the protocol you confirm that there is no hacks in the protocol there is no vulnerabilities and the second thing is once the new report fires you should do a quick tour of this report and ask yourself can my protocol be also affected by it and do a review over the existing protocol so it might save you time and money okay so as Christian said no alert should be left unacted why so because if you create an alert it means that something bad had happened and you should definitely take the action and if you create the alert that does not require an action then such alert should never exist and speaking about Florida oh for sure everything that is produced by the Bots is called alerts but there is different alert severities so in my mind I separate two things so like high and critical stuff that's the alert and that's the things that should be acted while the law and info stuff it's kind of feed news feed that you should not for sure take actions but you want to be aware of So speaking about the critical alerts uh once the critical or high alert is fired as we as we said there should be some actions but how you can be sure that these actions will be taken so this is the simplest option here is to set up the on-call system that will ensure that either the the person on duty or the other folks in the team or even the CTO of the company will eventually know about the alert and will take some actions in so there's basically two examples of the most famous Ops uh give me a second of the uncle systems that you can use but if your protocol is not that large or you're just a part of a small team you should you you there might be a situation when you will first start with the simple chats so like we did previously before we got the on-call system and the the interesting thing about the chats is that you should also separate the critical fit into the chat that should definitely should never be muted that should be accessible for all the folks in the development team and that they should know that if there is a message in the alerts chat you should definitely do something while all the other stuff can be put into another chart that possibly even can be muted so that you can read the evening like okay several events had happened So speaking about the actions on the alerts the alert has filed the critical alert has fired and there's a person on duty but it is not him who created this alert and he see the see there is the text okay there's something really bad happen but what what gonna what what I gonna do in this case to avoid such situations you can have the thing called runbook so basically run book will you can see can should contain sorry several parts the description of the alert itself so the person who is not aware of the alert can dive into the details the definition of these severity so if it is a critical alert or high alert it's for sure it will be in the alert itself but there can be some modifications and some conditions the confirmation of the alert because there is a chance that this alert was was just a flip and you shouldn't take any actions on it also the resolution the escalation process and some notes and links and if you really wanted to use run books in your company go check out the light example I think that it will give you more details on how it should work and how you can create run books of your own so each critical alert that should be acted should have the round book for this alert and speaking about the actions on alerts one more time as Christian mentioned and I think that someone from the audience asked this question is okay there is a critical hack in the protocol we got the alert about it we know that the hack is happening and we don't want to be like a ronin Bridge no not like our own Enbridge but winter meal Tech where the fog is detected the hack and they sit and look the on the attack happening and basically have no ability to pre to stop it why because there were no emergency brakes in their protocol so if you are designing a smart contract and you you like you care about the security and you assume that there might be there is a little chance but there is a chance that there will be an attack on your protocol please at least add the ability to pause your protocol yes it's not that good for for the people for the users but it might save you tons of money and be a like an the factor that will save your protocol okay and the last thing speaking about the alerts is that one alert is good one alerting system is good and fourth is amazing alerting system but for the critical alerts I'm highly recommending to have a redundancy so if you let's say have the own the alert for the ownership changes in your protocol then take your time and not only implement the photo bot but also consider some other alerting system it might be self-tailored by you or some other solution but having a redundancy for the critical alerts also helps you increase the confidence and uh yeah so if we will have the good internet and so on it will be time to create our own Bots and it is but we'll keep it as the home task so from my part there are two basic tasks so the first one is to create the bot with the operation alerting and it's rather simple as you might see and also following the QR code you will find the activity for example and I collected there the most useful code that can be used for both operational yeah mostly operational alerting and the second thing is to develop a security bot and that's a more complicated task it will require you to get a deep dive into your protocol to determine the protocol invariance to determine what ACL changes might be and so on and so forth and since we want you to like to give you assistance to help you and to uh to be sure that after the workshop you will come back home or come back to the hotel and will deploy your Bot uh there is a there's a chat the telegram chat that you can join and in this chat me Christian and other guys from forta will help you will give you the consultations about okay I cannot deploy the bot please can you help me or how can I detect this particular case on anything like that and for the tasks about the protocol but maybe someone of you are does not have a protocol yet then you can take the lighter uh oh no you can look first at the existing light of lighter Bots and also here's the alerting checklist that's the important thing and it follows the idea of the early stages of alert creation that's all from my side that's all about the protocol alerts and now we can move to the questions okay uh so yeah probably I will move with the mic yeah I just want to add something about the photobots configuration so isn't that the person that made the question related to that already left but I think that is worth sharing with everyone so let me start by introducing myself I am Lazaro from nevermind and I have been working with vorta for a long time so I have been facing this configuration let's say problem that once your Bot is deployed and you cannot configure your Bot anymore so you you cannot change anything and you will need to redeploy your Bot to do some changes but this is only true it's your Bot is the one that knows the the configuration details you can have and through your configuration and then deploy the smart contract on the blockchain so you can you can change any value on the blockchain and your body will notice that so you will be able to change the configuration maybe this is not worth on the ethereum maintenance because changing that values and will be more costly than FreePlay in your Bot but probably on polyun this is fine for you and this can also allow you to do interesting stuff like for example I don't know if there is something already on there someone already on the photo network doing this but you can create a community but something like you have your project and your community is interested in monitoring something so you can create a bot the body is consuming the configuration from the blockchain and you can let the community change the the configuration by governance or whatever else so this is one of the approach I want to share like having your configuration on the blockchain and the other one is like if what you are looking for is Simply Having different configurations in different networks like if you bot is meant to be around on a 30 minutes on polygon on BSC and things like that you can have an approach the initialized function of the Bots was not covered in this Workshop but you can check the photo augmentation for that and you can use the initialize function to detect in work blockchain in what network your body is being executed and given that you can use a different configuration for you but by only checking what network but is being executed so this is our these are the two approach that it was I want to share yeah thank you so much really good idea about starting configuration on chain probably not that cheap on the ethereum mainnet but yeah so that's one of the options thank you so much yeah like keep keep your hands so that I can detect who to transfer Mike uh is there any configuration in the bot like I can tell them to start from particular block number or something like that uh yeah sure it is so in the example of the in the fourth example in the example wrapper and on the lighter Bots you will see that uh there like give me a second yeah for sure you can um when you run the boat on life on notes it will start from the latest block but if you want to test your Bot against the given block against the given transaction against the given block range you should you you can do it simply by using Forte SDK and it is mentioned in the readme's of all Bots oh they have the transaction and the block that gets passed into the handle transaction and block function and so you can evaluate what what block is being passed and changing disconnect you can do it you can do it locally however you have to keep in mind it's a long time right and so it's going to be challenging to backfill uh completely hi yeah I have two questions one one is um that 100 transaction function that will be executed on every transaction of the future is applied before that and the bot will only look for transactions already for some addresses I it's every transaction okay and then your filter gets applied I figured it with inside them okay and the other question is in our protocol we we're sort of a factory thing so we instantiate a bunch of contracts I'm not sure if templates is a solution but is it possible to create Bots that people can then when they deploy their own instance of all these contracts to just reuse it easily like without needing to rewrite it you know like because the addresses will change imagine like instantiating multiple instances of a I mean I suppose that the pattern that you described could be utilized there right where you now kind of Monitor and what what is getting deployed and then uh potentially kind of change the addresses that way okay does that do you think that would work yeah but in this case I don't want to change the address I want to like basically set up like a parallel because the owner of that new instance is somebody else the creator of this uh you know it's intended to be used by people that you know are are creating safes right and so but you'll have to like you'll have to configure it for your you're multisig right right um but yeah but the template exists so if you have a a similar product or protocol where your users are just taking like a template contract yeah sorry yep yep what project are you working with by the way okay all right I'll I'll connect with you uh hi thank you for the workshop uh just quick question are you planning to expand Beyond evm do like some other l2s or different chains altogether I don't know whether we have any specific plants uh at this point in time but I mean we've been adding uh chain support and so there's a particular chain that you're interested in talk to us and we'll see whether we can actually there is a small hack that you can apply you can go to the photo examples and find the bot that is actually monitoring salana it is done like in a pretty strange way but you can do it so right now photo does not support any anything except for the evm chains but in the photo examples you might find the interesting example on how to monitor the let's say Solana chain or any other chain with the RPC available uh when I create a new boat I need the the nodes some some of the nodes to pick it up and start executing it right or or they pick up it automatically and they kind of because you're saying that uh notes can select which Bots they're executing so if I create a new one it's automatic so so basically what happens is you when you deploy your Bot you create the the docker container it uploads to ipfs and then you register your Bot with the folder Network and then the scale nodes automatically pick that up but can I if I run the node can I refuse I I can say no I don't want to run this boat I don't think so okay so all nodes run all the Bots not all the Bots like think of like you know um Bots get deployed on scan uh six or seven scale notes at the same time and then that is satisfied right so these seven scan notes run these sort of parts and these seven scanners run different types of bots okay uh thanks for this great and interesting Workshop My question is related about some fundamental question about disclosing information how our board works because if the hacker is not very stupid it's pretty cool to go to Ford and check how it works test this unit tests that no Bots even meant an alert because I can absolocate my addresses I can really make some pretty complex logic not to be detected and after that I run the hack and I could be succeed without zero alerting as opposite if you have some hidden Bots which developed by your team but nobody knows or limited comment people it could create some surprise for people who do not really expect what happens so what the policy and what's the possible solution just let me start and then Christian will add his thoughts so that's a great question and this idea on the first glance sounds like yeah why the hell do we make these Bots public but on the other hand since the all the photo network is public and since there are many numbers of the bot developers as much as like the more photo developers and the more Bots we have the less the ability to even try to execute your attack against all these Bots since the network is watching over the main net and you have no ability like let's say to run all the bots in the photo Network at home I don't think that any hacker would ever do it due to the fact that the amount of the Bots watching over the mainnet on the photo Network right now is really huge and it will increase in time so that's my point here Christian yeah I mean I think it's it's it's a strategy right you could say hey private and I developed them house and you got coverage contest that before that which I'm personally super excited about is that it that it is a Community Driven project right and so you have hundreds of developers security researchers data scientists they basically look at attacks and then essentially develop Bots that identify this attack from different approaches different angles so you get a lot of diversity in the detection approach that makes it harder and harder for an attacker to evade and so I personally think that that is the better approach but I I can see that that there are maybe instances where you're not comfortable to have the bot public and the alert public and there's options on the photo Network that would allow you to do that either through obfuscation and encryption of the alerts or running your private scanner thank you I want to get back to what Christian was discussing as a alert that Aggregates some other alerts how so how exactly that can be done are you talking about the hierarchical nature of the alerts like we have some basic colors and then we have like more like a kind of on top an umbrella that's right so so today uh the the the logic there is is fairly simple it is basically saying if you have about firing in each of these stages then emit an alert and we're grouping together alerts together based on a common eoa or a common AOA cluster but that is very rudimentary I think the next step is really to use anomaly detection to combine alerts together where you're basically looking at each of the stage and say how anomalous is this particular alert and then you combine essentially anomaly scores together to create one overarching anomaly score that you can then rank um in the middle yeah and uh probably I will ask you a question from the technical point of view uh there is a graphql API a wonderful API so that you the the combiner bot is actually not watching over the chain it is fetching the graphql API and consumes the alerts from other Bots and after that creates a decision so as we speak about the salon example so on the photo Bots you should not you you cannot only watch over the things happening on chain but you should do some other stuff so like fetching external apis or fetching defort API itself and as far as I remember there's even an example of the combiner bots so that you can do it pretty easy so let's say you have developed several Bots and then you want to have a combiner on top on the fourth examples you you can find the example of how to do it really simple yeah and currently it answers your question let me add one more comment there uh So currently the two main interfaces on the bot is handled transaction and handle a block uh there is going to be a new uh handle alert that allows you to build hierarchical alerts currently the way it's implemented in the bot it basically Triggers on handle block and then queries all the past alerts and then kind of Aggregates and combines them but candle alert would be a cleaner way to do it so we're moving into that direction all right um are you aware of any uh potentially big hacks that have been prevented by uh using the photo alert no I mean I um there was a question earlier I don't know whether you came in um afterwards so so there are certainly alerts um that the fora Network emitted for for many of the attacks that happened over the last few months but in order to prevent it you need to have kind of these alerts hooked up to then take action um and and we have not seen any sort of automated actions being hooked up to photo alerts yet I think there needs to be kind of two things that happen the Precision of the alerts need to be increased such that you know this this mitigation mechanism doesn't fire on false positives um and then also the mitigative actions currently it's pause a big hammer there needs to be more nuanced actions that that mitigate the attack while not negatively impacting the users of the protocol I'm sorry big protocols no no because not to kind of afford on automated actions but there certainly have been um attacks where and you know Jonathan was saying this earlier where you know not just the protocol got passed but the entire chain got passed right last week right so if you want your protocol to be protected and not to get in the situation when it was hacked and then you go to the 14th Yahoo here was the alert so what you should do right now is go to the photo app And subscribe to the threat detection kits and then you can you will have time to take actions gay folks any other questions well thank you very much I really enjoyed all the discussion that that happened today thank you foreign [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] thank you [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] thank you [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] my dreams [Music] thank you tonight [Music] to listen to you [Music] see hold on hold on hold on [Music] the commodities [Music] [Music] [Music] thank you [Music] [Music] I'll try to give it to me [Music] that's okay okay so you're also with okay so run yeah [Music] Alex I need the entire description [Music] [Music] wait can you put it on stop talking [Music] wait Wi-Fi is just loading again oh my God [Music] [Music] foreign [Music] [Music] [Music] right now [Music] [Music] you ready to exercise just like when I get the wink we gotta do that [Music] I never know what we are fighting with the Wi-Fi [Music] foreign okay so uh excuse me uh so welcome everyone thank you for being here uh we have a lot of wonderful people in this panel and I'm gonna start by introducing the organizers uh in case you didn't know them already those three wonderful folks over there are the organizers of this event and we have the formal verification lead and compiler engineer uh the ethereum foundation with over 2 000 Twitter followers and over 1 000 GitHub contributions in the last year Leonardo aka Leo oz big round of applause next one we have Team Epsilon lead and solidity language X co-lead at the ethereum foundation coffee addict and evm nerd Alex AKA axic in that side over here and last but not least it's like it's that and last but not least um Harry AKA hurry [Applause] so I do need your password again sir thank you alrighty and now that we have introduced the organizers let's introduce our wonderful participants so from Faye we have Mr Grant Grant is a developer at the EF focused on design and implementation of field Lang before Fey he mostly contributed to consensus clients thank you for your service Yoshi yoshimoto is a developer at the ethereum foundation working on FEI Lang and sonatina compiler back end [Applause] from half we have Joshua Joshua AKA JT former super fluid solidity engineer mobile app developer and half contributor thank you for being here sir from Viper we have Bryant Bryant is the CEO of a4x a python Dev tool startup and a contributor to the Viper compiler he has also contributed on several eaps and core python libraries in the ecosystem from that ATK language we have Ansgar he's a researcher at the ethereum foundation previously at consensus quilt he has worked on protocol improvements including eips 3034 4488 and 48 44. thank you for your service I'm amazed I pronounced that right now from the solidity team we have Camille is one of the core developers at the salinity team at the ethereum foundation he is also a co-founder of code poets a Polish Software House specializing in cheminformatics and blockchain in the past he worked on a variety of software projects in multiple languages ranging from Video Editor to C plus plus to python web development to Devos and infrastructure is blockchain experience started with operating cooperation with Golem he's currently focused on the solidity language and compiler wow thank you Camille and Daniel Mr Daniel has been with the soluti team for the past 4.5 years he's passionate about talking slowly taking soluti to the next level with generics and he will be taking over the language technical lead role of the solidity team wow thank you everyone for being here it is everybody Pleasant thank you all for being here as well so we are coming with a pop quiz there are no drinks but maybe later will be so uh let's start with some historical questions Mr Leo would you mind uh showing them on the we have sheets you can see that all this is improvised one for you so just in time development you know how this works so we are gonna go through a couple of questions to make this fun in order to see which language is the best one uh please do not kill each other like we really appreciate your work and our bloodbath here is not wouldn't be actually quite fun so and don't cheat absolutely not I we will verify we have a formal verification lead here and Harry is going to be taking over that role today he will be standing up and checking that your answers are actually correct and if they are correct then you will score a point and there may be or may not be a price at the end I cannot confirm nor deny so let's go with history language okay are you ready listen to me so who was the original creator of each language so for Viper half fade solidity and etk and you have 30 seconds foreign seconds four four Prince down or pencil thank you okay so should I say their answers okay so for okay say that loud favorite David Sanders Mr Hari you confirm oh yeah I just put Brands you know just optimistically okay uh what about you did you write it down I put David but I forgot his last name ah shall we give him like half a point maybe nothing left okay so what did you what did you write for uh half yeah okay sorry no point what did you write for solidity whatever for an 80k doxed okay okay so he gets the points as well right okay what did you write for for Viper okay yeah vitalik point this and discuss with us again well I only put two downs okay next one on the list so you sir uh Piper is botanic solidity is Gap and wood I believe and Faye is David give it a mic okay let's go down the list oh yeah they are the dictators of this game they get to decide and the battle begins who's okay next one um FIA I put grant but apparently that was wrong and uh I had no idea and salinity okay so for solitaire we put the gaping increase uh for five grand and we run out of time for others foreign Ty Chris and God and itike Sam Mad Dogs again that's fine let's go to the next question in regards to the parity hack Okay so there's oh wait so there's gonna be five um okay so let's give you one minute for you this one okay so there's gonna be five questions here so for the authority hack number one what was the GitHub issued title of the priority hack by devops 199. the second question is what was the text in the first comment the third one what year was it the fourth one was it solid is fault and the fifth one is what Viper feature proposal was motivated by it you have one minute what is processing are you gonna how are you gonna answer that okay this is gonna be good the last one is what Viper feature proposal was motivated by I have 25 seconds you have 15 seconds to open your Google browser and find the answers online no okay so let's go one by one and let's start from the other side this time okay so what was the GitHub issue title of the party hack by devops no idea okay what was the text in the first comment commits that I killed it that's probably what he was yeah okay what year was it 2017 was it solidly disposed of course not okay what Viper feature proposal was motivated by it no idea okay so sir let's go over here yeah um okay so uh I couldn't remember the title you know it's something like anyone can I don't know something something anyone can yeah but I forgot the rest I don't know you can give me half a point if you want to uh and then I I put down I think I killed it but apparently it was I accidentally killed it I don't know uh 2017 I guess as well of course not to live his fault I mean you know given the judges here what else can you say um and no idea about the Viper feature let's go with you sir forgot the title of the issue 2017. and was it really difficult I have to think about that not this time and I forgot the feature proposals I probably made cool uh what was the GitHub issue title no idea the text in the first comment no idea what year was it no idea was it the latest fault yes what Viper feature proposal wasn't divided by no idea good that was awesome title so I guessed we got hacked it was a joke uh text in the first comment dot dot what what year was it uh 2017. was it the latest fault no what Viper feature proposal was uh re-entracy protection but okay so uh I guess I've already been assigned let me go through the answers for the public and the audience at home come here play with us sir okay so that's the first answer to the question what was what were the text in the first comment does anyone know yes sir what year was it who knows that that was easy was it so this is fault I cannot confirm nor deny at this point what Viper feature proposal was motivated by it and yeah so Alex said it was like cloning Factory all righty are we ready to go to the next section regarding ethereum evm knowledge yes alrighty so here's the first question for which you will have uh 30 seconds which is what is the cheapest evm up code just name one you can name more name as many as you can what is the cheapest evm upcoming what happens five seconds oh this one is awful okay so let's start with you minus one point okay zero points uh this is a dictatorship sorry sir we put down code size to gas but after the fact you think it was like jump this at one no okay who here knows the right answer sir there's two points for you sir good job give this man a beer and there is one more there is one more it's revert apparently okay shall we go to the next evm question 30 seconds which up code was motivated by the dial hack 30 seconds which op code was motivated by the Dow hack he got seven seconds go for it three two one okay so let's start from here which up code was motivated by the dial hack that's correct he had no idea but that's correct bye all right okay next it's okay people get lost usually no okay okay next question are you ready can you emit logs in a static call I'm giving you 30 if the public wants to answer them please go ahead you will gain nothing but you will get knowledge you can write it down actually yeah you can just if you have a phone or something just like play along [Music] well this is what just to is you're not even gonna bother something at all okay so so we start asking okay so what about the public can you emit logs in a static call no that's right that's right okay next one all right so which up code returns to stack items which op code returns to stack items so you have 10 seconds the audience also if you if you know it then like write it down some yes that's a spirit okay all right so shall we start with that side okay so which op code returns two stack items yeah we should really know but I don't right now no point none is like the answer or not again uh is this too fast I don't have any time to think about this so it's actually none what was it genius next one Okay so which up gold rebirth on out of bounds access let's do 30 seconds and I'm asking you two this time which up code reverts on out of bound access okay so hey let's start with you uh call data copy oh no that's not correct obviously the um no that's true though we had returned it at Coffee we actually got something in the Optima wrong about that once well I cannot ask you anymore because I already know the answer so it wouldn't make sense okay next category language specific questions wow someone has a follower here okay so the first question is what is the latest release of Viper solidity phase half and APK let's do 35 seconds five seconds one okay which way shall we start Alex here till this time okay so for Viper no idea okay personality uh all 0.8.17 for pain or something it's not wrong for half oh something for ATK or something okay sir I have zero points uh Viper nothing solidity 0.8.10 is what I guess but apparently we have far beyond that Fray no idea half no idea ATK no idea slum I put down 1.0 just in case you know that was close though sir Viper solidity faith huh not applicable is that a valid answer no and etk a all right I'm sorry okay okay great now you can hear me buff it on the recording awesome so uh yeah Viper 0.3.4 solidity 0.8.18 Huff 0.1.0 etk no idea see no idea which one I appreciate this is points to 0.8.18 now I'm going to check that you got drugs all right well uh fee might be uh018.0 um solidity zero dot eight dot something and I didn't know any of the other ones I like his honesty okay so let's give you all the answers so Viper 0.3.7 sorry t 0.8.17 Fey 0.19.1 have only night lies CK 0.2.1 good job [Laughter] okay so next question what language was serpent written in and Viper and Viper how do you pronounce those yes so those are three questions 35 seconds folks what language was serpent written in Viper and Viper thank you foreign okay are you ready so uh let's start with you folks so serpent what language was it written with oh yeah the mic this is working yeah let's say python okay and Viper python and a Viper we said Russ but I might be python so what's your final answer I say python okay for you sir so for the three like I put on python python C so which which one is which well uh serpent python Viper python Viper within y c I don't know not bad sir uh surface are in C plus uh Viper with a Y is written in Python a Viper weighted I from the ecff uh whatever it's a formal verification tools are in C plus oh did you forget about that did you forget about that that's the reason why you have to change the name from Bible with an eye to Viper with a Y because but they're not though [Laughter] technically correct is the best kind of caress that's not one verify this can you give me like five or ten points for this okay uh sir serpent uh uh I said python three times well that's two out of three so and you folks uh serpent python Viper with a Y Python and Viper with an i c plus even 2.01 wow that was pretty curious actually how okay so uh are you ready for the next question so what language is half written in 35 seconds yeah there's like multiple answers and you get many points write down all the programming languages they are okay you have five seconds you know half was written in half okay so let's start with you folks rest okay so that's the only answer you have yeah there was a another language I think it was uh was it originally implemented in the C plus plus I don't know but now it's implemented in Rust so rust is correct maintained would you would you put the mic all right so original puff no idea uh slightly modern Huff typescript modern modern Huff rust that's two points for you sir I wrote Haskell which is lovely people in this room that's it that's a solid answer okay Emma Mingus was dressed and then I I was just throwing in C plus but apparently that's wrong so rest so we wrote rust all right so well the correct answer was also does anyone know actually there is three answers so rust is one typescript is another there's a third one hands up so no I don't hear an answer JavaScript can we give them a point okay I tried I'm sorry okay so uh shall we go to the next question Mr Leo okay are we ready what was Faye originally called 35 seconds five more seconds all right so yeah we had it earlier but I don't remember exactly what's rusted something he put down rust Viper but that's correct wow respect no I did not put down last but I just you know I put down fee with two e's because as that always confuses me but you know uh the correct answer is Russ Viper because it was originally supposed to be a rust implementation a Viper compiler even though it didn't follow semantics at all wow that's like two points uh not Russ Viper Russ Viper well Harry's not very fine the answers anyway so all right are you ready for the next one which solidity version introduced named function arguments you have one hour to answer this question If someone knows just stand up and screaming out loud which salinity version introduced name function arguments come on it's obvious 15 seconds yeah let's do that one one one okay we got two one and time's up okay let's start from that side one four zero okay the audience any answer okay uh I said it was 4-0 do you want to change your answer okay just write it down don't forget I give a little bit of the benefit of it down I said zero one two a little bit I'm surprised the answer isn't immediately no answer changes right okay I put down zero four zero you're good okay it was long before my time but it was there for ages so I said like oh point one point oh Okay so we said uh should I say no you say this Alex so it could have been so I get a half a point right I get something before that time yeah you know this Oprah Winfrey meme you get a point you get a point okay so ready for the next question which pre-compiles do not have a built-in in solidity 30 seconds there's multiple alphalic which pre-compiles do not have a built-in in solidity multiple answers are allowed so uh let's start here here we had identity that's the only one that I was sure then some hash thingy with B but like something yeah that's a that's does it have a freedom finally these days I don't know but that's the only ones you have okay that's one point right wow Viper going hard yes right pretty similar answers that like the identity one and then this patch thingy but I didn't even know that like it began with a B so I put it ah so do with that what you want maybe we should just rename it to the hash thingy pre-compile I said identity and Blake too identity and shot 256. no idea okay that's the audience know there's more so again no well for the sake of time it's going to be identity ecat equal pairing and black 2. all right let's go to the next one okay so two questions here when was Yule introduced and what was it originally called and you can get bonus points because Alex says so foreign five seconds when was Hill introduced and what was it originally called okay uh shall we start with you sir uh 2018 um and something that started with a j let's see a version or a year it's a year okay how's the mic no no no points I'm sorry uh no idea when but it was originally called Julia I wrote zero four two six which was released in 2018 so that's kind of right there yeah I had no idea about the name I put down 2017. that's a point for him it says 2017 here but you're the master [Laughter] uh so yeah we also had I think we also only named The Duel in 2018 but introduced it maybe as your year earlier but not sure so they got one or two words yeah let's do two why not 0.5 from him is everyone happy yes let's continue then next question what version introduced metadata support or metadata depending how you pronounce it for solidity and also Viper so what version introduced metadata support in solidity and invitable two questions insulating any Viper should know this is [Music] two seconds no we are discovering a lot of new things here we are learning together isn't that fun uh so yeah why would we guess zero three four uh for solidity it was before our time and we guessed there was three six well that's a fun Pop Quiz with the only questions and answers but I put down solidity 0.30 um Viper I don't know 0.20 plausible you know sure uh the slanted team actually got the Viper one right zero three four and then I wrote zero four twelve for solidity probably have to look that one up then no idea straightforward no idea I also have no idea Alex just one point for everyone okay uh we're almost done next question what version allows disabling the metadata in solidity and in Viper so personality and for Viper which version allows disabling the metadata sure personality and for Viper okay everyone seems so confident I'm just gonna up thumbs up Okay so yeah I don't know any of these version questions okay no idea for solidity I put zero eight eleven because why not and Viper I put zero three seven that's one point wow yeah if I put a 0.34 and then solidity I put zero seven zero okay for for Viper we said all three six and facility okay o34 and for solidity actually we measured the pr like last week so it will be all eight eighteen that's one point okay the last question of the pub quiz if you win this you win this you win everything or not Okay so if you name them correctly all of them so even the audience if you name it then you win as well so name one forgotten evm language there's multiple apparently name one or a couple or name all of them foreign okay so shall we start with you I just wrote surfing I'll do that uh there was like three others I remember but vaguely can you just like remember one of them was uh that guy that used to work on formal verification for the uh before he left in protest right um yeah what was it called okay uh serpent forgotten we put a serpent and solang 's pretty actively developed guys what is okay sir yeah I didn't didn't think so I've been counted as as I forgotten I put down move you know because why not I think they compiles to evm right okay so we have LL and nib [Music] okay the audience what's your plan wow [Music] hi uh well the answers apparently are like mutant LOL and bamboo have you heard of those okay well congratulations everyone for this amazing uh display of knowledge that we got here now we have a should I introduce a yeah the question audience right but okay so let's introduce the question for the audience okay this is for you and you will have to scream and shout and jump or not I don't know okay so what is the best solidity version why argument your argument or what's your thesis the correct answer is it's a trick question so someone would upset foreign okay okay and what what feature would you remove [Applause] we too okay and well um we are out of time okay we have 10 minutes for you want to do this are you sure sorry okay so you are going to be you have not only seen a massive display of brain power but you will also see a display of strength okay so Harry would you mind would you do would you do the honors do you know what a dog war is and because uh there is like too many solidity people so I don't know you're one of them Okay so yes would you like that yes yes he likes that and he took my sock I want that talk back Okay so how do you want to put this we need some people on one side and we need people on the other side so okay you also count do you do you think the organizer should also do like participate in this right take positions [Laughter] does anyone have like a rock music or like something solid to play in the background one until one loses of course so one two three four five is is anyone recording oh yeah yeah [Music] we need this hook a bit more in the middle okay so you see you see you see this if you put it a bit here in the in the in the middle okay at the count of zero three two one go the solidity is becoming strong thank you all for coming thank you all for tuning in in this language Showdown thank you all for your time [Applause] does anyone else want to play you're doing great though you're doing great yeah thank you wow it's kind of an old bastard [Laughter] [Music] foreign [Music] foreign [Music] [Music] 