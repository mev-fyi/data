[Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] okay your string is switched over people of the YouTube please let us know when you can hear us here is the agenda I think it's been over a month since we had this call why good stuff in the meantime comms fun lots of fun progress on research specs and all sorts of stuff see we get into it the first item agenda is testing and release updates I released easier a for today his long time coming is primarily some testing updates they softer some of the consensus sex since issues that we've found it been around and along with the networking updates that were also primarily driven that interrupt include chunking listed responses for better streaming or if you're enabling streaming and modifying some of the national structures to better facilitate sync and some other clarifications we talked about some of this may be during research and just general conversation but we are staging an upcoming semi major release there are a number of PRS that are under review some of these things are stuff that's come out of audits for example hardening of the fourth choice rule against some of the attack vectors found by booyah but also some other stuff which are some substantive changes to pay zero with respect to removing the cross-linking scaffolding such that we can continue to development while we iron out the actual direction we're gonna take on phase one so that's less up under D right there if you can and desire to take a look at some of the stuff and anyway the next thing on testing is a proto has an announcement I think maybe you might have seen me on Twitter this morning it's evening look regrets sorry for the noise in the background I'm at the airport so yes in Twitter I shared this diagram about infrastructure because programs just before death done during Africa and the conference in Taipei after was too busy to lunch but not other things coming down and planning to onboard clients on this testing infrastructure and do this conformance testing of all the clients perd√≥n and then in the next like week or two I'll reach out to clients and ask them to help the hook scripts for the individual statements issues thanks for the prayer has been very actively working on this since interrupt and I'm excited as a military assets to see thanks Tara next up is a update from Eddie on fuzzing hey everyone so as you all probably know the front of the work so we now have the defense for the working for the processing the data processing at the station processing and shopping so she's all working on the latest version of respect for I wonder the latest but it's is up and running matching the spec eight point there were zero substantive changes to the state transition and somewhat like the core stuff and that perfectly zero right forth so you should be good to go should be oh good we have modified the lock target last week to allow clients to essentially load the BP state from file so we now have a pre-processing function that uses a state ID reference and we're essentially asking the relevant state to the all the first targets so this was a decent react react texturing of the way we hand over the corpus from both the BP State and the block so so far we have the int I spec and lighthouse on on these buzzards PI spec is very slow so we're probably gonna want to remove it when the point to production in the project infrastructure we're also tweaking the fuzzer to ensure consistency behavior across different implementations when returning empty bytes as opposed to an image like punches we're also working on adding the epoch state transitions so currently looking at process specification finalization process cross-links process final updates and so on so this should be fairly straightforward since these functions only take a big mistake as we're also exploring creating custom huge errors are also mostly passive plugins to enable struck to where a mutation based projects so this would help greatly with coverage and there's another alternative that we could also potentially use is leveraged leadcore above each other and also known as okyun which essentially help us translate because is that object into a Prada buff and back so first to make informed decision we need accurate coverage measurement so we decided to focus on that that's something that we're currently working on so while we're doing this this would essentially allow us to generate time you type e key states rather than you know sticking with known value states we're also adding support for more because taking puts my essentially adding the post stage into the list of valid states that we feel it was even good corpora and finally we started reaching out to some of you guys to unboard additional implementations so we're looking at onboarding which way the very very near future this week or next then we'll move on to go Java and cool thank you for the update ready any questions regarding present for everyone cool say great we will move on to client updates let's start with white house Hey mm so I been working with Felix to get a standard sb5 spec without topics going he's updated to a new spec and he's tests across compatibility with the reference code code age talking to prism about how to test out discoveries and they've also updated to latest code and Pawan's working on a basic implementation of topics which is not yet much for my site 1 linking mostly they're great a couple of 32 for some unspecified behavior when making f1 votes it's if things are going wrong also race an interesting attack this morning about we can potentially basically obtain a dishonest majority in the first 2 e box after Genesis it's easily patched though and I'm also working to build Genesis off prisms to cause the closet contract I'm pretty close but still not quite enough right there believe tomorrow or tonight sports actually protective protection for the value the client you start with a nice and tight scheme co-found some other solid optimizations in the raspy LS library and the same time we're also building some basic rust findings to Harumi to see if it's worth us switching over to and what might affect people trying to do interrupt is we're gonna change the way that you run lighthouse so we're gonna presently evaluate a client and beacon no two separate binaries they're gonna move them under the one binary called lighthouse so it's gonna feel a lot more like Perry with subcommands and that's it from me oh thanks both with regards to the slashing protection and you guys have that doctor wanted somewhere like what your approaches we do actually scott meticulously documented it so I'll share it with you if you ask me my man cool great let's move on to Artemis so we have made some BLS signature improvements then has been working on that Chauhan has been doing well actually noise JVM implementation is complete now we are working on handled implementation of handle for our client we're mostly doing code cleanup and handing off to our frog dev team were working to merge with harmony that's just kind of like going through the HR stuff for that and lower implementing some benchmark so if we make changes to like block processing or epoch frosting you can tell right away if there's been any kind of change in the speed of that and that's it if I can just that the violette stopping working on specifically is implementing the new hash declare standard is more or less complete and I'm more or less happy ish with performance if any teams want to take a look at it in Java then it's on our Artemis github as a draft will request at the moment so feel free to take a look at him any feedback that's well thanks guys let's move on to harmony I know there's a merger in process but for now I know there's like kind of efforts going on in both camps so we'll just keep updates two updates for now harmony oh yes yeah yes the joy said we are figuring out their immersion in the darkness which are both teams are excited about um this is one of the priorities at the moment we also work and continue to work on their focus tests it's gonna be test for our implementation of the cultures back and actually it's almost done I guess we'll be finished next this week and it probably would be a good start to to make some test vectors and share them with the community and have focused as on the shared repository as well as tested as we have a four state transition part also we are now finishing our discovery the five implementation it's already done but now working on tests test coverage and our current goal is to get interrupts with guest implementation and yeah after that it would require some refactor but yeah it's it's almost done and but it doesn't contain a topic topic discovery part yet Anton is working on somewhere Jimmy I'm with it'll be follow-ups and I think they are about to release a new version including noise and some effector so that's probably it yes oh thanks for girl it's not it wait yeah you guys hear me yeah yeah so what is the warrior hardening up our test net finding Barcelona way in the parks we also have a it's free mental PR working on removing the chart and crusting across across output base I'm a big fan of such change and so fitting unit test for that and that step is try out in the Valentine we also start implementing the naive a creation strategy as well and um yeah we are we are like another thing off of that change just because we think it's going to help with thinking with regards to at station a lot and we also get the video ice library as a spare test and then it's even faster than the previous kill Nick library that we mentioned a few weeks ago and just couple minor things were working of utilizing the new SSS the new assets the cash tree library we also implement in the process Eve heart optimization which was which was inspired by the White House art during period of hearing I'm def con and then we'll what you know stood for a testing and we started working on and to end testing and then going into our first testing strategies and yeah that's about it cool thanks Terrence load start yeah so we past week we brought on a new team member named to Yen and he's been contributing and finally brought him on more officially we kind of have a lot of small things in progress we're kind of the name of the game is optimization so we're optimizing our state transition logic kind of refactoring pulling it out into a separate package we are finishing up disc v5 implementation we are trying to fix up our networking to comply with the new like the the new release of the spec I guess of today but we were working on it before and working on adding kind of a general caching mechanism that we can use kind of across the board caching recent States and things like that and in the coming weeks will just be kind of trying to finishing out those trying to finish those things out and get to a kind of a stable place so you can start participating in a test net oh thanks yeah this all right start I will mention that Mommy has created an organization and it hop called appear on to client and the idea of this organization is that it would be a suitable place to store the scripts for that we developed during interrupt to run test match between the multiple clans and then it could also host all our useful projects such as low-level goes to be sub chat so we can test the lipid of implementations for conformance so everybody all the teams should have received invite for this for being admins and once you are running you can add more people from your team so - moving on to updates we've been working on it one integration we are pretty much wrapping this up and we are looking forward to participating in a shared test net with a contract deployed on Garlin right now we are yet implemented the latest spec 0 84 but I guess the consensus here will be that the cross links simplification will be included in this share test net I'll be expecting feedback from everyone otherwise we'd be now so adding a lot of metrics to numbers and we plan to have a public graph Anna instance once the test net is running and we'll be running probably like 80 or 100 nodes on a server cluster and you'll be exposing the metrics from that they've been significant progress in our native live p2p implementation we are still using the demon but we've made the first steps towards integrating the native one so it will be possible in the near future to switch between the two implementations in Nimbus yes I wanted to share that the ngoi dude he has the burek Interop is now much more reliant it's already sitting in the master branch so if anyone is ulis to use it you can find it there we've also developed buzzing framework which allows us to use I fell American was loop and lip buzzer with programs developed in him and now we are just testing the waters so far but the initial focus will be on the lower level layers components such as cryptography as a civilization and so on and you will be gradually moving on to the high level components we hope to integrate with the Sigma Frey cement prime differential further soon and finally we've had to spend some time integrating and switching to neem 1.0 which was released just a few weeks ago and actually we had to switch to the very latest version which is was reached yesterday so Nimbus so we soon compatible with neem 1.2 and that's it great thank you Trinity so after they've come our team is working on making hilux vigo key implementation more complete and alex has a fear about making different protocols we said in the poopy side and it's being merged we also fixed the current attention sinker in Trinity and and for the Python synchronized module migration the trendy thing is planning to migrate from this I think I ought to try up a while and we'll try to implement entry in our new modules and while this might be the East one monitor so it could be a new process or a new component in the Trinity side to queried infer from the East function theta so that we can view ok listen to the expansion and also for the votes and also for the deposit data and also I son cry were still handling the commerce issues so that Nick has been working on we work we work in the PI SSE data storage and the pilot p2p is also in our radar recently think that's our update thing thank you no way sir no way yeah so sorry I wasn't in the meeting for last month I was it was the busiest weeks for me for nearly a month and certainly around that time I wasn't quite able to get much done but last month we finish interrupts and this week I'm finally able to get Karen with everything again and I'm fixing our two remaining issue of Interop and hopefully to try to train some of the current other clans titanite and also to to just fix those issues in testing and on the sub three part I'm trying to gather the Casper - Casper consoles engine it turns out there are some design there's basically a platform from Jasper Party cool thanks way but maybe back okay I think that is everyone we will move on to research updates there's been a lot of movement discussion around the phase one proposal metallic I discussed this at length in various workshops the dead pond on the flawed posts online essentially it makes it trade-off to have fewer shards at least to start but the ability to cross link in the best case every chart every slot to facilitate single slot time and to short communications for sure communications I don't think we need to go super in-depth into it today the primary primary implication is that it changes some of the phase 0 machinery that we had in place for cross links in retrospect pretty obviously we were prematurely putting that in the spec anyway so I have a phase zero spec update er that just removes cross-links altogether and please zero funny enough cross-links and the updating across thanks to the calculation it rewards the cross-links is one of our biggest source of consensus errors that interrupts so be nice to just remove it anyway so anyway there's this PR up review it's been under review for about a week and I think we're very close to merging it in when we get to the test net discussion we can discuss the implications on test nets which there should be testing in test sensing things like that beyond the phase one modifications and things are there any other research updates that anyone wants to share I've been thinking about phase one spec issue is how to optimize the influx or how to calculate the availability roots and a couple of other things I have a couple of open open issues out but generally nothing especially hard has passed from out yet so far I think like a lot of it is basically just like how problems about how do we pack bytes together otherwise you know like I don't see any super fundamental problems maybe the more fundamental problem well not even fundamental but just difficulties are more kind of face to related ones like how to actually do like guaranteed across shard movement of if between between shards for example they're like it's basically there's challenges there that have to do with like do we wants to kind of force every shards have any more of a second local process and so on and so forth but that's been you're still thinking yes right now I'm still trying to come up with a simplification they get the existing one this design and still look I know how my eyes and ears open for any potential challenges that we have that we haven't thought about because I'm expecting other people to come in with their own opinions about like how for particular thing should be architected eventually cool thanks for telic other research updates one update which is better than to face zero I guess is Els signature so on the standardization I'd say we're you know we never very good place the spec really hasn't changed for the last you know several months with the exception I guess of which is of notes of a very minor security bug which should be a very easy fix like a one-line change riot who is the author of the one of the authors of the webby born a hash function that we're using is doing an amazing job of taking ownership of the standard deviation after that lots of polishing he's also addressed various patents or possible papers and regiments and suggested the workarounds for those and in November between the 16th and this 22nd of November there's going to be a meeting I see FRG meeting where the various people involved in the standardization and at that point I guess the specs you know can be considered you know very frozen I guess another update on the BLS stuff is there's this library called Hiromi and it's it's offered and maintained by CEO Mitsunari who came to to DEFCON and met some of the prison guys and like the it it turns out that this library seems to be like significantly faster than an other libraries like Milagro's dizzy cache a library so like a recent benchmark from the lighthouse people suggest that it's it's 2.4 times faster than an Allegro so we're in touch with the author and we're considering a possible grant one one of the complaints that have had in the past is that the integration with various languages has been you know not so easy so working on simplifying the integration for rust and Java and maybe the languages will be a priority he also thinks he can make his library even faster so right now his parents take 0.6 milliseconds but he thinks he can shave off 10 to 20% and it'll also be good I guess for him to implement a really fast version of the lobby burn a hash function and you know there's also the possibility of doing formal verification on the specific library which place floated around one piece of good news is that ghido in terms of passing has come back so he he had to do a bunch of other stuff but now he's he's available again and so he's actually currently working on on fuzzing the library and final update on the BLS stuff has kind of been a very interesting paper recently by Mary mala where she describes a technique to aggregate signatures in such a way that the aggregated signature is cheap to verify so when you have n distinct messages or regardless of n you only have to pay two pairings to verify the aggregate signature and kind of roughly two and exponentiation so that may or may not be something that's relevant for for layer one and it's still very exciting but something to keep in mind at layer two your whole like lions I mean it's a very recent paper so I guess we need a bit more time to digest that I mean also in terms of quick updates for the deposit contract for more verification should I guess and maybe in a couple weeks so there's a there's still one minor point regarding removing some of the safety checks and we should get kind of a final okay on those within a couple weeks there's also kind of discussions about how we want to design the website to make the deposits so I still still I guess significant work to be done before we want to deploy the deposit contract you know we want to do lots of testing make sure that the UI is good and I guess we also don't want to be in a situation where validators make deposits too early on and they have funds and the deposit contract without being able to use them so I guess there's also no significant rush to deploy at least until maybe we have sort of public cost clients instant cool thanks Jesse any other research updates should I see something here or is a better spot later for wife walk I have that working slotted annex so okay just a quick question Justin could you please spell be the name of the library that you mentioned sure yeah it's here roomie h e are um I and the specific pairing library is called MCL and the author is also the author of like an optimized x86 assembly jet and and he's basically using using this this to get the performance that he got all right thank you do we know he has any plans for armed by the way yeah so arm is already supported so you don't have to use his light x86 tooling you can just use LLVM and that will compel to your arm you have a small performance penalty so if I recall on arm it's point eight milliseconds preparing versus x86 which is point six milliseconds a guy improves at that but as I see so as a seed substance really changing however and putting out some of the specs at the respected specs repository and drafting this new repository which courses to see in a more complete way and try and implement change control process and a standardization staging process this should help standardize our shows and other experimental features going forward and I know change safe is working on life sciences well and I hope to work with I'm trying into the ice yes maybe we'll change safe wants to cover something about their lot coins oh yeah so we're setting up a drink service setting up a monthly like client call I like a working group or a task force of sorts for like clients the goal is to make sure that like signs don't get left behind and really I think it's to coordinate bringing my client tech from four eighth one and each eventually two into production so we're gonna be exploring like research and development updates open questions and like there's a lot of some technical problems to work through but I think a lot of the issue is social and so having like a regular meeting where we can kind of just all sink through the sink through the bigger issues and coordinate will be really helpful and so we'll post on all the relevant channels in the next few days like when we have a solid agenda but we're think we're gonna be targeting in two or three weeks for the first call and we'll be collecting community feedback and all that cool it sounds great and proto yeah I'm supportive of pulling SSD out into its own spec I think we've run into a couple times we're altering guesses e spec and the context that the other Spector was I've been clear it became more and more clear that it should just be its own thing that our spec just points to a particular version so good good okay cool research updates anything else all right moving on to networking updates I have a PR out for the naive Association aggregation proposal in which the auditors locally aggregate with no necessarily sophisticated Trat adji but on subnets before after stations are passed to a shared more global network this is definitely like the bones of something is in place but we need some back and forth between some of the people have been thinking about the networking problems so if you are on the networking side of things take a look at this PR and give me some feedback cool Felix actually just joined us so I don't have to give his discovery g5 update Felix would you like to give us an update yep just this week there's no documentation about the topic index which is well kind of like the big thing I haven't been on the call for a while so more news is that the go and rust implementations are now interoperable for the basic sort of DHT I don't really know where the Python implementation is at right now like I haven't checked recently I think the my loss like to my knowledge Yannick was working on implementing the wire protocol still but that might have changed and they also know that since Def Con that the Java team has been working on implementing the wire protocol in Java and they actually got pretty far with that but I haven't actually tested this yet and then there are two open problems right now and still need to solve before before we can consider freezing this back for for the first time one problem is the topic radius estimation isn't really all that well defined inspect right now and that's because you know do they have a super good solution for this I expected we will find solution to this problem when we actually implemented a second time like we have an implementation of the radius estimation but the code is this is horrible and and it's actually not really clear this is a workable solution and I do think there is a simple and good way to do public greatest estimation but we just and then the other thing that came up during the audit which is about done so basically there was a bit of a pause around Def Con with the audit because I couldn't get back to get feedback on the only on this sort of like initial report that they created but I have given that feedback now so they will come back in a couple days I guess or two one two weeks and deliver the final report and that would both be published and the biggest issue in the in the audit that they but the authority was trying to get through is basically that we should be adding some sort of proof of work system on what identities and it's something that I like I didn't really want to do I even put that in this back thanks to any by the way for posting like two references to so the proof of worker and what that entities is this is pretty old idea this is something that was even present in the academia system and I think by now we basically have like two options for it so we could use equi hash or we could use Kaku cycle and I've been trying to like I play around with with Kaku cycle and making it sort of like integrating it into the into the protocol in encode and I'm not super happy about this change to be honest so it's I think it's still we what I would really like to have is like some more solid feedback from other people who are more knowledgeable about who work what just in general I mean I I guess we we just kind of have to make a decision whether we actually want to work in this protocol or not so this is kind of like the big thing it's still out should we even do this in the first place and if yes then you like which parameters and all that stuff so if anyone has any any idea like any opinion on this at all you can like that the issue that any length is basically did the place to discuss that and that's it the proof-of-work topic I can just quickly mention that from statuses side one of the biggest reason we're prisons were that meaning whispers basically that has a spam mechanism spam prevention listen it doesn't quite work simply because node power so the node doing the work honestly is almost always going to be underpowered your listen to an attacker which makes it very much useless so it's a bit different in with with this type of thing because like the or the discovery or more general this is this isn't just for discovery release more like in general like do we want our notes to like add proof of work on their identity it's kind of something that like if you have it the what this actually prevents is basically attackers choosing their unknown identity in an in an arbitrary way too because a lot of things in discovery but also in general of peer-to-peer algorithms rely on just having the node ID space sort of like uniformly distributed and attackers can actually influence the distribution by choosing their node IDs so if you add proof-of-work then basically an attacker would have to perform true 4/4 many many times whereas a node that just doesn't care about its ID and just once a random ID it would have to perform the proof of work one time so it's a bit different than with the whisper system where you have to put to work on every single message so in that case you do have to spend a significant amount of resources just computing probe work all the time with the node identities is like a one-time setup thing where like you it runs the first time you start to know it and then probably never again so it's kind of it's I do think like it's proof of work isn't all that bad in that context like in the context of node identities it's just something that we really have to decide on and like make a good decision about but please do check this issue thanks Alex do you have a list of scenarios - for the interim process that you had the trust no so basically what we did is mostly like we just ran the clients against you against each other and then age did most of the work really which was like just basically checking in his code where things went wrong and that led to a couple corrections in the spec and like couple Corrections and the goal and so now right now it was like an interactive debugging kind of thing for text so you can just run the implementation and like send the ping message and then see if you get a response and if you do get a response you can see if you can decrypt it in but I am very certain that both Russ and go are now compliant with respect so like a hundred percent so it's kind of if you try either implementation and it works with your sin and we're good basically okay great thank you cool you have some questions and thoughts on the purport but we can take that to the issue instead thanks Felix okay on to more networking things whitewash you'll have an update yeah it's just pretty brief we started where we released the repo of our testing methodologies or what we're doing the p2p so we've we're laying out basically what we're gonna do the specific methods and just some metrics that we hope to collect drop both the discussion and the repo we've already got some good stuff going there so we'd love to have more people though so if you have any thoughts or would like to see how we're testing things please join us there we have some data already it's will be sharing quote so to see it play out make sure anything else networking because that's the needless team by the way since I was talking would it be possible for us to get access to the organization github with the scripts as well thinking was yes of course thank you bye-bye you thinking sorry going pretty bad cold just send it to one of us over some you know my grandmother all right so okay next up we have chestnut discussion so there's a lot here flutter things going on that affect when and what types of test sets happens or a point one of the big things is this days they're update the pending zero nine which will include this modification to the state transition function it is almost entirely simplifying and that it's cutting a few things out and I think Terrence is gone se said has gone through it and when I was writing it it felt like it wouldn't be too bad on your end but that will be we shall see but I did have a few conversations with different teams and it seemed like the general desire and consensus was to get these changes out on the spec get them integrated into clients before we do some sort of larger more orchestrated multi plant test sense it also seemed that most teams some teams have the eath 182 machinery most seams are kind of like ironing out that deposit contract following youth 1 data voting etc and doing some more single client tests net stuff both large the private assets and I think some teams are finding on spinning up some either public test nets or semi-public test nets maybe were majority of nodes are controlled but plant team and on these test nets although maybe dominated by a single client might do some multi-client testing so that was that's my general understanding of where things lie is - there's there's plenty of work to be done with respect to kind of single clients moving forward towards chestnuts while we get these facer or changes integrated are there any additional thoughts any opposing thoughts on tests that's just in general I mean we'd love to be able to run some of that in conjunction of ourselves or we video so we have an easy way to speed up a bunch of instances of the run what's the timeline do we want to use girlie like prism does easier one deposit contractor multiple do we have a an increment right so you can get us lots of eat in terms of getting if for that from the test nets one suggestion is just to make the deposit amount be 32 million as opposed to 32 Eve and that would make it very easy so we can fully fund the contract to had so many patients around the issue using defend them out sometimes doesn't work there's enough Mickey stuff you know inside the crime because sometimes end up like carting started you or there were some issues there way back in doing what I did that the first time so if we can just accept that it's not very interesting to just test that particular functionality at this point it's just think you waste a little bit of time if we can go into them I'm good with that I have about 2000 gonna issue somebody wants them so you know and one more thing the prism contract and turns should speak about that has a clause in it where you can also drain the amounts back down or original sender so it's not like you're losing deep right yeah exactly and to the question of whether it's one deposit contractor also pool it's essentially one per test net that is connected to at least one chain there's also discussion about spinning at prefer thirty nuts I think just generally connecting eagerly is probably simpler than doing that but it's definitely a something we can consider especially when we actually moved towards poetess sense and maybe incentive is not superfluous already net might work better because we can better allocate the ease that can participate that's a little bit online it's a hurry you have your hand raised one idea that I'd like to share is we are planning to do our test net so in the following way we will use the validators from the mock star to kickstart and network immediately and the very first block will reference some current flocking garlic so the validator contract could be used to add additional validators but the network is already running it doesn't you don't need to wait for everybody to deposit funds and to become a validator and we can probably publish some kind of common common line parameters similar to the mock star and if the other clients are interested interested as well I think this could simplify the initial cross client testing yeah that does sound like a good idea if you can share your notes on it we can like you said put something together like the mock circuit runner-up there's another few things to discuss regarding the config so far we actually ended up increasing the ejection balance just for once we want to test our validators can be ejected and the second thing we're seeing is that there's people trying out but people ended up leaving the client running for four square for like two alone or or or or that people people do offline for too long and then senator I show us have is is it's a little too low and then and then and then and then it starts to hurt our finality so that's one config that was active that we had to change and the second config we had to change was the ether one follow-up distance we said from 1024 to 16th distress we don't wanna have people who wait too long to be to be activated and yeah right maybe it's worth either modifying the minimal config to have a couple of those changes or to add a new one just called like minimal test set or something you know should probably try and decide on how we're gonna structure the for for these tests nuts just so that as we get closer to Genesis we don't know the first we the thing with people like use their test night keys on main net and get slash right indeed so you're suggesting starting with a fork version that's way out of the domain yeah it's early yeah I mean like it's probably pretty unlikely but it seems like a good idea here maybe we like start from the like the rightmost bit for big Indians and then done yeah the leftmost bit I don't know something yeah get away out of the range of the folks we expect to use yeah that's good cool is that I don't know if that value is in the config rate where I think we're just using the default value for Genesis of zero yet I think so we put it in aspect but I can't remember it's in the main specs on oh yeah I might be worth adding to config so we can just have that as a parameter in our test lab configs okay there are a couple more things here it's not really enough just get notes going only to monitor and make sure that they're running okay so I know the higher you mentioned that run wanna that's net for the note that the run for cells we can definitely run permission this as part of our monitoring who's that be enough or is there specific tooling that we should develop to help with twenty Turing test nets some things what's uh what's the thinking here our own setup is based on the pro media spec that was published regarding how yep under metrics and we presentation is it going to be enough or do we need to do a bit more or what do people think of that so that just allows you to monitor singular notes write a hurry or is that no that sends it to it's multiple notes to a single you know yeah you can do as many as you like I mean we have some custom setup because we don't want to expose this Prometheus port you open the Internet so in in our own environment we have a kind of custom set up to gather and aggregate all the data in a single place but I think this is for everyone to implement on their own I definitely let's get start there's a push on protocol outside they're doing more rigorous gossip sub and pub/sub monitoring tools I don't know the timeline on that Greg I think you look at that system is that is that something on your radar nothing great left I mean I'm so general I'm doing replications somebody else okay we're building a few like monitoring applications we have like the gossip sock sniffer and you can view these things and I expected eventually there will be a community that steps up from pocket stores and stuff like this that will also have similar things but say on the web right so those are probably investigate yeah there were some nascent interests many months ago on block explorers I can knock on some doors and see if we can get that moving again yeah that's what I mean so I also know prism had a good set up with spinnaker was they were able to do canary deployment test you know that's good stuff so we respond up the spinnaker as well look at the organized around that as well is that something that people would be interested in what is a spinnaker speakers uh I'm sorry my voice is just that so speakers the CIC D pipeline integration that takes a new-build has work flow for that bill you know for example you can test it in isolation in three D six nodes look at the stats get the results see if it's good see if it's passing the disease test anyway and then he's going to make it possible to replace the existing nodes in a definite to the new version in a automatic failover manner without downtime so if we had six clients six different since notes per clients and spinnaker workflows for each of them every time you push a new docker image it would be built you know picked up the test in isolation using the tooling from photo for example and making sure it's working like good stuff and then once you have like the green light from different programs you can introduce it into the test net and it becomes an automated pipeline makes it much easier for people to manage that over time like one concern I would raise with these tools is that they're very centered on centralized approach to managing notes and sort of almost like they're good for cloud and software as a service and that's not quite what we're targeting here so well well you know you're going too fast on me one is it doesn't have to be the same test net even if it's part of the test it doesn't have to be the majority of the test net can be just a client decides to do that that way right and it doesn't affect the whole it shouldn't be the end and all for a test night like if you happen to be using the same contract right and you're running independently you should not be at all penalized or having to interact to spinnaker at all it's just a way clients may choose to to deploy and run their their nodes does that make sense yeah sure as long as we also consider the fact that like eventually people will not be using these systems you should have perhaps oh sure sure that use case in mind as well I think you need both I think if you want to have a painless approach to being able to do things automatically get some updates by email that your stuff is working on out and it's it's much easier to have a continuous deployment in perspective where you can test things all the time you can also do crazy experiment and see his cure experimental PR is working the way you thought or if it's breaking the network right so and by the way I'm not inventing anything it's what prism uses today I think for us it's more about getting the testing quality just we don't want like Piazza goes in and then and then ended up breaking the test net so the workflow is more like when a peer eyes managed to master a and then and then and then a new image is cut so then the image deploy to cluster and then what I read 10% of the traffic to the image and now we have to be ourself like what they all result in measuring the court to compare the page line between the new image and the and the or image and then we'll do some analysis and then if and and if that passed then we can direct more and more and more traffic to that to that new image yeah so this is primarily on test nets in which you control the majority of nodes correct yes yeah okay yes what wish okay so we have a zero integrations for the new stuff continue forward on single client assets related tooling some multi client tests against these single client test sets and I will write up a bunch of stuff on some shared test nuts that we I'll share with you all before the next goal and that's what we can talk in the next goal cool can we talk about aggregation strategy for multi present so I need for single client s name doesn't matter right each client can campus increase their own strategy for promoting scientist and people be interested to implement the 995 I creation strategy maintaining the PR for it yeah pretty much once we have any amount of like significant load on the test net we're going to need an aggregation strategy even up until the point where you have as long as you're if you have a single channel in which everything's being gossiped you don't strictly need an explicit strategy other than aggregate locally and include in blocks but I think the intent is to get this some version of this naive strategy integrated and when multi-client test nuts come around I think that certainly should be we should move towards that pretty much we should as soon as we can on any of the inter outbursts main net components we should be moving towards main as soon as possible this includes aggregation strategy x' SEC I hope versus noise can't where if there's anything else in there so yeah I plan on getting that we need to get that merchant soon and tested and on to the assistants to that end again I'm seeking input and feedback on that proposal that PR okay we'll pick up this conversation in two weeks and hopefully see some interesting updates with respect to its new client tests and until then I do think that we should continue talking about how we do plan on visualizing monitoring and understand these nets so maybe let's pick up an issue or two in the PM repo I'll sort something that cool same with that proposal from I think it was a hurry with respect to how we might more sanely kickoff these test sets while still accepting new deposits from the club yes I'll make on each window p.m. great thank you all right let's move on any general spec discussion as discussed all the times on this there's the phase error changes which will help us help facilitate this new proposal a new phase one composable any questions on that or any questions or comments on spec in general great clear as day or water or whatever they say okay open discussion any closing comments happy Halloween that's indeed all right cool thanks guys we'll talk to you all on the internet and plan on having a call two weeks from today hi everyone thank you [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] you [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] you 