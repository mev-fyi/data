how's it going I'm James here representing abridged this talk is sort of it's called beyond burner intuitive design and incremental decentralisation so really focused on UX issues bridges is a development toolkit and we focused on intuitive design for blocking applications to onboard new users my background if you if you've seen me before I was with the grants team you may know me from there at the EF but this is sort of the new project that I've been working on since April so a little overview we'll go over what beyond burner really means the significance of the application layer the current state of where we are within adoption and then what fixing these issues actually looks like so why beyond burner so the BR the beyond burner is the beyond Berger narrative plus the burner wallet both of these sort of industries which is the cryptocurrency space as well as the alternative meets industry or sort of holistic solutions that are trying to disrupt incumbent systems and they sort of face similar adoption hurdles which is mainly like unfamiliar like experiences and an unfamiliar product which is also somewhat inconvenient for people who want to get at like use it and they don't know how so it creates the unfamiliarity and inconvenience creates this comfort and friction for their end users at a high level it's kind of like I like meat I you know I don't know what this vegan stuff is and and I don't know I don't really like the taste of it or something for aetherium it's like I don't know what a private key is what is gas and why does it take so long to use these applications on top of that we're also building somewhat in a desert we don't really have a lot of user data to pull from to make many design decisions so the and then another thing is this is just another sort of example where we are aetherium has about 0.01 percent of the user base of facebook that's the daily activity users or monthly active users on meta mask divided by the monthly active at Facebook and then need alternatives are sort of significantly ahead of that with the beyond burger narrative they've kind of they've gained a half of a percentage of the market of the meat industry which is pretty great so we needs a 50x dough user base in order to match what they've done there so again they be on burger a narrative they kind of broke through that stigma of meat of imitating that meat flavor so you can be a mediator go to Burger King and buy a beyond burger and be as satisfied and it sort of points to the fact that users will choose holistic solutions if it's convenient and comfortable for them and that's sort of what we need to get to for aetherium applications to actually be adopted by end-users we can't sort of shove this sort of decentralisation down people's throats right it's not not as useful and so the first I think the first real iteration of this was the burner wallet with Austin Griffith he kind of made onboarding a thing a teeth Denver in 2019 that was the largest point-of-sale system that has been spun up in a theorem ecosystem since inception it created instant value for people that were on the ground that are wanting to use that network and so how do you onboard well you have to inspire trust within your user base and it also has to be efficient and convenient right the old paradigm of key management is challenging I see the future as key management private key management as being sort of sub-sect to a new contract based management system my mom won't likely ever download a private key most likely right the new paradigm that we're suggesting and beyond burner is to use these burner wallet keys or ephemeral keys with a contract account and so it's essentially a multi sitting that you can control funds with a number of different keys and all of those are potentially temporary right so there's essentially there's sort of burner keys that are tied to it to a contract this is a design that's really been pioneered somewhat by James Young and this is sort of a quote from hem programmable money deserves programmable access which I fully agree and I think it's a pretty sort of exciting new frontier to be developed and so why beyond burner the burner wallet is an instance of the beyond Berger narrative and the success of the out beyond Berger within the etherium ecosystem so why do we care about mass adoption I think we need to talk a little bit about the city was the application layer the application layer is where value is delivered to end-users and so that's really fundamentally important if we don't have that value delivered all of the work that we're doing in the back end with scaling it's charting etc will go to waste or it's just kind of we're developing in a silo so what does it look like today well it's mainly defy right the killer app of aetherium is like maker and I SEOs it's it's you know it's it's pretty maybe prediction markets but that hasn't really even really caught on yet so mainly it's like you're trying to make and save money the future of aetherium it was is a different like we have a lot of idealistic idealistic the philosophies around the future and your Dean had a nice little Twitter rampage about about this obviously so what trolling the idea of this but a lot of I SEOs did come out and 2017 very serious about the menteng new business models around blockchain around an immutable ledger system to actually like solve real world problems we also have the unbanked essentially we have the potential to create better systems if we gain this adoption right and so what does user adoption look like mainly makes money creates better systems and that could also mean like providing knowledge or comfort or like social belonging dopamine to the end-user like all of that stuff is is essentially value for them and fun is also so we've included in that value proposition potentially and for developers if you get user that means you can actually make money which is a huge thing because today the money is really reserved for exchanges right who no one is making real revenue aside from exchanges and consultants more or less right and so that's sort of the exciting proposition is that you could make a sustainable ecosystem if you actually develop systems or developers are able to build applications to attract real end-users and so to the current state of development where are we so like I started mentioned earlier we're really focused on scalability this has been the Holy Grail and this is probably 90% of the talks that you've heard at DEFCON thus far but again we're sort of building in a desert where we're sort of siloed we don't have a lot of interaction within these systems that were that were coming up with and even the core of our ecosystem you know we still haven't adopted etherium to like pay for things within our existing infrastructures right and within the the companies who are really pioneering this it would be great to sort of have a bit more dogfooding right for these things to happen and so I also propose that we're sort of focused on at least from a narrative perspective potentially the back end more than we need to be because the front end should be driving the back end solutions this is another quote from James working with him it's really great he just has like a lot of wisdom to share but don't like the perfect be the enemy of good probably not original but attributing it to him so the current state twenty five billion dollars was raised in 2017 or since 2017 there's about ten apps with 20 or 2,000 users each on the daily again 0.01 percent of the Facebook user base very few have product market fit if any so we're well within the chasm right and the reason for this too is the developer challenges this is a survey build by fluence in 2019 if you haven't seen it I think it's probably the best UX survey out there today and they kind of just go over all of the issues with developing blocking apps it's it's really difficult it's you know we're both developing this new interface and then you have the tools that you're also developing at the same time and there's a lot of issues so again you're coming back to you know we're sort of forcing private keys down and users throats more or less this is also a stat that I saw it on another presentation that I thought was really interesting I believe it comes from the cryptic radius study so how do you fix in user issues and I'm gonna go back to onboarding and scaling and MOOC but focus on that onboarding side because this is beyond burner again so it's again focused on that account contract with ephemeral keys to create a programmable access of funds and if you don't have effective onboarding there's no reason to have a state channel or a second layer solution there's no there's no real need for e 2.0 if we don't have enough end users to drive traffic the approach to really understand this is you had to know your user base create intuitive interfaces and then iterate with the feedback that you're given and that a lot of that means to ship quickly and and gather information as quickly as possible mmm and so again sort of iterate why onboarding sucks it's uncomfortable and inconvenient primarily and I think everyone can kind of appreciate that I'm sure everyone has tried to like talk to someone like hey yeah that's like great you know come on to the meta mask or something and whoever you're talking to is like now I'm not really sure like compounds kind of weird I don't really want to download this thing so hypothesis that we developed a bridge was okay if we just use web to like flows like Atos authentication for instance we could maybe on board more users and that could happen and so we sort of went on a rampage we came with an SDK in June and on been like integrated it with as many applications as we could we hit like eight or nine essentially and so all of these applications sort of have a bridge tooling integrated into it and the most popular have been Yolo wrecked into house they actually have real end users if you want to actually experience what this account contract assign feels like definitely check these both out your ex is just a binary options trading you know betting platform and then Dow house is going to be a Dow you spin up a like the house right so it's they have like 10 different dolls moving along there which is pretty exciting and what we found from that is sort of all of this feedback was that there's two types of users that you're looking at when you're developing blockchain applications one is for web 3 and the others for web - so like web 3 users are really interested in you know privacy web 3 provider they prefer meta mask and self sovereignty of course it's I spoke with Nate grittier who is building in what 3 as well and he's kind of describes as coddling an ember and a damp forest where you're just trying to get it to kind of like keep heating up right and of course he's like meta mask users for web 2 users though they kind of they likely don't care as much they're they're looking for just like intuitive fun things to use which burner and like the abridged like smart contracts or account contracts is potentially a more viable solution and so the common denominator everyone wants a seamless experience they don't want to think they want to they don't want to trust what what you're doing and they don't want to waste time in the onboarding process otherwise you won't you won't get there you won't be able to show the value of what the application is so to us that looks like at least at first when someone is getting used to understanding what decentralization and what web 3 provides or aetherium offers no seed phrase download native mobile apps are really nice all the onboarding occurs within the application so no needing to switch screens and then account recovery options are also included within your management system so again we want to create instant value for the end-user and the account contracts are really the way potentially to do that it's a more flexible way in the ephemeral Keys essentially the account contracts is in particular useful these you can recover your funds and you can also uniquely permission each key for different use cases right so each queue could have different access and this is sort of what beyond burner really aims at you have a account contract that has multiple keys all for different reasons you have your phone your computer your guardian your mom or girlfriend or you know whoever maybe you have a Portis or tourist integration as well as a sort of master reset EULA Rex maybe you're interested in playing you also play gods unchained and you're part of meta card data all of those could have different levels of fund access and that's all programmable so if you end up losing your phone thankfully you have all these other keys that you can build your your next phone with you can recover your funds through through a social recovery process and again this this system has a lot of possibilities that have yet to be developed in terms of a planking and recovery flows so if you're interested in sort of building that kind of stuff please come talk to me after this and so this kind of comes on to incremental decentralisation again you want to soften landing pad for users to come into the ecosystem and sort of understand what's going on before you just put them in the deep end and that comes down to sort of providing that layer of trust and sort of onboarding them into something that looks familiar while also giving them full access of their funds but but not not showing them a completely new system at the beginning and this also to some extent I think that DAPs full decentralized full stack decentralized apps have a very simple chance of actually succeeding in the near term it's more about like aetherium applications where you have hybrid solutions that are using like AWS and firebase or you know other sort of like Simpsons to get things that people want to use the second piece of the onboarding puzzle is Fiat ramps of course and you have like wire moon pay ramp Network and carbon all these different solutions that I think they're all sort of competing the same space it's really great that that's a competitive area right now and then lastly if you have apps you need off chains actions if you have users or on your app you you likely need all Change transactions in order to make a seamless experience and all these teams are doing a lot of really great work to provide like fully decentralized solutions for days off change transactions at abridge we actually have a off chain system as well but but it does have a degree of trust it's using a central hub that you could potentially conclude with there's I'm not going to get too deep into that but that's that's kind of like essentially the the idea and so to fix the UX issues again you just need onboarding and enough chain transaction so that's kind of the combination that you need in order to make a seamless application flow and if you want to see another example you can like scan this app this is actually a native mobile app I don't know like how many people have actually used like a native mobile aetherium app that's not a wallet anyone ok sweet couple all right so but this is a native mobile app that has a account contract as well as the bridge sort of off chain solution integrated into it that you can sort of play around with it's like social tipping for content so the takeaways here the theorem is really difficult to use for a lot of reasons while decentralization is really really important it also inhibits to some extent user adoption if it's going to be taken to the nth degree from the beginning there's also really difficult tools under developed tools to use within the ecosystem to develop these applications and we have no user data to actually say what tools are really useful right the okay the need to create trust right we need to create trust for the end-users through more intuitive design to make it convenient and comfortable and programmable access is potentially a way in which to do this through account contracts and so I sort of been proposing the ecosystem should spend about as much time on this issue maybe not as much obviously I think the nuances of connecting 82.0 is going to be quite a task but getting nailing down this flow also requires a significant amount of effort and iteration and it won't happen overnight we need sort of I'm sort of encouraging pragmatic development and hybrid architectures and sort of continuing to ship solutions to gather that user feedback and and sort of focus on end users rather than maybe the most idealistic situation possible so that's this is me on the Twitter and it's abridged if you want to check out what we're doing yeah that's that'll do [Applause] you 