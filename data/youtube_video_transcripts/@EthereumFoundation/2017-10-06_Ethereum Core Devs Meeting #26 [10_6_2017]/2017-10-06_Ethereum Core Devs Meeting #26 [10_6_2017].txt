[Music] [Music] [Music] you [Music] [Music] [Music] [Applause] all right Internet can you hear us now I can great someone on the call talk again I want to test that part one two three four all right everyone can be heard now cool sweet okay so for part one there was nothing for subtleties or questions we need to work out from metropolis let's get two updates to testing let's see Martin's gonna be late yo eg do you know anything about the latest on testing updates KC and Guido the machines mingi making great progress on the fighting pot I think they found one or two differences between clients so maybe the funding speaks great I think I just saw Casey join Casey can you hear us oh I don't think your mics working if you're talking okay he'll probably be back so I don't think I think we'll just get to testing whenever KC comes back let's see who else do we have okay the test net launch as far as we know things are still going okay on tests net has anyone put anything else on the tests net that tests out any of the new features or anything like that that are coming to Metropolis so that we can see how clients react I haven't tested anything on a test net but I did test the mod X on TMJ s and CPP for doing RSA verification okay cool would you be able to push that to Rob's tenormin key after Monday once it's once it's switched over yeah I think you could make it happen great and yeah if you do that just let us know when you push that because once you do we want to have all the clients listening in or that I guess the testers looking at the clients and seeing if there's any abnormalities once the transaction is pushed so it'd be perfect if you can or like just let us know the transaction that you pushed it to or any other information all right yeah go through thanks so much hey Casey getting here us now yeah can you hear me now yep can hear you now so what are the updates as far as testing hive and the other stuff well the first tester found a consensus bug Byzantium consensus bug yesterday so that's pretty exciting oh what what are the details of that or was it just one that like he just ran all the tests for and it just kind of came up that was it between parity and death so there was a slight issue with return data size for built-ins if Casey is talking about the one that I think is yeah that they're say yeah Arkady made a pull request for that it's currently interviewed okay great well that's good at least we know that that I guess fuzzy testing is working out pretty well let's see yeah I can paste a link to the the first testing output yeah that'd be great okay cool and then um anybody else have any updates to testing or anything of that updated about TMJ as you can men is you might already mention that it has stuck on sunblock so I have a produced locally and going to investigate into this problem okay that's great Mikael I I hope it will be solved so before we plan a release for next week so I'm going to fix it s up and yeah I hope it will be okay okay great always perfect so and actually if there's is there any more updates to testing because if not we'll get into the clients and actually with this for every client I go through can you let me know if you are going to have a client released by the 17th that would be compatible with metropolis I mean I already know a few of you or either have or will but I guess I just want to know what which ones will be ready and which ones won't officially so let's see was there anything else the first one is death so Peter I know that you all had just released one point seven point one is there gonna be another release do you think or is that it no unless we find something that maybe hotfix this is it we will postpone any release up until after much Byzantium great alright parody yeah unless that's something else comes up we should have one point eight point oh and one point seven point three before that time both that's incompatible okay great CPP aetherium I used to be Pavel actually we haven't fought about this but I think what we can do is just attack attack marking the code that is capable of doing yeah metro police in a transition okay great I'll reach out to you for that so I can add it to any post of people curious to run that aetherium J so Michaela I think y'all had a release that has the block number in it or are you gonna be having one we have it in the well branch so we have a snapshot with these block enabled in Robson and in the main net but we haven't we haven't done release yet public releasing okay and you think you'll do one before the 17th yeah sure we're going to do it next week perfect as I say yeah yeah and then I guess aetherium J s that would be Jared I think or Casey yeah so we're looking pretty good I know we ran into some issues originally with getting the changes to work in remix but Casey stepped in and was really helpful so yeah we're looking good so great so there's basically a release or a download that is compatible with Byzantium that has the block number and everything uh yes okay great you know Ichi I know you put the yellow paper changes and I saw that Gavin merge some changes lately so has there been plans or communication for yellow paper update that's not as necessary that I'm just more wondering um here I'm working with Martin Linda about the rules about empty accounts we compile the contracts I'm doing an experiment so I implemented the go a certain rules in chicopee theorem on trying to sync the minute I'm now around the Shanghai attacks on the my machine is crying but I'm cool okay that sounds good so Piatt that metallic sorry what were you asking you know no problem so basically I'm wanting to know if the client is going to have a release before the seventeenth that would be technically already has had a release like including pushed by which and does have but actually no sorry I don't I don't think that release technically hasn't Walker number four point three seven million story gone yet but it doesn't matter it's too much given that there isn't really such a thing as a running PI aetherium no it's more testing library okay sounds good you know you know all my problem gold has been in the occur oh nice and stick the block number and it's not difficult okay great and I mean yeah it's mostly for research but I was gonna make a reddit post here in about a week or less that kind of gives links to all of the clients that are ready so if you want Python to be listed just uh yeah I'd make a release just to make it a little more clear for people let's see I don't think there's any other clients did I miss anybody okay great yeah Part D was make sure clients are ready for the hard for and then let's see there's only two other ones one of them was one that Christian wanted to discuss but I know he's gonna be a little late so we can kind of start that discussion and then recap it with him a little bit or just I can do notes for him later this is about account abstraction so let me make sure I'm understanding account abstraction was actually gonna be an EIP 86 right or this the the start of it okay so since we were having those issues and concerns that I think were outlined in a post by KC months ago when we decided to split in the two has there been any progress on or thought on how to fix some of those or how to go forward with it in Constantinople um I think so there were a couple of issues right so one of them is that it was just just figuring out what the minimal kind of combined your acceptance strategy would be and what really the minimal thing to do would be to just roll it out as a hearth work and have no liner acceptance strategy initially except you know it presumably we loved contact one liner and just ask them to make some kind of just like make some kind of text box or people really want to submit transactions they can the and then basically just like slowly expanded from there the other issue actually it so and I did write up my documents that all and it still worked in progress but let me just quickly yeah which in some place okay I'm excited to talk about what the issues um in a challenge I'm an abstraction are one of them in years so this issue that you have the support transactions like production with the exact same have to be included place which is are you theoretically it does break in invariance though it does so at the call and I think as I might have said before with the benefit of introducing this other invariant which is a purple initi of a block is no is a no longer it's the dependent at all so you know we get but basically the problem is that if we don't do that then we would have to have a built in non scheme and that would I it wouldn't call would get the abstraction scheme because it would prevent us from just the rug really easily going down to one accounts type so that was one of the challenges and then the other challenge has to do with things like efficiency so basically it is like we don't really want you it really wants to have an extra two or three hundred bytes so lying around for every account and you know what that turn into this being even being even more state float I mean there for the transaction hash issue inclined to say that's more something for the if developers say that that's really hard to handle then we can try to work around it although my personal preference is that is to try to move toward something like that eventually the as for the other part to do with efficiency go as there might be some other Yankees that could be included at the same time that would make the sort of thing easier that's it's my gonna main thoughts so far um on see if it's if the file is already there here we go there okay so basically issue money fission see issue two minor exception strategies issue three transaction double inclusion issue for accounts creation so if those are probably the main barriers that I think that I see so hard and at this point that I think it's still worth kind of we thinking a bit more and actually might like personally I would even say that at this point give him the I'm gonna get fairly a strip given the level of just difficult evil but seeing you happy is in general a thank you there are other things that that I would say might might be equally complex and have higher priority such as scaling paralyzed like paralyzed ability and scaling improvements so it might be worth kind of thinking about trade-offs as well well anybody have a response to that or other thoughts yeah I mean I agree with a prioritization but the parallelization the EVM performance is definitely something that could try to have the you know if you actually try to get if you use the if you ever use the chain for anything non-trivial like I don't want to like this likes your stuff and they and it's like starts thinking I'm more than happens every clinical blog face it's very hey Vitalik can you meet your Mike gets to having tonight oh yes sure [Music] could you repeat just the last couple sentences Matt do you I said uh yeah like if you if you try to use the chain to get stuff that's more than like you know three four million gasps you know like the the miners must have some you know spread because you know you can say look this is from Wheeling gasps but then I really use as a hundred gasps so it's actually quite hard to get high gas stuff into the chain now you know if the if it if it's three formula gas actually it's that it starts to get into into the non-trivial use cases and and you know that stuff is this becoming a real bottleneck for the chain so if we if we can do no scaling and parallelization to get to push the effect of gas limit to fifty million or something that would be you know like I think if we if we actually can make any any a set of improvements that even even like a 4x4 factor improvement that think that would be to prioritize that over you know accomplish direction which is probably gonna take a very long time for the rest of the ecosystem to catch up with anyway okay so it's an agreement oh go ahead of italic I'd be interested in seeing it in getting a and of difficulty estimate for basically a moment how long it would take to implement let's say actually two things one of them would be GME's 648 and when I say implement I don't adjust me an implement in the simplest possible way I actually mean like implement it in such a way that you actually have you actually benefit from the parallelization and they look like on a neat or machine you'd actually be able to process the champion eighty times faster and the other AI pts I didn't want to call attention to are the ideas that have to do with a queering trust accounts so I think that's a 168th in 169 let me see if I can just peace to those in here now and basically because I feel like especially was the increasing amount of usage that we have so far we probably have a huge amount of dust that could be cleared out and implementing these two could possible you know and we could try to measure how much it would reduce the state size but I have a feeling it would be by a fairly substantial amount regarding the dust accounts one interesting question is so if we kind of assume that dust accounts can be completely deleted meaning nonce balance everything then if I recreate that account a bit later it means that I can recreate the same transactions with the same hashes and everything and those will actually appear multiple times in the chain well on so efe 169 improvement okay I have to look deeper into it I haven't read them it is definitely an important problem okay interesting I'm just looking at the IPS for 168 and 169 so is this so the definition of like dust accounts I'm just trying to make sure I know it's there's so little ether in there you can't actually get it out right so yeah and then there's a chance inevitably nothing I see so somewhere about sorry I just wanted to give an example that for example one way that dust accounts got left in the system is that if you want to transfer if you want to sweep a walnut contract basically it's impossible to sweep it because the outer cold to just send it through somebody else will retain a bit of gas that's that will never be freedom okay I see and is this gonna be a problem when contracts can pay for themself or is that gonna help alleviate it well it's basically just getting rid of this junk okay cool yeah I think I think it's also worth mentioning it's important to have this kind of mechanic because you know like if whenever like with Matt was a Miss Fork if people actually start using ring contracts you know that will create a ton of got ten of these dust accounts because you know the the ring contract has slightly different gas usage just because of how the curve operations work and the hash to lift the curve point so yeah it alarms generating contest accounts Christian I just saw you joined we're talking about item 2 which is account abstraction and metallic posted a link in the core dev chat and Peter reposted it in this chat that kind of goes through some of the abstraction of proposed proposals for metallic and Matthew metallic talked a little bit about what to make priority earlier so yeah did you have any thoughts christian specifically and if they've already been discussed we can just kind of recap them sorry I didn't have time to read that nope no problem yeah no this was just posted I you had just posted before the account abstraction discussion and it said um I think we should slowly bring up account abstraction again how did tool sets providers think about it and do we find solutions that are better in the meantime and tool set providers that's just like developers right yeah I mean developers sorted app developers which includes blockchain explorers and exchanges so I mean I don't have any specific proposals I just think we should get it on the agenda again after we postponed it okay sounds good let's see any other thoughts or comments on item 2 okay so item 3 is the reducing gas cost for s store actually accidentally left that one on there so it's the ephemeral storage discussion that we kind of just touched on lightly last time and does anyone have any comments on that this is one of those that was over my head so I don't know if anyone had any comments sorry I do have a comment on point - yeah sure the 382 of code and somewhat connected and we have postponed it and you know which part would we want to get sorted first create - or the entire account abstraction hmm anybody have comments okay I think after Vitalik types this message on the getter was it who wanted to bring this up was it Martin something about importing difficulty adjustments test yeah so just reminder from last court of call we mentioned that there will be difficult to adjustments tests which we can turn into block chain tests but they live now and have a blast couple weeks lived under basic tests in the tempest polar and they have been regenerated purpose on film since we came to black box testing on them each time needs to manually put them into whatever test harness they're using so GAF has certain over to param death I have no idea status for a third day and therapy yeah just shuts up about that parity and aetherium J did you all get that and do you all have anything right now and testing for that yeah I don't think we have the basic tests included we can start on that yeah I don't think you need to do the full basic test but they'd happen to live in that folder and you're just it's very simple constructors no of basic things that are needed to calculate the difficulty yeah pretty self-explanatory it's yeah I must not have the sub-module update yeah are these like lots of randomly generated test cases like would it be a problem if we were to transpose these as unit tests and our implementation or do you think it's better if we draw them from the sub module they'd be subject to change very often I don't think there is something to change often but if they ever if you ever need to change anything they will be regenerating from scratch because I think there's some random element there as far as I know there is so they won't be exactly the same if they already generated so it will be better if you import a JSON file okay I can file that to be done perfect thanks cerium J could you please repeat what this are we talking about now we're talking about test score difficult adjustment that's all in a basic suit yeah yeah they reside there yeah yeah thanks Martin so I haven't been at this test I guess this week word yeah Earl this week so we pass them if this is the question yeah perfect yeah yeah they have and I also asked about the issue with difficulty below the minimal difficulty were or the press you know yeah so I have just ignored those well now so have yes we did the same thing we ignore because basically the only thing is the tests have been generated with some of the tests have a difficulty below the yellow paper define minimum difficulty and basically the formula is not defined so any such test is implementation-specific it quark so the gap time give ignores those specific test places okay thanks it sounds good any other comments on that and also Dimitri and Martin do y'all have any other comments on testing in general we went through that topic I think before you guys got in the room I know that's already talked about it I was happy to see the consensus issued by the fastest thing so I'm really glad that we got that whole trace there's some functionality into the client great Dimitri did he's actually having a bad connection right now it looks like if everyone could refresh the agenda I added just a couple more topics let's see so we've already gone through three pretty much does anyone have anything else on testing abstraction or the ephemeral storage s store stuff oh hey left Terry are you speaking because it's been making like weird noises okay most are just a temporary thing so item four is the IP 730 strict encoding order for a bi so I brought that up was it x''k so Alex if you want to bring that up go right ahead yeah so basically and the ABI encoding dynamic types have an offset where the dynamic type itself is included and there's no strict order and forced by most of the decoders currently and the example there is if you have like two strings and you could encode it at least in two different ways and it would result in the same decoded data also caps could be included in the encoding so they're infinite number of different ways to encode any of those and notice came up as a concern if he would wanted to use a bi encoding input in pre compiles such discussions were on the Blake and the one of the paring discussions and so the proposal is to well basically use a define a string constrictor encoding and enforce the shrinker encoding in if it's used in pecan pies and thirdly we could try to enforce it for contracts and that fair it really depends on I guess it's not really part of the EVM it really depends on language designers whether they would want to enforce it or not but we could definitely enforce solidity to only output strict encoded ABI which probably is already the case and it could have a mode that it rejects anything which is anything good it's strictly now the last part is probably the way to enforce all of this is by creating a test suite which has in all these cases as failure cases and hopefully all the major libraries would would be tested against the test suite and but any any comments on this so yeah I have a question on the comment and the comment is that I think it would be really good to Rick picked up a bit so he can puts up a wrap around the offset with a minus 1 integer and stuff like that which you can't today I mean dynamic right but the question is backwards compatibility if there has been like serpent versus solidity calling contracts and they have used different ways to encode the same content and yeah take advantage such issues yeah I think the main steps we could take is actually collect all those cases which we would like to restrict and define a test suite and we could definitely enforce the stricter rules for the new pre-compiled if you choose to use a bi encoding for them and we could definitely enforce maybe solidity to encode the stricter mode but the question that comes in for the inputs for solidity contracts or serpent contract sifters that there would be any any gold usage which would use non-strict a B is so solidity has always used the what you cost-effective mode I mean it's just the specification itself already only allows a strict mode but decoders have always been implemented in a way which is more flexible so by just taking the the pointer as a pointer I mean enforcing strict mode in a decoder that that's a certain trade-off because it will remove or destroy one of the performance guarantees that the ABI encoding has maybe that accessing a single element in this encoded structure only requires as many lookups as this element is deep inside structure and if you want to yeah basically check the validity of the encoding you need to access a lot more having said that of course the solidity decoder in most of the cases does a full decoding and this doesn't make use of this property anyway but what a question I would have is what is the benefit of verifying the correct order of the elements in the decoder so my under reading this VIP it seems like one thing that was mentioned his preaching miles because like that's something that everyone has their validate in the exact same way although the thing that I would reply to that is that so far look we do not have even a single precompile that's actually defined in history now in terms of accepting inputs in the EBI format look we basically take care to define in the end the way every pre-compile accepts input exception but all just very explicitly with that um what the hell minute like be it without trying to your point I push it to you even and equal the ABI in a lot of cases so aside from pre compiles there's basically I mean it like this would basically just be implemented in high-level languages the main thing that the main benefit like the main benefit of this checking in general I suppose is that it which basically meets bugs fail in a way it's some work that's more graceful so these do nothing instead of you in the wrong thing but I'm not I'm not sure i order is necessary necessarily one of those cases you know there might be mine there might be more spooky or encoding so like for example bear but you have to a point like if you have to variable length numbers and or two variable length values in the API and then they the pointers both point to the same thing or the pointer is point to memory basically that memory slices that all of that overlap each other or intersect each other surround each other or whatever and theoretically there's a whole bunch different things that could be done but in order for that sort of look in order for any of those to be an issue though it basically would have to be some kind of weird malicious API encoder yeah and I'm not sure that EBI encoders that are malicious enough to do weird encodings but not malicious enough to provide just [Music] specify the wrong data are but colleges worth including as part of the threat model so I agree that the the pre-compile is an issue and we should probably enforce just the encoding exactly as specified the other risk I mean this is stuff intersecting yeah I mean that that might be an issue but I mean one thing I see is I mean it is not a badge active encoding right so one thing that might be dangerous is that people think that the hash of MS tudi theta is unique for for the data that is input so you can craft to two inputs that decode to the same data but have the different hash but I guess people are probably aware of that anyway I mean you can add trailing zeros and in fiber there's no chance in hell I'm going to expose MSG today so yeah if you general it seemed like if you wants to know if there's if you want to be secure with this sort of thing you know the thing that probably makes sense this which try to just make a tuple explicitly you know use a person index exactly we should probably we should probably keep the ABI encoding flexible and only expose the decoded data to the language so that it's it's not this year no but it is the same issue as sending truncated ABI and which I think has caused some issues in some of the contracts before so it's more like a security question in the long term yeah I mean we check truncated API in the new decoder and we can check truncated data in the new a decoder but checking that the pointers are in aspect order as part of the decoder when it's not consensus relevant I think that goes a bit too far okay so we should discuss this AIP more I'm thinking offline and bring it up next meeting does that sound good Alex yep um I guess just any help in and see if anyone has seen any any weird encodings just pop it in there so we could at least collect a test suite great um let's see where's the agenda cool let's see Demetri can you hear us now yeah awesome did you have any testing updates I think you were the last one who hasn't uh who didn't go so I'm preparing a full test regeneration I've added a new feature so we could not check that every test that we have is actually updated with the test filler so now test has a hash of the filler and one was updates one of the reason updates was that me now check that there are no tests without fillers so overly removed some of the outdated tests from the repository and right now I'm preparing this food test regeneration this will include all the high test regeneration and I didn't see test update using C test tool I could now run test generation in the threads this is significantly increasing the test regeneration process awesome all right anyone else have anything else before I go the last topic you know yes left Aris yeah go right ahead if I hear mics work yeah yeah that's a small question I just wanted to make sure when and which version of parity will have or is it if it is already there that transaction is it stainless we need did you get that question of italic oh yes so it's a question about the transaction received state whose feet oh yeah we changed it to status instead of status code and is that going to make it easy to me release and now or not yet no but it will be we haven't actually I think made a release yet with the status code yeah IP but it will be in the release that contains no mod the threes moments the status code in the json-rpc yeah yes in the uncertain you see it is there forget right now yeah I think you guys have talking about the same thing oh yeah I'm gonna put a link to the poll across in your jaw okay great that's your question left Aires yes I just wanted to make sure that it's there and maybe we if we can find someone from either scan to kind of update the UI of feathers can if it detects that the transaction receipt has zero because right now in the robson for example it doesn't do that and all of transactions that even very vertically appear to be successful and for non-technical users that could be a problem because they would see a Thurston and they would think everything is fine while actually there was a reverse I see all right I know the devs for ether scan and I think eighth floor there's a few other ones that probably need to know this information so I will get you in touch with them all right this meeting soon thanks so much and yeah that actually would be really helpful for people especially ones who are less technical who need to know if it was reverted or not so yeah I'll get you in touch with them and I think that's good Alex did you have one more thing to say I think I saw your mic and me and me no oh okay great so anybody else have any other comments cool yeah don't just just one quick thing for me anybody who works on e theorem jeaious on the call I was well I'm working on a contract to like for certain BN reg signature stuff because if anybody hears on the call can be told me like has that the a theorem Jas we haven't been tested at all with the precompiled ah yeah it has its and in theory ingest we compiled the the parodies BN twenty-eight curved rust library into to a SMGs so if they're ingest VM uses the an ASM asam script and compiled version of the parity BN library okay cool thanks yeah management rust developers as a was and success story cool all right anybody else have comments cool last thing EW merging and updates so there were a few things including snappy compression and what else all of the ENS ERC's and I think something that Alex put in lately the designated Valdivia instruction basically a bunch of a IPs and ERC's had not been put in the finalized di peas table so I fixed that if you all want to go to the link if I'm missing one or if you guys have an EIP or ERC that's been approved but it's stuck just let me know and we can go through and look at it and either approve it or go to the next step toward the approval process so just heads up to everybody to go in and check that out especially if you're a IP or ERC isn't listed that has been declared approved finalized whatever you near one 609 it's on the final list but the status is draft yeah I should probably take that one off but because it's gonna be final really soon and people probably want to see the byzantium hard fork stuff to know what a IPS are in there I did I just put it in for people you know whether it's money or now is on purpose but it is confusing because I had the charts called finalized II IPS I might change that Robert did you have a thing yeah actually the dev p2p snappy thing got me thinking so I think that's a good change but it remind me of the death PGP V discovery v5 proposal that's been floating around does anybody know what the status of that is its host it was an EIP yeah so felix has been working on for the past maybe two weeks basically is focusing on on the discovery b5 it's going to be his topic for Def Con and he's actually hoping that he can prepare all the documentation for Def Con and then we can have a phase discussion at Def Con to just iron out all the bugs and stuff like that so I'm I'm not sure are you Artie people coming to Def Con because it will really help if you could just sit down on a table and just have a discussion yeah a few of us or should see you there yeah definitely done some Felix is definitely aiming to finish documentation by that time so it can be discussed properly great if there is a draft that someone feels comfortable sharing would love to see that as well yeah of course I'll ask Felix I'm not sure I don't think I can get to catch him today but I asked my Monday to ping you guys if he has something cool okay what's that a IP number I'm not sure whether it's in the IP or he was just working progress that's been a problem all right sounds like there's gonna be a parity guess beachside meeting with margaritas I'm gonna put that down all right cool I think that was the last thing does anybody else have any other comments agenda topics anything they want to discuss I have comments for the eep list sure 170 is twice in the list and 145 bit by shifting is in the finalized list but it should mean the constantinople was that number again and one four five one four five ah I see okay and what was the one you said at first I'm just trying to save these at 171 said yep it's in there twice okay thanks so much I will definitely fix that oh it's finalized but it's okay that's gonna be coming in to Constantinople that's right perfect okay I'll take note of that so the hard fork is going to be coming up before the next core dev meeting the next coordinate meetings on the 20th and the hard fork is on the 17th or roughly around that time is that said actually this is a good question while I'm just finishing up is that still the case that the 17th is the date approximate date of the hard fork can anyone run a calculation on that appreciated let's see it's on the current different ecology 2941 the walk time twenty nine point forty times damn one five seven three blah blah blah blah number four three two four zero five [Music] I'm already four three point three seven million we'll have him on the 16th 16th [Music] you know looks like on hash camera has been holding stable and it's gone bad couple of minutes that was basically exactly 100 Giga hashes right now great cool yeah expected a respect to has power will do on time you'll end up because the edge of the Walker reward per second will increase again though the difficulty will do a large like down on the 17th and it will look very clear is on the charts what was that last part you said there what on the charts areas on the chart Oh hilarious okay great okay oh I forgot is ranked be forking on Monday Peter yeah it's shuttled around Monday at 10 o'clock at UTC give or take okay great cool it's Kovan planning on anything for that does anyone here like involved in coven Testament alright I'm off to reach out to melon or I'll say it one more time Robert yeah so we'll probably bundle that in with some other changes to Co Vince consensus in general but most likely before the zantium on the main net okay great that sounds good all right let's see all right I think that's all guys there's not anything else thanks everybody and well we will either talk at the hard fork if something goes wrong or we'll talk in two weeks Hudson quick question yeah sure no you will set up a fork monitor for Manor right I will set up some type of fork monitoring you mean like a call or something no no I meant that we have that stats page for upstone that's that drop stand up if you're in that word yeah that one uh we casey set up the last one Casey you do you have any plans to set up one for main net yeah we'll get that going for me not to sweet great thanks Casey and I think I think that actually supports a bunch of clients now how many what clients are on their java c PP guess and parity yeah that's right all right cool great any other comments or anything yeah I don't know if you are talking about it well was there an issue with the theorem day on that block or was it just no pull over oh he talked about Java yeah if someone said that their parent a node seemed to be stuck on starter for drops on the board was that an issue or was it just it's the charts I mean it's not under each yeah now it's all thought well I think McHale has a comment on it yeah a test talk and I've just made a quick chicken you can say that the problem is with the log bloom so I will investigate on it so it's not a consensus issue as I absolutely before okay thanks for the update any other comments great I think we're gonna hit exactly an hour yay all right talk to y'all in two weeks bye everybody [Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Applause] 