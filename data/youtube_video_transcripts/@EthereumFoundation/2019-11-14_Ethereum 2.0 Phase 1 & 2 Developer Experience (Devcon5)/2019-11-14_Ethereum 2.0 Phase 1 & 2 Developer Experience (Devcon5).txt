[Applause] good morning thank you for coming thank you for getting up so early to attend a breakout so so the 2.0 phase one is two separate experience this is the agenda today so for the first two minutes in welcoming and is to design construction and other minutes we have our and very diffused into this case is out there there are two new associates and then we have about 30 minutes per order is one discussion and then hopefully we'll have a little break and then we will protein they were thanking us action of the is to filter experience then 25 minutes to discuss people about the experience of a stream and in another 25 minutes things about parshat sensations that most people care about anything so this is done we have the collateral red signals here and if it was here and also it to have some question that we might not have time during the breakout and we can also no not you and hopefully you have time to and we encourage that have can have more conversations and especially this room and so on we have two months to tell you so if you have questions expecially and yes we're gonna empty some of these seats up here in front probably education that you want to like engage that slightly longer exchange and feel free to buy travel visa frontier and when you are speaking the beginning please yeah I always like that and so we hope that would be fun for God and but please and during the day I work for status good night dream of so just quickly about what we're about by now maybe you are it is like my times already hearing this another like is to thing but the idea is that these two will be delivered in these faces and huge face sort of represents a little feature sent I think a good reason for doing it this way is because we can live test components cook and we release like not the whole thing at the same time but we will start with the beacon chain and the beacon chain you can say there is a and in light of everything that will be released as easy to its a single piece of software it's a single chain and it starts by adding two crucial features you can say the Google State Patrol give us security everyplace book of work and then the randomness that sort of first of all yet gives legitimacy to that security and second of all perhaps is useful if you like the other thing we're doing is that we're kind of shooting an arrow from his onesie so you know when you're building a bridge over a canyon that's what you deserve in price over right this is the one way picking from east ones ethos when you wanna become a validator on these two we have this bridge that sort of connects the two chains in this direction so that we can keep track of what's happening the positive people wanted for a snake and we're launching this so that we can validate these things before developers start using the chain right so it is intended Ruby for enthusiasts and people that want to take early we want to learn how to run the system they want to learn how to validate our client software it works we want to set up the infrastructure so that we have time to sort of Buddhist without the pressure of having that developers on the chain then we'll move into phase one and Phase one work is sort of the first time that we had a bit of complexity to a system we had charts how many would say maybe 64 maybe a thousand and it's all about starting to prepare for execution but still not doing it so we'll have a couple of examples of what you could possibly do when you have shards on on to which you complete data and where the chain guarantees that this data will stay around for one [Music] and so if you look at how that works we have to click in chain there is coordinating the data chains post it on your chain on your defender sharp chain this gets recorded on the beacon chain regularly and it's a way of communication basically so within a single shard you already have available and then you cross link it so that it's available on the other strands as well in terms of security but you could say that each chart lives its own little life and then finally in phase two we had the execution engines simple or not Omega which is different but conceptually that is a separate piece of infrastructure that will enable people to develop execution engines now we had a long conversations about like to present this to people yesterday like one of the ways that we came up with it is very dr. phase one that's kind of like when you designed a computer and and the new computer it suddenly it is a multiple multi-core processing unit and then phase two is like somewhere between the operating system and the drivers and parlor it's still not something that we expect everybody to do if you're that developer you're probably not gonna release any if you're designing a large contract system with very moving parts then yes maybe maybe you have like special need for it through designing the EVM replacement for aetherium - yeah then you will design the me if maybe you want integrate their knowledge groups or let's say that we wanted to didn't something like the cash inside of their one that maybe they wanted irrelevant fee for that but these are like they're not bob's that something that you just deployed like me like refined costly both in terms of development and in terms of the community change within that little world they might offer application development as we know it on the third one today we'll start with two presentations that will introduce sort of phase one and one what you potentially do when you have faced one available with battery we can be just dizzy cable and then mr. co-op and these are two kind of scalable exclusions that we might use on in student so [Music] all right so okay so the way that the role of courts is that we have a zero knowledge proof is that we use to compress the state transition so the state transition includes the signature verification and the Markov will treat all things because we do this inside as they're not proof we have a northern system cannot enter the lingual States so if someone wants to steal money from someone else they can't do know that they have a policy that you think or that's better said by saying they can't create a zero knowledge proof unless you have some signature so when we when we create the zero food we have like this inclusion point that's you have an implicit food that everyone's an implicit proof that the signature exists and that Hoover has so inside the stomach we do oh that's right - sighs and shall we say complicated so these are the contents okay so did you see here this is our as our database and something we have a virtual business everything that we keep on to leave the snag to update this for commerce no and you see in the bottom of the chain you see these ABC and D this is like the this is like the compass is a separate agency and each amendment has a fully canceled field with it as well as about something so bu people to the hatch of all pieces yeah it's okay yeah so we use that to ninjas and so this is like you have a list of transactions here these transactions in this red box is like what's happening with Israel and here is what's happening with is my contacts so we have state one or Marco Rubio comes in here and then we make approve that updates it to work one yeah so we put the put one chain as well as we yeah so we put a bunch a but we have a problem is like this ability from so there's this like date availability problem that someone updates on worker Ruth you're not able to so you're not able to sort of update the system because we want to have multiple people who are able to do say transitions so what we do is we also reveal at dinner yeah so the dip is basically invited Alice and Deborah and ever since we're talking from Alice's ever so if Alice has a talking to Debra we the dip is basically the the to address the wrong address the progress the to address and the amount yeah and and that's a lot to reconstruct emotion so it turns out that this is pretty pretty compressible because we just use the indexes in the burger tree so this becomes very sustained for Brenda on the bottom so we put a snag on the under like if between the two states [Music] and as professional desert without remove the privacy yes this completely ruins friends yeah so so we use snacks here for there's a sickness enough yeah so let me go through like an idea that has its work so okay so inside this is argue that what we do exactly is that when we seek receive introduction we validate the signature and then we prove that the public key of that signature is equal to the public key about us asleep then we help then we prove that Alice asleep within the current vertical tree yeah don't we update Alice asleep we use the same vertical path to include that new leaf into that to update the vocally yeah so so what's happening here is is we're changing one leaf in the tree how because we use the same work of paths we hold all the rest of the tree the same houses leaves by removing the head but by removing the but we reduce our pallets that we don't they we come over like an intermediate route and then we have some money that's we've taken away from Alice and you want to give it to Deborah so we use the signature and we look up the to leave the Invincibles receive it and we proved that that leaveth in the updated Merkle tree and then we hide the money together and then we do another work approve holding the other merkel basically how that works and we can also do this for like a global state or different kind of state transitions so instead of in the previous example we had like Alice and Deborah and both of them had like this constant they both have like a personal state but there was no any of this global state so if you want to do something like you would swap you need to have a global state that people are able to update on their certain conditions so that's kind of that's something else that we can do we can come of this almost data we can kind of store it and okay so then we can kind of apply these modifiers to other things yep so that's necessary wasn't it yeah I should say could you say in what the what Dana you're putting on Shane fit you you say between the two yes so it's the venerable day that you need to reconstruct the state and for the token fronts for example that minimal data is the two from the to address the problem Edison the amount so it's the only ones that were touching and new in the new in that state transition yes okay yeah but it's every time they were just so for example if I it said to advise intermediate versions yeah why is the data availability guarantee of peace wonder or face-to-face okay so what we can do in this case is we can saw the moment we can put all that we have all that they don't chain that this is kind of expensive so what we do is we put it on change these one and as we get to like 500 times per second and what we have the new state the new hard work you will be able to around 2002 elections and or if we had our base worn because theoretically what they say on the sheriff and then just look at you know almost my project publish transfer same time one of them will invalidate the other right so in this case we have okay so we have like two rolls so the question isn't that means no this is correct what happens if two people while there's a transaction at the same time moving some state of conflict okay so inside what we have these kind of two states we have the users and we have this very high aggregator call them the coordinator and coordinator receives a bunch of transactions and they will send them to another department wasn't better when they put that widget so if it was to these coordinators at the same time it would be wasting work so we use a single leader we use a leader that can manifest assignment one example of what we could do is we could do like a mistake and rather things like them I mean some other ideas like possibly by the way is it possible to separate the logic for the token transfers and the logic that verifies the formal proofs of the police term sir it's impossible to move the discipline of our goal proofs undistinguished verifications in separate things well you can like that could be kept may be the signature verification is not in the snark circuit and only the verbs are not ever find the that the leaves are you know leaves update the tree grow okay this is possible but would likely have some overhead so for example if you did this you would have to come up with a list okay so you verify this signature somewhere and then you you have to have a list of the of the correct date renditions and apostle's to the snark well I guess we already do that because we pass the difference yeah so I guess you could do that do you have like a case where that would be yeah just in case - if you have some complicated you know business or whatever for the token transfers then you know you don't have to write that in a star circuit instead of just regular contra budget also you would violate this image means that it's not going to have reduced in transition and you would take advantage of the snark ropes to reduce the the data usage and have you know it's like an EE stateless you don't have to test you know all this Merkel group data and stuck you you know press that all right next up Carl well that was a great transition one of the one of the Casey's kind of question can you just use a snark for the Merkel proof and then calculate the actual state transition somewhere else well in fact you can in one of those places is with a dispute game okay so I'm going to talk about optimistic roll-up how many people in this heat room have heard about to mr. roll-up okay medium that's pretty good how many people think they understand optimistic rola okay that's a lot fewer that's unfortunate but it's support you actually know it's important that thing because this is maximum impact optimistic rola is yet another way to scale and hiriam it works in youth one it works in two phase water it is one one of these schemes where you embed a block chain inside of etherion right and seek a rollup the way that the way that Barry was just talking about it you know you can kind of think about think of it as here is the etherium lots right because here's our etherium and here's our blacks and he is not chained and z Carolla what Barry was talking about is kind of putting these like other blocks these he came up with these ZK are these ZK roller blocks inside of these guys right and building up its own chain which has its own properties right and so it turns out like doing this can actually be more efficient and that is because of one very very cool thing and that is that the commutation is not expanding with Morris Moore's Law I really like this but bandwidth is so it turns out that data availability is much cheaper than and much more scalable than computation so what we're doing is we're like separating the kind of communication message passing logic from the actual hard like computation that all of the nodes are doing and so this is he can roll up ZK rolled your building up this chain inside of this other chain and it's really good because you can prove upfront succinctly with zero knowledge groups that each one of these you know state transitions each one of these commitments are correct that is a very very nice property however you don't get it for free because zero-knowledge proofs are currently and this doesn't this may not be the case forever but for the next you know five years or so we're not going to see easy to build general-purpose their knowledge purse but we can still use the roll up scheme but we can use an optimistic scheme instead so optimistic roll up here's what we do we say okay we're gonna put blocks you know aetherium style blocks inside of aetherium and we're going to commit them but we're not going to validate them so we're going to commit all of the transaction data we're going to commit you know state routes you know it's okay if you don't know what a savor it is but you know committing transactions state routes all the information you need to compute the block you're committing it right and you're not computing it that's a very that's kind of a strange thing to believe the consensus forming nodes of a theorem are not computing it but an off chain that's an option user as a you know a company as someone you can compute it and check locally whether or not those state routes that this computation was done correctly but because we are doing this thing where we're not computing it upfront it's possible that something invalid gets through that's a real problem but it's not the worst problem because anyone who computes this can prove immediately without a single you know it's not an interactive protocol it's just going to the main chain say this is wrong and then what we can do is we can say okay we committed this block then in the next block right this is maybe maybe a little more clear public in this block so here we committed this block right here Boop and then in this one we're like oh there's some fraud and so we raise the red flag and we delete this block and then in the next block we build another block on our chain starting from the last value block and it turns out they're doing this very like relatively simple scheme it we actually get pretty significant scaling benefit so the the scale that Barry was talking about we get that as well in Optima Rolla and the benefit is we get that with general-purpose computation in that we can build an EVM you know a real you know like normal normal solidity developer experience inside of aetherium with better scaling properties using this technique so this is a really really nice thing and it actually borrows a lot of you know kind of inspiration and and and you know this is this is very similar to the stuff that's going on maybe two with all the sharding and data availability separation and it all plays really nicely and once we do happy to then we'll just have way more ability to kind of post data so it just kind of scales us up pretty you know pretty significantly maybe linearly with the number of shots so I think that's kind of a high-level overview the benefits are scale the downsides are over then and then the downsides I mean I don't know there are no downsides technology was a quiz question what's the size of the park groups and is the scale with data presentation right great question so basically what you can think of the Frog groups you need to commit intermediate state routes frequently enough that you can evaluate that full transition in one lock so you say like okay we're going to you know cap it at 2 million gas internally and so we we basically you know can only do two million dollars of computation so you do the full state transition in the case of product yes we do the full stage incision and we go from one community root to the nuts and are there timing assumptions on when you have to get this property a great question so interestingly this is almost like a side chain inside of an area or like you know it's like it's kind of like a weird you know it's somehow the exit procedure is a little bit like you know reminiscent of just a normal you know bridge where essentially what we do is we say well for one we don't actually need a finality period baked-in like that's kind of something that you could add you could just say will revert infinitely far back but that's not really that realistic considering all that may change you might want to say you know submit a transaction which then deposits some amount of evil right and we we basically want the ability to then withdraw that even eventually and to withdraw the eve we need to have this lioness assumption that you're talking about and so because I decided it's one week so one week that's exactly the time that it will take to find the front a question Solon's yeah yeah so property goes in and we now build on it basically delivery is that transaction yeah how do you do that without halting the chain let's say it comes one week later and basically relation eight or other validators or sequence in the auditory route are just not going to build on top of this state technically know that it's wrong guess what what is the reorg process look like and what happens if the property doesn't like go up until four days later great question okay so technically I'm doing some some simplifications here right realistically there are two things that are happening there's this kind of log of transactions these are all the different transactions right tons of tons of transactions and then here's the log of state routes right and here's a bunch of state routes and so the trick you basically use some set of these transactions to generate one of these states right and then you use another set and you generate another state route and so if they're if this guy is invalid right then what would happen is we would have to basically reprocess all these transactions based on you know the actually you know reprocess all the transactions after this state route so like once we challenge it we delete the state route we would not delete the transactions and then we just reprocess everything so it but it does require a reorg and if you're like it because if it gets in four days ago and you know you bought some some even or something or you bought some token and it's dependent on an invalid Sabre then yes you you will you may not have your money but that's why someone has to check [Music] but I mean so in that case how do you mean that you mean a fraud here or fried I mean you have the roller exciting don't worry Roger rule of change Mona okay so ethereal thankfully gives us a total ordering of transactions which means that there's a deterministic way to determine the form and so really you can think of this chain has literally a list of blocks like like the data structure that we use is just an array and so realistically all you're doing when you when you say like have a Ford you're just like destroying one of the elements and then reinserting a new element right so there there is there isn't this isn't like a really chlorophyll thing because we don't need a forkful thing because we have this deterministic theory yes I want to be fake but well what is the impact if someone falsely yells fraud well no yes thank you what is being that sir what is the other I cannot do that what is the impact of wait sorry I forgot the question they've been attack you're falsely claims brought them up and what is the penalty in doing three so this is actually related to a question I didn't have answer from you and also I forgot to mention the first thing so the question is what is the impact of fraud and the question that if it was what does it take to be to submit one of these blocks Utley so you need a bond right there's no question that we need a bond so essentially when you submit a block there needs to be some money at stake that can be you know slashed and so what we do is we burn most of it and give some to the rewards that are your best moment myself if I falsely claimed that something is a problem oh you just lose your gas it's great because it's all deterministic right we're not playing this interactive game you are you submit an invalid frog group and it literally just reverts like like if you know aetherium opcode Roberta so the progress will excuse my blog so it's just spending two million gaspers kind of sucks and you know deterministic makes a large do have a question though because you have a period of maximum perversion facility and you have a swollen gas limit on chain thank you you have a theoretical mass amount of these chains that you can support on correct a great question so you've okay I don't know if I believe I would say you can only refer like Senator Burke period is one lock the only word and put them above see like ten million guests to play with and so you can't support up bow are chains that some to you can securely support or the some of the or chains that some gasps because within the one block or a period of everyone was fraudulent you can you can support roll backs of all of them so you can extend that to like think about the week long of those I I'm not I'm not sure if I understand but I don't believe that we have this problem because you like even are you saying like if this is invalid right like the way that I prove it is I just prove this is invalid and then I just delete everything here right yeah but if you I know you're saying you're saying that if you have a block on your side chain that has they take more computation you can do on the main chain of those whims nobody's chump change that's okay usually think you're insecure so but then there's not enough gas on came to Rio over time so you can solve this in two ways one you can this is something to change the design they can have like a higher bond and a longer time period yeah so if you have a if you have a bigger bomb you need to have a shorter time out period so this is like a this is like we can solve this by any variable on like our time outside and I'm variable pause because if you think about it I get more money if I slash someone on a chain that it's a bigger reward so I'm if you have sorry you have like five chains they all have they'd all have a max of two million guests and they can all revert like them they have one block with which they can do a challenge record so that they can all they can all fit to that block Shayne and like do their efforts but if you now have six chains often I'll chain and then now it's calming and you have one block to be able to do the actual workers and usually you'd have much more time period so it's all I think yeah yeah yeah you guy don't think you can because even if they're all submitting blocks and like let's say they're all of the invalid blocks are progressing like one honest user is going to eventually before one week submit one transaction to delete all of those blocks in Ivanka know Cal he has like a hundred five example where there's like one day and this is enough time I get it he's given the example of hi every not okay I see is open so that's definitely okay so there's probably within that week there's also a maximum I said maximum number of her teaching support thus a maximum number of changing all the hail the one optimistic role of chain I think premature ization bullet will help here I think I think during this conversation two important things came up the guarantees that are useful for for these kind of set ups and then base one numbers is first of all that you can get a deterministic ordering of blocks right and all the computation of this opportunity but but that's what the critical feature that phase one offers to in terms of if you want to develop your own application this is like one of the guarantees that you suddenly gain now and then if they're in one already has that obviously but the second feature that we gain here that it was alluding to is increased bandwidth right so they're suddenly 64 or thousand charts that you can submit front proofs for example so you're not as likely to end up will start change right I'll just be highlighting these little points along the way like what the two things that they are worried about the first one is it's not decentralized enough and the thing is they don't see it is not security and what you feel about about the security so I think that like what time is getting on is is kind of close to a nice differencing in fact of imaging systems so it's quick detail although you fail when when you have too many transactions when you have too much throughput you just can't put any more but with alpha is equal of if you have too much through but then you have this kind of situation like you were describing where you don't have enough you don't have enough blog space but instead of just not being able to fill it all you have this kind of weird condition where someone might be able to attack if it's like a coordinated attack against every every every often is however I think that the economics of running that attack could be the kind of it's expensive because you have to burn on all but one chain and you could you can attack one chain and you have to burn all the one so it depends on the size of the problems that you have and the time periods when I'm done okay one I think that generally people who say this is a great layer to a lot of the times are not really like telling you about a secure protocol and so I think that it's a very well founded kind of you know fear it's like oh this is a great layer - it's totally secure and they're just kind of like you know hand-waving half the design space so I think that that is absolutely correct and I also don't think that this be kind of like block congestion problem for generally layer two because this is a problem of you know state channels of every layer - that's based on the dispute period if you you know fill up the blocks then you're then you're kind of out of luck however I want to just really really quickly talk about the kind of asymmetry and the attack/defense scheme here that that makes this dispute you know this is a dispute like censorship problem really really hard to to achieve so if I have some value of you know let's say you know a thousand right that's locked up in a dispute that I'm go up then I'm scared of losing right then I will like to sending a transaction and like aetherium transaction that pays like 99 you know like contrived but 999 gas to get it out right I'm willing to burn a lot of money to you know kind of save this because I'll be making a profit otherwise I'm going to lose it so I am trying to get out one dollar but an attacker has to fill up all the blocks right for some time period of like you know one week and they have to be above my maximum price the entire time right or it's just like a total censorship tagging approve of etherium and then we're like ad appearances security so like this means that what I'm willing to spend one time they have to spend continuously for the entire censorship period which is you know I think a reasonable attempt defense model we definitely want layer one to scale this is not that's what you're looking for yes oh sorry we're like in the back I didn't want to just speak up mr. Gowda moving out that the rate of return run within a single phone is there any way of enforcing that I mean if I'm found operator can I just create this one yeah that's a great question it's really nice this is enforced in etherium we just run the block in if the block runs out of gas and it's a prophet can you explain again why your sanitizer has to pay for the whole week cuz I thought that by going to be me and you and whoever wants to spend our fraud proofs against attacker so we can try and get all of our father's down [Music] whoever's paying for the Frog group the Frog group is going to be like this and then the attacker needs to fill blocks that are you know people gasp above whatever that is for the entire week of the tiger all he would have to do is submit a ball on an invalid race that we all have to them hey guys to get our blocks in I think yeah probably good today take it offline but as for mobile so I'll have two people knowing the based solutions here Paul Daniel do over here is just a mean making your that's above there two solutions actually being able to use these as a desk developers so with Z controller we're still kind of focused on the events of the first movie concept I think that that makes a lot of sense to I think that we like have a responsibility to prove the people that this is secure at least in in like a limited version before we start to kind of try and push more people instead of build on it or support them so that's that's kind of what we're working on to just do a stupid concept or like not a group concept will make a real thing that actually works and stays stable for a while and after that you will have all the tooling that we need to make my scenario to take a little bit we'd be kind of exploring that this is also really good this is also really good time if you have an idea for a kind of application of phase one you could now also ask people like these people that have gone through the motions think that it could work with the properties that you get on the face ones like use the time so just a question built on this and then we're really a lot of hands raised and listening to this I got a lot of cognitive fatigue because it seems like a deep technical knife and the things that aren't confirmed yet on your bass one so for example running a little bit of what I was trying to understand plasma and and so I spent a tremendous amount of cognitive load trying to understand plasma as a developer and it's sort of building this for not now so in this discussion it's very very interesting however as a developer I have a certain amount of bandwidth for this for a low-level protocol understanding and so I think maybe if you could just sort of say the stuff that we've talked about in the past half hour how much of this is locked in and confirmed that it won't change in terms of these specs you've just discussed now okay so the question is the question is let's summarize what what do I care about is a developer I could know right now so just to say how much of this is for sure not going to change in the next three months set how much of this is voice you are not going to change one three one and three let's say so like the kind of I think the kind of trying to be mean kind of loud and other people who work on this stuff happen as well is to try and build things that will work on their - I will also work at E - like whatever my work is all focused words there - Auggie's one just because I have the same good sizes you I don't want to build something that that's going to change so I don't know maybe we can check with Danny specifically means regardless of which data Larian their availability like is isn't worth actually learning as you can't roll up like is is the notion of this protocol going to drastically change to the next four months such that the cognitive about realizing about memory that you might spend today to learn it and begin thinking about how to development like might just intron the window in court months this is a great question and i think that people should not really have to learn this at all in terms of answering it on face value about say like a solid 90 percent 95 percent of what I talked about here is just this is literally how optimistic roll-up works and we already can get smart contracts on this right so like this the the I think that the big problem with layer two thus far it's been we have been talking about you know protocols incentive reasoning and like expecting developers to actually you know have to learn about how these different parties are going to interact in these different worlds and how they're going to you know you do play out some dispute game like I don't want people to think about dispute games I just want people to write smart contracts because that's what got me into aetherium personally and so this is the entire reason why I'm interested in optimistic role is it's the fastest way to start scaling and improving the user experience of solidity smart contracts I think it's an interesting observation as well like it when I at the beginning alluded to the fairly early stages yet it was also to raise awareness that in entering phase one or even two discussions right now you need to get fairly deep in the weeds like if you want to develop a next apparently deep right that's a bit of work however we've already torn out a couple of these simple properties that you can already like start imagining what kind of solutions you can build on this if if you were to do that right what do you guys think of lazy Leger hmm I mean I just really like it because it seems like a nice separation of concerns Oh lazy ledger is like ace minimalistic data availability engine and says okay we're going to provide availability and ordering for transactions but we are not going to necessarily do a execution thing so people can essentially execute based on the you know data that is provided by the lazy ledger it's your grace your encoding and some it's like a pretty nice simple scheme okay so in general I think that solutions like that require you to log over as much capital a lot of capital and they don't love you no more capital than you can transmit a new system because otherwise someone can just disappear the data you can update your sister so like the I think I will this conduits logical conclusion is is you have the whole world's transact economy has built upon this like lazy Nigeria application the other half is on the positive side so I was a different east to well east to is okay alright so here's the difference difference so ease to enthuse the date availability there you roll back the chain you recover from a failure so you roll back the chain plus you roll like the execution inches but it lazy Lecter has that because it's not this time complete between the execution engine inability engine you won't be able to roll you roll back later that you're a good execution and you do that if you're talking about bass one on e 2 as a data view ability engine with without execution and this rollback is happening an e-form contract with execution all right we're gonna take you short break I think phase 1 gives you data availability all right it's like a stronger and even they know that you guys order stays there cool so this is to give an overview so you guys have a general understanding things too and then we'll dive into the Devex discussions so yeah I gave it talking day one just kind of gonna be similar to that but I'm gonna freeze over a lot more we go through so we talked about PC already I don't feel like I need to cover this yosik dip so bigger chains kind of this organizing layer manages the cross links the finality of each of the charts so then face one we already just talked about this shards it's date availability other players so we get that on phase two this is where I say it brings the shards to life even more because now they have stated to keep it enough so that we can do generalize computation layer protocol so it kind of give you guys an overview so to help you understand that new I guess framework by which phase two is being proposed it's all about these things called execution environments and so I'm going to give you an example from each one hopefully that extends your mental model appropriately so needs why we can say that there is one execution framework or one execution environment and it's just enshrined into the core Keith's one protocol are decoded it's hard coded into the nodes so if you want to change it you have to fork and so a really good example is a transaction anyone has nonce gas price guess let me to value data all these fields uses our LP encoding and if you want to change any of this if you want to add a field you want to pick it up adjusts use some other an encoding schema the way to change that is you have to change the big Corp protocol right imminent so you have to do you have to do for can change chained together similarly like you know in he's won the global state is managed by a petitioner or golden tree and each of calories leaf kind of has these fields nonce balance storage Oh - so if you want to change that is well the accounts director if you want to add field use different different accumulators so it's an attrition of Michael tree or anything like that again it's the same thing we have to we would have to do you know before on and want to change that except a review that it's basically each one we just have one transaction framework we have one execution framework we have one execution environment that is essentially hard-coded into this system so if two kind of took takes more of a radical shift and it says you know the core consensus doesn't really need to have a strong hard coded opinion on transaction structure the consensus layers good at managing a lot of overhead logic this is ordering of blocks for choice rules execution tooling right so this is the UI zone splashing rewards and the validators different things like that and so it takes kind of this radical shift that the core protocol doesn't need to actually have a strong opinion on what a transaction structure looks like or what you know how an account is organized fields or accounts in fact you can you can support multiple in the same o in the same shard and so this is the radical shift that we no longer just have one enshrined hard-coded transaction system or account framework and so this is kind of a goofy little diagram but I think it like helps people understand so on a shard it needs to you can have multiple execution environments so example we're gonna bring each one to a shard right and so even one itself would be an execution environment so here we're saying this is just all in one shard right now we're not the systems of wool in one block in one shard we could have eat one running we could have an eighth to eat which I'll talk about in a second which is a iterated cattle we could have a UTF so like you know if my model we'd have a ZK roll-ups focused execution environment we could have the Libre move running on YouTube so not me laughs but we could you know just to like kind of give give illustration here and so within each of these ETS you get this synchronous communication within yourself so in the eighth one EE nothing really changes as far as transactions or contracts meaningful other contracts synchronously but then you have to think about these communication when you hop from one EEG another so the e20 es that I call the UTM so or the into account Paulo or the Libra so he is execution environment like I said you definitely probably have a lot of things he could hospital interpreter you want to there's a lot you can do this left flexibility so tightly deeper what does this actually look like so the beacon chain stores these P reducing functions and so these give the rules by which transactions will run so this gives the rules by which transactions are validated and will it imbalance what the actual state transition would would be for for that EP and so this is just a pure wasn't wasn't reducing function and so to give an example Keith one you could kind of consider you have a state right even function never runs that function has a bunch of transaction data and output is you have a new state state price as Fred and Eve - we do have a stateless model so we can say this is actually ported because now we just have a free state hash reduce the function it produces a state action so an example here each shard if there's a transaction that is each one related it you know pulls down the watts of pure reducible function from the beacon chain and then executes this package of transactions for the keys one EE appropriately and then the same block can do it for an account model and I'll talk about that in a second or fourth and you can still model or another encounter so yeah so we're already kind of you know play with this so Alex and the e wasn't team created a repo called scalp which already lets you to prototyping on these execution environments and again this is what the function will don't like it's across this block takes block data pre-state group and it gives you a post a grid hash so again it's exactly this so if there's something here and maybe this is what we talked about today's execution environments they're not necessarily analogous to smart contracts they could be so for example an execution environment is one EP right defines an execution environment where like more code can rock so smart contracts can kind of run in world of the eath one you use that defines how continue to code can be executed with or how continued contracts in the entity did so keep defying laws many more wiser with I think this is an interesting quote from trust with easy-to-use tracks that fixed execution semantics of almost any conceivable programmable blockchain in a similar way to help even one abstract to the fixed semantics with digital tokens currencies in the early blockchain Bitcoin era I think this is cold so they either to EE what we talk about this is still under today because there's some other perspectives there's this fella model or an on umbrella model and we could go into that a bit to the eath to EE is saying you know we're trying to do a lot to make that Eve one compatible and bring that over into as an execution environment and it to you too but we realized they're a lot better accumulator formats that we can use there are a lot better models that we can follow there you know are a lot of things that we learned and so we can make another ee that is focused in generic on running smart contracts liking one that's also an account model but we can make it you know even better then we can make it more wise obstetric and so this is the concept of a to a meeting I think he was I mean this is a state execution happens within the consents to be shard everything is all the execution is centered right he wasa he wants provides me a concept of Hanson yeah skip that for now so this this system is stateless I don't know if we need to really dive into that too much to during today's session but in case you're curious so that means there are actors in the system that hold state and so there's a lot of discussion discussion about this the the best example that I can give for a stateless system is with your transaction you provide the database so if I'm you know submitting a transaction work will Villanueva is transferring 5e to shall we so I need to prove what my account currently looks like what my balance is I use a market proof to do that and I need to prove what her account looks like as well so I in this case I show that I have 16 and shall would way has three and so now when the block producer exit counts the transaction it basically just pulls from the proof that I gave it pulls from limited database that I gave with my transaction so definitely validators block producers they don't need to know anything about the state they can just pull from the this database that comes with each of your transactions I'm switch over so the talented a really cool post on this just recently so this is what we're bringing eath 1 + 2 e 2 as an execution environment this means that we need the EDM built-in web assembly and this would be defined in that be script that we talked about he'd go on that he was this one has been doing really really good working not as well but there's a lot of work to do here there's still you know it prototype that still needs to be you know kind of yeah established IV tui talked about this you know this is kind of an iterative version for contract check framework it's wasn't centric yeah and and so then we'll go to crush that transaction so you know there's kind of three spaces here that it falls under and I think today will probably just fill this in the first one that a synchronous support protocol so basically that's you know you wait until finality once you get finality for another chart that now you can trust a message that comes from a chart so that's typically would be considered slower than secured state you know it will never roll back through the never reorganize there is a new proposal that batalik has made which limits so crashed our transactions now would only happen in one block so that's actually really cool that that's so unbearable so I think before finality would take about six to 18 minutes having one block is you know six seconds to make a call to another sharp that's that's really cool but there's always with every proposal that you read there's always going to be trade-offs pros cons that kind of it then there's this whole model of optimistic system so these are like dependency graphs that kind of reward themselves with this new proposal we wouldn't need those anymore but these do the idea is you can use basically almost these like hybrid systems that allow you to get crossed out transactions in one block assuming that it will and hopefully that we won't need that anymore and then yeah that this you can give like a synchronous cross judge has actions through I think optimistic Rolex is a really good example so this is where you know you in eighth to like if you bring optimistic roll ups to to you can now upload your data on four different shards so user if they want to upload their transaction they can they can access any of those four shards and so now they're not you know they're good it's yeah you get you get a lot extra there as well that's pretty cool delays data execution it's kind of all falls under the same the same branch of things so when you think of crossed our transaction that substance effect Deb X in general let's just like focus on a sink or decide the synchronous I'd it really shouldn't change that much and this is you know wet like Carlin those guys talk to you about that a little bit more on the easting side the difference is so hll is our higher level languages do cells so right very different things like that so this these tools should just provide property right now so what that means is as a developer you now need to operate under this idea of you are gonna make asynchronous calls in the smart contracts with you right and you need to be aware of that you need to be open to that and then there may be even you know some some things that you need that require more than just easing this call so a different tooling that should be included in these in these systems which can be a kid to programming cross thread so if you need to make an atomic transaction so Terrell training problem you mean there are different approaches that you can go with you can go with a locking system readwrite which essentially rolls down into this that yanking model you have a two-phase commit email which could essentially also be kind of a messaging model you have a message driven approach one of those ideas is like the actor actor and model and then just simple asynchronous calls so kind of depends what you need with your contract you developed are going to need to understand which one of these tools depending on you know what you need a lot of developers will probably only need a stand as calls others may need some type of concept of an atomic transaction across multiple contracts that's why you just need to use the best tool I mean most of these toolings should be provide provided and developed within things like solidity and fiber so just think of it as you know you're dealing with asynchronous calls out promises whatever else and the latency depends on how long it takes for reduce for finality time and or if you know this this you know new direction is taken you could get that they can see just one block which is actually pretty cool I think that's a lot of people can work with that other changes index yeah so POS provides them some things you know there's some speed increases fusion constantly decrease to there being multiple shards I don't want to draw too much attention to that line web 3 ethers Jess these these things the web through Jess they actually shouldn't change that much if you're doing with the piece one that youth one eaten their coordination area under underneath it all will change for sure but for the most part if you're dealing with the f1e it shouldn't change drastically there might be some changes from your perspective especially if you're writing new contracts that might be chard aware but again it shouldn't ditch much and in fact I imagine that there'll be this world where the will be standards around these movies that are built and so web three days can basically be portable to these different edu models and they you know I think this is like a really cool space and I just would love to see more people you know kind of idat you know get involved on some of these things over time it we're likely to have more blossom centric smart konchog languages so you know I don't think you know solidity or viper were necessarily built with there was no centric approach so you know that that will likely you know come and effect its developers as well so which should I build an ee so if your protocol researcher developer absolutely you want to experiment with new accumulators you want to experiment with you know different different approaches like that yet you should do you think idea which only makes sense as a Nene does your application be more flexibility or enhanced scalability right that you might want to you know work out any need for for the application but also you may just get left behind if you don't learn this and you don't learn too leverage that to your advantage if you don't at least learn to understand what's happening behind the scenes I think there's a good amount of discussion regarding keys some some parties believe you know that there should just be you know three or four or five ETS and that's what everyone uses others believe that the you know the amount of ease there should be an app either application and then we build a model by which is just kind of communicate with each other and so it's kind of these two camps I think they all have their trade-offs pros and cons and whatever happens they don't necessarily think the things that I mentioned just prior should actually affect that duck developer significant angles so yeah that I hope gives a like good overview for everyone of what phase two is I'm generally optimistic about things yeah I mean there's a lot of people much much smarter than me were working on this and building building using again I just want to you know call out like you know Alex Paul Casey Erin I mean phase two is phase two because of Casey you know in large part originally anyways there is a session where you know the US team has worked on a ton of different E's and it's like really really cool to see a lot of the evasion and creativity years that's happening is really exciting a lot of smart people are working on this so yeah I does anyone have any like overview questions yeah someone who's all of this from really far actually two questions served one this I believe that back to the day I think it was an interview with Justin very he was saying that there would be only one execution engine across all charts and this is new to me so I was wondering well they shift has happened and what the rationales behind it the second question is so if we imagine different shots having different execution engines how do they come back I mean does the foundation decree at some point you'll have thousands of your charts and five of them have this execution engine not cetera I assume it's not the case but how do you envision that to come about yeah so I think Justin kind of takes you know one one side that's very very strong and then there's kind of the other side which is just let everyone every top developer right and II mean so these are kind of into the two different ends right and I think it hasn't been resolved like those discussions just need to happen and this is part of what we're doing by prototyping and looking at it I tend to think that there's probably just gonna be like a gentle balance this this is my opinion and in no way is that you know you know all the researchers our research team Alex and Casey and Danny and everyone here might have a different opinion than me my general opinion is that there's a delicate balance where there are like four es that are kind of entries right smart contracts for they already have the standards they're just easy to do play - you don't have to think about complexity what accumulators you're gonna use you don't have to think about these things right but if you want to then you're free to launch your own e that can then integrate with these because I think not allowing developers to launching eases like I don't know this is gonna be a huge area of innovation where we can learn so much you should definitely open that up so that's that's my general like thought although I think most DAP developers will be operating across you know maybe four major ease that that are you know the most popular I think here to your question for DES Moine anything the idea is that you have to pay a large you know a fairly large sum to deploy EE onto the beacon shape and then what is unknown is whether that EE is now just available across all shards or whether you need to you need to pay to deploy it on each shark individually that you want to operate on so like a shark you have multiple e's running does that do you have access to all the Sharks just by the point what something the beacon chain or do you have to also deploy on each of the sharks that you want me to write on so I think again these are research questions we're not entirely sure but I think we'll probably have answers you know hopefully fairly soon in the new year's time as we continue to just prototype these things yeah so as to develop among EE I would like to find other will that have money and pulled our resources and then before that yeah yeah so maybe you know one one really good example is that youth 188 right so that's you know probably that there in foundation stands behind that provides kind of the funding to deploy that and there's already an ecosystem around that but now let's say there's a new account model that people you know to support case is gonna say something in a moment a new account model that people support and it uses this cool new accumulator format and a bunch of developers want to work on that start writing contracts for that gap you kind of organize zero you're an approach to do that but you could also just I see also world where I can just you know play if I want to you know depending on how much costs on it employee an experiment with it on my own and I could do that but again I think you know there's a lot there here Casey wanted a comment or message did okay then retires the members oh yeah you kind of covered it but essentially like the chain is this highly available in the system if you're syncing any sharks you're also seem to be a chain and so having having data deployed on it having these easily can and must be expensive and so I don't I don't see a world on my team it makes sense to employ and in a world in which gaps are highly used across across the globe the cost model can't be such that every gap is deployed right you might something like mega casino death might deploy their army is there some strange advertising thing but but generally in terms of like hands like being being close to other gaps and like operating a hand and ways of scale and also the cost model of deploying something within it would be such so much less that Li you you likely operate within Neath my ear in need to e or or within some other thought oh yeah but uh whether they're tools for developers but they're they're more alike it might mean more akin to protocol development in traditional sense than they are to death Bowman yeah I think this question about weekend employees and how many keys you know there might be is biggest you know unresolved question if I was there's a range of opinions and ways like I think the split came from the heart to the idea of minimal execution when you had phase one and then and there was no execution phase one there's only institutions phase 2 and phase 2 was supposed to be this execution that was maximally similar to each one and so shards you'd have 1,000 copies a piece of each one and the execution would be stateful like each one and it would you know prescribe it would have an account structure you know apartment restructure everything like he's you know like he's one but better and the shift to minimal execution said well no you know these execution environments the execution environments will define these and an execution environment it's just a fancy word for a contract unease - the way I see it had a slide that said not necessarily analogous to smart contracts I guess the main difference here is underneath won a contract cannot run IBM code but there's an old EAP like from metallic to add a mouth code like brownie BM so when an EE and analogous to a contract on East one with the extra opcode of row and Wasson you know or from EBM and so in the EE like you can you can take a view point where the EE would sort of define all this stuff that enables people to have a good user experiences and and defines how like contracts call each other and so forth and so in the old model it was like for developers would develop all this stuff at phase two and then the app developers would come on and then you know use the toy depth on these two with minimal execution it's kind of like we spend philosophy with minimal execution ISM this is a massive - challenge - and it not only is a massive challenge but if it's also very opinionated approach and in my opinion it's it's like kind of authoritarian and dictatorial to say like well you know we want to restrict the EES that could be to put immediate response encode so why would you restrict what was in code you know people can deploy you know people shoot some fully run whatever wasn't what they wanted like like they can run any PM quote they want he's funny I will and I like when I uh my opinion and weaknesses like broad but I will say the opinion of Justice which interest Tiger ease we have this world in which forget we want you to be into E and a movie E and at this he and some other EE and then another one that looks like a llama does not miss definitely we have this world in which you might end up having like a very fragmented ecosystem where if you instead have some sort of been trying to start and this is like the other extreme of the opinion where it's each one and you it feels like each one it feels like being how models that we know and love one a very like clear developers story on how to build on this and to like kind of creates this unified experience where everything is initially it could be speaker system so that's the the counter to the dictatorial view of the opinion I'm not certain exactly where I didn't where I live but I just wanted to get that okay since you cannot update these and it's fixed if you do end up with a Chinese and you keep improving those ease and even at the point is it going to be a heart or earth Lord and I'll give the mic backgrounds but the I think it's very likely that at least one of these is still potentially updated and social consensus the youth won't leave so I don't think that is ready I think that I think that it's going to be very hard to say this is f1 now and you can never change it like everyone exists and operates in this there's tons of stuff there and like I think the social consensus is still hardcore hand might very well say this but we this is not quite over here yeah I wanted to break the especially a little bit here because they came very deep and I actually wanted to give the microphone to you guys and I'd listen to questions reactions so what the question is Miss B the earth is warming but tradition especially we have different ease and different states and how this even deal with that all already destroying more like change them or comic-con like me so I'm not sure of how this officially looks like yet so your question is in a Charlotte model with cross no transactions you end up getting your state fragmented across multiple shards right okay and how do you deal with that especially across from a été you're saying so first we have what if I had what account of state model and how this edition how to define this partition will this be another further question is is possible of a change the state of a mother and sister so and because this to the current the current proposal space didn't again things are all under research is so you can build like in building you're a needy you can basically have standards by which another you know some probably make some type of message loot to that you right but it again this would be like an asynchronous call that you would have to make it to Iggy you're not guaranteed that it will reach that separate you and you know until maybe a couple blocks or whatever else is there but I think that is more up to how that really is what is how it allows them to calm it to it how it allows them to integrate into it so I think that's that's a big space that needs to be explored within 1e the fragmentation approach if we get cautionary calls to be pretty quick then I think that sort of solves that problem but yester taking a step back here have a pragmatic question if I want to build a needy how do I get started like is there a document epi or something that is available how do I disabuse discussion you may not would not do you like to me you may not be allowed to do because there's only one in Chinese music scallops or elements of vegetation but subjected to will mention scared and there's an entry search post which explains the API may just be 32 aspect with this kind of people there's a rabbit except mr. Scout is it's just a prototype we have four V's specifically and in his examples I had to buy the series soon as the best source to do so I can also speak from a perspective like what's gonna happen is that we can change it deployed first and around that time you will also start seeing clients that deliver the data availability right to face one intestines and then a two legs count which is a prototyping environment basically gives you access it is data availability and a little sandbox in which you can play with aims right so that is kind of available now to start playing with and some of the primitives are being developed so the idea would be here that after having heard those excellent next the new toys that you'll be able to play with life-threatening of course you can continue to work like you did in each one and that would be like you buy a 16 core criteria just choose one of them right but then you get a bunch of new toys and the idea is then that you can start experimenting with developing the primitives and without that end user developers to have a nice experience so would make a transaction decide that I have to provide the men's groups right for this thing so but how do I know what the state did with these days actually so this goes back to the API and what the current API is like five methods for you know thanks to execution you know E's one of them is get get current get free State Road so you know this is stored on the on the shard and so in the wozmak oh you Pig get the priest a road and then the other one is return across state route so you do hydrologic then you return the new post a true the next transaction when it calls yet the priest a road will get that new one that was from the previous transaction but what's the question within a II or from that site but Matt it's not exactly what the actual execution of each yeah so this is so getting the state group you can but that's available from the system that youth to provides but if you're wanting to get the state and you need the state to in order to generate a multi booth this introduces it basically there's a new actor in their system these would be what we call state providers and there's you know right now three different proposals one of them makes a state provider is even more essential what we call real layers one of them kind of removes the relayer aspect and we just need you know someone will provide state to you and so this is an open area of research I think we're all going to be looking at this start getting into this after DEFCON collaboratively and hopefully we will be writing some good research posts on this in general though from the simplest model there's this idea that you could pay to access state so maybe there are actors in the system that that would you know requires some type of you know micro transaction in order to write to give you witness that would end up writing state that gets submitted as part of a transaction maybe they give you state for free to read you know then in order to kind of build that model we already have like generally altruistic actors right now he needs one I think in general the idea is to eventually go away from the altruistic model you know these one is generally supported by a system of altruism right I think there is some ins in the data flow as well so the way the system is built is that you go from a pre state we execute something into a poor state and that already tells you them from the perspective of the you to consensus you have to provide that pre state to the function that is executing and then need to verify sticky-up is correct birth or that calculation right so something has to provide that state and what that something is up for debate you may somebody to keep track of that yourself you'd have to have nice configure for that will this be provided by a service network of some sort excellent questions I'm destroying one stage one of the possible ramifications our experience with things like a sec one sec you have to be aware I mean it depends what your your contracts operate with right so you're working with engines money hopefully very very very very very little changes mostly all the versatility in tooling behind the scenes what network your wallets connecting to you know but the interface very few wallet shouldn't change drastically the interface between web 3 Dodgers ship changed drastically you're still using solidity you might have a few extra tools now someone builds you know do the count model EE or something else that has some new constructs hopefully there are standards that are built that kind of give you we continue to not need to change these two lanes drastic that's my hope I think we want to strive for that yeah they've been suspect an earlier question of the partitioned with how to be respect to maybe speed up each one if they assume that this each one he could have had bigger the same triplets s curtains it's your one point over giving your level higher but if you want to significantly improve or so I I generally think bringing all the contracts that exist in each one right now when you're bigger need to eat to the scalability but you get from that won't be drastic like you're still running on one one shard because contracts that exist are immutable and they're not showing very F right you can't just change the contract to make it shareware and so you will have some speed gains from through mistake and the execution time that you know we're shooting for I think where the scalability would come is new yz1 contracts that can can now be Sharda we're certainly needs one contracts in a face of old ones it can be written in this approach that it understands that there are multiple shards so maybe a lot of gaps are ok with you know the minor scalability gains by moving a thorn in to you two but now they want to take care of the extra tooling so they might have you know some type of social consensus to move to in contract that now utilizes sharp aware specific tools that that's my general time and he can see do you have additional thoughts right so moving moving you wanted to de opens up a number of questions like what do you change what you have to change what can you change there's certain things like a knob the difficulty up there like what does that mean in this new context you have to define those those things those other opportunities potentially migrate from traditional choose a binary local tree and then another one these opportunities is to open up the notion of char because s/he was saying so you could you could easily just deploy it on one shard it doesn't have any notion of charting it now exists in eath to is kind of a signature paradigm it does have access to make groups about the entire data layer of e to at that point so you could could get a lot more scalability of some of these layer 2 schemes that were discussed earlier but then I think one area research and one thing that we'd like to push for and is to open up the Charter paradigm within eighth one and as he said existing condors would know about this but new ones discovery still definitely up for debate one what would change during that migration process with anyone that other techniques for dealing with situations way provide the pre data that data changes before your transactions need mind to say I went to send your transactions my my collection isn't mine until I can't go through now and in three days immediate profits your account balance change yeah yeah that's a it's actually pretty easy to do just with the vertical proof a tug up to Merkel proofs and they don't know each other and if they don't know about each other at the time of being submitted and then one transaction gets processed than the other proof as is invalid but there's already the information there to update you know refresh the proof so even if like well if it several days you would need you know all these the intermediate transactions that were processed in the meantime but the information yeah and that's I mean that's what we've been referring to as maybe stay providers or three layers and that's where they come in not as a day of oil you know have this role of like updating groups and so forth so absolutely to the smart complaints associated with a specific team or can be running allergies in all cases you probably have like a notion of a smart contract being deployed within the operating in that environment you do probably have the opportunity to think about new type of layer to constructs that may be in a layer to context kind of exists within multiple ease with that step plane I could do very research to decide that's not goodness that much so the EE would define in most contexts he would define some sort of account model some sort of deployment models some sort of it just all the things that you think of is like is eath one like those things are now like in terms of its common deployment all that kind of stuff how transactions are interpreted and modify the state that would be then definable reliably so within within an employee the mechanic was still operate very similar but if you grow your own EE and you wanted a notion of contracts you might have to borrow some those concepts or make new modifications and new new ways in which things might exist operating so again like yes these in some respects look like contracts but they also can look like protocols right there they're like contract proclick you define the user layer kind of protocol via these this new type of you can chain contract that's I think one of the I mean the biggest difference between deploying your own EE versus deploying their contract you know like a child contract of some parent you know EE is to point that ye might cost say $1,000 that was like never telex pull out of the air a few months ago whereas deploying a contract you know child contracts under Nene with us maybe a few cents and having paying the $1,000 to deploy the ease just means that the code is like early there and so you know you could be able to run transactions within it you know many more per watt for as if it's a child contract maybe you know you have to pass in the code every time and your circle would be less this is what you know where the trade officer yeah at the same time you've also you know fragments in your universe from other like you you now will require like a synchronous communication to another so you're missing out on some potential like synergies and just deploying into an existing media as well and to speak to that like a thousand like because the beacon chain is this component the system image an earlier that like every node has to run this thing to be able to reverse inca run shards and sync data village charts it we have to bound the state size and so like this capital is like likely burned or locked up this economic models under investigation but would be capital-intensive because the state needs to be succinct and I prefer locked up just in the same way you know if you want to become a validator your validator account is you know it's an account underneath the beacon state so I revalidate er Lopes the beacon state so in order to limit the glow of a beacon state it costs 32 litre to become a validator and it's not burned it's just a deposit so we can take the same approach with employees all right then you get the idea of any disappearing at some point so there's that there's the laser everything should yeah it's explored in the in the minimal territorial model would you have arbitrary state and arbitrary computation on that state just like really intense a trend or you know you're like locking up some amount of capital to keep some kind of state because everyone needs to own the state and I'm just curious if you would you know allow in this model arbitrary state and arbitrary state regulations yeah so I guess I should qualify within the dictatorial model where the architects of the system restrict what ease you can deploy like there it might not make a difference if it's the type of EE where users can deploy any kind of code they want under that Evie so if that is the case then there's you know well what layer are you operating at and maybe it doesn't make a difference users can run any code they want anyway and if that role of the e is very minimal but if it's like if these sanction II's restrict the type of code that people can deploy then you know those that'd be a very dictatorial you know certainly not the intention on that extreme yeah all right we have good sorry notices just materialize I also think it'd be sad if that were the case because like you want people to innovate and try a lot I think that's yeah that's our goal and still Ravenna soul might understand is basically that Eve has it's basically a letter moment that conveys EXO and also had defined how these transactions can modify this day in the past my culture my name isn't one and also in technical details of scripting work so one question is supported possible patterns can positive qualities in these and this basically Domino's also scored responding at a survival in HP Israel and if there's a person in a developer that curve a is even amount isn't all internationally great some is actually in this new EEO any existing in how to prevent that happening because like the books I already came defective also in Canada clients of a camera yeah I think so balances of the EES are not going to be significantly different as an example than a validator balance they have the ability to pass there's the ability to deposit but funds to be because the tariff alligator so as far as like funds being printed out of nowhere that would be an issue but but what could happen is just like one you need to have a very significant audit on a smart contract a needy would also need to go through that same thing because you wouldn't want it to them users bring their funds into it and then you would want to steal your files right so just to be clear from the notion the only thing that owns ether and in this model is validator accounts on the beacon chain and from the layer one perspective and these e's they have they have a certain amount of ether assigned to them then within the there's some sort of account structure that gives you right to like access it with a maybe a year initially transfer another ee or become abouthere so the minting of outside of the normal like validation mechanism would be a like that would be a layer one protocol bug like that would be something that the like kind of sandbox world of an ee which is just blossom code should not be able to do and if it did like that would be a layer one bug which we would work I guess the question was like if inside some maintain right and I'm saying it's not possible a muster or a bug in the lair one protocol no because the e only has access to the east that is in its account so there's 10 8th in the CV and there's some sort of stuff like a count model that allows to move around but nothing nothing that's moved within that he actually changes the view of the amount of Heath within the that's why the entire one protocol but it might suddenly hit 11 e if inside its internals ago and I'm saying the only way that that is possible would be if there was a bug in the lair one protocol not within the there's 10 accounts all of them have money except one of them that's two and so but in terms of their right to that that model within look that that eath within the actual retired emulator one system there's no there's only ten so yeah there if you write baddies you can have a terrible user experience you haven't been said it wouldn't respect to layer one there are interesting questions with respect to like an exchange that my honor the I think the way to think about it is to I think that within the EU no longer entities basically you have representation there's a disconnect there yeah it turns out also that these is what we're talking about you can basically build a knee inside of it there in one and that is actually what these roll-up chains are in reality because you know we have these balances you go into an ee one of these rollup chains and then you know inside of the role of chain you might have coded it wrong you might have you know something you know someone some issue happen and you go out and it turns out that there is like a very very kind of one-to-one correspondence however if you do it in each one there are certain things that you can know you of course we don't have the scale and also it's much less efficient but there is like a these concepts are and it's about not not not a special and they're not made like insurance anyway I want how to know I don't know what I'm trying to say but thank you for listening a human is less like one or two does anybody that hasn't spoken yet want to speak up their last chance transformation so my understanding about ease is very rudimentary Daan's beacon chain validators catch the bug I keep there's a there's a bug he's an EE which inflates the rapt ether or the EE ether within that contract shouldn't they just say that oh there's a bug they're just trying to inflate the their own intercom thing and just not execute that that that you state that's the proposes yeah the beacon chain would catch its validators don't actually have you know go from 10 to 11 he's out of nowhere but if the EE you know has a feel under its own state that says wrapped either and it doesn't check like guarantee that rep ether amount is equal to the actual ether amount you know in the beacon State field then that E's you know rapt ether balance and just a plate just like a contract anyone the RAB ether doesn't have to be equal to these are if there's book in the contract okay so so beacon chief elevators are not really looking out for this these kind of issues I'm learning the part of this may look like part of the system is such that and part of the backbone of the stateless system the validators don't have to know about they know that the they know that given a block they can execute on three state route the block and post a group but they don't take care about the internals to validate the protocol and if they did this this is someone likely to be much much less scalable because they'd have to know about arbitrary E's that existed so it's kind of like definitely segmented in a way that the validating participants don't have to worry about the internals and thus would not catch that like part of the protocol is just execute the code of the EE not to look at the he and be like does that make sense it's just like thank you in these one bucks you know - just from DBM code thank you all right buddy house that hasn't this is a challenge and researchers here [Music] maybe one question adding to this so now it has a deep develop but I know and you have to trust like if you don't change what I have to trust so they can help our rookies yeah isn't that e if you're gonna run any it should be well vetted it should be before my verified and it should be something that like makes sense for you to actually operate I expect a lot of activity that have happened on large well vetted well to Louise even if there's experimentation with all sorts of others but also that's it sounds cool I mean at the moment you need to trust easier bought a know the GBM me the EVM is execution apartment it's a sensible you don't want to make sure that the safe I'm just speaking to like p.m. because right now there's a bug right now in the UVM we might socially coordinate to fix it whereas if there was a bug in a random EE we're very low likely wouldn't really well [Music] [Music] great question so optimistic roll-up the biggest thing that I like about optimistic role is that we can have the same developer experience like as as similar and the kinds of changes that Danny was talking about the block gap you know block difficulty and you know we have to change at mean you know message sender we have to do a count abstraction it's just some weird requirements a couple things will change but your smart contracts will work kind of as they do today and then you know basically would require forking or you know forking waffle truffle whatever and you know adding in the kind of little changes but you would you know write a smart contract deploy the smart contract and you'd have a you know quote etherium unstoppable smart contract you know in layer two and then that's definitely that's definitely a goal a goal for all of us I have a question absolutely yes so metallic has given me and he gave me this like crazy mind-blowing experience where he was talking about he was like okay you can think of optimistic Rollem as different like execution zones so the the deeper you get in this recursive optimistic roll-up thing the more execution computational that you have to do because you have to do the the optimistic role of at the bottom level optimistic role of above an optimistic world above about you know and then up to the main chain so it's like the massive amount of computation but that gives you scale right because you're you're doing more compute that means you can scale further and so you can actually you can even design a system where you're like doing this intentionally were you segmenting different levels of you know here's the deepest level and you know you you have some some amount of death anyway I don't think that that's like really that practical I think will again like one level deep and we'll probably get 90% of the way there 99% of the way there and then maybe throw another level because we're like crazy but you know we can and we could and that's kind of that's I think the big thing that I was you know I thought I really want to communicate is that the EVM as it is is this like Turing complete state machine and we should all be like incredibly grateful for the fact how general-purpose it convenience so you can write these amazing systems like execution environments like optimistic rolled and then you can write those systems inside of themselves and this computation stuff that we're dealing with is pretty wacky so I I definitely definitely enjoy all right I think they're beautiful words general-purpose computing as you may have noticed during this session so very very early stages that means opportunities to thank you where we go with the system it also means that like it's not ready for EM user developers or end-user applications yet however I would encourage you to join the conversation now I would encourage you to explore these new tools and think of ways that we used once [Music] [Applause] 