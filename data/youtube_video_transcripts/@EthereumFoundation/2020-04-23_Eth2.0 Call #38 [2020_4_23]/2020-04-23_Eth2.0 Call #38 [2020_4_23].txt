[Music] well streams should be transitioning over if there's anyone that is watching the stream let me know yes cool so there's the agenda generally similar structure most surprises here month I know after talking with couple client teams there was some confusion here I alluded to a little bit in some of these calls but we I'll be very clear right now so it is time and a free kept suggesting it is time that our versions have her a little bit more meaningful so anything under these 0:11 set for that b 0 11 0 which had a bug and we fix very quickly will be backwards compatible we have a v 0 11 to under final review right now to be released probably today this is not gossip conditions to be on her new epoch basis and instead of up her slot basis if two clients were on kind of these disparate degenerate cases those are still interoperable so check it out it's PR under review that will be released today if anything else any minor things come through that are backwards compatible they can continue to be released under B 0 V 0 12 is coming u 0 12 is slotted slated for our there's someone joining with the name when needs to the user 12 is slated for the ITF and GLS standard being updated to the next draft there's a draft 7 of the hashed curve that is supposedly eminent along with that there is a couple of type fixes which I think would ultimately be non substitue to you and are just fix things not all enter and it looks like there is a additional validation addition being added to the for choice Thank You a DITA based on some of the old conversations and issues that were picked up and as a fix so if user 12 is coming v-0 12 is primarily a swap of an underlying library v-0 11 2002 12 tests will not be interoperable these 0 11 test Nets are still very important today for doing Oliver Interop testing for potentially getting some users on them like the topes but ultimately whatever ends up being a a long term persisted multi-client test net not some of the test sets that we're spending up today will have to target this new ITF standard we regional point 12.com we from fog choice tests great question I think it each is looking into that a little bit and alex is looking into that as well but default is maybe I obviously incredibly difficult time prioritizing us but it's something we've opened up again the past couple days it might come with and this is the next point some modified rewards and penalties tests so debugging lighthouse and prison wee hours of morning for me I wasn't up but normal hours for Australia there was a another rewards penalties bug found it's currently on the towpath test net and if you were part of Interop of canada this is a surprise it's we're like 90% of our bugs lied when we try to get clients to pair so in light of that that's a something we've talked about a little bit internally but it's a super clear signal that this thing is that massive function is air pump and is probably going to be a source of consensus bugs that we see in the young so in light of that proto and I are working on a proposal to reformat that function in two different sub functions to be able to test things a lot more granularly right now it's difficult for us to write tests because there's a lot of moving parts within that single within that single function and so it's difficult to even make sure that you're testing and rigging the right things honestly the bug that we saw i was a little bit surprised because I thought that we had it tested so that is something probably the next 24 hours I'm gonna have a proposal up for a new way to format that function a new format for tests for that function those are coming as for the Topaz net there's a bug deployed so you know we're also prism things you have to figure out how to restart Ford or whatever would that test not that's the safer conversation cool hey DNA Express I just joined it I can talk about our we came just decided a plan for yeah so we you know work with we think we're gonna run topaz least for fern for now to consist out some of these issues we have like with memory usage and kind of profiling with a lot of activity on 0.11 and we know already that we have to restart for 0.12 right because there's a like a BLS change yeah so so that will be our plan restart for topaz with this bug fix and in terms of interrupts we can do some like smaller local like local test nets or a little coordinated test nests with other clients and then we can maintain a brand change and you're right it is useful to have a bunch of people on there for memory issues cool okay I missed where when you're targeting this change for this is for 0.12 the modified functions so it would be a non substance a change and would totally be backwards compatible and you actually wouldn't have to necessarily change any your client other than the the testing harness so it might I did I mentioned that it would certainly be out by v-0 12 but this might be something we might have a testing update come actually just next week on the b 0 11 to update that testing harness cool thanks cool so that's the general very long-winded update on releases and testing proto anything else on your end and I just wanted to note that although it's a critical book it doesn't really affect users directly look I mean so what's happening here is that if in the attestation belt you can get slightly different three words right now there's this mistake where month I defaults gets the context of another type of fault and so unless she starts look really deep into the finishing you know moms really know this is a user and right now it effectively means the Reavers aren't just slightly higher than they should be yes we should fix this and it's better better to have this fixed and run on the death Matt's work you are some healthy magnets no boosters that's right now can just move on yeah and so in it it's not critical in the context of a single client it's critical if there are multiple plans okay but again given all of the bugs that we devote in Canada last year not terribly surprising and this is something that I think we really need to harden against if there's a lot of moving parts in there and getting these balances getting any balance wrong is gonna cause working on Mina just to know the high spec is correct for PC buggy as well I think serenity PI spec lighthouse and do test against Nimbus all of those are the same and and we yeah we used em COI and it was the same yeah and it's already there's a PR or there's a note in a I think it OPR on the actual lines that were found in prison no proto do we have any anything I could get the shorter plants so along with the spec changes so if recognized along with respect changes I hope tell it's rumored to include these new functionalities as the new RPC types and whatnot so clients can start testing using that functionality right now but for Network tests us like the spectres we change the direction there a little bit I've seen actively instrumenting and six seven eight different clients is not going to work short term we definitely try and like look at clients and maybe instrument sometimes but to enable network does for each of the clients we decided to approach closer good or inspect us where we have these configuration files reached by all files define the test have a client started the client instruments the clients if variety in read private key for the network identity the right feature sets at once and then the network the script so when the actual test so those two big fighting tests and looking at all this network behavior enough that we try and manage these responsibilities between clients and testing infrastructure better okay other testing and release updates or comments or questions hey I need just a quick one on because okay yeah cool hi everyone maybe here so the latest fuzzing efforts were pretty prolific we found five bugs on Nimbus including they're pretty cool Stack Overflow we also found two minor bugs on guarantee chuckling proto has already fixed I'm not sure this was mentioned last time that we also found the very very interesting and critical bug in our as I said as a visualization on my house by the way we published a blog post so if you've got a blog that cpio top post it's got a lot of details around around that bug we've been using the honk fuzz which is a pretty cool Google fuzz and engine that allows us to generate interesting samples so basically we're keeping the ones that triggering a more code parks on my house and we're treating them to all the other implementations I just want to talk about the fact that a lot of implementations out there are treating beacon States there's trusted structures this is quite risky if we are potentially moving to a version of warp sync for each two so sinking by B States and not just block patches so yeah there's a lot of we've had conversation around overflow and underflow so the spec has been clarified which is good now state transiting multiple fuzzing engines including home class will be leveraging our structural fuzzing effort we currently have a PR in the works to do this a lot house and we'll be using the generated samples in the differential differential processor so we're going to document all this in a nice design book that will be shared with everyone hopefully sometime next week and we're looking forward to community feedback and that's it great thanks very any questions from Eddy right appreciate it glad to see we're finding some bugs okay other testing updates that's great moving on to clients let's start with lodestar hey so past few weeks we've been mainly working on getting to spec spec compliance so we've were mostly up-to-date with 0.11 we're passing the 0.11 spec tests the two notable gaps are snappy compression request response and a few eonar things I don't think we have the eath to DNR flag yet so we're working through that and we're also gonna be fixing up our CLI to make it a little easier to run lodestar yeah cool Thanksgiving and did I see that you all had the state-transition merchants be zero alone yeah we current master is on d 0:11 cool cool so that means it's at least some of the core components are useful to developers and things that might want to use it yeah question for sure great thanks given prism hey guys parents from Chris Matthew labs so we launched our hope as test Ned attorney has 21,000 validators with 3000 Andy and right now we're about 40,000 slots since Genesis which was last Friday we had to skip one penalty yet except for one incident and if I am fixed and life and and like what was announced earlier we were able to sync with my house until the first epoch you'll find a consensus part of our imitation due to number due to a number overflow so so so so today wolf it's the part and then like baby we start a new dev test net for working with my house so far just the amounts a great feedback on topaz so we did all our process improvement micro optimizations and making our you acts better and that's about it great thanks Terrence Deku okay that's me so our JVM Lib p2p noise implementation is now interoperable with lighthouse from what I understand that go implementation needs some upstream fixes but then we should be able to fully interoperate with prism after that using noise we've implemented some optimizations so one is batch verification signatures within blocks this gives a modest but worthwhile speed up the proto array for choice algorithm is implemented and has been tested using Alex Russell's fork choice tests we've also reworked our hot state management in order to keep all of the hot state completely in memory so on restarts we regenerate it by replaying blocks on to the last finalized state this has improved our sync speed by a factor of three or so and our current focus in the current sprint is finishing up all the network changes for V zero point eleven the state transition is up-to-date that's all from techie great sounds great and that's I'm getting the noise interoperable I guess an aside just do we have an update on the the goal of p2p noise bug anyone from prison video monitoring that one you guys so not yet it still requires some some fixing on but under the p2p side the problem has to do with simultaneous handshakes and basically litigated Peters and doesn't really handle who should be the initiator of the handshake so that's still pending resolution we're still just supporting sekai o ideally once it's fixed we were just update to noise and allow the fallback to happen correctly cool trinity everyone steady progress on a be 0 xi s net there's a lot of lateral change going on with the client right now as this whichever judgment concurrency framework and python but still some progress towards test nuts internal changes to the for quois some ops work we've been doing on our team for running Trinity test notes and we also got an updated BLS binding over Milagro thanks to chain nice doing some speed that the US and Alex Nimbus I so on the core part we switched all test net one to use the magnet configuration so now we have test a zero using minimal untested one like uses many net we have some performance improvements to do in particular or processing is dominated by harsh reroute and we know that we have a lot of repeated harsh reroute that we can skip so some focus is on that and we also have stack overflows probably one that was detected by become first another thing and that is that currently we use this update and rewind rewind States to apply two new blocks two vowels I think lighthouse uses that use that at least three months ago as well but we are concerned now about it being a potential dose vector if some blocks or attestation are crafted to make us spend lots of time processing those on the networking site we have improved or syncing algorithm now we have more reliable thinking and we are we spent the past weeks also debugging discovery and the p2p in particular we had memory leaks some solved and we have at least another one to track down to prepare for auditing we are removing stale code and we are improving the handling of errors in all our four libraries the p2p cryptography and name become Jana's work and on the interrupt site we fixed the bug that led to different Genesis between Nimbus and lighthouse something that we talked about two weeks ago we have discovery between lighthouse and Nimbus working but we cannot talk yet and we also try to run prism locally and this part is still work-in-progress just regarding money talking about the database thing we do do that week we call it's fast storage so you store it's kind of configurable you you know you store a full state on say every epoch boundary and then you replay box to get the ones in the middle something we've done is that we we make the assumption that any block in our database has signatures verified so when we're replaying blocks we need to verify signatures so that saves a little bit of time a lot of time really but we also we flattened out the the state routes so it's another point is we only do it in the cold section so we only do it in the finalized area and in the hot section we keep all of the states there in the finalized section because it's finalized we flatten out all the state routes into their own kind of key so when we're replaying box onto there where we're not actually doing state routes we already know what the state return to that might be useful for sure getting into update we've launched to test nets in the last week four thousand validated test that and a sixteen thousand validator test that they're not a hundred sent to be eleven spec yet we're still kind of stress testing and testing out deployment infrastructure and against bugs we're hoping that we can launch a long-lasting 16k test that next week but we don't want to do that prematurely we've motion this long-running be zero point two point zero branch so we had that people are getting frustrated with ourselves and other people so that's now in master so master is now version 11.10 stew full compact for version zero point one point one we've raised several PRS and the network expect over the last couple of weeks to kind of address things in caches and stuff like this I've spent a fair bit of time learning and using ansible to automate our test that's it's pretty cool so it's I think it's like just SSH automation there's no you know software to install for it just SSH boxes and you define what you want to do in yanil so we can go so three commands go from nothing to deploy AWS infra with deposit contract and then you know like boot nodes distributed and F distributed validates deposited and the test that started so we've been enjoying that and we're hoping that we can use that it works quite well for managing multiple disparate tests and so we're looking forward to starting some test ends with short slot fines and other challenging kind of things so that thing is all fully open source except for hopefully authentication secrets at seek PD forward slash slight housewife and ansible if you want to look at it Adrian decided to sync with prism I managed to get the RPC working in blocks i downloading then we hit the state route thing we've spoken about that we made some progress on switching to Russ latest async programming feature called stable futures which gives us an updated execute async executors so we can avoid some locks we've been having we went and implemented safe arithmetic through the state transition logic so we can files with arbitrary States so that goal is to so that their implementation is panic free across any arbitrary state think we're getting close we're pausing it but hopefully we'll get that soon haven't found anything yet since that and to do that Michael wrote a rust linter that goes and finds unchecked arithmetic we ran it across the code base already found some interesting mod by zeros and stuff like this we're doing some research on suicide events to see if it's conceivable with our HTTP library it's looking good so far we're looking forward to jumping on that standard HTTP API when it's defined and finally Michael's revisiting our slashing production database and we're doing some thinking about exporting out so like JSON or some format so that we can transfer validators between my house instances and hopefully between other clients so we'll present that if when we come up with something interesting for that that's it for me cool thank you and I I think proto is managing his other another set of ansible scripts who generically deploy across different clients but maybe you can share about some of that in a couple weeks great I think that is everyone that's here right ok great generally I think people gave their individual tests and updates there are there's a public test sent out in prison I was working on some tests on stuff Nimbus has their regular weekly restart test nuts and some base interoperability stuff going on after you have anything else to update us on yeah I have some comments sure so two weeks ago I dropped a dot ten test net spec in favor of 11 because most of the clients are working towards or 11 I started backwards as time tried to bootstrap in network based on Teague my main goal was finding trying to find out what yet unfortunately I didn't manage to get this test net bootstrap I later added a lighthouse node to validate its configuration is valid and that brought but eventually I braked it and then I didn't have the time to investigate and was a little bit distracted by the tapas launch and also curious about adding a lighthouse node to tow past but I think most observe things being covered was called already experiences pampy networking yes I was just one consensus parks in general I would like to emphasize that we would probably have this single client test that's for why because they saw a good purpose was according client teams for interoperability I would encourage that we have more short-lived test nets so we can pass evaluate any issues that occur at the networking and synchronization consensus or whatever comes up yeah so if possibly we could start setting up very fast definites in the future that would be nice but I believe from from the colonization's on discourse as well everyone is going to that's my update yeah thank you okay any other comments on tests and stab Nets interoperability things like that okay well I think so I think one thing might be we've the eff to test Nets repo is using a config tamil file that describes the test net it was modeled off the the config directory in the spec but that's now kind of full of phase one stuff that's that's not really particularly interesting to phase zero clients so I think we're probably gonna see clients like we're missing a few things from there because it's not obvious anymore what is and isn't in it so there's kind of like no longer a firm reference for what that config dot yam will should be where is he so I guess an action for that might be that we're defining that structure would be useful I don't know whether you want to split it into two parts in the spec repo or we just define another structure for it because we've we've had a bit of trouble like I think it's gonna be saying to keep them separate or to keep them as sub components of one or the other yeah cuz it's a mess right now okay there's something prism I want to consider too is publishing one of those because we're having a bit of trouble figuring out I'm exactly what constants there we know there may not but just we're kind of doubting ourselves when we had the state issue yeah to us great we're gonna move on a research I think I'm gonna find a new location okay research updates who wants to get us started so we had our steering panel which is just kind of like getting researchers to was kind of like focused better and with that we're Makai elves we're going on a 22 merger dock I think that publishing of that dock is imminent crush our transactions were still working through put analysis you have some interesting results when were I'm sweeping the probability of a cross card transaction and that should be released soon Johnny ray is working on a network monitoring tool called purple sorry for anybody that's finished I guess that's a curse word in finish and and so he's connected to the total past test net and and he's able to monitor peers and walk the PHP of the Topaz Network Alex is continuing on these clocks Inc he's working on some things around verifiable pre compiles for to overcome the JIT problems are legit bomb problems with E's and as well as his PI spec breweries working on for choice choice tests for based on PI specs so he's wanting to make okay a essentially a transpiler that will take the the high spec and compile it into the languages you know tested to the languages of the clients rather than having to manually modify them and Dimitri's continuing on with disc v5 simulation and that's many surprises he's got it so you can compare about 14 different metrics let's just cool sure other research updates I can talk about my peer right all right so Paul opened an issue about the F F G and L n D vote in attestation is not being consistent and so I won't describe what the issue is but the fix to it is that when you receive at the stations outside of blocks you should check that the beacon block route and the target for that attestation is in the same chain so this introduces like some new stuff in the for choice speck no removals so it's still not backwards compatible but it should be hopefully minor change to the clients and I put the pull request in the chat if anyone wants to check out what it looks like some testing in there and to get it staged for give you 0 12 right and the full choice stuff so for trace testing try to get on it as soon as possible it should be in the next with major update to the spec fuzzy testing seems fine for now but somewhere down the line we also want to test for orchestrated attacks so let's see if we can get it in in the next major update and there is there's some ongoing work with Alex from six arts so let's make sure to follow up with him to to make sure we're coalescing on one thing okay other research items is allocating them for us that's either no or you need it okay yeah we'll anything on your end nothing new from the last announcement we are continuing to work towards account abstraction in the ether 1x endeavor and also thinking about ether 1 X 64 and have been working on just generally getting data so we can start evaluating how we might partition properly current eath 1 transactions if we were to expand it across multiple shards exit you just joined us perfect timing do you have any update from girls work that you'd like to share yeah I would like to share the equinox right up but we haven't shared it yet I think we did we did share a version with you Danny just for review yeah but we planned you to really get it out this week apart from that there was just a small post regarding the block hash on a tree search which was triggered by the atomic 64 work and has could have some implications regarding stateless deuterium but I think it may have more implications regarding the 8 1 e to merge I think these are the only visible updates from from our side they're cool and I thank you okay anything else any other research updates questions comments before we move on I can talk about the face one recent work so I'm working on two rakat our outdated face one xiaochun issues and try to make the current spec to be updated and I think we've organized to-do list and we will try to finish them in the cup next couple weeks and maybe we so we had a kind of the face one Friesen date last year and now I think it's a good time to make the face - baked to be stable as possible I think especially probably I know some of you began to look at that spec we're working on a always working on refining some mistake cleaning things up testing we're adding the validator guide adding Network spec and so certainly at the beginning of May if you haven't taken a look at it and want to start digesting it would be a good time okay other research updates great we didn't have an API call didn't mention that on Monday there were some decisions made there was some discussion of kind of this extra man proposed a little bit proto put together for a beacon API and the formation of a small working group to refine that make it as restful as possible and get an updated proposal out there's been some work done there I'm not sure if there's an update there in do you have anything for us or we're gonna wait watch out next week for updates I don't know people can see the other tab gooshie yes yes they're dirty small changes like we combined a lot of api's into single ones because there's a lot of naming and other stuff the different hopefully you can take a look soon and probably pitching some more endpoints yeah cool goal is to have as we have components of beacon an API to push them out more for public review iteratively so definitely get some stuff out show by next week thanks man okay we have haven't had a networking call in a bit we had that API call this week instead are there any I know my house has brought a number of small networking changes primarily around these gossip validation conditions trying to reduce the overhead of some of the caches and stuff is there anything else that's come up that you all want to discuss the glaring issues and problems we found 10 cents with respect to networking one thing I've noticed that my just view worth mentioning there's some issues for this but the the blocks that you could propagate and there's like really lots of different verification conditions but at the stations now like the box that you can publish on the network like not necessarily able to be like included for aggregation or the communicative language but they can't necessarily be put into fork choice so yeah I just wanted to point out there's lots of different things and we've had to really pay attention to like before we were returning an error on the HS state if someone said it's noted station in it we've got an error adding it to full choice would declaring that to be invalid but it is actually valid for an extension you get on the eve gossips to not actually get it to your fortress which is something to keep in mind right yeah the the conditions are first and foremost dose resistant conditions in the gossip and then like for example the block ones very obvious like we don't actually run the state-transition you know we see if the signature checks because that's a signal a pretty strong signal that a proposer wouldn't if we see their proposal kind of like someone doing the group work and so there is certainly a difference between fully verifying these messages and just verifying the dose resistance stuff so yes there are some disparities there they're networking things great spec items obviously we talked about beginning this part and I are working on a modified proposal to break up the mega rewards function into better testable components so that we can try to nip some of these rewards problems in the bud but we'll have an update on that soon any other spec things great open discussion anything anyone has talked about speaking of a speck stuff actually and we want to talk about there's this kind of brief a couple of changes that I think either I one of them I mentioned the other adjustment meant mentioned recently and they even if we like we think it's too late to do would add them into phase zero they seem like potentially good ideas for phase one so one of those was Justin's proposal to a unify uniqueness slashing for beacon blocks and shard blocks and potentially anything else that has uniqueness and the other one was the proposal that I had suggested that basically we tried to maintain an invariant that the maximum possible amount amount of money the amount of rewards ever everyone gets actually had based on like the base rewards divided by the divided by the square root of the balance so there's a nice and simple formula straight from the protocol for a calculating what the maximum rewards are so on yours that is true other than I guess slashings in phase zero I mean fee in phase zero it's slightly untrue the reason at is proposer Awards right so right now I think each of the rewards is divided by it was at five either for and direct are like 5 sec five sections of rewards that all add up to be its reward divided by this Groot of the balance but then there's also the total rewards that are like the other reports divided by eight so the know the proposer reward is actually a portion of the base reward ok so I think that is true right now other than this slash a visor being then that God changed the last time I yeah what let me check for gray right now but yeah so inclusion delay you that Bayesian word you gave a portion to the proposer and then you give a the rest of it to good rewards per log is for who write the proposer award as right okay so base rewards for a park is four and then yet base reward is divided by a divided by four and then they get base reward is added for once for matching source once for matching target once for matching head and then there's the inclusion delay reward and then we reward it first gives something to propose it okay so again and the remainder maximally the maximum the remainder can be given by than is scale for the tester right okay and then there aren't any fancy objects and pay zero except for the except for slash eggs but in swash hangs like more it gets destroyed anyway so we don't care right right okay No so I ain't an immune barrier I think yeah okay it's good to have in phase one then as for the equivocations I think there's a little bit of a mixed response my inclination would be if we want it to defecate mm-hmm proposer slashings in phase one and replace it at that message yeah it seems reasonable and I think Justin was under the impression that there was three there'd be three uniquenesses coming coming phase one I would add one points to but there's no shard of data stations so there's like two known objects right now right the beacon oh right any other speck things oh sorry the knobs back what I've always faster opening session anything else anything else anybody has hey Danny just wondering if you could give us the time lines on the next upcoming releases are the spec changes yeah so we have 2 0 11 2 that is in the queue right now that is backwards no to 0 of 1 we have the V 0 12 which is dependent upon the release of the next draft of the ITF standard we are in communication with the spec maintainer x' and they say it's imminent but they said that week ago so we're gonna continue knock on their door that would I mean ideally first week in May we can cut this release but I there's a little bit of this variables out of our control as for the modified testing of the deposit and of the rewards function that is something that will probably release to be 0 11 which would be totally non substances we've changed some of the test harnesses as soon as possible so essentially next week ok that's not ok thanks 0.12 we think that's version we want to create a bayonet or do we expect any other paint just following that the only thing that the only breaking changes through that anybody would be critical security fixes I'm not confident to say that we wouldn't necessarily find any of those there are ongoing audits of clients which might uncover things and there's the potential that we run into some bugs on the assessments interoperability testing but barring critical bug fixes the plan is to release is to bring that the v-0 12 to make that okay thank you and the as for the we're going to be able to release that IETF goodies near 12 as soon as they release that but there's also gonna be some lag time I'm getting these libraries updated so we'll signal to all the library maintain eyes once that's out to try to get that as soon as possible oh yes great thank you keep up the good work I'm really excited to see all these test sets and let's not be too surprised by five more books all right thank you everyone I'll talk to you all day soon thanks honey Thanks [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] [Music] 