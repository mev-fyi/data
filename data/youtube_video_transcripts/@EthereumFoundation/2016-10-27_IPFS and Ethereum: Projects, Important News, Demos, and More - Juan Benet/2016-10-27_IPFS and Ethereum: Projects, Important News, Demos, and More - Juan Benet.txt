all right thanks everyone it's great to be here again this year sorry for the change in the schedule I'm pretty sick and so I might cough during this presentation so I apologize ahead of time if that happens it's great to be here at DEFCON 2 it's fantastic to see that our communities have remained very close together that we continue to grow together that every day there's new exciting projects using IP FS or aetherium or both this year we have three presentations for you today I will talk about IP FS and give some ecosystem news daveed will % on lip therapy and DEF p2p family will talk about distributed applications and orbit and we also have two others in our team Jeremy who works in Go ipfs and Jesse who works on on file coin find us during the breaks and we can answer any questions you might have about how ipfs works how you can use it and how we can help you ad there's little time this year so I can't give us long of an intro into ipfs as I normally do and so these talks can give you the in-depth perspective into what IP FS is how it works and all that kind of stuff I'll give a super short intro instead and that is that that the content how we move content and how we address content in the Internet today has a lot of problems there are problems of inefficiency bad security models dependence and massive centralized systems reliance on the backbone censorship and more ipfs the interplanetary file system is a new paradigm for moving around data and addressing content on the Internet it is a distributed decentralized peer-to-peer versioned cryptographically secure verifiable file system a lot of words their IP FS is making the web faster safer and more open ipfs addresses all content by cryptographic hash which the central Isis and shifts the power dynamics of the web content can be linked to and retrieved without appealing to specific intermediaries you don't have to rely on huge centralized silos anymore you can link and together and whoever has a Content can serve it to anybody else this might be a laptop right next to you it might be somebody else on the planet you don't have to wait until one web server dies out ipfs also empowers blockchains to record timestamp and address massive amounts of data off chain this preserves the security guarantees because it is just hash linking it can also be used to build block chains themselves but that is a much longer story maybe someday I will give a talk on that the technical intro is that ipfs is a protocol stack it's a set of implementations and a project to build a merkel graph based web content is addressed and linked together using cryptographic hashing which gives ipfs the same fantastic immutability and authentication properties that etherium bitcoin get BitTorrent and all these other systems have beyond that ipfs as a data model that allows these data structures to be linked together making all of them more powerful as their address from one to another imagine being able to link from a and a theorem transaction directly into a git commit ipfs is a protocol stack it has a data model as I described and the nodes connect using a peer-to-peer network stack that we call lib p2p this is a very modular library and the vide we'll talk more about it later today ipfs is also self describing it is a future-proof protocol it is built on UNIX principles and it's highly modular all of its components from transports connectivity protocols content representation formats file chunker's file layouts all of these things are pluggable extensible and replaceable ipfs is an ambitious project it has lots of capabilities and features and many more are coming but it is also pragmatic we build in units of feature completeness so that people can use it to solve big problems today I have a number of ecosystem news for you today the first is that ipfs has two implementations now one in go and one in JavaScript over the last year since DEFCON we ship the the we ship the oh four series of Go ipfs that brought tons of new features bug fixes and so on it is seeming ahead with a large ambitious roadmap and though it's not at 1.0 yet it is far more stable than then you tried it before and lots of people are having a great time with it in fact yesterday we released Oh for three so we encourage all of you to update if you're using IP FS and thank you to all of you who contributed I know there's a lot of people that will be watching this that have contributed to this to this release the important thing about JSI PFS is that before with just the go implementation people had a cavitation of adopting a new protocol for the web before browsers have changed to adopt it how could you build a website on a new protocol if people would have to install something or an extension or something like that so we decided to build a full IP FS implementation in JavaScript and make it run entirely on the browser this is a huge undertaking and it is very powerful it means that web application developers can start building on ipfs without having to rely on on any browser change or any installation and so you can have a full distributed decentralized web application today with stock browsers another major bit of news is that dynamic content is finally here with ipfs previously people have remarked that well ipfs is great for static content they couldn't see how to build dynamic real-time web applications the decentralized distributed architecture just clog things up so we decided to take some time this year to implement the pieces needed on top of IP FS to build these kinds of applications this means a low latency pub/sub protocol and a set of libraries for storing and retrieving data that is designed to converge this means CRT T's so we set the challenge of taking these distributed data struck distributed data model there we go that was having trouble changing it and we set a great challenge for this we wanted to build a distributed peer-to-peer chat client capable of working in a local area network without having to connect to the backbone and that's horbet you'll hear about it later today another bit of news is that many of our probe are sub projects have graduated into their own full-fledged efforts one of them is multi formats this is a self describing set of protocols that are verifiable avoid data lock-in and so on you may be familiar with multi hash this allows you to multiplex many different kinds of hash functions multi ad or multi key there's a bunch of others these are headed for standardization at the IETF and lots of other groups are already depending on them so we decided to create like its own Organization for that another of these projects is lit p2p a modular peer-to-peer library again the vide will will describe more the last one is IPL being a thin waste format for representing merkel chain data structures IPL d is the secret sauce of ipfs it makes the merkel forest possible it makes it possible for you to link from one data structure to another what's really interesting for the etherium community on this is that soon not yet but soon we will have the ability to natively address aetherium blocks in ipfs that means you can take a theorem hashes and address a block look into transactions and look into the entire state tree in ipfs native paths without having to run and etherium node or EMA theorem light client this is great this is great for aetherium because it extends the reach to all other applications that run ipfs you can hand web applications or reference and they can look it up with an IP FS it's also great for archiving because a lot of tools for archival are being constructed around the ipfs ecosystem a last bit of news here is that the I profess project has been doing a lot of work on package management IP FS started its life as a data set package manager so it is naturally very useful for this the community has been putting package managers like apt pac-man Nix npm pi PI and so on on ipfs there's really good proofs of concept but some none of them are quite usable yet for production so more work remains to be done we'll be working on that over the coming months what what has happened though is that we are able to build new package managers from the scratch directly an IP FS and we have our own GX that we use for go so with GX we can package manage go packages with hashes and so like now you can know that the code is not going to change underneath you it's an important improvement there are other package managers built on top of IP FS spore and apple or two that come to mind dapple is a package manager for aetherium dot cool so i wanted to talk a little bit about some of the users that are using IP FS and if you're them together take a sip of water this is report a decentralized identity service it is built on top of IP FS and aetherium this is a CAPTCHA a decentralized social network it is built on aetherium and ipfs this is digits a an asset exchange it is built with a theorem and ipfs this is in fora an infrastructure system for scaling aetherium nodes and ipfs nodes again at 3 a.m. and IP of s this is you Joe music again using IP FS and a theorem this is Eris industries who is building a smart contracts platform again using etherium and ipfs this is block write a chain of provenance solution for four storage containers that is using you guessed it a theorem and ipfs the gist of this is that oh and this is balance 3 a smart contract powered triple entry accounting system I love that phrase the gist of this is that all of these applications are leveraging our technologies combined they're better together we are creating a lot of value individually but when you put these platforms together magic happens and all of these applications are testament to that we see more happening every day and we expect that more will come so we invite the entire theorem community to collaborate more tightly in all these things and let us know how we can help how we can help support some of your use cases if you're building on on ipfs and aetherium we'd love to hear you out and see how we can help the last thing i want to switch gears for a moment and address one of the longest standing problems in the ipfs ecosystem and that's news on file coin so the main problem our aetherium users have had is that ipfs does not on its own cost data to be backed up by the network this is by design as backing data up in the long term is an expensive operation that needs to be compensated or incentivized with some sort of value as you may know we separated that layer of behavior into its own protocol called Falcon a cryptocurrency file storage network there are a lot of reasons for this one of them is that if you use IP FS just as a browser and you have to store other people's data that be as good as if you can just use it natively right a lot of peer-to-peer systems failed because they try to force the system to do both of the same time so at the beginning our intention was to build just enough of ipfs to build fail coin and so we we race to build up your files we shipped it out and we were considering shifting our gears or falkland but three things change their minds the first was that there was close to no market for distributed data storage I run that time this was like mid 2015 a theorem and I confess were both young projects decentralized apps were just beginning and pretty much the cloud satisfied everyone's needs stone second we knew that sophisticated data storage needs would require blockchain smart contracts because many applications require a lot more looking into who is storing the data and why the third thing that happened is that we had a sudden and intense adoption of ipfs much greater than we expected this surprised us thousand of users came wanting new features and bug fixes hundreds of developers showed up started helping us out in the code they needed review they needed direction and so on so we decided to double down on IP FS and push back going to a later date now ipfs has been developed the e vm has been battle tested and proven and now is the time for far coin the markets of the centralized data storage is emerging so unlike you can think of a point as Amazon s3 meets etherium powered by IP FS and unlike other alternatives falcone is a blockchain protocol designed to do for storage what bitcoin did for hashing this is the hash raid of Bitcoin it's an absurd amount of power this is like EXA hashes now I believe it's a ridiculous amount of computational power the world's top 500 supercomputers put together we're left in the dust in like 2013 somewhere way before the knee of the curve and then we have this explosion every time I look at this graph I'm just astonished by the degree of power dedicated to this nowadays I think it's using more power than some many small Nations so imagine if you could create a network with that kind of an incentive structure for data storage so you could summon this amount of disks to show up in the network exabytes of storage add it to the network you know over the over what like five you know two years of massive growth and you know six years I guess of like proving it out that is what it's going to make distributed decentralized storage platforms capable of competing with the cloud because at the end of the day you don't want to sort your data in someone's laptop you want to store it in mines like this and some something resembling the data centers of today you want to use laptops for fast efficient delivery but ultimately you want serious operations the competition between the distributed storage networks it's kind of interesting because the reality is that we should be competing with a cloud the cloud is where everyone is throwing their data we should be working together to defeat that so at its most basic file coin looks like this miners rent their hard drives and earn a point for it they can then exchange that for dollars Bitcoin ether you on whatever users which could be people or applications or contracts would then buy file coin and spend it to hire the network to store data the first version of the falcone paper I published in 2014 describes the protocol with a core mining function which uses a consensus building proof either a proof of work or potentially proof of sake and then a proof over to ability it also talks about a secondary market and that secondary market though it features a little bit not too much and the paper is very important because you can use it to do low latency delivery using payment channels or state channels I like the Lightning Network right so you can imagine this chain continuing to mind a lot of nodes have a lot of storage and they can do state channels in this the cool thing though is that now we can add a a proper contract engine on file coin like I profess has had a lot of improvements but the thing that is going to set these storage networks apart from the cloud is things like this being able to do with bonding and collateral as victory from forum described being able to do reputation thresholds being able to do identity selecting based on the identity of the people that are storing being able to do geopolitical bounds when you are forced to store certain data within a certain nation all of these things can be represented as contracts when when you have a large network like this and this is pretty important for making any of these platforms capable of working so over the last couple of years there's been an enormous amount of exploration in this there's if your swarm is doing awesome work on this direction so aasaiya it is another decentralized distributed storage platform and there's a bunch of others in the space as well we've done some work as well and there's there's been two years since 2014 of great academic research into proofs of richer ability with new schemes coming out and a lot of research into how to do smart contracts in a much safer way we feel a lot more comfortable trying to do data contracts today than we were two years ago so the design space for Falcone is an interesting one we evaluated a lot of systems and we thought about what how to do this construction we could potentially build on top of Bitcoin we could potentially the load on top of the theorem and so on and consistently across all the vectors we measured a theorem demonstrated greater technology and a much more effective development community we have some requirements that the theorem doesn't yet meet for example we need a really fast volume and speed of transactions you know a gig gig of transactions per second that would be insane we want to get there eventually we also need this connected operation this means being able to operate in a distributed network where you're disconnected from the backbone so if your city gets disconnected from the rest of the world your applications shouldn't stop like imagine if you know with you your you go somewhere traveling and then you lose connectivity to the backbone and then nothing works like that's just untenable so we are building Falcone in the direction of being able to work in this direction so these two things are not showstoppers though because the etherium community is also very interested in this there's a lot of work being directed towards charting and these efforts and we think that we can solve these problems together so I'm excited to announce that we've chosen the EVM as our contract engine like beyond this we had two options either we fork aetherium and build our own network and this means working together on a number of problems and code bases and generally sharing strategies but basically building two different networks and the benefit of that is we're not blocking scalability and so on and we can proceed in that direction or the alternative is with virtualized file coin on top of the etherium blockchain this means working together directly on critical problems and code bases it means not having to build a large proof-of-work network to secure a Falco Network it means enabling Falcone to serve etherium contracts natively directly in the etherion blockchain hopefully if your iam could adopt the sharding in this connected operation functionality we need or will have to eventually migrate off the network to be able to satisfy those constraints but fortunately that's not a decision we have to make for any year at least potentially more an important deciding factor for us in this was the theorem community has been through tremendous challenges this year we've we've watched kind of from the sidelines as a different community yes lots of things happen and I want to remark that unlike other communities if theorem has demonstrated a very effective improvement and problem-solving ethos you are not afraid to come together and solve problems in the history of computing nobody has gotten everything right from the beginning and so the teams that are effective at groups that change the world are those that are able to course-correct and reinvent technology that they ultimately went out so we're excited to announce that we are building fail coin as a virtual chain directly on top of aetherium and it it will be accessible natively to contracts in the etherium network the third thing I'll announce is that we are planning a Falcone sale at some point anyway stay tuned that's it for me see you at the other talks today thanks for thank you 