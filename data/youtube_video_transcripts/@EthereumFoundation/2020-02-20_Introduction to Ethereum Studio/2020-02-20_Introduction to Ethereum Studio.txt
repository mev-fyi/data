welcome to this short video that introduces you to using the etherium studio to build and deploy your first D app so the first thing you'll see when you get to Studio aetherium org is this template picker we have a series of templates that get you started with the framework for adapt basically in increasing complexity so I will stick to the hello world example for the rest of this video and you can also use the empty project to just start from scratch I like to pick hello world and then create project give it a few seconds to initialize and here we go we have the IDE interface the first thing you'll see is this readme which gives you some explanation of the application as a whole and you'll also find comments in the code in each case and the preview tab not much happening here right now but will very soon at the bottom you have some statistical information and at the top you can pick the network just the browser for now but more to come soon you can also create new accounts to transfer balances between you can fork the project and you can also share it to a whole bunch of different places I'm especially a big fan of the embed you can embed the studio into documentation blog posts things like that alright so let's look at the smart contract as you could see this one is relatively simple and you can see the comments there to help explain some of the concept here if you click configure you can change the parameters of the public variables into the constructor so if I change the variable there and save it I will now compile and we should hopefully get perfectly good output here and now I deploy and we can see the variable passed plus the block number passed into the front end if we look at the HTML we can also see what is creating this page and in the JavaScript that is binding the smart contract and the HTML together everything here will live reload so if I change this and hit the Save icon or your operating system shortcut for save and refresh the preview you will see the HTML reflected live there in the transactions tab you can also see the transactions being sent backwards and forwards and the gas used as well and next to the Explorer tab is also the interact tab where we can do something similar to the configure and we can see the message sent by the configure tab but we can also use the update function which is exposed as a public function to change their message and if I click the Update button we can see the transaction here and the text changes here so to recap that the configure lets us change the initial message sent to the constructor and the interact tab lets us change the variables of any other public functions here 