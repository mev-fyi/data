[Music] [Music] itself [Music] is the largest and then exchanges so the combined sticky Pool Plus exchanges really make up the majority of um what's being deposited on the network and you know um that has many other implications and so uh in September uh you know 13.5 million East uh we're staked so a lot of money and more than 60 of the Eve was sitting with Lido coinbase Kraken and finance uh so all of these entities have a much higher likelihood of being assigned to produce blocks of transactions because they have more staked and so some of the concerns that were brought up when this happened or when this was realized as um obviously they're getting more of the rewards they're already most of the money coming from the network uh and there's a lot of discussion around censoring transactions around the network a lot of them use of sanctions and tornado cash um these uh uh are creating the rules for the entire network are producing all the Box and so um another uh type of you know decentralization or in this case diversity that's really important diversity and so right now you can see Gap is 77 of the uh consensus clients so what people are writing and so once again Peter he's another good person to follow if you're more curious about what's happening um you know it is uh similar to all the nodes are being hosted in one place or all there's a lot in a pool if something happens to be running that same consensus client and so um you know I read an article that it's not great to have one it's better to have a majority in ethereum uh purposely oh sorry A diversity I've had multiple clients running but it actually worked at multiple clients and one in a super majority that it is to have one consensus client so it is something people are working on and there are other clients that you can run the network will start slashing that group so anybody that's in that group [Applause] right now uh these nodes will all start getting flashed until the values less than one-third and so you're going from 53 below the 33 before the slashing would end so anyone posted on Amazon would suffer as a part of that and so you as an individual don't have control because you're a part of this potential flashing group and also as I mentioned you may have no idea uh where your notes are be hosted if you're going through some other type of service provider so everyone using gas is impacted so whether it's hosting whether it's pool because the pool is hosting there or the pool in general or whether it's at the client consensus level um there's a lot of risk of essentialization and you being penalized as a validator um and like every blockchain protocol has their own version of how decentralized they want to be um and there was a talk uh and you know he was mentioning that is sexualized networks and that there tends to be a bit of a tragedy of the commons when it comes to centralization or it's like this uh creating phenomenon where people don't actually care about it until it's too late so until this large group starts getting slashed so not something that matters because the performance of the network is running fine and most users probably especially when it's not at a technical developer conference are not that worried about decentralization they're worried about you know being able to successfully use their app and write the ethereum network goal is to be incredibly uh neutral resilient scalable and global settlement layer earn rewards and avoid penalties and so right as we've been um as I mentioned today the ethereum network actually encourages decentralization uh less penalties to run your own validator node for running your own individual client uh for not hosting or going through a pool in general um the ethereum community is working across all these points of centralization uh two ways to decentralize these uh different aspects so the node infrastructure layer the pools the client diversity uh the geographic distribution and block construction so these are things and coin distribution uh this is not a presentation ecosystem is like for the first time hearing they're very aware of all these things and working uh very hard to improve the resilience to sexualization and uh safety providers are trying to you know distribute where they uh run their notes options right so having an understanding now of kind of the the the landscape uh within ethereum and the requirements for being a runner what options are there for actually running your own nose so actually let me get the clicker from you okay oh well uh let's see here Administration you understand networking uh scripting Docker these are all skills that you have and so because of that uh you have numerous resources for learning about uh which nodes you want to run which clients you want to run and how you want to run them there's a lot of documentation with every single client about uh becoming an ethereum validator with them uh there's no limitation on the location of where you want to host your notes and there's no limitation on the client choice because you can take anything and run with it because you have the skills to be able to do that you can also create custom tooling so your developer your uh you're competent on the no running side you can also develop your own tooling for monitoring for uh notifications things of that nature so if you're an advanced user there's a lot of options for you out there now the entry level users uh so these are the folks that don't have all of the uh all skills uh mentioned above well good news is there are three different uh GUI based uh software options so this significantly streamlines the the level of skill that you need in order to run a validator um you might be limited on the location of where you can uh host that validator uh we'll we'll get into some of that but uh with with an entry node uh with an entry level user you're much more likely to probably want to run it at home uh you all might be limited on the client Choice uh because if you're using a software platform you're limited to whatever software or whatever clients that software has available to you so Windows Mac Linux you install it on your uh on your computer and then you can connect it to a remote server and they have a very simple tutorial on like setting up a remote server with different Cloud providers uh but really what happens is after you just sign up for a server you can actually Point their application to that server and then the application takes care of everything uh and it actually does it through a really cool technology called Ansel so basically send uh send commands to the server to set it up perfectly for you uh the good and so with this kind of setup entry or uh skill-wise you could be an office uh they have great tutorials you're looking at maybe about an hour uh or less if if you're following their tutorials it can be done very efficiently notable features uh design is a one-client diversity so that you don't have the whole network hinging on one client another platform uh this is a really cool platform uh it's different than the other one because this is a hardware platform so this is something where you have to actually buy their Hardware in order to uh use their software so it's kind of like that complete package which is great for some users where they just want to buy it and have a real easy kind of uh point-and-click setup but you know you do need to buy their Hardware uh you can't just use it on your own hardware and you also don't have Hardware Choice uh but skill level wise not us very easy to use uh we're talking an hour maybe a little bit more of a setup it's a little bit uh there's a few more steps in it but it's still a great user experience so notable features is there's no OS configuration because you're buying the uh Hardware you don't have to set up the OS it's a full package in that way uh they also have a really impressive app store where you can uh deploy notes from other blockchains or uh other clients and it's really cool foreign [Music] scale level wise I give this a moderate and the reason I give it a moderate is because there's a lot of options so for some users having that that amount of options could actually be something that is very uh intimidating and so uh but there are some great tutorials that you know can take people through you know setting setting everything out for a DOT node uh it takes a little bit more time because there are more options there's a few more things you need to set up um but their approach is really cool uh so notable future wise they they have this modular approach so you can choose you know different monitoring tools that you want to use with your uh with your node and they have a really cool way of just being able to kind of create this uh this way of just deploying different uh packages as they call them deploying different packages that are kind of part of your valued or Suite if you will so there's a lot of customization there um uh the the they have a very simplified OS installer so you can actually install it from a Ubuntu image that they provide and it just streamlines the whole process so there's less that people have to do uh they have a very impressive App Store as well uh far beyond actually nodes they also allow you to uh host your own dapps and things of that nature so there's a lot of options especially or in the ethereum ecosystem there's a lot of options and it's Advanced user friendly so Advanced users can actually do a lot of modifying uh there's a lot of kind of uh um there's kind of this like uh uh tweaking Community inside that node where people are able to set things up in a certain way to uh you know achieve certain goals and so that's a really cool advantage to being kind of uh this platform is there's places you can go far beyond whatever uh just in the Google yourself so uh no software is the best way to decentralized and that is my argument uh and the reason I'm saying that is because no software can encourage anyone to run validators from home you don't have to use a cloud platform if you can easily and simply run value your notes at home uh it ensures that updates and best practices are being applied so if it says someone wants to run a uh [Music] into you know terminal in order to try to get it all working but they don't know exactly if everything's working properly they don't really understand how everything's working that's actually where no software can come in because it can standardize how things operate uh and ensure that best practices are being deployed when you deploy the node uh when you deploy a validator uh it also simplifies uh client adoption you know ultimately if you have options inside this uh software platforms you can choose you know which clients you want to use uh ultimately that's where software can go and software can make it just really easy for people to uh pick their clients and pick the small ones and the unused ones so uh so what are some challenges to developing no software if that's kind of one of the key ways that we can really encourage people to run at home what are some of the challenges well it requires full stack development skills so we're talking back in the front so you have to be really familiar with the whole backing you have to be able to deploy notes uh understand Docker or uh if you're if you're disappointed directly onto the OS there's a lot that you have to figure out on that side plus you have to worry about the front end so you really it the software has to be uh really a full sack software uh in order to really be able to meet all the requirements to be a good running those software we're also talking about you have to have a deep understanding of no running itself you have to understand the best practices you have to understand what your software needs to look for XYZ uh while also you know right brain you also have to think about the user the creative side of figuring out user experience what will engage users what will make them want to use your software so you really have to have a deep understanding uh but uh I didn't really give an introduction to decentralized Authority what we're doing is we are developing software uh and specifically no software and so uh I wanted to uh talk a little bit about how we can see the no landscape changing with no software with tools like node launcher which is a typescript uh no deployment engine so no launcher is an open source no deployment engine written in typescript that enables the easy creation of no development applications so if someone wants to create a application uh that is for running those what no launcher does is it allows them to start developing that application without needing to understand the back end because it's a full deployment engine it will deploy the nodes in the proper way uh using apis the features notes can be deployed and controlled through standard apis you don't have to know how to uh deploy something on Docker all the proper Docker configs all this stuff you just simply need to be able to understand a typescript API which typescript is a you know amazing for uh application development and you can be Off to the Races to develop your own new software uh you are able to programmatically deploy windows and upgrade them to validators so one of the and what does programmatically mean here in this case uh like with the other platforms that we showed there's there's there's manual steps that you have to take in the uh in the process you either have to copy a file over here you have to uh you have to save this you have to do you know so there's uh in the process of deploying a node with those other software platforms there's certain processes that require human intervention programmatically means you're able to do this entirely through programs so you can actually have all the elements that would require you know a human to copy this over here to do this over here you can have that all done in a programmatic way so it creates a much more seamless uh user experience and you have way more control over the nodes and how they're configured because it's all programmatically designed you have seamless client updates uh with no launcher if there's a new client we uh uh and this actually ties in with this point down here we have a client test Suite so I'll kind of tackle these in a scenario that's happened recently where we have a client test Suite where when a new client comes out we're able to test it uh against this library to make sure that nothing breaks inside of this Library uh which no applications can use well uh earlier this year uh the gef uh death notes came out with uh a new version that actually Sunset a uh a configuration uh and it wasn't like widely used but it was a configuration in there but it wasn't in the recent so we actually put it through our testing or our test suite and we realized we were getting all these reflects we reached out to them like oh yeah they uh uh we're you know sunsetting this you know but it wasn't in the release though so there's there's elements to where you know even on the client side they can just make an update to something not realizing that other people might be using different configurations that would affect that this is where no launcher comes in by uh this can actually eliminate so uh eliminate that attack vector or not necessarily tactic but that slash event where where if there's a problem with death and there's a uh a feature that people are requiring and that's suddenly taken away and it's not realized how widely it's used uh no one should catch that before the upgrade happens so that's the advantage of uh some of thinking thinking uh holistically about the back end of writing notes so this is an example of what a simple API could look like so for for application developers this is what you need to allow your application to deploy a ethereum evaluator for the developers out there this is simple this is super simple you're not having to touch Docker you're not having to touch anything on the system the library itself is doing everything for you in the back end with best practices and this is all you have to add to your application so no launcher is it in use yes it is no launcher's been in uh well battle tested through node pilot no pilot is a uh consumer-facing node management software that uh we've been developing we're currently in beta we're hoping to come out with version one uh q1 the next year uh and make it fully open source uh so far thousands of notes and validators have been actually launched through node pilot so it's been heavily used um uh it started off primarily in another network uh pocket network uh which actually serves uh RPC calls to ethereum application so it's really cool uh it's really cool Synergy there but uh but the interesting thing about node is the fact that no pilot is 62 CSS 25 scss and 13 JavaScript so we're talking about like a web application but yet it's able to run and then deploy nodes and create a user interface and a user experience that allows more people to have access to note running and it's just a simple application ultimately with node launcher any developer can start creating no deployment applications like node pilot we want to open up this space so that there's Innovation happening on the user side of node uh software because we want more and more users to be attracted to the space and more users can be attracted to the space when we have these kind of uh uh when we have these kind of software that meet different users with where they're at or the features that they're looking for we can see that Innovation start to grow with tools like no launcher using entirely uh only node launcher so we're very excited about that um we were in the middle of refactoring I was talking to the dev yesterday uh he's like well yeah well the first right now uh has some bugs because I was refactoring and broken so right now what we currently have on our GitHub is broken but that's the beauty of what we're doing we're we're building it out uh and we're uh and then once we're ready to make it production ready it's in a uh right now it's in its own dedicated Branch um but once you push the master then anyone could actually use node launcher to create uh validators for ethereum uh where you want to add multiple clients uh by the end of the year uh development progress can be followed on our GitHub which is no launcher uh our decentralized and we hope to see developers use this tool or use tools like node launcher to create next generation of software where it's super user focused super uh uh super feature Rich so that it can attract more people to wanna you know if they're considering hey should I put my uh should I put my state in a staking service which I write on my own it's just so simple to run on your own and there's so many options for running on your own that you don't even need to consider giving your keys and uh putting your trust in someone else so kind of in conclusion then with everything that uh Maggie uh talked about and then what I'm kind of closing here with uh in conclusion ethereum is designed for optimal decentralization it's really designed to push folks to decentralization by having those large slashing events where if you're part of too large of a group you know using a certain client or on a certain cloud provider you'll start getting slash there's an issue there it really incentivizes the run at home decentralized kind of ecosystem uh evaluators can protect themselves by potentially uh from potentially large losses by avoiding uh oversaturated Cloud providers AWS 53 it's starting to get to a point where it's a risk if you Deploy on AWS simply because if something happens there even if it just goes offline they have a DNS error you know and something goes offline which happened last year they had entire data centers going down because uh an admin accidentally pushed a patch to their DNS that broke everything um that you know those kind of those kind of simple things could actually affect the entire network so it's becoming a risk to be on these large platforms uh and then use clients with less utilization in the network itself right now if you're using prison or Lighthouse you're in that 40 range uh so if something were to happen to either of those clients you could potentially see uh large losses uh but the good news is there are great options for entry-level users to participate in the ethereum validation I definitely encourage you to go look at those options that are listed on ethereum.org uh when it says uh uh say ethereum and they talk about different options all these options are there because they were open source all three that I mentioned they're really great options there's no reason to not run your own theory note today uh but then kind of looking to the future we are very excited we're very bullish on where no software can go uh and the kind of user experience that could become standard for node software uh and you know we're excited to be working on our side on the uh tooling side whether Cloud's working on the uh infrastructure and Hardware side so really the future is super bright with ethereum validation we want to encourage everyone to run their own ethereum notes uh on their own so that's uh thanks for joining us I think uh are we doing like a q a uh because we have like 12 minutes do we have 12 minutes because okay yeah if folks have any questions about any of this let us know yes yep yeah so uh so specifically so I'm not a developer so how exactly no launchers uh or yeah no launcher is dealing with Secrets uh yes what we what we do have is the uh RPC password for those nodes are actually being stored in memory so there are elements that are being stored in memory uh with node launcher and so they're not in playing text uh now we're still developing ethereum and figuring out how are we going to handle all the you know handle everything handle all the secrets but we're building into node launcher ways to protect uh from having um uh from having you know plain text uh anything on your server because we feel like that that's where no software should go to where uh there's a lot of security around how your uh what's being stored on your server and how it's being stored um and so utilizing something like memory is one way that you can put the uh password inside of uh inside the memory and not have it be sitting on your server itself so the RPC password but you can actually check out the GitHub uh as a developer and you could figure out how a lot of that's working so I'm not a developer so I can't get into all the specifics about it but that's kind of a general understanding of what we're building towards uh thank you very much this was really useful uh so two questions one uh the only thing stopping me from running a note at home I mean like locally is that I don't have a good connection I live in a very remote area so uh perhaps I don't know update on the best like uh set up for that and the second question is if I don't have 32 years and I want to want something at home is there an option so uh so dude that's the first one if you have bad internet so how penalties work in ethereal for being lazy right this is either you're offline or you're not keeping up or something of that nature the uh that's considered a penalty so what a penalty can be is it can either be a reduced in rewards that you receive or it could actually be uh where what you would have gotten if you were uh operating optimally is deducted so you're slashed very small amounts so say you're uh so in a day you know maybe your internet goes out for 30 minutes or something like that you're deducted what profit you would have made in that 30 minutes so you lose out on that those 30 minutes of reward but then it essentially is almost like you lost an hour right other words because it's you know it's deducted right so so that's where you can kind of gauge you know you might not be as profitable even if you're in a a an area where your internet kind of cuts in and out or something like that you just need to kind of gauge what that might look like and maybe it's worth running a validator on uh one of the test networks to kind of see what the performance is like to see okay would this be profitable would this be worth going um but then uh there are you know Solutions and uh I'll mentioned through Cloud that are putting uh putting a lot of work into getting servers and getting Hardware into different parts of the world into different regions uh that are kind of outside of the you know Cloud gigs so that if you really do have bad internet there there will be options where you can deploy you know to uh to Hardware providers that aren't typed that same like Cloud cluster that we were talking about earlier what is that both of your questions oh and if you don't have 32 weeks so if you don't have your 32 8 that's uh you are you can still run notes you can still run notes you won't get any rewards for them um but uh uh you you can you know there are other staking uh cooling options like rocket pool is a good one also if you have friends that trust you then maybe you can aggregate some people do aggregate amongst uh groups of friends who may not have uh enough eth and then you know adding the point of trust but it's a it's an option uh yes sir that would be the case I would say if if no software was maintained seriously so with no software people could minimize a lot of uh cost uh and and also minimize certain risks by just running at home so while yes you know you could have you know large providers like AWS you know it really comes down to you know six providers as you mentioned right six providers um sure you can go that way and send money each month or you can have an old laptop running uh where you're keeping all the rewards and you don't have that that overhead and it's that simple to run uh that so I think you're right in terms of just what tends to happen in these kind of ecosystems but uh but I think because of the way that that intentionally put in mechanisms to incentivize more and more decentralization I think the market will um uh will will match that right and I believe there are going to be a lot of options for node software in the future uh there's already three great ones out there uh we're building one ourselves and we're building tools that allow more people to build them so I think the future is really bright with that um so that's my thought may I may I ask if uh no uh launcher is cable will do integrate the DVD no Department uh I'm sorry what uh no department or dvd distributed uh I'm not particularly familiar what no launcher is uh in a really simple term is it's a it's actually like an API engine for Docker so it allows you to put uh typescript uh commands and then it automatically converts it into uh what would be either sent to Docker or sent to uh a container inside of Docker so because of that yes like it no launcher could actually be used for any container uh any container system we're focused on nodes because that's our Focus but you can actually use node launcher as basically JavaScript API to build any kind of container based node infrastructure uh or container based um application or management so it's very adaptable it can apply to any parts of the node any parts of any container one of the things we're building right now is the ability to deploy multiple containers so there's some like polygon that uh require multiple containers right in order to run their node it's actually multiple notes uh so we're building in that ability to have all those nodes all orchestrated and working together uh without needing to do it manually because it's all handled through the engine itself thank you so uh there are uh so on ethereum.org there's all that information so I definitely check it out there uh from what I remember from looking at it last night is uh they recommend uh kind of on the low side or on the recommended side was a uh i7 4470 which is like a 15 year old processor so so yeah and I said for like 50 years ago or something so anyways yeah ethereum is very well equipped for uh minimal uh Hardware requirements unlike a lot of other networks out there no you're just on the server itself needs to have those requirements um which are very minimal uh and then their application I believe you can just run on any computer that's running either Windows Linux or uh uh uh apple or Mac so two minutes yeah [Music] increase your profit on video by hurting like the big clients [Music] absolutely like so we don't have to integrate right now I was actually just talking about yesterday about it um we don't have it integrated now but it's literally service that you run alongside your ethereum validation so it's container yes we can absolute it and then that's what node launcher does makes running containers super easy and able to do it in a programmatic way to where it all automatically connects so yes absolutely possible hey um sorry yes thank you both for um [Applause] um I've been uh running with my own Hardware um I wanted to get like a recommendation on like uh was pretty complicated like uh you mentioned like the resources from the ethereum foundation then they they point to our random guys uh medium post and another random guys medium post which is uh not updated or how do I know if it's update or not um and good luck if you want to run any that are not like gas and like a typical condition of prisoner or like us right like the documentation for anything that's not like the main ones are existent so um first question is there a source of Truth in documentation which I can follow like uh to set up my own Hardware we do Bluetooth server and I go through it I mean I'm no not no machine or anything but like I can yeah is uh it is the best place to uh official ethereum documentation from the ethereum foundation is the probably the best uh but also it also depends on the client that you're using so different clients do have different Hardware requirements from my understanding each client uh in their documentations specifically State what their Hardware requirements are so I would actually look at the documentation for the client and see what the requirements are for that uh for that now the one thing you do need to be aware of is Maggie mentioned you have to run a execution client you have to run a beacon client uh and you have to run a validator which is really just a consensus client that's only job is to be a validator so you have to run three different clients uh so even though maybe the um the the one client has certain Hardware requirements you have to also look at what other clients are going to be using and then you have to you know bring it all together so I would say go to the client's documentation figure out what each one is after you decide what you want your makeup to be and you know use the information that Maggie gave you in terms of uh the usage on where uh how how utilized certain clients are to make your decision cool and uh just one I don't want to put you in another spot right but um for the sake of decentralization you see um I'm better off like uh going into well I don't think I could go to Domino because I'm running my own Hardware but like uh using something like ethereum or uh ethereum.org they actually do give uh in talking about these different options they do list out uh different features or different elements to them where like some of them have been audited right some haven't right so you could actually potentially use that as a way to gauge but um you know most of the time with something like uh yeah you know with stuff like uh both that node and uh cerium you know their your those aren't things that are exposed to the public right so the application is just sitting on your computer so if your computer would be hacked this is how serious so there's going to be risk no matter what options you use but uh yeah there is some information on the ethereum network uh thank you so much um thank you everyone for being here so early in the morning as I mentioned on lastded.com you can follow us to stay up to date on what's going on with no launcher and if you're a protocol uh looking for uh no software or even Hardware infrastructure want to decentralize you should contact us because that's what we care about what we like to do so thank you so much [Applause] [Music] foreign foreign foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Applause] [Music] foreign [Music] foreign [Music] thank you [Music] foreign [Music] [Applause] [Music] [Music] thank you foreign [Music] foreign [Music] [Music] foreign thank you foreign [Music] [Applause] [Music] [Music] [Applause] [Music] foreign [Music] [Applause] [Music] foreign [Music] [Music] thank you [Music] [Music] hey guys uh there seems to be some sort of confusion with the speaker I think he gave the same talk two days ago so he might not be coming I'm just confirming that so if you have anywhere else to be you can leave otherwise just wait around for like five more minutes until we come for cool thank you sorry for the confusion [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you foreign [Music] [Music] foreign [Music] foreign [Music] feel free to stay around or like Do Your Own Thing cool but what have impromptu talks if you want thank you sorry for the confusion foreign foreign foreign foreign foreign foreign foreign [Music] foreign foreign [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] thank you [Music] [Music] for the first time in my life [Music] I need you [Music] [Music] foreign [Music] I will give it a love God I'm losing [Music] will do what's right [Music] cause I'm here [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] foreign foreign [Music] [Music] [Music] foreign [Music] [Music] foreign foreign foreign thank you [Music] [Music] foreign [Music] [Music] [Music] foreign foreign [Music] [Music] foreign foreign foreign [Music] foreign foreign foreign foreign foreign [Music] thank you foreign foreign thank you [Music] foreign [Music] thank you [Music] foreign [Music] [Music] [Music] [Music] [Music] foreign foreign [Music] [Music] foreign foreign foreign thank you foreign foreign [Music] foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] this is foreign foreign foreign [Music] foreign foreign foreign foreign [Music] [Music] foreign [Music] [Music] foreign [Music] don't know [Music] [Music] foreign foreign [Music] foreign [Music] foreign thank you foreign foreign oh [Music] [Music] my God [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Music] foreign foreign foreign foreign [Music] [Music] foreign [Music] foreign foreign [Music] [Music] foreign foreign [Music] foreign [Music] foreign foreign foreign foreign foreign foreign foreign foreign foreign foreign [Music] foreign [Music] foreign [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] [Music] [Music] foreign [Music] [Music] thank you foreign [Music] foreign thank you thank you thank you foreign [Music] [Music] [Music] [Music] foreign foreign [Music] foreign foreign foreign [Music] [Music] foreign [Music] [Music] [Music] foreign foreign foreign [Music] foreign foreign foreign foreign foreign foreign foreign foreign foreign foreign foreign [Music] [Music] thank you foreign [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] [Music] [Music] thank you [Music] [Music] for the first time in my life [Music] cause I'm good [Music] foreign [Music] I will give it a love God I'm losing control tonight [Music] no matter how hard I try I can feel the ground [Music] you my angels [Music] [Music] foreign [Music] [Music] foreign [Music] [Music] [Music] foreign [Music] [Music] foreign [Music] foreign foreign [Music] [Music] [Music] foreign [Music] foreign [Music] [Music] foreign foreign [Music] foreign [Music] thank you [Music] [Music] foreign [Music] [Music] foreign [Music] foreign [Music] [Music] foreign foreign foreign [Music] foreign [Music] foreign foreign foreign foreign a couple more minutes yeah yeah I mean I don't know how distracting the green thing is going to maybe a little bit yeah foreign [Music] foreign that looks good okay okay hello everyone um yeah sure um hi my name is Jennifer I'm a software engineer at school um I just want to say um actually but of course the coolest one being the fury so [Music] [Music] the the title of these is spin it off it's been up holidays and yeah the way I think we wanted to structure this is basically in the beginning I'm going to be giving you like an essential side lines of like the different parts which is the demo um with their people that we're going to be sharing with you um the information on like the Wi-Fi if you need it and yeah then maybe this kind of like we wanted to incorporate it with you we can continue to like these steps on the validator so exterior like that so yeah I think one thing I'd like to mention like feel free to like just and drop this asking question um this is your workshop and this is why we also leave it kind of like a reflexible for you what kind of like exercises um you want to do um and then we'll see who's interested in exiting a validator um we we have some keys um that you can use um that we've already deposited um so and they will only be available during this Workshop so if you want to play around do it during the workshop um after that they won't be available anymore all of these of course powered by course games so yeah I think we're ready yeah let's go to like the essential like top that I want to give um [Music] um namely the yeah the past few months we're like working really hard um on an API um to automatically signify with us and I'm like I'm super proud that we're like this week we like released it um so I can publicly talk about it um kind of my baby so basically obviously before you automate something you have to do it all like manually um so I found myself running like lots of Docker containers and like running validators um just to test it and with Opus API you can actually just um call our API and it will um spin up a validator automatically for you yeah very cool and yeah we have like announcements on our Twitter and everything if you want to read more about it but yeah I think you're here to the the particularly so okay let's go to this and yeah I wanted to start with like kind of like a big picture looking to like the ethereum network um yeah we are creating here no so yeah this is again a quote by the time and I'm not going to read everything too but this is like a cool I think look into what is uh blockchain and the different parts that we are going to be seeing today our mission there but I guess one of the most important parts to I guess speak out of this definition is like we have here at crypto but yeah it has a lot of meaning specifically when it comes to like the security of the ethereum network it has two parts the crypto which makes you think of math and then like the economic part which makes you think of money and it's like math and money has a lot to do with like the things we do here but yeah and specifically like the role of validators here in the network so that is uh essentially like the idea that we have Behind These blockchains and there's like quite a few of a very like interesting things that they can do for example for me I do find that like the guarantees that they have to continue running even if people like are not interested in them that they are basically like infinite and they continue even like Beyond hopefully beyond the ages of everyone here president um they have like very high availability like uptime and everything that we try to keep here on the network and basically all of these uh blockchains that we kind of hear about they're part of the school they're part of this thing called like consensus protocols right and when we think about consensus what we're basically talking about is trying to keep like a huge number of different computers in sync even in front of like all the challenges that you could find to keep like a number of distributed computers like always in think in sync which could be like Network outages or even like a denial of service like attacks and we know of those here's in hearing ethereum yes but basically when we try to think about like this definition we are basically conflating like two different things or two things that are kind of conceptually different especially when it comes to like smart contract platforms like ethereum and for example when you're running like an ethereum full node and yeah by the end of this Workshop I hope everyone here is like capable of doing that then it is true that you're running like a consensus protocol so on that side you're working hard like connecting to other notes and trying to bring like all of them in sync like I said but at the same time what you are staying in sync on is like this set of instructions and these instructions are in themselves like updates to the state the state of the machine that we are running right and these instructions could be like as simple as like transferring money to one side to the other thing is good at that but also much more complex things and well I think this talk would have been better at the beginning of Devcon but we've seen like so many of those applications uh during the week all the things that can be done no so if you're running like the full note in ethereum then you're also like responsible for like the compute and the computation of all this uh instructions that we can on consensus of and those are very two like two very distinct responsibilities that are worth worth like separating and when we see that well what I'm talking about it's obviously like the separation between what we call like the execution layer and the consensus layer in the Protocol no that is like kind of like the main architecture behind the notes that you'll be you'll be developing so we want to dive just a tiny bit deeper into these two things um on one side well you can see the the architecture there but yeah on one side we have the consensus and this consensus mechanism so you might be wondering like okay how does ethereum keep like this x number of validators uh in sync and well nowadays or by the time like I Was preparing this presentation then that number was like X correspondent to 441 747 active validators but there is a world right where there could be like millions of this or we hope that there's millions of those running and we can actually like cap the amount of uh notes that the ethereum network can handle because it is a function on like the total supply of ethereum that is currently like on a network but yeah to understand like a little bit more about the relationship between like Supply and if then I recommend like a talk that was given here called ultrasound money and won't go very deep into that but yeah to go back into our topic and ethereum today uses something that is called the caspers gas per consensus algorithm that too long didn't read is uh it's not really like a single algorithm that controls the network is like two different and very complex algorithms one bringing like the block finality and the other bring in like a four choice and I do love talking about this so I will go a little bit deeper I hope I don't lose you um let's see Casper ffe is the name of the finality algorithm so basically and yeah I want to relate it more to like the validating process so during the block proposing plot process like the one-off basically randomly like one of the validators of the whole set of validator active validators that I mentioned is selected from the pool however what is expected is that the network will grow like in a single blockchain one block at a time one by one but sometimes the network like I said could fall out of sync and produce or broadcast or two block uh true validators might broadcast like two ballot blocks that could be potentially added to the network uh and when that happens that creates something that is called a decision or like a fork and even like small Forks are very like existential threats to like the protocol or different distributed systems because there should always be like one true blockchain or one canonical blockchains so Casper the idea and not going into the details is to like give certainty to like this one true blockchain and the fourth choice would be like it's called lmd ghost helps to complement this customer protocol and like I said most of the time it grows one by one but sometimes like the choice appears okay which one of these four choices should we choose so this is like a function that takes like all the different paths that are in the chain and speeds out like the one canonical chain that is going to be ethereum and together like both both of these things uh try to keep like the network Instinct at all times I think that that's a pretty cool description um going into like the execution part like I mentioned and basically a ethereum is definitely more interested in like being a consensus protocol and the ABM is interesting but in my opinion is a something that can be changed in the protocol but yeah ethereum exists in a Network that has like the thousands of uh computers and each of them is currently running like a local version of the ethereum virtual machine and basically the AVM is like the place where all of these decentralized computation happens so smart contracts and all the transactions that we know and that is the place where all of those contracts live foreign like it doesn't matter what kind of computer you have or what kind of client you're running it basically is like the same environment all across the network within jvm There lives like a number of entities are called accounts and like contracts objects and they will which feels like everything within within the network and basically what davium is has to do is basically follow like a set of rules and the main rules there are that everything should be recorded in blocks everything that happens inside ABM and should be added to like the public blockchain anything recorded in the blockchain cannot be undone and all objects should have like an owner and they cannot be altered without the permission of the owner this is very basic some of these things are changed depending on like different applications well and different like things are going in the protocol but this is like the basic rules I think going pretty quickly in this another thing interesting thing are like the different clients so today in the workshop we'll be using uh two I guess minority clients I mean it's difficult to to still say that Lighthouse is my minority but yeah will we will be using that at some point and also like thank you for for what you've been doing what you'll be doing and also in the execution side we'll be using bezel which yeah I think we could say is pretty minority and yeah like we said we have like this execution part and these consensus part and we have execution clients and consensus clients uh the execution client will listen to the different transactions they change the state of the evm and they hold like the current copy of well the state and the consensus client well they keep all the machines in sync so that the proof of stake uh well consensus algorithm can work nope and well if you're having like different implementations is actually like a great asset I think we all know it um and yeah the important part there is to keeping like each of these implementations under like our security threshold so that the network can say online at all times um yeah I think we're all aware of the importance of client diversity so yeah we wanted to use minority clients today so yeah a little bit more into like the validation process uh it's basically what it keeps a ethereum secure now and sticking on ethereum can take many views well let's take like the more canonical like idea of what stickiness uh definitely a lot of changes going on in the in this industry yeah but okay canonically what it means to stake is to secure the Ethereal Network by making a deposit which has like a transaction of a financial bond which is uh 32e that you have to like deposit into like what is called the deposit contract of the team and the idea there is that if you validate transactions honestly then you get like a certain payment and if you are this this on it dishonest then you basically can lose this Bond because FN does not have like a native delegation model then you either go through like running your full note or you could have like a few options for example like the most decentralized of the liquid sticking Solutions are probably better and yeah maybe other options that we don't want to encourages Okay so um yeah going a little bit further into like those rewards and slashing conditions um basically here I just want to quickly mention like the incentives and like the design solutions that the protocol has had but like very quickly so in the same sense that you have like an execution layer and a consensus layer then you also have like execution rewards and consensus Rewards so the consensus rewards make like the biggest like piece of the pie of their rewards at a theme and they basically come from like doing like the other stations and proposing the blogs at the station means voting inside the system okay uh voting for the different blocks I'm voting for them to be included and very rarely then producing blogs I mean you probably will be producing blogs but it is kind of more random than doing like the other sessions and in the same way that you can earn those rewards then and the exact amount that you earn is what is detracted from like your balance when you uh are offline for example on you you fall into like what is called the inactivity like and that isn't like really slashing slashing is a completely different thing um hopefully today we'll have enough people to like try that and see if we can get a slash in you know it doesn't it just to see how it is but yeah and session can go like from like one if to losing like the complete one so the effort 32 weeks off that you have in your balance and yes finally okay you have a question yeah uh exactly basically a this penalty that you can get usually comes from being online and it is the exact amount that you would have earned in the same period like you said and like you said a slashing come from things that directly attack like the consensus of of ethereum so that is usually like either double signing putting like the same keys on two different machines is very common if you like forget I don't know probably shouldn't is money after all and and also like the basically trying to do like surround voting which is difficult to explain but basically you're trying to change like the economical change to back uh like the historical data that has already been added to the blockchain in the future but yeah I can explain later if you want yeah I I guess that the the last thing I wanted to mention because it's very important for what we're going to do is uh yeah you can pass I think we talk about it keys and signatures so today we will be actually going through like the process of generating keys and everything here in front of you and keys and signatures are like the main cryptographic like Primitives that allow all the communication that is going on in the network when you look at the most like base level uh you can definitely look into like the different block explorers and you see like all the different keys that are interacting with each other all the contracts which also have like these different signatures and everything and yeah hopefully we have the time to look at in in a blog Explorer and they worked through something called hashing um which is basically a cryptographic term and it's more like a more efficient way to like securely store data inside the blockchain which is like the entire basis of the protocol I think and basically you have like this digital signature that represents like the validator and you get it from like a key generation algorithm that will will go through in here like I said and there's also like a sign-in algorithm and a verification algorithm that go behind like the scenes to to Really verify that everything that is getting added is well correct hopefully we have like the time to see all of those things and yeah I think I hope this wasn't very boring to you like I think this may birthside beyond what the protocol is it's important to like understand what we'll be seeing so yeah I think it's time for for the demo nice okay then I'll take over um and I will just work from this GitHub repo that you can try and find um so basically the way I kind of thought um might be helpful for you it's like I'm gonna walk through the demo um I would kind of like recommend you kind of then in the self-study time retrace my steps you can just do the same and then yeah gone um the Wi-Fi I think it's best to connect to the Defcon workshop on yeah I think so it's not working it's working for you okay are you are you guys okay with the internet you think you're good okay it's working on mine what's case West Coast you can borrow my laptop cool yeah all right not my nfts um yeah okay what was I saying yes I'm gonna work for a demo I think it'd be best if you didn't kind of like retrace my steps and then there's kind of uh some exercises like first we're gonna do like try the lightest client then you can try the taco client yourself and then number three is like fairly challenging but obviously if you're feeling adventurous um you can walk through uh this steps too and then I think we'll kind of like reconvene and then see what people are interested in you know we like exit our validators or we um I don't know explore the block but let's get let's get into it um okay actually let me just let me just uh kind of like describe the test uh the steps um that's a great brilliant question actually so generally on a higher level like what you need um to actually like become a validator on ethereum is you need to generate your keys that's like step one um you need to set up your infrastructure um and then like make a deposit of like 32 Eve we're gonna use testif by the way and then it takes a while for the uh validator to be activated um and because of kind of like we have to take a shortcut because also like girly if it's like pretty uh sparse um and also like this like waiting for the validator to be active I don't think it would be feasible um in this Workshop so basically what I've done is um I already generated Keys um for test Nets and we we do have like some of the infrastructure already kind of like set up um we have like an execution client and a beacon notes which is already synced provide the course one and basically we will set up the validator client and connect to that and this will be on testnet so no like private net any more questions before I jump into the demo laughs thanks so much there's like a seems like it's a market it's a real Market Nicole we can do an auction later all right um got this weird setup because my screen is broken but this works actually really really well all right um let's start Ayah Steps step number one what we want to do we want to generate our keys and the way I do this um I actually if like if you go into the repo um you want to open this link which takes you to the staking deposit CLI it's an open source project but if you're in Foundation when you open link um just downloads um the state the the CLI for your operating system um probably best if you just I've already downloaded it so you don't need to watch me um do that um so basically what the deposit CLI will generate like two important artifacts um number one is the information it's called the deposit data the information I need to make my deposit and number two actually probably the most important it's going to generate your private signing key says like Gabriella was saying before whenever a validator like basically just makes any attestations or like propose a block they need to sign it they need to sign them so they can be hold accountable um so is there anything else I want to say no no I'm just gonna like run the CLI to show you what's uh how this works um there's this command called numemonic which will like generate a mnemonic for you um anyone wants to know what a mnemonic is or is everyone aware laughs um basically mnemonic is like a list of words you will see in a bit because it will generate it for me um which represent the seeds and from this kind of like seed I can generate my my private keys and the cool thing about this is that it's like deterministic so the same mnemonic will always generate the same key so in case you lose your key um you need your mnemonic to regenerate them is asking me a few questions I'm gonna pick English I'm gonna pick English I want to run one validator um oh yeah of course does that work cool um this is an important bit Let's uh we're gonna do this for girly test that Ayah and then what the deposit sale I will do is um as I said like generates my private signing key and it will decrypt it um and the file is kind of like called a keystore file so here in this point I'm gonna select the password which I can then use to like um encrypt my private signing key I'm gonna type it in again oh yeah this is my mnemonic the thing I was talking about um need to copy it and put it somewhere don't show it to anyone um and this um oh cool let's go it's quite fast um so now it should have generated my keys in here let's have a look um the first thing is the deposit data um as I said like this is the information we need um to activate our validator because when I generate my keys no one knows that my keys exist right so actually I need to um submit this information to the beacon chain until it's a like hey this is my information I want to become a validator basically um but I will go into this in the next step I just wanted to show you what is generated here actually let's look into the keystore file um so this is my uh encrypted private signing key it looks a bit scary but actually if we decrypt it with the password that I've typed in before it would just be like classic private key not not scary looking at all um so yay we generated our keys um really like important things uh just to remember actually the most important if you remember anything from this section like this is the private signing key and we're going to use it later at start a validator client gone okay they use the same hashing algorithm and yeah the same the the keys on the accounts basically look the same like if we look at uh the Explorer you could see like they all start with like ox and because they use like the same hashing algorithm basically yeah could I use this system and use that because no because there are different like entities inside ethereum like a wallet is recognized as like an account and this is recognized as like a key okay um where are we testing testing testing testing yeah there it is [Music] um any questions because I'm going to jump into the next step um because now that we have our keys um the next thing I want to do is make it on deposit um also oh yeah I've edited like lots of like reading materials so you can that first search your way into the demo um if you if you want to make a deposit um the best thing to do is go to this like staking launch pad um and you're gonna walk it's gonna take you through kind of like some questions I'm not gonna do it all in front of you um but it's actually like if you want to click through this this actually gives us a really good information like what like about deposit about uptime and general information and once you get to the end of this checklist um it will ask you to upload the Json file that we saw earlier um namely the deposit data and then you connect with your wallet and if you're super lucky you're 32 if and then you can just make the deposit girly that's quite important actually um to use the correct Network um okay actually this is um pretty pretty neat graph I found on the prison documentation so again as I said like when we generate a keys no one really knows about them so we have to make a deposit then kind of the validator comes into this deposited State um and it in in the end it joins a queue this is actually by Design I can talk about this um probably later on um but then the most important thing is like it joins the queue and it takes a while from to be connective um and then as a as Gabriella already said like you I mean if you're validator like participants in consensus and everything's going great you're getting rewards but it could also be that like your validator I don't know like you like make a mistake well they misbehaves and then you would get slashed and um it could even get to a point where you get forcefully exited from the network um also like if you um if your valid data has been like nine days active then you can also voluntarily exit your validator although there's no there's no turning back if you actually valid data it's done um and at some point you will also at some point after the Shanghai Fork we will also be able to finally withdraw a reef okay I think that's everything I wanted to say here so we generate our keys we made a deposit and now we're actually ready to set up our infrastructure can you repeat it sorry okay yeah I see your point okay I mean in this Workshop I guess we are showing you how to run your own node so you will be your own Staker we do have our direct says like liquid sticking Solutions because to be to run your own node you would need like 32 years which yeah it can be a limitation to some people there are like other liquid sticking Solutions where they ask you either like a smaller Bond or you can do like uh just a deposit uh the stake in all in a different protocol deposit like I don't know one if if that's everything all that you have and you get the stake in rewards without having to run your own uh your own validator like at home like the the entire setup and okay yeah then there's also other Solutions we have like this API that you can do these steps easier with [Music] um but yeah I guess you you can be a solo Staker you can stick with like adequate second solution or like a staking pool or yeah steak with centralized entities um Gabriella actually gave like a really good uh overview before of like the infrastructure involved and I just want to repeat that because I think it's like um really really important to note um so what we need um is we need our execution client um which is responsible obviously for executing the consensus um we actually already have like we will have a bezel not set up um and then you also need the consensus client and this kind of consists of two parts um it's like the beacon note which connects to the P2P Network and then the validator client which um which which you're going to run locally which actually manages um which which manages the validators um and again here we had to take a shortcut um because the both the execution client and the beacon note they actually take a while to think um I noticed like workarounds but I still thought it's like easiest we already connect to an uh synced um execution client um a bezo note and a synced Beaker note um I believe that's a techno note um again both uh provided by chorus1 so I think the first thing we should do is just make sure that the beacon notes uh we can connect to it I would actually be tragic if not but let's have a look I was trying it before so that's that's okay and seems seems fine we could connect it um yeah I also like included a link for like the whole like Beacon node API so if you're feeling like you want to explore like what the beacon note looks like you can actually um again in the demo you see the the URL from the beaker note that we provided and you can just play around and um send some requests if you fancy it okay so um summary we have an ex we have a big note synced connected to an execution client already synced um so all we have to do and is we pick a validator client and the one I'm going to show in a demo right now is Lighthouse so Lighthouse is a validator client um written in Rust um they have really cool documentation um actually I think I think when I started looking into this there was still fairly minority some they're really caught up hahaha um oh yeah okay so we're gonna pick Lighthouse and what you do is uh you pull the docker container sorry okay I can talk again um I've already I've already like pulled the docker image um so let me just uh try and see this if this works yeah so you don't have to watch me uh download a Docker image um and once we have this set up actually let's let me now jump into vs code because it's going to be much easier I think to show you all this configuration okay so I'm gonna jump into demo and then Lighthouse config um and Lighthouse has like a neat thing um this validation validated definitions yaml where you can configure all the validators you want to run in this client instance and I'm just going to walk you through this um so you can actually like run multiple um multiple validators in one instance and you can like here's a flag to enable or disable um here comes the voting public key um you like that would be from the key that we like generated um so here you basically want to say okay I'm running this validator and this is how it will kind of identify you um since the merch we also like have to um or want to um configure a suggested like a fee recipient um yeah actually let me go into this so um before proof of work um the miners would like receive some kind of tip um in the transaction when you put them in a blog and now with now after the merge actually these kind of tips go to the validators um so with the fee recipient you just kind of like um specify which address this should be sent to I just put a burner address in there because if I don't Lighthouse will like start complaining and logging uh some mornings oh yeah and then actually most importantly here we actually want to configure our keys now that we've generated before um there's other ways to configure them um just for Simplicity um we're gonna go for local key store um and then you just kind of um show the voting keys or path to so basically um remember um are the key store are encrypted private signing key um this is what you point to so you point uh Lighthouse to the path and then you give it the decryption password um because obviously it needs a signing key to like sign whatever other stations you make um so this is all the configuration and just to show you here um is my voting key store um and Lighthouse is just want to mention this letters is very opinionated about how you name kind of these uh folders and files so if you run into errors then it could also just be like maybe you had like a typo in a name or something um but now I have any questions yeah so if you should exercise oh and so basically what uh what I meant is like I could actually have like two or three validators just in this client instance uh running yeah I think it's important to say you have to have like one execution client connected to one Beacon client okay but inside the beacon client you could have uh several validators it's like a one-on-one one-to-one relationship between the reconcline and the execution client but many validators and it's fine a specular um audible yeah yeah any of those works as long as you're having like a one-on-one one-to-one relationship between debacon and execution board thanks for mentioning that yeah it's actually important thanks cool any more questions um I mean the idea there is to have like more of an opportunity I guess to end like their rewards and propose more vlogs and I guess on the other side like to keep like more secure the network like the amount of validators is like a measure of security I guess okay foreign yeah that is what I meant when I said that uh this is like the canonical way of running it but there are a lot of things going on in like this taking like part of the world well like she said if you want to learn more about distributed validators go ahead we had several great talks about it here at Defcon we actually had a conversation about yes right and it didn't take too long for someone to bring up this review to validators I like it um okay I mean keep the questions coming um it's really important so now like we finished the configuration of our Lighthouse client um we can actually jump into like running our Docker container um so basically I I need to um you know do the Quran I expose the port um and then I mount um I mount my configuration into the docker image so it's accessible within um within docker and then here this command is fairly important like validator client because Lighthouse offers um it actually offers also to run the beacon node and validate a client in one process and but here obviously we want to kind of like split it up run it separately because we we want to connect to a synced Beacon node um Lighthouse also has this like um argument in its flashing protection so what it will do is um it will kind of like set up a session protection database um I would have to point out though is that this only works within your client that you have running so if you have like two Lighthouse clients running then this slash in protection this internal one doesn't help you um we specified a network we specified a beacon note that we want to connect to and then I need just this validated steer argument to tell it okay this is where my configuration lives um so then you see I'm pretty sure I haven't done this before honestly if I have to come out of my history so don't have to type it all in um this looks good actually from my point of view so I'm gonna try and run this um and hope it works okay so what's interesting here in the logs okay yeah we want to run this for product that's really important um oh well no it's going quick um this is my yeah it found and enabled value data in my configuration um this is the voting public key we can quickly check if it's true yeah exactly is the one we configured [Music] um what else is interesting oh yeah this is really important it connected to the bigger node um if the beacon note wasn't sync then you would see this in here um it would tell you like the beginning um and now yes this is also very good news so the validator that of running that are running is um known to the beacon chain so that means we actually made the deposit already and it's active um yeah and this is a validator running um now to show you kind of like a proof of this um we're gonna go to Beacon train um probably like the one of the very famous tools to kind of like analyze your validators um I'm gonna copy paste my public key and now okay now it shows me some information um here you can actually see like the the statuses I was talking about um so when we made the deposit it was in the deposited State then when it was like queuing it was like in a pending State and now it's active and the reason why it's red was is because um I I wasn't I wasn't the key wasn't running anywhere so I only just started the validator client with this um with this key um and this is why it's uh leaking so if you're if if you're like like this is my validator uptime is so important because if you don't ensure that your validator is like running you will lose some of your deposits yeah I think you can show in like the other stations yes exactly um you would see that we were missing a translations because we were offline since started running but yeah you can see we had like a lot of missing at the stations because we were offline but yeah cool um that worked out perfectly we are attesting um is there anything else interesting we can show in here um maybe can you I don't know yeah question can you pass him the microphone please uh yeah no since you guys have asked them anything interesting so one thing that we um I've been paying more attention to I guess most validators probably will pay too attention to it to some degree is the effectiveness rating um I don't know if you guys have already um talked about that but that can affect the um the degree to which you uh receive like the full amount of a reward for a testing or producing a block um just yes kind of measures how like the latency or how late you are in terms of being able to that test um yeah I can't see what it is right now because I'm like kind of blind but uh what is let me see it should be on the top yeah effective in this rating okay yeah I think it's 90 percent no is it this one no no 50 50. oh that's weird yeah I actually don't see it I can we can look for it maybe we'll find it yeah give us a minute and we'll find it yeah okay um but I think this is like this kind of concludes the demo um if you want to kind of Clone the repo no no no absolutely don't be sorry actually this is what a workshop is for like if you want to interrupt us absolutely okay yeah um yeah I guess I forgot to mention also something that is kind of kind of important when I mention like uh the for Choice rule when I went into that point so basically what you're attaching to is the blocks so you propose the blog very rarely but everyone should be attesting to like the blocks probably all the time like you would want to have like a 100 attestation rate like it's a little bit common in in now improve steak uh it is like that the analytics show that it is a little bit more common to to miss other stations but yeah you should be addressing each block I'm voting and the reason I mentioned like the for Choice rule is because ethereum is has this rule of not like for example something like Bitcoin which is like the longest chain but it is the chain with the most weight and the weight is measured in other stations so for example if you had like an event choice between like two forks and one of them them weights more like has more at the stations added or yeah they're like cryptographically added I guess uh then that is the chain that it would choose uh you is there a way to withdraw the stake in Rewards or is that also locked to the Shanghai update yeah so like I mentioned there's two words like like rewards you get them in your wallet and you can withdraw them like immediately from there if you recipient address that you you decide so those comes from like the different like transactions so the transactions that you add inside the block they have like a tip and you get those those tips and also maybe something more complex like Meb that like that also goes into that and then the consensus one are the ones that are locked and cannot be moved and those are added to like the balance so for example you can see there can you see yeah the balance says like 32 points something if but you what you added when you're deposited is 32. so you already earned something there but you cannot move it yeah and eventually when withdrawals are enabled there will be like probably two options like do like the full withdrawal so like all the all of the basically if that you have or like just a remain like what is above 32 because you should always have like the 32 okay to specify so the wall of the address you entered earlier where you had it in the editor that's the one where received you will receive the execution Awards there yeah and you can move the frequency how often they're paid out I mean it really depends because it is like determined by one new uh proposal log and that is basically random so very hard to I mean you could like analytically say that for example you propose a book like once a year or something but yeah that would be like a curve like yeah you you propose basically randomly randomly chosen thank you you're welcome question at one point you said like the you're mentioning the difference between like the Bitcoin node and the value the validator client um you don't need a validator client to like uh sync with the rest of the uh of the of the concerts uh b2p right you know the client needs to be connected to the beacon node yeah and this is what um I actually configured when I let me show the command again when you went to the yamo yeah no no actually when I started the docker container um I had to specify the beacon note that I want to connect to but let me if I can pull this up again I can show you um and this is really important because other like if we don't have this the validator client can't can't run so um it's actually this bit where a specified a beacon notes um and otherwise you wouldn't be able to start I mean could you have like one bigger node and run like different validator clients inside it yeah you can connect multiple valid data clients to one pick a note okay I think most clients allow for that but yeah definitely check the documentation but I think most of them allow for a different Beacon chain and a Recon validator client huh at this point like doing this Workshop we didn't spin up the like the week or not like you had it beforehand exactly yeah yeah um because because it just takes a while to sing it takes a while yeah good job okay thank you so two points I I believe you were asking about thinking right between so I think the execution client and the consensus client need to be sent but like the validator client may be need to be connected right not correct yeah yeah and the second thing regarding attestation sorry and to add to that yeah they are sync because they are the parts that are actually connected to the peer-to-peer networks so they have to sync to all the blocks and rewriting at the station as to what I know each validator need to attest once each each Epoch right like each 32 plot each Salon yeah each 32 slots the validated has to attest only Oneness right each Epoch you say yeah I think well I think that they have these things called committees and yeah basically yeah to get a little bit more complicated yeah 128 validators are chosen each slot to attest and these committees are like rotating so they rotate between them because it will be it would actually it is already kind of hard to to reach consensus in time with the amount of validators that exist so there needs to be like at other models to like aggregate the different signatures and one of them is like the sync committees that it is what she's mentioning yeah you are right hi uh I just got a quick question quick question uh where's the execution client running I mean is it running with the together with the typical node uh in this setup of yeah like the the execution client um we have um we have running um summer you wouldn't you wouldn't see it because like the beacon notes is um connected to this exclusive execution client and a beacon node is basically what we make available here yeah okay is it running on Curry's one yes exactly in this in the slide so they can have like the full full look at the architecture of a node that is what a node looks like okay like a full note you have the beacon node execution engine they connect they talk to each other um yeah we have both of them currently running on course infrastructure and we just connected a bigger node with the validator client is it recommended before you would be then talking about things like latency for example if they are like two separate you could fall into a situation where they don't communicate in time so when you are like trying to I don't know propose a block and you go into the consensus you missed Aslan um it definitely would depend on like the capabilities of your machine to do so um but yeah you definitely have to like take a consideration like things like latency and uh yeah the capitalities I think actually also one point um let me go back to this uh how to run this uh Docker command you can actually connect to multiple Beacon notes and this is sometimes recommended um just to have some some kind of like failover to make sure you're like connected definitely connected to a bigger node that was nice that was like really nice questions yeah thank you um what are we gonna do I think I think so yeah actually oh maybe maybe one point um the Manchester conversation um maybe like having walked through this demo maybe you're noticing some kind of like limitations um with this like set up um a few of them kind of um I think are obvious like we we had you know we like configured local ski storage can be maybe a bit dangerous if you just have like your key store locally with the decryption password um what you could do um to kind of like improve this you could actually store them in bold in that case uh there will also usually picked up um also because we're just running like one validator client um we are really dependent on the lighthouse software and this is exactly what Gabriella shot before um we saw this actually with with um prison like a few months ago like they had like a lot of validator clients were like like prison was kind of like represented and the problem is just like if there is really like a bug in the software um it just it can become really tragic for ethereum for the network because it could be that like the the chain can't finalize and this is why it um client diversity is so important um just so if there's any errors uh the network can survive and then um something you can explore in the in the exercises is um I already talked about the searching protection that Lighthouse has a few if you're actually running like multiple instances or multiple clients this won't serve you um so there's one exercise if you like again if you're feeling adventurous you can actually use a remote signer um and if you have like multiple clients you connect the remote signer that would um also enable like slashing protection you just mentioned the like the key management part um if you could elaborate a little bit on like what you see um people actually do with their keys um and like the good and the bad and then the second part is the from what I understood is basically these two Json files it's all you would what you'd need in case your computer that you're running a node will be stolen or burns down or whatever so it's really as long as you have those two files the hardware doesn't really matter is that correct um you mean like the deposit data and the keystore Json right yeah these two Json files so the deposites essentially you just um basically needed kind of like to make the deposit um and the keys um as long as you have your mnemonic you can regenerate them that's true so if you're if you're like Hardware is broken then keep your mnemonic and you can regenerate from from there it's been up the note again because it as long as it's offline you could spin it up again and then you should be good exactly yeah okay yeah and on your first question one of the things that I guess it's not an issue but it is important to note is that you always need to have like your private key online so you cannot have a like offline like store securely in like a bold you need to keep it like online so that they they actually add the network can connect and you can actually sign like she said there is these Solutions like the remote signer and yeah other like different kind of solutions where you can have it like remotely or store somewhere or yeah they they're like a lot of things you can do in terms of like key management and it is definitely important I mean I've known of people who have like their key freely on their computer like just sign in like that and yeah it's definitely like a security risk even if you do have to keep it online at all times thanks again so much for your questions gone so um we'll be working on what you're addressing about uh like uh best key practices like this is um uh where could we like uh do you recommend any sources where we could read more about this and uh like those uh best practices security find those out for you and send them yeah thank you there's like there's one section here um which goes into like a remote signers yep um and if you like open this up like one example that I give is um web pre-signer which is fairly like it's um a kind of a famous product actually so if you go into this link um there's also like good documentation because with um with this remote signer um I don't want to go too much into it because like you can like read through this like now um but there you can I think it supports um storing your keys on either HSM or in a vault um or locally okay and um let's say that for some reason like those keys were compromised uh is there anything I can do or if I go Direct what do you mean compromise uh compromised as seen uh something important to someone please don't no uh like I connected my uh laptop to the HDMI of the New York where Times Square screen you connected the same computer where you're starting your keys something no no let's see uh I don't know like everyone in here those keys like they are completely compromised yeah I mean is there a compromise I'm sorry you just got wrecked yeah okay sorry and um last question was now that we went through all of these like this is uh the manual setup right let's say I have my own Hardware I set this up myself what are like the pros and cons versus using something like a stereo more dab node or any other like uh simple UI I would say I mean yeah those Solutions are pretty cool like there like the pre-installed software so you don't actually have to do like anything of these that I've just shown you and yeah I I personally think that there are good solutions for like first-time stakers or anything but yeah I think you get a lot more customization through your setup uh by doing it yourself and configuring everything and yeah that gives you like a lot more flexibility into what you can do with it with the with the node um so I mean the purpose of this is really to like share the knowledge um because um this the strength I think this trend is like good to like make sure like some like a lot of people can run notes but they also over simplify um which can also be a bit dangerous um so I think it's like definitely worth worth learning worth understanding like the underlying kind of infrastructure um and with this if we if like more people actually customize the setup then we would have more diversity because the why we end up with no diversities because everyone runs the same product and they run the same notes foreign I would say on like the key management stuff like at coinbase what we would do is we would import the key into like an in-memory embedded database so that way you don't have to have it like you don't have to store it like um on your desk so you could import it from like a vault like I don't know like Hashi Corp or something like that if you set up the remote sign over with web3 stuff that consensus has you need to set up a postgres database um one of the ways that they manage risk around key like let's say you lose your key what they would do is they we have pre-signed messages with the ability to exit so like if things got compromised you would have a pre-signed messages you can just submit to the Bismarck contract exit so you could also take that approach yeah that is a good approach I think it's always like a good thing to have like a database when you uh store what is happening with your nodia so I think these These are the signer keys right that is separate from the withdrawal key correct yeah so so the risk that he would have if his keys were compromised is someone double signing and then at risk at uh being slashed okay that part I have correct yeah what would the withdrawal I know it's not available yet yeah but what would the withdrawal process look like when we're ready to withdraw some of our friends I mean that is to be specified by the ethereum foundation and yeah they did like this whole discussion I think it was day one or day two where they went into like the different possibilities for specifying that but yeah that spec is not ready yet um honestly I'm really I'm really enjoying this um it's been really nice conversations um I guess the the idea like if you go to the repo and you unzip these key Stores um we have like 16 Keys pre-generated already deposited and active um I would say you just choose randomly whatever which one you like and then if we're really lucky maybe we get um slash I think it would be like that's the worst thing that could happen is that we get like slashed heavily um because you're using probably people will use um the same Keys um but I think that would be quite exciting to explore actually and you'll have these right like you'll have access to it everyone has access to the repo um then again unzip the key stores and you can pick one of them um which you can run you can run a demo and just continue if you have any questions just give me a shout um happy to help thank you I think I think okay you have a question okay yeah but this is like the time for you to like do what we just show you and see what happens like anything could happen right now yeah so if you didn't cover it specifically but you mentioned you showed the like set up your own validator demo uh site that they have set up I was going through that and it was everything was going fine and then I saw that they wanted me to like do Port routing on my home router which was like opening ports on my computer to the general internet and that freaked me out I wasn't comfortable with that um is that necessary to to be ready to say was that sorry um in the in the um not yours but the like how to set up your own validator website I understand staking launch pads I mean when you click through it oh yeah so in in that one of the steps is to go into your like home router and open ports on your computer to the general internet and is it um so the only way is it somewhere the only way where this uh kind of like would make sense is like for the for the beacon notes to sink um because usually what they do is um I mean either like you configure it that you have like checkpoints but usually they like really like try to like you know find other like notes that makes it easier for them to find more peers yeah okay I'll say so okay but it is not so there it is the third shot I forwarded the necessary reports to the correct machines so uh I guess yeah so it's not necessary to become a validator it just makes it easier to find peers um I mean to be honest like now I'm not so confident no I think that means like opening the ports for like the connection between the El and the CL like between themselves don't see sense that I connect into the internet I don't see it okay so if I'm if I'm running my eoncl on the same computer then that is not necessary that wouldn't make sense because then you don't have to open a portrait right yeah that makes sense yeah okay before okay him oh can you answer the question yeah okay he has the answer let's see so um it's not technically necessary but um we've run many different types of notes over the years and you will fall behind the synchronization yeah so uh it's it's uh meant for uh simply that that the peer-to-peer network works you need lots and lots of connections and if you don't have any incoming Port it means you will have outgoing connections that will bootstrap and you will sink the chain at some point but um it the the incoming connection pools is uh like a scarce resource on the network and the longer you stay online you sometimes get blacklisted by other nodes and there are many different things that can happen so usually what happens is that you see like you have start with eight connections and then it goes down or down and you have one and then you have maybe zero then it tries to strip again and then you fall behind and then you will miss some at the station so it will perform worse um and uh I don't think it's uh that critical I think the most yeah the three all three all three um that is the most important one to have opened um because that is the majority of the data that needs to get pushed through the other ones the 9000 is uh sort of less I I'm not sure I always open both but I think the three or three or three is the most important one thanks so much like it's that's exactly right it was peer-to-peer reports are necessary for finding other beacons to communicate to yeah you need those to broadcast your messages and then also like you know to sync as well and um the way that like communication happens to your clients is like it's going to reject something that doesn't match the spec so like you know even coinbase has those ports open so like you should feel comfortable having them exposed yeah I get your concern but yeah I think maybe let's start talking about Network configurations if you are if you are in a hosted environment okay what you absolutely must do is set up a local firewall um for outgoing connections okay because if you are in any sort of heads now or AWS or other environment that monitors for a network attacks you will get your service contract canceled if you just leave it open like that because in the in the payload of the peer-to-peer Network people are injecting weird stuff like uh not not uh not assigned IP addresses and so on your note will try to connect to those and that will be seen as an attack and actually I had to do that multiple times to restore my service contract with them this guy runs not only yeah that's why that's why I invited him to the top in case I couldn't answer have answer any questions thanks so much sweet so to continue what was being said about the ports I'm actually a lighthouse developer and I handle networking so the thing is that when you start your node you connect to some peers but on time you're going to be dropped because they're going to prefer smaller peers or I know maybe they're going offline doesn't matter you need incoming connections and since in networking we are forwarding let's say like information about one peer to other peers so that they can connect between themselves um it's likely that your information if you don't have ports open it's not going to be forwarded to other peers and even if it is because I don't know maybe it's wrong and you are claiming to be reachable from the outside they're going to try to reach you and it's going to fail um so yeah it actually makes you vulnerable to attacks not having ports open in that way because you need to have pure diversity exactly thanks a lot thanks nice to see a let us development yeah cool who is trying like who is doing it to see you you nice are you guys trained do you find it difficult or what is going on is there someplace you know I know for the shortcut you didn't show how to do the execution client is there some place where um I could see that that part of the process like do you did you make a video of it by chance or oh like how we set up the display clients they have um documentation on how to go through the entire flow of setting up the execution layer um as well as consensus layer client so I mean in case yeah [Music] cashier there's a bunch of resources on well um you wanted some more information about slashing is that the two main things that well the two really big rules you have to follow are no like you said a double signing so if you have like and these Keys running on a certain infrastructure make sure to exit that infrastructure before you decide to deploy it somewhere else and the second one is called surrounded voting and this is like an attack tactic towards like trying to change like the historical data in in ethereum basically trying to change the past of the network and those are regarded as like attacks on their consensus like they they affect that part so that is why they are like regarded as slashing conditions I mean you can have that uh you can set up like uh do we have like a database for like yeah um the slashing database basically kind of like records who's currently um proposing and um also like with this web free designer product um if you have like multiple instances of it running it would usually like connect to like one kind of like Global database and by date like by database locking um it will always kind of like update like who's currently um like you know signing which at the stations um to avoid double signing so like if one key is like currently like doing something then a second key like actually the same key running somewhere else can't uh access it sorry a small no I mean I guess yeah I mean it's like this is like how you like you know record the state and make sure like kind of like lock someone else's um to like make sure you have like a current process um yes we mostly pretty much 100 tested and operated with running um uh the same client type for both the beacon and the validator node um have you guys tested running like a prism validator against like a lighthouse Beacon node um those different combinations I know the EF Foundation um they they have they test different combinations but mainly between the execution layer clients and the consensus layer clients not between the two execution layer client components yeah like um yeah we totally we totally tested that I think we we still um I've heard from a few clients like still preference um do like uh kind of like black house Speaker notes with Lighthouse client um sometimes we like just to ensure kind of like uptime um you want to configure multiple Beacon notes um there like you have the option like generally like so far it's worked it's worked fine actually I think um I'm pretty sure that this speaker node is a tackle picker node and we just connected to it with a lighthouse client um so that's that's one test we run just now and to the ones that are trying if you go into any errors or you find something cool to show definitely sure maybe now it's time to start some elevator music some launch backgrounds so they play music after all these things yeah like this exactly awesome amazing [Music] thanks a lot for coming I hope this was like really informative uh we definitely wanna you know promote everyone that if it's possible to run a note you don't even have to run like a validator node you can also run like just a phone without that does not validate and those just keep like the consensus going so yeah I think that is possible even if you don't have like the 32 year so yeah thanks and you can still stay here if you're working and well we'll also stay here until like the designated time me if not then thank you for coming again yeah [Music] thank you [Music] of course foreign oh really oh okay which so I use WSL I don't know if that is a problem you know I think I should work let's have a look um [Music] 