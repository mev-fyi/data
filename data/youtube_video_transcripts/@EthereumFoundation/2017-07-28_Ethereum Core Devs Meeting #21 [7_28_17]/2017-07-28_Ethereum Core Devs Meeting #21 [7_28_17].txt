[Music] [Music] [Music] [Music] [Music] [Music] [Applause] [Music] [Applause] [Music] [Music] [Music] [Music] [Music] you okay great all right I think that the Internet can hear us now so we can go ahead and get started on the agenda today all right the first thing is a palo talking about AI 96 he has some unaddressed comments and issues about the block hash contract so you can take it away pause there is not a lot to talk about today I think in this case but I left some comments around month ago or maybe even more than this and so I have I have like different implementation but it has not been finished yet so I cannot talk about this this time but in the in the main pull requests there are some comments and one so it serpent rated issue about signed integers but in general I think this is not finished case in terms what is exact the contract that we are going to inject in the dedicated account so Nick and I I or Nick has been working on some tests with the version of the contract that I came up with two weeks ago and it seems like no what's the progress on that neck so we eliminated the backfoot we found earlier but the I seem to uncover another one but only manifests when it's added a lot of passions which Ivan tracked down yet because reproducing it requires creating all transactions oh yeah okay it's right also there's like a pre requested the pre quest that also have my test that I was working on some time ago so I think we'll take it from now it's like we should try to cooperate after the meeting next week if possible on this because yeah I was busy with other stuff recently and that's a bit not prepared for this meeting but I hope we can yeah almost finish it until the next one yeah that's okay yeah okay cool so yeah sounds like we'll have more information the next meeting or actually if we could just finish that up in the EIP itself since that one that one's going in to Metro right yeah okay great yeah cool all right I'll put that as a to do it was that any any other comments on that hmm all right sweet we need to decide names for Metro part 1 & 2 or we can just keep it as Metro 1 & 2 doesn't really matter to me much I think it'd be cool if we had names anybody have any ideas I was gonna say I like metallic suggestion for Byzantium and that therefore the second one should be called Constantinople wait what was that first suggestion Byzantium oh my sentian so wait okay maybe this is weird because I was I was thinking about exactly those two cities to Staunton opal okay I always say Byzantine is that just because I'm American or something so Byzantine is the diamond um it would give refers to things that come from the city of Byzantium ah got it okay that okay you typed it thank you I got it here now I'm good with that any other comments so the metropolis name is gone when we accept different names there's two approaches one of them is for the first fork to be called metropolis in the and to be called something else and for the the other s that we call the too hard for Excel to typically separate things and amid the the brands metropolis can kind of abstractly refer to the whole thing okay yeah I kind of like the idea of it abstractly referring to the whole thing or having having like metropolis buys basically like a metro bison to me and yeah and then metro Constantinople just whatever people want to use yeah I'm good yeah I what I'm gonna do probably is just refer to it abstractly is the whole thing but yeah doesn't truly matter except to like I guess it would need to be more specific for things like technical or spec papers like the yellow paper so cool all right well any other ideas other otherwise this sounds good and will probably float it and a few more channels before it's like official mm-hmm cool next one is updates to testing let me see yo Ichi do you know of any updates there okay so we sent it changes like gas price change gas cost change for mode X the status code in the transaction receipts these are already affected in the same tests however in the 3m tests the metro police version is only one Hot Wok not yet so we will work on splitting the changes into - okay great let's see anything else or is there any is there anything that is impeding any progress or anything that you we can help you with yo each year the for the testing team itself I think we can gradually moved more actually using the test suite the comparing variants and I probably demetri demetri also expect feedback from clients James because they might find the bugs in the client's but here probably they will find the balance in that test suite as well so we are we expect these kinds of feedbacks okay sounds good yeah just let us know and the core dev Channel and I know that I think we're gonna get to this in a second but the gas prices and opcodes because I don't Martin sent some of those in and there was a few other people in the channel doing that so it will get to that soon okay so details and implementations of the IPS we I think get and parity generally have the same updates every week that they're pretty much done death or parity is there any other updates you feel like mentioning no no not really you know where's your waiting on okay great CPP aetherium anything worth mentioning just correspond to the updates to test that you just mentioned because that's come from CBP implementation so they of those two updates new mod X cost formula and you didn't start wanting to receive okay sounds good and then yeah you know each II any issues or comments about yellow paper all right pull metallic paya that not much cool all right we can move on to item two determining gas prices for new op codes and pre compiles so that is mainly Martin I oh hey alright I didn't see you come in here okay a little little while ago just just came home yeah so let me paste into the awkward F channel my latest measurements from a while back I don't really know how to how we go we're gonna go about to decide the gas costs we should compare them with the old one or we should if we should try to decide on what kind of CPU architecture it's a target one and then try to reach ten minute gasps per seconds so basically what I'm trying to do is just provide some numbers and you can take it collective it on there I don't know okay so one thing that I wanted to bring up about this is if the gas prices are misconfigured what is the risk to the network or is that something that it wouldn't be so for harmful before we could change it again at the metropolis part 2 well we realistic would just be in a network slowdown so if it was if it's we terribly miss calculate then the network look there's a risk of dos attacks like last year if we slightly miss calculate then like an attacker will be able to put push the uncle rate up to like 25 percent instead of 15 percent for otherwise that Ohama long fine okay that that's a little yeah that's actually better than the risk I thought it would have and one thing that we can mention with these I mean the new things that we're adding now they're all CPU intensive so they're the kind of easy measure as opposed to something which is more depends on the size of the size to the state or whatever so I think we could we can make pretty good detailed analysis on on what the cost should be but then the question is how do we decide what they optimal is and should we should we make any other changes while we're at it and like well I guess we should not but okay some of these operations use code that is heavily tailored towards or at least on some architectures it's it's assembly intensive or something like that is our machines like like arm and other architectures in scope here and should we check the performance there too or should we just assume that it's probably fine what's your thoughts on the matter I am in ago I think Christian was gonna say something we're all very polite here yeah we tell icky would do you want to go ahead you know i inclines to say just checking it out just on standard computer should be enough because you know I I don't expect any III don't see any a priori reason why these opcodes should be much worse on arm than anything else that happens in aetherium do we have I mean can we easily test that on arm indeed we can now be tested perhaps we should just run it once and just check that it's not terribly off and yeah do we have like a theory I'm like if you're in one embedded devices and so forth a mobile phones yeah I think go has a built for for ARM architecture as C C++ does not we can try working on that but it might take too much time to be work are any of these libraries optimized for have assembly optimization for x86 I guess they also have they even have SMT optimizations so you could assume that they're they're not optimized for arm so if you disable all the optimizations and do a measurement that would be the appropriate for our Uranus so in terms of C++ we don't have any assembly enabled in the underlying big number library that we are using but the reason for it was mostly it was easier to integrate this way so far so the library called MPI R has done like different paths for different architectures even for different revisions of Intel CPUs and so on but we haven't enabled that because it was harder to build on Windows I think but it speed ups the performance by by seven times more or less so the benchmarks are there from my side R for the code that has not been optimized for particular 64-bit x86 architecture so the other thing I wanted to mention so Tim he got a week and a half ago was talking about putting parity benchmarks up and I know he had worked on them before did he ever put those up or that I guess follow-up questions should there be a centralized place for all this or is this something that can just stay in the core dev channel and we keep up with yeah I think orchid a published some benchmarks prepared you the other day in the quartet Channel yeah the coat was the benchmarks is there someone just needs to run them compared to other implementations on the same machine okay I missed that link I might try to find it okay cool so let's we should get some people on that like cuz I feel like this has been going on for a while so we probably just need a group of people and I know Tim volunteered so I might try to get in contact with him and then yeah so you were asking Martin should this be on one I guess type of just be targeting one type of architecture you were saying but I'm kind of saying that we're starting to get the numbers we have some numbers to go on and some code to go on the next step is how do we it well to actually decide on the values to use that's kind of my take on it okay how has that worked in the past for for instance homestead like is it as simple as just deciding in a chat or was there like a anything formalized online or because I wasn't here back when homestead or I wasn't you know on the Chordettes thing when homestead was happening yeah Vitalik do you remember how it worked or Christian did we have such things and hosted yeah actually you may have not had any changes but I guess this would have been yeah actually you wouldn't have had that many so maybe this would be yeah that'd be way too long ago like frontier just the launch yeah so um I'm gonna think more on this and maybe Martin if we could collaborate on getting this figured out but I think we can just figure out who and the chat has talked about running these and then if we need to get more numbers that's fine and then if not start throwing out recommendations for people to comment on generally I find that if you just throw out like a list of like here's what it can be and then people will just give their opinion that way yeah some example that in the gist that I put in the whole quarter now there is a calculation for what the gas price should be if we go for 10 million gas per second on my particular machine and I think all the new operations should be increased by half or by third like 60% most of them 60 to 90 I should be increased a bit and it looks like all the the old ones are heavily overpriced right now particularly like pretty clear I Pandey yeah so so I'll probably suggest that we raise the gas limits from the current suggestions in the Eve's okay I took note of that and one other things so we might have talked about this before but in order to test this on different computers I guess would doing this on as you're eight of the us across different you know packages that have different like CPU GPU specs would that be beneficial not GPU things I can't imagine yeah I don't know enough about how these tests work but I was just thinking something that would optimize running them all right um so yeah next steps for that I'm going to let me put that as my to do I'll talk to Martin more about it and we'll figure out a way to find some more people to run these on their machines get some more data if we need and if not just start suggesting things for people to comment on yeah sounds good is there an I wanna I mean when maybe we form some small group who can look into it yeah our arc Arkadiy is there anyone from Paraty side who's ran this or would be good to help with this at least from running it on parity yeah I can help good okay great yeah and then we can make justice for the next old Cordova call great okay so the primaries are gonna be Martin and Arkadiy and I'll get in there too just to kind of learn more about it great and then yeah by the next all court call we should wrap that up let's see any other comments on that [Music] make them anything okay great next one review time estimate for testing and release it's gonna be August in a few days and I believe we originally said something like August to September for testing and release would be ideal I know that last time let me go to the last agenda there was a couple of like very important to do's and I wanted to go over each one of those and see where we were at so let me put those down okay so the first one Nick and metallic you were working on the 96-98 and addressing concerns with gas scheduling in 198 what's the progress on that okay so for 96 we are continuing on Nick is working on the tests and will continue to go back and forth on that and will report back to the group when we have something that looks like it's passing everything for 98 98 is the intermediate state removal rate so I remember that the thing that we had wanted to do was basically replace the 30 starting from metropolis block replaced of 32 bytes with the intermediate state route with a single byte that he is a 1 if the transaction passed and a 0 had failed is that right yeah whipped okay then I don't think there is any gas related stuff that needs to be figure it out there then for 198 so that's modular exponentiation but the main thing that's still needed to be figured out was the multiple karatsuba multiplication in complexity formula and I had suggested one a few days ago and it seemed that and it's well it's basically a piecewise quadratic quadratic that tries to approximate a n to the power of one point six and people seem is relatively fine with it now that already hit the dist cases yes okay then yeah I don't think there's anything else yeah there was a couple other to do so let me go through the rest of them I think only two more because we already talked about gas benchmarks and opcode gas data so the EIP for minor reward reduction was gonna be combined potentially with 669 and I actually haven't checked on that did anyone happened to put in the minor reward reduction let me actually check out that VIP okay so a speaking of these kind of tests to forget that we have Bach tasks for any of the block specificity ideas so that includes 98 right because 98 cannot have transaction tests so 98 when we implemented 98 we had to change I think all blockchain tests because all of them included some transaction receipt okay so it looks like okay yeah talak commented on the 669 and a lot of people commented on it so we'll need to read through that because there's some there's some back-and-forth about it Nick also is it on that conversation this is a long thread okay we'll look at this a little bit more but this isn't something that has to be done like today it can be figured out by the next core dev meeting but yeah I think that we came to consensus last quartet meeting that we are doing the issuance reduction unless something major comes up and I do see a few people from the community who were against it so we might look at it at least one more time let's see oh one more thing Alex Miller said is there been any discussion about implementing an issuance decay curve and a series of eras my instinct is no because we'll probably be switching over to hybrid proof of stake before the second era hits anyway okay cool all right and then the last thing that I say changes in 669 that's already been defined and I didn't see anybody who had a problem with that that would be actually that's just in it's actually in 669 it's called 649 but the URLs for 669 so yeah we'll figure that out a clean numbers 649 because it was originally opened as an issue but the police number is 669 okay got it cool right I think that was the last to do that I saw from the last time now Ola about the the new one that Nick proposed we're talking about written receipts I thought you guys said a few minutes ago that we replace it with the one or zero so that's specifically the intermediate state route field of the receipt yes but I'm looking at the EEP right now and it's s about this is either the return data and any return of our data so which he'd be looking at yeah which I'm looking at the one linked from accepted port number 658 okay cuz I updated the one I submitted to I'm looking at the 110 status yeah I'm not wait let me look here 50 ice did you say no no 6 658 I just said oh sorry I thought you just said 58 okay you made an update about two weeks ago yeah so are you on the latest update martin cuz i'm seeing where blocks block numbers greater than the metro fork block number the intermediate state routes replaced by a status code for the byte indicating 0 for failure and 1 for success I was looking out the bit above that I'm in the motivation oh yeah it says both actually since everyone refers to the CIP by the number 98 I went ahead and clarified on ninety-eight as well which one we're going one yes so so we going to modify 98 to incorporate Milan are already done okay alright well shall I just cause this pull request thing yeah well no yeah keep the ball well we'll figure it out later yeah okay you keep the main page for the heats updated so we can always go there and check we sponsor pound for adoption yeah so basically on that page what we should do is remove 6:58 we shouldn't close the poll request but we can know that 98 now has the things that were in 658 is that delicate followed then okay sounds good as they kind of more broader in general point of procedure I've been noticing that there's that because we have this mechanism where on the EIP is an issue first and then becomes a pull request it has been causing some annoyances because basically the community gets used to debating in the IP while what's still in the issue forum and then when any go heads to the implementation phase because there's some way to be different numbers for the same thing mm-hmm personally I'm a fan of starting straight out issues sorry in pull requests the only reason I've open an issue is if I had a vague suggestion that wasn't mature enough to write an e for that um I'd have to think about that more but that sounds okay so far Casey did you I know it was either Casey or Greg months ago had some opposition of that Casey or Nick do you remember what that was maybe I don't remember the concrete details but I like they ran into some opposition yes okay so I think the opposition would have just been the annoyance that metallic mentions okay yeah and I know you know what I remember it now and I think Greg or someone predicted something like this would happen so we might we might move to update that so that everything's a pull request that might be easier to rip that band-aid off now does anyone else have any procedural suggestions this goes because the main one is just the numbers being messed up but I didn't know if there is anything else is there a way to actually block comments on a given number because the annoying thing is you can close it but everyone can comment on it so not as far as I know yeah this is for you're saying PRS or issues are best yeah boss doesn't matter but and then like from administration put as you like ability to to mute the comment Accord is able commenting and particular cases like to enforce actually moving from one one issue to do another pull request but I'm just asking if this is this technical option I think admins should have this sure they do yeah we looked at it before and we didn't but I mean this was six months ago maybe hang on now on the right hand side bar there is a lot conversation not oh cool all right we could do it yep that sounds like a good idea for us to do how actually to use it but I believed an option yeah okay we'll go through a training of some kind and actually on that note eventually we need to clean up all of the EIP editors there's like a bunch of editors right now let me actually go to but there's let's see oh actually oh wait Niki are you no longer an editor I should be oh wait I'm on the wrong repository nevermind that's right ya know so right now we have Martin BZ metallic Geoff Gavin Fabien me Casey Nick and and for the most part Vitalik Martin Jeff and gab Fabien to an extent haven't really been as active as far as editing so we probably should get some new people in there Arkadiy I was gonna ask just so that we have kind of cross client coverage on the stuff if you could like go back to parity and ask if anyone wants to be an EIP editor we can add them to the EIP editor channel unless you have someone in mind right now no not right now but we'll pick someone it's the most exciting job ever yeah it's pretty no it's not whoever you don't like it parity send them our way we'll give them something that go hey okay so anyways and yeah anybody else who has a nomination or anything just let us know who's in here right now but Alec do you want to be an editor and here or mine I'm fine either way yeah and it's only like as representative of someone who goes in and like actually has the authority to close out stuff so we might we might just keep who we have well kind of talk it over later oh sorry all right great but ya know we'll talk about it later to see if like because we might even change editor responsibilities to make it a little bit more relaxed so we don't have to like have a certain amount of work done per editor or something like that and it could just be kind of more chill the next item just comments yeah I do have one it's my mic on yeah so I'm looking at 98 which is an issue and that's the one linked on from the readme as well there's no actual pour request for that I thought there was let me look what there's what but it was referenced in initial abstraction changes for metropolis 86 but I don't think it's part of it anymore yeah that's true yeah I'm not really seeing anything actually you come into the mint in June that's the 70 IP associated PR okay yeah that was actually directed at metallic and that was June 14th do you know if this has a PR vitalik which one EW 98 I'm not sure if it does oh okay wait I know I should wait no sorry yeah and then I gate no 98 corresponds to 658 okay let me well no well yeah it does I guess so you should should we then instead of closing 658 and ended to incorporate all of 98 to make it to amend it to be 98 well we should amend 658 to be the thing that we agreed on okay okay so basically should well then what 658 we call 98 that it can be called either one that is there a preference I mean it obsoletes 98 but since that never took force I guess it makes more sense just number at 98 and say that this is now 98 now yeah Vitalik since you were on 98 what do you have a preference I guess 98 because that's what we've been calling it more yeah so we will call PR 658 a IP 98 and incorporates the IP 98 changes to PR 658 so someone will just have to go through and make sure everything from 98 issue is in PR 658 I'll do that since it's Michael request I'm gonna put that common in right now and then we'll do is we will link under 98 to 658 on the rear that KC I think you did that last time would you be able to just jump in and know that after this oh sure thanks so much reward for a job well done is more work okay so I put the comment in there and is there any other comments on the IPS you have on the same yep sure and so I'm not entirely familiar I'm looking at 6:58 request I'm not entirely familiar with the with this intermediates receipt but my question is how related is that to the transaction receipt RPC call now stole so it wouldn't make any sense to include the status for revert wouldn't make any difference including DNA in this change only have to bear use success or failure you don't get a most the failure implies well residuals one of the reasons you can have a failure yeah so sorry what are you suggesting whether it would make sense or any difference to have three codes what is it so if you look at the revert PR back in the day there was a proposal that at some point call could be adjusted or a new call could be made which returns three values success failure or reverse I say if bringing that to the this this receipt would make sense what do other people think they don't as a summary could you do that in like a one or two sentence summary I think I got lost in the middle of that so should I go I'm sure guide yeah so my question is what it makes sense to have three values in that field at one meaning success another one meaning the revert of code was used and the third one meaning it was just a generic failure so what would the generic failure well anything that's not a revert opcode but I think the problem is that that complicates the abstraction because now we have basic ways to read types of executable image instead of - yes and for backwards compatibility reasons we'd have to see all illegal jumps for example it's you know it's basically the same kind of error as a throw right well recent versions of solution output results anyway so only older versions will will emit them valid jumps yeah yeah so I'm gonna think about and any any application and wants to react to these operations they still need to consider that those two failure modes as one the same because I'm sort of assuming that if it to take to reverse then that's because it's expecting what that contract supports it and it's gonna go look it's gonna go trace it to determine what was it data was like the exemption does know where as a failure that isn't you to revert there's no point in doing that because you know there won't be any yeah so I'm still not sure I'm not convinced either way on the right here or data doesn't really good series like this both zeros failure when a success to line up with the return stages coded call rather than with the conventional UNIX return codes [Music] think of it as a boom rather than a status code yeah does this receipt has the the gas limit and the gas they used gas it is very well used gas but it doesn't have to the starting gas I don't know that you can get that from the original transaction well I guess you could use that to determine that reverse was used not me oh you name it well yes as I should be your main fail the other uses less than or gas true yeah I mean I don't have a good understanding of of this receipt anyway where I'm coming from is I would like to see in the long term the ability to see that friebert was used in a call within within the vm and it would be really nice do you have same level of visibility and the RP see if any of these have nothing to do with this then I have no comment on it I I would suggest that this is easy enough to add at the client level we can add an RPC call that returns that gives you returned data although no we discussed there the Brens problem with my clients and sinking yeah I'm not sure maybe those who understand it would like to think a bit about this and come back later on that's good yeah Alex could you post at the bottom of the relevant AIP is just kind of posing this question and then yeah we can we can definitely bring it back later on and I just like to raise I mean if we're gonna have several failure modes I would really like success to be zero and then have infinite number of failure modes yes it's good it's gonna be compatible with cold and that's good but if it's not then we may as well go with a conventional multi return thing currently it's a bull so I think one makes sense for success but if it becomes an enum then Year Zero makes sense okay any other comments on this so at this point we were at the review time estimate for testing and release so as far as that goes does anyone have any estimates or comments or wishes for win this woods when testing would start maybe yo Ichi who might have the best perspective when we can start testing actually I don't see a reason why not now of course there are certain things so if if you have already implemented it so hard walks instead of one you have to start these other books at the same block because the test case is only one book and there are certain undetermined gas costs so you have to set this undetermined the gas costs manually maybe you have to look how the ship implementation to figure out the gas of the formula tentatively use but why not now um I mean okay I remember I do remember some time ago Vitalik sent us some bug reports on the tests when he tried the pi am the test suite about metropolis changes so why not now okay cool so we're saying that basically by so would it be good to say that by next core dev meeting anything that is outstanding here should be cleared up so that we can then set like date for testing we can kind of come up with a date today or a block number or whatever but by next time we can kind of confirm it you know hold on is we piak that's enough we have all major clients 100% I think oh I kind of thought that so far wait which clients aren't is it just paya Thep or is it multiple well I mean well I thought not like not all of the goats of the test and C++ are even up yet right look we don't even have tests or yeah we can still we can still kind of try to come up with an idea that though but I I agree we should have that going today let's at least come up with like and like an idea of what we would be aiming for though so get like if we get the rest of the C++ test up would so I think it would be a good idea to first set like our goals for two and four weeks from now so like one example for a goal would be in two weeks from now we should have literally all tests implemented in C++ including block tests for the op codes that only that our block related so things like EAP 9 96 and 98 and for an extremely optimistically two weeks but realistically for weeks somebody have all the tests passing okay as far as resources go for that how many resources do we have right now I think it's still mainly de metrio Ichi Martin and a few community volunteers is there anyone else who's doing that right now actually I think it's mainly you which end mitri are doing okay yeah that's right Martin yeah so if that Casey ohe do you need more resources or is there something of the other teams can provide well I mean that is so if the other teams have resources maybe they can try to resolve the existing errors visible in hive framework and I guess that's the best way to resolve differences resolve uncertainties so the I mean obviously they are the implementers themselves far more better than I am in fixing this or determining the cause of these problems so that's the best way to help I guess so because yes I'm solving existing Pro existing errors is bringing hype okay so basically if you're a client and you have an error please go to the Gator channel that I'm pasting in here it also has a Skype bridge so if you'd rather be in Skype but I I mean it'd be ideal to have one person from each client team who is basically the person who can you know talk about and work with the testing team on errors or just fix them themselves and then report back so if we could get people to do that I think we can make the two-week goal if we do that but otherwise what we're kind of relying on just like to two to four people if the some of the community volunteers even step up to do this in two weeks yeah I already have some regular contact people we with respect the testing problems with partly I only stopped after the with party and a weak OMI usually compact with headaches and so on great however in many clients I still see several hundreds or even 1000 errors and height runs so it's fast yeah okay Vitalik you mentioned major clients what in your opinion is a major client because I know that there was some recent work with JavaScript and other stuff what what do you think um so I would say tops the beard are death parity and C++ and if we can be more explode the more expansive thing to do would be to add Python and add JavaScript okay but as far as requirements like if we hit the two weeks and Python and JavaScript aren't done that's not a showstopper for you in your opinion I'd say no it is a sign though would make me what that would make me worried enough that I had I could try to really dig into the pie into the PI theorem and see why it wasn't working but all right cool any other comments on this casey actually what's the full update on the javascript vm i think last time we all talked it was up to think it it was able to sync to like spurious dragon is that right oh no last time it was up to a tangerine whistle a Kade eat 150 but as of yesterday it's passing all the spirits dragon tests so work on a tropical metropolis the IPS um again can start on the JavaScript I'm just replying great based on the resources working on that right now but are you thinking that two weeks it would be able to be done are you thinking more like it shouldn't be considered as a core client at this point for the actual launch no to wait not two weeks enough time to implement all the chocolate it's not a dream Jessie I'm no problem cool alright so that is where we are there any other comments on any of this basically the verdict is we'll try to get all of the clients passing the test and two weeks preferably so that we can then reassess and try to set a hard date block number for the next two months because we'll need some time for testing cool all right next item make a decision on the hard fork maeda VIPs that was Alex and basically he's just talking about combining so there's like a few e IPS that are meta e IPS that just include information like what block number it started on and other like what a IPS were included in different hard forks like Homestead you know spurious dragon and all that stuff so Alex you can go ahead yes so there is the two two three three which just explains the process and it would be nice to actually merge it it's just an informal what type meta or is it informal anyway that just describes that for every heart focus should be such a meta VIP created which list code names of the fork the block numbers they were activated and all the apes which were included and now on top of that we have three hard Forks hard for me to it's written up 706 708 709 m and KZ kept them really updated I think they should be done at this stage and it would be nice to merge them because they unlikely to change since they are for past hard Forks and I think 609 is the one for metropolis which is not final yet so it there's no need to merchant and it would be nice to get just a generic idea whether people like this or and if anyone is against it if not then I would hope to merge it yep I'm totally for it the only thing would be I've been talking to some people about the naming convention for them so do you have a preference on the naming convention like only because if we put these in there it might be scattered in a chart if it's just called like 233 and 240 whatever or 607 608 like so maybe we could just like name it meta homestead or meta blah blah blah and like a different chart oh they do have a title oh okay I've not seen that so make six oh seven is hard for meta spurious dragon I see oh okay I didn't look at the latest one I looked at the suite okay and I think the late the last issue the last pro request is six seven six by Casey which adds them to a list on the readme got it okay and 223 is just a formal process for hard Forks so that is okay so that just defines what what steps and processes go into doing a hard fork right yeah I think what it mostly defines that there should be such an any IP created and it it could be updated I guess that's the biggest chunk which needs to be reviewed by people so 2 3 3 is where most of the comments on it that the rest of them should be ready to emerge okay yeah I agree let me go to here I'm gonna paste this into the chat and into the all core devs for people to comment on but yeah otherwise yep that's good any objections all right great we'll start merging those then after a little bit of review I think I've already reviewed one or two of them the IP six okay so the next item item 3 is a IP 663 that also is Alex and that is a limited swap and doob instructions and yeah so the motivation is right now swap in dope are limited to the top 16 items and there's the only way to reach any items below is to pop items first and this EEP introduces a two new instructions one for swap one for two which take an immediate value and can reach up to the full depth of 1024 items and the reason for this is if have function calls are usually structured in an EVM code is first the return position would be pushed and then the arguments and when the function finishes very likely and return values would be but on the stack and there's no easy way to reach if they're more than 16 items they're so easy way to reach the return and return value and by the the return position which was like the first parameter and and this well okay so kinda this is a problem a compiler issue which can be workaround that in many cases but I wonder if there are in any optimizations and death or parity which take this 16 stack limit into account and put the way the rest of the stack in a less accessible place where there's any reason not to be able to access the entire stack if there is no such reason I think it would be useful to make this possible so I have a concern that this effectively encourages misuse of the stack like it seems to me that it would be far more sensible to store local variables in memory rather than stay whole time because that creates this dependency on what occurred if mistake I'm also concerned that adding a new of code that has an immediate argument complicates I simplify code where is currently only one when opcode has an immediate argument which is to push on codes and regarding the immediate it would be the entirely the same as push to words yes that's currently passing by code is almost embarrassing or simple and the more op codes we add with immediate arguments the more difficult that becomes and in fact those will break in the existing code that passes by code because it was not a it actually requires new passes so another concern it will also break existing contracts because currently anything is legal between so any sequence of bytes is legal in code even if it's not a legal opcode and if an opcode is changed to be a multibyte opcode which it was previously not then jump this analysis will shift and so if you jump over something which you only use this data and not as code and it contains something that will be a multi bite of code later than the code following this non code but it applies to push as well sure but push was known before yeah so things like the Sinhala Greek it might break existing contracts yeah like the purity checker for metallic but does that mean we never really introduce any of any up code which has an immediate where you personally I very much like the way the avian currently only has one immediate thing and I argued against Briggs introduction of newer medians for the Cindy instructions as well I think that if we gonna change - he was a more something that would be a good time to completely restructure things but in the meantime we should try and keep the simplicity of existing opcode structure well regarding this part I do have like the alternative version where a push is required before the up code which which wouldn't introduce any media but would reduce the usefulness a tiny bit so what about the other half of my comment about using memory instead because imagine if CVM it on the head like soft 1 & 2 per one from the very start writing language which expected local variable mistake would never have been an option how would you have architecture till then and why not do it like that now I'm sorry I was getting out and hmm I mean there's the trade-off between a number of instructions and code size you could even today you write code which only uses a tip one nothing else yes but I don't think that the overhead of storing locals and memory instead of stack is overly high and in something the optimizer can easily pull out onto the stack if it determines as possible and cheaper and it seems like a more sensible general-purpose way to do it it's also the way that traditional proto compilers and processors work well just a single comment to that the gas cost can be higher to not encourage I mean that was in there as well well actually what's the IP the way it is written up it had the push required up front and instead of the immediate and because of that it was obviously more expensive than the current doop instructions but yeah I do I do understand your concerns okay so is there any other discussion on this or Alex do you have a proposal for either bringing this back to the EIP or having more commentary yeah yeah I think I will take it offline just wanted to get an initial reaction - sounds good the agenda for next week - and then the last one is e IP 215 this is a bit why shifting instruction on the EVM to replace 145 that Alex brought up so go ahead yeah 145 was the original version of it they were like 300 channels - issues and tests the latest fear and so the only one which needs to be taken care of his - 1 5 which is the perico's and this is ongoing for like a year and a half at this point the idea is shifting operations shift left shift right and the arithmetic right shift and it's only for 256 it values and that's it and the benefit it provides and even any standard any standard contract usually uses a call data load to get the the first slot and your top 32 bits of that contain the function selector and in every case in order to retrieve the function selector the Contra test to shift right which is accomplished by division guarantee um and a lot of other uses in functions for shifting very useful and things like any any quite building methods what this introduces is cheaper ways to shift it's a tenfold decrease compared to you so like currently implementing it with a division of multiplication and exponentiation it usually cost around 35 guests and if we take the shift instructions natively at Regas that's a ten ten fold reduction in gas cost regarding their so any any comments on I think nobody was a really objecting against it anytime in the past a few of us were trying to champion it but nothing really happened I think the spec is fairly complete yeah I see Greg's commented on it and let's see and then the add Nix Nix good on it from April so this would be okay cool in the EVM yeah that this seems like everyone's pretty much agreeing on it I'd say it's good to go is there anyone in here who kind of objects to and the people who've been following it and commenting on it seem okay I think it's a big admission that we haven't had it from the start so yeah I think it's a good idea the question is is it slated for metropolis and do we have time to inform users yeah / - okay I wouldn't propose it for this one well then that means we now have more than one things apart - so hooray all right yeah so that's actually one of the reasons we have part two is to kind of look at putting in a few more things like this ones that aren't as potentially not as expansive as 98 or 86 or whichever one we're putting in there but yeah I think it could even fit this one but it would just put a none accessory stress on people implementing it I I agree I think it's better to have it for part two which we don't know when that's happening but I'm gonna guess q1 2018 but maybe maybe sooner we'll see let's see what is next oh I think that might be the last official item were there any other comments on that so even if you're not getting it into this part of Metropolis I would be happy to take any any other comments and flashlights even sooner and does that mean I mean do you feel like it needs or inflation yeah because if not then maybe we can just mark it as except to the winner Church I think it's only only two or three of us which have ever fully reviewed it and Evelyn Greg probably it would need a few more eyes okay great yeah you feel free to reach out on the cornet channel for people to look at it but I mean looking at this the people who review EVM related changes everybody except for maybe Martin B Z has looked at this so cool yeah we'll get some more feedback is there any other non agenda topics or comments or anything anyone wants to bring up okay great I think we're good then everybody have a good weekend and I will I've written some notes that I'll put in the agenda comment and hopefully start doling out to people every after every Court have meeting I get busy and then like get Lacs on on sending out reminders to people but I'm gonna try to not do that this time all right cool great meeting everybody and talk to you in two weeks bye [Music] [Music] [Music] [Music] [Music] [Music] 