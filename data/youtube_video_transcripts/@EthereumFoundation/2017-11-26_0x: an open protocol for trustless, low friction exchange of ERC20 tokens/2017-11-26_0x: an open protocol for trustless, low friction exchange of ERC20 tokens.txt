so I'm gonna get started I'm very excited to be here today to talk to you about 0x this project has been a long time in the coming and I hope that we can get some people excited about it today so just to outline this presentation gonna quickly give a little bit of background and timeline on 0x protocol motivate the problem we are trying to solve talk a little bit about the existing work then we'll go into 0x protocol we'll talk about the benefits of an open standard will cover the developer ecosystem that we see developing today and we'll quickly discuss the need for governance for open protocols then we'll go into DAP integrations and something that we like to call token abstraction so my co-founder Amir and I started working on 0x just over a year ago we released our white paper in February of this year and since then have put together a really talented and awesome team all eight of us are here at the conference we love chatting with people so feel free to come up and say hello and we're happy to answer any questions so really the motivation behind creating 0x protocol was there's this long term theme that we see coming into existence where we're anything that can be assigned a value in the world is going to eventually be tokenized and moved on to an open financial network like the etherion blockchain so this can be things like traditional assets like fiat currencies stocks and bonds debt assets all the way to scarce digital goods like video game items and loyalty points airline miles and even things that are more abstract like attention so naturally with all of these different tokens that are going to eventually find their way onto the etherion blockchain there needs to be a very low friction way to exchange these tokens so just taking a quick look at the exchange ecosystem on the ethereum blockchain kind of this this is kind of the state of the ethereum blockchain back when we started there's been quite a few developments recently as well but there's there's a handful of existing decentralized exchanges and there's a lot of decentralized applications that require exchange functionality in order to operate so things like prediction markets or stable coins or decentralized fund management platforms all of these things require exchange functionality so the problem that we identified in the ecosystem was that every single one of these exchanges and apps was creating their own proprietary and custom smart contracts from scratch and what this meant is that not only what each exchange have to bootstrap liquidity from stretch but it would also expose end-users to a bunch of different smart contracts that have varying levels of security and efficiency and they all do the exact same thing so that's not a very efficient approach another issue with having a bunch of different implementations of exchange smart contracts is that there's no interoperability between any of them so it fractures the ecosystem and it kind of results in less liquidity for everyone so in our view smart contracts should really behave like modular building blocks that can be assembled and reconfigured and we also believe that open standards tend to win out in the long run so I'm just going to briefly talk about the different approaches to decentralized exchange that exist and give like a high-level view of the pros and con so the very first decentralized exchanges that were created on the etherion blockchain kind of took the same functionality of a centralized exchange and pulled it into an aetherium smart contract so the the etherion smart contract would store an order book within the contract so what this means is that every time someone wants to post modify or cancel an order they must pay gas costs and create an aetherium transaction and this becomes completely unrealistically expensive for any sort of market maker to create liquidity using an on chain order book not only is it really expensive but you also bloat the blockchain with tons of unnecessary transactions that aren't necessarily moving any value they're also high latency a second class of decentralized exchanges are automated market makers and automated market makers instead of having two parties on either side of them either side of a market trading directly both parties trade with a smart contract and the exchange rate that is offered by that smart contract ma is is modified deterministically according to how strong the market forces are on either side of the market augur spent a long time working on these working on finding working implementations a lot of mated market makers and found that they're really subject to front-running they can be GameA below really low throughput so if you have one party with a large pot of some kind of token and another counterparty that would like to trade with them instead of just doing one big trade directly they must chop up that trade into little tiny pieces and trade with the smart contract back and forth so it's really inefficient the third approach to decentralized exchange and we haven't seen any examples in production yet but we will see and I'm sure our state channels and so state channels are amazing for reducing latency and increasing throughput because with state channels transactions occur off of the blockchain and you can sort of a queue a series of intermediate state changes aggregate them and settle them all on the blockchain in a single transaction the issue with state channels is that you know they're great if you want to do day trading but if you want to just do one block trade you just want to buy a big chunk of tokens and immediately use them it's there's a lot of friction around using a state channel you have to move your funds into the channel you have to place down a security deposit to ensure that everyone is behaving honestly within that channel and then when you want to move your funds out of the state channel there's a there's a challenge period which is required also to ensure people are behaving honestly another downside to state channels is that when you move into a state channel off of the blockchain you isolate yourself from all of the cool and interesting smart contracts that exist on the etherion blockchain yep so zach pioneered the off chain order book with on chain settlement approach around a little a little while after we came up with a similar approach but it's really a protocol instead of an on chain order book so 0x protocol really is comprised of a standard order schema that represents the different parameters associated with a given a given order so the two assets that are being exchanged the exchange rate the expiration time for this order and a cryptographic signature of the above parameters and that is coupled with a smart contract system that is responsible for settling these trades directly on the blockchain what's really makes 0x a protocol is that there really aren't any rules about how you choose to pass these cryptographically signed chunks of data around off of the blockchain so the transport layer is arbitrary you can generate one of these cryptographically signed orders and you can send it to a counterparty in an email or over Facebook or you can write it down on a piece of paper and send it to them using a carrier pigeon it doesn't matter the cryptographic signature just needs to be valid another thing that is different is that the message passing semantics are arbitrary and you can choose to use a variety of different strategies so if I wanted to trade directly with the counterparty in a peer-to-peer fashion like an over-the-counter trade I can just create this order that specifies the parameters I am interested in trading at and I can cryptographically sign it and I can send it to my counterparty and we can settle that trade directly on the blockchain completely free there's no fees involved other than the gas costs but naturally people need to go to a location where a bunch of different parties are interested in trading and where these orders are aggregated in a single location and we call these real layers are they're very similar to decentralized exchanges what's really cool about 0x is that anyone can be a real layer anyone can create a decentralized exchange in charge trading fees on all the volume that they create they keep 100% of the fees that they charge there's also a variety of different relayer strategies that a relayer can decide to use so you can use an open order book strategy kind of like ether delta where there's a public post it board and people can put their orders up and anyone can take them down you can also do a centralized matching strategy where our B layer will only accept orders on to their order book if they are specified as the only entity able to fill those orders and when they find two orders on either side of the market they can batch fill them simultaneously and synchronously on the blockchain and you can eliminate things like front-running a third option is a shape shift type exchange where someone essentially acts as a reserve manager and they just post a bit in and ask for a single trading pair so why create an open standard why well one of the reasons is because if you have an open standard you can create really robust developer tools so things like 0x jsr javascript library and things like your standard lair API and with these tools you massively lower the barrier to entry for new people and developers that want to create decentralized exchanges and so what you end up getting are a variety of different decentralized exchanges that are highly competitive on fees as well as user experience they also find and target different market niches and you end up with a diversity of different decentralized exchanges a second reason to create an open standard is that if every single decentralized exchange is speaking the exact same language it creates these network effects around liquidity where each relayer isn't necessarily competing with the others they could actually benefit from a new relay and to entering the ecosystem as arbitrage azar are taken advantage of across different exchanges risk free anatomically decentralized applications can also be a source of customers for these decentralized exchanges or relay errs so since deploying 0x protocol on the etherium a net in August 15th we've seen just a crazy explosion of development activity there are upwards of ten different completely independent developer teams creating real layers on top of 0x protocol so I'm just gonna give you a closer look at a few of these so the first real layer to go live on the etherium main net is kin alpha and this was created by a single developer and their spare time over the course of a few weeks you can see that it leaves a little bit to be desired in terms of the user experience but we just thought it was pretty amazing that someone could go and create this on their own in a matter of weeks another really cool relayer that's worth checking out is radar relay they're live on the main net today you can go to read our relay calm and check them out they're doing a little bit of volume but their API should be up soon and third is paradox paradox has created this beautiful user interface and they're expecting to launch their beta on the main net this month and they're using a centralized matching strategy so we're really excited to see all this development activity going on and I think that we will see a dent put into the centralized exchange industry [Applause] some other interesting development that we've seen are just independent developers out there creating trade explorers that allow you to view and explore the various trading activity going on on top of 0x protocol and you can sort of sort trades by different real layers and by different trading pairs etc it's been really exciting for us to see people building things completely independently on top of the protocol and just finding out about it on reddit so now I want to talk about something that is a little bit different that 0x protocol enables and I think this is something that's pretty unique compared to the other approaches and implementations that are out there today so 0x protocol allows smart contracts to natively execute trades in a single line of smart contract code and this is really powerful because this essentially allows 0x protocol to act as an exchange module that exists natively within the EVM and this allows Eero X to be treated as a sort of fundamental building block that can be combined and built upon by other developers creating their own protocols and today we've seen two examples of completely independent protocols being created on top of 0x dy/dx and Dharma I would encourage you to go check them out there are also a variety of other decentralized applications that have you know decided to either right now or at some point in the future integrate 0x protocol because it will allow them to get the functionality they need without having to write any code from scratch so now I want to talk a little bit about governance so 0x is an open system and there are a variety of stakeholders and they each have their own motives and their own desires that they need out of the protocol but they all benefit from the network effects of building on top of the same shared stain and at the same time 0x protocol is a system of etherion smart contracts that are immutable but they must remain future-proof over time so how do you decide on protocol upgrades you can either allow a small group of developers to make all the decisions about the future direction of the protocol or you can allow all of the stakeholders in the system to have as fair say so what we decided to do is to create a decentralized governance mechanism that uses token voting for future upgrades to the protocol so I understand that everyone here is probably a little bit sick of all the tokens that are out there today and they might not want to deal with another token so I'm gonna just briefly talk about something called token abstraction that 0x enables and I think is really exciting but we're gonna have to think about five or ten years out from now so when we think about decentralized applications you know we used to think of them as sort of these vertically integrated monoliths that might have been built on the Bitcoin block chain or the etherion blockchain but I think what we're starting to see is an unbundling where there's many layers than the decentralized application stack and they all have they're all specialized networks with distinct incentives and tokens so you might imagine that a decentralized application requires a consensus layer it might require some file storage and some computation and it might require an external some oracle to inject external data into that dap so if we have all of these different layers in a decentralized application stack and you're the end user of this dap it's gonna require it's going to require you to have a bunch of these different tokens for each layer of the stack and that's something that i don't think very many people are excited about so in this example you can see there is some sort of decentralized application and what it wants to do is it wants to take a dataset from say ipfs it wants to run some computations on that dataset using something like true bit and the result of that computation is going to be injected into a smart contract which makes some sort of decision depending upon the result something that just would not be feasible within the EVM in order to power some sort of sophisticated decentralized application like this you might be required to have a handful of different tokens and that's not a very good user experience so something that we're really excited about that we think 0x will play a role in in the future is something called token abstraction so as the end user of a decentralized application instead of having to hold a variety of different tokens that you may not know or care about or really have any vested interest in huge can just hold on to some tokenized fiat and you can pass in this fiat along with a thick stack of 0 x orders into the decentralized application that you want to use into the smart contract it will forward those fiat tokens and the 0x orders on to the 0x smart contracts and the smart contract will synchronously and immediately receive the variety of tokens that it needs to power that decentralized application the smart contract will immediately go on its merry way using them as it needs to so you can imagine that the takeaway from this is that instead of having to have a bunch of different tokens as an end user in the future you might just go to a decentralized application and see that it's going to cost you 3 dollars and 50 cents in fiat tokens in order to access some of its functionality so lastly we're working on version 2 of 0x protocol today and we would love to get some community involvement and feedback some of the things that we're really excited about including in our 0x improvement proposals are things like support for non fungible tokens atomic order matching order generation by smart contracts and a variety of other things as well so we welcome you to come and contribute to the protocol and shape its future so thank you very much I appreciate the attention [Applause] [Music] 