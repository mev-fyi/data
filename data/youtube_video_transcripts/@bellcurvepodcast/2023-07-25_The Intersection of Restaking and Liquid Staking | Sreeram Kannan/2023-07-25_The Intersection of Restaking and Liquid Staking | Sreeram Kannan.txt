all right everyone welcome back to another episode of bell curve before we jump in quick disclaimer the views expressed by my co-hosts today are their personal views and they do not represent the views of any organization with which the co-hosts are associated with uh nothing in the episode is construed or relied upon as Financial technical tax legal or other advice you know the deal now let's jump into the episode [Music] welcome back to another episode of bell curve today miles and I are going to be talking with sriram Kanan who's the founder of eigenlayer this is a really interesting episode one of the the interesting intersections of two very hot topics in crypto today which is liquid staking and restaking we're going to be diving deep into that intersection and we we sort of you know cut this conversation into two different parts where we actually look at eigenlayer the protocol we divided that that talk as we sort of described eigenler as a social coordination mechanism or a Marketplace in between ethereum stakers and Runners of middleware other protocols that want to access that stake so we talked about the supply side and the demand side of that market which was a fascinating conversation then we then we talked about uh sort of this intersection in between liquid staking and restaking more towards the end of the conversation and some of the very interesting Dynamics in between frankly protocols like Lido and eigenlayer so this was a really fun one miles I can't wait to get into it yeah it'll be a blast I think eigenlayer is top of mind for a lot of people both in terms of excitement and potential concern and so I think we want to dig into both sides and really excited it's anybody all right let's Jump Right In welcome back to another episode of bell curve here excited to get into it today miles and I are joined by SRI Ram the founder and CEO at eigenlayer true welcome to the show a pleasure to be here looking forward to uh go deep into I can literally staking yeah have uh enjoyed listening to the bell curve earlier so it's a great pleasure to be here thanks a lot that means a lot coming from you well we can we can just get right into it here and I want a caveat you know we're going to start with sort of a brief overview of eigenlayer but we're going to assume a little bit of knowledge here because we want to leave enough time to dive into some of the technical extremely nerdy sort of questions that Miles and I have for you here so I want to say if you're looking for kind of a higher level overview and you aren't as familiar with the concept of restaking an eigenlayer freewom did a great episode on Bank lists I would recommend that you go check that out but but for now maybe um could you just start actually at that high level and maybe keep the explanation relatively concise could you just give an overview of what eigenlayer is and maybe explain the two sort of fundamental Innovations of restaking and kind of creating an Open Marketplace for trust one way to think about it is if if you ask what is a blockchain solution and what is not a blockchain solution and you want to find like what is the key ingredient that makes something a crypto or a blockchain solution you would say probably that's decentralized trust add any you know take anything and then add decentralized trust to it you'd call it a blockchain solution you remove decentralized trust from it you're no longer call it a blockchain solution so in some sense you know the dividing line for what is a crypto or a blockchain solution is decent less Trust so it is the raw material out of which the entire crypto economy is manufactured and the first Marketplace for decentralized trust was actually in our view ethereum the idea that hey building this common platform you know it's programmable people can build arbitrary new applications or modules on top of it and when somebody is building an application you know at that time Bitcoin has said like why would you think that people would come into a same platform and the idea is because you're getting a common pool of decentralized trust and applications building on top of ethereum consume this decentralized trust and pay a certain fee one way of thinking about this is ethereum distills this decentralized trust into block space uses its own consensus for it's staking and there's a consensus protocol on top there's an execution layer the ethereum virtual machine there's a gas limit and then there's a certain amount of block space and then so block space is just the distilled form of decentralized trust that ethereum is selling and clearly you know we talk about block space as being one of the most important Commodities in the crypto space but you can ask why not sell the raw material decent less trust itself rather than the distal product which is block space so that's eigen layer eigenlayer is a Marketplace for raw decentralized Trust what is the aspects of decentralized trust what makes up decent less Trust you know in a proof of stake system staking which is the amount of Economics that underpins it this is some amount of stake that's number one number two there is decentralization itself like there are many nodes each of these nodes don't talk to each other or collude and I think a combination of decentralization and the economics the crypto economics together make up decent less Trust and what we observed is while there is this Marketplace of decentralized trust that ethereum has already created it is at the application layer and I can only consume it if I write a smart contract on top of this like platform but for many many reasons I may want to access more raw decent lifestras because my protocol but imagine I'm building a data storage protocol like filecoin and I want a bunch of nodes as well as some bonded economics you know somebody making a promise that they are not going to violate the covenants of the protocol and to do this I had to go or the file coin guys had to go create a whole new network of nodes as well as a staking token of value and you see this again and again and you know we ourselves you know when we created um you know earlier protocols you know we were forced to actually think about do we want to start a whole new layer one with its own economics underpinning it and uh so we decided to not do it and I think over the many years I've been thinking about this question which is how do we enable any innovator to come in and build on top of a common framework for decent Lifest and in our view ethereum is the closest because of the wide availability of node validators the availability of stake itself as well as the alignment of the ethos of permissionless innovation which is I think the underpinning of ethereum and because of these several factors we think ethereum is the natural source of decentralized Trust on top of which one could build a very interesting economy or a Marketplace of raw decent less trust what eigen layer does factually is it lets take us in ethereum who already put you know in ethereum you put 30 to eat and make a promise that you're going to continue to validate ethereum blocks correctly and if you do not then the protocol might remove a portion of your eat so the promise is credible because there is you know you're putting your money where your mouth is you're not just saying that you're going to do it you're actually committing to do it in a way that is uh you know if you violate the covenants you may lose your teeth and so that is precisely the same thing we want to extend to other protocols you put your teeth in the ethereum protocol and then eigenlayer is a series of smart contracts on top of ethereum it's not a new chain it's not a new L1 or anything just a system of smart contracts on ethereum which allows ethereum stakers to opt in to serve other systems and to serve another system you would have to be able to download and run software for this other system imagine you're running a different like a file coin like node you need to have the node software for actually running and storing the data and so on and on the ethereum smart contracts you know you somehow have the ability to indicate it to the eigen layer smart contracts saying that hey I'm going to go and validate these other chains because I promise that I'm going to go and validate these other chains or other protocols now you have uh if you don't do it you may lose your stake so that is the core promise that the Staker is doing opting into new Services we call these AVS actively validated Services it's basically any protocol I mean any protocol that needs end nodes to actually talk to each other and come to some kind of consensus that any kind of a protocol can be built as an actively validated service so an actively validated service is being built or you know somebody who wants to come up with a new actively validated service what they do is they write a smart contract on ethereum that can talk to the eigenlayer contracts which specifies who can register for my contract what is the payment I'm going to make you know if miles is storing one gigabyte of data I'm gonna pay him one Whatever set of conditions that we want and then we also specify what is the slashing conditions or if you're claiming that you're storing a data relative to this hash I may ask you randomly to reveal portions of the data on the ethereum chain uh and if you don't then you may lose your teeth so there is a set of conditions that you're opting into so what this does is suddenly instead of working with the distilled product of decentralized trust which is block space you're working with the raw aspect of decentralized trust and you can allow people to build arbitrary protocols on top one analogy I think which is helps root this conversation is if you look at 1994 internet and you want to build new web applications you have to build your own server stack you have to build your own payment stack you build your own identity stack you have to build your own DB stack and then build your application on top that's roughly the scenario if you're not a power view if you're a power user if you're not a power user you could just use Geo sites for hosting you know geocities for hosting your website right you could do that in 1994. in the same way today if you are not a power user in the sense that you need access to much more programmability than what a smart contract on ethereum offers you have to say go take the cosmos SDK and figure out how to customize it to whatever you want but also you need to figure out your own staking economics you have to figure out your own validator nodes you have to figure out every single aspect of the service you have to figure out for yourself instead the world crypto world that we envision is a world where you know it's very similar to 2023 web application development you have AWS which is the cloud on top of which you know there are a lot of fast services like you know oauth for authorizations you know um stripe for payment mongodb for database and then you just concatenate you know whichever applications you SAS applications you want and then you get your end user facing application now SAS up you know the terms as looks very corporate-ish but really what it is is open innovation right it allows any one person who can be hyper focused and specialized in creating a certain utility rather than everybody needs to create a whole new world around themselves and I think this is the history of the modern world is we all become more specialized in what we create and more General in what we consume and this is there is so we're just trying to create a reflection of that in the crypto world and to us you know you can't run it on AWS if you want to call it a d you know a crypto solution because decent Life Trust is is at the heart of it so you run it on the wide battle Data Network and the economic surrounding ethereum eigen layer just makes it more programmable on top of which now you suddenly have very interesting services that can then be built on top and one thing I want to just comment here is people think of the modular landscape and they think or maybe there is data availability maybe there's execution and you know something three things that's not at all true there are if you look at the number of SAS solutions that are needed to run something in the uh you know web 2 stack if thousands of thriving SAS Solutions and any given application integrates 15 SAS Solutions this is on an average and that's roughly what we envision to happen here in the crypto Market as well there is trusted execution environments there are secure multi-party computation there is secret sharing there is data storage there is data availability there is Oracles there is Bridges there is proof of decentralization that you know we're working on there is you know Guardian networks which can protect you against hacks there is AI inference systems the number of things that are SAS Solutions you can share common trust is unlimited so that's roughly just to lay out the vision for what we are building eigen layer eigen in German for your own your own layer you can dream up whatever you want and build on top of it so open Innovation is our core value that was a really helpful explanation and particularly I love that analogy of I almost imagine sort of a crude oil refining process where you have distillate that's a little bit Upstream right but actually you're you're sort of moving up one level in the value chain to something that's more raw and that just enables so much more flexibility I think that that's very sort of high level analogy I think to get a little bit more concrete the other framework that I have for conceptualizing eigenlayer is this two-sided Marketplace and we'll eventually bring in liquid staking later but you know we've talked about these liquid staking protocols there's two-sided marketplaces as well in between node operators and those who want to delegate their ethereum I think the analogy to eigenlayer would be actually a very similar construction except on the supply side you have stakers and on the demand side you have these avs's these actively validated services and I think it would be helpful afford the remainder of this part of the discussion where we're getting into the nitty-gritty of eigenlayer to sort of break up a discussion between the supply side of that equation and the demand side so Miles I know you have a couple of different Frameworks for how you sort of parse out how the supply side and maybe I'll turn it over to you to kind of go through the operational model and then kind of the the asset preferences and how you think about it hey everyone we've got a great episode here but before we do I just wanted to give a quick shout out to permissionless this is the biggest and best conference in all of defy it's the one that we do with bankless who's a great partner for us last year we had almost 7 000 people there in West Palm Beach we are moving this year to Austin Texas so I'm September 11th through the 13th and if you're a listener of bell curve any of these last five seasons this conference is basically custom made for you we're going to be talking about liquid staking the theme of this season we've got a bunch of great panels on Mev if you listen to the app chain thesis we've got a bunch of Cosmos folks out there in full force we're talking about the converging architecture of Solana the roll-up space in eth and Cosmos so I would love to see all of you there and to reward you for being such great listeners to bell curve you get a special 30 off code it's bell curve 30 that'll get you 30 off tickets click the link in the show notes and then head over to the permissionless site and make sure that you get your ticket today again that is bell curve 30 click the link in the show notes it struck me just reading the white paper at home uh you know flexible the supply side setup can be right you have I think about this as in you know a couple different dimensions of of um of choices that you can make right so there is first of all which assets are being restaked the the actual Capital being restaked is it just natively staked eth is it lsts and if so which lsts um or or is it even you know LP positions right and something that looks more like super fluid staking which we see uh on osmosis um and then who is the who are the actors actually running this you know running the hardware for the avs's running these these eigenlayer notes are they you know ethereum validators that have chosen to also run some other node or are they specialize operators right that maybe are better suited for something like an oracle you know protocol um and then lastly from the perspective of the Staker there are a bunch of different flavors you can have a fully you know in-sourced version where you are a self-staker of 32 eth you then elect to run additional hardware and put that 32 eat that stake you could be a self-staker at the L1 layer but then decide to delegate right your your 32 each to a to an operator an eigenlayer operator or you could do the fully outsourced model right um which has been you know seems to be like the largest Capital pool um which is you know I have already delegated my stake to a liquid staking protocol and I take my lsts and you know I elect to go redelegate that stake to an eigen layer operator um and so is that fair and is that how you think about the three major buckets I guess of of sort of models and and the decisions that you know the supply side will have to make that's a really good uh overview I I think you know maybe put it even better than I could so that's awesome uh so you do so that we think of the supply side as at least comprised of two you know subsides right one side is the Staker and the other other side is the operator and you know sometimes these two are the same people sometimes they are not and that covers the third thing that you talked about which is delegation so how do these two sides kind of interact with each other uh and then Downstream of this there is a question whether uh after you've done all this do you have a final liquid derivative on top of all of this or not so that's the kind of wrapper for you know this relationship and all the actions that are being done could then be represented by a downstream token so that is definitely the you know the the set of considerations on the supply side the number one being what type of tokens do we allow before we get I get into some of these things I want to express the philosophy underneath this the philosophy is protocols should minimize subjective decisions this is how we think about it and the framework so if Protocols are not subject expressing subjective decisions and there are definitely subjective decisions to be made then who expresses these subjective decisions and in our case you know we want to be as close as possible to the ethereum staking layer and in fact our own like ideal end game would be to become part of the ethereum staking layer itself right like it it basically eigen layer becomes the ethereum staking layer eventually it's whether through a protocol upgrade or an EIP or something we don't really care that's our kind of end game so if you want to start from that and then ask how do you uh think about the subjective decisions that need to be made our principle there is protocols especially protocols as bare bone as the uh pre-staking protocol need to be uh need to minimize decisions at its its end but allow those decisions to be made by Services building on top by the consumers of this Supply right so that's that brings us to the other side so do we allow A or B or C that's not going to be the question that we will be facing you know it's an initial shepherding process to get the platform started we have you know whitelists and cautionary things but eventually this is going to be a completely permissionless platform you can come and restrict your eat you can restrake your teeth you can restrict your teeth LP token you can restrict your op token you can restrict your stock quad token like this is that's not the key that's not our decision so when a service Creator comes they can specify that oh I like CBE or I don't like CPT I like lightest teeth or I don't I don't like lightest teeth I like the curve LP token or I don't like the curve LP token that's the granularity that is given to the abs's so our platform minimizes its own subjectivity so we are not going to be playing this role of deciding oh is this good or not good it is up to the market to figure that out so this comes from this framework of open Innovation open Innovation is best built on top of a credibly neutral layer this is why we like ethereum and this is why we want ourselves to be as similar as possible to ethereum even at one point dissolve into ethereum itself so if you look at that philosophy which is that if we minimize these decisions which of these are actually going to work and and and be used depends on the services understanding of the different risk profiles so and exposing these information to be as transparent and clear as possible is the role of the of the associated services around the protocol protocol itself just gives the ability for people to express their visions and enter into contracts right one way you can think of you know uh my earlier like laid out the marketplace Viewpoint of eigenlayer you can also flip it and say that you know eigenlayer is a coordination mechanism for stickers node operators and innovators to come together and create a useful service and all of this is serving somebody else which is outside the definition of the marketplace which is the AVS consumer like an oracle consumer or a data availability consumer or uh you know storage consumer right so it's a coordination mechanism you know when you want multiple parties to coordinate they're mutually distrusting so how do you enable multiple distrusting parties to Common coordinate like that is really what the eigenlayer marketplace is and that's why you know we think a lot about this question um but you know to reiterate the supply side you know initially we're starting with a small handful of tokens but eventually this will be completely permissionless not only including Ethan like you know Downstream superflow tokens but completely different tokens like the optimism token or you know starkware or polygon or whatever ever because you know in in some sense there is the other view in the cosmos world of mesh security which I think you know has you know Cosmos and ethereum always have a good like back and forth you know they originally had interchange security we came up with eigen layer I think eigenlayer inspired mesh security and now match security but if you look at mesh security it's basically like I'm bringing the strength of many communities many tokens together in order to to give security but the problem is adjudication it's not just economic pooling from different economic systems it's also you have to go to each jurisdiction you have to go to each chain and create a fraud proof or something to a Duty game adjudicate whether you behaved correctly or not in each of these systems eigenlayer flips this Viewpoint it says we have a common adjudication but multiple economic systems you can have the Ops opt you can have the star quiet you can have the polygon you can have the heat all contributing Economic Security but you have a common adjudication system it's all in the same place you have a common understanding of risks and rewards you have a common place in which all of these get adjudicated it's just a much smoother experience when everything gets aggregated into that kind of a single point place and to us ethereum becomes the underwriting trust and adjudication layer I think that makes a lot of sense um and yeah really I like the approach of on the supply side of just making the protocol as you know flexible as possible so that it's really the customers the demand side that are that is going to shape you know what is used the most and what it eventually becomes you know the go-to model essentially um and yeah I think I'm glad you brought up mesh security at something that's near and dear to my heart with my seat working with osmosis um and and I see moment you know tons of similarities here um you know I think one of the big differences that mesh security is going to be built you know into the chain right of these Cosmos chains um as as an SDK module and that is something similar to that is kind of the end game that you just described in terms of you know getting this restaking and for a built into the L1 itself um I just want to double click on that a little bit and and something else you said where you said you wanted to get as close as possible to the L1 you know validators right um because I was thinking about that you technically eigenlayer could exist without any you know interactions with stakers and validators of of ethereum right it could be something more you know I would say further away from the middle of the protocol where you just have folks who have liquid eth that are you know depositing into some some contractual agreement right um it doesn't have to be pre-staked before that and so I would love to just kind of understand you know maybe double click on that piece of getting as close as possible to the ethereum you know validator level um and really what eigenlayer would look like if this is you know restaking is is built into the uh and trying it to the ethereum L1 one way uh to explain this is to start with we said we're we're building a Marketplace for decentralized trust right uh and decentralized so a Marketplace usually trades some kind of graded commodities so we want to think about you know what are the what are the types of decentralized trust what are the elements of decentralized trust that eigenlayer is allowing to be traded and you know imagine building the first potato uh Commodities exchange right like you know you have to figure out potatoes can be big or small golden or like you know different colors right potatoes like you have to think about all of these things you have to figure out for the first time what is this object that you're dealing with how do you grade it how do you understand it and I think that's the rough situation we are in if you want to say that we're creating a Marketplace for decent less trust we have to figure out what are the elements of decentralized trust what and you know each consumer of recent less trust me one different aspects of this so they may only lean on different subsets of this model so I think as far as we've thought about there are three elements of decentralized trust and that that eigen layer can offer and these are somewhat distinct the first one is the economics economic Trust I have one billion dollars take on a protocol and I know that if I violate some of the Covenant of the protocol I'm going to be able to slash or take away like a majority of this you know 1 billion that means I it almost doesn't matter whether it's a single person a single whale putting up a 1 billion or like millions of people putting up thousand dollars there's no difference the economic aspect of trust it's just the economics it's how much money is at you know promising that the correctness of this particular statement so that's the first aspect of decentralized trust in eigen layer is economics itself the second aspect of decent place trust in eigenlayer there are certain kinds of protocols which can live purely off of economic trust right imagine I'm building a ZK verification system so you know you can of course write a CK verifier in ethereum it turns out to be expensive right it takes like a 1 million gas which is 1 15 of a block in for some of the protocols you know that's why it's something like Star coil writes you know proofs to ethereum every eight hours rather than every eight seconds or 12 seconds right so it is expensive so if it is expensive could I somehow find a proxy for what I can do in between these eight hours every eight hours I go write it directly to ethereum maybe in the middle what I could do is I get somebody who promises with their one billion dollar that okay this proof is correct and then just make a claim with the well-known fact that if their claim is wrong when the eight hours you know Judgment Day comes in they may lose their 1 billion and this may be good enough for me to go move a bunch of board Apes from stock wire to ethereum you know because I know that one billion is at stake so in this use case I don't care if you have 10 000 validators or one validator it doesn't matter I know the promise is purely economic and my enforcement is purely economic I don't care about anything else number one this is one aspect of decent less trust which is purely economic crypto economic Trust and you know the second aspect of decentralized trust is decentralization itself imagine I want to build a service which is not based on the amount of Economics but purely based on decentralization just to make it easy what's an example one simple example for this is I take a data it's a secret sharing system I have a secret and then I don't I want the secret to be stored in the network but I don't want anybody to have access to the secret until a certain time is passed for example what I would do is I take the secret encode it into smaller pieces so that each node gets this smaller piece right and any majority of the nodes can come together and reveal the secret but no one node gets any access to the secret so this is you know a famous scheme and distributed systems called The shameem Secret sharing so you would go you want to go and build this and you want to use you know decentralized trust for doing this the key aspect of decentralized trust is this fault so fault that you're trying to protect is that all these nodes come together and expose the data before the timeline is passed right imagine I'm putting my like you know medical information on top of the secret sharing and the assumption is that unless there is a disaster please don't share this information because in the disaster I want this information to be public so that the registry of who needs what can be opened and then like I can get my medicine because at that point I don't care about my privacy I care about my life simple examples conditional secret sharing and what you don't want is in the normal mode these guys all come together and like reveal my secret and sell it to a Pharma company so that I'm bombarded with ads that hey you know I need to buy this I don't want that and there's no way to slash these guys for this misbehavior because it is a non-attributable fault I don't know if those guys colluded and did this or I gave the secret or somebody else did it so there's no way to attribute it for non-attributable faults where you don't you're relying on collusion resistance you're relying on the fact that these guys are all not like meeting in the same room and exposing the data you need decentralization so the second aspect of decent less trust which is decentralization itself and there are several Services who live and thrive on Purely decentralization and I gave an example secret chatting but there are other examples censorship resistance and so on which rely on decentralization not on economics it doesn't matter in the second in this case it doesn't matter that I have a trillion dollars taked or a billion dollar stake but it matters that I have thousand independent agents rather than one agent because even if you have a billion dollar State and it's a one person I'm going to reveal all the portions of portions of the secret to that guy and like secret sharing doesn't work so okay that's the second dimension of decent place trust which is you know decentralization itself the third one so the first two dimensions of decentralized trust are you know economics and decentralization they have really nothing to do with ethereum's validator set like you could basically I go and construct a huge my own validator set that's good that's deep could be decentralized I could have my own new eth or like take uh you know take bonds from the bond market you know we have a friend who's working on onboarding bonds into the crypto space you use the bonds as collateral and go and do something so this is something that you could do so the first two things really don't have much to do with ethereum but it has something to do with it which I'll briefly highlight the thing that it has to do with is shad security is better when sharing across multiple layers so if ethereum for its own purpose needs 10 billion security or 35 billion security as we see today and I can layer for its own purpose needs another 35 billion security it's much better to have 70 billion common security which secures both these systems everything is just better because it's going to be so much more difficult to attack the system you need to attack any one of this you need to get a majority of 70 billion rather than 35 billion chat security is a superpower so that's the reason that you would you might want even just the economics to be shared and the practical way it works out is you know the marginal cost once you're sharing into systems is just you know better so that is the the one reason you want to share the reason you want to share the decentralized validator set is firstly already ethereum has a decentralized data set and secondly it'll be even more awesome if as new Services come on and demand decentralization that forces ethereum itself to become more decentralized now you guys did a whole me you know podcast right like us series and one of the things in the whole Mev discussion is we discuss a lot about how Mev does not become a Force for centralization right like that's one of the core topics that you come again and again to but what is the force to decentralize that is zero force in the ethereum protocol or any protocol to decentralize because the protocol cannot evaluate and value the thing that we say we are selling which is decentralized trust and decentralization is the core part of decent less trust and there is no mechanism in the entire crypto space to value decentralization and to encourage and enhance and pay for it what doesn't get paid for doesn't get grown like this is that's why decentralization is a theology today like we're all talking about the religion of decentralization in some sense rather than the marketplace of decentralization if decentralization has real value why aren't we paying for it why is nobody actually discovering and paying the value for it and I can layer with the second mode you know I want to build secret chatting on top I want to build censorship resistance on top I want to build some other thing on top can actually for the first time start valuing putting a value on decentralization that can and by making it part of the ethereum and sharing the the violated side of the ethereum actually enables more you know decentralization not only in the eigen layer level but also ethereum itself so which is something that would be super cool if if something like that works sure um that's a a really interesting point just that was a constant theme of last season's Mev MVB episodes which was what happens if the the sort of design philosophy or the the ideals that are informing the design of your system run counter to the economics of how the system ultimately wants to go and what I had never really thought of that from the standpoint of you know we're talking about either it's a coordination mechanism or Marketplace I would actually argue to argue that a Marketplace is a form of social coordination but it actually provides an incentive in the positive direction where if there are a bunch of avs's that want a more decentralized form of trust then suddenly you have an incentive to actually go do that and create that so maybe this is a good a good way to segue into the the demand side here and would love to kind of tease out uh where you sort of see the early adoption from different actively validated services but miles I know you've got some thoughts on kind of the the nitty-gritty again perspective of like what would it look like right if you were a middleware maybe an oracle or something a t ee or something like that and you actually wanted to onboard someone else you kind of walk us through some of those more Nitty Gritty questions of what that user flow would look like yeah and I I think you honestly have already teed me up very well for these questions because by you know answering some of the supply side questions around like why you would what you really care about I think that gets to the demand side right because those are the folks making these decisions um and so yeah I would love you know I've been thinking a lot about if I was saying the shoes of you know a shared sequencer Network um what flavor of you know restaking would I want to re-secure myself um and I think there's a lot of decisions to make um it and I would love to just kind of get your thoughts on like the considerations around them um you know as I think about it it's okay what assets do I want to you know be able to restake to my protocol I think and do I care more about just you know enabling the largest amount of capital to come or do I care about you know actual the decentralization component like you just described with the secret sharing piece um and then I think a big one that I would love to cover is you know do I go through this onboarding process to the um the slashing veto Council um or do I you know basically plug in permissionlessly and what are the benefits what are the costs of that from my perspective what are the benefits you know that why why does opting into something like that you know make restaking to my protocol more attractive to you know the supply side that you're trying to get to restate to to your protocol so yeah I would just love to kind of and I think you you've already teased out a little bit but I would love to just hear about the considerations that you know if you were in the shoes of say a bridge or you know a sequencer set how you would be thinking about this and what are the major decisions that they will have to make yeah totally uh before we get into it I think there was I was talking about the three trust models for eigenlayer and I talked about two one is economics one is decentralization and the third actually gets to uh a different class of use cases and then I'll address the question about like when I'm building a new service which modes of trust am I actually using how do I think about which set of stake do I actually use and then the question about like how do I decide whether I want to participate in the veto committee or not okay so the third model so the first model of trust was economics the second model of trust was decentralization the third model of trust is the fact that a risk taker can be the same as the ethereum Staker itself and this goes to your you know the Mev thing that we were discussing which is what if I want to make a credible commitment on how I'm going to do ordering as a block proposal let's say I want to say that I'm a block proposer I restake and then I want to build an Meb Solution on eigen layer that might say that whenever I make a promise you know when you send me an encrypted transaction I'm going to send you a promise that I'm going to include this and if I don't include a decrypted version of your encrypted transaction you can take me to court and then show that hey you know you promised me this at this block number but actually in that block number there's no decrypted version of this so you will get slashed so you can start building you know I gave a talk on Mev and restaking and this is basically the idea that suddenly you have super powers in making credible commitments on altering rules using eigenlayer this is neither related to the economics not related to the decentralization this is coming from the specific fact that the Risk Takers or at least if the Risk Takers are the same as the ethereum stakers then they can get into these kinds of commitments that you know credible commitments on ordering is a whole family of solutions that you can start building on top of eigen layer and we have already we have a 25 page paper coming up on explaining what these different kinds of applications you can start building you know maybe you know since you asked me examples of services I can give you some examples here I mentioned threshold encryption I want to create an encryption but you know it's not default in protocol but maybe you know 30 of the stakers opt-in then suddenly you have you know threshold encryption as a lane that is possible because you know you send a transaction to this encrypted to end which is encrypted by a to an address which is controlled by a keeper committee and then you know I as a block proposal I can make comments that I'm going to include it and if I don't include it after I send the promise they give me the decrypted key the committee gives me the decrypted key and then I include the decrypted version so you can start building really insane things which are like protocol upgrades without having to uh actually go and do this this is one example another example is I can do partial block auctions I can tell you uh Michael that I'm selling the first 30 of the block to you and I get a signature from you saying that I send a signature to you saying that hey you know here is what I'm going to include in the first 30 of the blog I said tell Miles I'm going to use 30 70 of the block and sell it to him you can start doing credible commitments at the Block proposal level using you know this kind of an idea using the restaking idea which is a third trust model really which is the fact that the block proposal is identical to the rest Taker and you know another example which I'm actually quite excited about is um event driven actions even driven actions are you know imagine you're building a d you know uh a stable coin or uh margin lending or some kind of a protocol and you one of the core like causes of capital inefficiency in these systems is the over collateralization ratio like how much over collateralization should I do and how much over collateralization should I do depends on the price volatility in the time to liquidation the price volatility of the asset relatively to what I'm lending in the time to liquidation so if I can reduce the time to liquidation I can actually get like much tighter systems I don't need to over collateralize at 50 I can over collateralize it five percent if I can if only I can guarantee Liquidations in one block how do I guarantee Liquidations in one block if you had even driven actions even driven actions are if such an action happens then do this and if you already have a liquidation pool opted in to a certain liquidation condition and block proposals promising that you know every three blocks I'm going to actually trigger all the liquidations because you know the in attributability problem that you have in a system like you know third party keeper system like a gelato does not exist when your block proposal is the one making this promise so there's all kinds of like rabbit holes to go through just in Mev and restaking but that's the third truss model of eigenlayer is block proposal commitments now I'll switch to answering you know if you want to make any comment on the restaking as you were talking it it reminded me a lot of of what uh has just been implemented on the cosmo side and vote extensions right where you are asking your validator to set to do additional work you know in constructing every block and I think it's it's very you know very very common to see like on the ethereum side something similar come along but less ingrained you know directly into the protocol right it's more of an opt-in basis but now I think I fully understand why you know the benefits of having the block proposer you know be the same as the eigenlayer operator right versus like I think going into this conversation I was the specialized operators might end up being the kind of winning model but um you can totally see how that just you know increases the General Health of the network just to round this point out one of the worries that people have when I talk about proposal commitments is hey you know whole PBS was designed about around proposals being dumb but now proposals are making commitments but if you look at like the Mev literature you will see a lot of Builder commitments you know people talk about pre-confirmation and this and that and how are you doing any of these things how are Builders making commitments and even more fundamentally who is the Builder like Builder has no protocol role who's this random Builder who's suddenly making commitments the proposal has the Monopoly the proposal is the one that we can control in protocol so in my view what should happen is the proposal should enter commitments and the Builder should enforce it I enter commitment on that I am Opera opting into an event driven action as a proposal The Proposal is the one that has agency that we are actually trying to decentralize sending all this to the Builder is a terrible mistake because the the Builder should enforce it like the Builder is the the muscle the heart and the Brain the heart particularly is the proposal like if we move power out of The Proposal the point of decentralizing The Proposal is akshara like what do you do with these the proposals is are decent lies but the Builder has all the power so the proposal is the one who has to make promises and by keeping the proposals aligned with the decentralization and ethereum spirit and all this they will enter only commitments that actually are in the General Health of the Eid that they are putting into the system and the builders keep the commitments it doesn't mean suddenly the proposals have to work much harder the same ecosystem PBS can be generalized to then say the builders hold to all these other conditions the relay is double check that they're holding to all these conditions and the proposal you know right now blindly signs of on a header it could continue to do it you know by trusting the relay to actually take care of its own Goodwill so anyway so that's just to round out what we think would be the right place is proposers have a protocol role they should make commitments Builders are just the execution muscle and they can keep those commitments that the proposers have entered into this requires upgrading the Mev boost infrastructure to make it more general purpose you know right now that is the whole thing about like intents on the other side right on the user side and how to communicate the intents into the system but what I'm talking about is proposal commitments which is intense on the proposal side not just intense it's commitments made from The Proposal side that can then be kept at the biller side so that's uh that's something that I'm actually quite excited about as a natural evolution of the Mev space that's that's fascinating and is not necessarily what people think of when they think of restaking in terms of like the early use cases but I think it's yeah I absolutely see that part of the reason we don't uh we don't think of these use cases today or we are not building these use cases today is these use cases make sense only when there is a significant fraction of proposes we state if you have like five percent proposal proposes restrict that's good enough you know it's one billion dollar security for something but you know five percent of like block proposals do an action is not that interesting but when 50 of the block proposals can do an action that becomes certainly very interesting sure I'm glad you brought that up I actually wanted to ask you as well I mean you know if I had to ask you to sort of you know pull out your crystal ball and try to get a sense in let's say five years I mean what percentage do you think of the ethereum validator set ultimately ends up engaging in in restaking and sort of what is the Venn diagram in between node operators on eigenlayer and ethal dators I would guess the Lion's Share of Opera node operators for eigenlayer ultimate layer e validators but I yeah I know that's not necessarily the case I wanted to get a sense of like what that overlap ends up looking like I think those are two different questions one is like what fraction is restaking and the other one is whether the node validators are identical um you know we are building eigen layer because we believe that restaking is just you know uniformly better for all all stickers to participate in so that's why I'm saying this should become eventually just a part of ethereum itself into the core protocol um the uh better node operators of ethereum should be identical to node operators of these auxiliary services I don't think that there is uh what we would see there is that there'll be a stratification of two kinds of services one kind of services that require decentralization where it's better to share the same set of like validators the interesting thing is you can get decentralization only when the service that you want the people to run is lightweight okay so there are lightweight services that thrive on decentralization and you know I think I don't remember Michael or miles mentioned Oracle as a as a thing that might require professional violators but I think Oracle is one of those use cases which don't require really professional violators because it's one of those things which is very lightweight right querying a price feed of the internet can be very lightweight but very trust sensitive so it matters a lot more the trust matters a lot more than just raw performance in those cases you would see that you know people develop of course you know lightweight you know oracle adjuvants that you can actually add on to your node and and run you know in fact Ashton Drake had a proposal on an oracle uh add-on to ethereum two years back uh and you know something like that could be like very interesting on the other hand but this could be a purely non-slash service right like just the decentralization you're getting a majority opinion from tens of thousands of stickers is already like a super useful Oracle feed uh on the other hand there'll be Services which are which require for example I want to operate a bridge which you know makes the kind of promise I was talking about which is verifier ZK you know State on one ZK roll up and then transmit that state to another roll up here I don't really need decentralization I just need economics and in these kinds of use cases it's much better to have single or like a few small Central parties that you can either delegate to or they have their own stake so what we'll see is basically a stratification into two kinds of services one kind of services which are lightweight and require decentralization another kind of services are heavy weight and don't under and can rely on economics the Bad Case happens when you have heavyweight services that require decentralization and the the fact is these two are just like not compliant like you can't have decentralization and a heavyweight service that just doesn't go together so anyway those will be weeded out as wrong or bad ideas so the good ideas are things that are decentralized and lightweight that we believe every each taker will run eigen D is one of them because the requirement to run eigen da is 10 percent more than just running an eighth node that's the that's bare minimum so that's an example of a service that we think every every Staker can eventually run the um the things that we think every uh Staker will not run or the things that are going to then be delegated so essentially you'll see a stratification of the market into lightweight things that require decentralization and people are willing to pay for it so that creates the active incentive for there to exist some number of decentralized nodes that actually do it in a decentralized way and then the other services which are heavyweight and centralized and one of the things you know people talk about the modular landscape and so on I think trust itself is modular and inside any given service you can split it into aspects that need decentralization and aspects that can work on centralization we need fundamental rethink of how protocols think of themselves and you know this is something that we will be playing a lot of role in going forward at least as researchers we've thought a lot about how to you know move the you know take a complex protocol and split the portions that require decentralization into the decentralized committee and the portions that require only economic trust into the economic committee you can just like modularize that so for example it'd be amazing if I can take a consensus protocol and just borrow censorship resistance from the decentralized committee and borrow Economic Security from the highly centralized committee so these are things that that we expect would would be like super interesting going forward I think that's great and I honestly I think you've covered the demand side really well and thinking about you know what some models without even trying what sorts of models work for you know or or most attractive for different sorts of um of abs's right and so yeah I think I think that makes a lot of sense or something that's super heavy like a bridge you know really just needs Economic Security or it's unrealistic to try to you know go through with that and so I think one thing I'd maybe want to segue here too is is the role of of eigenlayer and eigenlayer's governance um in facilitating you know restakings I guess growth and development and in doing so in a safe way um and to me it seems that there's a lot of similarities to to the early days of of Lido um where lydo had to make certain choices in the early days such as you know maintaining a whitelisted validator set um that were necessary in order to basically get the market share it has now you know mitigate the risk of centralized exchanges dominating staking et cetera Etc and now their focus is very much so towards you know ossification and mitigating principal agent problems um we'd love to hear just a little bit how you're also thinking about the sequencing both in terms of rolling out all of these different flavors um rolling out you know maybe it's just um existing node operator like ethereum L1 validators versus bringing in these specialized operators um and especially the role of the veto Council and all of this because I think it's you know it's very interesting in that it's it's clearly a you know necessary I would call them training wheels The veto Council um but you know it it's it's I could see challenges ahead and in you know trying to stay as uh trying not to be subjective at all right um whereas the you know the veto Council has a few roles that could be viewed as very subjective like which lsts to onboard right who which abs's are allowed to have this backstop of of a slashing veto in case there's you know an unintended slashing event and so I would love to just hear how you're thinking about you know rolling rolling this out and the sequencing around it yeah I know this is a very very important question and when people think and talk about uh what are the risks that are associated with something like eigen layer I think um this becomes uh even more salient so I just want to highlight some of the history here so we talked about restaking we came up with the concept of this like more than a year and a half back and the easiest thing to do would have been basically to say we just accept one LSD you don't need to wait for doing all the things that we were doing just say I accept one LSD and then accept and anybody can run a chain it's actually the easiest thing to go and do we did not do that we are we we had to design the complex eigen part system which allows native speakers to participate and and we launch we don't launch till we actually have the eigenbot system which allows anybody to participate as an equal not only that the most important problem of restaking is that it is going to overload the validator set so this is my main issue with interchange security right you have the same set of validators and they have to opt in to let's say our vision is there'll be tens of thousands or millions of chains so if that's the case then you know you have a every node has to validate thousand chains which set of nodes are going to be able to do it and what that will lead to is basically convergence into a very small valid asset so that's what will happen and so the solution to that has already been figured out in the ethereum community is to separate execution and da and to let data availability scale and that's what we did we actually building eigen da as the solution to the problem that we are creating the problem of overloading the same validator set so the solution is that the data availability scales the you can have more and more nodes and this data availability system is the only thing that exactly horizontally scales which means as you get more and more nodes the total available bandwidth on the system linearly increases exactly just you can take the number of nodes each node has a certain bandwidth you multiply the two things together that's the data availability bandwidth it's an exact linear scaling system so you basically just get more and more nodes and more and more nodes means the system's better and better each node doesn't do all the work and so eigen da is a key primitive in enabling chat security chat security without horizontal scaling is an absolute nightmare so that's why we did not do what one could have very easily done last year let's take a single LST take the cosmos SDK build an adapter to trust this validator set we waited for actually figuring out because you know one of the things is we we're thinking about the next decade at least maybe the next 30 years for how the system has to evolve and if you want to think about this and we want to be a Marketplace for decent place trust by building this restaking you can kill decentralization completely then where is the marketplace this this would be like a small like one year blip that shows up and like a cancer it just kills everything that it built on top of thank you you know we're very very aware of these issues that's why we actually did not launch and we are not launching without the data availability substrate so our Natural Evolution of the space is that when we say there's thousands of chains these are not really chains these are thousands of Roll-Ups which and and in the most General sense thousands of applications that use modules that themselves are horizontally scaled on eigen layer that is the end game the end game is you have horizontally scaled services like data we've built to data availability horizontally scale service we have a paper coming up which solves you know horizontally scaled censorship resistance we have papers coming up on how to build horizontally scaled oracles so essentially we take each module each each thing that is needed in the space figure out how to horizontally scale it either us build it other people build it as services on top of this common trust system now we are talking now we are actually talking about a system where you can have more and more nodes join and as you get more and more services each service each node is doing only one end of the work so you can actually have like many more services running so that's how we actually thread the needle it's it's a very tight needle and we have to like take a cautious approach and um answering your question about governance and sequencing so this is explains the sequencing to another story so far so to say it but going forward there's much much more harder decisions we would have to navigate and we're continuously engaging and seeking Community inputs for all of these things because our ultimate understanding is nobody has all the answers Innovation we call this open Innovation because I have felt many times from the outside look at a protocol and hey I can do ABCD to the protocol and make it better but I I don't have a governance right to go and do it on that protocol so permissionless Innovation particularly enables this right you know somebody comes and builds the data availability we will data availability on eigenous somebody will look at it and say hey these guys missed ABCD I Want to Build a Better data availability on that is awesome right so that's the core core primitive but sequencing going forward and particularly the slashing video committee so when you think about it like before I get into the slashing video committee I want to lay out the philosophical basis so when I'm talking about open Innovation and Chad security what you want to prove so one access is open Innovation other access is chat security I want to get as much open Innovation and as much chat security as possible that's a stated goal and if you stay if you start with this goal the problem that you want to avoid is open Innovation should not create an externality on security right like I stick and I stick into new things and then I've taken new things and then my money blows up right like that's just a bad situation so there's a trade-off between open Innovation and security and you know just to make this more interesting it is not unique to crypto that there is this trade-off you know you can think about nuclear power you know they want open Innovation or do you want safety and you can think about AI they want open Innovation or you want safety this is a fundamental problem everywhere it is not something super you know unique to what we're doing but you know how do you thread this needle right like it's it's naive to say I only want Innovation I don't want safety because then once the system becomes unsafe you're going to allow zero Innovation after that so it's also knife to say I'm going to be so safe that I'm not going to allow any Innovation so because there's no growth in that system so this is very careful trade-off that one has to think consciously about and bring technology you know one definition of technology is it breaks existing trade-offs one definition of technology or innovation is you think there is a trade-off between A and B but I can actually break it that's an example of I'll give you one example on how we can break this trade off in a limited context okay but broadly you set this up like there's a trade-off between over Innovation and safety and one way you usually solve this problem is have governance decide like some counsel or something like navigate this data because you know whenever there is a natural trade-off which cannot be technologically solved you need Consciousness and you know human intelligence to navigate it and that's part of the initial design is to have the slashing veto so slashing veto you know the initial design is there is going to be a slashing window which on both services and whenever slashing happens The veto can intervene and just veto the slashing it cannot create new flashing but it can only veto the slashing so that's the role of the slashing window and it'll be you know filled with community members in the broader ethereum roller middleware you know I can wear space right like so that's the core idea and already you'll get a hint of what kind of people will participate in this by looking at the participants and some of our community multi-sig for example um the is this a permanent feature or is this a temporary feature right like that's that's the next question and of all the things in the eigenlayer protocol design this is the only place where there is subjectivity to decide who this committee is right and like I said our stated goal is we want to get rid of all subjectivity for one if you don't get rid of all subjectivity there's no chance it will go as the default part of ethereum because ethereum doesn't want to exert subjectively that's why a liquid striking protocol can never be a default part of ethereum because it requires exerting a necessary subjectivity to actually make that work so the um well how do we think about this number one uh eventual so so the first thing is when I build a service initially the service goes through the slashing waiter and the service ossifies and once the service is well tested and ossified it says I don't need the slashing meter anymore and goes on a completely permissionless layer so we could even launch with a permissionless layer and a permission layer where the permission layer is controlled by is onboarded by the slashing window the permissionless layer anybody can launch anything on top of it and the reason this is interesting is as a Staker you can you have to convince the Staker that you have to opt in to a service which is raw like it doesn't have the protection of the slashing video so you have to go and tell the Staker hey you know I'm moving off the slashing video please come and serve me and they'll be like what are you talking about if there's a service bug I'm gonna get slashed and I'm gonna my position is open to like random errors and this essentially makes the information transparent on both the sides of what is actually the risk profile so by allowing a set of you know stakers to trust you know both you know or one or the other the con so if a service goes through the slashing veto either the contract is right or the slashing committee is right you will not you are protected whereas somebody natively opting in without the slashing committee has to purely rely on software correctness and if your software is so correct then maybe you can convince people that that is the right thing for you to do so this is how we thread the needle again like have a slashing veto committee but also have a permissionless layer eventually we could say we don't have anything to do with the slashing committee and there's not one slashing veto committee but there's a Marketplace of slashing veto committees slashing veto committee is basically just a doubly trusted party like the relay role in You Know PBS in uh in ethereum which is basically a doubly trusted role which both the block proposal trusts and the block Builder trust so you can you can make it into subjective so this is the philosophical like solution then I'll come to the technological solution like once so you know the thing that we see again and again in in any as an academic I worked on many different areas the thing that I see is once you state the problem clearly people are empowered to then go and come up with like interesting Solutions the tension that I'm stating here is there's a tension between open Innovation and safety once we stated it like this you know we found this uh this interesting solution for example let's say I want to run not one consensus protocol there are many many consensus protocol as an academic we've written at least 10 papers on consensus protocols each of them are like oh you do BF free like this you do longer chain like this you put them together whatever there are many many ways to do it and there are thousands of protocols out there and can we enable can we break the trade-off between open Innovation and safety for these thousands of consensus not any protocol you know Bridges and this and that but just concerns this protocol where the goal is to agree on a history of ordering and it turns out you can actually completely break the trade off by using technology what do I mean by that the only thing that you slash for in all of these consensus protocols is signing two blocks with the same block number that's the slashing condition so we just need to write one slashing contract that slashing contract but that is not enough still because the slashing contract may be the same but I download and run code bases provided by random people right who are saying that they're running consensus protocols and then in that code base the code base double signs due to an error or due to like malicious intent or whatever so having the same slashing contract is not sufficient to protect me as a Staker from uh illegitimate slashing so what can I do so we can actually build something we call the anti-slasher what is the anti-slasher is it it keeps the keys required to sign on these consensus protocols in a separate separate container and in that container it checks that when I sign once I don't sign twice that's the thing that that's checked and you know we write it somebody else writes it and then we keep it separate once you have the slashing contract and the anti-slasher now you suddenly have broken the trade-off completely between open Innovation and safety I can Degen into any new consensus protocol without knowing anything about what this box is because I know I'll never get slashed because the slashing contract and the anti-slasher are bad and this is a beautiful example of how once you state the problem clearly that this is what we're working towards is there is open Innovation and safety actually you can come up with technology breaks the trade off completely in fact it breaks it so beautifully that what you could do is even solve the principal agent problem in delegation what you could do is you could take the anti-slasher and put it into a trusted execution environment and I said now suddenly it's transparent if you delegate your stake to me and I reach taken to all of these consensus protocols I'm still protected you're still protected because you know that whenever I'm signing off it's going through the trusted execution environment which is checking the anti-flasher we're already working with a project called Cubist which is you know implementing starting to think through the protocol specification for this so this is an example of the landscape that that is there going forward is there's a trade-off between open Innovation and safety we can start with a permissioned committee which exerts human judgment but then you know we don't like our role as like stewards of who this committee should be we can make that committee itself into subjective which is just a doubly trusted party a Marketplace of intermediaries and then maybe for a whole class of solutions you don't need any of these committees we just need better technology and we'll be working on it we hope the community will be working with us on figuring out how to solve this trade-off not only for consensus protocols but for every kind of protocol that you might want to build on top so the theme of this season obviously is liquid staking and I want to get a sense of there's there's sort of this link in between what you're doing at eigenlayer and some of the big liquid staking tokens like uh Lido or rocketpool or something like that and those were the two first liquid staking tokens that you onboarded into eigenlayer and you know in a lot of ways I can see this virtual virtuous cycle in between the liquid staking issuers and something like eigenlayer I'm going to go out on a lens it's my personal perspective it might end up playing out differently than this that you know liquid staking continues to find product Market fit on ethereum that becomes the dominant way that most most folks end up staking so if we return to that sort of operational model and spectrum of the different ways that people are going to interact with eigenlayer I would go out on a limb and say mostly this is good there will be some people that are actually sort of solo stakers and they actually you know work directly with their state eth but I think a lot of folks are going to take their uh Steve or their r eth or whatever it is and end up using that to restake on on eigen layer and that's good good for your business or for for eigen layer the protocol I'd be curious to see like how you think about the Strategic alliance between something that these liquid staking protocols in something like eigen layer and if you can ever we've been using this word this season coopetition if it can ever get a little bit competitive as well maybe based on where you sit in sort of the the you know the user relationship like how close you said to the user so I'd love to just get your sort of that was a lot of words I'd love to just get your high level on how you how you think about it regarding the first part is it going to be the case that liquid's taking kind of dominates uh the market I don't know there are some reasons why liquid staking will dominate a portion of the market there are reasons you know there are institutions that want to stay that don't want to give up control that don't want a pool they have real legal regulations they want to have a you know a node operator in their dual restriction there's all kinds of things going on so there is and as we start expanding the total market cap of eth we will see that you know the the set of constraints that each Staker operates in their delegation model will also be very different so I don't know whether it's as as uh clear that there will be um a single so whether I think you can break down your question into whether there is a liquid staking is the dominant way people will interact and then whether there's a single liquid staking which which is the dominant way in which people in fact I don't know the answers to these questions I think if there is complex market dynamics in in that um but we are very neutral to this fact as a protocol we have no horse in the race to whether a single protocol wins multiple protocols wins like we have no hearts in the race we but we have some you know horses somewhere and one horse is that like I said there are three aspects of the marketplace that we're you know creating there's economics there is decentralization and then there is the uh exact alignment that it's basically the each taker that is also a node Opera that's also restaking the um the first the the uh second one which is decentralization you know whether one product one liquid sticking protocol wins or not as long as we can ensure that there is a node operator set which is decentralized and not under anybody's control I think that you know satisfies what we want out of the marketplace is basically you know there's enough set of nodes in this system that are highly decentralized and I think that is a very important consideration for us and I think that we hope and we're shepherding the space as much as we can to actually like value this decentralization and pay a premium for decentralization in fact one of the first Services building on eigenlayer it's called witness chain it's a project out of Princeton which is building a proof of decentralization or proof of location so you know you want to you know have nodes around the world that's one type of decentralization there's stake decentralization but there's also node operator or decentralization Geographic decentralization if you can't measure it you know one of the principles is if you can't measure it you're not going to optimize and grow for it right and so we want a measurement Oracle and if the measurement Locus itself is centralized that breaks the whole point of the system so it's beautiful protocol which is the measurement is itself done by the decentralized nodes about other decentralized nodes and even if a fraction of the nodes lie you can still get the truth so there's a so that's an example of a service building on eigenlayer which is which will be a very base layer service because many other services can then recruit stakers based on that so that's just you know highlighting the second point which is decentralization and as you know other protocols you know participate in the ethereums taking ecosystem this is going to set up a healthy pressure to decentralize what's number one number two um our goal like I said is to dissolve into the ethereum protocol that would be the ideal output of restaking and with that goal we find zero competition with liquid staking liquid staking protocols cannot dissolve into ethereum and like I explained why I think that is possible for eigenlayer because the only subjectivity that we had to exert was the slashing waiter and you can make the slashing veto a Marketplace of slashing waiters you can get rid of the slashing veto you can do many things to basically potentially dissolve this protocol into ethereum but liquid staking requires human judgment and management of the node operators so liquid sticking will always exist as a protocol on top of ethereum plus eigen layer and that's our view in fact what would be what will absolutely happen is either these liquids taking protocols will integrate some of the eigenlayer Services under the hood for example mistaken ethereum mistake in eigen layer and then say your liquid stick teeth now represents both of these together or somebody else will take a steed put it on eigen layer and then do operations and then create a liquid derivative on top I think this is going to happen so and and you know it's more much more likely the farmer might happen because you know there are big protocols with you know enough power there and they'll say yeah you know we we will just in so what will happen is the services with the most interesting rewards will get integrated under the hood of one of these bigger like tokens and this sets up you know lots of interesting things smaller tokens may be more risk tolerant so they may they may take more risks and so on so we don't know exactly how these Dynamics will play out but we do think liquid staking is irreplaceable through eigenlayer so we have no absolutely no intersection or interest in being a liquids taking protocol um our thesis is very narrow our thesis is narrow in one sense which is that we are here to promote open Innovation that's our thesis that's why we're very happy if if eigenlayer and risk taking becomes a default part of ethereum we have many many things we want to build we want to enable other people to build so we have no dearth of this is our one idea and we have to like hang by its Corner if it's part of ethereum and it's native it's a superpower to us to go and build lots of other things that are complementary to what ethereum can serve today so that's our own roadmap so I I I don't know how the liquid is taking protocol is taking because I can't speak for them I can speak for eigen layer and our own view is we are very very very complementary in how we approach this problem our superpower is in actually figuring out what aspects of trust protocols need how do you build enough interfaces for complex distributed systems to then be built onto our eigen layer our superpower is in you know in figuring out all of these things and we want to build a community which is filled with experts in protocol and distributed system design which is very very different from what a liquid striking protocol has to be specialized in which is in understanding and figuring out how to ensure that node operators hold to their like trust and slas and these are like completely different uh Specialties in our view I want to close your um by asking you a question actually about um you know when I'm just sort of playing out into the into the future here so obviously eth started as a proof of work protocol and for for that reason its state rate is much lower than some of the other protocol l1s that started as proof of stake so you could look at something like Solana and and the the expectation right uh you know purely for them just wanting to gather native staking yield would be that that stake rate increases over time when you layer on something like liquid staking where you no longer need to separate uh you know you can immediately get access to your stake and you don't have to sacrifice opportunity costs by participating in defy you'd imagine that stake rate to go up when you layer on something like eigenlayer the ability to restake and you get even more Capital efficiency you would imagine the stake rate to go up even further right I think one you know consequence of that would be that the native stake rate that you get if you don't want to participate in liquid staking or restaking ultimately goes much lower right because the more people who have staking the rewards get the need to get dispersed over a whole bunch of different people and it's lower on a on a sort of per individual basis I guess my one of the things I'm reminded of here is you know to bring up again this sort of this dichotomy between ethereum and and Cosmos is in ethereum it's been an explicit design choice for ethereum to remove complexity especially from the validator Set uh whereas in Cosmos actually sunny and Dave will often say what can your validators do for you right it's the exact opposite um exact opposite idea and what is interesting to me about what I hear you saying about eigenlayers it's actually weirdly a blending of these two ideas which is to say you know if if the validators want to do additional services and they want to post some of their stake as collateral they should be able to do those services so knitting together this idea I could see a situation in say five years from now where the native stake the native staking rewards just from ethereum if you're not doing liquid staking or restaking are so low that basically everyone's either liquid staking or restaking and then you have validators doing many of the services that ethereum explicitly decided not to bring into the protocol before the key difference being that they're opt-in instead of like top-down commanded so I guess my question at the end of the day there though is is that a desired State I suppose you know if you're like at the ethereum foundation and we're like hey we didn't want to bring this stuff into the protocol and now we find ourselves that our validators doing all the stuff we didn't necessarily you know want to do like how would you sort of answer that my only answer to this is are there services that want decentralization or not is that a market what is the market value of decentralization this is what we are going to find out in five years we're going to find out we are trying our best again you know to ensure that we take responsible steps so that we don't just go through the um the the problem of path dependence like you start off in a highly centralized place and you know you'd never have an incentive to decentralize so we don't want to come and mess up the existing decentralization but the core thing is the total amount of stake that will be decentralized depends on what is the additional yield I can get for being decentralized that's it that's what is going to determine it and you know the way we can smooth this out is by saying that hey you remain decentralized and validate ethereum plus a few services but then delegate for to somebody else for all these more complex services so you are contributing to the decentralization premium for all these services but for all the other things that are just like relying on your stake if you have a trusted party just send it over to them uh that's possible but I think at the core of the space is the question of are people willing to pay for decent Life Trust if the answer is no people don't want to pay for decent less trust no services will have enough economics to actually drive value into decent place trust then it might end up basically collapsing but I don't think that that's the case we haven't figured out I think this is because we haven't figured out how to for example I mentioned Shamir secret sharing how do you do Secret sharing without having um without having a decentralized valid data set I don't know the answer to that so there are fundamental tensions and when people think about things like zero knowledge proofs and all that I think there is still a huge space between a gap between what can be achieved through zero knowledge proofs and more complex secure multi-party systems so which need like multiple nodes and multi-party information dispersal and one of the really nice examples of this is what penumbra is building in the cosmos ecosystem henrito Valens and his team um so that's a great example of what you cannot build without decentralization and so there is a premium for decentralization that's our thesis we are pushing very hard to figure out how to make sure that the cost of decentralization is not heavy so what do I mean by that like for example the core principle around eigenda is the total cost required to download and store the data in a distributed network is n times more than the cost required to store and do it on a single node right like and so if n is 10 000 the cost basis of the system is 10 000 X higher than like an Amazon so how are you going to compete with that kind of a cost basis so by building the system itself to be exactly horizontally scalable in our system the cost basis of downloading and storing data is exactly two times the cost of one node downloading and storing data independent of how many nodes exist you can have a million nodes and still the cost base is only 2X these are the innovations that actually transform that is the system going to decentralize or not is it the cost of decentralization is negligible and we're doing we're trying our best we want the community to continue to try or try the best to actually ensure that because nobody's really going to pay for decentralization that's the fact end users are not going to pay for decentralization uh because you know you look at HTTP and https https is more secure people still prefer HTTP because the ux lag on https till that was resolved till the additional marginal cost of the secure HTTP is higher people are not going to do it that's the same thing our thesis we need to figure out so the thing that instead of the decentralization theology we need decentralization technology which is systems that actually break the trade off but the cost basis of decentralization the latency basis of decentralization and all of the stuff and I think you know that's what we would be most excited about sure um unfortunately we've got to wrap it here but this was just a fascinating conversation I just want to say also I really appreciate you as a Founder here I know you've gotten a little bit of pushback from the ethereum foundation Etc you've done such a good job of educating the community about such a uh sort of a new and interesting and complicated idea and I just really admire like how you know with such well intentions you've taken a lot of these like poking questions and you've just uh really like embody I think a lot of the the traits that I look for in in founders with Integrity so just want to say I really appreciate all the education that you do and um you know how well you take some of these more probing questions and I want to give folks um you know if they want to find out more about you or eigenlayer or you know if you're uh maybe in AVS and you're looking to find out more details about how they can start renting security from eigenlayer or anything like that I mean what's the best way to find out more information the best place to look for information is uh our Twitter handle we also have for people trying to build new avs's we have a forum uh Forum dot I can layer dot XYZ we have a Discord channel for stakers and other people broadly in the community who want to engage with us on various questions um yeah if you are interested in building more open innovation in the crypto ecosystem and uh like our vision please do uh send send me a DM either to me or to the eigen layer handle and will uh you know if you want to join our team if you want to be part of the community in any way we're very much open for all of that and I appreciate your comments Michael on on some of these uh you know interactions I think you know it is easy to respond nicely when you know that the comments are well intentioned sriram thank you very much my friend guys I highly recommend that you go check out eigenlair and cheers love to do it again soon all right miles I think you and I were prepared for a banger from Sri Ram but at at least met if not exceeded the expectations what a fun conversation with him that was epic um you know I think we covered so much ground and and what we're really hoping to get out of it is you know get into some discussion topics that maybe haven't been spoken about before um with with SRI RAM and other other episodes better very top of mind for a lot of people right now and I think I think we accomplished that hopefully uh we'll let the listeners be the be the judge of that but you know I came out feeling like great about this episode I want to get in and actually divide our recap into relatively the same way that we did the episode with Shriram which is maybe talk about some of the supply side portions of the eigenlayer marketplace or social coordination mechanism however you want to call it and then maybe we can get into that some of that demand side and then play around with that intersection of liquid staking and restaking that we we only got to at the end there so one of my takeaways here and I eventually want to segue this into this claim that he made which I found very interesting about wanting to enshrine eigenlayer in the ethereum protocol I'm starting to see these two natural tensions is actually kind of being uh very similar actually which is this sort of tension in between wanting to create a permissionless experience versus a good user experience so this would be the app store and then this tension in between what is governance aside and what is the free market decide and I think that messy gray area right now is a lot of the work that these Protocols are going to have to do so sriram had this very interesting line of reasoning early in the podcast where he was saying you know ultimately we want to enshrine eigenlayer at the level of ethereum and the users should really decide here they should all come down to the users that sounds good ideologically in practice we know that this early crop of crypto users doesn't always make good decisions on a short or midterm time time timeline and so how do you deal with that sort of adverse selection problem that a lot of these protocols have had to mitigate I found myself wondering a lot about that attention yeah 100 I mean I think there's a clear analogy that you could draw between you know we've talked about this concept of training wheels right um and Lighthouse training wheels were to have a curated validator set in the early days and that you know at the expense of maybe being a little bit less permissionless has creates a better user experience right and allows steath holders to feel better about not you know their their validator is not getting slashed and those losses being socialized across all the holders and in the same way eigenlayers veto slashing veto council is going to make rest Acres feel a lot better about their decision to you know provide economic to security to an AVS because they know if there is a you know an unintended slashing event um they have a human backstop basically to veto that event um and protect them right and I think that as it relates to the free market and governance you know you could see the supply in a lot of ways we talked about on the staking router episode this concept of you know these these different modules basically you know pulling out the decision of allocations from governance um and letting a you know a free fee Market determine the allocation of of deposits across stake um and I think that you know that applies to eigenlayer as well and it applies to ethereum itself um you know what should ethereum actually enshrine into the protocol because letting you know the free market uh Dynamics kind of play out it can be very scary um in the same way that you know I think beforehand this was this was something that they would have never considered but now that we actually see you know what happens when you let the free market decide determine you know a lot of these critical areas that are so close to the medal of ethereum I think ethereum folks are coming around on this idea of you know maybe we should be a little bit more opinionated and maybe we should leverage this extraordinarily decentralized validator set to do other things um and so I think that's you know why we wanted to have them on because there are so many so many similarities between you know decisions at the L1 level between decisions at the liquid staking governance level and now the restaking governance level yeah really well said miles and you and I have the benefit of doing this recap post ECC and enshrining eigenlayer was definitely the a big conversation that was happening behind but also frankly in front of closed doors as well one point that I want to make actually this sort of tension in between what does governance do which does the free market do so hosu talked about creating sort of a free market mechanism for Price Discovery within the Lido protocol once the staking router sting router actually is live so once more modules get added same thing with sriram basically instead of for validating it sort of slashing uh and there's this tension between what is governance decide versus what does the free market do the middle ground there actually is the token the governance token of uh Lido or eventually eigenlayer once they release uh a token and that actually opens up both Lido and and eigenlayer to a bribe type model which I hadn't really been thinking of before either of these two episodes where in the same way where you have curve right and they have a this sort of governance emission token which it has value because different lpers want to buy up and or sort of you know ve stake it and then direct liquidity into their different pools because there's a clear incentive to do that you can actually see very similar mechanism for ldo or whatever the eigen layer token ends up being where if you're very specific like let's say you're a large institutional Staker and you and you want to direct your your uh your stake to a very curated set of validators you could buy up a bunch of ldo token you could set the fee parameter for that particular module and benefit from it that way and I'm starting to see I hadn't really thought about this broad model for these sorts of protocols but clear incentive actually for that to happen yeah but I think that's also really scary too right I agree and I agree I think that's why eigen layers opting for something that looks a little bit more similar to the optimism you know two house model early on where you know they have not released any any information but if I had to guess I think this this veto council is not going to be you know anything to do with token governance I think it's going to be purely you know reputation um based and then maybe the the token that has a different function at least in the early days um and you know Lido is more directly token you know uses its token for governance more directly um but it's almost like of a similar sort of proof of authority you know system right because for optimism if you know who is controlling you know who runs the sequencers you don't necessarily want that to be a bribe model either right because that's how that actors get in and sometimes yeah reputation is is more important than than or more effective than than economic stake um because you can be opinionated about you know who those folks are and and vet them based off of you know what how aligned to their principles are with that of of the protocol um and so yeah I think between complete like taking governance out of the equation uh completely and letting it be you know a free market sort of function or if you let it be controlled directly by token governance uh that's another option um or if you do this more like kind of you know social government governance uh approach or reputation based governance approach you know I think each of them has their own trade-offs right um because the the reputational one I think you can feel confident that they're going to make the right decisions but it's not permissionless right you're choosing people based off of their their social standing in the community and I agree and and that's not perfect either but um you know I think it's really the other two options are perhaps more permissionless right because anybody can buy the token and then use that for their power or you know if you let it completely to the free market then then you don't even need the token in the first place but those can lead to scary outcomes um and so I think we're seeing a lot more of these training wheels you know across across the space broadly um you know even in Cosmos we've been discussing you know social slashing for certain sort types of activity that that is not aligned with the principles of the protocol or could create a worse user experience um and yes it's almost I guess you're you're talking about dydx there but also osmosis we uh there were there was a proposal submitted to to osmosis and that kind of set the precedent and you know Cosmos as we talked about love is leaning into governance um loves leaning into the validator set you know what can your validator set do for you um and it's you know sometimes they're the biggest superpower and it's also sometimes the biggest weaknesses we've seen with you know events like Adam 2.0 um and so some of these ideas are migrating over to ethereum people are seeing a little bit more value in them and you know I think that's a lot of that's because they have been so unopinionated and scary things have happened um fortunately nothing catastrophic yet but but we're getting to the point where some of these projects are you know so close to the middle that it could be bad I agree I actually think an enormous first of all just again we're going to get eventually to this to drive this point home but so much of the ethereum roadmap either comes from the cosmos is directly inspired by them or event ends up swinging back to the original you know sort of thought process and ethers or the cosmos ecosystem but an enormous an enormous amount of what's going on with these protocols Lido and and eigenlayer um and this debate around enshrining really comes down to this fundamental debate which has been haven't had for a long time in crypto which is how should your validator set look and on the one hand you kind of have the ethereum design philosophy and principle of there's actually a great talk at ECC of how to make your validator a cook but really it's just uh just making them very commoditized and spread out and sort of uh dumb and then there's this Cosmos ethos of what can your validator do for you and honestly we we sort of I think are starting to see ethereum swing a little bit back towards more towards that Cosmos ethos vitalik actually he spoke a number of times to the conference but he had a great talk on account abstraction and actually the first the first sort of bullet that he made I thought was very interesting was you know we're starting to see a swing back towards enshrining and I think the reason why we're starting to see that is because ethereum at one point said you know we don't want to do a lot of this stuff because we don't have to make weird decisions around who those validator sets are shared sequencers would be like we want to Outsource things like block production or delegation of stake and things like that now that some of those Services have understandably you know found product Market fit and they're going to have an enormous amount of say over the ethereum protocol I think they're starting to be these voices that say hey actually maybe we can't this is simply too critical of a function for this network to leave to an outsourced provider and maybe we want to enshrine parts of this so I actually thought it was fascinating to hear srivam say this is the explicit goal of eigenlayer to be enshrined and a lot of folks were talking about that frankly at ECC so I'd be curious what what you think about this yeah I mean I think I was not in the room for these original conversations a couple years ago but I think my gut sense is that part of the momentum you know back towards enshrine meant is because of ethereum's shift towards a more modular roadmap um and when so little is done at the base layer and so much activity is being pushed up to different layers of the stack I think you end up with a situation where it doesn't matter how like decentralized your base layer validator set is there's critical functions you know arguably as critical as block production happening higher in the stack that are being done by much more centralized you know uh and I guess systems or or entities right and so it's to me it feels like maybe now that they've shifted the roadmap a little bit they're seeing some of these scary things that they didn't really think about originally when you know there wasn't this idea of a modular stack and ethereum shifting to being more of just the data availability layer more and more over over the years um and now they're saying okay if something bad can happen higher in the stack right that we've pushed out originally on purpose and that basically you know undermines everything that we've done really well at the base layer and having you know hundreds of thousands of validators right I think that that could lead them to say maybe we should do more right um at the base layer because we're putting you know too much trust in these higher levels of the stack um so I could be wrong but I think that that that this shift in road map towards something much more modular is also you know playing into this I think you're right I think you're right miles and you know I think it's too early to speculate on whether or not I I wish sriram the best frankly I was really impressed with this discussion and how he treats how sensitively and how deeply he thinks about these issues I can't speak to whether or not it's realistic for eigenlayer to get enshrined it is interesting though to hear even from the ethereum foundation other ideas that aren't exactly eigenlayer but are different flavors of eigenlayer are starting to get talked about that again exist on the spectrum of getting your validator to be very dumb versus wanting them to do a lot of things another idea that I would point to we talked about it very briefly in last season on Mev but it again came up at this conference is this idea of Pepsi so Pepsi is protocol enforced proposer commitments this comes from Barnabas who is at the ethereum foundation and it's this sort of framework for again there's an enshrined component that exists on chain or you know within the ethereum protocol rather that allows proposers to make credible commitments uh you know in terms of block production which if they are not honored ultimately by the proposer will make the block invalid so if you really think about what that is in terms of eigenlayer it's actually a very similar thing which is okay there's the very like base state of you know a about a proposer gets like a block header and then kind of a test to that and publishes it to the chain but if they also want to opt into these additional middleware Solutions like running a sequencer a shared sequencer for instance or an oracle or something like that they'll have the ability to do that if they restake their eth Pepsi is sort of another flavor of that and frankly I think you're going to start to hear this debate around commitments crop up quite a bit in the coming let's say six to 18 months and when you guys hear that word commitment I want you to think about the spectrum of validators doing very little versus them doing a lot right and I think this I don't know if if sriram actually mentioned it Pepsi by name but we did ask I asked him a question around you know do you see these eigenlayer operators being you know specialized you know separate parties than the L1 validators or do you see the most eigenlayer operators being validators themselves right because there is this flavor of restaking where you can delegate your your you know your stake um to a specialized operator and it doesn't have to be an L1 validator but he spoke a little bit about the benefits of you know why it's sometimes better for it to be the L1 validator itself and you can get into these you know basically all these different coordination mechanisms um and that I think is one step before we get to Pepsi um which is the validators of the base layer the actual ones doing additional work on an opt-in basis but it's not yet built into the protocol um and then when I heard Pepsi um I think it was Mike neuter's talk right and it reminded me a ton of vote extensions in Cosmos which has already been implemented or is very close uh hopefully um which is you know a lot more manageable because it's only a 150 validator 200 validator set um and it's actually not opt-in in in Cosmos so this is things like you know along with just deciding coming to consensus on on a block it's also coming to consensus on a median Oracle price um or you know the top of block auction winner and I think that you know is very similar to to eigenlayer you know today um but it is it you know I think about what this could look like you know in in its implementation and you know there's no Cosmos will be very opinionated about the jobs that they asked you know these validators to do additional jobs but there's you know ethereum's general purpose right and there's there's there's no like limit to the amount of additional jobs that could be valuable for for different protocols at higher levels than the stack and so it's like how do you enshrine this but also make it flexible enough to add new jobs but not force people to uh you know do those jobs that don't want to do them and how do you also make it agnostic to maybe the restaking or the you know some sort of third-party protocol that's that's you know facilitating this um even though it's built into the protocol right because it's if it's enshrined in the protocol it's not they're not going to say that you know eigenlayer Fades away right it will probably be somewhere you know eigenlayer will be facilitating you know the user interactions with this or the supply side interactions with this um but you have to make it agnostic to to the third parties that could they could enter this Market instead of eigen layer is a monopoly now for anything restaking um very interesting I agree with you miles and actually you know we're we're talking about this as if it's some binary thing of enshrined versus not enshrined and even once you decide to enshrine something there are many different flavors and what that spec ultimately looks like has an enormous uh impact on what the functionality is going to be the Mike neuter talk that you referenced actually it was specifically about different specs for epbs which is enshrined PBS and you went through these five different potential specs and and flavors of it and it's just very it's uh we could probably do a whole whole other podcast on on that but you know probably make sense to to move on here to the second part of our discussion which is the more demand side of eigenlayer and I eventually want to talk about this intersection in between the intersection between uh liquid staking and restaking so on the demand side I think we got a bit of a better sense but again frankly this gray area is a lot of what these Protocols are going to be figuring out of all right if you're a you know middleware operator in your sort of opting into using eigenlayer that you know so connecting to ethalidators like what are some of the decisions that you'll have to make yeah I again some of this is being colored by actual conversation that um that I had it at the conference this past week but I I walked away from a lot of those chats you know because my worry was on the demand side of this Marketplace we know there's going to be plenty of supply side people that want to earn additional yield and opt into running you know or validate or whatever some of these additional Services the question is is there going to be demand side I actually think there is going to be plenty of demand as well and one regret that I had of this conversation just be it was already so long but I wanted to ask about eigen da and why data availability is one of the first use cases and sort of walked away again from a lot of these conversations with like data availability and the load that this is going to put on the average ethereum node is going to be very high yeah which is I think the reason data availability eigenda is the original solution that they're kind of shipping here so I think eigenda is meant to solve some of the networking load that gets put on ethereum validators here and we'll open it up and make it more um you know it's it's more make it more economical for middleware operators to opt into this and my actual sense is that there's going to be a strong amount of AVS demand yeah well actually I'm not worried about the amount of AVS demand that there's going to be I'm more worried about how many validators are actually going to be able to run additional hardware and and or maybe just compute profitably and again I sound like a broken record here but a lot of the conversations this that I had this um past week we were comparing restaking to say replicated security and Cosmos and the problem with replicated security right now is there's no shortage of demand for ICS lots of chains love this idea of having you know two billion dollars of security with with you know from day one right with a huge token holder base and all this liquidity that can be injected but guess who doesn't actually like this idea anymore the validators because they're having to stand up new hardware and the people that are voting on this have you know no skin in the game right and so when I was talking to a lot of teams that plan on becoming abs's I think that was you know one of my main questions is how do you lighten the load on the validators or do you go with the specialized operator right to make make this Economics work on their side I think the economics will work on the demand side but if we just can draw a couple lessons here um we already know what doesn't work and that's making people stand up doubling their costs for a fraction of the revenue right yeah you're a revenue share but it's the same cost as running a full node then you're just running a full node for a fraction of the revenue that you get with your you know L1 validator and you know eventually these validators are going to be sick of it right and so overloaded yeah how can you how can you make this as thin as possible you know for what you need to do in terms of like the the work they're doing um yeah while still getting what you want as an AVS so I agree with you there's going to be plenty of demand I just think that they need to be thoughtful about the way they do this um that was actually one of my big I think I think the the middle ground or the the solution to that is multiple data availability Solutions so there's you know Celestia is one polygon of veil is one obviously eigen da did you know espresso actually they're so they're a shared sequencer do you know they also have their own data availability so I actually heard that as well not no idea but yeah yeah it's great I think you're going to start to see I think people understand that that's going to be a problem and they're already building towards Solutions there so one one because I want to make sure we get at the intersection between like why are we doing this episode on restaking in a liquid staking season outside of the the similarities in between eigen layers of protocol and Lido and the the reason why we're talking about this the important detail about eigenlayer is that this is an opt-in situation so instead of eips being passed that say validators on ethereum now have to run an oracle there is instead an opt-in system where where validators a certain subset of them can opt into running an oracle now that works with the current yield that up that validators are open to generating the combined the reason we're we're liquid staking and restaking combine I think is that the existence of protocols like Lido that offer liquid staking will drastically increase the ethereum stake rate which is still relatively low compared to other proof-of-stake protocols as the stake rate goes up the staking yield that validators earn goes down right so you could imagine a scenario where in the relatively near future stake like liquid staking doesn't earn you very much yield as the stake rate for ethereum creeps up I don't I'm not smart enough to know what it's going to be but it's much higher than it is now and then there might be a situation where in order to profitably validate you also have to opt into some of these restaking services so it's technically not an opt-out situation but to make it make economic sense a lot of the validating base is going to have to start doing opting into some of these additional commitments so I think that's yeah right um and so where do we strike that right balance I think um between you know the a stake rate where people are running validators profitably you know without having to restake right and then if they do have to restake you know at what point you know does how much revenue do they need to be earning from that in order to offset the additional costs they're taking on um and yeah I think the other kind of intersection here is where we talk about you know whether it's the curated Lido set or the permissionless Lido set or rocket pool set all of these folks are going to there's going to be a huge overlap obviously between you know the middleware Opera operators and the validators and so yeah I think eigenlayer looks at Lido and says hmm if they wanted to build a competitor they they could because they have the relationships here already they have all the capital you know from the stakers already the delegated Capital um and you know you could easily you know they could say they could just add a module right where they're all restaking um or they could create just a fork of Icon layer and let it be more of an opt-in basis for the stakers rather than you know dragging up the weighted average yield of of the base LST and you know I I just all to think from our conversations with some light out folks that's maybe a little bit less realistic for Lido specifically but I could absolutely see you know some of the more you know the I guess lower market share competitors you know doing that as a way to capture more market share and attract more stake because they can say hey look at our our apy is 10 12 right where the base rate for for Native staking is four or five percent in Lido's only five or six percent per se right so you could see some of the more aggressive um uh upstarts start doing this as a way to attract you know Capital through through yield yeah I agree with that and one thing I'm already thinking a little bit differently about but frankly I can't really tell where I come out on it yet is I thought it was I thought it was eventually going to be a big deal eigenlayer and Lido are today very complementary you could see them being competitive and the framework that I had for this was maybe you want to be closer to the the consumer right um in terms of uh like if you're if you're eigenlayer you should be you should be worried that Lido is very close to the consumer people are going to liquid stake most likely before they restake I think and then you know a Lido could create their own competitor like you just mentioned but it seems like what eigenlayer's strategy or solution to that is is instead of trying to compete directly they're going to the very bottom of the of the value train right directly into the ethereum protocol itself and getting itself enshrined so I mean you could also look at it from the fact of like you know this is just another utility first teeth holder for an RPL uh an R eth holder right in the same way that you go into the liquid staking protocol the stake originally and then you can go to Ave or you can go to curve right now you can go to to restake um and I think that they could just look at it like that and maybe be a little bit more hands-off if that makes sense um but yeah it's definitely different but you just haven't seen lydo say okay we own the user relationship so we should make you know an amm we should make a lending protocol we should frax might have a different opinion right obviously they're coming out from the opposite uh angle but this sort of I view it more as it's kind of a horizontal expansion um a little bit or maybe maybe it's vertical for restaking um but yeah I just don't necessarily think it's so likely in the near term um that the liquid staking protocols would be you know building competitors or at least the the dominant ones but I could be around we'll see yeah who knows I the big question is ultimately going to be especially if let's just imagine miles there's a future state where a large percentage of ethereum validators are opting into receiving rewards from these other these other chains to the point where it's extremely normalized and that's actually thought as part of the Native yield of ethereum especially if eigenlayer ends up getting in shrine mind in that sort of world how many more folks are comfortable with Steve being a claim on a pool of mostly eth plus a couple of layer twos versus today and I think that is the big question to ask yourself and you know again I just have to come back to this idea that we're speaking from this bear Market where everyone's making uh you know aggressive amounts of sense and being far too reasonable and we know that that's not how it really works over a period of time right I mean can't you imagine these sort of VC thought pieces where oh there's there's a there's precedent for this it could be you know Bond ETFs or it could be mutual funds where you hold uh and then Lido gets branded as more of an index than a one-to-one pegged asset and hey that's that was what it really was supposed to be all the time anyway you know what I mean I just think it's at this current moment it's hard to imagine Lido doing that but I think in a world where an enormous percentage of the eth validator set is also opting into these additional Rewards you could very easily make the argument that that's what Steve should be representing anyway yeah I think that's you know it could happen uh it's it's absolutely could happen I don't know what that would look like maybe it's you know marketed as hey we're gonna put buy pressure on ethereum because all these tokens right um they come in from l2s or from Cosmos chains are going to get converted back to Steve and then we'll give it to you as a reward um but I think we didn't touch on this but from the demand side there is a there is a worry there right where if you're paying out your native token as a reward to ethereum stakers they're probably gonna dump it um right so there's a that's a kind of a trade-off that we didn't talk about a lot on the demand side but that's kind of maybe the only thing that's kind of going against them on that side um yeah and then I think there's going to be additional third-party players that pop up to then re-unlock this restaked Capital right like ion or ion protocol is a fascinating project that is basically it's like a credit um risk underwriting framework for for restaked tokens based off of you know the validators that that are operating that stake um and that will help you you know lend against your restaked positions based off of you know your individual risk profile um and so yeah I think there will be a big Market that pops up on top of this and then eventual you know consolidation potentially between these players all right miles it's been a really fun one and guys I know these are long but man it's um these has just been packed with with information here hi partner this has been a really fun one I'll see you back here next week [Music] 