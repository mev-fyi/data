all right everyone welcome back to another episode of bell curve before we jump in quick disclaimer the views expressed by my co-hosts today are their personal views and they do not represent the views of any organization with which the co-hosts are associated with uh nothing in the episode is construed or relied upon as Financial technical tax legal or other advice you know the deal now let's jump into the episode Jimi Hendrix doesn't have to build his own guitar in order to write his own album right and I think I would actually I kind of want to borrow that to explain sort of what Celestia does right it's like if I'm an app shame Builder what I should care about is my application and um I shouldn't have to worry about all the other layers of infrastructure all right guys welcome back to another episode of bell curve how you doing miles doing great sir how are you doing doing very well doing bro I'm excited for this episode we've got uh Dave OHA from osmosis Sonny's partner who was in our first episode of the season um and then we've also got Nick white who's the CEO at Celestia um can you give uh listeners miles a little bit of a sense of why we've invited these two guys on yeah absolutely um so throughout the season we've been talking about the definition of an app chain as an app uh you know any any sort of blockchain that dedicates its space to one specific application um and we've kind of teased this out but there are multiple flavors of blockchains or app specific block audience anything from a full stack app specific blockchain to an app specific roll up on ethereum in the middle you have you know the emergence of a a new a new architecture known as a modular stack right and so there are lots of different ways to build app specific Roll-Ups on the modular stack which which Celestia is enabling um and I think today we just want to tease out some of the trade-offs that Builders should be thinking about when deciding between you know should I take on all of the effort of a full stack uh app specific blockchain because the benefits are worth it um versus you know a more lightweight approach which is building a roll up on Celestia so yeah really excited to dig into it with them you know like these are two of the leading thinkers in the space as it relates to this stuff and yeah we'll uh well we've got a lot to unpack with them we do certainly it was a great episode so guys hope you enjoy it let's get right into it all right everyone welcome to another episode of bell curve uh today I'm very excited to be joined by my co-host miles O'Neill we've got Dave OHA of osmosis and Nick white who's the CEO at Celestia fellas welcome to the show thanks this is going to be a really fun one I think we're gonna uh have a little fun diving into the Weeds on this so thus far in the series you've sort of defined um app chains as sort of app specific block space and each of the two of you have a very different approach to kind of the architecture that supports that app space so um maybe I could just call on each of you uh you know listeners will probably be familiar with both your projects and Dave I know your co-founder Sonny was on our first episode but can you just give a quick intro uh just like Define yourself and like your sort of approach um and the project that you're working on uh I'm Dave hello all uh working osmosis the idea is it's a app chain that's basically doing the functionality for text so the idea of being an app chain is we can change things about consensus or how we execute things in order to be in order to give ideal guarantees for a decks in a way that you probably can't for a generic execution engine so like you can change uh we can change things to add a of guarantees or ordering guarantees that uh are tailored to what Dex users may want but perhaps but in conflict with uh other use cases so I'm CEO of Celestia labs and at Celestia we are building the first modular blockchain Network um so what that means is that Celestia actually does no execution it's just a very simple data availability layer on which other people can launch their own blockchains and they can customize the execution environment and to suit their needs of whatever kind of application they're running and you can think of Celestia as kind of like this shared security layer that anyone can plug into and consume the block space of and Nick could you could you expand on that I know you know we we're trying to tease out kind of the spectrum of app chains in this season and I think of it you know on on one side you have full stack app chains and on the other end of the spectrum you have something like ethereum l3s that settle to you know a shared L2 and then down to the to the L1 but in the middle we have modular app chains and I think that there are you know a lot of different flavors of the of what this could look look like you know I think Sovereign Labs the other day released some information on the Sovereign SDK but I know there's lots of other projects that are building you know on Celestia or leveraging Celestia in some way um so yeah would you mind just kind of unpacking the different flavors of app James that that can be built using Celestia absolutely so I would say um on Celestia the you can build an app chain as a roll-up so essentially um you know as opposed to the cosmos model where you have to bootstrap a new consensus Network you have to get a bunch of validators and issue a proof of stake token to secure the network on Celestia you get a consensus network from like from day one for free um and so it really lowers the overhead of launching a new app chain but you still have the full ability to customize your execution environment your fees and and all that kind of stuff um and then actually you know on the other side of the spectrum that you mentioned um the the l3s on on ethereum actually can build the same type of architecture on slassy as well so there are actually teams building um sort of like Layer Two settlement layers and on which people will launch l3s that settle into those uh Roll-Ups on top of Celestia so we can actually support that full spectrum what you what you cannot get and I think Dave can expand on this is that um yeah Celestia is doing the consensus for you so you're not actually controlling at that layer of the stack however uh I mean we can we can talk about this I I think that um the the most important things you can control as far as the app chain stack is concerned with a modular app chain model that's that's that's super helpful and I think yeah I think that leads into my next question to Dave is is you know why did you choose the security approach that you did uh or maybe have a better set why did you choose the full stack approach um and and what does that kind of unlock for you at the at the application layer yeah and maybe just like break down a little bit more first of um so you can imagine like the traditional first set of Roll-Ups where like basically outsourced data availability and finality to eat the L1 and then uh but otherwise execution is all uh other thing and you have guaranteed ego one inclusion or a censorship assistance but otherwise like ordering properties are basically on uh the the cell two so um part of the claim or a strong part of those Metals was that no we actually want more like uh there's much more important things we need so like a deck should be have fast finality the eth the E finality is already too slow um we want consensus changes or we want to be able to require stuff for consensus to get uh both stronger Med resistance and censorship resistance guarantees than we think we could get an eth uh similar for like user level privacy so these like force us to be uh to not just imagine ourselves as uh to not rely on eth for finality or for uh a data availability you can in principle like still post to either someone wanted these but that would not be the canonical root of trust it has to be its own chain to get these guarantees or as an artist had to be its own chain take to do so I guess I can expand on why so like for censorship like we wanted uh immigration sensory persistence we want to add this thing called threshold encryption where the idea is that we have this validator set We Trust we want all of data to be uh basically all transactions should be encrypted it's such that no one no individual can read them prior uh prior to them being finalized so and then we want to basically delegate this committee that uh upon it being finalized decrypt post execution or post the decrypted contents and execute so you have this problem though who do you make this uh committee and how do they have this type guarantee around finalization but this is actually kind of elegantly done when if you're in a proof of State container environment of like improve mistake saying this committee is your finality engine like 10 10 of you they're running because that's us to get finality on stuff so you get so why do you get fast by knowledge is really important and then uh finality and we can ensure that whenever something is final it must be decryptable so by having the same set of being charged basically both uh finalization and decryption uh these can be like very you can get very tight guarantees for uh users on this so this is a quite it's really important that it's running its own consensus that is yeah it makes it makes a lot of sense and I think uh last week we touched on this with with Sam and I think you know one of the the biggest and most compelling reasons to go with the full stack approach is is really you know from a DEX perspective it's around performance um and finality but it's also around enabling some of these really interesting privacy capabilities um that we'll see from osmosis you know anoma penumbra um and a few other Cosmos chains so I guess I would turn it over over to Nick um we we've talked a lot about what you know the role of these validators app specific validators can do um how would you how do you compare you know I guess the role of sequencers for the Roll-Ups on Celestia to to the role of validators on a full stack app chain uh can they can they you know have the same exert the same level of control or opinionation over things like uh transaction ordering um custom fees or you know even Mev capture right be curious to hear hear how you would react to that I'm just going to raise my hand Nick before you answer that could you just Define for the audience as well what uh a sequencer is like what is the sort of makeup and then go into answering miles's question sure so in a in a modular blockchain World um even though consensus is handled um at the L1 layer like let's say Celestial ethereum providing the data availability um you also have to have a node or a set of nodes that are running the the roll-up execution and that are ordering the role of transactions and then posting them in a batch to Celestia so the sequencer is sort of like the the node that is running the the roll up network uh if you will so the the sequencers in a modular context uh do have control over ordering so they do have an ability to sort of extract Mev um and they also kind of have an ability if if you want to attest to the validity of the the block that they post and that can actually give you a measure of finality if you need it and what's really interesting so like it won't be the same level of security finality is once it's posted to ethereum but it can give you at least a level that is useful because like finality to me is not like binary it's not zero or one it's kind of like the amount finality is more defined by like the economic uh sort of security of let us guaranteeing that that transaction won't be reverted uh so you can actually get that at the sequencer layer as well so I don't think necessarily you have to run your own L1 if if you want fast finality because there's mechanisms that you can get that um even even as an L2 um the the interesting thing is that the whole landscape of sequencers is kind of still evolving I think it's actually probably the most important layer in the modular stack uh after the the data availability layer and there's been a lot of discussions recently about how to build a shared sequencer Network and this shared sequencer Network can do a lot of things it can ensure more censorship resistance and it can ensure aliveness of of many Roll-Ups and many Roll-Ups can actually sort of use the same set of sequencers and you can also bake in things like threshold encryption or um like Fast finale and attestation at that later or even there's we've discussed internally about maybe in the future does it make sense for Celestia itself to have threshold encryption the thing is that that um doesn't quite make sense because the unless the users themselves the users are actually using the roll up they would need to like encrypt their transactions and send them directly to Celestia so it probably makes more sense for it to exist at the Shared sequencer layer but um anyway long story short is um sequencers are a really really big part of this whole stack and I see them as like still very much kind of in r d but it's probably the most exciting space within the modular stack yeah no I I could not agree more um and I think I think maybe one other question as it will get on that same path of the sequencers comparing sequencers to validators um you know I think Dave like super fluid staking is is a capability of Osmosis that that maybe is a good example to use here where the you know the consensus layer can understand the application layer right and it so it can assets that are locked on the application layer in LP pools can be staked based off of different parameters approved by governance um do you think you know a question don't throw it to either of you you know how important is it for your sequencer set or your validator set to be really application specific and optimized to understand the semantics of the application versus you know taking a shared sequencer or a shared validator set approach like like you know interchange security provided by The Hub or or what we're talking about here with shared sequencers on with with Roll-Ups or roll apps so I think so it's actually really exciting has been happening over the last two three years is actually really trying to answer this or like understand this question and I think to understand you have to kind of dive into what are we getting security for which is um also what I think relates like how you make a module architecture um uh so for um so finality is like a there's two big ones are as like finality and state execution blending so um right so if we're imagining we're living in a world of uh different environments want to talk to each other or but then they just want to trust some committee uh or trust and then uh trust some committee that state or computation was done correctly this is like kind of one Paradigm this is somewhat like this is how IBC works today this is how kind of optimistic roll-ups team they're in the second one is you have things that are verifiable like there are uh zkaid so you actually don't need to trust the computation was done correctly up to like you know bugs but it's not uh um so what you need for out of state excusion validity difference between between these um so in this IBC context like like yeah having high confidence that people are just going to trust the state where you give them uh so there you then you need to like think a lot about how we're gonna ensure a state the state route is valid and it's there uh and if the state route was invalid then uh you know arbitrary bad things all value on this chain can be stolen and um but this does in some ways in some sense go down or this risk goes goes with enough cryptography work other parts of this risk is yes finality of like what's the chance I've committed uh we want to commit to one thing or there's two parts one is the happy path of like or not happy kind of a regular one of uh where does this blockchain's plug chugging along we and then at what point can you trust that Block B is not going to be changed for another book so uh intent nice and tenement is like we claim that it's like one block and happy one block and happy path that like when when you see Block B plus one you know that b is finalized and ethereum it's two epochs uh different group Sequence different things you know before because the but um you there's uh there's a second path this which is like actually I think often missed when people talk about modular architectures which is like Fork Choice rule uh where Suppose there is a fork how do you know which Fork to choose and something that's like a problem with uh outsourced data availability on its own is that uh datability but not like your finality is that if a DA layer sensors then uh then like they the da layer can pick your fork Choice rule not just your your happy path finalization committee interesting yeah I think I strayed from their initial question though no no not at all not at all I think I think that's I mean it it's getting a little bit away from from the application side but but it's still no it's extremely important um I think maybe another question just to unpacks some of these details is we it's pretty clear how and uh a full full stack L1 is secured right or a full stack app chain is secured it's with the native staking token of of the uh of the of the application um and Nick for for some of the Roll-Ups on Celestia what what are the different ways that these sequencer sets are securing themselves um is the sequencer sets need to post collateral from something like eigenlayer will they have their own natives you know I guess gas tokens um or there are a lot of different flavors that that you can explore here good question well I think um it's It's tricky because security can mean different things right right so it's kind of like what Dave said there's Security in the sense of like finality which is a consensus you know a block is not going to be reverted there's also Security in the sense of the validity of the execution and so in a modular stack the the finality is insured by the consensus of the data availability layer like Celestial ethereum but then the validity is insured by data availability sampling and the proof system of the roll up so either optimistic proofs like fraud proofs or ZK proofs um and and actually the shared sequencers don't really have a role as far as like security is concerned in either of those contexts um all that they do is they provide censorship resistance and liveness and ordering basically for for the roll-up so they're not actually necessarily they don't necessarily have to play a role in security although in some models the sequencer also will be maybe the proof generator or maybe the person sort of like watching either generally the DK proof or generating the the fraud proof um but there's also models in which the sequencers are totally dumb and they actually don't know anything about the execution of the roll-up and they're just more they take in transactions they order them and they post them on Celestia so it really depends on the the um the model of which that you're choosing and so that's why it's really interesting that um it's still kind of to be determined like how much should these sequencers shared sequencers know about the execution of the Roll-Ups that they're ordering um I think in practice they might end up knowing uh quite a bit just because of Mev or maybe there's some sort of like other model where the block Builders kind of bid to have their blocks like posted by the shared sequencer so there's still like a lot of um different things but but back to your question of like do they have a token I uh most shared sequencer networks I would imagine will have a token because they need to have some sort of like leader selection of who has the right to post the next block um for each of the Roll-Ups that they're ordering and so there will be some kind of mechanism and I I think there will be a token to to facilitate that and probably also some sort of like fee mechanisms uh for people to basically pay for the service that the shared sequencer network is uh performing uh it's very early points of like so I think it's up to the app for more extra security properties at once like uh so for instance uh in ordering or sorry in sensory persistence like you know this is a it's a question of like is this a security guarantee or not and then uh what do you need for it to happen like uh did you need uh if I have a goal of high sensory persistence does that mean that I should be able to let how many alternate da channels do I need uh do I need like my blocks to be forced to uh get input data from uh or um I guess in ordering I guess you have a split of like you you can oh you can have sequencers be forced to pry proofs that like here's the list of things I thought about or um yes there's uh or you you can attempt to have like different types of ordering guarantees like random random attempt to prove get approvable fight for ordering at the mental layer and I think this is underexplored though I do Wonder like how much depends on uh like da layer choice or number of DDA layers yeah and I think I think one thing that maybe just to touch on something nick uh said was around you know it's we'll see a spectrum of of sequencers and and some of them will be you know really actually understand what's happening at the execution environment and some of them will just be more of a sequencer set as a service um and shared between a lot of a lot of Roll-Ups um I guess how do you think about the trade-offs of that right from the perspective of an app builder because when I hear that I think about you know osmosis and just how opinionated osmosis can be about things like transaction ordering right Mev protection even things like social slashing right um I'm wondering you know is is the trade-off really around the interoperability of these l3s when they share a sequencer set versus the amount of opinionation that they can have at the sequencer level um or maybe Nick it's better it's said who who really controls the parameters of the sequencer set for these for these roll apps to let them do things that are opinionated or or maybe not that's a really good question um I think that obviously like the the sequencer like if there is a shared seizure Network it is providing a service to the Roll-Ups right so the Roll-Ups are its customer so um there can either be like an adversarial relationship where they try to extract Mev or you know do things that maybe are not actually incentive aligned with the customer or they might be trying to actually align incentives so I I think of you know models like skip um which is you know building uh Mev tender mint and kind of rolling it out across the cosmos ecosystem as a way for tenement validators to extract Mev but not necessarily for themselves but to redirect it to the the stakers and like the the token holders or however the community wants and I think I foresee uh shared sequencer networks emerging that have similar kinds of mechanisms where you as the the roll up kind of can configure these parameters and then if it turns out and by the way I think I imagine there's going to be it's going to be competitive landscape right there's not just going to be one sequencer network but probably multiple and if one it mistreats you or ends up not really upholding its side of the bargain or just doesn't offer this kind of functionality you can always go elsewhere um and then there's always the other option which is you don't have to use this at all and you can you know run your own set of sequencers or single sequencers like the there's there's so many options and at the end of the day I think um you know the the Roll-Ups themselves will get to choose what is best for them like there is no lock-in there's no like capture um in this model and that's also what I love about modular blockchains is there's so much Freedom um to move to whatever works best for you you're not sort of stuck you know in any one one like model so well what I see happenings I I think there's like not really anything special the sequencer layer in this da land not the or Outsource D not Outsource da hey uh I think like what I see happening is what's the apps or chains want and I think what's they're gonna what they should be doing is like here's properties we want to enforce how do I make it provable that these weren't for I have either how do I make approvable these were enforced or make it such that like uh users cannot uh will not suffer from from this so you uh you have a space of options like suppose I say sandwiching is bad I could imagine that uh I some what's in my option space okay well you can batch execute stuff you can say that no one can know the data content so they can't uh they can't front end or a sandwich you could also say that like okay here's this algorithm that says that is a sandwich detector if your block proposal satisfies this algorithm it's an invalid proposal go to the next proposal uh so we have this space of things like I think the third one is uh what's I think most underexplored like maybe like you know sandwiches I I contend this is like doable but you know sure there's some time flexing to it but there's many things in this like how how would you ideally opine about block space to be a uh that you don't have to go towards like fully just trust sequencer no sequencers can do proofs like they can snark that uh here is a list or that this blog post like validity criteria or um here's a list of things I I've uh if you if you're fine with sgx's you could like have some guarantees around what things you uh receive all that some property uh is upheld hey guys I've got I've got one uh maybe question that's slightly less less technical side but you know for from the perspective of uh a potential app builder out there like a Founder uh something that I've uh sort of found it helpful um or an underappreciated aspect of success especially in the early days is the ability to to focus you know so uh Dave I've kind of heard you say like some of the advantages right of being able to control uh you know have your validators understand the semantics of your your app but also like in in doing so in having like a full stack approach there's so many different layers that you as a Founder your brain is going to need to worry about and contend with right whereas I see sort of the advantage of a modular approach like Celestia you know there's a lot of stuff that yeah maybe I don't have the same degree of control but I also don't have to worry about that so I'd love uh maybe the two of you if you almost want to make like a pitch right if you were talking to you know Dave another founder or Nick you know a potential uh founder that was going to build on Celestia like how would you sort of tease out the pros and cons of each approach purely from kind of an app Gene Builder psychology I'll go first um I think you bring up a really really good point and that's why you know Celestia's mission is to make it as easy to build your own blockchain as it is to build your own smart contract because if you think about what made ethereum so successful and why you know we have applications like D5 and nfts and all these things is that ethereum made it extremely easy to build your own decentralized application so everyone could experiment right they didn't have to before with Bitcoin and then sort of the Bitcoin era you had to actually build your own blockchain from scratch every time you wanted to try a new app essentially so ethereum kind of unlocked all this Innovation and Celestia aims to do the same thing but actually a layer lower where you're not just building a smart contract but but you're on blockchain that is more scalable and you can actually change the execution and all that so I was last year doing that where like if I'm uh if I was found something just being single so I I if I'm saying I'm building your own blockchain what do you mean like if you uh how does a blockchain I guess differ than like um someone uh what's a decentralization need a hiring fine it's like a single sequence of are we calling a single sequence to roll up a blockchain so Celestia's broader mission is to do that I'm not saying that Celestia protocol itself achieves that on its own it's the full modular stack essentially so Celestia provides the data availability and consensus um but there's other missing layers for example I think a shared sequencer Network that you can plug into and just basically say hey I need you to do the sequencing for my rollup and also all these execution environments that actually are fraud provable or validity approvable so there's a full stack of things but once we have this full stack built out um I think that you can you'll be able to deploy a roll-up which is just a blockchain it's like a virtual blockchain um as easy as a smart contract that is you will basically Define the execution environment that you want to run and you know press hopefully it's as easy as like clicking a button essentially and you get all the properties of validity finality censorship resistance and all that kind of out of the box that's the end vision of the modular blockchain world view one thing that I just just purely a matter of matter of curiosity uh Dave I'd almost love to hear sort of the early days of what it was like to recruit a network of validators like everyone kind of understands right that that's a difficult thing to do and that's sort of the one of the main um obstacles right to building your own full stack app chain like how did you in the early days kind of get your name out there and like how did you get people to take that first shot and believe in in osmosis sure uh the other part that I think there's a little bit of a modern Bailey in this comparison of like uh this validator accrual for like four finality is uh if you're saying if you're trying to make an apple sauce comparison of like build your own blockchain via stock a or stack B uh stack B being like outsourced DH Celestia then uh the validator accrual problem still exists if you want to not Outsource you want it Outsource finality then you're a single sequencer roll up and then like the comparison point should really be uh like uh like ethereum or uh like what is the this roll up versus like because uh what is a consensus and finality demands you want but I guess now then like okay suppose we're trying to make the comparison with like non-outsourced finality of like I want to control the finality myself then um yeah so uh to get validators I think it wasn't a bad nice having a common stack like we have a common snack in Cosmos of like everyone people who build their chain via the uh via tenement in the college SDK hey we uh how very common tooling so there's very little training overhead to get people it's mostly like a willingness overhead so for osmosis um this actually wasn't a big problem like at this time there's actually like several hundred plus validators who are very eager to like just validate on networks and uh I guess at the time uh it was uh asked people who are interested in scaring this and just we had there's more than enough people who had uh who participate in the airdrop to be uh who were like assign the Genesis transactions to to join sex is actually like not an issue this is not the case for I think most app chains that start uh because there they have some like vying for attention and but at least they so in that sense for most new app trains um they I guess they have to like talk uh they have to kind of make a pitch for if I should people want to uh want to validate this I think a missing thing which uh which these initial like shared security stuff a lot of the shared security Metro security stuff is like working towards is baseling the getting uh getting it in the end some permissionless way to get this initial set of if these are just consensus and da operators or find alien da operators they actually don't and they don't want to look too much of your execution layer it just run some Docker containers then you know such a product can like then it's like your blockchain just as a government supposed to say like as a set or is there some subset of you who like is when you take these tokens and then like run this validator service yeah I I think that's that's a great segue and do what I want to do uh ask you about anyways which is kind of how we see these Cosmos security models evolving um and specifically you know I think I would love to uh if you could share a little bit more about about what mesh security is um how it is different from some of the top-down security provision models like you know the the hubs ICS or you know ethereum Roll-Ups um and I'd like yeah if you could if you could kind of dig into how you know what it means to be like a Bottom Bottoms Up approach here um you know is it similar to eigenlayer restaking um you know just kind of how you see this evolving I think it is about exploring the same question of um what do we actually care about when we measure economic security and so in proof of stake chains uh to date most of it is like uh yeah okay we we've staked some high percentage of our token so it's hard to buy up more of the token and so if but if you uh uh uh so that therefore It's like because it's hard to buy the token there's no one who's gonna accrue two-thirds and perform an attack one is like there's a circular value problem of like we're trying to measure economic value but some of this economic value is like coming from it's securing this chain and so one thing is one and oh sorry sorry let me back up if you commit a fraudulent act then the uh the claim for why you don't do this is twofold one is this you're going to drive the staking token to be worthless so that's a huge loss and two you're directly slashed so there's like funds burned so you get downside from these two things but this is very a very circular argument so whether um something it's like basically these basic Mexican news and uh eigen layer he's taking that question is like okay well why can't I have other tokens do this like um let's get Adam doesn't have Adam or Ethan's collateral oh these have like other economic factors so they're like they have higher worth like you know a lot of tokens like basically like tokens in the early days like yeah where does value come from this is not this is not the same question you have for like an atom eth osmo or like Bitcoin like these these assets have uh value because of like some other number of reasons like actual Integrations and people people care for whatever reason people care about stuff um uh but it's not because of your chain directly hey so then if there's a fraudulent act committed like uh these tokens will be burned so they are like contributing the economics Economic Security so the idea of the measure security is saying that uh well let me if I'm uh there's chain a A or I don't know maybe that's called new chain uh yeah okay chain a a uh and then and it has some it has some fruit token Foo uh for uh being secure saying I'm also willing to reason about the worth of like Bitcoin in ethereum or uh osmo like then it they'll let people uh stake these assets it's like or it'll let people so I guess uh yeah a lot of people take these assets for like Bitcoin ethereum uh osmo oh to help secure chain a but now something's interesting is well people might not want to just have their osmo only getting chain A's like rewards they want they can want their osmo to actually have like multiple usage so namely like you know curing osmosis and securing chain a a and potentially another one is like people where if Protocols are willing to take in this risk also be in a lending Market crew some like lending interest rate and then be securing the network with um uh with like the claim that this security network with unlead out osmo I've got a question for for all you guys on this actually which is um you know and this is something that I've sort of mentally thought about like listening to because eigenlayer is an extremely uh attractive value proposition right this idea of sort of restaking and lending out uh you know the security model of each of different chains the question that I always have is what would cascading liquidation sort of look like uh in a scenario like that uh because I think interoperability becomes something that's worthwhile to discuss and even like in a cosmo sort of plane where you have IBC that's still light clients and at least my understanding is the least technical person uh on this on this recording is that there's still some limitations when it comes to IBC and just running a a light client so my question to you guys is is that a concern at all am I being too uh Debbie Downer about that no no it's huge you need to you can you need to get something page and risk so here's maybe another case that's even it's maybe simpler and interesting I'm chain a a and I have a bunch of I don't know uh uh coin B securing my chain and today let's say like 80 of the worth is in my my own coin a and then like 20 of the worth is in coin B suppose coin B 10 X's well now this might this who used to be a minority coin be holder on like train a is a controlling set and can like screw over my chain so there is this problem of too much external dependency because then people had a small amount before are and are already here have controlling majorities to do attacks so you wanna you need to think about like how much What's the total amount of risk you've outsourced out once you add in lending markets this is uh yeah this is also becomes concerning um though there what I think is concerning more is like contract risk or lending Market insolvency where the nice the biggest advantage of like defies our lending markets are uh unlike FDX and all are like solve have some algorithmic solvency on chain except uh except there's actually edge cases are important details when they don't but in general like your protocol should in this much security landscape like have this reasoning of like what is this risk factor and how many independent sources of value so exposures together chains that are highly correlated I should say that no the sum of these chains cannot be more than like 33 of my security got it and that and that could be tenderment security or governance power right um it's like unclear why you'd want to Outsource yeah I guess are also important to note that like we're separating the rules of consensus stake and governance of like this question you probably don't you may never want to Outsource any governance just consensus it's like security or tenant finality security yeah no I think I think that makes sense and I think another another Trend we've that's that's being talked about are potentially a future trend for for Cosmos chains um and evolving these security models is potentially Outsourcing or unbundling parts of what they do today to say a DA provider like Celestia um or or you know a combination of Celestia and another interesting project called Babylon um so yeah one point to you Nick are you have you have you been in discussions with you know a lot of Cosmos chains about you know potentially unbundling part of their stack and Outsourcing it to Celestia or is it more on the ethereum roll upside yeah actually I would say a bit of both um we were actually building this uh sequencer software that is ABCI compatible so it means it's compatible with any um application or state machine that sort of like conforms to the cosmos SDK interface and so what that enables people to do is to run a cosmos SDK application on top of Celestia um and so there's actually been a lot more interest in that than I expected um and I think it's because the value prop is actually very strong it's like oh well before if I so I I want to actually like expand on this point about like the overhead of launching on blockchain right and I actually saw on Twitter there was a great analogy by um this guy talking about cosmology which is actually just unrelated to Shared security but it's actually this toolkit that helps you um sort of like build the front end and interface for for Cosmos SDK app and he said that you know asking what cosmology does is basically it makes it so that like Jimi Hendrix doesn't have to build his own guitar in order to write his own album right and I think I would actually I kind of want to borrow that to explain sort of what Celestia does right it's like if I'm an app chain Builder what I should care about is my application and um I shouldn't have to worry about all the other layers of infrastructure and all the other like the overhead of getting a set of validators issuing my own proof of stake token and then it doesn't just stop there it's also that you have to continuously maintain that Network and pay a security budget that compensates all those validators so what's so nice about Celestia is that you don't have to do any of those things and you're you don't have maintenance and the ongoing security budget you just pay transaction fees so the the overall like cost to run your blockchain is like diminished significantly and um so it also makes the your application more profitable if you will um and and I think mesh security is is and and also ICS are a very good way to sort of bring that cost down but I think they add well in ics's case I think it's not quite as cost effective it's also not permissionless like we want it to be permissionless as well for people to deploy their own blockchain right um and then with mesh security I think there's just a lot of complexity and um while it is again an improvement over like not not having much security um I also have a lot of concerns about the security of a model like that both because the contagion stuff but actually more from a fundamental perspective which we can get into on another another time but essentially it's very hard to slash assets that are not native to your chain if they misbehave and it's very hard to prove that validators are misbehaving on in a smart contract on another chain um there's just like limitations to that unless you have data availability or some kind of like proof system which so you kind of end up in order in my opinion to make mesh security fully secure you kind of fall back to like a modular blockchain model um but anyway yeah like at the high level Celestia wants to make it so that if you're Jimi Hendrix you don't have to worry about like the guitar is just in your hands for free and you can write your own album and just like jam and not have to like oh start from the very beginning and like you know build a guitar from scratch right and I think that's part of the the value prop you can iterate and find pmf you know with the minimum viable amount of of cost um and then half the half the benefit you described though was like single sequencer versus decentralized sequencer how do they do a data availability like no one who writes a cosmos train like is actually aware of data availability because tendermint is your da proof uh it's a DA proof amongst value set like the comparison for making it easier to launch a chain is like in The Proposal you're making is this like okay you can go make single sequencer blockchains or single sequencer uh or like so like what does that mean like single validator things if you're not trying if you're trying to be a centralized validators like you know then you need uh still have this multi-validator coordination and basically the same way like you know you need finality Etc I don't really follow follow that point okay so the claim is that uh it's easier to uh like make a chain because you don't have to have this like maintenance of like staking Awards or like many validators for upgrades right just in the interest of time I I there's a there's an important concept that I think both you two are sort of dancing around that that Miles and I really sort of want answered um and maybe maybe this is a good time to get into it but I think um both of us have sort of been been wondering and actually uh Zaki brought this up on on the last episode that we aired which is sort of this concept of like the minimum viable stack right like what is the sort of minimum viable stack needed to I think eventually over time you know the vast majority of sort of successful Founders in in crypto today are are technical Founders for obvious reasons I think over over a span of time right what we're trying to do here is build a stack so that you can abstract away some of the more technical components and thus increase the surface area for Less technical Founders to to come in right so so I think Miles and our book kind of trying to teach out like what is that minimum viable stack sort of look like what are the important sort of layers that um you know need to get like need to get built so that we can achieve that end so there's one that's like I think a huge achievement of the cause of Stack today is like it's biggest human it's abstracted out consensus from you entirely that now all you think about to it's uh sorry about consensus and like Bridges so all you have to think about is uh how do I want my application into exist but now like bridging or bridging uh and how you do consensus is like solved but there's more parts to how to build an application that like are they limited right now and uh also more security properties are limited you still have our Force think of like I I think we're gonna see in the future a lot more abstraction around like Med components like things are just like import a library to have this setup and Mev resistance tools rather than just like having to write about it or even like think about uh we can imagine there's a column stack for Mev or data inclusion then you have to think about as much like and I guess I think you make a good point I mean the cosmos SDK is really the only one of these Stacks that's kind of reached exit velocity right um it's the only app chain stack that's really in action here um you know I don't know if it could point this to either of you but I think it's important to talk about the network effects around sharing the same SDK or sharing the same stack um and I guess how would you think about you know what's played you know what's been the most important part of the SDK success and how that might lead us to think about what the next you know competitor to the cosmo stack could look like in terms of you know app chain specific Stacks um Dave is probably more qualified to speak to the cosmos SDK thing um but at least so one of the interesting things is that Celestia is very Cosmos aligned and in fact Celestia as a DA layer was built using tendermint and the cosmos SDK and we made a lot of modifications because it's kind of like a very unique uh thing that hasn't existed before but one of the benefits that we've seen in the network effects around the cosmos SDK and tendermint are things like that they've already mentioned IBC we get interoperability with all these other blockchains out of the box basically for free we get all these wallets we get explorers we get all this infrastructure that is just compatible by default and that's a huge huge like weight off of the shoulders of someone building a new blockchain um and because I actually did went through this before before Celestia I built this protocol called Harmony we had to kind of do a lot of that from scratch and so I know the pains um so anyway I think that um the cosmos SDK is definitely the farthest along from that like build your own blockchain perspective but I think that the um the cat is out of the bag and there's a lot of teams all trying to think about like what could like the next iteration of this be especially within a more modular context I think a lot of the abstractions that cause this SDK and makes can actually and even like this IBC can actually be sort of like translated into a modular sort of paradigm and there are teams doing that but there's also things like Sovereign which you guys mentioned earlier which are building like a whole new version of it but like a ZK version of the cosmos stack and I think there's there's going to be a lot of experimentation and Innovation at least from the modular perspective but Dave probably has a lot more to say yeah in I very much agreed where I think there's a number of axes you just make everything you you want to do today already just like a thousands thousands but there's more infrastructure you could want just made for you like State machine validity uh or like you know the thing to do is get CK proofs I think what's going to happen or what should happen is and that's like something substrate got right is you get all of your state machine code compiled to some VM um and then you have like snark proofs of this VM so we're you know this is a research task in snorkeland going on about you know how do we get you know how do we keep getting 10 hundred thousand X's of like speed ups and starts marks but I mean I don't know I I feel very convinced it's going to happen from like spending time in like uh how you how we construct these things things then will eventually be at this point of like you know you can snark prove very efficiently uh some common thing like Risk five that each chapter zero is doing it with absolutely some amount Isa addendums uh and so then that's something you can have this prove all right get out of the box for you other things are privacy like there is to date there's basically no good privacy toolkit for the front for the front ends where you know you want your Stacks are just like have privacy by default and have this JS libraries that like let people like shielded view their balance and not have to think about this or like just you know write create the zkp transaction um intensive resistance you know there's a suite of things like just be like you know it just come by default of like we can inherit censorship resistance from our peers along the network that we talk to or tears meaning like other trains you can you connect to rather than having to think about it yourself so I imagine like future Stacks will keep doing well like basically make the WX building the apps people want to build today already much easier here um come with new like more and more infra that or security properties just like guaranteed you don't have to think about and oh I guess maybe there's axes of like iteration that uh causes the cause SDK doesn't let you do easily like uh you know it's it's hard to change out the sense algorithm out of 10 to rent um not really because of like there's an interface boundary which is good it's just like no one's actually maintaining a second thing by the interface or um theme markets right like uh some things options are doing the most of is like playing around with fees like fee markets how we express what goes into a block uh and how we charge for it whereas actually today like the two biggest experiments in the last two years weren't in Cosmos they were like eip1559 and ethereum and uh Solana and like they're basically a pretty actually extremely interesting method of like charging gas for uh repeated contract use the same block no that I think I think that that all makes a lot of sense and you know I think I think about the stack I think it shared consensus layer either you know either just using the same consensus model like tendermen are actually having the shared you know security set I think about shared interoperability standards um and then I think about potentially you know shared shared VMS or or you know the application um environment right and do you do you view do you think the next I guess minimum viable stack for app chains is it will it share the same you know interoperability uh standards like IBC uh with the existing app chain Stacks or do you think it's you know we could see a lot more of these interoperability standards come up um over the next few years um so okay so I think as a transport layer I think IBC is like basically what you want except it needs one more feature basically this additional feature you need which you still can do right now but it's like not standardized is uh amend a zkp for what you verify so like today IBC is just like client guarantees but if if you know chain a can do a zero knowledge proof like Mina does or a hey look I computed this block correctly then the I or you can verify this over IBC to get this guaranteed so something I think is extremely exciting is like uh all these EK row-ups for the evm uh or sorry cke evm projects are basically doing this where all I mean I I these all new EVMS like ideally are all evm bridges in a year from now should really use like these things that way we get this guarantee we do it I should manage it into IPC then I do think there's still room for like I think like cross-chain synchrony guarantees I've barely even started being explored like for token transfers we do the very the simplest thing of like okay this Atomic burn but how will you imagine like decentralized applications talking from others like barely even started I've got one sort of question here I want to actually close talking about Mev uh because that's what our next episode is going to focus on and Dave I've I've heard a little birdie told me that you have some pretty strong perspectives on Mev but I've got a question for Nick before we get there which is um you know Nick you just mentioned Celestia being sort of aligned with with Cosmos and again just on the theme of trying to like really put myself in the shoes of like if I was going to launch an uh you know an app chain tomorrow I'd love to get your thoughts on sort of the the BD and distribution impact of deciding to align with different ecosystems so I was listening to again not to keep referencing I was listening to an interview srivam did uh on I think Xerox research one of our other podcasts the other day and he sort of mentioned one of the advantages of um eigenlayers you're sort of plugging into the ecosystem and there's a lot of like distribution that sort of goes along with that and you know there are a couple of different approaches which is to sort of like align yourself with a specific ecosystem like the cosmos ecosystem but then you're also seeing these sort of flexible um you know sort of modular execution layers that don't that could kind of plug and play with like like Celestial kind of any different um you know kind of settle back to any uh L1 and I'd be curious like outside of we've focused a lot on sort of the technical components of that but what's the sort of distribution and uh you know Business Development impacts of like aligning with Cosmos or ethereum or positioning yourselves as kind of a neutral uh you know execution layer that could plug into either one that's a great question Michael I just want to mention on the previous Point really quick two two things I think are really interesting in terms of improving the cosmo stack or like the the mod so like the the build your own blockchain stack one is there's there's kind of a um I think it was an open question of I think it could be a better uh interface than ABCI and people are actually kind of working on and envisioning what is a better kind of like abstraction between sort of like the sequencer layer slash consensus layer and the app layer and so I just want to pose that out there for hopefully people start working on that because I think there could be something that's more generalized the second thing is that one thing that IBC does not currently have is actually like an ability to verify sort of like the state validity um you only verify that like the block is finalized and that there's it's attested that the state is is valid and something you can get in the modular stack is actually actually proof that the state itself is valid and you get that when you share a common data availability layer and they're they're teams like polymer that are working on kind of extending IBC to make it more modular like modular friendly in terms of like you know compatible with with proof systems so anyway those are just two points but on your point about alignment I think that's that's really an interesting thing to open up and I want to start by saying that Celestia is credibly neutral and so we don't favor any particular ecosystem or type of Builder um we're we're just like a very simple data availability layer that anyone can use that's why for example we haven't enshrined any kind of execution in in the chain or settlement layer we haven't built any Roll-Ups on our own because we want to be fully incredibly neutral that said obviously we built the blockchain using the cosmo stack so we'll have IVC and probably be connected to change like osmosis and whatnot uh at the at the L1 layer and we've also built things like roll kit which are you know compatible with the cosmo stack because we felt that that's really where the app chain uh sort of uh ecosystem exists and is most mature and so you know we anticipate a lot of people to to be building Cosmos app chains using things like roll kit in the future but in practice we've also just seen a lot of adoption of new people coming to us saying hey we want to build build our own roll-up stack and we want to use Celestia because it's currently kind of the only option for scalable trust minimized data availability block space so we have teams like Eclipse which is building a Solana virtual machine sort of roll up stack we have teams like some one that is not announced yet but building sort of evm style Stacks um and and like there's just a whole sort of like a plethora of innovation of people saying you know they're not necessarily part of any ecosystem they're not really part of ethereum or part of Cosmos they're kind of like starting from from the beginning and just saying I my customer is a developer who wants to deploy their own rollup and like what is it that they're going to need and I'm going to provide that to them and I think that in the future that's really where the space is going to go and that's why we say modularism not maximalism like we don't believe that any stack is necessarily Superior any Community is superior it's really all-inclusive if you will and and we're more about bringing in rather than fighting over the existing pie it's about like you said bringing in the next you know million or you know tens of millions of developers into blockchain and crypto and you know that's that's really where we should be focusing our energy and attention yeah we we could not agree more um and that's that's a big theme of this season it's it's really you know let the let the product determine what the stack is rather than the other way around um and we're really really focusing on that because that's where we think people will be caring about in in 10 years right if if we have billions of people using this um you know these ecosystems um so yeah maybe just to end here as a segue into our next episode um Dave you and I have spoken about Mev quite a lot um and we'll have to skip team on next week but I would just love to hear you know kind of like your thoughts on on how opinionated you know app spaces or app chains or app Roll-Ups should be um about Mev and and what is sort of the things that they can do um that that make them unique over say you know a smart contract application that shares an execution environment with thousands of other apps yeah so I think applications should be really uh extremely opinion and uh some of the Pains of working on like or on working on like very monolithic stocks because you can't express these so um like I would like to say no sandwiching in a number of ways uh like like uh from something as simple as like it's impossible to submit a block that just has sandwiches to like make my application um have batching guarantees or uh or like some other forms I may be are like you know lending Market liquidations of uh great it is good that we we can people can get a lending Market liquidation to happen like as soon as possible like in the first transaction in a block it's bad that like the current system that can get dozens of conflicting transactions that like waste block space because um you know block space could be a some low price is liquidation can earn you a lot so it's like you're fine taking the risk of failure whereas and the protocol itself the letting Market isn't capturing any of this like valid Surplus value so uh you should be able to have your blockchain like basically uh get like blockchain should be able to capture a lot of this Meb opportunity he uh either automatically itself or like Express this to a market but then uh get a lot of the proceeds of that like not just you know uh unlike today was just transaction fees so to do a lot of this you have to have extremely fine-grained like uh or a more fine-grained control like saying what blocks are valid what aren't giving apps more execution style parameters and uh getting your sequencer or validators to be able to uh like auction off more things in very decentralized ways and where you don't want to you don't want just like flashbot style things something like entirely external handles this and you acquire like lots of benevolency at different and different steps to like have uh safety or decentralization you should want the change to do it itself so that way you can never be have like single blender locket for any key assumption so I think like the space stuff is like huge and like you uh we need to have chains to be iterating way more on uh different ways to express the semantic oh I couldn't couldn't agree more and uh and we'll we'll dive into that next week um so appreciate you giving us a teaser there yeah guys you you both have been uh super super generous with your time and I know we've got to wind down here in a minute I guess I'll just uh call on each of you if you want to just do almost like closing statement or argument or just sort of bookend uh sort of the point uh that you've been trying to make basically in this episode so I don't know if either of you have any any sort of closing thoughts that you want to leave the audience with but I'll sort of open the floor to both of you to give you that opportunity now sure I can go first um I would say that um again modularism not maximalism like let the let the best product win and and like Celestia happens to think that the modular stack is really where the puck is going and what will end up being better but um ultimately it's it's where developers choose to build where teams choose to build and um I will say that the modular stack is very nascent and young you know Celestia actually hasn't launched yet we will be launching later this year um and you know there's still a lot of things to be built and so I'm also one of like open uh like invite people if you're really inspired by this Vision um there's like no shortage of amazing ideas and things that you could like products that you can build or protocols you can build in the modular stack like I really think it's we're kind of redesigning what blockchains can be from the ground up and so there's just a huge amount of opportunity so if you're interested in that or you want to build your enroll up we'd really love to get in touch with you and just chat with you so we have obviously Celestia on Twitter we have a Discord we have a forum and really just like jump into the community um so and thank you guys for hosting yeah for me thanks so much I think I've ended on uh you know I Echo a lot of this of like uh next closing remark of like get so much to explore and like re-question of what what are our blockchains and what can they do I think that uh We've in general been far too pigeonholed as like a blockchain community and like how we think about this and far too accepting of status quoes from monolithic chains and uh yeah like there's so much more I can do and uh please spend time thinking about it and like don't be uh like question all layers of the chain not just don't assume ethereum semantics or Solana semantics or even today Cosmos once these should all change drastically if we're like to get anywhere yeah yeah super super positive note to end on here guys this has been a fascinating discussion you've given uh me and miles a lot to think about and digest and I'm sure the audience as well thank you both so much for your time um I'll have to do it again soon cheers all right partner great episode what we think yeah that was a lot of fun we uh we certainly got into the Weeds on that one probably probably even more so than the other two episodes but you know I thought they brought very unique perspectives um it's probably the first episode where we've had some genuine debate uh between our guests which is great to hear um and yeah it came kind of a lot of great takeaways that we can dig into yeah I agree I thought I mean the point of this episode just to reiterate again for the audience was to sort of look at that Spectrum right and we didn't have the ethereum sort of rollap perspective here but we did have the full stack app chain and the modular app chain approach so what did you sort of think of the pros and cons I think I think Dave and Nick did a good job of sort of evangelizing the each one of their sort of approaches to the architecture so I I'd be curious like how did you walk away you know thinking about uh you know what they said you know we have two different examples here we have the you know probably the best example of of a full stack app chain uh that's that's in production right now in osmosis um and you know they they were very early movers which we can we can talk about in Cosmos um and a you know highly technical team um that was capable of building this but you know from day one they wanted to leverage the full stack to you know it's it's full capabilities um for for the sake of the application right uh whereas you know Nick is is coming at the angle of okay well let's let the application developers Focus you know on their core competency which is really application development right um let's make the process of standing up an app chain as close as possible to being you know as easy as deploying a smart contract application on ethereum so that you do get a lot of those benefits of owning your own block space from day one but you're not you know you don't have the overhead cost of paying for security you don't have to you know recruit chain developers right um and and you can basically get to a minimum viable product as quickly as possible and iterate find pmf and then decide okay do I want to integrate more parts of the stack you know do I need a higher customization which might come in the form of you know moving away from like a shared sequencer set to moving towards something like your own sequences or maybe even going to a full stack option with your own validator set um so so two different approaches um yeah it is it is important you know from the perspective of builder of you know where you're coming from yeah I think you know we we went into this episode trying to frame this argument from the view of thinking about a prospective founder or app chain Builder and as as someone who's a little bit less on the technical side myself you know one thing that I found myself wondering when I was trying to put myself in the shoes of someone who was gonna you know pursue one of these different approaches is you know the amount that you need to Grapple with to do your full to do a full stack approach is mind-boggling and it is completely to Dave and Sonny's credit that both of those guys are you know it probably came across on both the episodes that we've recorded with them so far wildly smart and wildly technical that I think that's a lot of the reason they've had success is because you know of their ability to grok all these different layers of the stack for me I I think it was a little it was compelling I think there are still a couple of um challenges with with Celestia it's a little bit early and it's in its maturity and I think the full value prop hasn't been realized yet but I could that was a very compelling sort of vision for me right where I I think as a Founder I would have to weigh very carefully you know I can see the advantage of being able to to master all of those layers and have complete control over my application but also sometimes it's really nice to not have to worry about stuff and be good enough you know at a certain layer that you can just say hey I'm just I'm going to take my mental bandwidth and like really focus in hard on this one layer or problem and even though this the rest of this part isn't quite as good as I'd like I I'm okay with 80 so I think that's an important thing to consider I I totally agree and I think it's probably fair to say and and worth noting that the osmosis I guess life cycle has probably not reflective of of you know what an app chain Builder would would experience today um right they were the really the first D5 app chain in Cosmos um they had you know the support of the entire Cosmos ecosystem from day one um which really takes away kind of like the BD pains right um and they also had a highly technical team that had you know it came the team is capable of building both the chain and and the application I mean they're some of the you know they they were they and are some of the lead contributors to the cosmos SDK itself um yeah so yeah I think it's fair to say that an app you know to build an app chain today um a full stack option today there is you know a BD component uh of of getting you know validators to almost underwrite your chain um and and you know potentially invest to secure their own stake um and then there's really okay how technical is your team um and you know to be fair there are a lot of things that you have right out of the box for the cosmos SDK that's that's a big part of the success from you know a consensus engine to all these modules at the application layer that you can reuse um in you know interoperability standards that you can leverage so you know there are teams like like I think stride is a great example of one um which is a liquid staking project in Cosmos they were able to stand up a full stack app chain with a team of five or six in in six months um so you you can do this um but there is definitely you know a BD threshold that you need to you need to accomplish and and also just you know finding the the right folks on the team you know which really it's just not realistic for for you know thousands of applications all to be able to to do this um which is kind of the world that we see so I think you know there there's absolutely a place for a more lightweight approach um and and Celestia's modular stack is is really promising in that regard I completely agree with that so I think probably it probably it's fair to say that Dave and Sonny's experiences wouldn't necessarily be representative up if you tried to do that today but I did think his point about how much more difficult is it from a BB perspective like what is the lift look like of bootstrapping a validator network versus your own sort of uh single sequencer I think that was a very fair kind of CounterPoint and I didn't leave necessarily convinced that again putting on my Founder Hat that it would be a lot easier to kind of stand up my own single sequencer either I think eventually right the vision of Celestia is that there will be different layers of infrastructure and there'll be a decentralized uh sort of network of sequencers that you can plug into but that isn't built yet right I think I think there's a the elephant in the room is that you know no roll-up network has has really built a decentralized sequencer Network right these are all single sequencer networks right now that you know you might be able to you know submit fraud proofs to detect invalid blocks but I think there is definitely a trade-off in in putting your trust in like a single sequencer um that you're using for your app specific roll-up um or you know are you plugging into a uh an existing network of that you're sharing the sequencer network with other roll apps that okay great now we have a decentralized sequencer set but that decentralized sequencer set is serving a lot of different app applications so you know just how much can they actually understand in terms of the semantics of the app and to do some of the things that you know osmosis has its validators do like you know control transaction ordering capture Mev um censor certain sorts of like sandwich attacks and things like that right um and so yeah I think we are still so early on the on the sequencer side and trying to understand you know understand the or answer the question of you know what what can a validator set do that a sequencer set can't do for you uh at the application Level um but you know I don't think we've seen any app specific Roll-Ups bootstrap a decent their own decentralized sequencer set um which would be my you know just drawing an analogy that would probably be the closest thing to what you can get with your own validator set and I actually think hope hopefully we'll be hearing from Antonio uh the founder of dydx and I'm pretty sure that that exact uh constraint uh played a big uh you know part of his that played part in his decision to move into the cosmos ecosystem I want to talk for a little bit about mesh security so mesh security was a concept that I actually realized we probably should have done a little bit of a better introduction to it in in that episode so miles can you just kind of give us the overview of what uh mess security is yeah yeah so you know in the context of this episode we were talking about you know how we see you know the cosmo stack and specifically security models evolving um and I think one of the biggest criticisms of this full stack uh approach is that you know your chain is secured by you know the value of your applications token and so it's almost a bit of a circular Dynamic where you know the the app if the applications token goes down all of a sudden you're chained is is much more vulnerable to attack um and so you know are there ways that you can find you know can you can you create additive security um by potentially consuming you know adding another token to secure your chain um or or multiple tokens to secure your chain and so mess security is this idea that you can take you know a portion you can basically give a portion of your of your tenderment power so basically of your security um and and let you know another chain basically you know secure that that side um and so you can have you know it's it's very it's a Bottoms Up model where the chains are deciding you know strategically who to align with and who they would like to you know let secure their change remain and potentially have a bilateral relationship there where you know you are sending some of you're hypothecating some of your stake to their chain and and vice versa um and it gets into you know a lot we talked a little bit about you know cascading risk uh what what this sort of could look like but I think it's it's interesting because you know the you could see a future where your a lot of these app chains are are secured by by multiple tokens um and it makes the you know I guess the overall security of the chain more stable uh especially if those tokens are uncorrelated um and it also allows you know I would say chains with with very close economic relationships to instantiate a security relationship that you know reflects that um that that level of interdependency between each other basically letting you know you if you if maybe a good one is osmosis and axillary where you know I would think four out of the top 10 assets uh on in terms of tvl on osmosis are bridge from axillar and I think 70 of axillary's tvl is sitting on osmosis so those are two chains that really want to basically be able to check on each other to make sure everything is you know every all the data that's passing between them is valid um and so that's another angle of this is It's really you know hardening these economic relationships um and increasing your security at the same time so yeah it's it's something we're very excited about um and it's really taking more Bottoms Up approach to shared security versus you know a top-down approach just something like you know the cosmos Hub providing their you know validators set to another chain or you know ethereum providing security to one of the Roll-Ups it's a fascinating there's obviously a lot of a lot of uh Merit Merit to it as well one one question that I that I have for you um you know on that is I've sort of heard Sunny describe Mass security as kind of the NATO approach as opposed to the Empire approach to security and you know not to go too high level with this with this analogy but you know I guess I found when he said that I found myself asking would I rather have the protection of America or NATO and I don't have to think about that you know too much right so I think the although you remove a certain risk of sort of the evil empire right or want like let's put this back in the rent extraction power right of ethereum say uh which is more of an Empire sort of approach right that that's something that you want to worry about but there's also something very simple about it as well and one uh sort of sort of concerned in my voice about my Securities it adds a little bit of complexity to it right which is sort of you know that that would be I don't know what you'd respond to that but I think it's just uh I think that's a I think that's a great analogy um you know if you think about yourself you know drawing security from from NATO that involves you know a large number of these of these bilateral agreements that that took a lot of time to negotiate um and and maintain um and I think that that's probably one of gonna be one of the biggest challenges of of mesh is that all of this has to you know it falls on the community to kind of Drive the ship here um and and actually strike all these agreements and and monitor them and continually you know reassess their their security models um and we've talked we've touched on this a little bit but you know that is one of the biggest challenges of of the cosmos uh full stack approach is that you're putting so much on the shoulders of of you know your community's governance and you're really you know it's not just the chain developer it's it's also you know all the the community right that is is the ones at the end of the day voting on these things um and so I I agree um you know there are definitely much more much simpler approaches um but if you think about you know a world where there are uh you know more than just just say dydx and osmosis uh but you know tens or hundreds of of very valuable full stack app chains that have all kind of gotten to that point in their evolution you know they're going to need to think about ways of to to add security and to complement their own you know native staking token um and so you know this is probably the most interesting approach yet but there's a lot being explored here you know if I was critiquing us a little bit on this episode one thing that I wish that we had explored a little bit more uh are both where both their opinions on sort of this idea that Zaki introduced last episode that I know you're very curious about is this idea of like the minimum Bible stack and it was it was useful I think to hear Dave talk about the cosmos SDK and on the one hand he was it it was you know he's obviously very technical and in the weeds and osmosis you know to my understanding is actually a core contributor to the cosmos SDK as well it seems very powerful full today on the other hand I love the way that Dave closed things which is to say question everything right we're still so far from the end state so I guess my question to you is what what how did you think differently now hearing the way they talked about the minimum viable stack and and uh I've got a question for you on sort of network effects uh that I grew to that but what did you think about that whole part of the conversation I think that's that's the other piece of this I mean we've we've really only seen the cosmos SDK in action in terms of you know app chain Stacks out there um and I think that it somebody who's you know been in the space like like Dave for a long time and has built a lot of that stack and you know he's he'll be the first one to tell you there are a lot of shortcomings with it still um and so that you know leaves room for more of these Stacks to evolve um and maybe it will borrow pieces from the cosmo stack that that you know make their bootstrapping um experience a lot a lot easier right um because we can get into the network effects but I think you know I view the success of these stacks and and really the the ecosystems that use them as a combination of you know I'd say ease of developer onboarding and and how easy is it for existing apps to migrate to your stack I would say you know what is what is the quality of the ecosystem that's already using that stack so sort of a Biz def component um and you know I think all the other stuff that we talked about is important too like what are the costs involved with you know using these different stocks um and so there's there's a lot more to come out I think there's going to be we'll see you know different modular Stacks uh on the Celestia on the Celestia that leverage Celestia kind of like as we mentioned Sovereign Sovereign SDK I think we'll see you know L3 Stacks um like the op like the op stack um that optimism is building or you know what slush is building for the starknet uh ZK roll-up ecosystem and yeah I think I think we'll we'll it will really be interesting to see what sort of applications you know um migrate to these different to these different new competitors uh based off of what their capabilities they offer you know we sort of closed on this idea of Mev and the reason we did that was because our next episode we're going to be talking a lot about how Mev functions in in Cosmos can you just give for for the listeners you know why are we dedicating kind of an episode to uh to Mev how does that sort of play into the into the app Gene thesis Network yeah I think it I think when we talk this whole season is about you know owning your own block space and and what can you do with your own block space how can you make how can you leverage you know that to make your product better um and I think Meb plays into this in in a couple different ways um because Mev is really getting at right how do you extract value by ordering transactions in a certain way and I think by owning your own block space you can be extremely opinion opinionated about how those blocks are constructed and and you can do so in a way that you know one protects the user against harmful MVP so these are things like you know somebody is detecting your transaction in the mempool and then you know inserting their transaction above yours to say you know or above yours and behind yours to sandwich you um this at the same time you can you can basically harness this control over over block space to to capture the value of the Mev yourself right and so to me I think this is one of the most compelling you know I'd say uh Tailwinds of the app chain thesis uh is that you can have the best of both worlds uh as it relates to Mev you can improve the user experience by protecting them right um from harmful Mev and you can also improve the amount of value capture that your application can extract from your block space which then can be right reinvested into the product again or it can be you know you can leverage this you know value accrual to undercut competitors with more rent seeking valuable methods like fees um and so I think you know that it's going to be an important Dynamic here and excited to get into it more next week me too one thing that I've already you were already on this before we started the season but one thing I've really changed my mind about or was was just wrong frankly about is that I thought a lot of the the reason for launching your own app chain was to be able to capture more economics of Mev whereas really you know even listening to like Dave it's more about what you can do with your your product and and what you can get your validators to do for you uh you know that being said I I do think that one of the reasons I'm particularly interested to dig into Mev in the context of Cosmos is there's sort of this almost repeat you can almost a lot of the ideas I'm realizing another takeaway for me from the season thus far a lot of the what you see in ethereum's roadmap actually popped up in Cosmos first in some ways uh you know like lazy so Celestia is a great example of that they were in 2019 the white paper was lazy Ledger right and they were sort of the first ones to really advocate for this idea of modularity which is now broadly accepted by the ethereum community and baked into their into their road map but you know one question that I have that we started to get into a little bit in in this episode is where is what are the Dynamics of Mev in a modular architecture going to be right because in in when there aren't different layers in the stack there's just Mev that gets captured by sort of the base layer but then you know when you layer on different uh you know in in the layer two context right there's a sequencer that captures some of the Mev before the transaction ultimately ends up getting routed and settled on the base layer chain and then on top of that you know even there's a in a third layer right there's the app chain right which is the app chain I would assume right and I'm sure Dave and Sonny would they would want to capture a lot of the Mev on on the app chain layer as well so you know I think within that context one idea that I've I want to explore a little bit is I think again in the ethereum side of things they sort of view these Roll-Ups generalized layer 2 Roll-Ups and roll apps on top of that is benevolent extensions of you know ethereum main net interest in which in a lot of ways it is but in a lot of other ways it's actually you're you're sort of competing for Value caption margin along that chain as well so just an idea that I would introduce yeah absolutely and I think we'll we'll get into it next week but you know just how much can these uh shared sequencers uh do in terms of you know that value capture and how much of that flows back to the application um is is a big question for me and how much control does the application you know have over how that value is distributed um I think I think that's a big question and you know I think we'll we'll see one one thing that I think we'll see on Cosmos first before it appears on on ethereum is some of the more interesting on-chain solutions for Mev so this is you know moving something like flashblocked off-chain auction to actually be on chain right where it's completely verifiable and open source um and also you know gives the the chain control over how that revenue is distributed right you're not trusting the validators to kick back some portion to just stakers right maybe it goes to users maybe it goes to um you know investors in another sense but yeah I think I think there's plenty to unpack here and um yeah we'll get into it more next week all right miles this has been a fun one I will see you here for our MVD episode next week [Music] 