all right everyone welcome back to another episode of bell curve before we jump in quick disclaimer the views expressed by my co-host today are their personal views and they do not represent the views of any organization with which the co-hosts are associated with nothing in the episode is construed or relied upon as Financial technical tax legal or other advice you know the deal now let's jump into the episode hey everyone before we get into it today just want to give a quick shout out to this season's sponsor Rook close to a billion dollars worth of Mev has been taken out of users pockets and that's just on ethereum and that number is only getting larger unfortunately Rook thinks that it's time for a change and they've built a solution which is going to automatically redirect that Mev back to where it belongs into your the user's Pockets so you're going to be hearing all about them later in the show I'm a huge fan of this team and what they're building so stay tuned to find out more all right partner today we're going to be talking to John Travino and Robert Miller I am psyched for this episode uh it's gonna be a very good one you want to talk a little bit about why we've got John and Robert on today yeah so I think our topic is Mev in the modular stack right and I mean I couldn't I couldn't imagine two better guests basically to to interview about this I think John has written some of the similar posts about ethereum's uh roll-up Centric roadmap and recently also hit it out of the park with um his post uh uh on Pandora roll ups aren't real is what it was called about like I mean it's it's even hard to say what the post was about because it covered everything right like no difference uh sequencer options for Roll-Ups to like decentralize block building and yeah it's like can really recommend this post to everyone and I think we will explore in this episode basically like what this world up Centric roadmap will look like for uh for crypto like the different options for decentralizing sequencers like the challenges also that roll ups face in doing that we will talk about chat sequencing and cross domain Mev and then ultimately we will make the bridge also to Suave and I'm very glad that we have today Robert with us head of product at flashbot so he's one of the main folks um in charge of actually designing and implementing Suave and um yeah he's also someone who's just who has just this incredible like wealth of knowledge about um the Mev supply chain um and so yeah I think this would be just the blast of a conversation a great houseu all right let's jump right into it all right everyone welcome back to another episode of bell curve today hassu and I are joined by Robert Miller of flashbots and John Travino of DBA guys welcome to the show thanks for having us on good morning good afternoon thanks for having us I thought you were going to give us a good morning good afternoon good night um guys we are uh we are really stoked for this episode I've been looking forward to this one um the title of the episode is is Mev in a modular world so thus far in the first two episodes of this season hosu and I have really explored kind of the infrastructure kind of from the perspective of main chain ethereum uh obviously as as everyone in crypto knows the the roadmap for ethereum is a modular one and a lot of Mev based activity is going to move up the stack onto some of these these Roll-Ups in layer twos so maybe if we could just start from sort of a 10 000 foot vantage point in John or Robert whoever kind of wants to take this first I mean how do you see Mev changing as ethereum adopts this modular roadmap yeah so obviously things will change a lot there's kind of two parts to what I would say would change as you move to roll ups um some of it is kind of what I call like fundamental to Roll-Ups in that there are different kind of interactions at the boundaries between a roll-up and an L1 versus potentially other chains where for example if you have like layer one sequencing for a layer two where that is not normally the case for any kind of other chain the reality is that most of it that will change is just uh the kind of simple stuff and a factor of what Roll-Ups look like today um so simple example being generally all the mov is going to be going to be done in real time by the person who is the leader of whoever is choosing the ordering of those blocks so if I'm doing swaps on uniswap 101 then generally let's see if you're invalidated you're doing that to the extent that I'm moving up to an L2 it's obviously going to be the sequencers who are doing that there as opposed to the Ethereal and validators who are not going to be that kind of real-time person who's deciding the ordering for most transactions and the big difference between most Roll-Ups today and the way that any other chain work um is the fact that all of them run centralized sequencers today which is obviously just not a thing that we see on any other L1 chains because if you had a centralized sequencer for an L1 I don't really know what the point of that would be um and that has had a lot of nice things for users but also obviously a lot of negative externalities and that very just kind of simple setup that all of them have taken because what effectively all of them do is we run Etc sequencer and we keep all the order full of private and we just do a simple first come first serve because that sounds really nice for users of yeah you can trust us we'll give you fast confirmations you know we're going to make sure that you don't get front run we're going to give you quote-unquote fair ordering of you know as we see everything we're going to put it in order and like that sounds really nice um the problems that you obviously start to see with that are a lot of the problems that we've seen with for example arbitrim um over the past months as they're thinking through their strategy long term of when you have this simple first come first serve and the only way that I can express my preference of what order do I want to be in that block is well I'm going to race to be the first person on that block so that means people are investing in latency infrastructure trying to co-locate with the sequencer they're trying to spam in many cases um and you start to see the result of that is you end up with an incredibly heavy load on the sequencer to the point where arbitrim sequencer had you know hundreds of thousands connections to it and they were thinking about implementing proof of work to kind of meter those connections um don't do proof of work um as a solution to MAV um will be my uh only response there um so all of these Roll-Ups are trying to think through their longer term strategy of okay we're gonna have a lot of the same problems that L1 set to deal with so you see people like arbitrim starting to think about the longer term plans of okay how do we Implement some kind of way for people to express their preferences and inability to express those preferences by paying for those preferences directly as opposed to just paying by investing in latency infrastructure and spam in the network um so those are things like their time boost proposal or what Shannon proposed with the frequent batch auction first come first serve variation where you allow that flexibility to you know layer on some kind of auction mechanism for people to pay um so that you can get you know much better much more robust infrastructure in the same way that we see on the layer one to deal with kind of met today I think the only things that I would add to that is that um I think l2s give you a will specifically give you a place where you can experiment more with these types of different types of boarding policies in a much faster way rather than L1 it's kind of part of the thesis of the role of centric roadmap for ethereum that you have more space for experimentation before you can break things down to the protocol level if something works so very interested to see how these experiments run Fair ordering uh fair in the wild we've already seen some of it play out with the arbitrum airdrop a few weeks ago that John alluded to um interested in seeing maybe some cryptographic solutions or you know Solutions in quotes to nav that I've heard might launch the last thing that I would add is that I think as you have more Roll-Ups proliferating you have more Med that exists not just on these Roll-Ups but between the Roll-Ups as well so I think we're going to see the the rise of cross domain moving in more demand for solutions for some kind of synchronicity between different asynchronous execution environments as liquidity fragments so many different more places and you see more activity roll-ups you know I I have a follow-up question to that but I think we'll put a pin in it and move it to the section on chat sequencing which we'll get to later uh I I have a question a follow-up question for you John so you've written a lot about um the roll-up Centric culture for ethereum you had some iconic articles here um both about that and sequencing so can you give us your best guess how you think not in terms of Mev but just overall how you think the ecosystem will look like in a couple years so the main thing that I probably expect to see out of most Roll-Ups is they start to look like l1s in the way that they run in very simple traditional ways um my guess is that it's not going to be all of these radically different everyone's using a shared sequencer or everyone's using a centralized sequencer type thing um my guess is that there's going to be meaningful pressure to decentralize whether that is on a technical level social level if we want to or very possibly by frankly on a regulatory level of you know guessing but we don't know what that is going to look like there are probably some questions when you're the only person operating this thing um so there's probably gonna be pressure to do that and the simplest thing that we know works is you strap a consensus set on there you have some form of PBS you have some form of auction between these validators who are on the Roll-Ups and we know that's a system that works reasonably well so my guess is we start to see that across a lot of Roll-Ups over the next you know year plus I've got a question if I can steal the mic from Michael on hatsu um so John how do you square things like existing consensus sets auctions like PBS which generally take a little bit more latency with users kind of existing desire for super low block fountains on Roll-Ups as well as private mempools so how how do you think these two things which seem intention to me will play out in the future sure so as far as the latency I understand that some Roll-Ups care a lot more about that than I care about that um and that I think low latency certainly well below ethereum I'm on block times yeah like you users want that does it have to be 300 milliseconds 400 milliseconds no I don't really think it does I think it's fine if your blocks are you know a second or whatever um I really don't notice the difference quite frankly as a user I don't get the obsession with you know let's do this literally at the speed of light um so that would be my general intuition on latency as far as that as far as some of the Privacy aspects and like layering on these kind of additional features that users like you know we don't want everyone to get front run and stuff um my guess is it's going to be a little bit easier to implement a lot of that stuff on these Roll-Ups compared to something like say ethereum because while I expect some form of PBS auction mechanism Etc to arise in these roll-ups they're also going to be realistically much smaller validator sets because we have a much weaker trust Assumption of what can an L1 Val sorry of what can an L2 validator set do compare to an L1 validator set um so we have a much smaller semi-trusted on weak assumptions type of validator set that's probably running these you know maybe you have 10 sequences 20 sequences whatever it is um so you start to end up in a situation that looks a little more like the Mev gethse or even a step further of Cosmos where you know you start doing protocol on Builders stuff like that you know we're not going to have these super strict requirements of what you guys have to do for ethereum today where we have to do this commit reveal process and you know you want to support this long tail of hundreds of thousands of validators it's probably okay to have some level of Trust on hey you know we'll show you the bundles in this kind of Builder interface with the proposer and yeah if you start to steal them we're going to kick you off because you're one of 10 or 20 validators and we know who you are and like you're gone so being able to start to offer those features when you have a known set of smaller validators becomes a lot easier and similarly enforcing those things like you know if you start front running Etc and you know have some kind of privacy trust around them I think there's two interesting things and I'm going to go back to one thing that you said earlier about a single sequencer um that I want to follow up on there one is it's just latency in general in these systems and I think it's it's like not uh very well understood generally that um if you have an ordering protocol on your roll up that incentivizes latency games what you uh the sort of the structure of the market you're incentivizing is All actors to eventually co-locate in one place is you may not get a roll-up that has a single sequencer controlled by a single party but you may get a rollout that is controlled by a single data center in a single jurisdiction somewhere subject to a single set of logs which is a huge uh surface area for regulation risk as you were saying earlier John I think it's only like one step worse than having a single sequencer you know having your entire chain you know collocating in a single you know Amazon or or a similar data center somewhere else within the world and what we really want is to have these systems geographically distributed across the world in many different places such that no single sequencer is able to you know impose its utility function on the network and arbitrarily sensor a set of transactions um and the the other thing that I wanted to follow up on what you're saying is the sort of pushback against the notion that um uh the the PBS style is only useful if you if uh I think what you were trying to say was if you don't have kind of trust requirements between uh validators and if you have a smaller set that is more trusted um you could use something like met Gap or you're sending bundles in the clear and I think what is interesting about PBS is not only this commit and reveal scheme and the privacy in it but that it gives you the ability to iterate more quickly on features that are user facing than what validators would so if you've ever worked with these these companies that run validators right now they're not going to roll out features as quickly as your uh you know your Builder 69 or your beaver build uh Builder does on Ethan and to bring this back as an example of a feature that you could see being offered by a builder on a roll-up not on it probably won't be rolled out as quickly as a validator would be something like pre-commitments where a user is paying a small fee to a builder and in return the Builder permits to including the transaction in a certain place with certain States before that the the builders block has actually been included launching um so I think it like this PBS style is still useful even in the absence of you know super hard trustlessness requirements that you're gesturing towards you know that that is a very interesting answer to me and I think maybe we should jump ahead to kind of this idea of roll-up sequencing and chat sequencing uh because you were saying that you would expect block Builders to offer pre-commits or soft commits as a service for users um who do you think is kind of in the better position to offer this do you think it will be blocked better so do you think it will be um the sequencer who ends up selecting the block Builder um or kind of The Proposal in that kind of system at the roll-up level I would fully expect it to be the sequencer I like I think that there is a use for that type of service on ethereum L1 particularly because the block times are so slow I don't think you need that kind of thing at the roll-up level because that's the whole point of putting on a roll-up consensus um is that they're going to be giving you these half second one second type pre-confirmations anyway which is much faster than the L1 itself um and while there are potentially other features that Builders could certainly give you um I don't think the pre-commit is necessarily as valuable at least at the L2 level compared to the L1 level on that kind of typical ux um because you don't have these super long block times anymore at the L2 level and there certainly could be other features that Builders give you and are very helpful with but that one in particular I would guess is less applicable so I think the unsaid reason why I brought that up as a feature is I think if you start from the place that these consensus sets need to be decentralized then um and they're going to be they have centralizing Tendencies and you lose some of the properties that you want if they're all co-locating in one data center then you like how how do we provide users this really fast confirmation that the transactions being Unchained in the absence of having low block times and I think pre-commitments is one way to do that even if you have a lot of times that are a little bit slower that's why I think they are still interesting in the role of context because I think we may have to lengthen these block times anyway um and like the 300 500 milliseconds uh instant confirmation thing may just be an aberration of the past I'm not sure that that is true but I think that is an interesting argument and like an alternative way we can service those needs and why I brought it up do you think that any Roll-Ups will take that trade-off of trying to look more like a decentralization goal of an L1 where even the l2's consensus itself has longer block times and say a very decentralized committee um because at that point I would just say why not just use the L1 as your sequencer you know you do some variation of a base roll-up if you want those super super strong guarantees um because well so I don't know whether a roller will try that I would like someone to try and I think the design space here is pretty broad um for like doing um a little bit faster a little bit uh faster block times than L1 but not a based roll-up maybe based roll up but with pre-commits these are all like different trade-off spaces that I'd like to see tried on and practice I don't know what is is the best but I do worry that this desire that users have for super fast block times and the implementation the first computer serve would lead to geographically centralized chains which would lead to censorship over time and that's sort of what I'm seeing in the future and I think this is an interesting design space to play in but frankly I don't know what to expect people to adopt in the future um the only thing that I would touch on is I think there are reasons why you you may not want to be a base roll up and independent of this too so that's sort of a different dimension of of choice than block times and pre-commits hey guys I almost hate to jump in on such an interesting conversation here but on the off chance that there are a couple listeners out there who might not be fully following everything that we're saying here I love to almost like just back up uh for a second and just level set on sort of a definition of terms so you know at the risk of almost starting at a pretty basic level like maybe John I could call on you because again you've done so much work on this can you just kind of give us a a high level definition of what a sequencer sort of looks like today and for an audience that's very familiar with like what a validators uh sort of does from a functional standpoint could you kind of compare and contrast how they're different and then maybe like at the end of that of that definition if you kind of segue into when we talk about a decentralized network of sequencers or shared sequencing that you could kind of feed into that definition I think that'd be really helpful sure um so the way that roll-up sequences work today is quite simple because there's one person running it for each of them um as a user I send my transaction to the centralized sequencer um this centralized sequencer then determines based on what they've received the ordering of those transactions and they give immediate soft confirmations to users um which is really easy for them to do because I mean in particular they're not doing any kind of complex ordering around them you know waiting for long block times or anything they're basically just giving you out first come first serve as they receive them we give you a soft commitment of hey I will eventually put this on the L1 in exactly this order so you are trusting the or the sequencer for that ordering they could lie if they wanted to if they you know they could reorder them put them in a different order based on that feed that they've put out there because there is no explicit penalty against them um so they're giving out that real-time feed um and then after the fact as they're doing this feed um as they have published that the users have the stock commit soft commitments they're applying the deterministic whatever it is for that roll-up um State transition function of okay I have all these transactions I execute all of them and I compute what is the updated state of all of those things um so generating a new State Route et cetera um and pointing out because this will probably come up later um that sequencing and that determining the state and executing while they are the same party today those are two logically distinct roles which can be separated um so just an important point because I'm sure we'll touch on that later um but that what they are doing today is they're also executing and generating that state and then eventually they take that updated State they post that on the L1 along with all the transaction data Etc and that's the point at which you actually have a confirmation now of okay I any full node can look at the data that's been posted to the L1 the state route that's been posted to the L1 say okay this is definitely going to be the state of this roll-up in the case of optimistic rollups the L1 isn't aware of what is finalized um because you have this fraud challenge timeout period but anyone once it is posted to the L1 presuming the full transaction date is there anyone can compute this will be the state of this wallet so the difference is going to be obviously decentralizing what does that actual sequencer role um look like so a lot of that is today you are entirely trusting that sequencer for real-time censorship resistance liveness and The Ordering of your transactions they could censor you in real time they could go down you know they could reorder them as they want they could do all of that stuff and there's really no explicit penalty against them so decentralizing that role in some way whether that be just a simple leader selection algorithm or you just implement the whole new consensus mechanism on this layer too that looks very much like an L1 at that point such that there is an actual penalty um so in the simple example there if say you know we throw tendermint on a roll up to decentralize that sequencer as opposed to the centralized sequencer just giving you out the soft commitment you now have a whole validator set on that L2 that even prior to the layer one confirming it says yes we also agree that this is the ordering and this is what will eventually go on the L1 so if you even before it gets posted on the L1 if you try to change that ordering you know they would be slashed for reorgan the chain at that point because they have made now a much stronger soft commitment to you with the economic weight of whatever their stake is of saying get yes this is actually what will end up on the L1 and that also improves the censorship and liveness of the system just because you're no longer like waiting for just one operator to potentially censor you to include your transaction you now have you know maybe you're cycling through 100 validators so it improves your real-time censorship resistance and ordering guarantees with the important point that for any mature roll-up you should get eventual censorship resistance and eventual inclusion at exactly the same rate guarantee um of whatever the L1 is itself because you should always be able to if you have a mature system be able to force inclusion directly into the L1 itself um and do stuff like that such that even if the entire L2 is censoring me or they've gone down then I can always get in through the L1 directly but those real-time guarantees get much much better as you decentralize that operator yeah and uh you know I really like the example actually of just imagine you know the the issue with being a a single sequencer right Roll Up is obviously okay for now but you would never have that at the layer one for instance right imagine having one validator on ethereum that defeats the entire Point um and I think users can kind of intuitively grasp there that um that's probably not a permanent State of Affairs but in the meantime it's definitely sort of a honey pot for Mev type activity maybe either Robert or John if you want to just before we get to that that very important point about sequencers kind of combining the role of proposer and Builder that we've separated on the the layer one um could you actually just talk a little bit about the different models that we're seeing in terms of Mev on Roll-Ups like if you could even sort of compare and contrast the meva the auction sort of style that we're seeing on optimism versus arbitrum uh it's kind of wanting to be a fair ordering type role lump whoever wants to to take that thank you I can start riffing and John I'm sure you'll follow up uh when I'm done so meva was this really early idea for how you handle Mev it predates um the official launch of flashbots is in The Ether research post I think by Carl from optimism in 2018 or 2019 and at the time so Roll-Ups uh were just bubbling up as an idea it wasn't as mature as a thinking now and I think the team was thinking about ways to perpetually fund Roll-Ups and perpetually use that funding that Roll-Ups get for public goods um and meva which stands for Mev auctions was this idea that the the uh roll-up sequencer would auction off the right to propose a block in an open market and and so every single block you could bid uh hey I'm willing to pay one eth or two if for the right to sequence this entire block which is the idea behind Mev options it's kind of interesting because there are some some reasons why this structure isn't a isn't a good one and uh why the optimism team has moved away from Meda and it differs a little bit from sort of the PBS Memphis style Market that we see on each layer one and the way that it differs is that as I remember the meva structure it is your auctioning off a block in advance so you are buying a block in the future as opposed to bidding in real time for the existing block which is slightly economically inefficient compared to a bunch of people bidding in real time for inclusion of a full block like you have in that boost today uh this both of these uh auctions are in contrast to first come first serve which is being pursued by the arbitrum team right now and the way that most Roll-Ups actually work in practice today where the sequencer is attempting to include transactions in the order that they receive them with sort of no way of expressing uh your preference of priority over other other uh transactions and this can be problematic because it incentivizes um you know one of two things depending on the economics of the domain the first is it incentivizes spam so if your transaction is just included on a first come first serve basis and there's really low fee blog space then a way that you could optimize for Mev is just to hit the sequencer as hard as you can and do your nav search on chain so you actually Implement like a background Arbitrage model in a smart contract and just repeatedly hit your contract trying to background transactions probabilistically and reverting when you're not able to successfully do that and as a Searcher you have no idea when this is going to be successful but you're Outsourcing this work of doing it to the sequencer you're using up gas on chain because it's so cheap and the single time when you probabilistically you know are able to find some Arbitrage on chain is going to pay for all of your Rewards um so this is kind of the way that we saw first come first serve play out on Solano as an example where Searchers would send Millions tens of millions of transactions to try to capture a single liquidation you know probabilistically hitting the chain as much as possible the second way that you see this play out on Frisco for surf domains which is like arbitrary today uh optimism as well since they're also first come to served today is optimizing for latency so you try to find where this the single sequencer is collocate with them and optimize to the absolute smallest millisecond possible of latency in your code to be able to have the first transaction hit the sequence they're possible after some any of the extraction opportunity is created and this creates all sorts of games that are being played today Arboretum had a problem where there was an end point that Searchers would listen to on on their sequencer and Searchers would try to open up many many many many different connections to this endpoint I think tens of thousands of them and it was really hurting their sequencer's ability to operate an efficient and efficient process and Searchers were doing this because they're able to get some level of edge in the latency game here and like I said the other externality of latency games is that incentivize co-location in a single and geographic location and over time this is a vector for censorship so these are kind of the the three broad different um ordering uh protocols that I would highlight to you right now there's kind of PBS Style on um on eth layer 1 with map boost where you're bidding in real time any of the options where you're bidding in advance and in the future and first come first serve which is uh trying to include transactions as they come um is that what you're asking Michael that's exactly it yes um maybe if we could actually dig into that you know actually awesome maybe could I turn this over to to you here because I know you you gave a great talk about this in Mev economics um which was definitely worth watching and I would highly recommend that but basically on the the importance of PBS on Roll-Ups or layer twos so maybe with um you know Robert's explanation they're serving as a jumping off point could you describe why it's important uh to kind of Transport this concept of PBS from eth main chain up to the the roll-up layer yeah I think uh it kind of connects uh to something that both Robert and John were were already talking about which is uh right now the the sequencer in these uh layer two domains they basically plays two roles right uh it proposes new blocks but it also decides on The Ordering of that block and in order to uh to decentralize the sequencer you need to come up with a mechanism that doesn't introduce kind of decentralizing tendencies that especially Robert was mentioning to to either spam the chain or optimize your latency to the degree that um the entire chain will kind of centralize so that the chain sequencing will centralize into a single uh geographical domain or jurisdiction and um and so we actually know one mechanism from ethereum layer one that that actually require like it satisfies all of these requirements and that is kind of to to have a leader you know some leader rotation mechanism with a decent amount of block time so it's it's not so low that that kind of latency it plays an overwhelming role and then you Outsource uh the construction of these blocks to a professional Market of block Builders um and you you you kind of manage to isolate the the centralizing pressure on on the Block building road that way and uh in a in a role where it's kind of more easily contained and you try to create as much competition as possible um in the block Builder Market and so um I think the point of my talk was that there are different mechanisms to decentralize layer 2 sequences and um PBS the PBS that we know from from layer one uh is is the the best thing that we have and so I think it would be very worthwhile for more uh layer tools and enroll up ecosystems to um to to think about how they can best plot this model to their respective domains yeah absolutely and I think that's um kind of a good way to frame the rest of this uh discussion so maybe this is a little bit tough because this hasn't actually happened necessarily yet but let's try to focus the rest of this discussion on kind of the the sequencing role on the roll-up layer um and talk about kind of that roadmap type decentralizing sequencer set or even shared sequencer sets and then I want to talk about decentralizing the role of block building and then Robert this is really where we're probably going to call on you a lot to talk about uh Suave um and what that's going to look like but maybe thank you for that uh so before we before we get there um John can we talk a little bit um because I know you've written about this pretty extensively about what the roadmap looks like to decentralizing sequencer sets so maybe for listeners I I almost kind of picture this is if you talk about decentralizing sequencer set that's one roll up with many dedicated sequencers that sequence transactions in that particular roll up and there's kind of this other world of shared sequencer sets where you say hey there are a bunch of different Roll-Ups that settle back to ethereum wouldn't it be if there was this one network of sequencers that sequence transactions for all of these different Roll-Ups so can you kind of talk about the road maps for for both of those so the basic consideration that a lot of these Roll-Ups are going to be taking when they're thinking about like how do we decentralize this um is Roll-Ups want to effectively inherit the guarantees of what their layer 1 is eventually so that includes the censorship resistance and liveness of that system um so the simplest way to do that is a form of shared sequencer is just let the layer 1 sequence your blocks for you effectively this is some variation of what's been called total Anarchy based Roll-Ups uh pure Fork choice there's a number of them but the basic idea is you're letting the L1 choose your ordering for you you have this kind of PBS interaction at the layer one where that's how your block gets selected um it works but you lose value to the L1 in the simple implementation of it all the value would go to whoever is the layer one block producer something that's a good thing that is an argument that like for example Justin has made in Bass Drop so that is a that is a desirable thing whereas I would point out that you don't actually lose all of the value to the layer one because you you can create kind of systems where um the layer 1 sequencer has to burn some amount of tokens so very similar to kind of an erp1559 mechanism yes you can um there are still ways to get value back to your rollup it is trickier to do um but you can you can do it um but yeah in the simple implementation at least that is what it would look like um and for certain layers that is not necessarily something yeah it also looks very different depending on what your layer one is whether it's something like Celestia whether it's something like ethereum do you have a smart contract that's arbitrating this kind of thing it does start to look different across different data layers um and in particular when people were starting to talk about solving Roll-Ups on bitcoin where they were very against it because you could try to send that value down and potentially Roll-Ups don't want to um for whatever reason whether that be regulatory or otherwise that they purposely don't want a token Etc in which case it is forcibly going to go to the L1 if you don't Implement that mechanism but but yes it is not a strict option that it has to lose all of the value to the layer one that is a that is a good point to be clear um the other main thing with this that I think is the bigger problem quite frankly is just the ux of it of okay you're back to the layer one now if you get layer one block times there's no really practical effective way um to implement faster block times that's good if you're doing these any forms of these later one sequencing so that's where it comes in okay for these layer twos we Implement something else in addition to what the layer one gives us where we're always going to eventually get those layer one 100 guarantees at whatever the layer one block time is the the point of all these other mechanisms is can we get like 99 guarantees or whatever number in between those layer one block times because most users do not want to wait that long um is the reality of it so the simple option that you can do is some form of you know you don't even necessarily need to do consensus strictly because the layer one eventually provides you consensus you just do some form of leader selection um which could be you know you have basically tender mint like minus the consensus where it's just this kind of round robin style thing um and then you just inherit the layer one consensus there are problems with this in my mind when you don't have a consensus particularly stuff like liveness um you know you're not going to be able to increment the leader quicker than the layer one blocks you're not going to be able to give any soft good pre-conformations in this if there isn't any kind of consensus voting off on it so the reality is I think that most of them will Implement some form of consensus um whether that starts off as you know a proof of authority type of thing I think most of it kind of gravitates towards you have a consensus that looks pretty similar to a layer one you know whether that's tender mint hot stuff whatever some variation of that that probably gets implemented at most of these Layer Two seems like the simplest thing if I want if I if I was pressured as a Roll-Up whether that's regulatory pressure whatever else to decentralize my sequencer right now that is what I would be doing um quite frankly the tried and true tested things have implement the simple consensus set some form of PBS on top of that um the other idea that a lot of people are starting to get excited about right now is okay it's kind of hard it's kind of annoying for all the Roll-Ups to figure that out for themselves what if we just have one layer that just figures it out for all of us basically and that's that idea of shared sequencer where the layer one is a form of shared sequencer but for the reasons that I described earlier it's not very feature Rich you know you're going to get slow confirmations Etc so what if we make another shared sequencing a layer that is actually optimized to be a shared sequencing layer and then all of these Roll-Ups can just opt into this shared sequencer and say hey for all of these Roll-Ups on top of it we will adjust you as use you as our sequencer and then they can still give those pre fast pre-conformations it's nice and easy for the role so they don't have to worry about figuring this out for ourselves but it does come with a host of other complications which I imagine we'll get into as well yeah could we could we get into some of those complications because this is um it's a pretty complicated area and one that's definitely developing sort of in in real time um and you know from my understanding it you know when I hear people talk about shared sequencer like a shared sequencer Network it's you know something that's far off in the future so can you describe why that is what are some of the complications there and then one question that I that I always have listening to people talk about this is who do you envision these sequencers being you know from from one standpoint I could imagine validators sort of on layer ones kind of like the block demons or figments of the world saying hey what makes sense for me and my business is to go and sort of be a via sequencer on some of these um layer twos do you see them being totally independent network of sort of single sequencers or can you give us kind of an idea of who these sequencers might might end up being in practice and then yeah some of the the complications as far as just who the entities are um my strong guess is that they are very similar slash the same entities it's a very similar role yeah potentially at higher resource requirements since some of them will be running it a bit higher speed than for example layer one ethereum but probably not that different from a lot of other chains I I think it'll be quite similar from that perspective and then as far as yeah so what the shared sequences actually look like and what the difficulties are so the basic idea of them uh at least for most of them well I'll start with the simple case of you could have assured sequencer that is just you know it is a fully stateful normal sequencer that works the way that any proposer normally works where I'm fully executing all the transactions for all of these chains that can obviously only scale so far because I is one person and probably not going to be fully executing you know a thousand chains and if the goal is actually to stick a ton of Roll-Ups on top of this thing you probably need to get a little bit more creative of okay how do we scale this thing and um open it up to everyone and make it easy to deploy to so the main idea that um the two biggest shared sequencers have announced so far they have a very similar concept it's um espresso and Austria are the two that have announced recently there are others who are building as well um but the basic idea of what they're doing to try to scale this out to many Roll-Ups you know hey we want this future for a million Roll-Ups and we want to be able to provide the CC service is back to that point that I was describing earlier of while a sequencer today does both of those roles of we tell you this is the order of transactions and then they execute and they you know compute the state after that those are logically separate roles and so these shared sequencers completely strip those two parts out so these shared sequencers like espresso and Astro say we will order your interaction or order your transactions for all these Roll-Ups and say this is the order that we're going to include them in but they do not execute any of them so they have no notion and understanding of what these transactions actually are at all um so that route that removes the really difficult part of this because okay now I don't need to hold the state for these anymore I don't need to run the computation of executing these anymore it's very simple I'm just a dumb pipe that is saying they go through in this order if I if I can jump in here I I mean I thought about this a fair bit when this came out and to me it it really I mean it seems like such a like huge cop-out in a sense because you can claim all day long oh yeah my sequencer like my my proposals don't have to execute any transactions uh and so it's super scalable but guess what on ethereum layer one the proposers also don't have to execute any transactions right the uh they already commit to a block without knowing what's in it and um and the same will be true in these new shared sequencing layers right there is a party that still needs to execute all the transactions because they need to know uh the state change that every single transaction will cost because otherwise they couldn't compute the most efficient ordering and that's the block Builder right and so in a sense they say yeah the the sequencing layer is is going to be decentralized but so far they are not really presenting any uh any idea for how the block building layout can be decentralized right because when you have a shared sequencing layer maybe there's 100 domains connected to it then effectively what you need is you need a super Builder right that that simulates State changes uh across hundreds of different domains and uh it'll just be insanely resource uh yeah like resource hungry and and centralizing and so um I think that's that's kind of the downside right of cross domain Mev and and of chat sequencing yes I definitely agree with you um it does make it very easy on the sequencing layer because you completely remove that you know you no longer need validators that need to re-execute all these things so yeah you can in theory have a very decentralized shared sequencer so but yes you are pushing that problem off um to another layer and that's why if you talk to the teams like espresso Astra they're like yes this does not work if you do not have someone sitting in front of the shared sequencing layer who is actually knowledgeable as to what these transactions are because otherwise yeah they're just including them in a random Dom ordering you know most of them probably won't even work you know it'll be incredibly inefficient ordering um for them to be good you do need some form of Builder to sit in front of them and is that going to be one gigantic super Builder who's centralized or is that going to be different Builders running for different domains and they are accepting bids for different domains um starts to get a little more complicated the more that they're accepting there um but in theory what you would obviously like to have is a decentralized block Builder that is sitting in front of them something along the lines of suave um such that yeah you don't need this gigantic centralized entity to sit in front of them because otherwise they are entirely reliant on that centralized entity to determine the ordering they're not going to be able to enforce complicated um things otherwise they do need that entity sitting in front of them maybe but to rely on you here uh so we we kind of talked about how shared sequencing allows for the extraction of cross domain Mev through this kind of notion of enforced cross-domain synchronicity um but um there are other forms as well to to kind of um get more efficient at the extraction of cross-domain and media right that don't necessarily rely on a shared sequencer um so what could you maybe walk us to what these alternatives are um for example depending on whether like for a chain that is not part of a shared sequencer or a chain that maybe doesn't even have the notion of proposal Builder separation I think the sort of two dominant models on the market would be or at least ideas that I know about maybe you're hinting at some third hidden idea that I don't know about possible um but uh so the the two models that I would know would be shared sequencing so providing some Atomic synchronicity between domains we've already talked about that the second is is that you may not be able to provide technical activity but you could provide economic ethnicity to users so another way of saying this is is that users could express their preference that I want you know transaction one included on domain a or something that happened on domain a and I want something to happen on domain B and I'm only willing to pay if both of these conditions are met and in effect by providing this economic activity you get uh the nice properties of technical ethnicity but you are Outsourcing the execution of that to specialized parties that can break that down and make it happen on on two different domains in the absence of some actual communication or shared sequencing layer between different domains um and in in that way you don't need any integration between these domains you don't need the domain to adopt a particular type of ordering model even epbs you just need sophisticated actors that can understand risk and are really good at executing across these different domains and you know those actors getting these these economically Atomic bids so is that what you're gesturing yeah so I think I I think it hints basically to the question whether oil change will end up being sequenced by another chain or whether there's any alternative to that world and um I I think the idea of shed sequencing is quite compelling but I'm personally also very interested maybe to hear how we can provide similar guarantees without uh without without kind of like just giving into that idea that everybody like outsources their Fortress will in that way yeah one thing I should probably clarify because I realized that it is a bit complicated and I didn't talk on exactly the guarantee that a shared sequencer gives you um so following from that example that Robert gave you um so say someone like you express a preference to Suave of hey I will only pay if I get my transaction you know say I'm doing an atomic Arbitrage I only want you know the leg on roll up a to execute if you know the leg on roll-up B also executes um so a Suave executor can try to fulfill that preference for you and you know bid on both of those um so what they can guarantee you is what the state will be if I execute these things because they're stateful and they're knowledgeable of like what the result will be so they understand that what they can't guarantee is to your point of will both of these chains include these atomically in these block Heights um and so that is the part that a shared sequencer can give you is that kind of last leg of cutting out that last risk of it can't tell you what the result of executing these things is but it can tell you that I will include these two transactions at these two block Heights and then the Builder is what guarantees that other part of if they are included at these parts this is the result of what they will be um so it is cutting out that like last bit of risk it is unclear how useful that is to be to be quite Frank um I don't think that's honestly a selling point for Roll-Ups to opt into it at the very least of we get better assurances around cross domain Mev I think that the selling point if shared sequences are going to be successful it is the laziness of plugging into them and potentially they offer better Network effects I don't think that you're going to see Roll-Ups opting into it because we can probably extract better cross domain Mev more efficiently and return more value to our role like I don't think that's a strong selling point for them quite frankly um the one other thing I would say as far as how to get crosstalk chain atomicity it's a very different approach it's also not live but it's what anoma has been looking at with typhen where you can have what are called Camaro chains pop up which are effectively on demand kind of side chains where if you have validate or overlap between different chains that are running typhen consensus they can make those multi-chain atomic commits kind of on demand making those atomicity guarantees but it's it's a very very different approach and like you need to be using Typhon to do that it's like a sort of analogous what's going on in the cosmos world right now right yeah typhons are a replacement for tendermen effectively is what it is um it's a kind of next iteration of that um there are other changes as part of it as well um but that that is one of the major changes that would be applicable here is if you have validator overlap between different chains that are running Typhon which in practice is the case that validators tend to be overlapping between different chains um they can make multi-chain commitments so you get a we you get a weaker economic guarantee of you know whoever the validators overlapping are able to make this guarantee for you but it is a way a very different way of trying to provide some kind of multi-chain atomicity guarantees I think I I want to come back to the question you asked hatsu which I thought was a very interesting um prompt of uh will all chains be sequenced by another chain in the future or if there's some alternative and I'm like kind of musing on it as we talk here and my intuition is that that you can't get away from having your chain sequencing be influenced by another chain um and it's just degrees of how much you sort of want to submit to this or be hostily taken over by external forces in the market to be honest um so like at the limit if you want to do first come first serve and you have low uh low low block fees what you're going to see is a market for spam come up in the world so some change somewhere or some sort of you know abstraction that allows the user to say hey uh spam my contract as hard as possible because I want I have this economic preference you know I want um to land this liquidation or something like that and this to me is kind of a hot style auction that's taking over what should be a first come first serve model and I don't see how you prevent that from happening um the alternative would be something like a market for transaction ordering on top of first come first serve or you're paying sequencers that are supposed to be you know honestly reporting the um uh when they receive transactions locally you know instead to dishonestly report those uh because they're getting paid to do so so I don't see how you can prevent these kind of out-of-band payments and that would lead me to the conclusion that uh your all chains are going to be influenced by the ordering uh of another chain when you say oil chains are influenced by the ordering I think um this is even true today right because all that like the the biggest block builders on ethereum are basically today those um that have the best connection to binance right who are best at extracting kind of sex Stacks Arbitrage and then that shows the extent to which the ordering of one domain is really contingent on privilege on another domain that is really important systemically right and so even though ethereum has a decentralized proposal set it has PBS it's the like it has this ginormous centralization spillover from binance and that's why it's so important that actually more and more trading volume moves to these chains that do not have this kind of um what like ordering privilege that binance has I think it's even stronger than that right it's uh that it's so important that more and more liquidity in trading happens on actually decentralized domains rather than just moving onto crypto rails right because you can imagine binance role approach looks exactly like Finance it's an executive same geographic location except it's on a rollout and I don't think it would have a substantial difference today if it's not actually properly decentralized so I think at this point it makes sense to build a bridge to swath so um Robert what do you think so we talked a lot about um we talked a lot about kind of a word um where there are now all of a sudden the execution of the of transactions is spread across many different domains right so we have all of these roll ups we have Layer Two is probably even going to have a lot of layer threes you have shared sequences so how do you see the role of suave in that word um how how do you think kind of what is the the starting point for users and how does like a transaction kind of track through this new and much more complicated domain very good pump and there's a lot there to unpack casu um I think from a starting point I'm making the assumption that you need some notion of a builder on all these different domains because people will have complicated preferences on ordering and other types of you know actions like pre-commits that they want so you need some Builder that's like premise one premise two it needs to be decentralized and we can talk about why that is if you're interested um and premise three in order for it to be decentralized you need some notion of privacy and some ability for parties to make commitments to each other to facilitate collaboration among untrusted actors and so what I see Suave as is this platform for parties in the Mev supply chain to make commitments and to communicate and manage their privacy between each other to provide ordering preferences not just to ethereum but all of these different domains l3s the l2s alts l1s maybe even centralized exchanges at some point in the future so that's one part of of your question you asked me like about a user's journey I think um and the the way that that would work would be a user needs to have some funds on Suave which is a separate domain so they would Bridge funds to to that domain um and they interact with these specialized contracts that allow them to express their preferences over another domain's ordering or another main State you may have some preference like hey I want Mike to come back to the an earlier example like I want this transaction included in domain a and another transaction included in domain B and I'm only willing to pay if both of these things are included at the same time so a user creates a predominantly a signature so not actually a transaction but they create a signature that expresses this preference and passes it to the Suave executor marketplace where then executors can use the privacy and commitment you know abstractions within swab to Cloud right on this and make sure that the user's preferences get executed and only after that economic activity across the main preference is executed can parties um you know claim the reward that the user has placed on that records so that's a long answer on how I think about Suave and its role Within These different places in sort of a simple example of how a user would interact with it and what's going on in the back end of the executives hey guys quick break from the show here I want you to imagine something for me imagine swapping two stable coins on chain paying zero dollars in gas and instead getting a rebate of two thousand dollars this is something that's actually happened on chain to understand how I want to introduce and thank the season sponsor Rook zooming out for a second the current state of affairs at Mev is billions of dollars so far have been extracted from users Pockets using Mev Rook is coming in and saying enough is enough blockchain should drive value to their users and the applications they use it is time to leave the hobbyist era behind us if we want to move forward we want to get this right that's why Rook has built a custom blockchain settlement Network and it's one that gives you full control over the entire transaction life cycle today you can connect to an open source rough node The Rook protocol will automatically match bundle and auction your orders and transactions in seconds with zero gas overhead also any Mev that's discoverable along the way will be returned to you the user created as a collaboration between the industry top mechanism designers and Mev Engineers Rook was built from the ground up to be scalable safe and programmable you can get your own mempool choose searches and Builders and link your mempool with others to discover even more Mev you can Define how the Meb is shared and delivered as well and we'll basically process anything from transactions to meta transactions and more this is the way that blockchains basically should have been from day one so if you're a user listening to this here's what I want you to do I want you to go to your wallets go to your favorite app your node provider and say Hey I want you to be working with these guys rock I want the Mev that I create to be redistributed back to me if you're a developer and you want to stay ahead of the game best way to do that is to follow them on Twitter they are at Rook or even better yet slide into their DMS they are lighting responsive they'll get you set up today and if you do slide into those DMS as always please tell them that I sent you I was actually just gonna say um you know I've in all the the research that we did sort of before this season Suave was the single most uh topic that people wanted to hear about uh so Robert have a sort of a bunch of questions for you um and I don't want to get like too deep in the weeds too too quickly but I'm very curious about how standardizing preferences is going to work in practice so like kind of a question that I had and this was actually you know sort of flagged to me um as something that Searchers are pretty interested in is let's say you have two different blockchains with different uh block times and like let's say to use your example right you want to atomically make it so that if you place transaction on blockchain a like ethereum with a 12 second uh block time and then um let's say like polygon with a two second blockchain and there's a block time there's an Arbitrage that you want to place let's say this Arbitrage kind of pops up one second into polygon and three seconds into ethereum and you lock in the poly click on leg of that Arbitrage but then there's still an enormous amount of time right nine seconds in the ethereum block time so how is suave going to make it so that you can close both legs of that Arbitrage for instance so Suave isn't prescriptive on how exactly cross remaining maybe is executed on so we sort of anticipated a bunch of different approaches in the market that were going to be taking like typhoon like shirt sequencing like other things and we are observing and seeing how these different execution models are happening but we don't we're not prescriptive on on one way or another that's the starting point and different different users will have different levels of risk that they're willing to take so some users uh will be willing to take the risk of hey maybe one leg will will fail and the other uh will not and I'm willing to you know execute one part of the trade in another um on the other other side of this Market there may be executors that are willing to um you know take that risk and uh they they may charge some payment if like one leg is successful but but not the other um and uh some users may be willing only to to pay uh or to make their trades if both sides of their trade are executed and the sort of abstraction of suave supports both of these different types of models where it's all or nothing even with your trade or um only one side of your trade being executed the complexity with that is is if you want all or nothing with both of your trades being executed um if you want it to work in in this way then I think the assets actually need to be settled on like swap the domain itself instead of on polygon or arbitrum and that may be unacceptable to some users but this is a possibility at least and Suave is is trying to support all these different potential models of whose who is taking on what risk how much they're paying for it and what sort of execution is happening in in the background whether that's typhoon whether that's short sequencing whether that's you know a market maker that's really good at evaluating risk on many different domains so did that answer your question yeah it did yeah appreciate it yeah so the way I think we think about Suave internally I think is definitely moist the demand side for these cross-domain transactions and then kind of expose a lot of tools that allow for a supply side also to emerge right and these definitely include the shared sequences that John was talking about at length earlier but also any other form um and they they kind of get easier to build and integrate because Suave provides kind of the the tools for like uh trust this collaboration on private data basically and what I would say to is that by aggregating this demand side by creating to your point uh Michael standards for how this sort of bid or value that users are willing to pay for cross domain atomicity by exposing that to the world you then provide incentives for for proposers to um you know pursue across the main ethnicity Solutions like typhoon like shared sequencing because they see hey you know there is all this value that I can that I can get as a proposer if I integrate you know solutions that make it less risky for users to execute on these types of preferences so in that way it creates a market that I think incentivizes the exploration of more cost domain Solutions excellent I just I have like kind of a continuing to set up questions here but I I really like that idea of kind of trying to approach things from the demand side I think many arguments especially investing arguments in crypto tend to be kind of focused on the supply side so I love that approach what's your sort of strategy from the swap perspective of aggregating that demand side I think but that might be a great um time to talk about the auto flow option and how it relates to swap because uh so Mike uh one way that we've been thinking about aggregating the demand is definitely by kind of starting out um at the next set of features that uh actually the order Flow side of the market wants so what we're seeing on ether one in particular uh is the rise of what we call order flow auction and in case your users don't know what this is order flow auctions is this notion that you can send a transaction to an auction and that auction will auction off the right to execute a transaction behind yours usually and instead of the block Builder or the proposer getting paid it is the user who sent that transaction getting paid within this auction so it's a way for users to internalize the med that they create and get better execution so an option for order quote and we think this is super interesting as a way to live up to one of flashpot's commitments of redistributing Mev and we saw that there was a great amount of demand in the short term for this um I think you need to have order for auctions as a starting point but you also need these to to be decentralized so I don't think it really matters what you're doing at the Block Builder level or the proposal level and how decentralized those are if the dominant way that users are interacting with the chain is through you know a single centralized water flow order flow auction in one endpoint to the chain basically and so what we've been working on at flashbots for some time is how do you create an order flow auction that you can decentralize that is permissionless for any Searcher in the world to participate in and the follow-up question that we're starting to work on now is how do you take the outputs of that order flow auction bundles that include users transactions with Searchers as well and have those be used by any block builder in the universe because we don't want to create you know a world where only trusted block Builders can get the outputs of these orderful options um so these are really taking what uh we're working on with Suave of these Primitives of how do you have parties commit to each other in the MAV supply chain how do you have privacy and pulling them forward and anchoring them in something that we see that has market demand today in order flow auctions so we can ensure that these this critical infrastructure is decentralized yeah I I suppose my my next question to you there is can you just like I I have a pretty clear and actually order flow auctions and and the ride the increasing prevalence of them is definitely something hatsu and I are super interested in exploring I think I've got a pretty good mental model for what a centralized order flow auction might look like um but I'm having a little bit more trouble sort of reaching in my mind for what a decentralized order flow auction might look like so can you kind of describe some of the mechanism design that you guys are playing with at Swap and what would that actually look like in practice Yeah so I would Point your read your listeners the readers uh to read something that I wrote um and we wrote at the fleshbot scene called Mev shared uh and it's on the flashbots form so collective.flybots.net it details our design for an order flow auction which has privacy at the core and is permissions for any Searcher in the world to participate in and the the way that it does that is through through this notion of privacy so normally a user in a Searcher are going to have a hard time collaborating because if the user sends the transaction to a Searcher in clear text the Searcher can just take that front run the user extract all the MV and run off with it there's really you know nothing that guarantees the user that they get Mev paid back and the user has has no no bargaining power as well and there's no guarantee that they won't get front run either so Meb share gets gets around this and it creates a permissionless market where any user can interact with any Searcher through the notion of programmable privacy where instead of sharing transactions into clear text with Searchers we selectively share information about those transactions with Searchers who can use that information to probabilistically extract nud so instead of sharing your unit swap D2 trade or sushi swap trade trade details you could only share for example the pool that you're trading on and a Searcher could see hey this user is trading ethusdc I don't know what direction I don't know how much but if the price of ethiocc on June 72 moves to this amount then you know I'm willing to buy and it moves the other direction then I'm willing to sell and still pay some amount for this uh so the trick here is to share just enough information that you can optimize for Mev but not too much for the user gets worse outcomes um but by not sharing the full transaction you enable permissionless searching on on this uh the other thing that I think is important here is this notion of commitments so you need some way for the user to get paid for the med that they're creating and we have something we call a validity condition which is passed on with the end users transaction that requires that the user gets paid some eth in order for the transaction to be executed I'm sort of coming around to the decentralized uh a bit of this but these two things privacy and commitments are what we think um uh enables mub share to work and redistribute me back to users and we're designing this in such a way that you're not relying on any trusted set of parties in order for the system to work or at least not in in the limit um so and in the future we expect Mev share to be run just by a distributed set of nodes within a decentralized block building network instead of a centralized entity like flashbots itself and we think that selective data sharing is an API that can be run within this this decentralized network as well as the notion of kind of these conditions of validity that are added to users transactions to ensure that they're getting feedback that's a long-winded answer saying um uh you know we think privacy commitments are super important to the MAV supply chain enabling parties to work together and these are going to be features that are decentralized block building Network and Suave offer and they're kind of pulled forward into a centralized World in NV share our design for an order flow auction yeah thanks for epidemics an enormous amount of sense and yeah we will link um we'll link to the Envy share article that that you just referenced there um I I'd like to uh for for listeners kind of give people a little bit more of a concrete sense of what Suave is um now I know there are sort of three components to it Robert there's the preference environment there's the execution uh sort of market and then there's the decentralized uh sort of Builder I also you know know that swap is kind of its own chain and I almost think of it as kind of an alternative mempool for you know being able to express um these sorts of preferences and they actually sort of get get routed so can you kind of just describe again almost one less of like a high level and more of a concrete sense just what exactly Suave is and what's sort of the timeline for um development as well yeah so Suave um like you said R is these three things of a preference environment and execution Market in a decentralized block Builder and it is also so a chain so these are the are the same thing and the way that they relate is that the chain is the place where you bring information from other domains and you expose it through oracles that users can condition their preferences on so the chain is how users are able to express their preferences uh in in the chain plus its messaging layer or its mempool makes up the environment for these preferences and when we were thinking of how to communicate this week we came to preference environment as this notion of one single place for all these preferences could be aggregated and accessed together because there are economies of scale of having these things in one environment uh because you can optimize for Med more the more preferences that you have in some place um so that's the relationship between the chain and the preference environment uh and and how that that works um we also wanted to delineate the execution Market um because it's a super important part of swap works it's uh at the core of it is this notion of a competitive Marketplace of specialized actors that can take these preferences and execute on them regardless of whether it's ethereum whether it is uh you know pulling on about arbitrum Solana you know a cosmos chain Etc but it's very important to us that you have the specialized Marketplace and it provides a lot of interesting benefits to users this is again separate from the decentralized Block building Network because not all domains will have some notion of block building and PBS and really the decentralized block building network is just a specialized instance of an Executor within executive Marketplace but it is kind of logically separate in some ways I hope that makes it a little bit more concrete um you you can think of uh Suave and how to relate all these things is suave being a chain where you express your preferences on the back end you have these specialized executors that are competing on them in the decentralized block building network is just one example of that so that help concretize it a little bit Michael are you looking for for something else and I won't be offended if you are oh John is I see you on YouTube yeah I I have some questions on this um so I I just wanted to clarify on some stuff so I you're saying like as a user you express preferences via like the actual swap chain itself you have funds there's a contract to express those bids so do you need to be going through that process of uh using suavechain to express a preference if I just want to like send my order through the order flow auction that will eventually like plug into swab on the front end is that the way that you have to communicate to it I think if you have particular preferences that you want to express like you know in this order flow auction I only want this order to be executed if I am paid one eth as an example then you'll probably need to condition like a special swag preference that includes those parameters on it I think um if you're just a regular user and you want to use Suave it'll be as simple for you as you know rpc.flexpots.net and throw it at the RPC and the magic happens on the back end for you um but uh so did that answer your question yeah um another follow-up kind of question I had on that was so as far as expressing these preferences of like let's say there's some Arbitrage that I see like I want certain transactions to close this that I see on another chain um if that going through that process requires me to express a preference on Suave chain to communicate like this is what I want done uh that would imply that you're like you're bounded by the Suave chain block times of like if another chain that I want Express a preference for has a really fast block time and like maybe that opportunity is going to disappear um that would mean that Suave chain like needs a fast block time to be able to express that preference in the first place um so does that kind of pressure just lead to back to the point of like you described earlier of like the pressures of low block times does that like incentivize Suave chain to have super super low block times um and then kind of like have that race to centralization there I think it is um a little bit different on Swap chain for what it's worth because we're really only uh posting data about other chains and settling payments um so it's like I think in some ways less important than other domains um that we have uh you know so I'll just point that out um but uh you raise a really good point and I do think that swasblock times are going to be have to be faster and should be a little bit faster than other domains on the other hand I think there are ways to craft your preferences up front that don't require you to communicate those in real time so as an example uh you know you could offer to an Executor on a domain that's really fast hey if you get a if you spam my contract and it emits a log that says success I'm willing to pay you some amount and that gives an incentive up front for an Executor to be spamming your contract at the precise moment where it needs to be without you needing to communicate that you know at the moment that it needs to it'll just Spam your contract at a priority um I think you could probably do similar things with latency and in that way there's like upfront ways to communicate your preferences to Prime executors to be working on Lower block time domains Alex and John I would also point out that um so you can think of swap almost as as it's like a board where basically anyone can submit their transaction requests or transaction execution requests and once you made such a request and it's floating in the Suave Memphis then the request is basically out there and anyone who goes and executes it they can then come and claim their payment later on after the transaction was executed basically they need to execute it and then an oracle reports the state change from the domain and then the payment cannot be unlocked on the target chain so that means that the settlement is not bound to the block time of the target chain the settlement can basically happen at any time later and so that's why in my opinion at least swap block times do not need to be lower than participating chains um because it's basically okay for executors to claim their payment with a little bit of delay because they know the payment is trustless if they have the transaction they can get it included anytime later and um then they're going to get their payment so the yeah so to to be clear like the the settlement after the fact isn't the part that like I was kind of getting at there because yeah that can kind of happen whenever um it's more of that kind of initial step of if it requires a transaction on Suave Suave chain to communicate that preference in the first place then if that block time is longer than the domain that I want to express that preference for I won't be able to express the preference in time um so that's where I was wondering like where that's Association pressure I believe you can communicate audio and correct me if I'm wrong robot I believe you can communicate all your preferences um just through kind of these pre-signed transactions they do not actually need to be mined um in soft chain in order to be commitments yeah that that does work uh um you may want to we do have a notion of like a special transaction in Suave that will carry your your signed commitments if you want to throw it in the swap mempool um which is what you would want if you want the maximum number of executors to access your your transaction if you want it to be censorship resistant um if you want to skip all of that and really save on latency and it's really important for you you could communicate it directly with executors that is right just with this um signature model that we have been talking about I do think you're like touching on something John which you can't ever really get around um just because of the laws of physics like there will be some cost of nmv which is not possible to extract because of latency um and there is some kind of pressure like there is today uh from latency and crossover and extraction on domains to centralize and have faster block times too I think that's kind of inherent to cross domain and media I don't know that there's anything that we can about that but it is one of the reasons why it is important for us to you know as a community align on but having real decentralization and as a part of that I think probably slightly longer block times than we do today in order to reduce this pressure of centralization from across tomato maybe in the long run a quick follow-up question can you elaborate a bit more on why it is exactly that so like that you need a chain in certain cases to express these preferences um and to settle them after the fact as opposed to just having this kind of more peer-to-peer protocol layer part of software like I can just communicate my intent um and you know if you execute it on the other chain like you just get paid on that chain uh like why do we need to go through this process of like communicating that through swab and like having this Oracle problem to go back to settle that payment after the fact of like why can't we have this more Global peer-to-peer layer and then just like settle on those change themselves and like I'll give you a payment on that chain if you get my thing done uh it's a good question John uh the tldr of it as I understand and quickly strongest like why do you need a chain right why do you need a new blockchain for this thing um and there's a few reasons so in in order to be economically efficient we need some way of transmitting preferences we think that is both um you know as uh as low cost as possible and dos resistance um one way to be dos resistant is to force attackers to pay a cost uh if they if there is Spam within the network um and with a blockchain we can impose a fee during periods of network congestion um by including preferences on chain uh and this would deter attackers um but it would allow we have designed a mechanism within swab that we think allows as low cost as possible expression of preferences you know when there are not periods of congestion and that requires you to change the actual chain itself add a new type of transaction and you know I may be wrong and Tim Baco can yell at me if I'm not but I don't think this is something we could get through a CD today you know if you're in the core development community so practically it allows us to introduce new mechanisms that we think are more economically efficient to express preferences while still having the property being dos resistant and a standalone peer-to-peer Network that is global wouldn't have the same mechanism at least I haven't seen any design for it thus far um the the second more General thing other than this one specific mechanism for how you achieve low cost but dos resistant expression of preferences is the the notion that by owning the the sort of full stack by being able to change things on the full stack we can uh it's much more flexible and we can iterate more fast on many different design parameters and make tailored optimizations that again would be very difficult to retrofit on an existing domain and which you may not want on an existing domain as well um so you know example of this would be it probably makes sense for swap chain to have a faster block time than ethereum L1 this is just a non-starter auditor ml1 because you know it's optimizing for slightly different things right but we can offer that a a at Swap chain another example is we thought of making swap chain a roll-up that is using sort of the derivation function of the roll-off in order to get trustless access to L1 data and I'll roll up data so as to not need oracles that have any kind of trust assumptions to it or at least use the same trust assumptions as L1 these are examples of optimizations um you know one final one I'll throw out is we've thought about replacing the existing member within Gap with a different mempool that's optimized for even faster communication so these kind of optimizations that we think will make Suave sort of a better domain and specific for Med um did that answer your question John yeah sounds great the last thing that I'd point out maybe is neutrality so I think um a swap kind of moves Beyond ethereal maybe in a couple years um I think that's also the kind of kind of the question like is it fair that like all of these preferences get settled on on an actual like settlement layer or should this kind of be like its own Standalone neutral layer that actually has like ownership and participation and so on um that's crafted in like an entirely bottom-up way uh from these different domains and I think that's something that we're thinking about because um we're part of getting adoption for a system like that is basically designing for political neutrality um and maybe the kind of the existing ownership uh of ethereum may not kind of be optimized in such a way that it kind of gets fired from Cosmos gets fine from Solana it gets fine from these centralized exchanges and so on yeah that makes an enormous amount of sense um guys you've already been super generous with your time and um I know you know we could probably keep going for another uh two hours but um maybe we could sort of transition to to wind down so we've covered an enormous amount of ground today and frankly I think everything that Austin and I were hoping to chat with both of you about we've already talked about but if you want to just leave listeners with one idea or sort of bookend the conversation with either kind of a hope for how Mev might play out on these sort of Roll-Ups or maybe something to avoid or just anything that you want listeners to kind of take away from the conversation maybe if we could just end with that sure um so I'm definitely very hopeful that it doesn't start to just take years to decentralize these sequencers um I think there's going to be meaningful pressure to probably get that done in the nearer term and when we do that to hopefully do that in a way that isn't just going to incentivize all of the worst centralization pressures and kind of been back with the exact same guarantees whether that's you know super high latency first come first serve tight Roll-Ups um because if that's what we kind of gravitate towards with them then I don't really know how much that achieved so hopefully building these systems in a thoughtful way such that like we actually retain um meaningful guarantees and decentralization across them I think if we want to decentralize uh these chains and personally I do we need to decentralize the energy supply chain and that's what we're working on at flashbots we think to do that you need some ability for parties that don't trust each other to make commitments to each other and to manage their privacy and this is what we're trying to do with nav share it's an early experimentation for those things within the use case of an order flow auction if you're interested in this and interested in ensuring that Med doesn't become a centralizing Force for ethereum and every other domain within crypto please come work with us we are super interested in collaborating with with others and we're going to be working on a bunch of interesting problems in the future like how to share order flow and how to make the most efficient order flow auction possible so if you care about decentralizing Med decentralizing crypto please come work with us check out any of you share and let us know if you want to collaborate excellent thanks guys um this has been a fascinating conversation thank you both so much for your for your time cheers thanks for taking the time guys all right I'll see you that was a great episode big payoff for listeners I think that was a lot to digest from John and Robert yeah I I thought this episode was great I I had this mental map in my head of other things that I wanted those guys to cover and um we didn't even have to steer very much at all right it just felt like they were jumping from topic to topic and getting to all of the important points um yeah so I really like this one yeah they both came out of the gate with a lot of energy and for listeners we actually recorded this at 8am on a Monday morning so that was definitely tip top performance uh from the two of them one one idea that I thought was very interesting haasu that I wanted to get you to unpack the implications of a little more is that hypothetical that you posed about every chain being destined to be influenced by the sequencing of another chain Robert had a very interesting answer to that but could you kind of I'm still kind of trying to digest what the implications are of that could you unpack that concept A Little More yeah so the reason that I I asked this was that there is a lot of value to having cross domain synchronicity because it basically allows for better bridging but it also allows for the the more economically efficient capturing of cross domain Meb and so I liked how John was actually also going into some of the drawbacks of that right so one is definitely the value capture mechanism is is that's direct and it's it's also like it's entirely not figured out how that would work um also I think the like loss of sovereignty is also like worth mentioning and so I think in the cosmos ecosystem today we see um a push towards sort of actual like applications taking control of their ordering like through becoming um blockchains right and then like ABC ABCI plus and so on and um I think that the like shed sequencing is on the far other end of that Spectrum where you actually give up like all your sovereignty about your sequencing it's not even like you are on one chain with other applications and you share kind of the same sequencing rules with them like you would on ethereum today no it's actually like you are on chain with all of the other chains and like all of these chains actually share the same rules and so that's one thing that I guess we didn't say about this chat sequencing networks which is really that like they all need to opt into the exact same sequencing rules in order for that to work right um and uh yeah so I I think that was worth pointing out um and um yeah so I guess to the question that that I have is really like how big is this economic pool going to be right so how big is cross domain Mev going to be and as a result kind of this this idea of all chains Outsourcing uh they're sequencing to to the same chain um and um I mean I I think it in a sense it's like a really scary idea right because the more uh the more chains are going to be sequenced by the same sequence I mean even if that sequencer maybe doesn't execute the transaction then we as we discussed kind of there are block Builders who will need to do that and so um that's why cross domain Mev is really such a big centralizing effect on uh on kind of the Builder market right because it really drives up the resource requirements to be a builder um not just in terms of executing the transactions at the software level also in terms of inventory management across these different domains risk taking uh balance sheet size and so on um it kind of really um yeah it really creates this notion that that kind of someone who wants to be good at Cross domain or someone who wants to be good at block building must also be good at kind of cross domain Arbitrage Etc on these different domains and I think that's a really scary idea well so when you when you talk about cross domain Meb as an idea when do you think do you think that ever shifts from being primarily sex to Dex Arbitrage because I remember getting the first time that I got very excited about this I'm sure for you this was years before but in listening to the atom 2.0 white paper you know this idea of kind of the The Interchange scheduler I thought to myself man that's a very cool very compelling value proposition but when I was doing a little bit of my research in in this season actually I found when you don't you know ignoring sex to Dex Arbitrage which is a great profit Center for a bunch of these Builders one of the problems when it comes to cross domain and kind of arbitraging price differences that you might send two decentralized exchanges there's a reason it hasn't necessarily been the big honey pot that a lot of people thought it was going to be which is one that complexity around different block times that I was asking about with Suave but then economically the spreads of decentralized exchanges are much wider than the than the spreads on on a centralized exchange so when you think about how juicy an ARB needs to be you know you need to basically be able to pay for transaction costs on both decentralized exchanges and The Wider those spreads are the less attractive the the Arbitrage is going to be so I'm just curious how you think about cross domain Mev evolving over time do you think it's this enormous very sexy sort of part of potential profits is it largely just going to be our being the price of binance you know which is kind of what it is today which is where price Discovery happens how do you think about the evolution of cross domain a movie yeah I should caveat that by saying that I'm really not not the cross domain me the expert at flashbots are really kind of in the Mev space in general but I mean I think you touched on some very interesting points so definitely binance is kind of the domain against which like most Arbitrage happens today and so there is a lot of cross domain muv it's just against a centralized domain right and so right I guess the question then becomes well how does that change like first of all what does it mean for crypto and I think it means today that uh many of the top block Builders are engaging in in kind of Finance ethereum Arbitrage um because that that's basically how they can best monetize their um their block Builder status right um how does that how is it and so this has this like spillover effect the centralization spillover effect almost from from binance to ethereum and so how does that change I think I think basically price Discovery has to shift from binance to some some decentralized domains whether that's an application on ethereum or on a layer 2 on layer 3 or whatever that's like its own totally independent app chain but I think once another venue becomes the focal point for trading and liquidity then all of a sudden I think up charging against the domain becomes much more important yeah yeah very well said maybe there's another thing that that we can kind of point out so there are ways that that basically cross domain Arbitrage can um can evolve and can kind of become a more prominent even without binance becoming less prominent and I think if you so if you as a search Imagine like you're a Searcher on ethereum today and so there's a lot of Arbitrage basically where you don't have any way really to close this without taking balance sheet risk right and so maybe you don't engage in these at all and so um maybe there's very little competition for them because kind of the like the binance lack might be very centralized right of the trade and so now all of a sudden there is this shared sequencer or this way to do kind of Express uh these these cross domain preferences maybe let it be between arbitrary and ethereum itself Finance right and so uh now as a search and maybe I can just participate in that opportunity whereas previously this Market was close to me and it doesn't matter that I'm less efficient at closing this Arbitrage opportunity than the Searcher who does kind of the like ethereum binance arbitrum lag right or like if you're in binance finance what what matters to me is that I can like it is very cheap now to pursue this opportunity and so I'm end up my and and kind of the party that ends up getting the opportunity is not the one who it can extract the most opportunity from it but we actually can pay the block Builder the most or can pay the validator the most right and so I think what we'd see is basically the value capture for validators from these opportunities will go up because there would be more competition so ultimately kind of the winning trade might still be done by whoever controls the binance the binance lack of the trade but the opportunity set at large would become much more competitive um and kind of the the margins will get compressed and more of the revenue would go to uh divided us on these respective domains that there would be one guess yeah I think you might be absolutely right about that one question that I had for you as well Austin I didn't want to get too into the weeds technically here but you know you often hear I'm sure folks if you've tried to learn about this stuff on your own time you know there are a lot of these sort of uh you know like uh new actors right especially that get introduced with the implementation of things like swap like executors right um there's also in Mev share there's the Matchmaker and they're all these kind of new entities and a question that I often try to ask myself as I close my eyes I try to imagine who we're actually doing these sorts of actions and you know when I when I kind of think about this I think from a business standpoint it makes sense for the kind of consensus infrastructure providers at like main chain to sort of move up the stack so that's why I asked that question about validators like if valid people who are validating ethereum if that were me I would have the competence of okay securing a chain at the main chain level then I would try to move up to roll ups and when I think about executors and what I was hearing Robert describe I think that actually sounds a lot like Searchers right am I am I right or wrong in describing that or how do you think the activity migrates up from Main chain to this roll-up environment yeah so first of all I'd say I think there is a reason why I think especially like more technically or like architectural like lee-minded folks they tend to introduce a new role I think it's because of the logical separation so right anything that doesn't have to be done by the same role they basically say this is a new role even though in the beginning it might be like done by the same rule so in the same part yeah in flashpoints like we are going to run a Matchmaker and we are going to run a block Builder right even though at the upgrade that can also be a Matchmaker so especially uh with regards to the executors and Suave I acknowledge it's like as a term or like a concept it's a little bit confusing because it really makes you think this is going to be a new role whereas it's really it's much more of an umbrella term for a bunch of roles that already exist so especially with regards to Suave validators so that is not actually a new role but that is really uh more of an umbrella term for different parties that already exist so um as far as Executives anyone who can get your transaction in at the Target domain and so if you think about who who would be kind of the best party to to do that right because the executor is also permissionless so it's really about self-selection like who will step up to fill that role of the executor in in kind of in equilibrium so we know at the like farest end we kind of have the value data because they uh they have kind of the ultimate uh the ultimate Monopoly over transaction ordering right but they also might Outsource this to a block Builder and the block Builder themselves they might run an Mev auction where they Outsource kind of uh the ordering to search us right um but then you may even have kind of shared sequences right so they do the sequencing for different domains and so they might be an executor but then you might have chains maybe where there isn't even like a builder and so then the threats are kind of might just go straight to the blockchain in order to get a particular transaction mind so for example Robert was saying what if this what what if there's no PBS on a chain and it just has has kind of first come first serve where what's going to happen is that we're kind of there's no reason why like a kind of latency origin as a service shouldn't emerge because if there's somebody who has this preferential access to latency on that chain what they end up doing is they end up monetizing that in some way whether it's in a proprietary way but they can also Outsource that and so in threadfy I think you saw that uh already a couple times so for example there was uh there's there are multiple privately owned um microwave Taiwan networks that are basically I think it's on the order of like two to three times as fast as kind of the regular internet the way that they sent kind of information packets across the globe and um these microwave Tower networks they are being used by all of the big trading firms and so that is kind of the exact same concept that you would expect um to emerge in in kind of a yeah more latency sensitive crypto system yeah it's you know the more I kind of dig into Suave it's it's just so impressive just in how audacious sort of the scope of the work is and I'm just very very curious to see how it all plays out and gets implemented in practice because yeah it's almost like every time I try to learn a little bit more about it there's this whole new rabbit hole of concerns that I wasn't necessarily thinking about uh so it's going to be phenomenal to watch you guys built that I think my last my last question to you on this is I again this is you know we're risking getting into some pretty technical spots here but that's what this whole episode was so I'll just sort of ask you you know when I when I sort of look at this idea of shared sequencers the mental model that I have again and I think Robert mentioned this during the episode it's actually borrowed a little bit from from Cosmos a bit and their kind of idea of interchange security and validators securing multiple different chains and my memory of of how that works in Cosmos is there's some kind of physical limit to how many chains one validator can actually validate and one of the questions that I didn't really want to get into but I'm very curious about is are those same limitations going to exist in shared sequencer networks in ethereum I would guess that they probably are and we talked about the hardware requirements being a little bit higher as well so I guess what I'm kind of trying to let me let me Steel Man something that I feel like is a non-charitable interpretation of how all this gonna is gonna work I have a feeling you're strongly going to push back and then tell me why I'm wrong all right with this sort of uncharitable interpretation but in the same way that I'm not sure in the same way that the U.S sometimes gets accused of we have very good labor practices over here in the U.S but don't look at how we actually Outsource the labor in kind of Eastern markets right so kind of like the Nike example of well we have really Sterling very upstanding set of Labor practices over here but really our sneakers get made over in Bangladesh where there's less good labor practices I think you could uncharitably make that argument with ethereum where we've limited what's going on on chain and ethereum at the main chain is this kind of very neutral settlement layer where you know anyone can be a tiny little validator but you've pushed some of the less desirable aspects of it just up the ladder to to roll ups and roll up to where all the execution and the users are going to interact and they have a lot of the problems that some of the l1s kind of get rightly rightly pushed back on right you've got centralized sequencers you've got a very strong sort of push towards latency because people want faster confirmation time so what's the reason why that's not necessarily the case and how is this shared sequencer Network going to solve some of these these problems oh man um I think I mean I think it's be like I think this is happening to a degree um that that definitely like ethereum kind of pushing these challenges of like making ethereum scale and providing a great user experience to Roll-Ups so I think that's by Design uh I think maybe like if you don't co-developers were wishing that maybe like some of the roll-up choices with regards to ux have been different right but I think it's kind of owed to the fact that while Roll-Ups are kind of non-custodial and they have this like censorship this this mechanism uh so you can always get your transaction mine through the layer one contract I think all of these kind of gave the teams working on these roll ups uh in almost like a I I don't want to say was a false sense of security but like the sense of security that they really had a lot more freedom kind of to make centralizing choices and and um uh operate or like innovate on kind of the the ux more so than maybe the decentralization roadmap and um I think the other point is just this is like almost like a result of kind of very intense competition between them right because the market prices just pushed all of them to launch um before having fraud proofs and and so on right before kind of being really decentralized or like before having decentralized sequences um and yeah so I I think I I really like have a hard time like blaming anyone for their choices if I'd been in the same position I'm sure that kind of I had fed the same pressure for Market forces and I think they're all like did what they could right and so I don't think it's it's anyone's fault I um and with regards to kind of what you asked what Cosmos I thought it was an interesting question I don't know the answer to it like the answer why kind of Cosmos like the inner chain security has the scaling limit right we should definitely ask that in our episode on Cosmos if I had to guess then it's maybe a mix of well like the like the cosmos they basically execute all of the transactions right so they don't have proposal Builder separation so that's one thing and the other thing is maybe uh kind of about like steak re uh uh hypothecation in the sense that maybe if they like restake quote-unquote like the cosmos and validator hub stake too many times then maybe the security for everyone starts going down after a while right uh because they they basically spread the security out over too many different host uh customer chains and so I could imagine maybe it's like a mix of these two or something like that and um uh yeah I don't think maybe I don't think necessarily that like chat sequences will have the same problem I think they will definitely have the problem of just a bit uh like to build a role in these networks is just going to be incredibly centralized um just because the like yeah the requirements of being a cross-chain builder are just so so much higher than being like a ethereum layer one Builder and um yeah frankly that's like that that that's why we have this like very audacious vision of decentralizing the Meb supply chain because yeah not just on the single domain but even like horizontally across several domains by providing different parties kind of the tools to collaborate in a trustless way um just so all of these roles don't have to be played by the same parties yeah well said and by the way I don't I can't say that I would make any decisions differently than the the layer two some ethereum would either although I would I don't know if you remember giving this quote but it stuck with me you said it in I think it was like an I pledge allegiance podcast a little while ago about people crypto the the intensical nature of crypto actually calling people who make short-term decisions and I actually was listening to you at the time because it was during a bull market and not agreeing with that quote and then frankly now you know with the benefit of a full year of bear market and watching how it's played out I actually do agree with you a little bit and I this is you know beyond the scope of this Mev podcast necessarily but I did I found myself wondering about that exactly when I was watching this arbitrum governance snafu play out and wondering to myself well do you really need that billion dollars to play around and kind of be fast and loose and match the polygon deals or is that actually not money that's particularly well allocated that way and if you had a longer term framework on it then I I don't know it's maybe beyond the scope of this Meb podcast but I do find myself wondering that quite a lot actually um all right let's give listeners a little bit of a tease for the the next episode here so this next episode uh is going to be an interview with two Searchers so this is kind of a fun call back to the original interview with a Searcher that you did it's got to be back in 2020 yeah 2020 or 2021 yeah yeah so this one this one will be fun because we'll really get into the nitty-gritty of what the the searching role kind of looks like today and some of the the PVP activities that go on for yeah I think it would be very interesting to also listen back to the original episode just to hear what changed in like the the two or three years that that lay between these interviews because I think um I mean so these two searches were interviewing I think they're really on top of their game and I think that give us a great overview over what it takes to be a Searcher today how much more sophisticated it is and how much more resource intensive I think those would be two takeaways that I'm expecting to get absolutely all right I'll see you as always this has been a fun one see you soon [Music] 