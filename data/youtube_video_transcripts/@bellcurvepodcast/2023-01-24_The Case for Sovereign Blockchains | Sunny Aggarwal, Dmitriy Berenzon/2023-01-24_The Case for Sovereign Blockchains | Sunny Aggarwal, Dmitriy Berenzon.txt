all right everyone welcome back to another episode of bell curve before we jump in quick disclaimer the views expressed by my co-host today are their personal views and they do not represent the views of any organization with which the co-hosts are associated with uh nothing in the episode is construed or relied upon as Financial technical tax legal or other advice you know the deal now let's jump into the episode [Music] I actually don't think people are users of ethereum I think they're users of applications but also more importantly they're users of metamask people I think I think the lock-in isn't actually ethereum the login is metamask and today what makes an ethereum L2 like polygon easier to use than Cosmos like osmosis is that you don't have to download a new wallet right because you already are already have metamask installed all right buddy episode one miles excited to do this with the event yeah me too I'm uh you know we bring me on sunny and Dimitri I think these are two of the leading thinkers of the space and just a great way to kick off the season so maybe uh why did we you know this is obviously intro to season one we're going to be talking sort of big picture although honestly the interview did get a little bit tactical at points as well that's probably the good thing about Dimitri and sunny but why do we pick these two to sort of kick off kick off the season yeah I think with sunny he is probably you know the builder of the most mature uh application specific chain in the space right now in in terms of osmosis and I think he's he's really been one of the leaders and trying to um push this I would say reorientation from thinking about decentralized applications thinking about blockchains really from you know an application first standpoint rather than a chain first standpoint um and I think we'll we'll hear him really to kind of dig into that over the course of the episode and then on Dimitri's side you know he's coming from it from the perspective of an investor um right and he's thinking about okay if we do believe that applications are going to want their own block space right what is what is the spectrum of the of the different versions of this look like what is the end State Market structure look like um and I think he's done a great job exploring that in the past I totally it's actually always good to get sort of a builder and investor because they they're both very smart but they kind of come at it from different angles and I think when you get the two of them uh you get some some pretty special yeah some pretty special content well this was this was a fun one um I think without any further Ado let's just let's Dive Right In welcome to the first episode of season three of bell curve we are excited to be joined uh by my new co-host for the season miles O'Neill and we've also got Sunny agrawal of osmosis and Dimitri Branson of 1kx to explore uh the app chain thesis so guys welcome all to the show thank you good to be here maybe we could start from just since this is the first episode of the Season just sort of a 10 000 foot View and Sonny maybe I can pick on you a little bit here but if we could even just start with something as basic as you know what are app chains when we talk about app chains and if you had to put the broad Contours around kind of the app chain thesis you know why do people sort of get excited about that about that term yeah sure um so the what wait app chain it's uh short for an application specific blockchain um I think what we get maybe to talk about the app chain thesis before we even go into app change I think there's I I have to make a pick for why applications are valuable and that then will later lead into why app chains uh you know why applications are valuable you know so in crypto there seems to have been this like prevailing thesis that has been around for the last about five years ever since the like Infamous Union Square Ventures like blog post about it called the fat protocol thesis and it's been around this idea that like hey you can build this like generalized L1 and you just get other people to build stuff on top of it and but all the most of the value accrues to the like L1 token and it's like and that's been sort of this like primary thesis that's been driving this like L1 driven investment and over the last especially over the last suppose like this last bull cycle where like you know most of the investment flowed into like your avalanches and you know you know solanas and stuff where it's like oh look at these generalized platforms a lot of builders on top of it um and this is sort of like a bet on infrastructure right it's like okay if you can build the rails that everything runs on that's what's where the value accrues and this bet has been made before in the 90s right where like if that you know we're in web 3 now if we look at like the original web uh people were as you know the.com bubble was happening and you know the internet was really heating up people were like oh how do you bet on the internet uh this growth of this new thing and a lot of people those are were like oh well you bet on the pipes right like you bet on CompuServe and AOL they're building the pipes that the internet is running on and you know as the internet grows that's where the value is going to accrue now if you look back in retrospect you know if we have uh you know 30 years of background Looking Back Now it's like no those actually weren't the right bets to make right like those copies of an AOL kind of like died off effectively um really that two Best Bets you could have made in the 90s on the web where Google and Amazon and those two were applications right and like uh you know and the thing is applications really in my opinion are where value accrues and like you know because they because of a number of reasons right they they're like much more stickier the the and they're not they're not commoditizable they have like a direct relationships with it with users in a way that the pipes don't and so you know today I actually would argue that people aren't necessarily ethereum users they're uniswap users or they're Ave users and as these applications go multi-chain or as I suspect will go app chain uh you know the the user's relationship with the actual blockchain is what kind of gets like it's intermediated through the applications and the and that's why the applications are really where this value accrues um and how this now then relates to the whole app chain thesis which is like you know look at today now actually the two biggest internet services providers are actually Google and Amazon as well right like you know you have AWS and Google Cloud because it turns out the people who build the applications have the best knowledge of what's needed from the infrastructure to build the best applications and that actually enabled them to build the best infrastructure layers as well and that's kind of almost a claim of app change as well that by like you know the app developers actually know better of what how to build proper infrastructure than these like pure infrared Builders and that's why these app chains are going to sort of uh went out and like you know that we can design the infrastructure for the needs of applications uh in a way that generalized blockchains can't so I know I've talked to a little bit I'll let maybe someone else uh jump in with some but that was a little bit of background on how I see value accrual in blockchains I have a like a different world view of like how to cut it I mean I I agree with everything you said I guess to answer the question like I Define an app chain as a blockchain that dedicates its block space to a specific application which is like a very simple way to uh to describe it and that definition also is quite Broad in the sense that you could consider Bitcoin to be in uh app chain or you could consider our weave to be an app chain as well I think the concept itself is not particularly new in that like it's been implemented in in many ways um I I think there have been projects like Cosmos polka dot that have generalized that idea um uh but it's actually been around for uh for a while um I view it also as like a scalability thing um uh and uh in evolution around um realizing that um there's a general like like with blockchains there's a product Market fit for um block space you know I I think of uh block space as effectively like a market for um uh trust um and over the years we we've seen more and more uh demand for these um uh trust minimized markets um in a way that no specific instance uh could scale and so we've seen that around um like the I I guess around like 2020 um where you look at uh super high gas fees um a lot of this we've seen on like polygon and and um that kind of prompted uh the development for other ways to scale um and a very basic idea was that hey instead of um stuffing everything inside of like one state machine what if we just like have um uh like very specific um like little like Pockets where applications could do their own thing and I think that's like a a interesting paradigm the last thing I'll mention is that um I think we're talking about app chains in uh in the context of like a full stack solution so just like to frame it I think a lot of people uh when they think about app chains they they think about a cosmos uh chain where it's like from like all the way down to the consensus level I think that also exists along a spectrum I actually consider like application specific Roll-Ups to be an app chain as well you know I kind of look at a roll-up as like uh trust minimize blockchain with a two-way trust minimized Bridge so there's other terms you could start to introduce and I think we have already too many in crypto but like a roll app or like an app space concept so I also want to like talk about the notion of app chains with this idea in mind where like I like I'm bucketing Roll-Ups uh in uh in that Spectrum as well yeah and I think I think that spectrum is is really something we want to dig into today and and really for the the rest of this season as well I guess for Simplicity and I'll throw this to Sunny first in the context of a of a full stack app chain um what would you say are the most compelling reasons to build an application as a full stack app chain what are what are the things you can do when you vertically integrate um and maybe some some examples whether it's osmosis or other app chains that you've seen you know of some of these benefits in action yeah but I honestly I completely agree I actually you know Roll-Ups are option you know application Roll-Ups are just blockchains that use like different secure like you know what where how a security mechanism works is I think uh almost a side concern and what on whether something is an app chain or not and I think like the way security is going to look even on Cosmos is going to be like very different than it does today right like you know as we move towards mesh security and like you know validity proof base like IBC like you know all of this is going to look very different anyways um so yeah so why do what someone choose to build an app chain in general uh one of the biggest reasons okay you know I think there's a different reason right one is you know you just want to have more ownership over your blog space right and that you know this is really valuable when you're running on a generalized blockchain you know you are basically like competing for that block space and you know a suddenly a really popular application could come up in which their users are less price sensitive towards gas and then you know drive up the price of your your block space as well and like this just leads to a really bad ux remember like I remember the meme back in like 2017 was like uh you know how are we supposed to pay like you know you know you can't do your groceries with on ethereum because every time there's an Ico there's gonna be like you know a gas price doing a transaction costs 50 okay back then it was icos maybe now it's like nft drops but you know there's always these like one-off events that cause random like uh unpredictable spikes in demand for lock space when you have your own app chain where there's like nothing else happening in that app chain you know you don't have these unpredictable spikes that are like out of your control of your application and the other thing you can also do when it comes to block space gas kind of related things is like do application related subsidies of of computation right like there are things that you might want to do in a blockchain but that like you it because it's an application blog specific blockchain there are like public goods for that blockchain that are subsidized so like in example this is what pre-compiles an ethereum effectively are well they're like for example like doing a Shaw hash in ethereum or verifying a signature in ethereum is actually that that computation is actually subsidized relative to what it actually should be but it's because it's like okay you know we need to provide this because it's necessary for things to most things to work on our theorem as an uptrend you can make more pre-compiles for different things let's say you are an amm based blockchain with app chain which you know osmosis is and it's like oh why don't we build a pre-compile you know we have to do this like every amm computation math to like do stuff why are we not just like subsidizing this because this is like you know a core part of the protocol we can actually like you know uh make it so we don't actually have to run this in a VM we can run this as pre-compiled code there's all this sort of like benefits you can do there that give you all these uh benefits on the Block Space level so that's like the block space argument for app trains there's also like in my opinion just like the The Innovation uh side of app chains where when you're building a uh application on a generalized blockchain you're you're often very constrained by the limitations of the platform that you're building on and you have very little ability need to change them like you know here's a new limitation of the uh evm that I just encountered yesterday that frustrated me which is I can't as an as a eoa account as an I can't send eth and weth in the same transaction these have to be two different transactions and I was like this is mind-boggling right and it's like well on an app train I can go change how my blockchain Works to go allow myself I want to be able to do that I can go change the code to be able to do that I want to go and a place where like being able to go change stuff at the protocol layer is like very interesting especially if you're doing like new cryptography so right like you know it I think it's interesting to note that like not everyone but almost every interesting project that's doing something interesting with privacy is building on Cosmos and building an app chain right whether it's you know a Noma penumbra a secret Network like you know because you really do need this like sort of low level control in order to like really on the cryptography side of things to innovate like just think about how many debates today our time has spent debating on like which EIP is going to get implemented next in ethereum it's like okay yeah you know this one's going to be slated for two years from now as an option you don't have to participate in these debates because you can just you know be like I'm gonna go change my blockchain to do the things I need and that's sort of one of the things one of the big bets of Osmosis is you know your unit swaps of the world are going to be constrained by the platforms they're built on osmosis we don't control just the application we control the application we control the blockchain and it just so happens that our team also builds the Kepler wallet which is like the primary wallet for the causeless ecosystem so we have this like extremely full stack control that enables us to innovate it's the Apple thesis right apples will take was like okay we're gonna not build the phones we're going to build the software the OS we're going to build the most popular apps and now they're even going to go build their own chip now they are building their own chips and Hardware but their bet is that they can build this like highly vertically integrated stack that provides the best ux and performance to users I think that makes a lot of sense um and you know I think we can peel back whether the supplies at the roll app layer or not but what are the some of the things you can have your validators actually do for you when you when you control the set um you know which is kind of a lot a lot is spoken about about the you know the downsides of dealing to bootstrap your own validator set but I don't think a lot is really talked about in terms of you know what you can ask your validators to do what if they are you know dedicated to just your application yeah so a cool thing that you can do is like yeah you have this set of nodes uh with stake behind them that are basically voting on every block and this actually gives you an opportunity to ask them to add more data along with their votes and so some of the things that we want to do is like you know one of the things that we're really focused on is this thing called threshold decryption it's an Meb resistance strategy but part of what makes the threshold you know there there have been proposals of like oh we can add threshold decryption uh using like meta layers on top of ethereum but the problem is like you actually run into all these issues with how you deal with reorgs and stuff you know you actually want your validator set of the consensus layer of your blockchain to also be your like threshold decryption set so that way as blocks progress it the cryptability of transactions is atomic with finality of blockchains you can't decrypt the transaction unless it's finalized and added to the blockchain and you can't finalize a blocked a block without having it be decryptable and so having the same SEC be doing both of these things is really valuable another example of what you can ask them to do is Oracle updates right like you know almost every not every single one but I would say a vast majority of D5 applications today do rely on some sort of Oracle uh and for so many of them we've just come to rely on like chain link as are like okay this is our Oracle Source but really that that's kind of centralized and and more importantly it's not Atomic with block production right you you have no guarantee that chain link Oracle updates will actually enter the chain in a timely manner meanwhile instead if you had it so your validators were the ones providing the Oracle updates you actually have a strong guarantee now that Oracle updates are are uh arriving in a timely order and you can uh depend on that so you know it's probably not the most popular topic but this is actually something Tara did pretty well right like they're you know during the entire crash uh process their Oracle worked extremely well almost too well uh and like and like and that that was possible because of the fact that it was the validators who were atomically providing uh the Oracle updates during the block production process yep that that that one you know we don't like to talk about it too much anymore but but that really kind of the first you know example of what we've seen there I think dydx and say are another example where we'll see you know off chain order matching so you can run the the order book actually on the validators themselves um yeah and I think we've also seen especially with osmosis you know a lot of a lot of benefits to the ux between you know custom V models custom transaction ordering um and that kind of that kind of also leads to the the value of roll side you know so not just Mev mitigation but also you know potential value equal um so I don't know if there's anything you want to add there but yeah I can talk about like so yeah those are good two points custom fees I think that's a really important one one of the biggest um I don't know pain points I've always felt with almost every blockchain I've interacted with today is like the way that it demands fees be paid in a specific token I remember like the first time I tried to show a friend how to use ethereum many years ago I like made him open a wallet I sent him some dye and I'm like cool now try sending it back and we realized oh wait he can't because he doesn't have any Eve this is stupid um and so uh you know one thing that we were and you know frustrated with this one thing that we were able to do in osmosis is we're like hey we want people to be able to pay fees in any token they want uh we have key walk prices from our decks because it's an app chain so we can use those as a way of like allowing people to pay fees in any token that's like you know you can and you can do other cool things with fees you could be like you know oh imagine you have like a specific nft you get some sort of fee discount right like you can you can get really creative with the way that fees work in your blockchain or maybe you could be like oh if this is a trade transaction we can allow the swap fee that someone is paying to also like count towards how much their gas fees as well you can you can be very creative on this kind of stuff um the other thing is how like transaction ordering works so like semi-related to like oracles like you know maybe you want to be like oh I want all Oracle updates to go to the front of the block your execution layer doesn't have to follow the rules of like what order transactions are included in a block right you can be you can you're you can be smarter to actually scan through the transaction in the block categorize them and be like hey I want to execute them in a different order so as an example as a DEX right you know we have liquidity ads we have trades we have people removing liquidity from the pool maybe what we want to do is like say Hey Okay first what we're going to do is look through all the transactional block execute all the liquidity ads first then we're going to go ahead and execute all the swaps maybe we batch them and then we're going to execute all the removals of liquidity this prevents anyone from doing like you know rugging of liquidity from underneath the trade it prevents a lot of like the liquid the liquidity sandwiching that's happening because it's like okay all the liquidity gets added at a fair time you know you can actually allow your app layer to be smarter of like how you don't have to just like run ex let the VM the generalized blockchain choose the order of of genetic I was at this like uh Retreat where we were talking about a bunch of Mev stuff and like what are Mev mitigation strategies that like uniswap could build uh based on ethereum and what we've realized after like talking for hours was like there's really not a lot they can do unless they have more control over the blockchain itself yeah I think that makes a lot of sense um so yeah I think we've covered you know whether it's a couple of things under scalability you know we have you know increased uh better ux uh through things like custom fees and transaction reordering and you know really user protection um and Dimitri you also wrote about value accrual um in a great piece on on app chains a couple weeks a couple months ago I'm not sure when it came out but is there anything you want to speak to there on on the value of cruel side that side I think if you use the thought experiment of to say like if I mean we kind of see it with osma I guess but um if there was like a uni chain like do they need to turn on the fee switch and I would argue maybe not if the transaction fees are paid in their native uni token which also serves as a security model because that's another implicit way to accrue value it's not that you need an implicit um uh fee switch it's that the demand for the application turns uh in turn results in demand for the native token because you need that to actually uh uh transact on that cheat so that's like a more crypto native uh uh business model that a lot of uh depending on the developer they uh they need to think about another Dynamic is that a app chain could effectively Fork other uh protocols and monetize within their own ecosystem I think we've seen some interesting analogies to kind of what axi did with Ronin where they have their own decks they have their own Marketplace they're able to um uh capture value from the usage of that and they have users because they they provide an application with content that is able to amass like a large like user base of players um so a lot of these D5 protocols I can just code right like you could take what you need um uh package that into um a a verticalized application and as long as you're providing value to your your end User it's a way for uh uh for you to uh like keep that like within your ecosystem um I I think the last part we kind of alluded to Med you know like I'm I haven't spoken with like the dydx team I don't know if they're doing this but you could have like it's a round-robin consensus you know like you could have you know like if you get every Market maker uh to be a a validator um on the dydx Chain uh that's their business model there too you know it's a round robin consensus for like who who for uh for Block inclusion um and so you have a way for uh uh for market makers to you know pay for their like the the cost that they have for for validating the chain so just just to kind of sum up you know where we are so far uh because I want to get into eventually like some of the the arguments for why this might not make sense right or what are some of the detractions against sort of the afternoon thesis but you know suddenly we kind of started with this this high level observation that and this is a dynamic that exists in plenty of traditional markets outside of tech value tends to accrue to the the layer that's closest to the consumer right there's that whoever is closest to the consumer be it an app in web 2 or like a financial advisor in finance or whatever it is they tend to have a lot of Leverage right and then they sort of uh exert that leverage down the chain and that implicitly challenges some Frameworks that I think a lot of people have in crypto which again kind of goes back to that Joel menegro piece uh you know fat protocols um so if you kind of start with that then you talk about some of the uh Dimitri I think thought you grouped these advantages into three really nice groups which is sort of performance which is this idea of like app specific versus General block space right like even like the other side landmen that shut down ethereum not in 2017 but last year right so there's still huge challenges for uh performance and generalized blockchains there's also uh value capture which Dimitri you were just sort of talking to then there's customizability which Sunny you were getting into with uh basically the advantages of having validators that only are on your specific Network so these are all like huge benefits right but walk me through like what are some of the downsides necessarily of um running an app specific blockchain as opposed to like bootstrapping on ethereum yeah I could talk to a couple um and the the issues that are present today I guess just to preface are not uh insurmountable I think that there are are ways to uh to kind of go about uh solving some of these um and it is also different within the ecosystems as well um I think the biggest one that comes to mind is um like limited composability and uh uh having make it more difficult to do um atomicity across different chains which is like you like you want an All or Nothing execution of a transaction um I think uh there are ways to uh uh to get around that but it does add some additional like developer friction um there's also a ux friction you know if you have um if if you require a user to bridge funds uh onto some other chain or some other roll up um I think that is uh something that we need to solve to uh to make sure that it is as fluid as possible um and I think like the bridging experience to today is not um uh particularly uh accommodating to like new users of chains like it's a pretty scary um uh thing for for people to do um another is like the like the thought experiment um if you use uh you know if every application uh today like on ethereum um uh were to create their own um uh app chain and they said uh uh you know what I only want um permission to write access um I I want to control who gets to do stuff on my app chain um how is that different than the world where we came from where where it's like it's permissioned um now and now we're just like recreating that set of permissioning in the uh for the goal of like value capture and and I guess like scalability and and all of that other good stuff um and that's like an ecosystem-wide question I don't quite know the answer to like like how you balance that um uh maybe there's a case that uh uh it might make sense for a certain flavors of of companies maybe more like enterprisey companies want their uh more strict permissions on on right access and maybe there's uh benefits to actually like opening it up for for other projects um so that that's a couple um I think like the liquidity fragmentation um uh part is also an issue um if you have you know 10 different uh amms on 10 different like I don't know Cosmos chains or ethereum Roll-Ups like like how does that affect um the I guess like performance or or um like Capital efficiency of the system as a whole and and and and how do you solve for um uh cross chain cross roll up um uh liquidity pools in a way where where you're you're preserving that experience for um end users um so so there's a bunch of things there I guess like I'll stop to to see if uh if Sonny has any other things to add yeah I think that was a really good rundown um I can talk about some of what I see as biggest current issues with app chains uh and then a little bit of like why you know what we are doing to help solve those issues um so you know one of the first obvious ones that I think we actually ran into was you know for a long time the cause of SDK was very like almost anti-vm right we were like oh you know everything will be done in the cause of SDK and Native go code and you know all your app logic is there and then we realized that there's actually things that people do want to customize right like you know uh every time someone wants to create a new type of multi-sig or something like that right like you know there's an argument that app chains aren't extensible enough right and like so what we realized and you know maybe other people want to build Integrations into your application right osmosis is a DEX people wanted to build extensions on top of the decks right people wanted to build a dollar cost averaging system where people wanted to build like a market making Vault or something like that how do you let people build extensions onto your system um and the solution that we kind of came but was well okay well first step one was like okay well what's out of the app right so there's a VM called cosmosm exists on the osmosis chain but it's like okay then how do you did we just become a generalized smart Contracting chain at that point right so I think what the balance that we figured out was actually osmosis does something a little bit unique in blockchains where we have a smart Contracting system but the uploading of new contracts has to be permissioned by is permissioned by governance so you have to make a governance proposal to add contracts so it's like you know what this does is it kind of keeps it like an app chain where it's like okay we're only going to allow things that extend the functionality of our core feature set which is the decks um you know we're not going to approve and a competing decks to be deployed on the same blockchain for sure but we're not gonna you know someone wants to go deploy a game or something it's like no the osmosis isn't the right place to do that go go build another app chain for that I'll go deploy somewhere else right like we want to focus our thing on use keep our block space for like the things that improve the Dex experience so by having that sort of permission system that's like one way we we've sort of solved that extensibility sort of issue um and another one is like composability so you know uh Dimitri mentioned like okay this like lack of atomic composability between things and you know one thing I push back on is this notion that composability is means atomicity or synchronicity right yeah yeah it's like you know if you look at the web you know the web is relatively pretty composable right like you can have apis that talk to each other but like all of the web is built off of asynchronous programming right like you know the entire web is not running on a synchronous server right it's like the entire web is based off of people making asynchronous calls into other services and having callbacks and stuff and yes it's more annoying but it is what is necessary in order to like build any sort of like scalable system and the composability thing isn't really even in my opinion an argument an app chain specific thing right even if you had like many Roll-Ups or something that were generalized blockchain you still need to deal with asynchronous like uh composability right if you have a contract on optimism that's trying to call the contract on arbitrum you still need to build in the same asynchronous composability like building blocks and so I would just say that I think the cosmos ecosystem the IBC stack is probably the furthest along when it comes to building any of these like uh asynchronous first building block so you know that's that's another one um another big uh kind of issue that we run into is like standardization it's almost ironic because so you know like I said our team actually builds one of the most popular wallets for the Costless ecosystem and sort of part of this whole pitch to of app changes like hey you can come customize everything you want uh you want to go change how you know your staking module Works go for it if you want to go change how governing Source I know chain go for it you want to change how transfers and work work on your cryptography works on your chain go for it but then being the wallet developer as we're like guys please don't change too much because like it sucks every time you know we need to go make a custom integration and like oh you change the cryptography okay we gotta go build a customer integration for that you change the uh how the staking module works okay well our staking dashboard doesn't work for that anymore and so it's like this this um so yeah this like tooling based issue is actually sort of one of the biggest challenges that I'm not actually sure I have a great answer for today and is actually one of the biggest almost not not threats but uh you know big open questions on how how we how we deal with app chains going forward right like you don't want a world where every time someone builds a new app chain that like it it's too different than everyone else oh does that mean they have to now go build their own wallet or does that mean that like you know your favorite staking dashboard doesn't work with it or something like that so how do you balance these things I think that's a big big thing that does sort of need to be figured out I would say um yeah I think those are some of the big ones I have a couple others as well you know security um you know scope creep I think is a big issue as well like you know even osmosis you know it started off as this Dax but now we have this lending protocol building on top of it we also have like you know a couple other Pro it's like at what point do we actually start to over evolve and let scope creep turn us away from being an Apache and like what at that point what is the depth what what do we even mean by app chain when we have this sort of like sort of little ecosystem of other projects building on top so I think that's another another thing that's yeah like just to follow up on a couple of those points for um so atomicity I Atomic composability one area where it's probably particularly useful is in the defy sensor on like market efficiency around flash loans um like that's probably a special thing um where where it particularly benefits um in the roll-up space um I think you might be able to pull this off if you have like a shared sequencer set um across like like like different uh uh Roll-Ups I haven't seen that done uh in in practice uh and we like we don't have an example of a decentralized sequencer yet um but I can imagine if there's like a like a roll-up that has um uh an amm and another roll-up that has a money market um and both are the same sequencers then then they might be able to to actually like do those transactions atomically um I think the idea around like uh tooling is super important because also for a like an app chain needs a couple of components that will let like Let It function out of the box um uh which could include like a block Explorer an RPC provider an indexer an oracle to your point Sunny you could internalize like some of these things and bake it in um if you have something that's as customizable as like the cosmos SDK but if you were to uh maybe like Fork optimism and just like launch like a roll-up like you like you'd probably need to find ways to um add those additional components um for your like users and developers um so that's like an additional lift around like overall like developer lift that um that you need to uh to think about um and I guess a final uh interesting observation is that like with com with customizability um it probably depends on the Persona of the developer of like how much composability or customizability do they want or need um I I I kind of get this feeling that um from for many developers it could be Overkill to to to customize like everything like maybe it's just a game that wants their game as like the native gas token and like they probably don't know about Mev like they don't really care about like like transaction ordering like that's all they want to you know make number go on um so so for them maybe they just want like a more like a simple out of the box solution uh and and I think like that is probably a ux challenge that needs to be solved for this more like I don't know mainstream developer I think that makes that makes a lot of sense you know we've heard about like the bootstrapping costs um there's one thing I wanted to kind of double click and uh here and that was on the permissioning side um because I think a lot of what we've talked about is when you don't have control over your block space when you can't curate your block space and you become very successful and you attract a lot of users you're gonna have a lot of random stuff that just starts popping up on your chain right whether it's an nft project on a would-be defy app chain or or you know a game on a defy app chain that takes up all the block space you know this can be kind of defeat the purpose in some ways of an app chain um and so would you guys just would do you think that permissioning governance you know based permissioning is actually a prerequisite to to call it an app chain you know under the definition of an app Gene I think it's important to uh sort of protect the app trainers especially to protect the block space especially um like the other things maybe it doesn't matter so much uh uh it's almost like a a part of the other reason that we you know the permissioning is important not only to protect the block space it's also it like protects your Innovation rate as well because you know in my opinion I think like part of the reason ethereum development like kind of goes so slow is it has to deal with the interest of the 10 000 applications built on top you know and we've well and we've had situations in the past where like ethereum has broken people's smart contracts right like I remember like back in one of the uh hard Forks like a bunch of the Aragon contracts broke because there was a change in how gas uh Gasco like gas pricing worked and so it's like you know we and you know if you're talking about talk at HCC this rare where he was almost like oh you know prepare to have things break for for your developer you know your contracts break which is kind of weird because on one hand we're like pushing for immutable contracts but it's like okay on the other hand we have to make be prepared for these contracts to break potentially and so when you do with an app train with osmosis you know before we added cosmosum we had to we had to own the only people we had to talk to uh at least on a contra on like a builder on the Chain side Builders is like ourselves right it's like okay you know we have as our but and you know we have to go talk to some integrators let's go talk to block explorers and stuff like that but on the actual chain development side right we don't have to talk to ourselves today if we have to go change something in how something works on osmosis right let's say threshold decryption uh comes alive and but you know the way that people generate transactions has to change today we only have to go talk to about 20 maybe maximum 20 projects right because like there's only 20 other Builders building on top of the osmosis chain uh and that that is a feasible thing for us to do as opposed to like ethereum where there's no way for them to like they basically can't innovate because they can't break anyone built on top and so I think that's one of the big benefits of the permissioning is that we we protect our uh liabilities here uh to to external developers that's interesting I I I'm trying to find another argument here I guess if you look at it from like a free markets perspective I wonder if you could bacon um like incentive mechanisms and and actually like the design of the app chain to just like make it either more or less um uh attractive for like other contracts to deploy you know like if you have uh uh if you adjust the op codes to like if you change the pricing in the op codes to make it like very cheap to swap and like very expensive to do other things then uh you've kind of set up your chain to be um uh to to work better with applications that have to do with that core mechanism and then you could kind of say okay like like we're permissionless do like deploy if you want here but it's going to be really bad for your users because it's going to cost a lot to do the thing that you want to do um so so I wonder if you could like get these benefits by adding um by by baking your opinions um into like the actual like design of of like the block space yeah so this I imagine will happen actually so um you know eventually what we want osmosis to do is batch all trades right like all trades that happen in a block should be batched together and get equal pricing which works easily in a world where all trades are executed by users but in a world where some trades are executed by contracts things actually get a little bit more complicated and messy right because what happens when a trade uh uh you know so so what we actually end up having to do is we you know we've been thinking about how do we architate architectural block is what we actually have to do is take every transaction that like it's got hit by a contract we've first run the contract uh so one thing that's worth noting is the way cosmoplasm is designed is it's actually designed to be asynchronous non-atomic by default uh because it was really designed as a cross chain uh Contracting system so it's like oh you know you want to be able to have one cause of wasm contract call The Cosmopolitan contract on a different chain almost as easily as it calls a contract on the same chain but so what will happen when osmosis implements the batching system is we actually run the first part of our contract if it if it um execute a swap we we basically hold that swap run everyone else's contract then we take all the dispatch swaps execute them at the same time and then we go and run the completion of everyone else's transactions this is such a different Paradigm to like normal smart Contracting today where you know you expect your transaction to like run beginning to end before going to the next person transaction but but you know it's like no we're designing the way the block space Works to be optimized for what the needs of the decks is and it's the responsibility of the things built on top to sort of adapt to that I want to get a sense from from the two of you like again almost like maybe zooming out and looking a little bit towards the future um you know one one topic that we wanted to get your guys opinion on is this idea that you know let's with caveating the understanding that there are other communities outside of Cosmos that are nest necessarily just pushing for you know app chains right as an idea but we're going to focus large on Cosmos and then there are other you know layer ones outside of ethereum that are kind of providing like broad-based security and data availability and all that kind of stuff but just using those as the two sort of canonical uh starting points for a similar problem which is how do we scale and get billions of people using applications and then have them secured and write the appropriate architecture underneath like how how do you guys kind of see like just to use these two ecosystems as an example like Cosmos and ethereum kind of coming together right like there's a whole bunch of different spectrums of how this might play out but like how do you see these two communities like uh sort of evolving and interacting with each other over the next the the sort of coming years yep I think from my perspective it's like an order of operations um I I think there's almost like a um a question that is based on the maturity of the app um I think like an interesting observation that I've seen for defy protocols um and some others is that um on ethereum they are launching on l2s first um I I think that's an interesting reverse of the operations because usually a application would launch on ethyl one first super expensive but maybe they need like the security and that's where like the users are um so they would uh launch their application their gather some feedback and then say hey like these fees are are too too high or or we could do um more things with their application if like gas fees are lower maybe it's cheaper for the Oracle updates um so then they move to um al2 and then if they are successful then they they start to say okay we have more users we need more scalability uh maybe we need more customizability um then what do we do and I in my view that's where the the decision tends to be like very relevant around the crossover where where they might say hey do I launch like my own like dedicated L2 um do I just Fork optimism do I launch assuming this is built out as a L3 on Z casing or Stark net um or it is that not sufficient and and for for a lot of the reasons that like that Sunny mentioned like do I need my own like full stack uh Cosmos chain um and there are other options too like do I launch my own like Avalanche subnet do I go on my own like like polka dot parachute um I think that uh that decision for um for teams becomes more relevant the larger they get um and and I think like we've we've seen that with um axi with Ronin and dydx um uh I think like as you get more scale so and and like like this is a very I mean it's probably like more controversial but like my my view of chains for for for successful Cosmos app chains might be more mature ethereum based applications that need more customizability dedicated block space things like that that's kind of an interesting framing because you know at the risk of being overly reductive you could almost view ethereum as like a launch pad for dapps and then once you get adapt with six you know critical mass or whatever it is and it decides okay we haven't really talked about this Dynamic of ethereum being distribution and where the users are is a reason for it being attractive right um but maybe adapts kind of start there and then when they get to some point when either the you know the pain of not being able to you know customize the way you know users interface with your app or maybe you just want the economics and you want to vertically integrate but whatever that like sort of threshold is you pass it and the most successful in that Paradigm it sounds like some of the most successful dapps actually end up moving off ethereum that actually sounds a little bit it could be could be bearish right you don't hear people often say something like that but um I don't know if that that was the right way to take how you just said that Dimitri yeah I mean I think um I'm not sure if it's bearish in the sense that they will still have options um on uh on a lot of other factors like for example security you know like like what like what are your security guarantees for like your own like settlement layer um uh versus using like ethyl one as a similar like that's a very important question for for potentially like D5 protocols um and and how much are you willing to pay for that security and even if you do uh subsidize that with token rewards um uh is that a sufficient uh security level that you're getting it from uh ethereum block space as being like a settlement layer um so so I think it's like still a very application specific it might be harder to uh to make that case for like a defy protocol um uh that like that has you know billions in in tvl maybe um but I think you're like your point uh around uh distribution is an important one because if you're going to like a separate Island um like you want to make sure you're you're able to like carry like all these users that you're providing like a valuable enough thing for them to like like move you know like to buy that ticket to like go to like the other um uh uh like to to go on the island um uh so so I think like that's why it's it's a harder case for a lot of applications because in general I don't think we have um like that much critical mass for for a lot uh for a lot of users uh uh uh today that actually um like transact we're probably in like the hundreds of thousands maybe for like D5 protocols maybe more for like later and games uh with a certain example of like axi um but I think we have a long way to go for there to be enough uh users with any application for them to make the case that hey I want to move to like my own um like my own dedicated app chain like off of um uh ethereum um I think that it's it's going to be a more and more relevant question um over time but but I don't think like the it's as clear-cut as saying oh like I got uh you know I'm big enough now it's time for me to like pack my bags and like go to like a different ecosystem there's like a lot under the hood like behind that decision to the original question of like you know uh so I would say that like okay the ethereum ecosystem versus Cosmos ecosystem is almost like an independent thing of app chains versus generalized uh uh change right I think but it's almost actually like a quadrant because within Cosmos you have both app chains and you have generalized blockchains right you have app change you have osmosis you have stargaze you have akash you have all these app chains but you also have generalized blockchains like Juno and uh Terra 2.0 and Archway and evmos right some of them are evm based or you know there's actually multiple ebm based ones right there's kava there's uh Kanto you know there's like there's actually so we have this within the cosmos ecosystem and then within the ethereum ecosystem you also have you know let's let's talk about Roll-Ups right you have both generalized Roll-Ups you have optimism and arbitrom and you know all the stuff that you also have application specific roll up you have dydx and you have um you know Loop ring and Ronin I would consider an option application specific kind of uh a lot of starkware stuff is really targeted at building you know very app chain Focus roll up so you know I think this is almost like a quadrant so you know I think we've talked a lot about like the app the app Chain versus generalized stuff so on the ethereum versus Cosmos if I if you have to like put like I think there's two sort of main differences here I would say that we're kind of actually heading towards the same direction right now um I think we I think the causeless ecosystem had to pull ethereum in the right direction a little bit I think like you know today you know you have to keep in mind like today oh the world is multi-chained you know this seems so obvious five years ago when we started working on Cosmos it wasn't this was like a radical thing and no one believed us and now everyone's like oh yeah you guys are right um and you know I think there's other you know I think the same thing is going to happen with app change you know every people still believe in these J you know everyone's like oh generalized Roll-Ups you know multi-chain but it's like no okay you guys are wrong about that um so I think they're going in the same production I think the two big change one of the big changes between the focus of Cosmos versus of ethereum is Cosmos we we kind of took a lower emphasis on the security relationships between these chains and decided to focus our efforts on the application layer composability between these chains we said that like you know what we can we can hide we can bootstrap using Sovereign security uh you know every chain can have its own validator Set uh let's focus it will solve that that problem does need to be solved at some point how do we scale security but we can solve that problem we have time before we we run into the bottlenecks there let's focus on like how do we build really good cross chain composability how do you have a contract on one chain call a contract on another chain how do you have a DEX on one chain or how do you have like a lending protocol on one chain do liquidations on a DEX on a different chain right these are things that like in my opinion the ethereum ecosystem just has not been thinking about at um meanwhile with the ethereum ecosystem has been thinking most of spending most of their mental energy on is on that security relationship side right I you know they're the farthest ahead on when it comes on developing validity proofs and fraud proofs and like roll-up architectures and stuff and like I think both sides are starting to work on other on each other's expertise point you know I think first maybe I I haven't seen too much of it yet but I'm hoping like people are starting to think a little bit more about composability on the on the ethereum evm to evm world I know in the cosmos World we're definitely starting to think about security how do we like scale security whether it's going through things like Celestia for data availability you know shared security systems you know we propose this idea of mesh security um so you know I think I know in Cosmos we definitely are starting to think a lot more about it and the I guess the thing is one of our uh exploration points is that unlike ethereum where there's like one chain one one chain to rule them all one token at the center of its security system which is like eth uh Cosmos there's no one token at the center of it right like this whole mesh security Paradigm is really focused around this idea of like oh we have all of these many Cosmos chains how can they sort of like pool their security together I call it like the Empire bottle versus the NATO model right an Empire has a single military and it provides security for all of its colonies while in NATO you have a bunch of sovereign countries they all have their own militaries but they form alliances where they have like you know pool their economic strength together to provide like a larger security umbrella so I think that's sort of like the main difference I would say between the ethereum model of the world and how security works and how the cosmos model of the world works um yeah I wanna I can also talk about like this uh the the user on the the user uh onboarding stuff but maybe I'll you guys talk talk about that so what I said first so far yeah I know I think I think that a big part of this thesis for this season is really the cosmos and ethereum are some on somewhat of a collision course in that sense but coming from very different um starting points right the cosmos really taking an interoperability of the application layer first approach and we can start to see the power of things like interchain accounts right that's that's more or less recreating the level of composability that you would see between apps built on the same chain um and then on you know on the cosmo side we're also starting to see you know the introduction of things like mesh security um and and you know uh the consumer chance that are renting security from from the cosmos Hub um I would say you know do you see for this future to play out on the ethereum side they're to be some equivalent of IBC or or is it more going to be I think Dimitri you referenced shared sequencers between apps that commonly interact with each other do you see it you know everybody's sharing one standard like you do on the cosmo side or do you think it's going to be more kind of Bottoms Up you know sector specific sequencer you know sets that that help you know just particular types of apps interop but you know perhaps a gaming roll app on starkware would never be able to you know talk to this sort of defy you know sector of roll apps it's a good question I think the pace of the ethereum development makes me think it'll be more like like Bottoms Up um uh like Solutions I think there's ways you could get close um with interop I think like you have like the shared sequencer set is one way to do it I think using l2s as a sediment layer for l3s are are pretty interesting with the use of uh like recursive uh validity proofs there's also ways you can do it but that solves the security problem that still doesn't like saying that we can use l2s as a settlement level right so so so one way you could do that so if you have um different l3s post um uh uh uh posted data that's needed for the proof onto share da layer then then you could have the L2 use uh use the data from that da layer to effectively do the bridging um so like one example is like how slush like there's a project called slush they're they're trying to implement this on uh on starknet um uh so so you could effectively use like a shared da um to do to do the bridging um across different l-3s um provided yeah like you have like like the data you could also post um if it's like an optimistic roll up you could post the like like the actual data that's needed for a fraud proof onto share da um you you could also do that um with an L1 uh I mean like that's how implicitly like like bridging is done between say like different like two different like ZK Roll-Ups it's using like the L1 as that da layer um so so I think we we haven't like really seen implementations of this um but I think that there are ways you you could get to um uh uh sufficiently strong levels of composability um with the exception probably being for Atomic composability you might need that shared sequencer set or like some overlap potentially between like if you're if you have like a decentralized uh uh sequencer set across different looks do you see actual interoperability providers playing a role here um you know we'll have maybe they all share a common standard but I think you know Sunny you might be familiar with polymer right who's trying to you know kind of introduce IBC to the evm side um do you think that you know that Reliance on a provider you know project like that is is something that's scalable in the long term or is it mainly going to be you know based off of the the security of the actual roll-up itself kind of like IBC where you're you know you get you inherit the security of the chain really for the bridge yeah I I think it might depend on if we're talking about like intra or inter um uh and I think what we've seen recently with like Avalanche like shipping their own like messaging um uh system I think chains probably realize this is like a very risky thing you know and and and maybe it's better for uh for users you know like like polka dot did this with a what was it called X CMP uh like years ago um like maybe it's his realization like hey if we're within our universe maybe we should do it ourselves uh it it doesn't solve the issue of like cross-domain um like like once you're hopping like like between like like different ecosystems I think um that's probably where you'll you'll still need um like some kind of like third party um in the very happy case you find a way to do like scalable like client Bridges where you're like validating consensus on like every chain that you're like bridging to and from but that's like not very scalable and you have some I I ideas around like like snarking the consensus and and and validating like a proof uh uh on the destination chain instead of um the actual like light client um uh the issue there is extensibility like how fast can you build this for like all the different permutations you know um so it's it's a really tough problem to solve um but I think there's there will still be a role um like I I think 100 for third party Bridge providers as it relates to cross domain intro and then jury is still out how individual ecosystems which could include like al2 like how ZK sync or how starknet wants to think about like intra within you know or how optimism Bedrock is thinking about it so um guys you've both been super generous with your time here and I think um you know as we as we start to wind down you know we've covered a lot of ground I think uh you know kind of talking about this idea of like fat or I know something you like to refer to them as tall app specifically and where value might accrue talked about some of the pros and cons right of app chains as opposed to other sorts of architectures and this sort of Collision Course idea between ethereum and Cosmos just if if either you guys have like sort of ending thoughts or something that you want the audience to to walk away with when it comes to app change could be thoughts about like you know where they're headed in the future or even the next problems just anything that you want to sort of bookend the conversation with I just want to add one last point about the like user uh thing that we were discussing a little bit ago as well about like oh all the all you know you Deploy on ethereum or on the ethereum ecosystem whether that's l2s because that's where the users are you know like I said at the beginning I actually don't think people are users of ethereum I think they're users of applications but also more importantly they're users of metamask people I think I think the lock-in isn't actually ethereum the lock-in is metamask and today what makes an ethereum L2 like polygon easier to use than Cosmos like osmosis is that you don't have to download a new wallet right because you already are already have metamask installed and the process of switching uh things on on the wall and is actually is becoming easier and easier right um so you know this is um and I think you can actually I think that this is something that we're starting to realize in uh Cosmos like you know we probably should build better integration support with existing ethereum tooling that people are comfortable with if we want to make the switching costs lower so for example with osmosis we are like injective does this for example injective is a cosmospace decks they don't actually use Kepler as their primary wallet they actually use metamask as their primary wallet uh and like same thing with evmos and like so I you know one thing we're working on osmosis is making it so that you can use you know you you're bridging assets from ethereum you can just start using it with your meta Mass right you it should feel like any other like polygon or any other ethereum evm chain right even though it's not an evm under the hood so that's like one one big thing that we're doing and but that's at the same time like you know we do need to balance this with like you know there's a reason we build our own wallet called Kepler because we have like views on like how crypto custody is supposed to work and stuff that met you know we don't want to be the same reason that we have our app chain that we want to be able to innovate at the application layer at the blockchain layer we also have our own wallet because we want to be able to integrate at the wallet layer but I think so it's a little bit of both you know how do we get people to onboard with metamask and be like okay cool now you're using osmosis uh by the way if you want to use all the coolest features of Awesomeness you should switch over to using this other wallet instead uh but yeah so I think that fixing that onboarding flow with the wallet will be a big part of like bringing people from ethereum into Cosmos and any option really yeah I think on my side I don't think there's a right answer I think we've been like we're searching for that anything like the boring answer is like oh like there's no one right answer you know like it's not for um like every developer um uh and I think there's a lot of trade-offs you know from a a developer perspective that they need to to to think about around like what's your Security Source uh like what like how do you want to deal with permissioning do you need finality like what do you want to do with like your like your gas token how much composability do you need uh do you need evm support um and I think like these are all uh questions um that uh different applications and different developers might answer um in a different way um so I think uh this is all along the Spectrum and I think there's um a multi-year are play out in the market structure that that we're going to see so I don't think like we have the answers now I think there's interesting projects coming out that are providing sdks for uh for developers to launch their own app chains which could be ZK Roll-Ups using Celestia as da Sovereign Roll-Ups Sovereign optimistic Roll-Ups that use Celestia as a DA ethereum uh uh Roll-Ups that use eigen layer as a DA so I think we're going to see a lot of these Solutions come out and I think we're we're going to start to get some of the answers just through like observing what developers will do so I think like it'll be interesting to to revisit this uh in say like 12 to 18 months and actually see like what we got right or wrong about the market structure guys this has been uh fascinating you've given Austin our audience a lot to uh think about so thank you both for helping miles and I kick off season one and and if uh and if folks want to find out more about you or follow the work that you're doing or what's the best way to sort of get more information on the two of you he Barons it on Twitter d-b-e-r-e-n-z-o-n sunny a97 on Twitter and you can follow uh osmosis at uh osmosis Zone awesome guys all right thanks so much we'll have to check back in 18 months see how much uh if we sounded smart or uh way overly optimistic but I have feeling optimistic myself my partner episode one of the books what do we think I thought that was great I thought um you know I think Sunny did a great job in the beginning of just running through the most compelling reasons to build you know an application on an app chain or as an app chain um you know I think as well we'll dig into later we'll we'll see how many of these benefits still apply when you start to make that you know tall app less tall maybe it's maybe it's an app specific roll-up and that only allows you to do you know 75 90 of these things maybe it's less I think that's still pretty unexplored and and also depends a lot on you know developments to interoperability and basically the things that kind of mitigate the con side that that Dimitri dug into and covered really well I agree with you it's it's fun like I I really liked his sort of opening you know even before getting into what is an app chain having to make the case that applications matter which is such a funny uh you know caveat to have to include but I think I thought his observation was completely right that you know Joe banegro wrote this post fat protocols you know fat protocol thesis a long time ago um you know before you know it is at a time when crypto is way less developed than it is today and I think a lot of the industry implicitly believes that basically and that's why you have these large and really engaged communities around Bitcoin and ethereum and some of the layered ones and and also you know to to the industry's credit as well if you were like trying to analyze returns the l1s have been by far the best performing you know asset class or sector within crypto even like on ethereum the apps denominated eth is like down only right and they basically launch and then it's down exactly exactly but yeah framing it in terms of okay you know actually these aren't ethereum users these are uniswap users these are openc users these are metamask users right that's the value of ethereum right is is based off at the amount of activity and the applications on top really determine how much activity there will be right um and so as these apps get more users and more traction and and more leverage frankly to take their users where they want to go because the apps are the stickiest layer you know it will be it'll be very interesting to see if these how many migrate to Cosmos to get more of these benefits that Sonny's talking about versus how many of them migrate to their own app specific roll-up or or you know maybe sector specific roll up um but really you know reframing the conversation back to the applications and back to where the users are I think that's kind of the whole point of this of this season right I would even call it like it's a reorientation in a lot of people's minds right which is like this sort of maybe you were starting from this point that you didn't even realize which was oh these are the rails and value is going to accrue here and then there'll be some interesting apps to like ultimately people use apps and you're right that that phrase that Sonny used right at the end there I love the way he I love the way he framed that because it's actually how I felt as being a user in defy and for those of you who are listening miles has been in some ways my sort of Guru Shaman uh you know Sherpa on my own on chain journey and you've helped me a lot but you know I've had the you know I've had the feeling when I'm using these apps like this this is not the end State here right like me messing around on like ethereum main chain is like not what we're building towards here I'm not the natural user of this right so right I totally agree you want to use an application be it a game or an nft or something that doesn't even necessarily exist yet but you know the way people operate and view themselves as an eth user and you're doing all the stuff that's not going to be the end yeah yeah and I think and I think today still there are far more users of centralized right crypto Services than there are of decentralized crypto services and I think you know osmosis is a State admission is to build you know the binance uh on chain right and in order to recreate that user experience the performance you know that that is the reason why they're building as an app chain they think that it is and also user privacy all these little things right um and so I think you know the reorientation is is really helpful in understanding why anybody is building as app chains when you know ostensibly they kind of live on an island and make people jump through a bunch of Hoops at the moment just on Port but um you know the best version of them probably is the closest thing we can get to these centralized you know products but you don't have to deal with all the trust of centralized products and one word that we didn't we didn't really use during that interview but you and I uh sort of use in a somewhat joking way but it's kind of decide to have like product maximalism right there's been no shortage of of maximalism in crypto but usually that centers around like an L1 ecosystem like Bitcoin or eth or something like that whereas this kind of and Cosmos I think even though they don't really call it this they sort of pioneered this idea right which is like Relentless focus on the product of the user experience and I think that's going to be a theme that's going to run through you know hopefully all of these all of these episodes yeah exactly I mean that's where you and I are coming from we don't have you know any ideological bias about which chain it should be built on WE frankly don't care we we just care that there are you know products that people actually want to use and that's what's going to drive you know the mass adoption of decentralized applications if you start from that kind of uh that high point of product maximization ultimately we want apps that you know hundreds of millions eventually billions of people use then underneath that right there's a whole bunch of things that need to that need to happen right you could call kind of the architecture of of like a nap chain underneath or you can call it the security model But ultimately if you're if an app is very focused on kind of the execution environment at the top then there's like uh data availability there's consensus there's a whole bunch of stuff that needs to happen underneath and that was sort of where we were getting into the ethereum approach or starting point versus the cosmos starting point 100 and that's that's really where the Spectrum out of the Dimitri was talking about plays out right um because at the the end of the day I do agree with this definition of a nap chain is just you know an application that owns its you know has dedicated block space and it can curate right that that blocks base and and optimize it for its own application um and I think there's going to be a lot of different flavors of of these app specific environments um and that's you know peeling back kind of the the current trade-offs um to each specific flavor of it it's something we can dig into this season and also thinking about okay in one or two years based off of what's being developed to kind of mitigate some of the trade-offs of that what what could this look like right um and so yeah I think I think we'll we'll further explore that as we go on the season one thing that was sort of stuck out to me not you know was was this idea that capture happens not at the ethereum level but at the metamask at the wallet level right Jace has been really digging into this idea of like the wallet the wallet Wars and actually yeah it's funny because I can I can remember when I was first getting involved in crypto you know it was the rollover of the 2017 bubble so everything was going to be useless but the two things that people were very bullish on was custody and wallet which is kind of the same thing right but like one of those ended up playing out big in like bitco and Anchorage and you sort of saw the rise of these like institutional uh custodians but the retail wall like never really took off like maybe because bear markets are not a period of time when when a lot of new retail users sort of come in but it always kind of amazed me that yeah like the wallet level is so critically important and doesn't get a whole lot of air time no no and and something we haven't really talked about because we've been talking about you know vertical integration going down from the application Level but you know we'll see with the uniswap and and to some extent with osmosis already right uh applications that also want to own the wallet and how does that you know I guess having a you know better ownership of the customer right by owning the wallet and the touch points how does that play out against the friction of you know making the user create a new wallet um you know how many do you you basically have to own those customers to begin with right uh or else you're you're adding another layer of friction that just might be too much um and so yeah we haven't really talked about you know vertical integration going upwards but um that's that's something to you know definitely explore as we uh as we you know chat about more folks on the season when it comes to Vertical Integrations while there's like two sort of big benefits to keep in mind that we we kind of like touched it on both but just like highlight it for people who are listening there's the economic uh reason why you'd want to vertically integrate you want to be able to uh you know extract more fees basically from every layer in the stack but then there's also and it seems like this is more important to to Sunny which is you want to be able to control every part of the of the user experience right from like the wallet to The Exchange Etc the the downside of that right is that it's more surface area for for governance I know so yeah that you've made yeah um yeah exactly we didn't really get into that as much today but I think we did get into the permissioning side right um which is great because you can curate your own black space and it's still decentralized because it's through governance but you know to Sonny's Point what happens when governance decides that they no longer just want to be an app chain anymore right and you start to get into some challenges around scope creep um and I thought Dimitri up some really interesting examples of how you know you might be able to abstract that away from governance um or you know ossify this sort of you know curation into the protocols Dynamics by by treating fees differently for different sort of chains um so I thought that was another very interesting piece because yeah the the scalability of of governance um is is definitely a big question here sunny at one point drew his like quadrant right like his quadrant example which I think and now you know something is kind of clicking before you know we recorded this how to talk with Dimitri and he was describing like how he thought it was an appropriate basically call it app space and I think a big a way that I'm now kind of thinking about this is there's like generalized blockchain space and app specific space right and like that's actually a more because there's so many words now dude there's like Roll-Ups and roll apps and l2s and l3s and like honestly maybe the most appropriate domination is just like how how far away you are from the settlement layer and then whether or not it's specific specific dedicated to one specific app type space and then or general sort of a blockchain space exactly exactly because you could you couldn't say like Cosmos is just app chains right because you know to Sunny's Point all these things exist you know and that's that life cycle I think is where for for every effort every application is where this becomes very relevant right so at what point are you in in your own life cycle um and and where does it make sense as the starting point based off of that is it on a general purpose you know L1 let's mark any sort of a smart contract platform general purpose L1 L2 right and then as you grow you know are you going across that spectrum and getting closer to having your own dedicated app space and maybe expand vertically even more with your own app chain um but yeah I did I did like that Spectrum or I guess the uh the cross here um between general purpose and app specific you pulled out a super uh interesting point in that as well which is the permissioning argument that was when Dimitri kind of framed that as like you know how do you okay so it's all very well and good to say oh this app this specific block spaces for this app but how do you actually enforce that right because people might you you might as the Creator right of the of the block space you'd be like I want to only use for this specific thing but in a lot of Senses permissionless so people could just start using it for other things and how do you enforce that exactly interesting question kind of defeats the purpose and you know I think just to touch on again I see I see three General approaches here there's the governance you know gating um from that permissioning of contracts and permissioning for chain upgrades obviously um there's sort of implicit gating that we were talking about just now in terms of treating maybe disincentivizing certain types of activity with higher fees um and then there's of course just you know non I would say almost Enterprise you know Roll-Ups and and um like we see this with like so rare or you know some of the other Stark net um Roll-Ups that this is basically one company that's that's saying okay you know you're getting most of those benefits of security from ethereum because it is okay roll up but at the end of the day right this is we're kind of in charge of this um and you're coming here for a specific reason right to trade nfts or you know to trade on dydx but how important will it be for them you know to actually decentralize that sort of permissioning um and and just how effective is it through governance versus other ways all interesting questions anything else that you found particularly interesting you want to highlighter I think that that that mainly covers it I think we're gonna get we're going to dig into the the interoperability piece quite a bit more um over the course of the season because I think it's mainly a question of uh you know okay if you see this is kind of the direction ethereum is heading what what needs to be built in order to get there what sort of Standards need to be established right to enable that same sort of um async composability that you get with IBC on Cosmos um is it you know going to be a top-down approach where ethereum says okay you're gonna have this built-in standard like we talked about or is it going to be bottoms up where you have you know maybe applications that know they interact frequently with each other are going to you know kind of have the same sequencer set right so it's a little bit more frictionless but but very much so within just a little sector of apps um and and no one shared standard like you see on the cosmo side and for for folks we know this was like a slightly technical episode but one way that helps my five-year-old brain understand standards right is it you can have there are all sorts of different cars out there right like you know tens or however many different car brands are you could go to any auto shop and they know how to change your tires because there's an agreed upon set of standards in the automotive industry right that you don't vary by you know you you know a couple different sets of screws there could be a couple different sizes But ultimately like that's what makes that work right so you can that basically unlocks you know auto repair shops and aftermarket businesses and all this kind of stuff so that was what Sunny was talking a little bit about it's like hey we haven't like agreed on any sets of Standards so we as the developer of like Kepler wallet everyone's like trying a whole bunch of new Innovative stuff but it's like guys we need to there needs to be guard rails around it right essentially right so and that will that will need to be an application you know based push for ethereum right which it's it's not been kind of the typical course of development for ethereum um you know they have not been building just to cater to a certain set of apps but I think that we could see that change as the apps you know gain more leverage over I guess the chain itself right you know what else is funny just in close this is so much in crypto it gets reduced to like a technical argument but also a huge component of this is just different communities and their priorities and like the culture that gets set you know what I mean yeah like 100 Cosmos is a community just focuses on this right and the leaders who are in Cosmos actually it's too it's almost too bad we didn't get this sunny made this point after we uh you know left but there's a big difference within the cosmos community of the core dads also being application Builders versus in ethereum the core devs and are completely separate right so that is a cultural thing right that's not there's no technology that makes that the case but like that's a huge cultural difference in between it's just funny to pick apart maybe yeah maybe just to give give a sense of what he was talking about there this would be the equivalent of you know if the next EIP uh for ethereum the next major ethereum upgrade was really developed by say the uniswap developers the Ave developers the maker Dow developers right those those application developers are the ones really dictating where the base layer goes and what standards they introduce um you know that's definitely not the case today um and in fact they really try to separate each other out not to give any application some sort of special privilege um but I think you know it's a big question to see if that will change over time all right buddy this has been a really fun one just to give you guys a sense of what uh we've got coming up in episode two we're going to be talking with Sam Hart and zachimanian about we call it fat apps maybe we should change it to that to tall apps and aggregation Theory but getting into even more detail about this idea that value May accrue at the app layer as opposed to uh you know further down the infrastructure stack of the protocol layer so this has been a fun one um and yeah buddy I'll see you see you next week [Music] 