okay we'll go ahead and get started hey everyone this is Mev boost Community call number five it's been a little while since we had the last one uh but yeah hopefully there have been some pretty exciting updates for deneb and the upcoming hard Fork there so I have an agenda that I've assembled I dropped it in the chat and yeah I think we can go ahead and get started um the main thing I want to do with this call today is just get everyone on the same page with deneb uh there's a hard Fork coming up very soon and you know a key part of that will be updating my Boost all the relays and any Builders who are listening so um yeah mainly I just want to call some things and get us all on the same page there we can discuss implementation and any testing efforts that we want to and yeah there's a few other things I put on the agenda just to call out otherwise if there's other stuff people want to talk about uh if there's time at the end then we can move to more of an open discussion so to get started uh we'll start with spec updates so the first one is on the Builder specs um these are mainly in place for the neb already uh there was this one RFC to consider changing this constant uh it's not super material but uh you know in the sense that it'll probably even be the same number in the actual code but that being said um this is more about parody with the consensus specs which I think is pretty important uh I'm just coming back from a break so I haven't had time to look at this in much more depth beyond that but I do want to call it out so uh yeah thanks Chris it's this 187 that he dropped in the chat and yeah if you're interested uh please take a look and yeah so there's that there are a few things on the relay specs so we can move to those uh these are the really the relay specs that flashboss has and the idea is that you know if you're like a nice conformant relay you should Implement these specs um like a cool thing you get right is uh supporting this data API which people use all over the place for all sorts of visualizations so I think it's actually been quite helpful there were a few things uh uh I'll get to this a bit later but I was working on some Builder software and I was trying to go off the specs to implement various pieces and ran into some things that didn't quite match at least the flashbots implementation um so we worked on some of those so there's this one here number 26. uh this was just when you actually submit a block as a builder uh before I had basically said you give back some like signed receipts I don't think any relay does this right now and um yeah it doesn't really seem needed you're welcome Chris um but yeah this PR just updates it to the 200 Response Code um at that matches implementation today so that was pretty cool and then there's another one around uh this might even just been something with like the guy docs but there was issue 24. there was just a field missing around uh the proposer how about key yeah Chris did you want to say something your hand was up oh I just wanted to note that historically for the first issue would be block service missions on the return 200 it was when they designed the really apis before it would be nice to return a signed receipt for Builder Store app so attribute like misbehavior but then we didn't get around to implementing it before the merch and there was never any appetite or asked for it so it never got done and this is just like an historically Arc uh artifact from the design period And I think it's all right to um yeah thanks for splitting this out and it seems that just returning 200 is good enough for now yeah I completely agree I mean no one's really complained and it doesn't seem right I don't feel like we're in a place yet where there's like you know these like semi-anonymous relays where like they could do more uh dangerous things so not that we always want to be in this regime where this system is very like reputation based but for now it doesn't seem like we necessarily need these like super accountable responses and we can always add it down the line okay let's see so yeah just inspect things I think that was everything there and okay next up I did want to chat about implementation Readiness for Jeanette so uh I at least definitely want to call out uh the core flashbot software we have so that's the Boost relay and the Flash watch Builder um Chris or I don't know if Sarah's here but if one of you would like to give like just a short update uh if possible otherwise I can just call out so it's I okay not sure I don't think Sarah made it um but you can find the tracking issues for both Smith pools the really and the Builder linked in the community called agenda this outlines like all the pieces that were needed it's all mostly wrapped up um on my Boost and the relay we have the final um pieces as last PR's open for review and testing anyone with expertise in relays um it's welcome to take a look at their tool and it will be appreciated to get a bit of more feedback and input if you would have any um on the Builder side um until just recently we were not able to work with gef because of some missing functionality and that's been I think implemented now and we are starting to replace the pillar and then get that piece done to um I think the question here for us is when do we participate in the devnet and it maybe next week or two weeks later because of vacations in between the goal is to wrap up all the code changes until next week and then it's on basically untested in in like test net so the next stage here is then proper testing in live Networks cool very exciting that's it so yeah I yeah thanks uh I dropped the tracking issues in the chat for my Boost and the relay so basically I see your names here on the call like most of you should go review these PRS um that would be very helpful and yeah yeah Perry that'd be great if you want to chat about testing yeah um I can I can go about testing um so yeah we would definitely love to have you guys on the test match already but I wanna um showcase this one tool from kurtosis and I think Gianni is on here also with the video um so the reason I'm already showcases is at the bottom you can see a mock Mev example I'll be updating this also um show a full Meb example so there's two modes the first mode will spin up um Mario's mock Mev um relay endpoint and that would allow the client teams to test the Builder workflow with a mock relay and the mock relay also has the ability to generate invalid payloads Etc so you can assert that valid payloads get delivered as well as invalid payloads get rejected on the other side you can have Mev type full and the kurtosis team has essentially got the entire Builder really infrastructure also use Meb flood to generate um transaction load so that you can actually have um the Builder build blocks that would be valid and the idea is that once the first half is working the second half can use that to test their um the entire relay build or update workflow and the best case scenario it is the way I'm approaching it is all of this is local so it would be perfect to have this working locally before we hit devnets if you guys prefer to still take part in devnet that's fine by me but we found that this local testing approach has been really beneficial for devnet heat because you can just do way faster iterations high level shout out here it's amazing um that's that's invaluable to be able to start testing this in a more localized but holistic fashion um yeah great job yeah huge shout out to Giani and the curdos's team I just let Kenny um say something at something if he wants to yeah thank you so much and people can start using it um this is the package and if you as buddy said if you pass in the right parameter you'll have your own test in it and if you want to scale it up you can run the same thing against kubernetes as well if you wanted to um you have to wait for four epochs to see payloads getting delivered on the the network and also just a point to mention we've just used the um flashbots map boost relay Etc as defaults there's uh it's a completely overrideable default in case someone wants to test any other relay or any other Builder or anything else so it's a generic piece of infrastructure yeah this is awesome I would you know this might be a longer term project but at some point it would be nice to have something that looks kind of like Hive and you know we get all of the relays into this sort of framework and then we could actually test them in this way so this is like a huge foundational piece so really good that's a really nice fun fact with the doses there's also go SDK built-in um so you can actually have go tests and that's not the same as Hive but it's kind of mostly there so you can have a test that's been up in the background um have go tests assert a pre-statement post date sweet and there is the one caveat I think did we say four epochs until uh it'll basically you know there are blocks flowing through it uh yes so after the first ebook the the flood component will start running in the meth component should be spun up because if we took a pillow and then after the fourth Epoch you should see payloads being delivered to the memory layer okay so it's not so much the software it's more like Fork timings and things that that put these delays in place yes okay all all the CRS don't have support for uh capella Genesis yet we're testing it and once that's um once that's clean then we'll be switching over and you'll save an ebook at least um but there is a tiny hack here as well um you can change the slot time so you can put slot times as six seconds instead of 12 seconds and still make it fast okay cool have you tried this is an aside but have you tried dropping the slot times really short we we nominated three seconds a lot of times to just test stuff out but you are hitting them it's for sure because it's the main net spec in the end right cool cool um yeah excellent thanks for sharing I'll add this uh these links to the agenda and I was even just talking to some people like yesterday about testing relays and stuff and uh yeah I think this would be really helpful to a lot of people so again excellent work yeah uh one question yes um how much of a 4844 like data types and flows is already tested and this kudosis setup uh I don't know if Mario okay Mario doesn't look to be on this call but I had a call with him or we spoke about it to get the mock Meb stuff up and running ASAP um the types have already been updated yesterday and I think he needs to integrate it into the mock Meb um middleware software whatever that we're using and the aim is to have that done sometime next week and then all client teams can ensure that it works with the mocks thank you yeah I think that'll be really helpful because it's essentially unit tests for these different pieces and there's probably going to be around a bug fixing just for those those things um then we can move to more full-fledged integration environments as we get closer to mainnet okay so back to implementation let me just see where we're at in the agenda here uh we covered most of this stuff about genetic Readiness so great work everyone I did want to call out the other relay implementations uh I know that we have uh block native with Dreamboat I believe boxer out has an implementation uh I only see some of those representatives from those teams here so just FYI this is also something that uh your teams need to be aware of is that the hard Forks happening so definitely stay on top of this stuff and uh don't be don't delay I don't know if either of you want to give uh short updates on progress and you know if you haven't looked at this yet that's also fine but this is a chance if you'd want to chat about anything come on like worry for instance like what what's the status of your 404 efforts like you're looking into it right I mean are you playing with it are you researching it are you still waiting for a bit more the reason the reason I'm not giving an update is because I've been busy with other stuff and ayal is leading that with the dev team so the reason I'm not giving an update is not because I'm withholding the information rather I know we're working on it but I really don't know the details because I've been working on multiple different initiatives so we are I can tell you for sure we are working on it I don't have the specifics because I'm not leaving the charge on it yeah I'm not trying to put anyone on the spot I was just uh if anything I just wanted to call it out just to make sure that everyone's on the same page and again understand if uh people are just getting up around to things now I I think I can repeat what what URI just said but we are also looking at many different Asia events like I've I was able to to actually browse the apps that you've prepared but I haven't got so far I haven't got any a big contribution that's like I agree or disagree with something like you know um we will be bringing those changes to you know to dreamboats as well definitely uh but like you know nothing particular you know no particular notes for for this particular implementation that you've done um in the me reason situate go first okay yeah and I'll just say uh I will be knocking on your doors as we get closer to like bigger test Nets like sefolio Gourley especially mainnet uh to the extent that we can like help test these relays and the interactions with Med boost and you know with clients I think that'd be super valuable both for your teams but also for everyone using your relays uh so yeah just uh just keep it in mind again that was kind of why I wanted to have this call was just to like get this everyone's radar uh so that we can all move forward together so I think that is good for denab and yeah so I did want to call this out uh I was working on some Builder software um so I've been talking with like the rest devs and uh We've essentially had this project to have like a nice open source Builder there's like the flash watch Builder uh there might be other Builder projects but um I'm not aware of an open source one other than the flashbots one and the idea here is just to increase essentially implementation diversity uh and just have like you know in the long run a very nice high quality implementation I just started with uh this uh last week or so and it's still kind of in a draft PR but I was able to land blocks on sepolia uh which was fun and yeah just gonna call it out especially if anyone's listening if there's any uh Russ doves out in the audience and you want to uh contribute please reach out and I think it'd be really good to uh have this effort here to have like a really nice open source Builder um yeah so just wanted to call it out and what else okay so from here I had some like I said open questions or proposals there's some things I've been thinking about doing some of them we've talked about on the call before at various times and yeah I guess um how do we want to do this I guess before we jump into that part of the call uh I see Justin and Michael here are there any like optimistic relay updates worth giving um just want to check in on that um not not too much I would say the we've been doing a few small refactors on the flashbots handle submit new block um Handler because the V2 version reuses a lot of that code but since it's running in a different code path like refactoring some of those functions out so they can be used both um in both places makes them more testable and just like more modular so that's very much like small code PR cleanup stuff code Health cleanup um other than that I think nothing too major to update honestly cool I guess one big development has been that agnostic has turned on optimistic relaying um I am I haven't talked to the team recently but if anyone here from agnostic wants to talk about their experience um that'd be good otherwise uh I guess we can talk about it offline yeah I'm not sure if anyone from agnostic is here um but yeah that it does exciting and definitely the more that we could build sort of uh you know let's say community knowledge around operating optimistic mode I think that pays super album more people I mean one thing I guess worth noting is that um there was a bug in the prism client which meant that the the the requested gas limit was was incorrectly set to to zero or something and um this was creating all sorts of false positives um for the optimistic relaying whereby the relay for the block was up was it was invalid and so we uh we demoted the the the the builders um and so I I think we kind of implemented a Hot Patch uh for that and we're we're waiting for all these uh buggy prism uh clients to to upgrade before removing the Hot Patch yeah that was weird that's good enough that one was a little weird because um the validated registrations basically said set the gas limit to zero and then Builders were still sending blocks with like 30 million gas limit so the blocks were still valid and we're still landing on chain but because they were in optimistic mode we processed them async and then thought that they would have failed um but yeah it ended up not not causing any missed slots but it caused a lot of um noise on the re-land I guess right I mean yeah that's an interesting question is like this is almost certainly a bug with uh you know preparing these registrations and the question is do we just ignore it even well yeah I mean it kind of implies it kind of implies that the builders aren't actually looking at the the gas limit that's set like does anyone actually do any validators actually set like a lower like a 25 million gas limit and then do the builders actually respect that like has anyone actually looked at that data yeah I mean really a little bit when we had this issue and and they do to some extent the doctor some Builders as well and I think they mentioned that some of them at least they look at the biggest relay and ask those relays for their registrations and we'll use those gas limits to set it and then there were differences between relays as well and what they reported for these validators so definitely some Builders are looking at it yeah I'm pretty sure the relay is validate this as well right so I mean that was where the issue came up so even if Builders aren't it should still be respected so my question is should we like broadcast this to The Wider community of validators because like we are still getting those errors and like we haven't like you know some clients apparently are not re-registering with us every every time and we have some failures from um like you know the blocks not really passing through that through our validation we got the the block the the gas amount is wrong so shouldn't we just inform that right more broadly but hey look at your present notes code bases because like maybe it would be good time to enforce the registrations right I mean if this was a prism issue then yeah it sounds like we should have them fix the issue um I don't know if anyone from Prism is here let's see parents said he wasn't able to make it unfortunately yeah yeah that's okay um we can follow up offline but yeah I mean definitely the bug should just be fixed in the client um and then yeah it is definitely an interesting question about how to handle in the meantime but it sounds like there's a patch to just ignore it anyway and we just assume that the validator wins 30 million gas what's the point of allowing them to set different limits well is this something that the protocol supported since like the beginning and like at various times we've gone back and forth around like okay should this still be configurable like I think the the irrational in the early days was like oh if we get to like 15 mil and like you know suddenly that opens up some dos Factor then allegedly the minor Community get together and like try to change uh the sketch limits in like a more sort of decentralized online way so there's like some there's at least a reason that it's configurable in the first place there's actually even an EIP at one point to basically hard coded to 30 mil and just take this parameter away from from anyone um so you can imagine going either way and I think while it's a configurable parameter it's very important that validators retain control because otherwise we're going to hand like a small number of Builders this number and their interests are like necessarily as aligned as the values are so I think it's important to provide the facility as long as as long as it is configurable and yeah I mean it's just unfortunate that there's a bug but it kind of suggests that we can probably think about uh better testing for these things um so that's something I can Circle back around adherence or someone in the prism team and the other CLS as well and uh see what we can do there but I guess I'm still not seeing the collusion Vector from the builders like assuming they want to lower the base fee by under filling blocks giving the proposers ability to control the max gas doesn't prevent that collusion right like the builders can all still say okay we're only going to fill blocks to 10 mil to lower the base fee and that's it's not it's not really about the base fee it's more if the gas limit is like you know if we want it to be Max 30 they could glue to making back 60 and then suddenly the blocks are too big for people to process not only that you could imagine that they would like to increase the max gas so base B is lower the lower the base the better it is the more money to be had all around and as somebody who was in the eye of the storm in a lot of the gas discussions there eventual takeaway from most core devs was let's continue let the community and the ecosystem decide on that we always have the new Option of like okay we hard-coded limited into the protocol having that already like at the hands of the core devs means that nobody would probably take advantage of it because if they would it would be undone anyway and so leaving it to the validators and back in the day to the miners to decide how big is too big for them or how big is not too big for them to process they would like to make it as big as possible but not to increase the state by too much blah blah blah so that's kind of like worth the extent with an equilibrium that core devs could always hard code it if needed and that ability by itself removes most of the attack vectors is it not set to 30 million now like you can you can't put a 60 million people not you could you could change it and it changes by increment of F2 I think 0.1 per block so if you are um if you're a major validator and you have a lot of stake or nowadays if you're a builder and you're willing to pay to win the block and for the blocks to do what you want then you could increase it over time by 0.1 increments 0.1 the increments yeah so there's like many security reasons why it's important to like have this and have it be respected and again I'm almost certain at least the flashbots relay software will verify this limit like it gets the preference and then it makes sure that you know it matches um so it's something that should be done and then if Builders are like ignoring it if anything they should at least get the signal that like the relay endpoint fails when they go to submit a block and uh you know there's a mismatch for some reason okay uh yeah thanks for those updates and yeah this was actually an interesting one it sounds like this is something we should look into a bit more uh just to harden this registration flow so let's see here um 30 minutes left in the call or no when was this going to I was going to 11. plenty of time sure so let me call this out uh this is I'll just put this in the chat so there's like a draft here of this proposal The Proposal is essentially refactoring out this bit to validate payloads when a builder goes to submit a block to a relay you know generally they make sure it's valid either synchronously or asynchronously and right now at least with the flashback software uh there's like a fork of guests that they use and it would be nice to uh have more client diversity here and so one way to do this is to have an RPC endpoint that we add into all of the various clients to just actually validate the payload and uh yeah so essentially I put together a little proposal for like how this could look um one thing here that we came to was uh I essentially only bothered with supporting this payment style of into block transaction so like the idea is that the Builder attaches a transaction at the very end of the block that does the payments and I think there's some more General payment schemes we want to support like for example using coinbase to pay the proposer so that might uh change some of this but I did want to call this out um It ultimately will require support from the execution clients so you know we're kind of blocked on that process and could take some time but I guess I'll just call this out uh take a look if you're interested and from there uh it'll just be working with the Els to get this supported from conversations so far people generally uh at least you know the high level idea they think makes sense with like this validate payload endpoints and then from there you know we just have to figure out how to make the rest of the payment Parts work um yeah so if there's any questions I could take them now otherwise we'll move on to the next thing so the goal here that for for relays to have different uh different El implementations they can use for validating blocks coming in from the builders or is the goal for there to be different Builder implementations for example the work that you're doing on the ref implementation for a builder yeah the first one so this is just about this part of the relay stack so right now and uh yeah I'm not sure how uh I guess Dreamboat does this but with the flashbot software today uh when they get a block they basically have like the Builder software that you run and uh it's like dry run or there's something like uh like validation mode that you run that software in and then that then does all the payload validation but this is just a fork of Geth and it's like a little funny because we like put a lot of energy and effort into client diversity uh both with the CL and El layers and then now with Med boost today you know it's what 98 of box are coming through this like one software stack uh that kind of makes that pointless so I think this is very important uh as like um sort of a values thing and um yeah so the more that we can push a separate forward I think would be really valuable Chris do you want to say something yeah I think it's a super valuable effort the less custom modifications we need the better the more standardized apis and client diversity we can achieve the better uh block validation is a big one um would be nice to switch over switch away from any custom patches um related to this is also work on using the new block submission apis of the CL clients so sorry for like switching a little bit but really is needed custom clients that were attached with custom code that validate blocks before they're getting broadcast and to an equivocation check also supported where lighthouse in prison that needed these custom patches that when they really sends the block for propagation it does some double checking um the clients now implemented a standard API this means we wouldn't need any custom patches anymore we can confirm that this generally works with prism and Lighthouse and the flashbots Really the main branch is already switched to the new apis and so just a heads up here you cannot use the main branch of the flashbots relay with the old patched CM clients [Music] um so you should also update your clients it's not yet production tested so use it here on risk but on the testness this seems to be all good Lucas yeah so like for that I can come and pick it up I'm thinking about two weeks ago so there are another endpoints that are called B2 and like in the aligning alignment of of those particular standards uh I haven't seen that it's actually ready in both prison and Lighthouse and uh the documentation States is actually create actually otherwise but the the problem is that like SSD and other pieces of that software are not yet supported so I wouldn't be so sure that it's it's actually uh 100 percent um ready to be using we are using the mixture like we we are publishing to two different versions of of prison and uh and Lighthouse so uh for the if I don't remember for which one but for some you still need to use it's probably three reason that you still need to use the V1 so the old way of how of block submission process and on the lighthouse you would you may safely use the V2 process however Lighthouse is starting to return some different warnings that it wasn't returned before that would cause your relays to to actually return some warnings so keep that in mind if you plan to use that I've seen that after the the version that is stabilized and after the version that really stopped there are some changes being made in both Lighthouse and prison for this particular for this particular changes I wouldn't be so sure that we should be using that give it some I will give it some time so to actually use it at production we've tested that and like one of those it's not yet ready to use definitely but it's a very nice addition and like I'm totally up for for using the V2 especially that it allows you to publish directly by using SSD so you don't need to do the Json marshaling at all you can just apply like eventually you would be able to just Supply the SMB format directly to the beacon node on the partition also like if you haven't seen that it has few different kind of deepness in the tests so you can you can you can either do some like pre-flight check for blocks and if you're interested in some more checks there is another level of security there and like I think we all need to run the the deepest one which is an equifocation check attack checks for those particular blocks cool yeah that's all thanks okay cool this is super important input thanks for sharing um maybe we can follow this up maybe you can write put this into like an issue on Android or map booster somewhere then um we might be able to um yeah true but definitely uh I'm just saying that like I I see the PRS and so that like prison is still working on that so uh that's why I'm saying that maybe maybe it will be better to wait like a week or so to yeah okay finished good thanks for commenting that super valuable information just chiming in here to say we value diversity in the code base of the CL client and the El client and it's a good opportunity for us to begin to Value diversity in the relay software itself yeah definitely and this is why I started with this uh the doc that I dropped for the EO because I kind of had seen some of these uh efforts at the the CL so I think this might take care of everything we want at the CL with this uh publishing point and these different broadcast modes um but yeah so something I mean yeah I guess it doesn't I was thinking if it would be like worthwhile to like you know if we need to like somehow synchronize the role of this and I suppose it doesn't really matter um but definitely for security I think you'll find that it's better to have these additional checks so if you are operating a relay definitely be following this and once there's uh you know well tested cross-client supports definitely you're going to want to be using this the V2 endpoint so that's one thing um let's see okay another thing I had on here was another proposal and I think uh some of you have seen this already um essentially the idea is moving the ballet proposals or sorry the validator registrations uh on chain in some way and I think the thing for here so some of this is the the design I think it's a little bit early there's like some feedback I got uh and other channels that I still need to update here um I guess one question is just like does anyone feel this is like high priority or like that valuable um I do think like ultimately there are benefits in the long run part of this is understanding if we want to coordinate as a group to like have this ready for Jeanette if not not a big deal um but if we do then that kind of puts us down a quite different path um so yeah I don't know if anyone has had a chance I guess I'll just like summarize briefly the idea so the idea is today when you make better illustrations I think they're even made in the seal then they're like since every Epoch or every two epochs quite frequently and uh they're just sent as like ephemeral messages to the different relays via HTTP apis and that works um this would say instead rather than use this sort of like off-chain transport we put them on chain perhaps even using the blob space with 144 coming up in this work and um yeah I mean a big thing here is like it's nice to have the consensus really on who has which registration at which time because right now there's no global view and so it can lead to weird situations especially with like staking pools where you can try to play tricks as a validator and if there's like some huge mov block then you could try to steal the opportunity yourself and just sort of quote run with the money and making this you know having a synchronized global view by putting them on chain you then can like start to implement different accountability schemes which I think is pretty important um you know down the line well yeah I'll just leave it there um again that being said I just kind of wanted to get a temperature check here um if this is something we're like oh yeah we should like definitely do this ASAP then you know that kind of implies doing it all work quickly um and just after some of the more recent uh updates on the the hard Fork timing you know I'm not sure we have time to also squeeze this in but uh yeah I was just curious to hear anyone's thoughts yeah Chris do you uh want to say something yeah um what what is uh motivation for doing this you know as part of the hard Fork right so so then it will you know enable doing this but why do we why would relays need why would relay work need to be tied to that like we can let the hard Fork happen and all the relays can do all the lift that they have to do in order to have a successful smooth hard fork for deneb and then after that that that capability now exists so that we we could sort of design this um well in in a more sort of calm environment because we're not sort of uh a little bit panicked about the hard fork and then and then afterwards right yeah no I mean that's a great Point um my only like very small Counterpoint that I don't even really believe at this point is just urgency is good for driving things um but I totally hear you and yeah I'm I think like the rest of us here today like we don't want a bunch of more Rush work that we have to do so yeah I don't think at this point it's going to make sense to try to like drive for any like hard Fork timeline and we don't really need to the only like real consideration is um you know you could even imagine a regime where like relays are taking both methods like they're taking the existing registrations and that flow and then you could also somehow look for more recent registrations and then you need some like conflict resolution and there's a question of like you know if I look in the wrong place for a validator like what happens um but yeah that being said those are all things we can work through and um yeah I think at this point then this is an idea if uh it sounds interesting to you and you have any feedback let's chat one thing if we don't like have to rush to ship it with our Fork is we can actually sort of quote test on mainnet which is actually nice it's just more convenient so that's like another small thing uh in that direction uh I have one thing here um so during ECC uh some of us were there and I think we had a lot of like really nice conversations uh one of them was actually uh some chassis Builders I had and they like were very keen on this idea that I think we discussed here in the past as well around having uh essentially some kind of websocket support or like some streaming notion for the beds right now the relays are like maybe we won't use the word Dost but they have like a huge load of like uh of you know calls for the bid and every slot because valuers want this but also I believe Builders use it to build strategically um you can imagine you essentially have like a stream that anyone can subscribe to that's essentially uh here's the top bid and then you don't have to like have everyone constantly hitting these endpoints um yeah I guess the question for the crowd is do we think this is worthwhile um if so I can make a pass that again some sort of proposal and then we can kind of iterate from there does anyone feel it's a problem with the current regime I guess that's a good starting point I mean I can support on the relays yeah I think London it really is a concern I think it's a manageable concern but it's infrastructure mostly like imagine 700 000 validators always keep the websocket connection open um where most of them don't need it at all like only one at a particular point in time if you would want to make it so only the proposal connected websocket beforehand then this would require a builder spec change and a CL change to tell me if Boost soon is your turn and start connecting um so this is something to consider I think it it sounds pretty wasteful to have all proposals connect so like a smart solution here would probably also include some sale changes just roughing out the scope here it is probably yeah I thought the point was like the the validator end stays the same they still call get header you know once using map boost but it's more that the builders would consume the websocket like stream so there may only be like you know 20 builders that need to be hooked up to the stream and then the proposers still only called get header the one time well but do they only call it once I think I mean at least in general like values could call multiple times and so I mean so there's like there's some well I don't know if they do today but like they variously could um well there's two there's two things here like you guys like you there's just two different concerns um and so yeah we could do it either way we could say hey this is an endpoint just for Builders I mean one concern here in the past was like essentially like transparency at this end point so like if we said oh as a relay only Builders can connect and it's like okay does that lead to weird changes to Market structure or like have some like information differential that Builders have that everyone else does not have and then even if it's like oh if the builders have this but then also maybe the single proposer like you may be in the same situation and then yeah I agree with Chris that we shouldn't it just have like you know a million validators just like taking up these resources um but you could do something where it's in the Middle where you say okay maybe like the proposal schedule that the relay has you allow say those what 64 validators to connect um and there's some like roll-in window um yeah so I mean isn't there like two there's some design space here are like two separate problems right one do we do we make changes that allow us to differentiate between someone who should be able to get this data or someone who's just doing it for some kind of Advantage like a builder damning us on payload I mean I'm sorry get hitter and uh it would require a pretty interesting change like a the ability to verify or sign somehow in order to differentiate between the two so that that's like a big change right um in order to you know adding websock if adding a websocket to to receive the get header data if that improves the performance of get header data because well because you already have a connection and you don't you don't need to go through the full HTTP handshake that's going to improve the performance of that and then anybody that is that wants to operate efficiently in the ecosystem including validators is going to use that like I would as a validator because I'm going to get uh faster um you know payloads I'm sorry headers and so it seems natural then that everyone would start to use the websockets because it's more efficient to you know faster lower latency get to get the data and uh speaking from our experience at block native where we run a very large number of web sockets using our menpool API and mental explorer that is a much much more difficult problem to manage in terms of Dos protection and just overall infrastructure management because of the stateful connections versus just HTTP so yes HTTP is not as efficient but it's much easier uh you know the worst case scenario is sort of easier to manage than the worst case scenario with web sockets yeah it's a good point but I do feel like at some point I really offer this and if it is better for the user then you know it will end up with this almost centralizing Vector where people will use that relay over others and then in the end all relays will kind of ultimately have to support this feature um oh yeah definitely something to keep in mind to uh one more not good one more point I want to bring up here I think there's a super interesting topic thanks for bringing this up too uh we should separates into two use cases probably proposal for the builders but what I do know is that uh relays are already collaborating with Builders to improve their latencies and to provide more performance submission methods these include like open TCP connections this includes grpc this includes SSC and 3C term submissions um also through optcp sockets possibly that could lead to a significant or like some performance improvements and so so some of this effort is already happening anyway I think maybe a question here is two years and really Community want to standardize and work together on what apis and mechanics to provide the builders or do we just um try out different things and see if they um converge yeah it's an important question I mean I think to the extent that we have powers Community here we can bias towards things that uh we think are good if we can all agree on what that means um but yeah otherwise definitely want to support experimentation so um yeah I mean this is kind of the point of the Builder specs and earlier specs and that's also a good search up and off point for for discussing these things um yeah I don't know if there are any other views on the call perhaps not right now uh let's see there was one more thing I have been wondering and perhaps I'll use this time to at least revisit the topic during the time of the low carb Crusader attacks I think in various channels some of us have discussed basically changing the Builder API so that the proposer actually never gets the block and it's now a responsibility responsibility of the relay to disseminate the full side block and that kind of just clearly eliminates these like unbundling possibilities I don't know if anyone yeah I'll just I'll open it there does anyone feel strongly either way about this there's like the one side where yeah you would just like eliminate a bundling the other side of the coin is that it's very much put in like essentially the entire like block flow of the whole network in the hands of again like what seven actors um which feels weird and again like takes autonomy away from the validator even if only marginally but uh yeah I think it's an idea of worth exploring right there's a question in the chat like do you do you relays want more responsibility and that's like another consideration here as well uh is that yeah you kind of have even more to do and there might even be more pressure on you to uh not mess up and the consequences could be even greater so um it's worth mentioning that we already have a one second delay in there so like functionally if if the proposal calls get payload passed like T equals 2.5 or t equals three like the relay still is the sole entity able to get that block published on time you know because with the one second delay and then the the payload being sent to the proposer and then the proposer gossiping it if if they're late at all they're gonna get reworked out you know so it kind of already feels like the relay has that that responsibility um it's also worth mentioning that the the low carb Crusader is like reloading they're deploying new validators so right anyway sorry this the the one second delay you mean in between um like if I call get payload it waits one second before serving the response so it goes through all the checks um and then it tries to publish the block through the beacon node if that works then it wakes it waits one full second before sending the block back to the at least that's that's what we implemented in the in the flashbulance Pro yeah everything everyone done exactly the same uh however that's pretty both assumption about a glossy player performance and the ability to actually transmit this block over the network and as we were talking with with three elements and other concepts of their clients it's not that easy and like this one second is a fairly random number so it may not be enough at some point so as much as I am not sure that we should go in that path right now that we should all just publish blocks and never return that to the The Proposal I also don't sure I'm also not sure that that one second is a good idea for for that particular one on the very long run yeah I think the one second was more of like uh sort of hotfix like let's make sure that this isn't uh going to be a disaster while the attack was ongoing and yeah it could be the case that uh the number could be tuned for sure um yeah so okay I mean it doesn't sound like there's super strong consensus that we need to change this API today and perhaps we'll just keep an eye on these different latencies I mean one thing we can't say about the one second is that it seems to be working right because that's what I think most of the relays and all of them run and you know the system this works um yeah hey is there any opinion from the ethereum foundation on this because it just seems pretty dramatic to to say that we're just going to give up entirely on decentralization of of block proposal and we're just going to go full on centralization to the relay Community it seems a rather well I don't think that's what I don't think that's what this I don't think this that's what this is signaling so you can still zip out there always but locally um I think this is like like the argument would be okay given almost regardless of adoption although you know the adoption of that boost does motivate sort of the the gravity of the security concerns but given the the security of the system just on its own you know this could make it more secure um yeah I don't know if we're gonna get like a EF official statements just because there are many different views at DF um I do like personally I do think it's it feels very wrong to me to take this degree of Freedom away from the validators so like when I first heard the idea I was like no no like that's not probably the right direction but it does really cleanly solve the unbundle and attack and to the extent that we also want the Boost to have integrity so that you know this PBS construction is like used and like trusted then that could be an argument for for this change um yeah here's my view fundamentally from the PO by the way map from Lockdown of your POV from the perspective of the validator is they really want the relay Network to operate like a utility They Don't Really Care where the oil comes out of ground how it gets moved across an ocean which you know refining Planet goes to how the electricity gets to the house like all they want to do is turn on the lights and the lights go on and we as relay operators are increasingly incentivized to operate as a utility where we back each other up and things like that and so this is really a question of do we put another task on the relay utility in the interest of increasing security and I I understand some of the philosophical things here but let's be honest again this is one of these things right I keep talking about this which is the relays already do much of the heavy lifting and another piece of heavy lifting doesn't really change the state of affairs from an external perspective um and and two like at the end of the day the the relays doing their job is critical to the orderly operation of the network and that's going to be true for the foreseeable future I think one of the other questions about this is does it further enshrine the relays and my comment is the relays are already pretty damn enshrined so you know once we view if we were to view the relay Network as a utility that needs to operate as utility I think this is a very fair question but in so far as we try to play it both ways like we are right now it feels very uncomfortable so you know my view is anything we can do to secure the network and make it more reliable is a really good thing um as long as it's something that people opt into which is what's happening right now so anyways food for thought yeah yeah thanks for writing that perspective um wait Matt what do you mean by playing it both ways right now that we treat the relays as individuals that are quote unquote competing with each other but there's no economic you guys know this for me and that we back each other up right that really what the network wants what the validators want is a monolithic service that they just address now maybe they opt in a certain parts of it because they care about these values and those values but at the end of the day there's this fundamental disparity between having it both ways is how we the how the network views the relays and how the network wants to interface with the relays one by Network I mean the validators again this is where Miss slot insurance or you know when we have to reimburse from the slots and things like that like do your job and if you don't do your job pay us back right and how we as the relay operators the small set of actors that carry the network on our shoulders quite literally right view ourselves and I think and again I don't want to derail this conversation but that at least a majority of the current relays recognize that this is where where we have more in common than we have in opposition to each other and the point of competition is kind of pointless because what are we competing for but but a Leaderboard on relay scan which is easily gamed so my my view is we should acknowledge the utility nature of what we do we should acknowledge that we are all contributing to a con to a consistent service and we should approach it as such and you know anyways it's my POV uh having talked to a lot of validators having talked to a lot of relay operators having spent a lot of time on these conversations at ECC that and you know we want to encourage again more participation we want to encourage more diversity we want more members of our supply chain not not fewer so anyways I'll stop does that answer your question Ernie it does thanks I was kind of like I wasn't sure and I agree with you for the record but yes also on the previous point about the get header and that like it seems to be also relevant there to the previous topic that we discussed but okay it's a burden of you know being hammered by all the builders and we're kind of well let's open it up for everybody because we want to allow for transparency Etc but kind of like everything else burden falls on us and it was like okay fine we want transparency as a service provider let's make that service like um or monolithic service and let's make it available for everybody so everybody could see but yes there is still this mismatch on so generally agree with you okay uh yeah thanks for those perspectives that does I think probably tease up for this next Point uh because I know Tina's here I think she wanted to say some words uh Chris ortina do you guys want to uh to chime in hello hello can you guys hear me I can loud and clear amazing awesome welcome back Stokes with a dearly missed you um but um well in the past a couple weeks um I know there's a lot of uh actual movement on the r d front so it's super exciting um uh at the same time um since our last Med boost Community call and um our gathering in um in Paris um um where I basically um pushed forward um quite a bit and have communicated with many in this current call um about the next steps on PBS Guild um or PBS fund or PBS Foundation there are many names floating around um and I think um it's at a stage where we have a clear timeline and a Next Step so happy to share a little bit with everyone I also um um I may have just also posted um this um the three of the proposal for PBS Guild um on the um collective.net that I'm happy to share the link hopefully this time is public um and feel free to comment I tried my best to incorporate um I think there is like 50 to 70 comments across uh the page so um for oh no um uh Forum setting my apologies uh yeah that will get fixed um but um high level tldr um sorry if I'm uh repeating myself a little bit for those who are who may have less context uh context on this um so basically um in um I think well we we speak about relay economic viability and we know this is an urgent problem at the same time it's a very very hard problem to solve um in a sustainable way and the irony is sustainability is in the name of the problem that we're trying to solve and so um well in Paris I think I had felt the need and having met everyone I truly have felt that there's something that we gotta be able to do to move things forward um but what is it that doesn't um basically put us into rushing into a position that we will regret or essentially that could um have irreversible consequences for our ecosystem so um in um in reaction um basically in the past two weeks um I think there's a lot of excitement and momentum that gather around the community about wanting to contribute um to help out uh whether it's relays or the uh solving the really economic sustainability problems or the harder trade-off space in um along the design space of PBS r d so um basically PBS Guild is this vehicle that's a grants program um it should start out simple and lightweight and um start out with um a minimum of one million dollar in Grants funding as a threshold to kick it off and um have 50 of the initial uh funding that can be set aside to ensure the independent relays as well as um research and data relays that can actually help us understand um and be more accountable to the ecosystem um as a whole so that um is that part I would say is uh almost there um from legal uh setup the uh to um also in terms of like securing the funding um I would say where probably one uh 1.5 weeks away um and the other side the other half of the initial funding for this Grand scheming vehicle vehicle is um set aside for some of the backlog but thorny issues that we probably want to essentially incentivize the researchers who have more time and and with on their hands to tackle so in The Proposal um I have updated a new list based on the previous two weeks feedback that I've collected from um folks within the community who have seen and commented on the proposal as a suggested list of um research brand directions and all in all um putting everything together I want to say that I feel like I can finally take a deep breath and um actually say that I think at least for the next half year um I think we will be able to support at least five relays within the ecosystem um and um that hopefully can get us more time and also a just a more mind share to think about how to actually solve it and um hack on some solutions together yeah um I think that's that's it um if you would like to uh if you're interested in any of the more boring operational details on oh how this is going to be set up I'm very happy to share to the best of my knowledge in terms of how this vehicle could work and also clarify um questions I think I have receiving also in the past two weeks as well but it's also explained in the in the latest proposal um in terms of how to structure and how to how how we think about governance and what is Splash House role in this but happy to answer any questions or share any of the coins I thought I wanted to um be blunt and uh and and and and and say the most important things is that I think timeline wise um end of this month will be a good uh good starting point um and um I think uh it's likely that we can aim for um the grants to be ready to deploy by the one year anniversary of the merge there's a lot of work to do so let's go yeah yeah just briefly looking into it we're talking about uh up to five relays which are not integrated with any Builder or relay I assume it's not integrated with any Builder or searcher and when you say advancing infrastructure resiliency and neutrality are we talking about like okay effect transaction censorship get the book like like we're not in there anyway because we run a block Builder um but are are this limited still to only those who do not set who do not censor OPAC transaction so I think this is a really really good and important points um I think um I think there's I definitely agree with um I think there's some comments and feedback from the previous version um that we do not um want to politicize unnecessarily I think it's there's a lot of problems to solve and I think we're all in it together um credible neutrality entails us not coercing each other to make decisions um that they're not comfortable with and we as an ecosystem can only do our best to um diversify um geographically as well as incentivize people who have different interpretations um that said um I think that this is something that's not a heart line but it will be a strong uh discretion in a sense of like um um it will be very difficult to actually um this is a public goods funding um in the centralization uh while we're all working towards decentralization um what should also do our best uh operationally to maintain um the the decentralization of ethereum I think there's when we put out a grant um there is a mission there so um if we can choose the ones um the relays who are um genuinely and naturally in the position to do so I think it will be really for the best if we had um I don't know if you if um everyone here has checked uh the recent ovac uh kind of uh that dashboards it's not looking very good um so yeah so I think there's something that um like from my personal perspective as well as from flashbots we're doing um our best to dispel misinformation and um I uh think that especially the recent uh the the recent inclusion list proposal and um we should really make sure that it is um it can have the resource and mind share to focus on it as well as we should involve some of the people within the policy scene to help um explain and help us get out of this current Quagmire soon yeah cool very exciting thank you for all the work you've been in this you know um The Proposal is like pretty long so I don't know uh like people probably want some time to digest um but yeah very exciting to see this and to take the next step forward yeah um so related to this um well I guess it's not directly related but I thought the timing will be really nice um if SPC is coming up uh one of the reasons I really wanted to um hopefully get the um everything set up before um SBC MAV Workshop is also to be able to I know some of you may uh plan on going there and also there are um uh quite a few um pretty plugged in Academia uh Academia friends who will be also speaking at a new workshop there so um I think it'll be really good to either do like a research-a-thon where we actually um um this time have something more practical like I think Terence has some idea in terms of wanting to move forward uh accelerate the progress of um of the prototyping and I think there's a couple um problems that we also identified and also I think maybe we can do a you know Workshop um on um the trade-offs of the various um essentially CR Designs so I don't know if this is something that anyone's of interest and I think this can be a good opportunity and we can basically refine further what problem we actually really need to solve and who can actually commit to solving it um like form the core be the champion of these particular problems that maybe um more or less on the backlog of uh uh of of the main researchers uh from the AF I'll be at SBC and looking forward to having that conversation that's for sure yes yes um data transparency is another dimension I have a ton to um uh to chat with you um Matt and anyone who's interested on that because there's that's another dimension of uh PBS guilds um um I think principle or pillar um so that uh and on that front um there's actually some Grant work I started to I'm starting to to do uh communicating with um the best data scientists that I can find uh in uh who's deep in the PBS land um to um unfog the map um to map out um uh I was in an extended order flow Supply map um and also to uh uh and and also to solve some of the um data sharing problem and uh data essentially public goods data relay is one of the things that I recently added on the latest version of the PBS skill proposal um so happy to also move that initiative forward but there's too much going on on that proposal so please um comment or uh you know just leave a message happy to follow up and uh ping me um on telegram if you're interested uh to do a research-a-thon or a workshop on any of the topic I mentioned or something that you um want to um bring bring up cool yeah rvspc uh so looking forward to see you all there and yeah if anyone is around and wants to join us reach out um Tina can I just going briefly over that um what's the high level pldr vehicle of this who decides who gets the funding like oh great question who's in charge of where the money goes yeah so uh so high level set up it's a cabin memberless Foundation that's like essentially the uh the the the legal uh setup uh we did basically a bunch of research and just uh luckily uh I think this is the Playbook that protocol Guild also have um explored quite uh far so it become um quite easy for uh and also I'm relatively familiar with the setup um and in fact it's really friendly for Dao's it's uh as well as flexibility um so uh what you see on paper basically is like there will be a non-executive independent director who's probably going to be a good accountant hopefully they can count uh the money correctly as in addition to operating a multi-sig uh and uh but uh um and then there are two paths in terms of best practice uh when it comes to these Foundation setup is one is a console based which is a committee of some source and the other is to dedicate it to quote-unquote a community of decision makers so um this ladder is very friendly for daos and um the former is more suitable for something that is still highly uncertain and exploratory um uh and kind of needs to put in the early work uh which is um the the path that we're most likely to take so it's actually quite convenient because um we need a grants committee anyways so the council can be the grants Council and so how I'm taking the current approach is like a face approach so starting um when we announce hopefully hopefully to make the timeline of uh September 14th um that'll be a good memorable day um and um going forward for six months that will be the pilot phase and during this pilot space um um I think that we want to have uh three to five um grants uh uh reviewers basically who sit on the account the council I think um what you see in the proposal is clearly not very fleshed out in terms of the the the heart Criterion um and I think it's also not in my place to actually set in like I would say exclusion excruciating detail on how the grants should be done so I think one of the first things that grants committed me to do is to actually uh flash it out and or reduce or like you know adjust as needed and um and then I think at this current stage I I kind of in my latest proposal um provide an explanation because there's a lot of discussion around PBS Guild versus PBS fund uh but in my mind ideally if we can move towards a guild but that Guild the first step is to actually figure out who um else from Stokes and neuter are doing the work on PBS right so like um I would say this is the first step um in fact mapping out the the key research research areas we we would we should be able to know within the within the the ecosystem who is doing what work on it and I think um so the first um policies is to um find the high priority ones the high priority problems may not be the highest priority on the Epps roadmap um but it may be something that's more ecosystem oriented because that's the whole point is to have an ecosystem um um grants vehicle so so that's I think the gist of it um and I think we should evaluate at the end of six months um and uh in terms of whether to scale up uh or down the effort um and and we can go from there and during the whole time I think the funding just like protocol Guild can continue to um streaming um and I think we will um just keep a door open and see how it goes but yeah thanks appreciate that anytime cool I think that might be a good stopping point uh we have a few minutes if anyone uh has any other questions or any other things I'd like to discuss but otherwise thank you again Tina and yeah I think we're all excited to move forward and figure out you know how to make this work thank you thank you everyone have a good evening okay yeah then I'll uh call that thanks everyone 