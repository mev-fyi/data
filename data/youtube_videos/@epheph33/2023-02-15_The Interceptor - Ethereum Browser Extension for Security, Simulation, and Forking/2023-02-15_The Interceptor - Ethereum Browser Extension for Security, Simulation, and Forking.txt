hello my name is Scott Bigelow and today I'd like to talk about the Interceptor a browser extension that works in conjunction with metamask that improves the usability and security of interacting with ethereum dapps adding the Interceptor adds things such as transaction simulation being able to see what transactions do if they are confirmed on shame provides built-in scan protection creates simulation Stacks which effectively act as Forks of ethereum that allow you to have lots of transactions that you are stimulating at the same time and also allows impersonation where you can take any ethereum account out there including metallics or anyone you find and and add it to the Interceptor and browse ethereum as if that was your private key that you were operating with even though you can't create signatures and the way that it does this is where a normal dap might communicate with metamask and have transaction signatures that look something like this for the confirmation dialog the Interceptor puts itself before metamask and intercepts the attempts to create transactions and provides simulation and other functionality before eventually a confirmation hands that transaction back off to metamask to better understand the functionality that the Interceptor provides let's first look at an ethereum dap without the Interceptor installed here we have uniswap we are on the gorley test net where we have a small amount of gorley test net eath and we'll go ahead and conduct a simple swap so we'll go from eth into some Gorly uni tokens we'll click swap here is the metamask confirmation dialog and we're told what the the gas fee is for it we see how much eth total this thing is going to cost us but all we have here is that we're really going to call the execute function and going into this data and hex doesn't really provide much other usable information we're left trusting that the the DAP that we're on that created this transaction is going to do what it says but as we've seen in many cases it's possible to end up on dapps where you're on the wrong URL or the front end was compromised or the dab might have even made some sort of a mistake and maybe has like way too much slippage Saturn like doesn't have the right output that it's set this interface doesn't provide any confirmation of what actually is occurring on chain we're left trusting whatever created the transaction let's cancel that come over here and let's go ahead and download the Interceptor for Firefox this is a simple one button download and we're working on getting the functionality for for Chrome as well but we have instructions for installing Chrome it's just a few more steps okay now that we have the Interceptor installed we can see we have a new icon up here we can click on it and uh see some some of that interface but before we even do that let's just use it we're going to pop back over to uniswap where we are still connected to gorley using the same account and we're going to do the exact same purchase that we were doing before using eth to get some Gorly uni but when we click swap here instead of getting the metamask pop-up we're going to first get the Interceptor pop-up and this has actually taken the transaction to a node and said hey if you were going to run this transaction what would the full outcome of this be it's not reading the data and seeing what it's attempting to do it is actually executing it on the evm and detecting the results of it if you look at the transaction outcome this is what I think is probably the most interesting element which is by running this the net effect will be that this account loses 0.1 gorley test net and gains 0.1355 unit swap tokens and so if we click sign with metamask only then does it forward and you're left with all the same user interface elements we had before but it's already gone through the intercept and we've already verified what it is that it was going to do so we can reject this okay so testing on gorley is one thing but I think it's a little bit more exciting to test on mainnet so let's do that let's change our metamask over to mainnet and we can see that this is already detected that mainnet has got switched to this detected it so everything works out great so let's do the same thing let's try to buy 0.1 say uni tokens but we actually can't do this because this account while it had some gorley eth has zero mainnet Heath so what we can do is come over here and switch from signing mode to simulating and what that means is that we're no longer going to pass transactions off to to metamask but we can start lying about the state of the network to do interesting things one of the first interesting things we can do is make me Rich so here we have zero balance we're going to go ahead and click this button and we're effectively creating a fork of mainnet from the current block and in this Fork we are giving ourselves 200 000 extra eighth and we can see right now that uniswap thinks that we have 200 000 if when on mainnet chain if you were to look on either scan nothing has changed at all but it gives us the ability to play around so let's say we want to um how about take 10 000 eighth how much how much you need can we buy for that okay uh two million uni let's actually change this to a different token let's do die I think it's a little more exciting okay for 10 000 eighth we could buy 16.1 million die and again we're in simulation mode we don't have this 200 000 eighth let's go ahead and do it anyway swap it is doing the same sort of visualization that it was before and if we go down to this transaction outcome we see that if you were to do this you would lose 10 000 eighth but you would gain 16.1 million die and also we can look at that value of what 16.1 million die is worth and we can see what these slippage is so we can see that we are getting we're paying about what you would expect to pay for that size of an order and that we're not buying a bad token or getting the bad exchange rate uh if we come down here again we can't sign with metamask all it was before but we can simulate and what that means is that we are taking that transaction and we are pretending to run it on our Fork of mainnet if you come click on on this icon we can see that we have building up a stack of transactions where we have the first thing we're going to do is we're going to make you rich the second thing is we're swapping a for die and this hasn't occurred yet but we can see that this is actually taken place as far as unit swap is concerned because uniswap is asking the Interceptor to to serve up these ethereum requests and so it is hitting our Fork of mainnet now this isn't tied to a single tab either so I'm going to just go over to curve here I haven't changed anything we still have the simulation stack and if we're on curve and we're like okay well let's take our our die that we just acquired it thinks that we have 16 million die that we just bought on uniswap and we can go ahead and move those over to let's say we want to buy some wbtc I wouldn't be a I would do 10 million so we're going to swap 10 million die that we don't have for 357 wbtc that are actually going to land in our account but this is what would happen if we had these amounts now unfortunately we've never interacted with curve because we never interacted with anything so we're going to need to do an approval just like you do whenever you first come to any site where you've never approved the contracts before and just like the swap transaction can be simulated this approval can be simulated as well and we can see that the visualizer tells us if you run this you are going to allow this contract to spend all of your time come down here to simulate and when we say simulate again it has added it to the stack and now curve thinks that we have approved this contract because it is also making all of its queries on this Fork of mainnet that we have created and so because of that now we've approved I to curve we can go ahead and say swap yes I know we're getting a bad fee for assets that we're not actually interacting with and again this gets added as well we can see the net effects we lose 10 million we've got 257 wrap Bitcoin let's go ahead and do it there we go now we have 357 wrapped Bitcoin and if you come over here to our etherscan you can see like nothing has actually happened this is all happening for pretend but it lets us see what these dapps do in these scenarios and allows us to basically to investigate what would happen before committing to those transactions on chain in a way that we can't reverse uh so let's go ahead and go back to uniswap and I can just show you that unit swap now believes that we have that 357 wbtc that we just got when we were on kerf some examples of why this can be really really useful are the ability to check that you are buying a token that can actually be sold later you know we've seen a lot of scam tokens where you can buy them on unit swap but you can't sell them by going through this round trip before actually doing it you can see that you can sell a token before you are required to buy it you can also check that the token you're getting is the right one you know we've seen other issues where people have accidentally bought tokens with a similar symbol that have almost no market value by checking that you can buy a token and that you can find another Market to sell it you are verifying that you are that you're buying the right token uh the other thing to note here is that because we are in simulation mode and not actually required to sign these transactions to do any of these things the account that we're interacting with doesn't even need to be our own we can come here to change one of the first things that we instrumented was was vitalik's account and actually we're going to need to make him rich but we look at his real balances right so we can switch over to vitalik and we can see what vitalik has for eth on his his you know vitalik.eath account and we can just like before we can uh we can conduct trades pretending that we are vitalik uh and this works with with any account that you find in the wild if you want to see what interacting with dapps looks like using other ethereum accounts all you need to do is come and put them into your simulator and interact with them and stack transactions and operate on Forks of ethereum the last feature I'd like to show you is the scan protection that is built into the interceptor to show that I am going to switch back to our regular metamask connected account although still in simulation mode so that we can make me Rich let's buy a little bit of dye it helps show the scan protection if we actually have some dye to operate on in our Fork of ethereum we'll say swap we'll go through the regular process check the transaction outcome it looks good simulate and now any doubt that interacts with the Interceptor will think that we have 1600 die to interact with so let's go over to abi.ninja this is a very simple website that is for developers that want to interact with contracts in a low-level way so we'll go ahead and just say die and this lets us send very simple requests without a fancy dap GUI to just to test things so one of the things that commonly happens in ethereum is that a user might accidentally send tokens for die to the die contract itself this is a very common issue about six hundred thousand dollars has been lost this way where a user has you know copied the address for the the diet stablecoin because they wanted to interact with it and didn't copy the exchanges address or their friend's address and accidentally sent die to a die itself where it is not recoverable so we'll go ahead and try to do the same thing but using the interceptor when we click Send here saying that we want to do this again we're just trying to add this to the stack but even doing that it recognizes that you are doing something that is likely not what you want to do and is going to result in Lost funds and gives you a little explanation here and also blocks the ability to simulate if this was in in regular signing mode this would also be blocked as well until you click this blocking checkbox this is you understand and then you can move forward so if it falsely recognized something as a as a problem you can still move forward but this should block you enough to realize that a mistake has been made and you probably don't want to do this another common scam that we've seen is users that are tricked into approving their assets to a scammer so normally when you call approve you're supposed to be approving a contract and that contract has special logic in it that can protect your your tokens but you could also approve just a regular address so some other ethereum address that isn't even a contract and there's very very little reason that anyone would do this and normally when that's happened it's because a user is getting scammed or is approving the wrong thing and so we have a protector in here built into the Interceptor where I'm just going to grab this this is just some random address I don't know anything about this I just clicked on it on on etherscan where I'm going to grab this address and I say I want to approve this account here which is not a contract this is just some random user's address and I want to approve them to spend some of my die when you send this off to the Interceptor the Interceptor says you are sending an approval to an externally owned account which basically means that it's not a contract and there's almost no reason that users would be doing this unless they're getting scammed and again it puts up a blocker that interferes with the ability to proceed and adding this to the simulation stack or signing it so in in you know doing this we can prevent users from from getting scammed by performing inspection of what it is they're doing using the common scams and mistakes that users make to prevent loss of funds okay and with that we have covered the main features that are provided by the Interceptor transaction explanations scam and mistake protection the simulation stack which effectively gives you a fork of the ethereum mainnet and impersonation the ability to view dapps from the perspective of accounts that you don't have the private key to so if you're a user of ethereum and you are using Firefox or Chrome check out the Interceptor it's currently free there's no pay there's no monthly there's no premium version and visit us at dark.florist we're also available on Twitter our handle is dark florist as well and it'd be great if you could like the video and subscribe for future updates we're going to be releasing new content about how to use this simulation stack to create bundles that are flashbot style that can all land on chain at the same time and leave comments about any features you'd like to see or issues you run into I'd love to hear from you so thanks a lot talk to you later 