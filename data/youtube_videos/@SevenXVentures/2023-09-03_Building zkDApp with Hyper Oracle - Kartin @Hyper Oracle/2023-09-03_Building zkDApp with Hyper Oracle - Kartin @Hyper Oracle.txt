videos like how to build a gkd app and what's dkd at right let's build with like hyper Oracle to build a zkdf so before we go into Zig idea we need to have the concept of what CK Oracle so ZK Oracle essentially is like for ethereum at least it's this structure that we have like the consensus proof and we have the proof for the event and proof of this day and proof of transaction and also enable custom compute for uh the verifiable custom compute in the dkvm so basically hyper Oracle can unlock this following ability for the superpower for the smart contract for instance you can have like a historical on-chain data for your smart contract with Hyper Oracle and also you can have like complex compute extension for hypo Oracle to use in your smart contract and also have you can have a multiple data source in the future we can support like internet data source for your smart contract too so hyper Oracle is a programmable ZK Oracle protocol so what's dkdf it's tkdf essentially is the instantization the instance of the intent compute so if you want to have an intent yeah it's what you're talking about most likely is like the zkd app so dkdf is a d app that utilized the ZK Oracle to perform the computation and the data fetching so with hype Oracle we are empowering The Nest weight of the zkd app which will be Novo secure and permissionless and also it's really easy to build with Hyper Oracle to build a ckdf there's many usage for ZK Oracle in your smart contract the first will be like the bunch like New Divide usage like zkam and kind of like a fully Enchanted related and fully Unchained ETF and also we have like enable words AIG CFT for a CK Oracle you can also perform some little bit like ml inference we'll talk about it later and also can have a secret information frame for recursive payment and some schedule on channel ability here is the study case for what we can do with the zika Oracle so uh let's go back review the history for the development for the D5 so in a defy 1.0 we have the centralized exchange that like we have the erc20 that like we can issue any tokenize everyone and organization entity on chain but we only can do the swapping in a centralized Exchange so that's why we have a D5 2.0 am that will enable people to generate the token tokenize themselves organization on chain also swap the token and provide the liquidity on chain and but we still have another problem is that we cannot have the derivative that the underlying the underlying asset is tested in token fully Unchained what's the problem the problem is because like it would be really expensive on the gas fee if you put the whole derivative condition checking on chain on automation on chain in D5 2.0 so that's why we introduced like the zika Oracle to have the Decay automation for the D5 3.0 that will enable like fully Enchanted related and um like fully Unchained ETF for instance uh before you have a zika Oracle the only way you can do a fully Unchained the ability is that you have a smart contract on Chang and then you do the triggering for the smart contract every block to check if fake the condition for the clearance for instance I want to shop the eth to the half of the price we have today and then what we need to do is that you need to call the smart contract every block and then and then check if it the is the eth price is like the half of what the heat the strike price or not but with the zika Oracle you no longer need to check every block you can just basically like have the Automation and only call the smart contract when you need to call the smart contract and why building with CCR is better than the transition Oracle is because like it's safer faster and more decentralized the Oracle we use today most likely like channeling type of Oracle is like pretty centralized and pretty unefficient and manipulatable so the way the workflow for traditional Oracle we have today is basically you aggregate all the computation itself and data fetching into some certain like centralized Cloud node and then we pull them into a smart contract through this trusted entity and by this way like all the people need to stay old Oracle know need to stay the certain token into the Oracle now to ensure their computational integrity but sorry and then with the zika Oracle we no longer need to require the Oracle node to stay the token to ensure Integrity instead we just use cryptography to ensure the computation security and data fetching integrity and then use the smart contract to verify instead of just to do the data fetching and computation extension so here is the comparison between the staking Oracle that we use today and the secret Oracle that we are going to use in the future is a paradigm shifting so you can tell that like transition Oracle can finalize the thing that requires one to two minutes to finalize a data and computational itself when CK Oracle can finalize that within 12 seconds which is the ethereum block time and we already have the Benchmark today and the way we keep the Oracle Network fully decentralized is the idea we call it proof of Oracle work so what is the proof of Oracle work and how it gonna keep the Oracle Network become fully decentralized and like essentially receive so is the whole procedure the workflow for the flow of Oracle work is that the developer will put down the Bounty for the computation test that they want the CK Oracle to compete with for their smart contract in this case this guy want to compute a blackshop model for its smart contract there's a multiple reason why smart contract cannot do blackshop model for instance the square rule the log committed and like the distribution computation this mathematical statistic computation and um so smart contract cannot do that so that's why we need CK Oracle to do that but we can send out the signal through the smart contract Say Hey I want to do this competition and I think this job worth like five token or like one if for this job for my smart contract every block probably it's too expensive probably like 0.01 if per block to do the computation for my smart contract and then the developer will put down the bounty in the DK graph Bounty and then all the ZK Oracle know will compete with each other to finish the computation first and submit the proof first into the verifiers mark contract so that the smart contract can check if the result is correct or not after it pass the verification in the smart contract uh it will TransPass the result into the target smart contract that developer want to be triggered and also transfer the computation itself into so um I'm going to introduce this like CK graph Studio which is a web IDE that can help developer to develop a zkd app within the afternoon that's the purpose for this Hacker House that like to make it more detail so if you guys have any questions for how to make a GK graph for a zika error code that you want to program with you can ask our expert soon link is here uh to see about SharePoint more the technical detail so basically this is cider a zika graph studio is essentially equal to like a remix for solidity that will enable developer to program a zika Oracle in a website that they don't need to spend time on figure out the dependency and stuff basically a senior solidity developer can develop a CKD within the afternoon without knowing anything about zero knowledge proof so there's a menu use case for zika Oracle and um so like uh many use cases like the one I mentioned earlier is like the D5 3.0 use case that's like fully on chain ETF Order on channel derivative and also you can have like some use case like security use case like a zero s hack that basically utilize the zika Oracle to uh to do the security check for a smart contract and if like the hacker can have a smart contract successfully but he can propose uh propose a bounty into the protocol to say hey I had your protocol if you pay me certain amount of money I will review that and not execute this certain hacking Behavior but if you're not even they're going to utilize the zeroical to do the hacking by themselves okay and um so basically it's like a negotiatable protocol for hacker and there's a new usage like ZK stablecon that's like fully Unchained with 100 collateral and I also have like some down management uh for their smart contract like Els use the zero code to basically manage their well for voting result because they pretty often need the voting result of every block and so and also what's more than the zika Oracle with building with Hyper Oracle is that we propose a new mechanism and the library is open source already and it's already enabled stable diffusion llama and churchibility on Chang and this is called opml and this opml Library you can check out in hyper Oracle repo and can utilize that to build something cool with like this if supported model so you can have the model itself on chain compared with tkml the good thing for opml is that essentially we can do any kind of model as long as long as you can run in a computer for the inference you can have that for your smartphone chat and uh but I would say the problem for opml today is like in the most ideal situation that we have CK fraud proof for the opml we will need still need two block time to finalize the ml inference result into a smart contract and also the guest feed a little bit too high right now without CK fraud proof but we're working on it if you want to try out how to put a uh on chain machine learning this will be the best Library you can chat right now in the market I think oh thank you here's like this call please join a community Through the link you can also check our progress in GitHub and follow us in Twitter yeah basically that's it the most interesting use case you've seen people developing so far yeah I would say like the uh fully Unchained the relative guy yeah he basically built a repo that called decision ETF right now so what they do is like they want to put the SP 500 fully on chain uh basically it's like um have like top 50 most traded erc20 token in the decks and then uh this Mark crunch only do one thing and one thing early that is like like SP 500. so he just like so SP 500 essentially what it does is like he purchased like the most representative 500 stock in the U.S stock market they will change the holding every three months so what is like decentralized ETF does is basically they will pick they will use like a algorithm that host inside zika Oracle and then they monitor all the on-chan behavior they want to Monitor and then pick out the most representative top 50 erc20 token and then uh that's my contract do only one that one thing and one thing only it's just like holding them and then change that in every 1000 block and every 1000 block they will repeat the most representative top 50 token it's like and this smart contract the most amazing things like doesn't have an owner or at the main so which means like nobody can change it and it's really neutral once you put it on chain like nobody can change that and the way to use it so before you cannot do that because like you need some monitor to keep like checking out what's the most traded token pair on channel but like it's like trusty entity to do it so which means like the smart function is a super user but right now we don't need a super user for the smart contract to do that it's just a verifier that asking the data from a zika Oracle and then refresh the smart contract every 1000 block and then that will have like fully Unchained and neutral as set management smart contract and I think in the future people if they if they if like they don't want to be hustle on defy they can just like buy this like decentralized ETF and put down their ease in it and then even management for them automatically because like in Long Run and or in a big size for the capital normally the capacity ETF is like always I'll run majority uh proactive Fund in the trademark a traditional Finance market so I think it's a pretty common in this phenomena so I think it's going to be pretty useful for everyone here who will actually use D5 right yeah imagine you have some use case like there was some security yeah yeah yeah security so what what do you use what do they use of the Articles the check and smart options so uh yeah what they do is that so uh they have like a state checking thing inside ZK Oracle so basically what they do is that so we run a smart contract inside a zika Oracle and run to basically essential ideas that they try to prove that I'm able to hack your protocol by running a UVM logic inside the CK Oracle and then I can prove that in the next block if I implement this logic you will lose all your fun in your smart contract at least majority of the fun the data the state slot will be changed to like a really low amount of the money inside this smart contract and then which means that I already had your smart contract and transfer the fund out to my my project but I didn't actually implement it because like this or run in the simulation inside zika Oracle but you generate the proof without rebuilding what's the problem what's the buggy point for your smart contract and then I will submit the proof and with the state of the uh basically the public input is that the state of the uh how much money you left in your smart contract and then with the proof and then submit into the smart contract that can verify that that's so the guy had your protocol but you don't know how he hack it so you this like particularly enable the uh the protocol side to provide them a window for negotiate with the hacker if they pay certain amount of money property is like one percent of the governing token into the deposit then into the hackers wallet and they will not execute this thing and reveal what's the problem to the protocol it's like alternative of the white and the backbone not a very present ways yeah yeah yeah it's like it's more like a hostile version for the white hat Bounty thing yeah but it's a real world right like hackers normally do not care like why have Bounty thing because they're hacker what they want to do is the maximum their profit but in the real world even though you try to uh you try to watch the money that you uh you hack from a certain protocol but you still have like risks that you got caught right so but if you submit this thing as the trade for certain governance token and catch them out that will be considered as clean money nobody will after you so it's like it's potential value here that's I need the people to negotiate and have a game series behind them but it's like pretty early stage project but it's like really Innovative yeah your own project or there's somebody no it's somebody else actually it's like Timmy Hong Kong doing that it's not even like we don't even know them before they haven't been in the flight yeah yeah it's not it's like they have a CTF hosting in September 1st that try to use this thing to find out who is the hacker can hack what kind of protocol yeah they're doing it and uh it's progressing really well [Music] yeah it's a security usage and um yeah you have like aigs usage Define usage security usage and um and tile management and I think that's like most common usage for now yeah and what's most important that is like you can already build this thing out today because I I know a lot another like similar project that they are still in under development but with Hyper Oracle you can already do it today within the afternoon that's like what's our advantage and why to choose us to build with in your Oracle architecture there was one page when I showed how the article works it's like if you have this this bounty yeah like to have someone to maintain that work like it but right now is that also related with this opml it's that same thing no that is basically how we keep the Oracle Network alive so it's like you know proof of work right proof of work is like bring two things to bitcoin one is the consensus that random number can summarize all the transaction in decision block and the second thing it brings to the uh Bitcoin is like the liveness for the network yeah because like there's a reward for every block like right now it's like uh damn it's like 25 Bitcoin right yeah something like that full block and um so which means like oh it's not 25 it's like 0.25 Bitcoin per block and uh it's like a reward there people will spend the resources to do a computation for this certain Network so it's the same thing basically like this secret Oracle Network or no operator uh they can download image like for free it's open source and then they can run it and then compete use their computation to compete for the computation job that hosting inside the smart contract if they are for instance this job I want to do a normal distribution for uni swap uh uh trading pair between eth and usdc I want to do the normal distribution for all the transactions and I do the computation and then I put down the uh I want people to do the computation for it and I put down the how much it costs how much I think this job value is for instance uni swap like this project I put down like 0.1 eth for every block who computes this thing for me and then all the detail Oracle is competing to finish this job and the proofers for that 0.1 eth Yeah so basically all the details are competing for this certain bounty foreign ERS are running the nose like it's permissionless everybody everybody can run the know and uh when we have to have it in Mainland everybody can run the note and uh whoever wants to know we've got the soaking reward for the uh this like whatever the job we put down so are you talking yeah after utilization yeah it's like utility for the token yeah and um so whoever passed the verification first who will got the reward and we don't need to worry about the front running here because like the one of them it's a small contract for verifier so if you are having some confirmation too you already have yeah yeah it's a customized automation that you can write anything in it and then get verified in a smart contract I have a little bit concern about that because the scope might be quite diverse from each other it does not matter as long as the truth it's because it's a tooling complete system okay so like no matter what we write you can prove that in a smart contract anyway and um so the the cool thing is in here is that like how to prevent a front running for like because I I fight guy here and then I finish the proofers and suddenly the proof with the results into the main crew and how I ensure my transaction got taken and you are not paying extra gas to from run my transaction into the verifier right that will be the problem so that's why we have creatively invent a new type of circuit for signature for the uh for the for the public address so which means like in your proof you're also including your wallet information even there's another guy paying extra gas to try to foreign run your proof with the result you still receive the money in that certain address instead of this from Runners address so this is like some it'll be like Innovation we have here to make this whole system work out yeah my concern will still be the circle that if that can be general or yeah yeah the circle yeah I mean the cycle itself is still like going to be a general trade a bit all the problem the circuit or the circuit yeah sorry yeah yeah we utilize dkbm so you have different circuit every time so but like for instance today uh we have five different computation job once I want to do a square root one guy want to do a floating Point another guy want to do a normal distribution and I want to do a uh uh I want to do a python distribution and um so we have got five different verifier in here and then uh so different computation jobs have their own verifier in the first version but in the future version like probably in one year from now we have a unified verifier that can support all the verification in one certain verifier that would be another type of thing in the future but right now like already Fire have all computation tests have to have their own verifier in the smart contract with their own scope with their own scope only yeah yeah because that's also quite limited towards the development of the jkem there there are maybe not a super for General they're still pretty certain circles to work so it's not dealing with all the new thing you know what I mean if they have something out of the safarioscope there are something totally new as long as your computation scheme are the same it will be the same verifier okay if you have different input for instance this like a normal distribution have like uh one two one to ten another one has like two to twenty it won't affect it doesn't matter it's just different input for the same circuit so it's the same thing so you don't we don't need to worry about that as long as statistic fat protocol have certain what they want in the verifier so they can use the zika Oracle to do that and uh the reason why it's like permissionless and censorship received or like decentralized it's just simply because like the proof of Oracle work is like decentralized everybody can run a zika Oracle so nobody can stop any job to be execute on chain as long because like if like as long as we decentralize enough like there's a job like that US government or any Authority try to ban it and there's another guy in another place in the universe in the Earth on the earth will do it in that zika Oracle it's like it still work out because it has the Bounty it's just the same logic that white Bitcoin is decentralized efficient it will be you say something after a thousand block or something no no so that's the use case like okay the use case they choose 1000 baht to update it but like normally you can do every block it's just up to your demand what kind of usage you can if you can make money uh uh with like every bot and Studio verification every part you can make money from it why not you're using them right now we right now we just support ethereum just for now yeah yeah yeah it's fast enough right now our Benchmark is like um like seven seconds seven to eight seconds for all the computation tests that happening inside the cake grass yeah so um that's yeah I need another question yeah I guess we can go ahead thank you Cardon yeah thank you um 