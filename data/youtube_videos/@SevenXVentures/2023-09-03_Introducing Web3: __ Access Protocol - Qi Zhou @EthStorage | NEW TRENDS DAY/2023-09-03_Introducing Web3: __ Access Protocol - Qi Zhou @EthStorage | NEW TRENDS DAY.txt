so first of all thanks everybody for coming here um so to attend my website access protocol talk um so this is a tutorial that we also gave at uscc which we have invited speaking session there so first a quick introduction for myself I have been here in the web Suite Space full time since 2018 before that I was a software engineer at Facebook Google working on all types of distributed systems infrastructure and so every time I was attracted by the the future of the web series so I decided to become a full-time developer and also focus on the ethereum ecosystem for example I have a couple of the eips for a04 which is the today's talk and also a couple of eips and also I have a bunch of the writings on its research and also if the magician um also we received multiple grants from Ethan Foundation both in many focus on the DW research and also relative Technologies for example data availability sampling research and also it's a story itself which is a research on proof of storage organizers on relative of chain data on top of ethereum smart contract ah so first of all what is we have to access protocol uh it's defined in erc404 so you can take a look at the standard from the ethereum EIP Ripple and the full name is called Web URL to uh evm home message translation it is also internet assigned a number Authority register UI so which means that we basically own this web3 comma slicer specifics and also the target of this URL is is able to render web objects that is hosted by a smart contract so here is a quick scheme of blackberry URL it's very similar to http so sometimes we call decentralized HTTP it has Authority where in the HTTP it's a domain or IP address but in our case it is a smart contract so you can use in its ens name or the contract address 0x and 20 bytes of hex and you can also specify the chain ID so that it is naturally natively supported multi-chain and also provide additional information about how to call this contract regarding which method and what are the parameters and what are the the example what are the data going to be returned and how to run it so with this one we are able to Now using a similar HTTP Style link but we are able to access the smart contract content and be able to for example to verifiably to check what the content would like to display to the users so you can check the EIP here and we also have our front page which is right now it has two versions one version is HTTP version that definitely and there's also a web 3 version which actually I really should put there so why why we need this access protocol so you may heard of ipfs you may heard of like a bunch of other protocols but why we need this native access protocol to random objects on Smart contracts so one thing that we observe is that more and more nfts they are now moving to be fully Unchained for example that here is a couple of the nmts Cyber blocker nouns and moon birds and also like other blocks this announce and so their narrative is like to be truly fully decentralized as an nft not only the smart contract associated with the token ID should be owned by the users on on the on the ethereum layer one but also the corresponding metadata the asset itself should also be owned by the users the users the owner had to write to First forever access this data the same as the smart contract itself second has the ownership to for example I may be able one to delete delete the data or make some changes of this data based on this the corresponding logic that is allowed by the FD smart contract um so they spend I believe tens of thousands or even some hundreds of dollars to upload all these this data images using different type of format for example this is bitmap this is SVG with different multiple layers other blocks is using jar script to random and this is also on a bitmap ah so and then so oh this is really interesting application uh especially I believe this is very important for mft owners because if they really care about the ownership of the data or the images which they pay maybe one ISO or 10 user to buy an empty and so I take a look closer look of these small contracts I'm I was quite surprised that because when I browse this URI or the token and tell where the basically these images are being accessed for example by openc or blur and it just returns a centralized server say hey all the metadata and the images is now hosted by this perhaps AWS servers sorry Google app engine oh there's a kind of Engineers okay yeah and also uh like this is a 97 using ipfs um this said hey why we do when you need to rely on third party Trust even though the data is already available on top of ethereum why not just build a access particle to directly access this content without any third-party trust and you can fully verify those content um directory and that is the the original motivation of FCS particle which we want to basically inherit most features HTTP so fast to http provides so so many Rich features combined with HTML so that now we are able to reuse all these main features but at the same time we just replace some small parts for example we just placed Authority with 30 Central as one address and it tells the final way to how to close my contract to for example display the images of the first token ID or secondary ID or maybe 100 and so that's the motivation that we store to Define website URL and then to experiment all this on chain data and so and then this website URL was submitted on February last year and was finalized this year after one year's all kinds of experiment discussion reveals with EIP editors um so another question is now we have this standard uh still there's a lot of extensions that need to be finalized but now it's well be able to support a lot of interesting Hub applications how we are able to use this web URL so now we are able to um so so uh experiment all these features and so one way is to use the Gateway so with the Gateway we just replace the basically the authority and put in the Gateway subdomain and then the rest of the field will be passed according to the EIP for a04 to the corresponding core data and the Gateway we change this message and call the correspond message to the if there to the ethereum and definitely this is really kind of like we call Web 2.5 solution at the current stage because like still we have to go through this transition but at the same and this is the also the Gateway that supports this a bunch of the uh links a bunch of the chains and at the same time um our community developers they just voluntarily come oh this is really interesting idea so how we are able to make it so to be fully free and so there's a anonymous developer and he put a lot of effort say hey he come up with an extension so that now you are you'll be able to type webstery and the type of the link then it will automatically translate to the evm is the core messages call the uh Json RPC server which is configurable similar to metamask and now it's able to access this content and display on a browser so this is a um I would say very like a future of about a vision future about how the rest of native be able to use existing um component browsers to access this content and also there's another developer oh this is actually they are basically how it works actually another developer which is also a community developer they just come up with its browser actually its own browser that is able to type this website URL so that now you can also browse all the content that we are available on her blockchain so um there are a bunch of applications that can be enabled by website access political um the initial application will definitely be I have the images so that we are able to render those images natively so for example seven blockers they upload all the media data that is the they call SVG layers and on chain and so that they say hey people never be afraid of losing their data on chain um so for you're not in order to display those content we deploy a contract which is the uh you can imagine this is kind of a rendered contract will tell us how we are able to render this link with some random block with a token ID then it will call the retrieve the corresponding on chain data from the server blocks smart contract together and then be able to just display it using Mastery access protocol so this is the very early experiment that we say how how we are able to serve those Mt projects it's just very simple straightforward a simple contract that follow the car follow the standard and be able to do that um another thing now looks like if you have three as a protocol we are now able to trans transfer evm to a decentralized HTTP server which means that basically we are kind of like be able to experiment all the web for two applications they're building on centralized hdb server into a three um then say hey why not we are doing some more fancy or more aggressive applications so uh already here we download all the Vitalis block which is I believe it's about 40 megabytes and then say hey let's try how we are able to help vitalik to run his block on top of ethereum rather than his centralized server so we upload all these things and upload to the uh the option Nova because like it has its DAC with much lower Optimum cost that's something that I will also highlight some problems I need to solve but with this smart contract now we are able to have the Vitality to have his long life on top of ethereal182 and that's something that we can Envision when the web 3 is become so popular it becomes and also the scalability problem has been addressed by all types of techniques for example CK snark and also for example some idea that we are proposing we are able to deploy a lot of new type of applications similar to web 2 but on top of web 3 with combination of a lot of native features that Rafi can uni features that battery can offer so for example in the future I will imagine ethereum.org itself should be also hosted on top of ethereum or maybe another extreme case just like a while thinking it's like the for example tornado cash create a concern the the censorship attack like for example the Continental cash code GitHub repo is now Frozen archived because of this um the Department of Justice has sensor censored this website even though like people can still access it but it's not not able to work out it and with small contract and also a lot of technology that we are building we are able also to build the basic GitHub on top of ethereum and so now we are able to develop ethereum on top of efferent using all this technology that we are building this may take years to be realized but this is not just some crazy ideas that with all these things that's possible now we are able to create a completely new domain to not just do this like calculations of these stacks but also a lot of applications there now back to applications are now possible on top of our ethereum um so there are a lot of other applications that we are experimenting for example decentralized blogger decentralized Dropbox decentral email all kinds of these applications and so it's still at early stage but it has demonstrated very very uh Vivek I would say ecosystem to demonstrate a lot of possibilities um so um I have described a couple of the advantages or motivation of doing doing Webster URL but there are also a lot of blocking issues challenges that we are facing uh one issue is the storage problem on evm so we know that ebm will replicate all the data to all the nodes we right now have 5000 nodes which means it will be super super expensive to store all this data to replicate the data to other nodes of quick calculation is that right now the storage cost of one gigabytes will take about 10 million and that is definitely affordable to be able to have this technology to be massive adopt adopted right now we are using a solution that using application Nova with a data available committee which offload some of the storage tasks to their centralized service and but in the at the same time we are building an even Advanced solutions that we are able to build a cloud storage roll up which we will have a side event tonight with uh eclair and Slasher and so that now we are able to reduce this cost to one to one thousand I'll also be able to scale the ethernet storage capacity to petabytes and also thanks to ethereum uh Foundation we also receive a grant to support our work uh research work on this direction um so for insta storage basically uh we we say that if there is moving towards is going to be normal map one big direction is computation so how to be able to achieve much faster or more transaction per second at the same time say hey those nft those front end of this D5 all this application require a large amount of the storage that has almost the same level of this ethereum security or life for example life needs censorship attack all these things and so the goal is like whether we are able to be able to improve the ethereum storage capacity in terms of space using similar ruler ideas and that's the initial idea of iso storage so that we are able to build our storage roll up rather than the computation roll up and achieve a bunch of goals into in terms of lower fees and also higher capacity and everything is using ether and and also it's just for anyone with a very minimal storage capacity right now the design is four terabytes it can be able to decentralizly join the network download the data prove the storage over time and then get a corresponding reward so with combining with its storage and if they are much machine we are basically able to mimic the current web3 infrastructure which we will have the application server we'll have storage services from user perspective it just submit a single to the centralized services and the rest thing will be handled by all these centralized components while at the same time on the public ethereum we are actually approaching that I would say World computer go um so here is a quick comparison I don't want to go through a lot of these details um the major difference is like for example clone Roll-Ups uh becoming uh a node that hosted the robot State State uh there's no such incentive to basically running a for example backer sequencer generally it will be generally the project side will host some couple a couple of the backup sequences of backup nodes make sure that the likeness of the network but if it is a storage the goal is I put is to be able to build this car usually easier as incentivize the payment token and also our proof of storage algorithms so we are able to have a larger number of the replicas or nodes that holds the corresponding the data and this the hosting can also be proven are using our snack algorithms and then be verified on top of smart contract so that we are expecting a large number of the physical replicas which also solve a lot of existing problems that robot is facing for example verified in email problem um also though another question is what is the difference with a storage versus uh existing uh the central storage system the one major difference is storage is building on top of ethereum data available Technologies so it's a public storage system while Falcon RV they use compartment channels to upload the data and second is like is a storage is designed for hot high value Dynamic data at the same time Falcon RV they are designed for static files with very limited semantics for some RV the users are not allowed to delete any data that is uploaded to the blockchain and found coins are the two up upload update of very small pieces of data will be very very efficient in final coin so in storage we are able to dramatically scale storage but offer key Value Store semantics which much much richer semantics our second is the lastly is is a storage is highly integrated with ethereum so all the users they're just only using the wallets has the ethereum in their wallets and also from developer perspective as long as they they understand small contract they announce that all the development Stacks like Shuffle waffle solidity they can easily use these stories to perform all the applications tasks that the user and the developer would like to do so we believe with like it's a storage the story roller we want to not only use ethereum security but at the same time we can also reduce the ethereum ecosystem or the users and this is the key factor We Believe for the uh for the basically massive adoption um so here is a couple of techno technologies that to enable all these uh so for example we have we make two firstly we make we have to make sure the data is successfully published to the layer one layer 2 Network and so here we are working on data availability Technologies we are helping the ethereum foundation to solve some Dent shotting problems and so we have a grant received from ethereum foundation and for the Easter Story itself it's basically uh to build a decentralized layer to storage Network and be able to verify the storage on top of layer 1 and on top of our invented proof of storage algorithms and also we have the Grant from EF to support the research and lastly what we are access protocol is you can imagine the application layer for its storage and also ethereum so that now we are able to access all this data in both interns layover smart contract and also led to user storage and display this content on top of the fully decentralized access protocol in in browser Gateway so in the future we believe like ethereum will drive most Innovations we believe that it will become the world super computer suppose we solve this problem and with this all these Solutions we are able to allow everybody in anywhere where to use ethereum and enjoy all the benefits that ethereum offers at the same time we are able to make the whole network more even more decentralized so we can basically migrate a lot of like web 2.5 projects to fully a web3 or a lot of existing web 2 projects or can be also now be able to support it on top of ethereum full ecosystem so um so here is our timeline um so our website access protocol is already online so feel free to go to the website and browse all kinds of features deploy your contract and not also support if you're in test net or we also have a test net due to experiment this so if you need to test a token feel free to reach out to me and so the reason we run our test net so that we can essentially have in infinite token to the experiment audience at crazy ideas and at the same time we are now doing a lot of work with integration with eip4844 that is the ethereum current version of Da or pre-version of Da so there's a lot of changes for example they just finished their test net on devnet on seven and eight and there's a lot of changes on apis and at the same time we closely follow all these changes and provide encounter people to our libraries for example to be able to support eip44 ecosystem so that it can be we can experiment all these Advanced features in early stage and also uh we are building this uh layer 2 network with snow approver which is also built on top of that definitely eip44.net and also for example native browser integration thanks to our Anonymous developers that created us such significant work to support material at Chrome and also we have a couple of the target organic talk that customer user article is a cc.com Instagram to tell what we are doing and what how we are able to contribute to the whole website ecosystem um in the future definitely we would like to integrate it with the tank Shoring that is the famous ethereum DNA solution and also the patch bunch of other other work decks need to be done and so thanks to thanks for attending my today's talk so I would like to happy to use see if anyone has any questions both in terms of application technical or any other yeah yeah I do I wonder what are the implications of this like if you ethereum storage comparing to for example ipfs I was like excavator that's the marketplace I know how like unreliable ipfs nodes are how you should is they like uh it takes like 10 seconds to retrieve any nft it takes uh they you usually get like broken images and I wonder how essentially it's faster and reliable if if you have storage is yeah uh so let me let me repeat the question so uh it's regarding the some service service quality of the file pointer I wonder where this is actually is data stored and how reliable is that and how fast could you actually advertise the data Could you actually compete with like Cloud Player CDN and all the stuff in terms of speed yeah yeah yeah yeah that's a great question so uh first of all um so I think this is more related to retrieval like retrievable Market how do I be able to ensure that uh we are able to fix and deliver this content to the users this our retrieval Market is a complete model is a little bit different from a Fairground RV it's more effirm side perspective so right now the ethereum ritual Market it's like if they don't have a bunch of PHP notes about 5000 and then there's no guarantee that everybody can obtain the ethereum for example balance or any uh storage slots in for example of some kind of latency so but at the same time when I become a new node in the ethernet Network others know we voluntary share the data so that for example for me like I frequently set up the notes it took about half days to become if the infernal um at the same time there are a couple of services for example um if you are the most famous one and Alchemy and other list of the others they provide this Services of the user is a core to query all these latest Network information or kind of a centralized way but with much much higher quality of service and lastly ethereum is also building called portal Network you can imagine that it's a decentralized decentralized effirm uh like this IPC Network that store this data but we just it doesn't guarantee any quality of services for issue storage it's similar because it is a natural ethereal layer too so that it's uh you can imagine this is a superset of ethereum so which means that we also have a bunch of nodes storage nodes that run in the PVP Network it does not guarantee any latency of the data can be retrieved that is the same issue as the basic order blockchain and second is the will project it as a similar Market it can be maybe inferior something that we are basically working with so that they can offer kind of a centralized but verifiable ritual Market uh it may provide some real limitations for free users by the same time for for example supports I am a big project like mirror Dex was a completely it's a storage providers for any traffic or they can itself can be stored supplied to set up their Network so there are a bunch of Weights the thing is like the replication factor of its storage it will be much higher than file coin because the file coin is kind of like a private privacy of the storage market so basically one of Franklin I want to store data I find some storage providers and pay the corresponding contract and but very small amount of replica at the same time which means that it would be harder to fall for example for inferior or some public services to find the storage provider and retrieve data because in general they may not likely to ping ping the data on top of ipfs so the couple of major difference there and we don't want to re-invent view just about the best practice of current ethereum network has both in terms of people Network and also the ritual Market yeah but actually it does it does not has a chain it does not have to change so um so it is a modular story so you fully rely on existing ethereum infrastructure to store the data yeah if they were used ethereum ledger to store the data assorted Ledger and just store the so you can imagine that it's done larger using ffs it is stored hash in our case The ethereum Ledger that's using just L1 as an example it just contained the commitment but unlike ipfast nobody can tell that the data can be retrieved or not on top of it there we will tell periodically that hey for this data corresponding commitments there is a Oracle immutable yeah that's not compressed proof tells that the data that are actually stored by a larger number of nodes and this is a proof and this is a really really different I would say much higher in terms of liveness and work for the data built on top of it if there yeah thank you yeah nice question um probably can start yeah thank you we are building only one and our city will mentioned to me about ADH storage before because we are looking for a solution for the storage but I think that um from you speaking I can say you most most likely to mostly your support is Syrian ecosystem ethereum they are one or two so but we cannot we are not even a change but building on top of and I mean because we okay that's Wonder yeah you support other universities and also um yeah yeah no worries so you can ask me later if once you come into the question um yeah so right now the website access political is support multiple blockchains uh actually it will be very easy to support additional blockchain as long as the the blockchain follows ethereum system RPC standard um so and to allow easy storage to support the another layer one the one major thing is to solve the proof of publication problem because we want everything to be public which means that the data we're using core data model will be super super slow so you can imagine like uh um the core data or basically data availability is a scalability versions Global version of uh block space and its storage is a scalable version of the world state of ethereum so but this is a dependency so otherwise user may save one to the 1000 of the storage cost but the upload cost is still the same so that the major cost is still be blocked by the by the upload cost that's why we are working with a couple of the EAS to help to solve this problem besides ethereum DNA so is that because next year okay yeah available to use it even to our next year so our roadmap is a little bit faster because like we do not need to wait until the attack starting to be ready to launch the network it just needs to be wait for the eip4844 and so that we are primarily tested on eip4844 that is the current they call it four compatible version of the exoding and with the this feature once that is fully tested then we can definitely because it's modular then we can easily plug in into any other evm network as long as this uh da solution or worst case can also using core data but probably the the gas saving will not be so significant yeah yeah sorry oh um so let me let me remember the question is there any mining mechanism of the whole system um so um there's a mining but we call it proving so basically when I'm a storage provider I store a copy of data and then I can prove the I store this data over time damn our system is going to reward uh anyone with the corresponding to storage fee which is the one to one over M where m is the total number of a physical replica in the network we call Fair distributor V distributor but this process this proven process is actually the same as the mining process but we do not need an independent blockchain to complete this mining process because like all this modification logic we can be done in eastern smart contract I am a lot of like a complicated computation can be done using snark to so that we do not need to set a new chain and do a lot of new things like pre-compiles or new features to uh to support this mining process yeah it is some kind of mining but the main goal is to able to fairly distribute the fee to the storage provider so that everyone is expected to receive one over M storage fee over this over this uh over this time where m is number of replicas yeah hi doctor um quick question on the programmable data yes could you give some uh use case scenarios for programmable data storage on chain because I feel like the very obvious difference is that they are not programmable right yeah yeah exactly that's my first question the second one is um how flexibility what's the flexibility you think for previous preserving privacy data storage because uh that's just what we are very interested right nice nice um so first thing regarding programmability there are actually uh I will say there are some some two different difference uh you can imagine the impacts of probability so first of all uh the five coin case let's find one case where I give a link of five coin it is always static either I can show a images that never changes or either I cannot open the file this is the the ipfs case in the programmable storage cases because a smart contract will have the logic to to organize the data where to put it where the how the user openings about this so when every time when I call the contract with the same link is able to dynamically return the content that the application larger installation larger than that they would like to return so for example each time when I read Elon Musk tweets the first time I read and tomorrow I read will be different because the application will say oh Elon Musk has new trees has new article or new comments and that will dynamically return the content back from to the product and that is the problem that we want to solve and that is the major difference of web web 1.0 and Web 2.0 because 1.0 is everything static and probably everybody maintain their website using FTP upload these things but now we have uh Web 2.0 everybody is using browser interact with the servers with some some link that can dynamically run in this content and this is the the first why the this programmability Dynamic content is very important and second is it can also control this data ownership so for example I upload some data on top of this uh for example ethereum interconnects it's a storage and I would like to for example to update this data for example I can update this trades and the basically who is able to update these trees the logic the ownership larger is managed by smart contract so the smart contract can say oh I'm the use I'm the owner now I can do this this kind of task I can modify or email I can delete other comments all this or um I'm not uh I'm not authorized to do so so I don't have right to for example remove the data from the smart contract so that that is the power of we are able to combine the evm that's programmability and also the storage together and and that is about to enable all types of applications that um that web tool can support uh especially there's a very interesting story that when Google launched Gmail on April the 1st people was saying oh Google is making a joke to offer gigabytes of email system but later everybody thought oh this is reality they really did it and people are surprised how they do that and actually on their backbone they developed a very large scale qmail store called bigtable with their also very scalable application logic put them together so that they are able to store a large amount of data using a distributed system horizontal you can easily horizontal horizontally scale and there are four gigabytes of the spaces to the users and that is the magic that Google Facebook has been done in 20 years ago but now we want to repeat this magic in the web 3 world and that is uh my according to my previous experience um inspire me why we need this kind of infrastructure investor sure privacy preserving oh but yeah privacy preserving uh that's a good question so one thing is like uh every we are working dealing with the public storage market so it's similar to The blockchain Ledger itself so for the Privacy right now we don't offer any political level support on privacy but at the same time uh we have already have some demo applications you can try for example there's a email so that I can using the destination public key and the increase in the public key so that we only allow the sender and and Ascender and also recipient to be able to decode a message that Kerry using the storage and that's one way to solve this end-to-end privacy program and there's another so-called Private Drive which is basically I can upload upload data and it will basically using the the users parakeet to generate a encryption key because the for example metamax assigning signing logic will generate deterministic signature even though the ects allows like randomized signature and so with that is able to using that as the encryption key to include data and for anyone as well as a private key will also be decrypted data and demonstration oh this is the fixed number some legal documents I want to store forever but at the same time I don't want everybody can read it yeah so that's like a demo there even though it's still using on chain data on the test net but that is how the iso storage will work uh together with the eip4 upgrade start from an application side one so because like I was expecting you can provide storage for example but it also mentioned that you can even provide security even users of this area so kind of curious maybe I heard it's wrong I don't know yeah I think um so one thing is like we want to reuse ethereum security um so but at the same time which I would say more precisely where is to to maximize the security with ethereum but you know like because the storage provider network is a little bit different with validated Network so that the security level will be a little bit different but phase like everything for example of storage is verified on top of ethereum the data passing through we'll also go through ethereum from da so that we want to maximize the the security security from ethereum but actually if certain right now it's this state or its Storage security is also open question because like from metallic uh saying is that as long as there's a OneNote that story if you're in funnel then it does instance daily is secure there is one over one they call 100 security versus like 51 or 66.7 percent and but how we are able to Define precisely this secret it's a little bit tricky but things like uh it's one percent so that um it's it's compared to like other us like a higher security assumptions that it will be much easier to achieve the new cooperation your transmission uh what does this mean uh probability I'm just curious about whether I actually made here so on-chain program completely means that we are able to uh so using the smart contract to bake manipulate plates the what because it's killed a store right so the key is can be from application what the key looks like and the value is how the corresponding the value associated with the key how to change this value how to who who is able to change the value is programmed by smart contract um so for reports there is a emulator VM that is able to also read the data and in evm level 22 to military but that is only for read-only purposes but like like demonstrating the website or reader trades so they are able to have a white is a code to able to return the whole website where part of the data is from it's a storage yeah yeah because like we are not able to modify evm by itself too in the transaction yeah okay okay so thanks for sharing let's move to the next top 