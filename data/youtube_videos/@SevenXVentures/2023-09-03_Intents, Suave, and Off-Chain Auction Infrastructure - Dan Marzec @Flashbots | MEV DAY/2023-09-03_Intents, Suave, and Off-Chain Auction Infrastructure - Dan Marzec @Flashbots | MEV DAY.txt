a little bit of a post on intense um I will uh I'll also give like what I think are the good parts about intense um and then eventually I'll get into like how you can use swab uh as like intent infrastructure that's like the rough Arc um the theme is largely inspired by this meme I made if you're familiar with this format of like stop doing XYZ uh you know the main points um yeah years of meta transactions we have nothing but limit orders that's like this sort of like the the edge of intense right now um yeah what else is here yeah that's like that's about it oh yeah and then uh hello I'd like an intent to not be front run I think that's like uh also a little bit of a spoiler for the rest of the talk uh is that like front running is still very possible with intense it doesn't totally solve that um it can move it in a meaningful Direction but yeah cool um yeah so this is a rough Arc intense hairstyle up uh intents are probably the right abstraction uh audit your intents and then yeah Suave as intent infrastructure cool so yeah the bear case like this is why I would say this is how I would say like you know intense like aren't really that crazy or anything like substantially new there's been like 30 years of like you know ux research in web 2 and like we're suddenly bringing that now to like web3 with intense it's sort of my argument yeah So eip712 Meta transactions those have been around for a while uh you know if you've ever used openc those use meta transactions under the hood um and those don't really specify a specific like execution path um so you know you sort of just say oh I have an nft and like I want like around this much and like that's sort of what you get um yeah so yeah giving users like or so like users giving more optionality to their executors like I think yeah that'd be the other part of the bear case is like is that really where the bottleneck is right now like you know are all of our like ux issues and web3 suddenly solved if like we're like oh now a Searcher has way more option for how to execute my stuff like you know probably not uh a lot of it is like users are confused wallets like cross chain interaction things like that um yeah and then yeah cow swap is cow swap is also already live that's an intent platform as well um you don't really specify your execution path you sort of just get thrown into uh like a batch auction with a bunch of other um people and um and then you're like intent is satisfied or your desire um yeah and then lastly for the bear case would be like it still reduces down to a market structure issue and so the intent language can have an effect on the market structure like if if your intent you know obstructs a certain party from being able to solve your intent then like yeah that that could potentially cut off parts of the uh the market that you maybe do want um or maybe your uh intent and structure like intense structure could incentivize other Market participants to like come in and solve it um yeah so that's like the bear case and then I'll quickly go through like what I see as uh like intense the progression of them so this is sort of like abstract I wouldn't like look into this too much um but this is how I think about it like I have some token a and I like want B I tried to do this on like an X and Y graph but it ended up looking too much like an A M and I didn't want it um so yeah like this is like univ2 or maybe V1 like no router like you have like one exact path like I need to go through this pool and I can only like satisfy x times y equals k um for that single pool and then yeah okay maybe this is like V2 plus the routers like the router gives you like multiple different paths you can go to now um and that's like a huge um Improvement because now you can maybe go through like multiple pools that you didn't specify um yeah and then I would say this is like more what intents look like uh you just specify this entire space as like a set of constraints um and anyone can satisfy those constraints and so that's like a single person intent right for a single token um but a lot of like intent infrastructure or intent like solver networks like what they do is they take this and then they combine it with like a bunch of other people's intents right all like in this like one little box um so yeah I think like the intent infrastructure starter pack it's like an ability to aggregate all of these sets of constraints into like one cohesive unit um and then yeah you sprinkle in some like crypto like dkg like perhaps you encrypt your you know set of constraints to um like some some uh like public key that the network like creates and rotates around um I think people uh I think like fervio is an example of this like dkg infrastructure on I think osmosis it's live right now um yeah and then decentralization of compute and storage like we don't really get anywhere if you just encrypt you know your intent constraints into like my phone like that's not really the the goal here like we want a like Marketplace of solvers competing for different um execution on different constraints um yeah so that's like what I would view as like yeah the bare necessity um and how you actually like um encode these constraints into a way that a user can like specify I think is where all of the intent work is so if anyone's working on intents like you know would love to talk about that um but yeah again like the the language you specify to your user is gonna like determine the constraints that they create um I think there's like a really big argument as well that users don't know what they want um so like a really good example I think is like Google flights if anyone's like use that I use that to like book here like I sort of say where I want to end up in a date and you can imagine that as constraints um and then it sort of comes to a bunch of solutions for me what's interesting is like the Google like search um the Google flight search like what they'll do is like they'll actually show you the cheapest and then after that I believe they show you like um or sorry they show you the yeah they show the cheapest first and then after that they show you the shortest flight and the cheapest um and then I think they have like some other like priority ranking for like what they show you so I think there's a lot of room for platforms to like make uh so like to choose these preferences for the users because I don't really want to think about what my ordering of preferences are like typically that like 99 of the cases the cheapest one is like what I want to go with and then oh maybe oh it's 20 hours versus 10 like all right cool I'll go to the second one um so yeah so that's a good example like I think two and this goes back to the bare case of um like too much like if you know say I expose 100 parameters to a user that really like doesn't solve any of cryptos like ux issues um cool uh yeah so the bull case um yeah so it expands the discourse to include a user's behavior and motivation um that's sort of what I was talking about before uh cross domain intents are also something that's like really interesting that you can expose um if you know a user simply specifies these end States then if I can satisfy if I can like provide some type of proof that um I did the like required action on one chain and then like bridged it back then like that's super fair game and so that's like really awesome that we can sort of use this abstraction to move to a world where like the actual chain you're on doesn't matter as much um yeah other builders superpowers uh and so I sort of refer to this like cross domain ability as like a builder superpower that's like a very eth Centric thing um if you're not in the uh like on the youth world sorry about that um but yeah you could do things like a multi-transaction flash loans is like one Builder superpower you could enable so like right now you know you have if you do a flash loan you have to return the liquidity by like the end of your transaction execution but if you're the Builder and you're in like control of the entire block and you're even in control of another block on another chain like you can do like very interesting things you can maybe even mix in signals from like domains that aren't even on a chain um it's a little unclear like how you verify and then like show that information to a user but like all awesome possibilities um yeah and then this is the strongest one for me it's way more marketable than in variants like I think a lot of intents are really just invariance uh I think even like slippage is sort of an invariant like I think we do have some basic uh you know things like this right now um but yeah no one no one wants to say like my invariance or XYZ but like oh my my intent is to get a token way more marketable um cool yeah so that's like roughly yeah those are those are my Baron Bowl cases for intense um I think it's like unclear uh where this where intents will go like whether these will actually be some type of like you know someone will Design some like domain specific language that like everyone uses or maybe like certain actions will have like intents that um become like very um standardized and then you could use them across like every single like application or like a couple of them if you imagine like your phone like you probably have like hundreds of apps and so like do we imagine each one of those is going to have their own like domain specific language for getting things in and out that you want it's like no like probably a lot of apps you transact and so like a very basic pattern is like you know what you're giving and what you want um I think this is like uh the anoma intent like um language and structures like based off of this so you know you're on Instagram or like Tick Tock or something and you want to buy you know something you could uh you know you specify how how much you're willing to put in and then you specify how much you're willing to get out and yeah it really doesn't matter um and so that that's uh what gets Segways into my next point which is um you know you specify how much you're willing to pay in in basic versions of intense um but like if these intents are public then we're actually just in the same exact place we are with the transaction supply chain and Mev because if I'm willing to pay a hundred for you know 100 usdc for one coin you know no one's going to be like oh let me just give you like 90 for one coin actually like no we're gonna you know Searchers executors whatever you call them solvers they're gonna push you like right up to the limits that you express and so uh this reduces back to like the med supply chain is my opinion so yeah the and this is sort of where I get eventually back like go more into Suave and like less on intense so yeah the state of Mev um this is like a rough transaction supply chain uh intent supply chain now it's new um yeah so yeah when users transact they generate more value sometimes than they like they generate value that's like you know internal or external to the system that they don't even realize um you know being able to combine multiple different orders can maybe move a price in a different direction that you didn't expect um yeah so right now this value is mostly captured by Searchers and validators originally the network sort of captured it in a sense with priority gas um Wars but then flashbots we introduced um you know a way for you to like privately Express these um preferences uh and then now with like PBS proposer Builders such uh separation like sort of the design philosophy that like um validators and you know maintainers of the Network's consensus like shouldn't be the ones responsible for building blocks with PBS like I think it's like 90 of the value now ends up with validators and that's because of the market structure where um the PBS design is basically a first price auction so it just incentivizes everyone to sort of bid Max until they um until they win the auction um yeah and then users can be negatively impacted by some strategies that's like front running and as I mentioned before like intense you can still get sandwiched with an intent um depending on how you structure it um yeah so that's the state of muv so yeah we protected the with these private channels we like protect the chain from negative externalities we don't have priority gas Wars uh but we don't internalize any of the value and that's like the really interesting thing like um yeah it's it's actually really similar some like um if you think about like restaurant reservations I think that's another example of like somewhere that actually could maybe potentially internalize this demand um where like let's say a restaurant only has like 10 reservations in a day and like all of them you know get booked for free or maybe there's some like minimum cost you have to like stake which is like cyber resistance in a way um like you could actually have like secondary market like trading on that and like none of that value goes to the restaurant even though it's like their actual spots that are like generating this contention for um for usage um yeah so that's a big issue don't internalize value um yeah so we have private channels that's like the main approach um there are smart contract approaches which are really interesting and I think intense will allow more expression into uh how smart contracts can internalize this value um yeah some quick examples are like Liquidations in the maker auction or the maker the liquidations maker to chose like a Dutch auction to sort of remove some of this like the negative externalities of everyone just like you know sending in tons of bids now it's with the Dutch auction it's just like oh that's the price I want I'm taking it like auction over uh depending on if you can get on the Chain which Max uh had a lot about um yeah nfts gradual Dutch auctions that's like another approach our gobblers used it um yeah and then amm's like order flow discrimination has like mixed effects of Alex's Alexander's here uh yeah like that that seems to be like one approach as well to internalize some of this demand um yeah so those are current Solutions but like they're not really good enough is what our view is uh so we introduced and have been working on like Suave which is a system to like handle all of these things and so at a very high level um this is like the different users of suave and like how they would specifically interact with it but you can think of it as like um I'll start with like a concrete example so like Mev blocker or Med share if you guys are familiar it's sort of like you can submit a transaction and then so with Med share we will like release a subset of the information that Searchers can then search on and send a transaction back in which we'll background it Med blocker does something similar except they just like reveal the full information and then they um in order to stop like probabilistic sandwiching they introduce like fake transactions it's um yeah yeah that's their approach um so with with swab like what you can actually do is you can encode that logic for your like order flow auction as a smart contract you can then deploy it onto Suave and then the key here is that um the user will then encrypt their transaction to the like swab Network and then they'll send it into a swab node and then what happens is anyone can now run the auction and so you have like a verified program that they're running on top of like confidential bids and so the other cool thing that like smart contract um enabled ofas give you is that uh you can actually control the Privacy model so like if you want to leak some of the information as in in Med share like you can actually choose to do that and the user specifically allows certain contracts that they send their bids to so if I you know I can write some contract that will just like leak all of your information and like give you nothing and as the user like you're free to click on that um and use it but uh we think like also you know you can also submit to like some really shitty like amm as well and like you know people don't do that right now because they sort of you know there's various like uh network of trusts types of scenarios people verifying like yeah um yeah so that's basically it and then we also Envision like people um yeah like Searchers Builders Etc like running a lot of these nodes and so they're incentivized to try and like get as much order flow um another like cool thing that this solves in the Builder markets that uh I had personally experienced working on another Builder is um a lot of the iteration on block building mechanisms is like most heavily constrained based on the order flow that you have like if you only have 50 of the order flow and say you want to like compete with like you know bundle merging with like you know Jared from Subway or something the infamous sandwicher um you can't really like meaningfully iterate there if you don't have their flow and so this stops a lot of Builders from like being able to to iterate and so we hope that like and in the base case swab will allow um like uh lower the barriers to entry the of the markets to um be a block Builder because you can sort of like based on some you know tenuous trust constraints in the beginning uh you can get access to the entire order flow of you know everyone submitting through swab cool yeah so these are the takeaways if if none of that made sense uh replace trust in operators with Tes maybe eventually like threshold NPCs some type of cryptography I think like if we had the exact same block building infrastructure as we have today but it's on tees uh like I think we're in a radically better place like this isn't the you know five to ten year like timeline of like what this like Market will actually look like but we think it's way better than you just trusting some random server that like says they won't leak your data or something like that uh and then you know many people have opinions on tees uh we we have a lot of approaches and very experienced like sgx Engineers on like how to mitigate exploits and things of that nature I think you know the uh the the quick answer is like if there is an exploit and like three blocks or like unbundled that's like really bad yes but uh typically you know that's like it's not as bad as ethereum going down and on top of that like sort of a lot of the people finding these exploits are are like very sophisticated Labs like doing it for academic clout they're not necessarily like some 16 year old like in their bedroom which you could that I mean that would also be cool um yeah make the operation of the service decentralized uh geographically and administratively like ideally one person shouldn't be able to shut down the system um and then Geographic decentralization is like a much harder concern and that's that's a little bit longer term and then yeah user programmable based on Smart contracts um yeah the the real vision is like a Marketplace for mechanism like any D gen sort of amm designer or smart contract Dev should be able to just like read a tutorial deploy their own OFA on top of like uniswap and like you could actually like meaningfully compete with flow and you don't need to be like associated with uniswap or anyone um yeah uh and then okay these next two slides are a little technical if anyone's like familiar with like how an ethereum node works like you have like the evm uh you have like the state DBS like the main place you store things and then like some configs and contexts um and then here's like so over here is like all traditional um evm and so yeah you have this like run time which ends up like at The Interpreter which is like what you know translates your byte code and um actually runs the execution all that um the mevm is is it's a new runtime uh we call it like the swab off chain back end and it just like plugs right into the interpreter and so now at execution time your code has access to these uh Fields one of which is misspelled uh and so yeah you get a confidential back end that your execution gets access to um and then as well this like off-chain eth back end so you can sort of like call um functionality that's used in traditional block buildings such as like simulate a bundle or build a block you get access to all of those inside of your smart contract which is really awesome so you can deploy a program that will take in a transaction simulate it do some something with it based on the results of the simulation maybe like route it to another smart contract and you can kind of like stack these things so you could imagine like multiple layers of OFA contracts and then maybe multiple layers of like block building contracts and then multiple layers of relay contracts and they all can sort of like plug and play and the point is like not to be prescriptive about like what the right routes through the supply chain is it's again allow anyone to propose new ways that these like mechanisms can interact and operate and then just like let the market win for which one's the best um yeah so what are the differences like in terms of ux on like using Suave um so this is like the you know transaction supply chain before you go from like user looking at the ux to a wallet they send it to an RPC um that RPC will somehow end up in a block Builder if it's an OFA then it'll forward it um sometimes it's like you know you couldn't view like inferior right here who sends it to a mempool and that's like you know the public broadcast to all the block Builders um and then yeah block Builder sends a relay and the relay sends the proposer that's sort of like the PBS part um so yeah the main differences here yeah so Suave does not make any types of like opinionated claims about this portion like that is for anyone to sort of go out and design like an intent framework that can operate here um and then yeah so what are the differences from there we have a new transaction type called an off-chain transaction type um it basically is like a regular ethereum transaction except the call data is for a function call on Suave and then there's an additional field called confidential input which is like your encrypted bundle um but other than that exactly the same like one or two field differences um as well you also specify which contracts are allowed to execute over your transaction um yeah so the RPC is also slightly modified uh send raw transaction just takes this new off-chain transaction type um how the RPC and the block Builder communicate that is also different now they communicate through the confidential data store so your OFA can output like a a combination of the users bundle with like whatever transaction the OFA might have inserted so in Med share that's like a refund transaction and the way they communicate that is just by passing it again through swab internally and then yeah is what block building the way it communicates with the relay is Through This Confidential data store as well and typically these two have been like HTTP like you just like do a post request so we think that's cool and then yeah this this portion will probably stay the same for a while the vy2 proposer no proposers are like native to Suave so that's like we'll definitely always be the last mile we hope that there will be like some cool peer-to-peer Network standards that'll come out so that we could just like broadcast these commitments to proposers and then they could accept um but that's probably a long way to go um yeah so there's intent infrastructure on just like many different domains being worked on uh yeah PBS like you can view as sort of like the last mile intent delivery if if the guarantees we have with PBS aren't satisfied if a builder's block is able to be like unbundled um is an attack we saw like in ethereum where uh um a malicious proposer basically said they were going to propose a block that came out of the med boost auction but then they didn't and then once they received the block they took out all the transactions just sandwiched everyone made like 20 mil and then just like left and they of course got a slash on the ethereum network because that's an equivocation but uh I think they made like yeah a couple mil and the slashing penalty is like 20 000 or something so it was nowhere comparable or incentive compatible um yeah 4337 is also approaching probably the earlier Parts like um maybe intense propagation um and then yeah lfas as well um no if they allow a phase right now take transactions just like regular transactions I think if someone just made a partial transaction like OFA similar to Med share like literally just Fork map share like I think that would be a super cool thing that people might use um cool yeah so last like what's possible with swab guyth so yeah you can build an OFA and solidity deployed on swab you can build a builder decks aggregators you could also build them there Dex aggregators are like really awesome today and I think like if you want the best deal like you probably go to one inch um or like Cal swap as well so yeah you can do all of that same logic except just on swab where you know you know the computation uh is like guaranteed to be like what you allowed and then as well you know that your data is like private up into the amount that you specified um so yeah same exact experience maybe a little bit slower in the beginning because of some of the additional stuff we have but like in the limit these things will be like very comparable latency wise uh yeah rfq's sort of similar thing and that might even be a repeat of Dex aggregators in some way um validity conditions you can specify like very arbitrary conditions that your transactions allowed to be um uh included on chain so like one example is a refund like I am only gonna allow my transaction on chain if I am sent half of the med extracted back um and yeah so you can encode that in a smart contract and it just won't even give your bundle to a builder unless that condition is satisfied um yeah read your distribution same thing so yeah intents and quotes like anyone could build like if you create one of these like you know languages to express intents then you can easily create an auction for it on Suave as well um yeah proposer Builder commitments you could imagine like much more advanced commitments than what we have now um I think the talk after this probably is going to touch on that uh you could do private voting like that's not really use case where it's sort of like focused on but you know you have privacy and you have very cheap computations so you could in theory uh and then this is the last fun one as well if anyone wants to work on this 4844 blob merging um right now the way 4844 is structured uh you pay like an upfront amount even if you don't use the entire blob gas so people are talking about so you can imagine Roll-Ups like that only need like a third of The Blob gas in a specific transaction and then because of the you know properties of the underlying cryptography you can actually combine these transactions into one and it'll still satisfy everyone's like original intent um yeah so you could design something on Suave which would like merge these I don't know if you need privacy for that case um but you would get the decentralized aspect of like running that service um cool any questions yeah yeah I'm wondering have you done any research or any thoughts on state drifts and effect on cons are doing something an intentional example on a chain that has passed a lot of times like 12 seconds where State changes a lot quicker um and what was it you said State drift or yeah so obviously on ethereum mistake will change up every 12 seconds right let's say you're supporting something that's 0.5 a lot of times you have a comment yeah um I think uh there's uh oh I'm not sure if Diego is going to tell about it but uh there's interesting use case around like using the Pepsi as an external commitments to cater frustrations like say trip where you have a fast change sexual that's running like you know a bundling box and a lot faster rate than like 12 seconds but then how are you going to get commitments for that that things that you just bundled that's like finished like maybe like a few seconds ago well that way like to to get that uh you know commitments they can use like something like Pepsi to say okay I'm going to use Pepsi to commit to this like let's say it's something that's created from Suave such that uh even though it's like many many seconds delay that later on can still get the published the epoxy yeah and to add to that further I think one of the things I'm working on personally I'm calling it like Suave subnets right now but so yeah no more terms uh the idea is like okay so we have like programmable privacy but we and then so yeah the swap chain is like much faster but like if it's one to three seconds um that's like still not fast enough for some applications like traditional finances whatever in the nanoseconds so that's like where we need to end up in the like 10 10 year timeline maybe um yeah so one thing I'm playing around with is like whether a smart contract could actually like specify the da guarantees that it provides so you could do something like you know have only a subset of nodes run like the Unix auction perhaps and they could do you know the that that OFA like however it's designed could maybe specify like you know like a 200 millisecond right rounds and so those nodes have to come to agreement on like which transactions are available to all of them um and that can be like used as input to the auction that's like one idea um but it's certainly like an open question and it gets into the idea that like you know if SWAT if the main swab chain is like this like Global bulletin board uh you know one application doesn't really care about whether or not in other applications like data is available um like if you're the block Builder it does but if you're like Cal swap it doesn't really matter what like uniswap is doing so yeah we're playing around with that actually yeah a quick question for like some some I guess something I noticed so you mentioned about the the multi-block uh flash uh multi-transaction platform or the block flashing uh that the uh as part of like the possible uh intent use cases um I was I was thinking like specifically for that like um uh how are you like trying to integrate like in 10 aspect to that multi-transaction flashlight oh uh not we're not really like working on that it's just sort of just like an idea yeah yes yes um but yeah I mean it is funny because I think like if you combine multiple intents into one transaction you might not even need a multi-transaction flashlight because it's like technically one but yeah yeah yeah you mentioned wanting to use sgx have you thought about using my program oh yeah yeah totally yes we're looking at that o Ram is just like really slow is I mean as all these Solutions are uh we we have some people working on it though we've seen some I think we saw like a 30 Improvement in benchmarks with a recent paper that came out from a flashbots researcher um so we do think yeah over yeah it that's like a very interesting use case yeah 